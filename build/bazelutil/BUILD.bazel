exports_files(["nogo_config.json"])

load("@io_bazel_rules_go//go:def.bzl", "go_library")
load(":lint.bzl", "lint_binary")

genrule(
    name = "test_stamping",
    outs = ["test_stamping.txt"],
    cmd = """cat bazel-out/stable-status.txt | grep STABLE_BUILD > $@""",
    stamp = True,
)

NOGO_FAILED_TEST_OUTPUT = "echo 'must use exactly one of `--config nogo` or `--config nonogo` explicitly'; exit 1"

genrule(
    name = "test_nogo_configured",
    outs = ["empty.txt"],
    cmd = select({
        "//build/toolchains:both_nogo_and_nonogo": NOGO_FAILED_TEST_OUTPUT,
        "//build/toolchains:nogo": "touch $@",
        "//build/toolchains:nonogo_explicit": "touch $@",
        "//conditions:default": NOGO_FAILED_TEST_OUTPUT,
    }),
)

lint_binary(
    name = "lint",
    test = "//pkg/testutils/lint:lint_test",
)

# This noop target is a workaround for https://github.com/bazelbuild/bazel-gazelle/issues/1078.
# We use it in //pkg/kv/kvclient/{kvcoord,rangefeed}.
go_library(
    name = "noop",
    importpath = "noop",
    visibility = ["//pkg:__subpackages__"],
)
