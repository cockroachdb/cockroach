diff -urN a/lib/private/copy_directory_toolchain.bzl b/lib/private/copy_directory_toolchain.bzl
--- a/lib/private/copy_directory_toolchain.bzl
+++ b/lib/private/copy_directory_toolchain.bzl
@@ -29,6 +29,12 @@ COPY_DIRECTORY_PLATFORMS = {
             "@platforms//cpu:aarch64",
         ],
     ),
+    "freebsd_amd64": struct(
+        compatible_with = [
+            "@platforms//os:freebsd",
+            "@platforms//cpu:x86_64",
+        ],
+    ),
     "linux_amd64": struct(
         compatible_with = [
             "@platforms//os:linux",
diff -urN a/lib/private/copy_to_directory_toolchain.bzl b/lib/private/copy_to_directory_toolchain.bzl
--- a/lib/private/copy_to_directory_toolchain.bzl
+++ b/lib/private/copy_to_directory_toolchain.bzl
@@ -29,6 +29,12 @@ COPY_TO_DIRECTORY_PLATFORMS = {
             "@platforms//cpu:aarch64",
         ],
     ),
+    "freebsd_amd64": struct(
+        compatible_with = [
+            "@platforms//os:freebsd",
+            "@platforms//cpu:x86_64",
+        ],
+    ),
     "linux_amd64": struct(
         compatible_with = [
             "@platforms//os:linux",
diff -urN a/lib/private/repo_utils.bzl b/lib/private/repo_utils.bzl
--- a/lib/private/repo_utils.bzl
+++ b/lib/private/repo_utils.bzl
@@ -8,6 +8,10 @@
     """Returns true if the host operating system is Linux"""
     return rctx.os.name.lower().startswith("linux")

+def _is_freebsd(rctx):
+    """Returns true if the host operating system is FreeBSD"""
+    return rctx.os.name.lower().startswith("freebsd")
+
 def _is_windows(rctx):
     """Returns true if the host operating system is Windows"""
     return rctx.os.name.lower().find("windows") != -1
@@ -19,12 +23,14 @@
         rctx: rctx

     Returns:
-        The string "windows", "linux" or "darwin" that describes the host os
+        The string "windows", "linux", "freebsd" or "darwin" that describes the host os
     """
     if _is_darwin(rctx):
         return "darwin"
     if _is_linux(rctx):
         return "linux"
+    if _is_freebsd(rctx):
+        return "freebsd"
     if _is_windows(rctx):
         return "windows"
     fail("unrecognized os")
