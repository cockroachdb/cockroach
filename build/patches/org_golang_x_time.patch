diff -urN a/rate/BUILD.bazel b/rate/BUILD.bazel
--- a/rate/BUILD.bazel	     1970-01-01 00:00:00.000000000 +0000
+++ b/rate/BUILD.bazel	     2000-01-01 00:00:00.000000000 -0000
@@ -8,6 +8,7 @@
     ],
     importpath = "golang.org/x/time/rate",
     visibility = ["//visibility:public"],
+    deps = ["@com_github_cockroachdb_errors//:errors"],
 )
 
 alias(
diff -urN a/rate/rate.go b/rate/rate.go
--- a/rate/rate.go	1970-01-01 00:00:00.000000000 +0000
+++ b/rate/rate.go	2000-01-01 00:00:00.000000000 -0000
@@ -7,10 +7,11 @@
 
 import (
 	"context"
-	"fmt"
 	"math"
 	"sync"
 	"time"
+
+	"github.com/cockroachdb/errors"
 )
 
 // Limit defines the maximum frequency of some events.
@@ -257,7 +258,7 @@
 	lim.mu.Unlock()
 
 	if n > burst && limit != Inf {
-		return fmt.Errorf("rate: Wait(n=%d) exceeds limiter's burst %d", n, burst)
+		return errors.Newf("rate: Wait(n=%d) exceeds limiter's burst %d", n, burst)
 	}
 	// Check if ctx is already cancelled
 	select {
@@ -273,7 +274,7 @@
 	// Reserve
 	r := lim.reserveN(t, n, waitLimit)
 	if !r.ok {
-		return fmt.Errorf("rate: Wait(n=%d) would exceed context deadline", n)
+		return errors.Newf("rate: Wait(n=%d) would exceed context deadline", n)
 	}
 	// Wait if necessary
 	delay := r.DelayFrom(t)
