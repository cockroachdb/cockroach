package(default_visibility = ["//visibility:public"])

load(":cc_toolchain_config.bzl", "cc_toolchain_config")

cc_toolchain_suite(
    name = "suite",
    toolchains = {
        "%{host}": ":toolchain",
    },
)

cc_toolchain_config(name = "toolchain_config")

filegroup(name = "empty")

filegroup(
    name = "all_files",
    srcs = [
        ":ar_files",
        ":compiler_files",
        ":linker_files",
        ":objcopy_files",
        ":strip_files",
    ],
)

filegroup(
    name = "compiler_files",
    srcs = [
        "bin/%{target}-gcc",
        "bin/%{target}-g++",
        "libexec/gcc/%{target}/6.5.0/cc1",
        "libexec/gcc/%{target}/6.5.0/cc1plus",
    ] + glob([
        "%{target}/bin/*",
        "%{target}/include/c++/6.5.0/**",
        "%{target}/sysroot/mingw/include/**",
        "%{target}/sysroot/usr/include/**",
        "lib/gcc/%{target}/6.5.0/include/**",
        "lib/gcc/%{target}/6.5.0/include-fixed/**",
    ])
)

filegroup(
    name = "ar_files",
    srcs = [
        "bin/%{target}-ar",
    ],
)

filegroup(
    name = "linker_files",
    srcs = [
        "bin/%{target}-g++",
    ] + glob([
        "%{target}/sysroot/lib/**",
        "%{target}/sysroot/lib64/**",
        "%{target}/sysroot/usr/%{target}/lib/**",
        "%{target}/sysroot/usr/%{target}/lib32/**",
        "%{target}/sysroot/usr/lib/**",
        "%{target}/sysroot/usr/lib64/**",
    ]) + glob(
        ["lib/gcc/%{target}/6.5.0/**"],
        exclude=[
            "lib/gcc/%{target}/6.5.0/include/**",
            "lib/gcc/%{target}/6.5.0/include-fixed/**",
        ]),
)

filegroup(
    name = "objcopy_files",
    srcs = [
        "bin/%{target}-objcopy",
    ],
)

filegroup(
    name = "strip_files",
    srcs = [
        "bin/%{target}-strip",
    ],
)

cc_toolchain(
    name = "toolchain",
    toolchain_identifier = "%{target}-cross-toolchain",
    toolchain_config = ":toolchain_config",
    all_files = ":all_files",
    ar_files = ":ar_files",
    compiler_files = ":compiler_files",
    dwp_files = ":empty",
    linker_files = ":linker_files",
    objcopy_files = ":objcopy_files",
    strip_files = ":strip_files",
    supports_param_files = 0,
)
