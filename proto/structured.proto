// Copyright 2015 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License. See the AUTHORS file
// for names of contributors.
//
// Author: Tamir Duberstein (tamird@gmail.com)

syntax = "proto2";
package cockroach.proto;
option go_package = "proto";

import "gogoproto/gogo.proto";
import "cockroach/proto/api.proto";
import "cockroach/proto/errors.proto";

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message ColumnSchema {
  enum ColumnType {
    BYTES = 0;
  }
  optional string name = 1 [(gogoproto.nullable) = false];
  optional ColumnType type = 2 [(gogoproto.nullable) = false];
  // For Cockroach internal use only. A Column has a unique id local to
  // the Table it is a part of.
  optional uint32 id = 9 [(gogoproto.nullable) = false];
}

message IndexSchema {
  optional string name = 1 [(gogoproto.nullable) = false];
  optional bool unique = 2 [(gogoproto.nullable) = false];
  // An ordered list of column names of which the index is comprised. Each
  // column_name refers to a column in the TableSchema's columns. Special
  // care is taken to update this when deleting columns.
  repeated string column_names = 3 [(gogoproto.nullable) = false];
  // For Cockroach internal use only. An Index has a unique id local to
  // the Table it is a part of.
  optional uint32 id = 9 [(gogoproto.nullable) = false];
}

// TableSchema used to configure a db table. The id within ColumnSchema,
// IndexSchema, or TableSchema is for cockroach internal use only.
message TableSchema {
  optional string name = 1 [(gogoproto.nullable) = false];
  repeated ColumnSchema columns = 2 [(gogoproto.nullable) = false];
  // An ordered list of indexes included in the table. The first index is the
  // primary key; it is required.
  repeated IndexSchema indexes = 3 [(gogoproto.nullable) = false];
  // For Cockroach internal use only. A Table has a globally unique id.
  optional uint32 id = 9 [(gogoproto.nullable) = false];
}

// A TableDescriptor represents a Table and is stored in a structured metadata
// key.
message TableDescriptor {
  optional TableSchema table = 2 [(gogoproto.nullable) = false, (gogoproto.embed) = true];
  // next_column_id is used to ensure that deleted column ids are not reused
  optional uint32 next_column_id = 4 [(gogoproto.nullable) = false];
  // next_index_id is used to ensure that deleted index ids are not reused
  optional uint32 next_index_id = 6 [(gogoproto.nullable) = false];
}

message CreateTableRequest {
  optional RequestHeader header = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];
  optional TableSchema schema = 2 [(gogoproto.nullable) = false];
}

message CreateTableResponse {
  optional Error error = 1 [(gogoproto.nullable) = false];
  optional uint32 table_id = 2 [(gogoproto.nullable) = false];
}

// TODO(tamird): Investigate generating code from this. For now, it is useful
// as documentation.
// TODO(tamird): Uncomment the below when one of the following is fixed
// https://github.com/gogo/protobuf/issues/60
// https://github.com/grpc/grpc-go/issues/219
// service SchemaService {
//   rpc CreateTable (CreateTableRequest) returns (CreateTableResponse);
// }
