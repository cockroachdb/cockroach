language: go

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qy python-software-properties
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  - sudo apt-get install -y -qq gcc-4.8 g++-4.8 zlib1g-dev libbz2-dev libsnappy-dev libjemalloc-dev libprotobuf-dev protobuf-compiler
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50
  - wget https://gflags.googlecode.com/files/libgflags0_2.0-1_amd64.deb
  - sudo dpkg -i libgflags0_2.0-1_amd64.deb
  - wget https://gflags.googlecode.com/files/libgflags-dev_2.0-1_amd64.deb
  - sudo dpkg -i libgflags-dev_2.0-1_amd64.deb
  - export PATH=$PATH:$HOME/gopath/bin
  - go get code.google.com/p/biogo.store/llrb
  - go get code.google.com/p/go-commander
  - go get code.google.com/p/go-uuid/uuid
  - go get code.google.com/p/gogoprotobuf/{proto,protoc-gen-gogo,gogoproto}
  - go get github.com/golang/glog
  - go get gopkg.in/yaml.v1

install:
  - make build

script:
  # jemalloc debugging options, which may help detect any memory management issues
  # in our cgo interface with rocksdb.
  - export MALLOC_CONF="abort:true,junk:true,stats_print:true"
  # Note that testrace runs with some tests excluded for performance
  # This means that we should always run both test and testrace.
  - make test TESTFLAGS="-logtostderr -timeout 30s"
  - make testrace TESTFLAGS="-logtostderr -timeout 30s"

notifications:
  email:
    recipients:
      - cockroach-db@googlegroups.com
    on_success: change
    on_failure: always
