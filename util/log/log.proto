// Copyright 2015 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License.
//
// Author: Spencer Kimball (spencer.kimball@gmail.com)

syntax = "proto2";
package cockroach.util.log;
option go_package = "log";

import weak "gogoproto/gogo.proto";

// Log represents a cockroach structured log entry.
message LogEntry {
  // Log message severity.
  optional int32 severity = 1 [(gogoproto.nullable) = false];
  // Time, measured in nanoseconds since the epoch.
  optional int64 time = 2 [(gogoproto.nullable) = false];
  // File which generated log statement.
  optional string file = 4 [(gogoproto.nullable) = false];
  // Line in file which generated log statement.
  optional int32 line = 5 [(gogoproto.nullable) = false];
  // Log format message.
  optional string format = 6 [(gogoproto.nullable) = false];
  // Log format arguments.
  message Arg {
    optional string type = 1 [(gogoproto.nullable) = false];
    optional string str = 2 [(gogoproto.nullable) = false];
    // Optional json representation.
    optional bytes json = 3;
  }
  repeated Arg args = 7 [(gogoproto.nullable) = false];
  // Optional parameters which may be set with log entry.
  optional int32 node_id = 8 [(gogoproto.customname) = "NodeID"];
  optional int32 store_id = 9 [(gogoproto.customname) = "StoreID"];
  optional int64 range_id = 10 [(gogoproto.customname) = "RangeID"];
  // Stack traces if requested.
  optional bytes stacks = 13;
}
