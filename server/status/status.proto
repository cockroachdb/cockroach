// Copyright 2015 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License.
//
// Author: Bram Gruneir (bram+code@cockroachlabs.com)

syntax = "proto2";
package cockroach.server.status;
option go_package = "status";

import "cockroach/roachpb/metadata.proto";
import "cockroach/util/build.proto";
import weak "gogoproto/gogo.proto";

// StoreStatus records the most recent values of metrics for a store.
message StoreStatus {
  optional roachpb.StoreDescriptor desc = 1 [(gogoproto.nullable) = false];
  map<string, double> metrics = 2;
}

// NodeStatus records the most recent values of metrics for a node.
message NodeStatus {
  optional roachpb.NodeDescriptor desc = 1 [(gogoproto.nullable) = false];
  optional util.BuildInfo build_info = 2 [(gogoproto.nullable) = false];
  optional int64 started_at = 3 [(gogoproto.nullable) = false];
  optional int64 updated_at = 4 [(gogoproto.nullable) = false];
  map<string, double> metrics = 5;
  repeated StoreStatus store_statuses = 6 [(gogoproto.nullable) = false];
}

