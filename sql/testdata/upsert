statement ok
CREATE TABLE kv (
  k INT PRIMARY KEY,
  v INT
)

statement ok
INSERT INTO kv VALUES (1, 1), (2, 2), (3, 3) ON CONFLICT (k) DO UPDATE SET v = excluded.v

query II
SELECT * FROM kv ORDER BY (k, v)
----
1 1
2 2
3 3

statement ok
INSERT INTO kv VALUES (4, 4), (2, 5), (6, 6) ON CONFLICT (k) DO UPDATE SET v = excluded.v

statement ok
UPSERT INTO kv VALUES (7, 7), (3, 8), (9, 9)

statement ok
INSERT INTO kv VALUES (1, 10) ON CONFLICT (k) DO UPDATE SET v = (SELECT CAST(SUM(k) AS INT) FROM kv)

statement error column reference "v" is ambiguous
INSERT INTO kv VALUES (4, 10) ON CONFLICT (k) DO UPDATE SET v = v + 1

statement ok
INSERT INTO kv VALUES (4, 10) ON CONFLICT (k) DO UPDATE SET v = kv.v + 20

statement error duplicate key value \(k\)=\(3\) violates unique constraint "primary"
INSERT INTO kv VALUES (2, 10) ON CONFLICT (k) DO UPDATE SET k = 3, v = 10

statement error UPSERT/ON CONFLICT DO UPDATE command cannot affect row a second time
UPSERT INTO kv VALUES (10, 10), (10, 11)

# TODO(dan): Implement RETURNING with upsert
statement error RETURNING is not supported with UPSERT
UPSERT INTO kv VALUES (10, 10) RETURNING *

query II
SELECT * FROM kv ORDER BY (k, v)
----
1 32
2 5
3 8
4 24
6 6
7 7
9 9


statement ok
CREATE TABLE abc (
  a INT,
  b INT,
  c INT DEFAULT 7,
  PRIMARY KEY (a, b),
  INDEX y (b),
  UNIQUE INDEX z (c)
)

statement error missing "b" primary key column
UPSERT INTO abc (a, c) VALUES (1, 1)

statement error missing "a" primary key column
UPSERT INTO abc (b, c) VALUES (1, 1)

statement ok
INSERT INTO abc VALUES (1, 2, 3)

statement ok
INSERT INTO abc VALUES (1, 2, 3) ON CONFLICT (c) DO UPDATE SET a = 4

statement ok
INSERT INTO abc VALUES (1, 2, 3) ON CONFLICT (c) DO UPDATE SET b = 5

statement ok
INSERT INTO abc VALUES (1, 2, 3) ON CONFLICT (c) DO UPDATE SET c = 6

query III
SELECT * FROM abc
----
4 5 6

statement ok
INSERT INTO abc (a, b) VALUES (1, 2) ON CONFLICT (a, b) DO UPDATE SET a = 1, b = 2

statement ok
INSERT INTO abc (a, b) VALUES (4, 5) ON CONFLICT (a, b) DO UPDATE SET a = 7, b = 8

query III
SELECT * FROM abc ORDER BY (a, b, c)
----
1 2 7
7 8 6


statement ok
CREATE TABLE excluded (a INT PRIMARY KEY, b INT)

statement error column reference "excluded.b" is ambiguous
INSERT INTO excluded VALUES (1, 1) ON CONFLICT (a) DO UPDATE SET b = excluded.b

statement error column reference "excluded.b" is ambiguous
UPSERT INTO excluded VALUES (1, 1)
