statement error table "kv" does not exist
INSERT INTO kv VALUES ('a', 'b')

statement ok
CREATE TABLE kv (
  k CHAR PRIMARY KEY,
  v CHAR,
  UNIQUE INDEX a (v)
)

query TT
SELECT * FROM kv
----

statement ok
INSERT INTO kv VALUES ('A')

statement error missing "k" primary key column
INSERT INTO kv (v) VALUES ('a')

statement ok
INSERT INTO kv (k) VALUES ('nil1')

statement ok
INSERT INTO kv (k) VALUES ('nil2')

statement ok
INSERT INTO kv VALUES ('nil3', NULL)

statement ok
INSERT INTO kv VALUES ('nil4', NULL)

statement ok
INSERT INTO kv (k,v) VALUES ('a', 'b'), ('c', 'd')

statement ok
INSERT INTO kv VALUES ('e', 'f'), ('g', '')

query ITTT
EXPLAIN (DEBUG) SELECT * FROM kv
----
0  /kv/primary/'A'     NULL  ROW
1  /kv/primary/'a'     NULL  PARTIAL
1  /kv/primary/'a'/v   'b'   ROW
2  /kv/primary/'c'     NULL  PARTIAL
2  /kv/primary/'c'/v   'd'   ROW
3  /kv/primary/'e'     NULL  PARTIAL
3  /kv/primary/'e'/v   'f'   ROW
4  /kv/primary/'g'     NULL  PARTIAL
4  /kv/primary/'g'/v   ''    ROW
5  /kv/primary/'nil1'  NULL  ROW
6  /kv/primary/'nil2'  NULL  ROW
7  /kv/primary/'nil3'  NULL  ROW
8  /kv/primary/'nil4'  NULL  ROW

query ITTT
EXPLAIN (DEBUG) SELECT * FROM kv@a
----
0  /kv/a/NULL /'A'     ROW
1  /kv/a/NULL /'nil1'  ROW
2  /kv/a/NULL /'nil2'  ROW
3  /kv/a/NULL /'nil3'  ROW
4  /kv/a/NULL /'nil4'  ROW
5  /kv/a/''   /'g'     ROW
6  /kv/a/'b'  /'a'     ROW
7  /kv/a/'d'  /'c'     ROW
8  /kv/a/'f'  /'e'     ROW

statement error pgcode 23505 duplicate key value \(v\)=\('f'\) violates unique constraint "a"
INSERT INTO kv VALUES ('h', 'f')

query ITTT
EXPLAIN (DEBUG) SELECT * FROM kv
----
0  /kv/primary/'A'     NULL  ROW
1  /kv/primary/'a'     NULL  PARTIAL
1  /kv/primary/'a'/v   'b'   ROW
2  /kv/primary/'c'     NULL  PARTIAL
2  /kv/primary/'c'/v   'd'   ROW
3  /kv/primary/'e'     NULL  PARTIAL
3  /kv/primary/'e'/v   'f'   ROW
4  /kv/primary/'g'     NULL  PARTIAL
4  /kv/primary/'g'/v   ''    ROW
5  /kv/primary/'nil1'  NULL  ROW
6  /kv/primary/'nil2'  NULL  ROW
7  /kv/primary/'nil3'  NULL  ROW
8  /kv/primary/'nil4'  NULL  ROW

query ITTT
EXPLAIN (DEBUG) SELECT * FROM kv@a
----
0  /kv/a/NULL /'A'     ROW
1  /kv/a/NULL /'nil1'  ROW
2  /kv/a/NULL /'nil2'  ROW
3  /kv/a/NULL /'nil3'  ROW
4  /kv/a/NULL /'nil4'  ROW
5  /kv/a/''   /'g'     ROW
6  /kv/a/'b'  /'a'     ROW
7  /kv/a/'d'  /'c'     ROW
8  /kv/a/'f'  /'e'     ROW

statement ok
INSERT INTO kv VALUES ('f', 'g')

query ITTT
EXPLAIN (DEBUG) SELECT * FROM kv
----
0  /kv/primary/'A'     NULL  ROW
1  /kv/primary/'a'     NULL  PARTIAL
1  /kv/primary/'a'/v   'b'   ROW
2  /kv/primary/'c'     NULL  PARTIAL
2  /kv/primary/'c'/v   'd'   ROW
3  /kv/primary/'e'     NULL  PARTIAL
3  /kv/primary/'e'/v   'f'   ROW
4  /kv/primary/'f'     NULL  PARTIAL
4  /kv/primary/'f'/v   'g'   ROW
5  /kv/primary/'g'     NULL  PARTIAL
5  /kv/primary/'g'/v   ''    ROW
6  /kv/primary/'nil1'  NULL  ROW
7  /kv/primary/'nil2'  NULL  ROW
8  /kv/primary/'nil3'  NULL  ROW
9  /kv/primary/'nil4'  NULL  ROW

query ITTT
EXPLAIN (DEBUG) SELECT * FROM kv@a
----
0  /kv/a/NULL /'A'     ROW
1  /kv/a/NULL /'nil1'  ROW
2  /kv/a/NULL /'nil2'  ROW
3  /kv/a/NULL /'nil3'  ROW
4  /kv/a/NULL /'nil4'  ROW
5  /kv/a/''   /'g'     ROW
6  /kv/a/'b'  /'a'     ROW
7  /kv/a/'d'  /'c'     ROW
8  /kv/a/'f'  /'e'     ROW
9  /kv/a/'g'  /'f'     ROW

statement error duplicate key value \(v\)=\('g'\) violates unique constraint "a"
INSERT INTO kv VALUES ('h', 'g')

query ITTT
EXPLAIN (DEBUG) SELECT * FROM kv
----
0  /kv/primary/'A'     NULL  ROW
1  /kv/primary/'a'     NULL  PARTIAL
1  /kv/primary/'a'/v   'b'   ROW
2  /kv/primary/'c'     NULL  PARTIAL
2  /kv/primary/'c'/v   'd'   ROW
3  /kv/primary/'e'     NULL  PARTIAL
3  /kv/primary/'e'/v   'f'   ROW
4  /kv/primary/'f'     NULL  PARTIAL
4  /kv/primary/'f'/v   'g'   ROW
5  /kv/primary/'g'     NULL  PARTIAL
5  /kv/primary/'g'/v   ''    ROW
6  /kv/primary/'nil1'  NULL  ROW
7  /kv/primary/'nil2'  NULL  ROW
8  /kv/primary/'nil3'  NULL  ROW
9  /kv/primary/'nil4'  NULL  ROW

query ITTT
EXPLAIN (DEBUG) SELECT * FROM kv@a
----
0  /kv/a/NULL /'A'     ROW
1  /kv/a/NULL /'nil1'  ROW
2  /kv/a/NULL /'nil2'  ROW
3  /kv/a/NULL /'nil3'  ROW
4  /kv/a/NULL /'nil4'  ROW
5  /kv/a/''   /'g'     ROW
6  /kv/a/'b'  /'a'     ROW
7  /kv/a/'d'  /'c'     ROW
8  /kv/a/'f'  /'e'     ROW
9  /kv/a/'g'  /'f'     ROW

query TT
SELECT * FROM kv
----
A    NULL
a    b
c    d
e    f
f    g
g
nil1 NULL
nil2 NULL
nil3 NULL
nil4 NULL

statement ok
CREATE TABLE kv2 (
  k CHAR,
  v CHAR,
  UNIQUE INDEX a (v),
  PRIMARY KEY (k, v)
)

statement ok
INSERT INTO kv2 VALUES ('a', 'b'), ('c', 'd'), ('e', 'f'), ('f', 'g')

query TT
SELECT * FROM kv2
----
a   b
c   d
e   f
f   g

statement ok
CREATE TABLE kv3 (
  k CHAR PRIMARY KEY,
  v CHAR NOT NULL
)

statement error null value in column "v" violates not-null constraint
INSERT INTO kv3 VALUES ('a')

statement error null value in column "v" violates not-null constraint
INSERT INTO kv3 VALUES ('a', NULL)

statement error null value in column "v" violates not-null constraint
INSERT INTO kv3 (k) VALUES ('a')

query TT
SELECT * FROM kv3
----

statement ok
CREATE TABLE kv4 (
  int INT PRIMARY KEY,
  bit BIT,
  bool BOOLEAN,
  char CHAR,
  float FLOAT
)

statement error value type string doesn't match type INT of column "int"
INSERT INTO kv4 (int) VALUES ('a')

statement ok
INSERT INTO kv4 (int) VALUES (1)

statement error value type string doesn't match type INT of column "bit"
INSERT INTO kv4 (int, bit) VALUES (2, 'a')

statement ok
INSERT INTO kv4 (int, bit) VALUES (2, 1)

statement error value type string doesn't match type BOOL of column "bool"
INSERT INTO kv4 (int, bool) VALUES (3, 'a')

statement ok
INSERT INTO kv4 (int, bool) VALUES (3, true)

statement error value type int doesn't match type STRING of column "char"
INSERT INTO kv4 (int, char) VALUES (4, 1)

statement ok
INSERT INTO kv4 (int, char) VALUES (4, 'a')

statement error value type int doesn't match type FLOAT of column "float"
INSERT INTO kv4 (int, float) VALUES (5, 1::INT)

statement ok
INSERT INTO kv4 (int, float) VALUES (5, 2.3)

query IIBTR
SELECT * from kv4
----
1    NULL NULL NULL NULL
2    1    NULL NULL NULL
3    NULL true NULL NULL
4    NULL NULL a    NULL
5    NULL NULL NULL 2.3

statement ok
CREATE TABLE kv5 (
  k CHAR PRIMARY KEY,
  v CHAR,
  UNIQUE INDEX a (v, k)
)

statement ok
INSERT INTO kv5 VALUES('a', NULL)

query ITTT
EXPLAIN (DEBUG) SELECT * FROM kv5@a
----
0 /kv5/a/NULL/'a' NULL ROW

query TT
SELECT v, k FROM kv5@a
----
NULL a

statement ok
CREATE TABLE boom (id INT PRIMARY KEY)

statement error INSERT has more expressions than target columns: \d+/\d+
INSERT INTO boom VALUES(1,2)

statement ok
CREATE TABLE return (a INT DEFAULT 3, b INT)

query III
INSERT INTO return (a) VALUES (default), (8) RETURNING a, 2, a+4
----
3 2 7
8 2 12

query III
INSERT INTO return (b) VALUES (default), (8) RETURNING a, a+4, b
----
3 7 NULL
3 7 8

# All columns returned if none specified.
query II
INSERT INTO return VALUES (default) RETURNING a, b
----
3 NULL

# Test column names
query III colnames
INSERT INTO return VALUES (default) RETURNING a, b as C, 4
----
a C 4
3 NULL 4

# Return a qualified name
query I
INSERT INTO return VALUES (default) RETURNING return.a
----
3

# Can fetch rowid
statement ok
INSERT INTO return VALUES (default) RETURNING rowid != unique_rowid()

query I colnames
INSERT INTO return (a) VALUES (default) RETURNING b
----
b
NULL

query III
INSERT INTO return (b) VALUES (1) RETURNING *, a+1
----
3 1 4

query II colnames
INSERT INTO return VALUES (default) RETURNING *
----
a b
3 NULL

query II colnames
INSERT INTO return VALUES (1, 2), (3, 4) RETURNING return.a, b
----
a b
1 2
3 4

query II colnames
INSERT INTO return VALUES (1, 2), (3, 4) RETURNING *
----
a b
1 2
3 4

# Verify we return all columns even if we don't provide a value for all of them.
query II colnames
INSERT INTO return VALUES (1) RETURNING *
----
a b
1 NULL

query II colnames
INSERT INTO return (a) VALUES (1) RETURNING *
----
a b
1 NULL

statement error pq: "return.*" cannot be aliased
INSERT INTO return VALUES (1, 2), (3, 4) RETURNING return.* as x

query III colnames
INSERT INTO return VALUES (1, 2), (3, 4) RETURNING return.*, a + b
----
a b a + b
1 2 3
3 4 7

# Table alias
statement ok
INSERT INTO return AS r VALUES (5, 6)

# TODO(knz) after #6092 is fixed
# statement ok
# INSERT INTO return AS r VALUES (5, 6) RETURNING r.a

statement ok
CREATE TABLE abc (
  a INT,
  b INT,
  c INT,
  PRIMARY KEY (a, b),
  INDEX a (a)
)

statement ok
INSERT INTO abc VALUES (1, 2, 10)

# Verify we get the correct message, even though internally the ConditionalPut
# for the index key will also fail.
statement error pgcode 23505 duplicate key value \(a,b\)=\(1,2\) violates unique constraint "primary"
INSERT INTO abc VALUES (1, 2, 20)

statement ok
CREATE TABLE decimal (
  a DECIMAL PRIMARY KEY
)

statement ok
INSERT INTO decimal VALUES (4)
