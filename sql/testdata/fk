statement ok
CREATE TABLE customers (id INT PRIMARY KEY, email STRING UNIQUE)

statement ok
INSERT INTO customers VALUES (1, 'a@co.tld'), (2, 'b@co.tld')

statement ok
CREATE TABLE products (sku STRING PRIMARY KEY, upc STRING UNIQUE, vendor STRING)

statement ok
INSERT INTO products VALUES ('VP-W9QH-W44L', '867072000006', 'Dave'), ('780', '885155001450', 'iRobot')

statement error referenced table "productz" not found
CREATE TABLE missing (product STRING REFERENCES productz)

statement error referenced table "customerz" not found
CREATE TABLE missing_with_col (customer INT REFERENCES customerz (id))

statement error column "idz" does not exist
CREATE TABLE missing_col (customer INT REFERENCES customers (idz))

statement error foreign key column "customer" must be the prefix of an index
CREATE TABLE unindexed (customer INT REFERENCES customers)

statement error foreign key requires a unique index on products.vendor
CREATE TABLE non_unique (product STRING REFERENCES products (vendor))

statement error type of "customer" \(INT\) does not match foreign key "customers"."email" \(STRING\)
CREATE TABLE mismatch (customer INT REFERENCES customers (email))

statement ok
CREATE TABLE orders (
  id INT PRIMARY KEY,
  product STRING REFERENCES products,
  customer INT REFERENCES customers (id),
  INDEX (product),
  INDEX (customer)
);

# "reviews" makes "products" have multiple inbound references, as well as making
# "orders" have both directions.
statement ok
CREATE TABLE reviews (
  id INT PRIMARY KEY,
  product STRING NOT NULL REFERENCES products,
  customer INT NOT NULL REFERENCES customers,
  "order" INT REFERENCES orders,
  body STRING,
  INDEX (product),
  INDEX (customer),
  INDEX ("order")
)

statement ok
INSERT INTO orders VALUES (1, '780', 2);

statement error foreign key violation: value \['790'\] not found in products@primary \[sku\]
INSERT INTO orders VALUES (2, '790', 2);

statement error foreign key violation: value \[43\] not found in customers@primary \[id\]
INSERT INTO orders VALUES (2, '780', 43);

statement ok
INSERT INTO orders VALUES (2, '780', 1);

# Try to point to missing FK.
statement error foreign key violation: value \['790'\] not found in products@primary \[sku\]
UPDATE orders SET product = '790' WHERE id = 2;

# Try to point to missing fk *while changing PK*.
statement error foreign key violation: value \['790'\] not found in products@primary \[sku\]
UPDATE orders SET id = 3, product = '790' WHERE id = 2;

# Change PK while leaving everything else is fine though.
statement ok
UPDATE orders SET id = 3 WHERE id = 2;

# Change PK and point to different product.
statement ok
UPDATE orders SET id = 2, product = 'VP-W9QH-W44L' WHERE id = 3;

statement ok
UPDATE orders SET product = '780' WHERE id = 2;

# "scans" is interesting since it references a secondary index with different col names.
statement ok
CREATE TABLE scans (ts TIMESTAMP DEFAULT NOW(), scanned STRING REFERENCES products (upc), INDEX (scanned))

statement ok
INSERT INTO scans (scanned) VALUES ('867072000006'), ('867072000006'), ('885155001450'), ('867072000006');

statement error foreign key violation: value \['missing'\] not found in products@products_upc_key \[upc\]
INSERT INTO scans (scanned) VALUES ('867072000006'), ('missing'), ('885155001450'), ('867072000006');

statement error foreign key violation: value\(s\) \['867072000006'\] in columns \[upc\] referenced in table "scans"
DELETE FROM products WHERE sku = 'VP-W9QH-W44L'

# Blanking a field nobody cares about is fine.
statement ok
UPDATE products SET vendor = '' WHERE sku = '780'

# No-op update should be fine.
statement ok
UPDATE products SET sku = '770' WHERE sku = '750'

# Changing referenced PK fails.
statement error foreign key violation: value\(s\) \['780'\] in columns \[sku\] referenced in table "orders"
UPDATE products SET sku = '770' WHERE sku = '780'

# No-op change to existing data is fine.
statement ok
UPDATE products SET upc = '885155001450' WHERE sku = '780'

# Changing referenced non-pk index fails.
statement error foreign key violation: value\(s\) \['885155001450'\] in columns \[upc\] referenced in table "scans"
UPDATE products SET upc = 'blah' WHERE sku = '780'

statement ok
DELETE FROM orders

# Changing now non-referenced and secondary field is fine.
statement ok
UPDATE products SET sku = '750', vendor = 'roomba' WHERE sku = '780'

# Changing PK and referenced secondary index is not ok.
statement error foreign key violation: value\(s\) \['885155001450'\] in columns \[upc\] referenced in table "scans"
UPDATE products SET sku = '780', upc = 'blah' WHERE sku = '750'

statement error foreign key violation: value\(s\) \['885155001450'\] in columns \[upc\] referenced in table "scans"
DELETE FROM products WHERE sku = '750'

statement ok
DELETE FROM scans

statement ok
DELETE FROM products WHERE sku = '750'

statement error "products_upc_key" is referenced by foreign key from table "scans"
DROP INDEX products@products_upc_key

statement error "products_upc_key" is referenced by foreign key from table "scans"
DROP INDEX products@products_upc_key RESTRICT

statement error CASCADE is not yet supported and index "products_upc_key" is referenced by foreign key from table "scans"
DROP INDEX products@products_upc_key CASCADE

statement ok
DROP TABLE scans

statement ok
DROP INDEX products@products_upc_key

statement error index "orders_product_idx" is in use as a foreign key constraint
DROP INDEX orders@orders_product_idx

statement error index "orders_product_idx" is in use as a foreign key constraint
DROP INDEX orders@orders_product_idx RESTRICT

statement error CASCADE is not yet supported and index "orders_product_idx" is in use as a foreign key constraint
DROP INDEX orders@orders_product_idx CASCADE

statement error "products" is referenced by foreign key from table "orders"
DROP TABLE products

statement error referenced by foreign key from table "orders"
DROP TABLE products RESTRICT

statement error CASCADE is not yet supported and table "products" is referenced by foreign key from table "orders"
DROP TABLE products CASCADE

statement error referenced by foreign key from table "reviews"
DROP TABLE orders

statement ok
DROP TABLE reviews

statement ok
DROP TABLE orders

statement ok
DROP TABLE products
