#### column CHECK constraints

statement ok
CREATE TABLE t1 (a INT CHECK (a > 0), b INT CHECK (b < 0))

statement ok
INSERT INTO t1 VALUES (3, -1)

statement ok
INSERT INTO t1 (a, b) VALUES (4, -2)

statement error pq: failed to satisfy CHECK constraint \(a > 0\)
INSERT INTO t1 VALUES (-3, -1)

statement error pq: failed to satisfy CHECK constraint \(b < 0\)
INSERT INTO t1 VALUES (3, 1)

statement ok
INSERT INTO t1 (b, a) VALUES (-2, 4)

statement ok
INSERT INTO t1 (a) VALUES (10)

statement ok
INSERT INTO t1 (b) VALUES (-1)

statement ok
CREATE TABLE t2 (a INT DEFAULT -1 CHECK (a > 0), b INT CHECK (b < 0))

statement error pq: failed to satisfy CHECK constraint \(a > 0\)
INSERT INTO t2 (b) VALUES (-1)

### Rename column with check constraint

# TODO(seif): On column rename we'll need to rewrite the CHECK expressions
statement ok
ALTER TABLE t2 RENAME COLUMN b TO c

statement error pq: qualified name "b" not found
INSERT INTO t2 (c) VALUES (-1)

# Check on a column can only refer to that column
statement error pq: argument of CHECK cannot refer to other columns: "a"
CREATE TABLE t3 (a INT, b INT CHECK (b < a))

# Verify we don't accept COUNT(*)
statement error pq: argument of CHECK cannot refer to other columns: "*"
CREATE TABLE t3 (a INT, b INT CHECK (COUNT(*) = 1))

# non-boolean expressions are errors
statement error pq: argument of CHECK must be type bool, not type int
CREATE TABLE t3 (a INT CHECK(1))

# fail on bad check types
statement error pq: unsupported binary operator: <bool> - <bool>
CREATE TABLE t3 (a INT CHECK (false - true))

#### table CHECK constraints
# TODO(seif):
