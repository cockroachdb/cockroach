// Code generated by go yacc.
//line sql.y:22
package parser

import __yyfmt__ "fmt"

//line sql.y:22
import "github.com/cockroachdb/cockroach/sql/privilege"

func unimplemented() {
	panic("TODO(pmattis): unimplemented")
}

//line sql.y:30
type sqlSymType struct {
	yys            int
	id             int
	pos            int
	empty          struct{}
	ival           int64
	boolVal        bool
	str            string
	strs           []string
	qname          *QualifiedName
	qnames         QualifiedNames
	indirectElem   IndirectionElem
	indirect       Indirection
	stmt           Statement
	stmts          []Statement
	selectStmt     SelectStatement
	colDef         *ColumnTableDef
	constraintDef  ConstraintTableDef
	tblDef         TableDef
	tblDefs        []TableDef
	colQual        ColumnQualification
	colQuals       []ColumnQualification
	colType        ColumnType
	colTypes       []ColumnType
	expr           Expr
	exprs          Exprs
	selExpr        SelectExpr
	selExprs       SelectExprs
	tblExpr        TableExpr
	tblExprs       TableExprs
	joinCond       JoinCond
	when           *When
	whens          []*When
	updateExpr     *UpdateExpr
	updateExprs    []*UpdateExpr
	limit          *Limit
	targetList     TargetList
	targetListPtr  *TargetList
	privilegeType  privilege.Kind
	privilegeList  privilege.List
	orderBy        OrderBy
	orders         []*Order
	order          *Order
	groupBy        GroupBy
	dir            Direction
	alterTableCmd  AlterTableCmd
	alterTableCmds AlterTableCmds
	isoLevel       IsolationLevel
}

const IDENT = 57346
const FCONST = 57347
const SCONST = 57348
const BCONST = 57349
const ICONST = 57350
const PARAM = 57351
const TYPECAST = 57352
const DOT_DOT = 57353
const LESS_EQUALS = 57354
const GREATER_EQUALS = 57355
const NOT_EQUALS = 57356
const ERROR = 57357
const ABSOLUTE = 57358
const ACCESS = 57359
const ACTION = 57360
const ADD = 57361
const ADMIN = 57362
const AFTER = 57363
const AGGREGATE = 57364
const ALL = 57365
const ALSO = 57366
const ALTER = 57367
const ALWAYS = 57368
const ANALYSE = 57369
const ANALYZE = 57370
const AND = 57371
const ANY = 57372
const ARRAY = 57373
const AS = 57374
const ASC = 57375
const ASSERTION = 57376
const ASSIGNMENT = 57377
const ASYMMETRIC = 57378
const AT = 57379
const ATTRIBUTE = 57380
const AUTHORIZATION = 57381
const BACKWARD = 57382
const BEFORE = 57383
const BEGIN = 57384
const BETWEEN = 57385
const BIGINT = 57386
const BINARY = 57387
const BIT = 57388
const BLOB = 57389
const BOOL = 57390
const BOOLEAN = 57391
const BOTH = 57392
const BY = 57393
const BYTES = 57394
const CACHE = 57395
const CALLED = 57396
const CASCADE = 57397
const CASCADED = 57398
const CASE = 57399
const CAST = 57400
const CHAIN = 57401
const CHAR = 57402
const CHARACTER = 57403
const CHARACTERISTICS = 57404
const CHECK = 57405
const CHECKPOINT = 57406
const CLASS = 57407
const CLOSE = 57408
const CLUSTER = 57409
const COALESCE = 57410
const COLLATE = 57411
const COLLATION = 57412
const COLUMN = 57413
const COLUMNS = 57414
const COMMENT = 57415
const COMMENTS = 57416
const COMMIT = 57417
const COMMITTED = 57418
const CONCAT = 57419
const CONCURRENTLY = 57420
const CONFIGURATION = 57421
const CONFLICT = 57422
const CONNECTION = 57423
const CONSTRAINT = 57424
const CONSTRAINTS = 57425
const CONTENT = 57426
const CONTINUE = 57427
const CONVERSION = 57428
const COPY = 57429
const COST = 57430
const COVERING = 57431
const CREATE = 57432
const CROSS = 57433
const CSV = 57434
const CUBE = 57435
const CURRENT = 57436
const CURRENT_CATALOG = 57437
const CURRENT_DATE = 57438
const CURRENT_ROLE = 57439
const CURRENT_TIME = 57440
const CURRENT_TIMESTAMP = 57441
const CURRENT_USER = 57442
const CURSOR = 57443
const CYCLE = 57444
const DATA = 57445
const DATABASE = 57446
const DATABASES = 57447
const DATE = 57448
const DAY = 57449
const DEALLOCATE = 57450
const DEC = 57451
const DECIMAL = 57452
const DECLARE = 57453
const DEFAULT = 57454
const DEFAULTS = 57455
const DEFERRABLE = 57456
const DEFERRED = 57457
const DEFINER = 57458
const DELETE = 57459
const DELIMITER = 57460
const DELIMITERS = 57461
const DESC = 57462
const DICTIONARY = 57463
const DISABLE = 57464
const DISCARD = 57465
const DISTINCT = 57466
const DO = 57467
const DOMAIN = 57468
const DOUBLE = 57469
const DROP = 57470
const EACH = 57471
const ELSE = 57472
const ENABLE = 57473
const ENCODING = 57474
const ENCRYPTED = 57475
const END = 57476
const ENUM = 57477
const ESCAPE = 57478
const EVENT = 57479
const EXCEPT = 57480
const EXCLUSIVE = 57481
const EXECUTE = 57482
const EXISTS = 57483
const EXPLAIN = 57484
const EXTENSION = 57485
const EXTERNAL = 57486
const EXTRACT = 57487
const FALSE = 57488
const FAMILY = 57489
const FETCH = 57490
const FILTER = 57491
const FIRST = 57492
const FLOAT = 57493
const FOLLOWING = 57494
const FOR = 57495
const FORCE = 57496
const FOREIGN = 57497
const FORWARD = 57498
const FREEZE = 57499
const FROM = 57500
const FULL = 57501
const FUNCTION = 57502
const FUNCTIONS = 57503
const GLOBAL = 57504
const GRANT = 57505
const GRANTED = 57506
const GRANTS = 57507
const GREATEST = 57508
const GROUP = 57509
const GROUPING = 57510
const HANDLER = 57511
const HAVING = 57512
const HEADER = 57513
const HOLD = 57514
const HOUR = 57515
const IDENTITY = 57516
const IF = 57517
const IMMEDIATE = 57518
const IMMUTABLE = 57519
const IMPLICIT = 57520
const IMPORT = 57521
const IN = 57522
const INCLUDING = 57523
const INCREMENT = 57524
const INDEX = 57525
const INDEXES = 57526
const INHERIT = 57527
const INHERITS = 57528
const INITIALLY = 57529
const INLINE = 57530
const INNER = 57531
const INOUT = 57532
const INPUT = 57533
const INSENSITIVE = 57534
const INSERT = 57535
const INSTEAD = 57536
const INT = 57537
const INT64 = 57538
const INTEGER = 57539
const INTERSECT = 57540
const INTERVAL = 57541
const INTO = 57542
const INVOKER = 57543
const IS = 57544
const ISOLATION = 57545
const JOIN = 57546
const KEY = 57547
const LABEL = 57548
const LANGUAGE = 57549
const LARGE = 57550
const LAST = 57551
const LATERAL = 57552
const LEADING = 57553
const LEAKPROOF = 57554
const LEAST = 57555
const LEFT = 57556
const LEVEL = 57557
const LIKE = 57558
const LIMIT = 57559
const LISTEN = 57560
const LOAD = 57561
const LOCAL = 57562
const LOCALTIME = 57563
const LOCALTIMESTAMP = 57564
const LOCATION = 57565
const LOCK = 57566
const LOCKED = 57567
const LOGGED = 57568
const LSHIFT = 57569
const MAPPING = 57570
const MATCH = 57571
const MATERIALIZED = 57572
const MAXVALUE = 57573
const MINUTE = 57574
const MINVALUE = 57575
const MODE = 57576
const MONTH = 57577
const MOVE = 57578
const NAME = 57579
const NAMES = 57580
const NATIONAL = 57581
const NATURAL = 57582
const NCHAR = 57583
const NEXT = 57584
const NO = 57585
const NONE = 57586
const NOT = 57587
const NOTHING = 57588
const NOTIFY = 57589
const NOWAIT = 57590
const NULL = 57591
const NULLIF = 57592
const NULLS = 57593
const NUMERIC = 57594
const OBJECT = 57595
const OF = 57596
const OFF = 57597
const OFFSET = 57598
const OIDS = 57599
const ON = 57600
const ONLY = 57601
const OPTION = 57602
const OPTIONS = 57603
const OR = 57604
const ORDER = 57605
const ORDINALITY = 57606
const OUT = 57607
const OUTER = 57608
const OVER = 57609
const OVERLAPS = 57610
const OVERLAY = 57611
const OWNED = 57612
const OWNER = 57613
const PARSER = 57614
const PARTIAL = 57615
const PARTITION = 57616
const PASSING = 57617
const PASSWORD = 57618
const PLACING = 57619
const PLANS = 57620
const POLICY = 57621
const POSITION = 57622
const PRECEDING = 57623
const PRECISION = 57624
const PRESERVE = 57625
const PREPARE = 57626
const PREPARED = 57627
const PRIMARY = 57628
const PRIOR = 57629
const PRIVILEGES = 57630
const PROCEDURAL = 57631
const PROCEDURE = 57632
const PROGRAM = 57633
const QUOTE = 57634
const RANGE = 57635
const READ = 57636
const REAL = 57637
const REASSIGN = 57638
const RECHECK = 57639
const RECURSIVE = 57640
const REF = 57641
const REFERENCES = 57642
const REFRESH = 57643
const REINDEX = 57644
const RELATIVE = 57645
const RELEASE = 57646
const RENAME = 57647
const REPEATABLE = 57648
const REPLACE = 57649
const REPLICA = 57650
const RESET = 57651
const RESTART = 57652
const RESTRICT = 57653
const RETURNING = 57654
const RETURNS = 57655
const REVOKE = 57656
const RIGHT = 57657
const ROLLBACK = 57658
const ROLLUP = 57659
const ROW = 57660
const ROWS = 57661
const RSHIFT = 57662
const RULE = 57663
const SCROLL = 57664
const SEARCH = 57665
const SECOND = 57666
const SECURITY = 57667
const SELECT = 57668
const SEQUENCE = 57669
const SEQUENCES = 57670
const SERIALIZABLE = 57671
const SERVER = 57672
const SESSION = 57673
const SESSION_USER = 57674
const SET = 57675
const SETS = 57676
const SHARE = 57677
const SHOW = 57678
const SIMILAR = 57679
const SIMPLE = 57680
const SKIP = 57681
const SMALLINT = 57682
const SNAPSHOT = 57683
const SOME = 57684
const SQL = 57685
const STABLE = 57686
const STANDALONE = 57687
const STATEMENT = 57688
const STATISTICS = 57689
const STDIN = 57690
const STDOUT = 57691
const STRICT = 57692
const STRING = 57693
const STRIP = 57694
const STORING = 57695
const SUBSTRING = 57696
const SYMMETRIC = 57697
const SYSID = 57698
const SYSTEM = 57699
const TABLE = 57700
const TABLES = 57701
const TEXT = 57702
const THEN = 57703
const TIME = 57704
const TIMESTAMP = 57705
const TO = 57706
const TRAILING = 57707
const TRANSACTION = 57708
const TRANSFORM = 57709
const TREAT = 57710
const TRIGGER = 57711
const TRIM = 57712
const TRUE = 57713
const TRUNCATE = 57714
const TRUSTED = 57715
const TYPE = 57716
const TYPES = 57717
const UNBOUNDED = 57718
const UNCOMMITTED = 57719
const UNENCRYPTED = 57720
const UNION = 57721
const UNIQUE = 57722
const UNKNOWN = 57723
const UNLISTEN = 57724
const UNLOGGED = 57725
const UNTIL = 57726
const UPDATE = 57727
const USER = 57728
const USING = 57729
const VACUUM = 57730
const VALID = 57731
const VALIDATE = 57732
const VALUE = 57733
const VALUES = 57734
const VARCHAR = 57735
const VARIADIC = 57736
const VARYING = 57737
const VERBOSE = 57738
const VERSION = 57739
const WHEN = 57740
const WHERE = 57741
const WINDOW = 57742
const WITH = 57743
const WITHIN = 57744
const WITHOUT = 57745
const WRAPPER = 57746
const WRITE = 57747
const YEAR = 57748
const YES = 57749
const ZONE = 57750
const NOT_LA = 57751
const NULLS_LA = 57752
const WITH_LA = 57753
const POSTFIXOP = 57754
const UMINUS = 57755

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ERROR",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BY",
	"BYTES",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CHAIN",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT",
	"CONTINUE",
	"CONVERSION",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEALLOCATE",
	"DEC",
	"DECIMAL",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE",
	"ENCODING",
	"ENCRYPTED",
	"END",
	"ENUM",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT",
	"IMPORT",
	"IN",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE",
	"LAST",
	"LATERAL",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK",
	"LOCKED",
	"LOGGED",
	"LSHIFT",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE",
	"MINVALUE",
	"MODE",
	"MONTH",
	"MOVE",
	"NAME",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OBJECT",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SCROLL",
	"SEARCH",
	"SECOND",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL",
	"STABLE",
	"STANDALONE",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STRICT",
	"STRING",
	"STRIP",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM",
	"TABLE",
	"TABLES",
	"TEXT",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WRAPPER",
	"WRITE",
	"YEAR",
	"YES",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'|'",
	"'^'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"UMINUS",
	"'~'",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"';'",
	"','",
	"'@'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlMaxDepth = 200

//line sql.y:3815

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 19,
	432, 19,
	-2, 290,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 29,
	1, 261,
	258, 261,
	430, 261,
	432, 261,
	-2, 271,
	-1, 38,
	1, 264,
	258, 264,
	430, 264,
	432, 264,
	-2, 270,
	-1, 47,
	1, 19,
	432, 19,
	-2, 290,
	-1, 83,
	1, 128,
	432, 128,
	-2, 855,
	-1, 394,
	217, 300,
	256, 300,
	-2, 267,
	-1, 397,
	217, 299,
	256, 299,
	-2, 265,
	-1, 504,
	217, 299,
	256, 299,
	-2, 268,
	-1, 562,
	429, 710,
	-2, 705,
	-1, 563,
	429, 711,
	-2, 706,
	-1, 569,
	6, 418,
	429, 418,
	-2, 990,
	-1, 589,
	6, 388,
	-2, 970,
	-1, 590,
	6, 415,
	429, 415,
	-2, 971,
	-1, 591,
	6, 396,
	-2, 972,
	-1, 592,
	6, 395,
	-2, 973,
	-1, 593,
	6, 415,
	429, 415,
	-2, 975,
	-1, 594,
	6, 415,
	429, 415,
	-2, 976,
	-1, 595,
	6, 416,
	-2, 978,
	-1, 596,
	6, 383,
	-2, 979,
	-1, 597,
	6, 383,
	-2, 980,
	-1, 598,
	6, 398,
	-2, 983,
	-1, 599,
	6, 384,
	-2, 987,
	-1, 600,
	6, 385,
	-2, 988,
	-1, 601,
	6, 386,
	-2, 989,
	-1, 602,
	6, 383,
	-2, 996,
	-1, 603,
	6, 389,
	-2, 1001,
	-1, 604,
	6, 387,
	-2, 1003,
	-1, 605,
	6, 417,
	-2, 1007,
	-1, 606,
	6, 413,
	429, 413,
	-2, 1011,
	-1, 850,
	138, 271,
	198, 271,
	217, 271,
	256, 271,
	263, 271,
	379, 271,
	-2, 523,
	-1, 858,
	429, 690,
	-2, 684,
	-1, 1040,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 451,
	-1, 1041,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 452,
	-1, 1042,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 453,
	-1, 1046,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 457,
	-1, 1047,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 458,
	-1, 1048,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 459,
	-1, 1051,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 464,
	-1, 1086,
	268, 589,
	-2, 592,
	-1, 1229,
	138, 271,
	198, 271,
	217, 271,
	256, 271,
	263, 271,
	379, 271,
	-2, 341,
	-1, 1237,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 465,
	-1, 1242,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 466,
	-1, 1263,
	268, 588,
	-2, 591,
	-1, 1399,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 467,
	-1, 1404,
	202, 0,
	-2, 477,
	-1, 1414,
	268, 590,
	-2, 593,
	-1, 1454,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 504,
	-1, 1455,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 505,
	-1, 1456,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 506,
	-1, 1460,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 510,
	-1, 1461,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 511,
	-1, 1462,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 512,
	-1, 1553,
	202, 0,
	-2, 478,
	-1, 1557,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 481,
	-1, 1558,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 483,
	-1, 1636,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 482,
	-1, 1637,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 484,
	-1, 1645,
	202, 0,
	-2, 513,
	-1, 1681,
	202, 0,
	-2, 514,
	-1, 1725,
	43, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 969,
}

const sqlNprod = 1108
const sqlPrivate = 57344

var sqlTokenNames []string
var sqlStates []string

const sqlLast = 27746

var sqlAct = [...]int{

	1083, 1745, 1724, 1707, 925, 1708, 1723, 1593, 1685, 981,
	1709, 1524, 1652, 932, 398, 561, 560, 553, 1434, 1525,
	1626, 1618, 1490, 84, 805, 1539, 619, 1533, 989, 968,
	425, 965, 1406, 853, 1321, 1266, 1225, 1379, 403, 28,
	1405, 1099, 1388, 1217, 13, 645, 1320, 785, 855, 624,
	1213, 967, 933, 902, 911, 1103, 1136, 1067, 880, 1064,
	884, 1093, 992, 1228, 28, 801, 807, 405, 37, 663,
	59, 627, 629, 690, 18, 397, 10, 6, 655, 88,
	444, 962, 607, 534, 525, 57, 28, 674, 446, 408,
	970, 442, 1139, 37, 507, 38, 508, 81, 1620, 506,
	61, 39, 60, 62, 990, 665, 654, 622, 647, 661,
	66, 620, 19, 622, 621, 37, 518, 620, 647, 1721,
	621, 926, 1617, 402, 402, 1715, 1096, 930, 985, 32,
	808, 1261, 1714, 395, 439, 985, 1262, 1706, 450, 394,
	1556, 451, 1701, 1259, 1683, 985, 447, 1556, 1677, 1665,
	421, 985, 985, 428, 1662, 1185, 1638, 1617, 436, 1556,
	1633, 1616, 33, 985, 1617, 1613, 1598, 1597, 985, 985,
	985, 1580, 1560, 1555, 1259, 1259, 1556, 36, 43, 1500,
	1409, 1369, 985, 1259, 646, 1365, 1336, 1334, 646, 1337,
	1259, 1333, 1097, 1332, 1259, 1263, 1259, 1260, 1259, 435,
	986, 899, 1259, 985, 898, 808, 652, 43, 1674, 653,
	45, 1467, 1413, 1197, 900, 24, 1215, 1199, 985, 646,
	650, 1079, 980, 955, 809, 519, 472, 420, 47, 25,
	689, 486, 1722, 43, 1720, 1678, 1615, 1583, 1581, 45,
	1573, 1572, 1567, 1566, 46, 1565, 1564, 1550, 1517, 1480,
	26, 1098, 1477, 41, 1095, 1476, 1475, 1293, 1417, 1394,
	1378, 1370, 1339, 42, 1338, 45, 1328, 1319, 1292, 1289,
	1287, 1276, 1270, 46, 1201, 1198, 1149, 1076, 518, 959,
	517, 40, 41, 861, 536, 1653, 1436, 1673, 1654, 1548,
	856, 1647, 42, 1265, 1259, 1629, 1623, 1612, 1590, 46,
	810, 1578, 1544, 1522, 1403, 1393, 1376, 1375, 1373, 1351,
	58, 1350, 1318, 1284, 1283, 1275, 1256, 1255, 1250, 1069,
	885, 888, 1163, 1162, 1144, 1108, 984, 812, 890, 878,
	422, 877, 876, 422, 875, 431, 40, 874, 422, 810,
	441, 43, 873, 1100, 872, 871, 870, 869, 868, 859,
	857, 40, 783, 426, 522, 1635, 1634, 1396, 1395, 811,
	615, 1519, 1186, 406, 648, 1236, 812, 524, 480, 810,
	493, 481, 866, 45, 648, 1534, 926, 1437, 1279, 1293,
	1104, 881, 1691, 630, 1182, 1661, 630, 1734, 1077, 631,
	401, 630, 631, 1062, 1508, 810, 812, 631, 811, 476,
	385, 27, 837, 34, 1606, 1185, 415, 46, 51, 505,
	1605, 1030, 1363, 43, 499, 1060, 41, 526, 526, 1516,
	30, 1735, 812, 31, 1293, 1094, 42, 625, 811, 1343,
	504, 1192, 1342, 1274, 1273, 1272, 825, 1271, 1293, 1238,
	1309, 1310, 1311, 810, 929, 45, 1056, 946, 1235, 923,
	400, 614, 511, 904, 811, 1693, 622, 1552, 618, 35,
	620, 922, 825, 621, 1362, 389, 904, 1595, 1247, 392,
	812, 641, 1100, 1742, 1307, 1177, 1353, 903, 1711, 46,
	809, 1066, 1703, 636, 52, 635, 646, 1655, 41, 1193,
	1245, 647, 632, 498, 879, 632, 782, 1643, 42, 1426,
	632, 395, 811, 978, 979, 1306, 1741, 394, 1704, 848,
	793, 795, 1282, 402, 1058, 402, 40, 802, 1057, 1389,
	1163, 1710, 563, 1063, 1660, 1755, 1733, 1600, 1731, 1532,
	843, 844, 845, 846, 847, 1599, 1423, 1180, 436, 838,
	851, 54, 912, 781, 1066, 1073, 974, 489, 510, 528,
	1293, 473, 1071, 87, 471, 1588, 826, 49, 450, 450,
	864, 451, 451, 509, 87, 87, 693, 1308, 87, 694,
	1345, 87, 87, 87, 478, 833, 87, 87, 87, 87,
	659, 449, 858, 658, 1504, 774, 826, 685, 778, 678,
	779, 1100, 1712, 1243, 951, 1424, 777, 1157, 1248, 87,
	87, 975, 510, 791, 790, 789, 952, 395, 1422, 803,
	395, 395, 826, 797, 1576, 788, 798, 799, 1507, 784,
	55, 1686, 509, 897, 479, 555, 609, 1506, 1589, 954,
	1312, 399, 852, 638, 915, 1740, 50, 780, 608, 660,
	1059, 953, 1542, 1463, 568, 893, 1104, 1165, 1164, 827,
	1061, 1748, 882, 883, 1384, 1307, 1383, 1713, 886, 477,
	905, 494, 1754, 889, 1299, 1300, 1301, 1294, 1295, 1296,
	1297, 1298, 1174, 422, 942, 444, 53, 628, 28, 827,
	891, 1354, 948, 434, 928, 916, 918, 1100, 501, 1734,
	400, 28, 1214, 1122, 894, 896, 835, 59, 1380, 1107,
	693, 693, 960, 694, 694, 827, 862, 810, 616, 1547,
	813, 814, 815, 816, 817, 1244, 1646, 1503, 422, 640,
	37, 908, 1575, 390, 1322, 1246, 611, 61, 941, 60,
	62, 1596, 1191, 450, 812, 947, 451, 1402, 944, 921,
	1288, 447, 945, 943, 1577, 393, 1360, 648, 1308, 813,
	814, 815, 816, 817, 633, 1054, 441, 633, 441, 901,
	1505, 1249, 633, 961, 1464, 914, 811, 1307, 834, 693,
	949, 520, 694, 1465, 441, 821, 818, 819, 820, 813,
	814, 815, 816, 817, 496, 613, 610, 808, 565, 1294,
	1295, 1296, 1297, 1298, 1293, 56, 1309, 1310, 1311, 492,
	1240, 821, 818, 819, 820, 813, 814, 815, 816, 817,
	526, 48, 987, 1551, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1029, 1296, 1297, 1298, 1746,
	1303, 1304, 1305, 995, 1302, 1299, 1300, 1301, 1294, 1295,
	1296, 1297, 1298, 514, 515, 815, 816, 817, 490, 913,
	1308, 1306, 487, 1065, 1072, 433, 1323, 867, 776, 1109,
	1106, 1120, 1487, 1130, 1132, 1137, 1140, 1358, 1096, 1356,
	893, 1344, 1204, 976, 973, 893, 651, 964, 649, 644,
	374, 637, 1055, 634, 994, 1431, 1148, 1607, 982, 625,
	1735, 1112, 892, 680, 1609, 1084, 512, 1747, 920, 383,
	904, 87, 1364, 87, 1074, 87, 810, 810, 1620, 422,
	693, 919, 924, 694, 826, 418, 936, 1178, 1052, 1749,
	87, 940, 1075, 1293, 441, 483, 1657, 1158, 64, 1680,
	904, 441, 1160, 812, 1097, 67, 87, 1381, 1152, 1080,
	1085, 917, 1088, 1675, 516, 1233, 87, 87, 376, 87,
	1294, 1295, 1296, 1297, 1298, 1131, 3, 931, 804, 1141,
	1142, 1143, 72, 1153, 1752, 811, 811, 1753, 1293, 810,
	1549, 802, 1481, 68, 1429, 983, 1312, 1188, 75, 1397,
	375, 377, 63, 1173, 87, 956, 87, 1202, 957, 1184,
	1335, 449, 449, 1098, 1115, 67, 1095, 513, 1181, 692,
	87, 1307, 87, 87, 427, 87, 1187, 827, 69, 1200,
	74, 1195, 1231, 28, 87, 1194, 419, 1196, 1189, 1208,
	1147, 1190, 72, 1146, 1145, 450, 1101, 384, 451, 958,
	1562, 484, 87, 68, 1520, 87, 1206, 1430, 71, 1053,
	860, 378, 37, 1237, 1224, 388, 1230, 1242, 1594, 1210,
	796, 1209, 1211, 1234, 65, 474, 475, 422, 775, 379,
	1116, 386, 387, 488, 1569, 886, 1702, 889, 69, 1293,
	1258, 1309, 1310, 1311, 1281, 883, 882, 1642, 1625, 1105,
	1267, 865, 23, 422, 1527, 1100, 541, 1488, 1408, 1346,
	969, 695, 681, 1264, 1308, 1280, 670, 684, 71, 1285,
	564, 491, 664, 1241, 1239, 673, 820, 813, 814, 815,
	816, 817, 683, 671, 682, 1111, 676, 612, 851, 1117,
	566, 998, 1114, 567, 1137, 1137, 1137, 999, 887, 554,
	87, 996, 445, 692, 692, 934, 1306, 1070, 1102, 1277,
	1307, 863, 1341, 87, 540, 546, 545, 87, 1278, 1081,
	87, 537, 1253, 1348, 87, 79, 87, 87, 80, 87,
	1257, 1179, 87, 87, 87, 1515, 449, 1094, 1216, 87,
	87, 70, 927, 1268, 1269, 977, 1154, 625, 1349, 1366,
	1325, 1326, 1327, 792, 1355, 391, 1303, 1304, 1305, 1340,
	1302, 1299, 1300, 1301, 1294, 1295, 1296, 1297, 1298, 1290,
	1129, 1121, 692, 1119, 441, 1357, 1347, 1359, 497, 623,
	1317, 1118, 441, 935, 523, 485, 1110, 988, 1361, 1232,
	686, 1330, 521, 800, 417, 416, 1368, 1398, 1367, 1399,
	73, 70, 966, 1308, 1382, 380, 1220, 1385, 381, 1374,
	1404, 1372, 382, 482, 950, 842, 1410, 639, 839, 1203,
	1415, 495, 1656, 1386, 1390, 1391, 1415, 1220, 1690, 1352,
	44, 1312, 17, 16, 15, 14, 1223, 12, 422, 11,
	1432, 1496, 1419, 1420, 1421, 1207, 9, 8, 7, 1441,
	22, 1218, 1443, 21, 20, 5, 1307, 1223, 4, 87,
	73, 1221, 2, 1113, 1, 87, 87, 0, 0, 0,
	548, 1416, 1387, 0, 1425, 1427, 1428, 688, 0, 1440,
	1438, 0, 1221, 1472, 1473, 0, 1444, 1219, 0, 0,
	1497, 87, 1479, 0, 87, 0, 0, 1442, 687, 0,
	0, 85, 1301, 1294, 1295, 1296, 1297, 1298, 0, 1411,
	0, 0, 409, 409, 0, 1470, 424, 1474, 0, 424,
	430, 424, 0, 692, 424, 437, 424, 85, 1471, 0,
	0, 0, 0, 0, 1486, 1501, 1502, 0, 1482, 0,
	1496, 1535, 0, 0, 0, 0, 1491, 85, 85, 1308,
	0, 0, 1530, 1529, 1531, 0, 0, 0, 1521, 1489,
	0, 0, 1222, 1553, 28, 0, 0, 1523, 1557, 1558,
	1518, 1468, 1537, 1538, 1561, 0, 1543, 0, 1545, 1563,
	0, 1123, 1478, 1222, 87, 87, 87, 0, 0, 1497,
	87, 1546, 0, 87, 1568, 0, 1001, 1020, 1571, 87,
	87, 87, 87, 87, 1554, 87, 87, 0, 0, 1019,
	0, 0, 87, 0, 87, 1000, 0, 0, 0, 0,
	87, 0, 0, 1492, 0, 0, 0, 1493, 1579, 87,
	936, 0, 87, 0, 1536, 0, 0, 1574, 449, 0,
	0, 1303, 1304, 1305, 0, 1302, 1299, 1300, 1301, 1294,
	1295, 1296, 1297, 1298, 87, 0, 87, 87, 0, 87,
	422, 0, 0, 422, 1495, 0, 0, 1601, 87, 0,
	1584, 0, 0, 87, 87, 1587, 87, 1585, 1498, 0,
	542, 29, 0, 0, 0, 0, 0, 0, 1608, 1622,
	0, 0, 1530, 1529, 1531, 1001, 1020, 1022, 677, 672,
	0, 1602, 1630, 0, 0, 0, 29, 1614, 1019, 1621,
	1610, 0, 1636, 1637, 1000, 1603, 1604, 0, 396, 0,
	1619, 404, 1492, 0, 1628, 0, 1493, 0, 29, 1632,
	0, 1631, 0, 0, 0, 0, 0, 0, 1641, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1639,
	0, 1651, 0, 0, 0, 0, 0, 1021, 1494, 997,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 625, 1123, 1123, 0, 1498, 0, 1648,
	0, 1664, 0, 0, 1666, 0, 0, 0, 1668, 0,
	0, 1670, 0, 1530, 1529, 1531, 1022, 1667, 0, 0,
	0, 0, 0, 0, 1669, 1511, 893, 0, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 1679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1694, 422, 422,
	0, 0, 422, 1695, 1123, 1123, 1123, 0, 1687, 1688,
	0, 1692, 0, 0, 0, 1698, 87, 1697, 1682, 1530,
	1529, 1531, 1717, 1696, 1700, 1699, 1021, 1494, 997, 424,
	0, 85, 1716, 502, 1728, 1728, 1719, 1718, 87, 0,
	0, 1729, 0, 1216, 0, 1732, 1672, 0, 409, 1730,
	87, 0, 87, 1737, 87, 1736, 1728, 87, 1739, 1738,
	0, 0, 0, 0, 424, 0, 0, 1750, 87, 0,
	1751, 87, 0, 0, 424, 424, 0, 642, 0, 87,
	0, 0, 87, 1728, 0, 1756, 1293, 0, 1251, 1252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 1220, 424, 1592, 424, 0, 0, 0, 0, 1123,
	1123, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	424, 85, 0, 85, 0, 87, 0, 0, 0, 0,
	0, 1223, 787, 0, 0, 0, 0, 1624, 1314, 1315,
	1316, 0, 0, 1306, 0, 0, 1218, 422, 0, 0,
	409, 0, 0, 806, 0, 0, 1221, 0, 0, 0,
	0, 0, 0, 0, 1123, 1123, 1123, 1123, 1123, 1123,
	1123, 1123, 1123, 1123, 1123, 1123, 1123, 1123, 1123, 1123,
	1123, 1123, 1219, 1123, 0, 87, 87, 87, 0, 0,
	0, 0, 0, 87, 87, 0, 1001, 1020, 0, 87,
	1541, 87, 0, 87, 87, 87, 87, 0, 0, 1019,
	0, 0, 0, 0, 0, 1000, 87, 0, 87, 0,
	0, 1293, 0, 0, 0, 0, 87, 87, 0, 0,
	87, 0, 1001, 1020, 0, 0, 87, 87, 0, 1001,
	1020, 0, 0, 0, 0, 1019, 396, 0, 424, 0,
	0, 1000, 1019, 1400, 1401, 0, 0, 1222, 1000, 0,
	1689, 909, 0, 0, 0, 424, 0, 0, 424, 0,
	1001, 1020, 424, 0, 938, 939, 0, 424, 0, 87,
	424, 85, 85, 1019, 0, 0, 0, 424, 806, 1000,
	0, 0, 0, 1307, 0, 0, 0, 1022, 936, 0,
	0, 810, 0, 0, 0, 0, 0, 0, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 0, 1466, 812, 1540,
	87, 0, 87, 1022, 87, 0, 0, 0, 0, 0,
	1022, 87, 0, 0, 0, 0, 0, 0, 0, 1001,
	1020, 0, 396, 0, 0, 396, 396, 1021, 0, 997,
	811, 0, 1019, 0, 0, 87, 0, 1123, 1000, 0,
	810, 1022, 828, 829, 830, 87, 849, 87, 0, 0,
	850, 0, 0, 0, 854, 87, 1308, 87, 0, 0,
	0, 0, 0, 1021, 0, 997, 0, 812, 0, 0,
	1021, 0, 997, 837, 0, 0, 0, 963, 0, 0,
	0, 0, 0, 424, 909, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 811,
	0, 1021, 0, 997, 0, 0, 0, 825, 1307, 424,
	0, 0, 85, 0, 0, 1123, 0, 0, 87, 87,
	1022, 0, 87, 0, 1001, 1020, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 1019, 0, 0,
	0, 0, 87, 1000, 0, 0, 0, 0, 0, 0,
	29, 0, 1302, 1299, 1300, 1301, 1294, 1295, 1296, 1297,
	1298, 0, 0, 29, 0, 0, 87, 87, 87, 0,
	87, 0, 1001, 1020, 0, 0, 0, 0, 0, 0,
	1021, 1591, 997, 0, 0, 1019, 1123, 87, 826, 0,
	0, 1000, 0, 0, 1001, 1020, 0, 0, 0, 0,
	0, 1308, 424, 1155, 1156, 0, 87, 1019, 909, 0,
	838, 1161, 0, 1000, 0, 0, 0, 1166, 1167, 1169,
	1171, 1172, 0, 1175, 1176, 1022, 0, 0, 0, 0,
	424, 0, 1183, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 833, 963, 0, 0,
	963, 0, 0, 0, 0, 0, 0, 826, 0, 1645,
	0, 0, 0, 1001, 1020, 0, 0, 0, 0, 0,
	0, 0, 787, 1022, 85, 424, 1019, 1205, 0, 0,
	0, 827, 1000, 0, 0, 1021, 1212, 997, 0, 0,
	0, 1227, 1227, 0, 424, 1022, 0, 1302, 1299, 1300,
	1301, 1294, 1295, 1296, 1297, 1298, 0, 810, 0, 828,
	829, 830, 0, 0, 0, 0, 0, 0, 0, 991,
	0, 0, 0, 0, 0, 0, 831, 0, 0, 0,
	1681, 0, 0, 1021, 812, 997, 0, 0, 0, 0,
	837, 0, 0, 0, 810, 0, 828, 829, 830, 1068,
	827, 0, 0, 0, 0, 1021, 0, 997, 0, 0,
	0, 0, 0, 831, 1022, 0, 811, 835, 0, 0,
	0, 812, 0, 0, 825, 0, 0, 837, 818, 819,
	820, 813, 814, 815, 816, 817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 810, 811, 0, 0, 0, 0, 0, 0,
	0, 825, 0, 0, 0, 0, 0, 0, 1293, 0,
	1309, 1310, 1311, 0, 1021, 0, 997, 0, 0, 812,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 834,
	404, 0, 822, 823, 824, 0, 821, 818, 819, 820,
	813, 814, 815, 816, 817, 1293, 0, 1309, 1310, 1311,
	0, 811, 0, 0, 806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 838, 828, 829,
	830, 0, 0, 0, 0, 1306, 424, 0, 0, 0,
	0, 0, 0, 0, 0, 29, 0, 0, 1371, 836,
	909, 0, 787, 812, 1229, 1377, 0, 0, 0, 837,
	0, 0, 0, 833, 838, 0, 424, 0, 0, 424,
	0, 0, 1306, 0, 826, 0, 0, 1392, 0, 0,
	1227, 0, 0, 0, 0, 811, 836, 0, 0, 0,
	0, 0, 0, 825, 0, 0, 0, 0, 0, 0,
	833, 0, 0, 0, 0, 0, 0, 0, 0, 832,
	0, 826, 0, 0, 0, 0, 1068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	850, 1254, 0, 1435, 0, 0, 0, 0, 0, 810,
	0, 828, 829, 830, 0, 0, 832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 831, 0,
	1312, 0, 0, 0, 0, 0, 812, 827, 0, 826,
	0, 0, 837, 0, 0, 1313, 0, 0, 0, 1293,
	0, 1309, 1310, 1311, 835, 1307, 0, 0, 850, 0,
	0, 0, 0, 1484, 1485, 909, 838, 1312, 811, 0,
	0, 806, 806, 0, 827, 0, 825, 1509, 0, 1510,
	0, 424, 1512, 1513, 1514, 0, 0, 0, 836, 0,
	0, 835, 1307, 0, 806, 0, 909, 1526, 0, 0,
	0, 0, 833, 0, 424, 424, 0, 0, 424, 0,
	0, 0, 0, 826, 806, 1227, 1306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 834, 0, 0, 822,
	823, 824, 827, 821, 818, 819, 820, 813, 814, 815,
	816, 817, 0, 0, 0, 1150, 991, 0, 1308, 991,
	0, 0, 1151, 0, 0, 0, 0, 1570, 0, 0,
	0, 0, 0, 834, 0, 0, 822, 823, 824, 0,
	821, 818, 819, 820, 813, 814, 815, 816, 817, 838,
	0, 0, 0, 0, 0, 1308, 850, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 836, 0, 0, 0, 0, 827, 0, 909, 0,
	1586, 0, 85, 0, 0, 833, 0, 0, 0, 424,
	0, 0, 0, 835, 0, 0, 826, 0, 821, 818,
	819, 820, 813, 814, 815, 816, 817, 1526, 0, 0,
	1303, 1304, 1305, 806, 1302, 1299, 1300, 1301, 1294, 1295,
	1296, 1297, 1298, 424, 0, 1627, 0, 0, 0, 0,
	0, 832, 0, 424, 0, 806, 1307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 1304, 1305,
	0, 1302, 1299, 1300, 1301, 1294, 1295, 1296, 1297, 1298,
	0, 0, 0, 0, 0, 834, 29, 0, 822, 823,
	824, 0, 821, 818, 819, 820, 813, 814, 815, 816,
	817, 0, 0, 0, 991, 991, 0, 0, 991, 827,
	0, 0, 0, 0, 0, 0, 1658, 1659, 0, 0,
	1663, 0, 0, 0, 0, 0, 835, 0, 1526, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	806, 0, 0, 0, 0, 0, 0, 0, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 806, 806, 424, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1526, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 834, 0,
	0, 822, 823, 824, 424, 821, 818, 819, 820, 813,
	814, 815, 816, 817, 0, 0, 0, 0, 0, 1684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 1303, 1304, 1305, 0, 1302, 1299, 1300, 1301, 1294,
	1295, 1296, 1297, 1298, 0, 0, 0, 0, 0, 0,
	691, 0, 0, 991, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 90, 91, 92, 93, 94, 95, 696,
	96, 97, 98, 697, 698, 699, 700, 701, 702, 703,
	99, 100, 704, 101, 102, 453, 103, 104, 105, 332,
	333, 454, 334, 0, 335, 336, 705, 106, 337, 107,
	108, 109, 110, 706, 707, 111, 338, 339, 112, 708,
	113, 114, 115, 116, 340, 709, 455, 710, 117, 118,
	119, 120, 121, 850, 456, 122, 123, 124, 711, 125,
	126, 127, 128, 129, 130, 0, 712, 457, 131, 132,
	133, 713, 714, 715, 716, 717, 718, 134, 135, 136,
	137, 138, 341, 139, 140, 342, 343, 141, 719, 142,
	720, 143, 144, 145, 146, 147, 721, 148, 149, 150,
	722, 723, 151, 152, 153, 154, 724, 155, 156, 157,
	725, 158, 0, 159, 726, 160, 161, 344, 162, 163,
	164, 345, 727, 165, 728, 166, 167, 346, 168, 729,
	169, 730, 170, 458, 731, 459, 171, 172, 173, 732,
	174, 175, 347, 733, 348, 176, 734, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 735, 186, 187, 736,
	188, 189, 190, 737, 191, 460, 349, 192, 193, 194,
	195, 350, 351, 352, 738, 353, 739, 196, 461, 197,
	462, 198, 199, 200, 201, 202, 740, 741, 203, 354,
	463, 204, 464, 742, 205, 206, 410, 743, 744, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 411, 355, 465, 356, 221, 222,
	357, 745, 223, 224, 225, 746, 358, 226, 359, 227,
	228, 229, 747, 230, 748, 749, 231, 232, 750, 751,
	233, 360, 466, 234, 467, 361, 235, 236, 237, 238,
	239, 240, 241, 752, 242, 243, 362, 244, 363, 247,
	245, 246, 753, 248, 249, 250, 251, 252, 253, 254,
	255, 364, 256, 257, 258, 259, 754, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 755, 271,
	272, 468, 273, 274, 365, 275, 0, 276, 277, 278,
	279, 280, 756, 281, 282, 283, 284, 412, 757, 285,
	286, 287, 288, 469, 289, 290, 366, 291, 758, 292,
	293, 294, 295, 296, 297, 298, 299, 367, 300, 0,
	368, 759, 301, 302, 760, 303, 304, 761, 414, 369,
	762, 763, 413, 305, 370, 306, 371, 764, 307, 308,
	309, 310, 311, 312, 313, 765, 766, 314, 315, 316,
	317, 318, 767, 768, 319, 320, 321, 322, 372, 373,
	769, 323, 470, 324, 770, 771, 772, 773, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 895, 89,
	90, 91, 92, 93, 94, 95, 696, 96, 97, 98,
	697, 698, 699, 700, 701, 702, 703, 99, 100, 704,
	101, 102, 453, 103, 104, 105, 332, 333, 454, 334,
	0, 335, 336, 705, 106, 337, 107, 108, 109, 110,
	706, 707, 111, 338, 339, 112, 708, 113, 114, 115,
	116, 340, 709, 455, 710, 117, 118, 119, 120, 121,
	0, 456, 122, 123, 124, 711, 125, 126, 127, 128,
	129, 130, 0, 712, 457, 131, 132, 133, 713, 714,
	715, 716, 717, 718, 134, 135, 136, 137, 138, 341,
	139, 140, 342, 343, 141, 719, 142, 720, 143, 144,
	145, 146, 147, 721, 148, 149, 150, 722, 723, 151,
	152, 153, 154, 724, 155, 156, 157, 725, 158, 0,
	159, 726, 160, 161, 344, 162, 163, 164, 345, 727,
	165, 728, 166, 167, 346, 168, 729, 169, 730, 170,
	458, 731, 459, 171, 172, 173, 732, 174, 175, 347,
	733, 348, 176, 734, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 735, 186, 187, 736, 188, 189, 190,
	737, 191, 460, 349, 192, 193, 194, 195, 350, 351,
	352, 738, 353, 739, 196, 461, 197, 462, 198, 199,
	200, 201, 202, 740, 741, 203, 354, 463, 204, 464,
	742, 205, 206, 410, 743, 744, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 411, 355, 465, 356, 221, 222, 357, 745, 223,
	224, 225, 746, 358, 226, 359, 227, 228, 229, 747,
	230, 748, 749, 231, 232, 750, 751, 233, 360, 466,
	234, 467, 361, 235, 236, 237, 238, 239, 240, 241,
	752, 242, 243, 362, 244, 363, 247, 245, 246, 753,
	248, 249, 250, 251, 252, 253, 254, 255, 364, 256,
	257, 258, 259, 754, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 755, 271, 272, 468, 273,
	274, 365, 275, 0, 276, 277, 278, 279, 280, 756,
	281, 282, 283, 284, 412, 757, 285, 286, 287, 288,
	469, 289, 290, 366, 291, 758, 292, 293, 294, 295,
	296, 297, 298, 299, 367, 300, 0, 368, 759, 301,
	302, 760, 303, 304, 761, 414, 369, 762, 763, 413,
	305, 370, 306, 371, 764, 307, 308, 309, 310, 311,
	312, 313, 765, 766, 314, 315, 316, 317, 318, 767,
	768, 319, 320, 321, 322, 372, 373, 769, 323, 470,
	324, 770, 771, 772, 773, 325, 326, 327, 328, 329,
	330, 331, 562, 550, 551, 552, 549, 538, 0, 0,
	0, 0, 0, 0, 89, 90, 91, 92, 93, 94,
	95, 1090, 96, 97, 98, 0, 0, 0, 0, 544,
	0, 0, 99, 100, 0, 101, 102, 453, 103, 104,
	105, 332, 589, 454, 590, 0, 591, 592, 0, 106,
	337, 107, 108, 109, 110, 559, 577, 111, 593, 594,
	112, 0, 113, 114, 115, 116, 585, 0, 570, 0,
	117, 118, 119, 120, 121, 0, 456, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 457,
	131, 132, 133, 0, 571, 573, 0, 572, 574, 134,
	135, 136, 137, 138, 595, 139, 140, 596, 597, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 1091, 0, 151, 588, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 543,
	162, 163, 164, 578, 557, 165, 0, 166, 167, 598,
	168, 0, 169, 0, 170, 458, 0, 459, 171, 172,
	173, 0, 174, 175, 586, 0, 348, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 460, 349, 192,
	193, 194, 195, 599, 600, 601, 0, 569, 0, 196,
	461, 197, 462, 198, 199, 200, 201, 202, 0, 0,
	203, 587, 463, 204, 464, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 465, 356,
	221, 222, 357, 532, 223, 224, 225, 558, 584, 226,
	602, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 466, 234, 467, 579, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 580, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 603, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 468, 273, 274, 547, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	575, 285, 286, 287, 288, 469, 289, 290, 604, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 581, 0, 301, 302, 0, 303, 304, 0,
	414, 605, 0, 0, 413, 305, 582, 306, 583, 556,
	307, 308, 309, 310, 311, 312, 313, 0, 535, 314,
	315, 316, 317, 318, 576, 0, 319, 320, 321, 322,
	372, 606, 1089, 323, 470, 324, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 330, 331, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 530,
	1092, 0, 0, 0, 531, 0, 0, 539, 1087, 562,
	550, 551, 552, 549, 538, 0, 0, 0, 0, 0,
	0, 89, 90, 91, 92, 93, 94, 95, 0, 96,
	97, 98, 0, 0, 0, 0, 544, 0, 0, 99,
	100, 0, 101, 102, 453, 103, 104, 105, 332, 589,
	454, 590, 0, 591, 592, 0, 106, 337, 107, 108,
	109, 110, 559, 577, 111, 593, 594, 112, 0, 113,
	114, 115, 116, 585, 0, 570, 0, 117, 118, 119,
	120, 121, 0, 456, 122, 123, 124, 0, 125, 126,
	127, 128, 129, 130, 0, 0, 457, 131, 132, 133,
	0, 571, 573, 0, 572, 574, 134, 135, 136, 137,
	138, 595, 139, 140, 596, 597, 141, 626, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 588, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 543, 162, 163, 164,
	578, 557, 165, 0, 166, 167, 598, 168, 0, 169,
	0, 170, 458, 0, 459, 171, 172, 173, 0, 174,
	175, 586, 0, 348, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 460, 349, 192, 193, 194, 195,
	599, 600, 601, 0, 569, 0, 196, 461, 197, 462,
	198, 199, 200, 201, 202, 0, 0, 203, 587, 463,
	204, 464, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 465, 356, 221, 222, 357,
	532, 223, 224, 225, 558, 584, 226, 602, 227, 228,
	229, 0, 230, 0, 0, 231, 232, 0, 0, 233,
	360, 466, 234, 467, 579, 235, 236, 237, 238, 239,
	240, 241, 0, 242, 243, 580, 244, 363, 247, 245,
	246, 0, 248, 249, 250, 251, 252, 253, 254, 255,
	603, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	468, 273, 274, 547, 275, 0, 276, 277, 278, 279,
	280, 43, 281, 282, 283, 284, 412, 575, 285, 286,
	287, 288, 469, 289, 290, 604, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 581,
	0, 301, 302, 45, 303, 304, 0, 414, 605, 0,
	0, 413, 305, 582, 306, 583, 556, 307, 308, 309,
	310, 311, 312, 313, 0, 535, 314, 315, 316, 317,
	318, 576, 0, 319, 320, 321, 322, 452, 606, 0,
	323, 470, 324, 0, 0, 0, 41, 325, 326, 327,
	328, 329, 330, 331, 533, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 530, 0, 0, 0,
	0, 531, 0, 0, 539, 562, 550, 551, 552, 549,
	538, 0, 0, 0, 0, 0, 0, 89, 90, 91,
	92, 93, 94, 95, 0, 96, 97, 98, 0, 0,
	0, 0, 544, 0, 0, 99, 100, 0, 101, 102,
	453, 103, 104, 105, 332, 589, 454, 590, 0, 591,
	592, 0, 106, 337, 107, 108, 109, 110, 559, 577,
	111, 593, 594, 112, 0, 113, 114, 115, 116, 585,
	0, 570, 0, 117, 118, 119, 120, 121, 0, 456,
	122, 123, 124, 0, 125, 126, 127, 128, 129, 130,
	0, 0, 457, 131, 132, 133, 0, 571, 573, 0,
	572, 574, 134, 135, 136, 137, 138, 595, 139, 140,
	596, 597, 141, 0, 142, 0, 143, 144, 145, 146,
	147, 0, 148, 149, 150, 0, 0, 151, 588, 153,
	154, 0, 155, 156, 157, 0, 158, 0, 159, 0,
	160, 161, 543, 162, 163, 164, 578, 557, 165, 0,
	166, 167, 598, 168, 0, 169, 0, 170, 458, 0,
	459, 171, 172, 173, 0, 174, 175, 586, 0, 348,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 0, 186, 187, 0, 188, 189, 190, 0, 191,
	460, 349, 192, 193, 194, 195, 599, 600, 601, 0,
	569, 0, 196, 461, 197, 462, 198, 199, 200, 201,
	202, 0, 0, 203, 587, 463, 204, 464, 0, 205,
	206, 410, 0, 0, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 411,
	355, 465, 356, 221, 222, 357, 532, 223, 224, 225,
	558, 584, 226, 602, 227, 228, 229, 0, 230, 0,
	0, 231, 232, 0, 0, 233, 360, 466, 234, 467,
	579, 235, 236, 237, 238, 239, 240, 241, 0, 242,
	243, 580, 244, 363, 247, 245, 246, 0, 248, 249,
	250, 251, 252, 253, 254, 255, 603, 256, 257, 258,
	259, 0, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 0, 271, 272, 468, 273, 274, 547,
	275, 0, 276, 277, 278, 279, 280, 43, 281, 282,
	283, 284, 412, 575, 285, 286, 287, 288, 469, 289,
	290, 604, 291, 0, 292, 293, 294, 295, 296, 297,
	298, 299, 367, 300, 0, 581, 0, 301, 302, 45,
	303, 304, 0, 414, 605, 0, 0, 413, 305, 582,
	306, 583, 556, 307, 308, 309, 310, 311, 312, 313,
	0, 535, 314, 315, 316, 317, 318, 576, 0, 319,
	320, 321, 322, 452, 606, 0, 323, 470, 324, 0,
	0, 0, 41, 325, 326, 327, 328, 329, 330, 331,
	533, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 530, 0, 0, 0, 0, 531, 0, 0,
	539, 562, 550, 551, 552, 549, 538, 0, 0, 0,
	0, 0, 0, 89, 90, 91, 92, 93, 94, 95,
	0, 96, 97, 98, 0, 0, 0, 0, 544, 0,
	0, 99, 100, 0, 101, 102, 453, 103, 104, 105,
	332, 589, 454, 590, 0, 591, 592, 1133, 106, 337,
	107, 108, 109, 110, 559, 577, 111, 593, 594, 112,
	0, 113, 114, 115, 116, 585, 0, 570, 0, 117,
	118, 119, 120, 121, 0, 456, 122, 123, 124, 0,
	125, 126, 127, 128, 129, 130, 0, 0, 457, 131,
	132, 133, 0, 571, 573, 0, 572, 574, 134, 135,
	136, 137, 138, 595, 139, 140, 596, 597, 141, 0,
	142, 0, 143, 144, 145, 146, 147, 0, 148, 149,
	150, 0, 0, 151, 588, 153, 154, 0, 155, 156,
	157, 0, 158, 0, 159, 0, 160, 161, 543, 162,
	163, 164, 578, 557, 165, 0, 166, 167, 598, 168,
	0, 169, 0, 170, 458, 1138, 459, 171, 172, 173,
	0, 174, 175, 586, 0, 348, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 0, 186, 187,
	0, 188, 189, 190, 0, 191, 460, 349, 192, 193,
	194, 195, 599, 600, 601, 0, 569, 0, 196, 461,
	197, 462, 198, 199, 200, 201, 202, 0, 1134, 203,
	587, 463, 204, 464, 0, 205, 206, 410, 0, 0,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 411, 355, 465, 356, 221,
	222, 357, 532, 223, 224, 225, 558, 584, 226, 602,
	227, 228, 229, 0, 230, 0, 0, 231, 232, 0,
	0, 233, 360, 466, 234, 467, 579, 235, 236, 237,
	238, 239, 240, 241, 0, 242, 243, 580, 244, 363,
	247, 245, 246, 0, 248, 249, 250, 251, 252, 253,
	254, 255, 603, 256, 257, 258, 259, 0, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 0,
	271, 272, 468, 273, 274, 547, 275, 0, 276, 277,
	278, 279, 280, 0, 281, 282, 283, 284, 412, 575,
	285, 286, 287, 288, 469, 289, 290, 604, 291, 0,
	292, 293, 294, 295, 296, 297, 298, 299, 367, 300,
	0, 581, 0, 301, 302, 0, 303, 304, 0, 414,
	605, 0, 1135, 413, 305, 582, 306, 583, 556, 307,
	308, 309, 310, 311, 312, 313, 0, 535, 314, 315,
	316, 317, 318, 576, 0, 319, 320, 321, 322, 372,
	606, 0, 323, 470, 324, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 330, 331, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 0,
	0, 0, 0, 531, 0, 0, 539, 562, 550, 551,
	552, 549, 538, 0, 0, 0, 0, 0, 0, 89,
	90, 91, 92, 93, 94, 95, 0, 96, 97, 98,
	0, 0, 0, 0, 544, 0, 0, 99, 100, 0,
	101, 102, 453, 103, 104, 105, 332, 589, 454, 590,
	0, 591, 592, 0, 106, 337, 107, 108, 109, 110,
	559, 577, 111, 593, 594, 112, 0, 113, 114, 115,
	116, 585, 0, 570, 0, 117, 118, 119, 120, 121,
	0, 456, 122, 123, 124, 0, 125, 126, 127, 128,
	129, 130, 0, 0, 457, 131, 132, 133, 0, 571,
	573, 0, 572, 574, 134, 135, 136, 137, 138, 595,
	139, 140, 596, 597, 141, 0, 142, 0, 143, 144,
	145, 146, 147, 0, 148, 149, 150, 0, 0, 151,
	588, 153, 154, 0, 155, 156, 157, 0, 158, 0,
	159, 0, 160, 161, 543, 162, 163, 164, 578, 557,
	165, 0, 166, 167, 598, 168, 0, 169, 0, 170,
	458, 0, 459, 171, 172, 173, 0, 174, 175, 586,
	0, 348, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 0, 186, 187, 0, 188, 189, 190,
	0, 191, 460, 349, 192, 193, 194, 195, 599, 600,
	601, 0, 569, 0, 196, 461, 197, 462, 198, 199,
	200, 201, 202, 0, 0, 203, 587, 463, 204, 464,
	0, 205, 206, 410, 0, 0, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 411, 355, 465, 356, 221, 222, 357, 532, 223,
	224, 225, 558, 584, 226, 602, 227, 228, 229, 0,
	230, 0, 0, 231, 232, 0, 0, 233, 360, 466,
	234, 467, 579, 235, 236, 237, 238, 239, 240, 241,
	0, 242, 243, 580, 244, 363, 247, 245, 246, 0,
	248, 249, 250, 251, 252, 253, 254, 255, 603, 256,
	257, 258, 259, 0, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 0, 271, 272, 468, 273,
	274, 547, 275, 0, 276, 277, 278, 279, 280, 0,
	281, 282, 283, 284, 412, 575, 285, 286, 287, 288,
	469, 289, 290, 604, 291, 0, 292, 293, 294, 295,
	296, 297, 298, 299, 367, 300, 0, 581, 0, 301,
	302, 0, 303, 304, 0, 414, 605, 0, 0, 413,
	305, 582, 306, 583, 556, 307, 308, 309, 310, 311,
	312, 313, 0, 535, 314, 315, 316, 317, 318, 576,
	0, 319, 320, 321, 322, 372, 606, 0, 323, 470,
	324, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	330, 331, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 530, 0, 0, 0, 0, 531,
	0, 0, 539, 1469, 562, 550, 551, 552, 549, 538,
	0, 0, 0, 0, 0, 0, 89, 90, 91, 92,
	93, 94, 95, 0, 96, 97, 98, 0, 0, 0,
	0, 544, 0, 0, 99, 100, 0, 101, 102, 453,
	103, 104, 105, 332, 589, 454, 590, 0, 591, 592,
	0, 106, 337, 107, 108, 109, 110, 559, 577, 111,
	593, 594, 112, 0, 113, 114, 115, 116, 585, 0,
	570, 0, 117, 118, 119, 120, 121, 0, 456, 122,
	123, 124, 0, 125, 126, 127, 128, 129, 130, 0,
	0, 457, 131, 132, 133, 0, 571, 573, 0, 572,
	574, 134, 135, 136, 137, 138, 595, 139, 140, 596,
	597, 141, 0, 142, 0, 143, 144, 145, 146, 147,
	0, 148, 149, 150, 0, 0, 151, 588, 153, 154,
	0, 155, 156, 157, 0, 158, 0, 159, 0, 160,
	161, 543, 162, 163, 164, 578, 557, 165, 0, 166,
	167, 598, 168, 0, 169, 0, 170, 458, 0, 459,
	171, 172, 173, 0, 174, 175, 586, 0, 348, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	0, 186, 187, 0, 188, 189, 190, 0, 191, 460,
	349, 192, 193, 194, 195, 599, 600, 601, 0, 569,
	0, 196, 461, 197, 462, 198, 199, 200, 201, 202,
	0, 0, 203, 587, 463, 204, 464, 0, 205, 206,
	410, 0, 0, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 411, 355,
	465, 356, 221, 222, 357, 532, 223, 224, 225, 558,
	584, 226, 602, 227, 228, 229, 0, 230, 0, 0,
	231, 232, 0, 0, 233, 360, 466, 234, 467, 579,
	235, 236, 237, 238, 239, 240, 241, 0, 242, 243,
	580, 244, 363, 247, 245, 246, 0, 248, 249, 250,
	251, 252, 253, 254, 255, 603, 256, 257, 258, 259,
	0, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 0, 271, 272, 468, 273, 274, 547, 275,
	0, 276, 277, 278, 279, 280, 0, 281, 282, 283,
	284, 412, 575, 285, 286, 287, 288, 469, 289, 290,
	604, 291, 0, 292, 293, 294, 295, 296, 297, 298,
	299, 367, 300, 0, 581, 0, 301, 302, 0, 303,
	304, 0, 414, 605, 0, 0, 413, 305, 582, 306,
	583, 556, 307, 308, 309, 310, 311, 312, 313, 0,
	535, 314, 315, 316, 317, 318, 576, 0, 319, 320,
	321, 322, 372, 606, 0, 323, 470, 324, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 330, 331, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 0, 0, 0, 0, 531, 0, 0, 539,
	1412, 562, 550, 551, 552, 549, 538, 0, 0, 0,
	0, 0, 0, 89, 90, 91, 92, 93, 94, 95,
	0, 96, 97, 98, 0, 0, 0, 0, 544, 0,
	0, 99, 100, 0, 101, 102, 453, 103, 104, 105,
	332, 589, 454, 590, 0, 591, 592, 0, 106, 337,
	107, 108, 109, 110, 559, 577, 111, 593, 594, 112,
	0, 113, 114, 115, 116, 585, 0, 570, 0, 117,
	118, 119, 120, 121, 0, 456, 122, 123, 124, 0,
	125, 126, 127, 128, 129, 130, 0, 0, 457, 131,
	132, 133, 0, 571, 573, 0, 572, 574, 134, 135,
	136, 137, 138, 595, 139, 140, 596, 597, 141, 0,
	142, 0, 143, 144, 145, 146, 147, 0, 148, 149,
	150, 0, 0, 151, 588, 153, 154, 0, 155, 156,
	157, 0, 158, 0, 159, 0, 160, 161, 543, 162,
	163, 164, 578, 557, 165, 0, 166, 167, 598, 168,
	0, 169, 0, 170, 458, 0, 459, 171, 172, 173,
	0, 174, 175, 586, 0, 348, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 0, 186, 187,
	0, 188, 189, 190, 0, 191, 460, 349, 192, 193,
	194, 195, 599, 600, 601, 0, 569, 0, 196, 461,
	197, 462, 198, 199, 200, 201, 202, 0, 0, 203,
	587, 463, 204, 464, 0, 205, 206, 410, 0, 0,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 411, 355, 465, 356, 221,
	222, 357, 532, 223, 224, 225, 558, 584, 226, 602,
	227, 228, 229, 0, 230, 0, 0, 231, 232, 0,
	0, 233, 360, 466, 234, 467, 579, 235, 236, 237,
	238, 239, 240, 241, 0, 242, 243, 580, 244, 363,
	247, 245, 246, 0, 248, 249, 250, 251, 252, 253,
	254, 255, 603, 256, 257, 258, 259, 0, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 0,
	271, 272, 468, 273, 274, 547, 275, 0, 276, 277,
	278, 279, 280, 0, 281, 282, 283, 284, 412, 575,
	285, 286, 287, 288, 469, 289, 290, 604, 291, 0,
	292, 293, 294, 295, 296, 297, 298, 299, 367, 300,
	0, 581, 0, 301, 302, 0, 303, 304, 0, 414,
	605, 0, 0, 413, 305, 582, 306, 583, 556, 307,
	308, 309, 310, 311, 312, 313, 0, 535, 314, 315,
	316, 317, 318, 576, 0, 319, 320, 321, 322, 372,
	606, 0, 323, 470, 324, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 330, 331, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 0,
	0, 0, 0, 531, 0, 0, 539, 1086, 562, 550,
	551, 552, 549, 538, 0, 0, 0, 0, 0, 0,
	89, 90, 91, 92, 93, 94, 95, 0, 96, 97,
	98, 0, 0, 0, 0, 544, 0, 0, 99, 100,
	0, 101, 102, 453, 103, 104, 105, 332, 589, 454,
	590, 0, 591, 592, 0, 106, 337, 107, 108, 109,
	110, 559, 577, 111, 593, 594, 112, 0, 113, 114,
	115, 116, 585, 0, 570, 0, 117, 118, 119, 120,
	121, 0, 456, 122, 123, 124, 0, 125, 126, 127,
	128, 129, 130, 0, 0, 457, 131, 132, 133, 0,
	571, 573, 0, 572, 574, 134, 135, 136, 137, 138,
	595, 139, 140, 596, 597, 141, 0, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 588, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 543, 162, 163, 164, 578,
	557, 165, 0, 166, 167, 598, 168, 0, 169, 0,
	170, 458, 0, 459, 171, 172, 173, 0, 174, 175,
	586, 0, 348, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 460, 349, 192, 193, 194, 195, 599,
	600, 601, 0, 569, 0, 196, 461, 197, 462, 198,
	199, 200, 201, 202, 0, 0, 203, 587, 463, 204,
	464, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 465, 356, 221, 222, 357, 532,
	223, 224, 225, 558, 584, 226, 602, 227, 228, 229,
	0, 230, 0, 0, 231, 232, 0, 0, 233, 360,
	466, 234, 467, 579, 235, 236, 237, 238, 239, 240,
	241, 0, 242, 243, 580, 244, 363, 247, 245, 246,
	0, 248, 249, 250, 251, 252, 253, 254, 255, 603,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 468,
	273, 274, 547, 275, 0, 276, 277, 278, 279, 280,
	0, 281, 282, 283, 284, 412, 575, 285, 286, 287,
	288, 469, 289, 290, 604, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 581, 0,
	301, 302, 0, 303, 304, 0, 414, 605, 0, 0,
	413, 305, 582, 306, 583, 556, 307, 308, 309, 310,
	311, 312, 313, 0, 535, 314, 315, 316, 317, 318,
	576, 0, 319, 320, 321, 322, 372, 606, 0, 323,
	470, 324, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 330, 331, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 530, 0, 0, 0, 0,
	531, 856, 1082, 539, 562, 550, 551, 552, 549, 538,
	0, 0, 0, 0, 0, 0, 89, 90, 91, 92,
	93, 94, 95, 0, 96, 97, 98, 0, 0, 0,
	0, 544, 0, 0, 99, 100, 0, 101, 102, 453,
	103, 104, 105, 332, 589, 454, 590, 0, 591, 592,
	0, 106, 337, 107, 108, 109, 110, 559, 577, 111,
	593, 594, 112, 0, 113, 114, 115, 116, 585, 0,
	570, 0, 117, 118, 119, 120, 121, 0, 456, 122,
	123, 124, 0, 125, 126, 127, 128, 129, 130, 0,
	0, 457, 131, 132, 133, 0, 571, 573, 0, 572,
	574, 134, 135, 136, 137, 138, 595, 139, 140, 596,
	597, 141, 0, 142, 0, 143, 144, 145, 146, 147,
	0, 148, 149, 150, 0, 0, 151, 588, 153, 154,
	0, 155, 156, 157, 0, 158, 0, 159, 0, 160,
	161, 543, 162, 163, 164, 578, 557, 165, 0, 166,
	167, 598, 168, 0, 169, 0, 170, 458, 0, 459,
	171, 172, 173, 0, 174, 175, 586, 0, 348, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	0, 186, 187, 0, 188, 189, 190, 0, 191, 460,
	349, 192, 193, 194, 195, 599, 600, 601, 0, 569,
	0, 196, 461, 197, 462, 198, 199, 200, 201, 202,
	0, 0, 203, 587, 463, 204, 464, 0, 205, 206,
	410, 0, 0, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 411, 355,
	465, 356, 221, 222, 357, 532, 223, 224, 225, 558,
	584, 226, 602, 227, 228, 229, 0, 230, 0, 0,
	231, 232, 0, 0, 233, 360, 466, 234, 467, 579,
	235, 236, 237, 238, 239, 240, 241, 0, 242, 243,
	580, 244, 363, 247, 245, 246, 0, 248, 249, 250,
	251, 252, 253, 254, 255, 603, 256, 257, 258, 259,
	0, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 0, 271, 272, 468, 273, 274, 547, 275,
	0, 276, 277, 278, 279, 280, 0, 281, 282, 283,
	284, 412, 575, 285, 286, 287, 288, 469, 289, 290,
	604, 291, 0, 292, 293, 294, 295, 296, 297, 298,
	299, 367, 300, 0, 581, 0, 301, 302, 0, 303,
	304, 0, 414, 605, 0, 0, 413, 305, 582, 306,
	583, 556, 307, 308, 309, 310, 311, 312, 313, 0,
	535, 314, 315, 316, 317, 318, 576, 0, 319, 320,
	321, 322, 372, 606, 1418, 323, 470, 324, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 330, 331, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 0, 0, 0, 0, 531, 0, 0, 539,
	562, 550, 551, 552, 549, 538, 0, 0, 0, 0,
	0, 0, 89, 90, 91, 92, 93, 94, 95, 0,
	96, 97, 98, 0, 0, 0, 0, 544, 0, 0,
	99, 100, 0, 101, 102, 453, 103, 104, 105, 332,
	589, 454, 590, 0, 591, 592, 0, 106, 337, 107,
	108, 109, 110, 559, 577, 111, 593, 594, 112, 0,
	113, 114, 115, 116, 585, 0, 570, 0, 117, 118,
	119, 120, 121, 0, 456, 122, 123, 124, 0, 125,
	126, 127, 128, 129, 130, 0, 0, 457, 131, 132,
	133, 0, 571, 573, 0, 572, 574, 134, 135, 136,
	137, 138, 595, 139, 140, 596, 597, 141, 626, 142,
	0, 143, 144, 145, 146, 147, 0, 148, 149, 150,
	0, 0, 151, 588, 153, 154, 0, 155, 156, 157,
	0, 158, 0, 159, 0, 160, 161, 543, 162, 163,
	164, 578, 557, 165, 0, 166, 167, 598, 168, 0,
	169, 0, 170, 458, 0, 459, 171, 172, 173, 0,
	174, 175, 586, 0, 348, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 0, 186, 187, 0,
	188, 189, 190, 0, 191, 460, 349, 192, 193, 194,
	195, 599, 600, 601, 0, 569, 0, 196, 461, 197,
	462, 198, 199, 200, 201, 202, 0, 0, 203, 587,
	463, 204, 464, 0, 205, 206, 410, 0, 0, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 411, 355, 465, 356, 221, 222,
	357, 532, 223, 224, 225, 558, 584, 226, 602, 227,
	228, 229, 0, 230, 0, 0, 231, 232, 0, 0,
	233, 360, 466, 234, 467, 579, 235, 236, 237, 238,
	239, 240, 241, 0, 242, 243, 580, 244, 363, 247,
	245, 246, 0, 248, 249, 250, 251, 252, 253, 254,
	255, 603, 256, 257, 258, 259, 0, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 0, 271,
	272, 468, 273, 274, 547, 275, 0, 276, 277, 278,
	279, 280, 0, 281, 282, 283, 284, 412, 575, 285,
	286, 287, 288, 469, 289, 290, 604, 291, 0, 292,
	293, 294, 295, 296, 297, 298, 299, 367, 300, 0,
	581, 0, 301, 302, 0, 303, 304, 0, 414, 605,
	0, 0, 413, 305, 582, 306, 583, 556, 307, 308,
	309, 310, 311, 312, 313, 0, 535, 314, 315, 316,
	317, 318, 576, 0, 319, 320, 321, 322, 372, 606,
	0, 323, 470, 324, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 330, 331, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 0, 0,
	0, 0, 531, 0, 0, 539, 562, 550, 551, 552,
	549, 538, 0, 0, 0, 0, 0, 0, 89, 90,
	91, 92, 93, 94, 95, 0, 96, 97, 98, 0,
	0, 0, 0, 544, 0, 0, 99, 100, 0, 101,
	102, 453, 103, 104, 105, 332, 589, 454, 590, 0,
	591, 592, 0, 106, 337, 107, 108, 109, 110, 559,
	577, 111, 593, 594, 112, 0, 113, 114, 115, 116,
	585, 0, 570, 0, 117, 118, 119, 120, 121, 0,
	456, 122, 123, 124, 0, 125, 126, 127, 128, 129,
	130, 0, 0, 457, 131, 132, 133, 0, 571, 573,
	0, 572, 574, 134, 135, 136, 137, 138, 595, 139,
	140, 596, 597, 141, 0, 142, 0, 143, 144, 145,
	146, 147, 0, 148, 149, 150, 0, 0, 151, 588,
	153, 154, 0, 155, 156, 157, 0, 158, 0, 159,
	0, 160, 161, 543, 162, 163, 164, 578, 557, 165,
	0, 166, 167, 598, 168, 0, 169, 0, 170, 458,
	1138, 459, 171, 172, 173, 0, 174, 175, 586, 0,
	348, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 0, 186, 187, 0, 188, 189, 190, 0,
	191, 460, 349, 192, 193, 194, 195, 599, 600, 601,
	0, 569, 0, 196, 461, 197, 462, 198, 199, 200,
	201, 202, 0, 0, 203, 587, 463, 204, 464, 0,
	205, 206, 410, 0, 0, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	411, 355, 465, 356, 221, 222, 357, 532, 223, 224,
	225, 558, 584, 226, 602, 227, 228, 229, 0, 230,
	0, 0, 231, 232, 0, 0, 233, 360, 466, 234,
	467, 579, 235, 236, 237, 238, 239, 240, 241, 0,
	242, 243, 580, 244, 363, 247, 245, 246, 0, 248,
	249, 250, 251, 252, 253, 254, 255, 603, 256, 257,
	258, 259, 0, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 0, 271, 272, 468, 273, 274,
	547, 275, 0, 276, 277, 278, 279, 280, 0, 281,
	282, 283, 284, 412, 575, 285, 286, 287, 288, 469,
	289, 290, 604, 291, 0, 292, 293, 294, 295, 296,
	297, 298, 299, 367, 300, 0, 581, 0, 301, 302,
	0, 303, 304, 0, 414, 605, 0, 0, 413, 305,
	582, 306, 583, 556, 307, 308, 309, 310, 311, 312,
	313, 0, 535, 314, 315, 316, 317, 318, 576, 0,
	319, 320, 321, 322, 372, 606, 0, 323, 470, 324,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 330,
	331, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 0, 0, 0, 0, 531, 0,
	0, 539, 562, 550, 551, 552, 549, 538, 0, 0,
	0, 0, 0, 0, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 544,
	0, 0, 99, 100, 0, 101, 102, 453, 103, 104,
	105, 332, 589, 454, 590, 0, 591, 592, 0, 106,
	337, 107, 108, 109, 110, 559, 577, 111, 593, 594,
	112, 0, 113, 114, 115, 116, 585, 0, 570, 0,
	117, 118, 119, 120, 121, 0, 456, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 457,
	131, 132, 133, 0, 571, 573, 0, 572, 574, 134,
	135, 136, 137, 138, 595, 139, 140, 596, 597, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 588, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 543,
	162, 163, 164, 578, 557, 165, 0, 166, 167, 598,
	168, 0, 169, 0, 170, 458, 0, 459, 171, 172,
	173, 0, 174, 175, 586, 0, 348, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 460, 349, 192,
	193, 194, 195, 599, 600, 601, 0, 569, 0, 196,
	461, 197, 462, 198, 199, 200, 201, 202, 0, 0,
	203, 587, 463, 204, 464, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 465, 356,
	221, 222, 357, 532, 223, 224, 225, 558, 584, 226,
	602, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 466, 234, 467, 579, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 580, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 603, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 468, 273, 274, 547, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	575, 285, 286, 287, 288, 469, 289, 290, 604, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 581, 0, 301, 302, 0, 303, 304, 0,
	414, 605, 0, 0, 413, 305, 582, 306, 583, 556,
	307, 308, 309, 310, 311, 312, 313, 0, 535, 314,
	315, 316, 317, 318, 576, 0, 319, 320, 321, 322,
	372, 606, 0, 323, 470, 324, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 330, 331, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 530,
	527, 0, 0, 0, 531, 0, 0, 539, 562, 550,
	551, 552, 549, 538, 0, 0, 0, 0, 0, 0,
	89, 90, 91, 92, 93, 94, 95, 794, 96, 97,
	98, 0, 0, 0, 0, 544, 0, 0, 99, 100,
	0, 101, 102, 453, 103, 104, 105, 332, 589, 454,
	590, 0, 591, 592, 0, 106, 337, 107, 108, 109,
	110, 559, 577, 111, 593, 594, 112, 0, 113, 114,
	115, 116, 585, 0, 570, 0, 117, 118, 119, 120,
	121, 0, 456, 122, 123, 124, 0, 125, 126, 127,
	128, 129, 130, 0, 0, 457, 131, 132, 133, 0,
	571, 573, 0, 572, 574, 134, 135, 136, 137, 138,
	595, 139, 140, 596, 597, 141, 0, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 588, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 543, 162, 163, 164, 578,
	557, 165, 0, 166, 167, 598, 168, 0, 169, 0,
	170, 458, 0, 459, 171, 172, 173, 0, 174, 175,
	586, 0, 348, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 460, 349, 192, 193, 194, 195, 599,
	600, 601, 0, 569, 0, 196, 461, 197, 462, 198,
	199, 200, 201, 202, 0, 0, 203, 587, 463, 204,
	464, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 465, 356, 221, 222, 357, 532,
	223, 224, 225, 558, 584, 226, 602, 227, 228, 229,
	0, 230, 0, 0, 231, 232, 0, 0, 233, 360,
	466, 234, 467, 579, 235, 236, 237, 238, 239, 240,
	241, 0, 242, 243, 580, 244, 363, 247, 245, 246,
	0, 248, 249, 250, 251, 252, 253, 254, 255, 603,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 468,
	273, 274, 547, 275, 0, 276, 277, 278, 279, 280,
	0, 281, 282, 283, 284, 412, 575, 285, 286, 287,
	288, 469, 289, 290, 604, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 581, 0,
	301, 302, 0, 303, 304, 0, 414, 605, 0, 0,
	413, 305, 582, 306, 583, 556, 307, 308, 309, 310,
	311, 312, 313, 0, 535, 314, 315, 316, 317, 318,
	576, 0, 319, 320, 321, 322, 372, 606, 0, 323,
	470, 324, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 330, 331, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 530, 0, 0, 0, 0,
	531, 0, 0, 539, 562, 550, 551, 552, 549, 538,
	0, 0, 0, 0, 0, 0, 89, 90, 91, 92,
	93, 94, 95, 0, 96, 97, 98, 0, 0, 0,
	0, 544, 0, 0, 99, 100, 0, 101, 102, 453,
	103, 104, 105, 332, 589, 454, 590, 0, 591, 592,
	0, 106, 337, 107, 108, 109, 110, 559, 577, 111,
	593, 594, 112, 0, 113, 114, 115, 116, 585, 0,
	570, 0, 117, 118, 119, 120, 121, 0, 456, 122,
	123, 124, 0, 125, 126, 127, 128, 129, 130, 0,
	0, 457, 131, 132, 1727, 0, 571, 573, 0, 572,
	574, 134, 135, 136, 137, 138, 595, 139, 140, 596,
	597, 141, 0, 142, 0, 143, 144, 145, 146, 147,
	0, 148, 149, 150, 0, 0, 151, 588, 153, 154,
	0, 155, 156, 157, 0, 158, 0, 159, 0, 160,
	161, 543, 162, 163, 164, 578, 557, 165, 0, 166,
	167, 598, 168, 0, 169, 0, 170, 458, 0, 459,
	171, 172, 173, 0, 174, 175, 586, 0, 348, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	0, 186, 187, 0, 188, 189, 190, 0, 191, 460,
	349, 192, 193, 194, 195, 599, 600, 601, 0, 569,
	0, 196, 461, 197, 462, 198, 199, 200, 201, 202,
	0, 0, 203, 587, 463, 204, 464, 0, 205, 206,
	410, 0, 0, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 411, 355,
	465, 356, 221, 222, 357, 532, 223, 224, 225, 558,
	584, 226, 602, 227, 228, 229, 0, 230, 0, 0,
	231, 232, 0, 0, 233, 360, 466, 234, 467, 579,
	235, 236, 237, 238, 239, 240, 241, 0, 242, 243,
	580, 244, 363, 247, 245, 246, 0, 248, 249, 250,
	251, 252, 253, 254, 255, 603, 256, 257, 258, 259,
	0, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 0, 271, 272, 468, 273, 274, 547, 275,
	0, 276, 277, 278, 279, 280, 0, 281, 282, 283,
	284, 412, 575, 285, 286, 287, 288, 469, 289, 290,
	604, 291, 0, 292, 293, 294, 295, 296, 297, 298,
	299, 367, 300, 0, 581, 0, 301, 302, 0, 303,
	304, 0, 414, 605, 0, 0, 413, 305, 582, 306,
	583, 556, 307, 308, 309, 310, 1726, 312, 313, 0,
	535, 314, 315, 316, 317, 318, 576, 0, 319, 320,
	321, 322, 372, 606, 0, 323, 470, 324, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 330, 331, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 0, 0, 0, 0, 531, 0, 0, 539,
	562, 550, 551, 552, 549, 538, 0, 0, 0, 0,
	0, 0, 89, 90, 91, 92, 93, 94, 95, 0,
	96, 97, 98, 0, 0, 0, 0, 544, 0, 0,
	99, 100, 0, 101, 102, 453, 103, 104, 105, 1725,
	589, 454, 590, 0, 591, 592, 0, 106, 337, 107,
	108, 109, 110, 559, 577, 111, 593, 594, 112, 0,
	113, 114, 115, 116, 585, 0, 570, 0, 117, 118,
	119, 120, 121, 0, 456, 122, 123, 124, 0, 125,
	126, 127, 128, 129, 130, 0, 0, 457, 131, 132,
	1727, 0, 571, 573, 0, 572, 574, 134, 135, 136,
	137, 138, 595, 139, 140, 596, 597, 141, 0, 142,
	0, 143, 144, 145, 146, 147, 0, 148, 149, 150,
	0, 0, 151, 588, 153, 154, 0, 155, 156, 157,
	0, 158, 0, 159, 0, 160, 161, 543, 162, 163,
	164, 578, 557, 165, 0, 166, 167, 598, 168, 0,
	169, 0, 170, 458, 0, 459, 171, 172, 173, 0,
	174, 175, 586, 0, 348, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 0, 186, 187, 0,
	188, 189, 190, 0, 191, 460, 349, 192, 193, 194,
	195, 599, 600, 601, 0, 569, 0, 196, 461, 197,
	462, 198, 199, 200, 201, 202, 0, 0, 203, 587,
	463, 204, 464, 0, 205, 206, 410, 0, 0, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 411, 355, 465, 356, 221, 222,
	357, 532, 223, 224, 225, 558, 584, 226, 602, 227,
	228, 229, 0, 230, 0, 0, 231, 232, 0, 0,
	233, 360, 466, 234, 467, 579, 235, 236, 237, 238,
	239, 240, 241, 0, 242, 243, 580, 244, 363, 247,
	245, 246, 0, 248, 249, 250, 251, 252, 253, 254,
	255, 603, 256, 257, 258, 259, 0, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 0, 271,
	272, 468, 273, 274, 547, 275, 0, 276, 277, 278,
	279, 280, 0, 281, 282, 283, 284, 412, 575, 285,
	286, 287, 288, 469, 289, 290, 604, 291, 0, 292,
	293, 294, 295, 296, 297, 298, 299, 367, 300, 0,
	581, 0, 301, 302, 0, 303, 304, 0, 414, 605,
	0, 0, 413, 305, 582, 306, 583, 556, 307, 308,
	309, 310, 1726, 312, 313, 0, 535, 314, 315, 316,
	317, 318, 576, 0, 319, 320, 321, 322, 372, 606,
	0, 323, 470, 324, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 330, 331, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 0, 0,
	0, 0, 531, 0, 0, 539, 562, 550, 551, 552,
	549, 538, 0, 0, 0, 0, 0, 0, 89, 90,
	91, 92, 93, 94, 95, 0, 96, 97, 98, 0,
	0, 0, 0, 544, 0, 0, 99, 100, 0, 101,
	102, 453, 103, 104, 105, 332, 589, 454, 590, 0,
	591, 592, 0, 106, 337, 107, 108, 109, 110, 559,
	577, 111, 593, 594, 112, 0, 113, 114, 115, 116,
	585, 0, 570, 0, 117, 118, 119, 120, 121, 0,
	456, 122, 123, 124, 0, 125, 126, 127, 128, 129,
	130, 0, 0, 457, 131, 132, 133, 0, 571, 573,
	0, 572, 574, 134, 135, 136, 137, 138, 595, 139,
	140, 596, 597, 141, 0, 142, 0, 143, 144, 145,
	146, 147, 0, 148, 149, 150, 0, 0, 151, 588,
	153, 154, 0, 155, 156, 157, 0, 158, 0, 159,
	0, 160, 161, 543, 162, 163, 164, 578, 557, 165,
	0, 166, 167, 598, 168, 0, 169, 0, 170, 458,
	0, 459, 171, 172, 173, 0, 174, 175, 586, 0,
	348, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 0, 186, 187, 0, 188, 189, 190, 0,
	191, 460, 349, 192, 193, 194, 195, 599, 600, 601,
	0, 569, 0, 196, 461, 197, 462, 198, 199, 200,
	201, 202, 0, 0, 203, 587, 463, 204, 464, 0,
	205, 206, 410, 0, 0, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	411, 355, 465, 356, 221, 222, 357, 532, 223, 224,
	225, 558, 584, 226, 602, 227, 228, 229, 0, 230,
	0, 0, 231, 232, 0, 0, 233, 360, 466, 234,
	467, 579, 235, 236, 237, 238, 239, 240, 241, 0,
	242, 243, 580, 244, 363, 247, 245, 246, 0, 248,
	249, 250, 251, 252, 253, 254, 255, 603, 256, 257,
	258, 259, 0, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 0, 271, 272, 468, 273, 274,
	547, 275, 0, 276, 277, 278, 279, 280, 0, 281,
	282, 283, 284, 412, 575, 285, 286, 287, 288, 469,
	289, 290, 604, 291, 0, 292, 293, 294, 295, 296,
	297, 298, 299, 367, 300, 0, 581, 0, 301, 302,
	0, 303, 304, 0, 414, 605, 0, 0, 413, 305,
	582, 306, 583, 556, 307, 308, 309, 310, 311, 312,
	313, 0, 535, 314, 315, 316, 317, 318, 576, 0,
	319, 320, 321, 322, 372, 606, 0, 323, 470, 324,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 330,
	331, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 0, 0, 0, 0, 531, 0,
	0, 539, 562, 550, 551, 552, 549, 538, 0, 0,
	0, 0, 0, 0, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 544,
	0, 0, 99, 100, 0, 101, 102, 453, 103, 104,
	105, 332, 589, 454, 590, 0, 591, 592, 0, 106,
	337, 107, 108, 109, 110, 559, 577, 111, 593, 594,
	112, 0, 113, 114, 115, 116, 585, 0, 570, 0,
	117, 118, 119, 120, 121, 0, 456, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 457,
	131, 132, 133, 0, 571, 573, 0, 572, 574, 134,
	135, 136, 137, 138, 595, 139, 140, 596, 597, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 588, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 543,
	162, 163, 164, 578, 557, 165, 0, 166, 167, 598,
	168, 0, 169, 0, 170, 458, 0, 459, 171, 172,
	173, 0, 174, 175, 586, 0, 348, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 460, 349, 192,
	193, 194, 195, 599, 600, 601, 0, 569, 0, 196,
	461, 197, 462, 198, 199, 200, 201, 202, 0, 0,
	203, 587, 463, 204, 464, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 465, 356,
	221, 222, 357, 0, 223, 224, 225, 558, 584, 226,
	602, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 466, 234, 467, 579, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 580, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 603, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 468, 273, 274, 1128, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	575, 285, 286, 287, 288, 469, 289, 290, 604, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 581, 0, 301, 302, 0, 303, 304, 0,
	414, 605, 0, 0, 413, 305, 582, 306, 583, 556,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 314,
	315, 316, 317, 318, 576, 0, 319, 320, 321, 322,
	372, 606, 0, 323, 470, 324, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1124, 1125,
	0, 0, 0, 0, 1126, 0, 0, 1127, 562, 550,
	551, 552, 549, 538, 0, 0, 0, 0, 0, 0,
	89, 90, 91, 92, 93, 94, 95, 0, 96, 97,
	98, 0, 0, 0, 0, 544, 0, 0, 99, 100,
	0, 101, 102, 453, 103, 104, 105, 0, 589, 454,
	590, 0, 591, 592, 0, 106, 337, 107, 108, 109,
	110, 559, 577, 111, 593, 594, 112, 0, 113, 114,
	115, 116, 585, 0, 570, 0, 117, 118, 119, 120,
	121, 0, 456, 122, 123, 124, 0, 125, 126, 127,
	128, 129, 130, 0, 0, 457, 131, 132, 1727, 0,
	571, 573, 0, 572, 574, 134, 135, 136, 137, 138,
	595, 139, 140, 596, 597, 141, 0, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 588, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 543, 162, 163, 164, 578,
	557, 165, 0, 166, 167, 598, 168, 0, 169, 0,
	170, 458, 0, 459, 171, 172, 173, 0, 174, 175,
	586, 0, 348, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 460, 349, 192, 193, 194, 195, 599,
	600, 601, 0, 569, 0, 196, 0, 197, 462, 198,
	199, 200, 201, 202, 0, 0, 203, 587, 463, 204,
	0, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 465, 356, 221, 222, 357, 532,
	223, 224, 225, 558, 584, 226, 602, 227, 228, 229,
	0, 230, 0, 0, 231, 232, 0, 0, 233, 360,
	466, 234, 467, 579, 235, 236, 237, 238, 239, 240,
	241, 0, 242, 243, 580, 244, 363, 247, 245, 246,
	0, 248, 249, 250, 251, 252, 253, 254, 255, 603,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 468,
	273, 274, 547, 275, 0, 276, 277, 278, 279, 280,
	0, 281, 282, 283, 284, 412, 575, 285, 286, 287,
	288, 0, 289, 290, 604, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 581, 0,
	301, 302, 0, 303, 304, 0, 414, 605, 0, 0,
	413, 305, 582, 306, 583, 556, 307, 308, 309, 310,
	1726, 312, 313, 0, 535, 314, 315, 316, 317, 318,
	576, 0, 319, 320, 321, 322, 372, 606, 0, 323,
	470, 324, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 0, 529, 530, 0, 0, 0, 0,
	531, 0, 0, 539, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 0,
	0, 0, 99, 100, 0, 101, 102, 453, 103, 104,
	105, 332, 333, 454, 334, 0, 335, 336, 0, 106,
	337, 107, 108, 109, 110, 0, 577, 111, 338, 339,
	112, 0, 113, 114, 115, 116, 585, 0, 570, 0,
	117, 118, 119, 120, 121, 0, 456, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 457,
	131, 132, 133, 0, 571, 573, 0, 572, 574, 134,
	135, 136, 137, 138, 341, 139, 140, 342, 343, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 152, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 344,
	162, 163, 164, 578, 0, 165, 0, 166, 167, 346,
	168, 0, 169, 0, 170, 458, 0, 459, 171, 172,
	173, 0, 174, 175, 586, 0, 348, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 460, 349, 192,
	193, 194, 195, 350, 351, 352, 0, 353, 0, 196,
	461, 197, 462, 198, 199, 200, 201, 202, 0, 0,
	203, 587, 463, 204, 464, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 465, 356,
	221, 222, 357, 0, 223, 224, 225, 0, 584, 226,
	359, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 466, 234, 467, 579, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 580, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 364, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 468, 273, 274, 365, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	575, 285, 286, 287, 288, 469, 289, 290, 366, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 581, 0, 301, 302, 0, 303, 304, 0,
	414, 369, 0, 0, 413, 305, 582, 306, 583, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 314,
	315, 316, 317, 318, 576, 0, 319, 320, 321, 322,
	372, 373, 0, 323, 470, 324, 0, 0, 448, 0,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 0,
	89, 90, 91, 92, 93, 94, 95, 0, 96, 97,
	98, 0, 0, 0, 0, 0, 0, 1528, 99, 100,
	0, 101, 102, 453, 103, 104, 105, 332, 333, 454,
	334, 0, 335, 336, 0, 106, 337, 107, 108, 109,
	110, 0, 0, 111, 338, 339, 112, 0, 113, 114,
	115, 116, 340, 0, 455, 0, 117, 118, 119, 120,
	121, 0, 456, 122, 123, 124, 0, 125, 126, 127,
	128, 129, 130, 0, 0, 457, 131, 132, 133, 0,
	0, 0, 0, 0, 0, 134, 135, 136, 137, 138,
	341, 139, 140, 342, 343, 141, 0, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 152, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 344, 162, 163, 164, 345,
	0, 165, 0, 166, 167, 346, 168, 0, 169, 0,
	170, 458, 0, 459, 171, 172, 173, 0, 174, 175,
	347, 0, 348, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 460, 349, 192, 193, 194, 195, 350,
	351, 352, 0, 353, 0, 196, 461, 197, 462, 198,
	199, 200, 201, 202, 0, 0, 203, 354, 463, 204,
	464, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 465, 356, 221, 222, 357, 0,
	223, 224, 225, 0, 358, 226, 359, 227, 228, 229,
	0, 230, 0, 0, 231, 232, 0, 0, 233, 360,
	466, 234, 467, 361, 235, 236, 237, 238, 239, 240,
	241, 0, 242, 243, 362, 244, 363, 247, 245, 246,
	0, 248, 249, 250, 251, 252, 253, 254, 255, 364,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 468,
	273, 274, 365, 275, 0, 276, 277, 278, 279, 280,
	43, 281, 282, 283, 284, 412, 0, 285, 286, 287,
	288, 469, 289, 290, 366, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 368, 0,
	301, 302, 45, 303, 304, 0, 414, 369, 0, 0,
	413, 305, 370, 306, 371, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 314, 315, 316, 317, 318,
	0, 0, 319, 320, 321, 322, 452, 373, 0, 323,
	470, 324, 0, 0, 0, 41, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 42, 0, 0, 0, 0,
	0, 0, 448, 671, 675, 0, 676, 666, 0, 0,
	0, 0, 0, 40, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 0,
	0, 0, 99, 100, 0, 101, 102, 453, 103, 104,
	105, 332, 333, 454, 334, 0, 335, 336, 0, 106,
	337, 107, 108, 109, 110, 0, 0, 111, 338, 339,
	112, 0, 113, 114, 115, 116, 340, 0, 455, 0,
	117, 118, 119, 120, 121, 0, 456, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 457,
	131, 132, 133, 0, 0, 0, 0, 0, 0, 134,
	135, 136, 137, 138, 341, 139, 140, 342, 343, 141,
	679, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 152, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 344,
	162, 163, 164, 345, 668, 165, 0, 166, 167, 346,
	168, 0, 169, 0, 170, 458, 0, 459, 171, 172,
	173, 0, 174, 175, 347, 0, 348, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 460, 349, 192,
	193, 194, 195, 350, 351, 352, 0, 353, 0, 196,
	461, 197, 462, 198, 199, 200, 201, 202, 0, 0,
	203, 354, 463, 204, 464, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 465, 356,
	221, 222, 357, 0, 223, 224, 225, 0, 358, 226,
	359, 227, 228, 229, 0, 230, 669, 0, 231, 232,
	0, 0, 233, 360, 466, 234, 467, 361, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 362, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 364, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 468, 273, 274, 365, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	0, 285, 286, 287, 288, 469, 289, 290, 366, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 368, 0, 301, 302, 0, 303, 304, 0,
	414, 369, 0, 0, 413, 305, 370, 306, 371, 667,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 314,
	315, 316, 317, 318, 0, 0, 319, 320, 321, 322,
	372, 373, 0, 323, 470, 324, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 330, 331, 0, 448, 671,
	675, 0, 676, 666, 0, 0, 0, 0, 677, 672,
	89, 90, 91, 92, 93, 94, 95, 0, 96, 97,
	98, 0, 0, 0, 0, 0, 0, 0, 99, 100,
	0, 101, 102, 453, 103, 104, 105, 332, 333, 454,
	334, 0, 335, 336, 0, 106, 337, 107, 108, 109,
	110, 0, 0, 111, 338, 339, 112, 0, 113, 114,
	115, 116, 340, 0, 455, 0, 117, 118, 119, 120,
	121, 0, 456, 122, 123, 124, 0, 125, 126, 127,
	128, 129, 130, 0, 0, 457, 131, 132, 133, 0,
	0, 0, 0, 0, 0, 134, 135, 136, 137, 138,
	341, 139, 140, 342, 343, 141, 662, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 152, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 344, 162, 163, 164, 345,
	668, 165, 0, 166, 167, 346, 168, 0, 169, 0,
	170, 458, 0, 459, 171, 172, 173, 0, 174, 175,
	347, 0, 348, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 460, 349, 192, 193, 194, 195, 350,
	351, 352, 0, 353, 0, 196, 461, 197, 462, 198,
	199, 200, 201, 202, 0, 0, 203, 354, 463, 204,
	464, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 465, 356, 221, 222, 357, 0,
	223, 224, 225, 0, 358, 226, 359, 227, 228, 229,
	0, 230, 669, 0, 231, 232, 0, 0, 233, 360,
	466, 234, 467, 361, 235, 236, 237, 238, 239, 240,
	241, 0, 242, 243, 362, 244, 363, 247, 245, 246,
	0, 248, 249, 250, 251, 252, 253, 254, 255, 364,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 468,
	273, 274, 365, 275, 0, 276, 277, 278, 279, 280,
	0, 281, 282, 283, 284, 412, 0, 285, 286, 287,
	288, 469, 289, 290, 366, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 368, 0,
	301, 302, 0, 303, 304, 0, 414, 369, 0, 0,
	413, 305, 370, 306, 371, 667, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 314, 315, 316, 317, 318,
	0, 0, 319, 320, 321, 322, 372, 373, 0, 323,
	470, 324, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 330, 331, 0, 448, 671, 675, 0, 676, 666,
	0, 0, 0, 0, 677, 672, 89, 90, 91, 92,
	93, 94, 95, 0, 96, 97, 98, 0, 0, 0,
	0, 0, 0, 0, 99, 100, 0, 101, 102, 453,
	103, 104, 105, 332, 333, 454, 334, 0, 335, 336,
	0, 106, 337, 107, 108, 109, 110, 0, 0, 111,
	338, 339, 112, 0, 113, 114, 115, 116, 340, 0,
	455, 0, 117, 118, 119, 120, 121, 0, 456, 122,
	123, 124, 0, 125, 126, 127, 128, 129, 130, 0,
	0, 457, 131, 132, 133, 0, 0, 0, 0, 0,
	0, 134, 135, 136, 137, 138, 341, 139, 140, 342,
	343, 141, 0, 142, 0, 143, 144, 145, 146, 147,
	0, 148, 149, 150, 0, 0, 151, 152, 153, 154,
	0, 155, 156, 157, 0, 158, 0, 159, 0, 160,
	161, 344, 162, 163, 164, 345, 668, 165, 0, 166,
	167, 346, 168, 0, 169, 0, 170, 458, 0, 459,
	171, 172, 173, 0, 174, 175, 347, 0, 348, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	0, 186, 187, 0, 188, 189, 190, 0, 191, 460,
	349, 192, 193, 194, 195, 350, 351, 352, 0, 353,
	0, 196, 461, 197, 462, 198, 199, 200, 201, 202,
	0, 0, 203, 354, 463, 204, 464, 0, 205, 206,
	410, 0, 0, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 411, 355,
	465, 356, 221, 222, 357, 0, 223, 224, 225, 0,
	358, 226, 359, 227, 228, 229, 0, 230, 669, 0,
	231, 232, 0, 0, 233, 360, 466, 234, 467, 361,
	235, 236, 237, 238, 239, 240, 241, 0, 242, 243,
	362, 244, 363, 247, 245, 246, 0, 248, 249, 250,
	251, 252, 253, 254, 255, 364, 256, 257, 258, 259,
	0, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 0, 271, 272, 468, 273, 274, 365, 275,
	0, 276, 277, 278, 279, 280, 0, 281, 282, 283,
	284, 412, 0, 285, 286, 287, 288, 469, 289, 290,
	366, 291, 0, 292, 293, 294, 295, 296, 297, 298,
	299, 367, 300, 0, 368, 0, 301, 302, 0, 303,
	304, 0, 414, 369, 0, 0, 413, 305, 370, 306,
	371, 667, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 314, 315, 316, 317, 318, 0, 0, 319, 320,
	321, 322, 372, 373, 0, 323, 470, 324, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 330, 331, 0,
	86, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	677, 672, 89, 90, 91, 92, 93, 94, 95, 0,
	96, 97, 98, 0, 0, 0, 0, 0, 0, 0,
	99, 100, 0, 101, 102, 0, 103, 104, 105, 332,
	333, 0, 334, 0, 335, 336, 0, 106, 337, 107,
	108, 109, 110, 0, 0, 111, 338, 339, 112, 0,
	113, 114, 115, 116, 340, 0, 0, 0, 117, 118,
	119, 120, 121, 0, 0, 122, 123, 124, 0, 125,
	126, 127, 128, 129, 130, 0, 0, 0, 131, 132,
	133, 0, 0, 0, 0, 0, 0, 134, 135, 136,
	137, 138, 341, 139, 140, 342, 343, 141, 0, 142,
	0, 143, 144, 145, 146, 147, 0, 148, 149, 150,
	0, 0, 151, 152, 153, 154, 0, 155, 156, 157,
	0, 158, 0, 159, 0, 160, 161, 344, 162, 163,
	164, 345, 0, 165, 0, 166, 167, 346, 168, 0,
	169, 0, 170, 0, 0, 0, 171, 172, 173, 0,
	174, 175, 347, 0, 348, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 0, 186, 187, 0,
	188, 189, 190, 0, 191, 0, 349, 192, 193, 194,
	195, 350, 351, 352, 0, 353, 0, 196, 0, 197,
	0, 198, 199, 200, 201, 202, 0, 0, 203, 354,
	0, 204, 0, 0, 205, 206, 410, 0, 0, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 411, 355, 0, 356, 221, 222,
	357, 0, 223, 224, 225, 0, 358, 226, 359, 227,
	228, 229, 0, 230, 0, 423, 231, 232, 0, 0,
	233, 360, 0, 234, 0, 361, 235, 236, 237, 238,
	239, 240, 241, 0, 242, 243, 362, 244, 363, 247,
	245, 246, 0, 248, 249, 250, 251, 252, 253, 254,
	255, 364, 256, 257, 258, 259, 0, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 273, 274, 365, 275, 0, 276, 277, 278,
	279, 280, 43, 281, 282, 283, 284, 412, 0, 285,
	286, 287, 288, 0, 289, 290, 366, 291, 0, 292,
	293, 294, 295, 296, 297, 298, 299, 367, 300, 0,
	368, 0, 301, 302, 45, 303, 304, 0, 414, 369,
	0, 0, 413, 305, 370, 306, 371, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 314, 315, 316,
	317, 318, 0, 0, 319, 320, 321, 322, 452, 373,
	0, 323, 0, 324, 0, 0, 86, 41, 325, 326,
	327, 328, 329, 330, 331, 0, 0, 42, 89, 90,
	91, 92, 93, 94, 95, 0, 96, 97, 98, 0,
	0, 0, 0, 0, 0, 993, 99, 100, 0, 101,
	102, 0, 103, 104, 105, 332, 333, 0, 334, 0,
	335, 336, 0, 106, 337, 107, 108, 109, 110, 0,
	0, 111, 338, 339, 112, 0, 113, 114, 115, 116,
	340, 0, 0, 0, 117, 118, 119, 120, 121, 0,
	0, 122, 123, 124, 0, 125, 126, 127, 128, 129,
	130, 0, 0, 0, 131, 132, 133, 0, 0, 0,
	0, 0, 0, 134, 135, 136, 137, 138, 341, 139,
	140, 342, 343, 141, 0, 142, 0, 143, 144, 145,
	146, 147, 0, 148, 149, 150, 0, 0, 151, 152,
	153, 154, 0, 155, 156, 157, 0, 158, 0, 159,
	0, 160, 161, 344, 162, 163, 164, 345, 0, 165,
	0, 166, 167, 346, 168, 0, 169, 0, 170, 0,
	0, 0, 171, 172, 173, 0, 174, 175, 347, 0,
	348, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 0, 186, 187, 0, 188, 189, 190, 0,
	191, 0, 349, 192, 193, 194, 195, 350, 351, 352,
	0, 353, 0, 196, 0, 197, 0, 198, 199, 200,
	201, 202, 0, 0, 203, 354, 0, 204, 0, 0,
	205, 206, 410, 0, 0, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	411, 355, 0, 356, 221, 222, 357, 0, 223, 224,
	225, 0, 358, 226, 359, 227, 228, 229, 0, 230,
	0, 0, 231, 232, 0, 0, 233, 360, 0, 234,
	0, 361, 235, 236, 237, 238, 239, 240, 241, 0,
	242, 243, 362, 244, 363, 247, 245, 246, 0, 248,
	249, 250, 251, 252, 253, 254, 255, 364, 256, 257,
	258, 259, 0, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 273, 274,
	365, 275, 0, 276, 277, 278, 279, 280, 43, 281,
	282, 283, 284, 412, 0, 285, 286, 287, 288, 0,
	289, 290, 366, 291, 0, 292, 293, 294, 295, 296,
	297, 298, 299, 367, 300, 0, 368, 0, 301, 302,
	45, 303, 304, 0, 414, 369, 0, 0, 413, 305,
	370, 306, 371, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 314, 315, 316, 317, 318, 0, 0,
	319, 320, 321, 322, 452, 373, 0, 323, 0, 324,
	0, 0, 86, 41, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 42, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 0,
	1226, 40, 99, 100, 0, 101, 102, 0, 103, 104,
	105, 332, 333, 0, 334, 0, 335, 336, 0, 106,
	337, 107, 108, 109, 110, 0, 0, 111, 338, 339,
	112, 0, 113, 114, 115, 116, 340, 0, 0, 0,
	117, 118, 119, 120, 121, 0, 0, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 0,
	131, 132, 133, 0, 0, 0, 0, 0, 0, 134,
	135, 136, 137, 138, 341, 139, 140, 342, 343, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 152, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 344,
	162, 163, 164, 345, 0, 165, 0, 166, 167, 346,
	168, 0, 169, 0, 170, 0, 0, 0, 171, 172,
	173, 0, 174, 175, 347, 0, 348, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 0, 349, 192,
	193, 194, 195, 350, 351, 352, 0, 353, 0, 196,
	0, 197, 0, 198, 199, 200, 201, 202, 0, 0,
	203, 354, 0, 204, 0, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 0, 356,
	221, 222, 357, 0, 223, 224, 225, 0, 358, 226,
	359, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 0, 234, 0, 361, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 362, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 364, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 273, 274, 365, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	0, 285, 286, 287, 288, 0, 289, 290, 366, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 368, 0, 301, 302, 0, 303, 304, 0,
	414, 369, 0, 0, 413, 305, 370, 306, 371, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 314,
	315, 316, 317, 318, 0, 0, 319, 320, 321, 322,
	372, 373, 0, 323, 0, 324, 86, 0, 0, 0,
	325, 326, 327, 328, 329, 330, 331, 0, 89, 90,
	91, 92, 93, 94, 95, 0, 96, 97, 98, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 518, 101,
	102, 0, 103, 104, 105, 332, 333, 0, 334, 0,
	335, 336, 0, 106, 337, 107, 108, 109, 110, 0,
	0, 111, 338, 339, 112, 0, 113, 114, 115, 116,
	340, 0, 0, 0, 117, 118, 119, 120, 121, 0,
	0, 122, 123, 124, 0, 125, 126, 127, 128, 129,
	130, 0, 0, 0, 131, 132, 133, 0, 0, 0,
	0, 0, 0, 134, 135, 136, 137, 138, 341, 139,
	140, 342, 343, 141, 0, 142, 0, 143, 144, 145,
	146, 147, 0, 148, 149, 150, 0, 0, 151, 152,
	153, 154, 0, 155, 156, 157, 0, 158, 0, 159,
	0, 160, 161, 344, 162, 163, 164, 345, 0, 165,
	0, 166, 167, 346, 168, 0, 169, 0, 170, 0,
	0, 0, 171, 172, 173, 0, 174, 175, 347, 0,
	348, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 0, 186, 187, 0, 188, 189, 190, 0,
	191, 0, 349, 192, 193, 194, 195, 350, 351, 352,
	0, 353, 0, 196, 0, 197, 0, 198, 199, 200,
	201, 202, 0, 0, 203, 354, 0, 204, 0, 0,
	205, 206, 410, 0, 0, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	411, 355, 0, 356, 221, 222, 357, 0, 223, 224,
	225, 0, 358, 226, 359, 227, 228, 229, 0, 230,
	0, 423, 231, 232, 0, 0, 233, 360, 0, 234,
	0, 361, 235, 236, 237, 238, 239, 240, 241, 0,
	242, 243, 362, 244, 363, 247, 245, 246, 0, 248,
	249, 250, 251, 252, 253, 254, 255, 364, 256, 257,
	258, 259, 0, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 273, 274,
	365, 275, 0, 276, 277, 278, 279, 280, 0, 281,
	282, 283, 284, 412, 0, 285, 286, 287, 288, 0,
	289, 290, 366, 291, 0, 292, 293, 294, 295, 296,
	297, 298, 299, 367, 300, 0, 368, 0, 301, 302,
	0, 303, 304, 0, 414, 369, 0, 0, 413, 305,
	370, 306, 371, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 314, 315, 316, 317, 318, 0, 0,
	319, 320, 321, 322, 372, 373, 0, 323, 0, 324,
	0, 0, 86, 0, 325, 326, 327, 328, 329, 330,
	331, 0, 0, 0, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 0,
	0, 993, 99, 100, 0, 101, 102, 0, 103, 104,
	105, 332, 333, 0, 334, 0, 335, 336, 0, 106,
	337, 107, 108, 109, 110, 0, 0, 111, 338, 339,
	112, 0, 113, 114, 115, 116, 340, 0, 0, 0,
	117, 118, 119, 120, 121, 0, 0, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 0,
	131, 132, 133, 0, 0, 0, 0, 0, 0, 134,
	135, 136, 137, 138, 341, 139, 140, 342, 343, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 152, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 344,
	162, 163, 164, 345, 0, 165, 0, 166, 167, 346,
	168, 0, 169, 0, 170, 0, 0, 0, 171, 172,
	173, 0, 174, 175, 347, 0, 348, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 0, 349, 192,
	193, 194, 195, 350, 351, 352, 0, 353, 0, 196,
	0, 197, 0, 198, 199, 200, 201, 202, 0, 0,
	203, 354, 0, 204, 0, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 0, 356,
	221, 222, 357, 0, 223, 224, 225, 0, 358, 226,
	359, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 0, 234, 0, 361, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 362, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 364, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 273, 274, 365, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	0, 285, 286, 287, 288, 0, 289, 290, 366, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 368, 0, 301, 302, 0, 303, 304, 0,
	414, 369, 0, 0, 413, 305, 370, 306, 371, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 314,
	315, 316, 317, 318, 0, 0, 319, 320, 321, 322,
	372, 373, 0, 323, 0, 324, 0, 0, 86, 0,
	325, 326, 327, 328, 329, 330, 331, 0, 0, 0,
	89, 90, 91, 92, 93, 94, 95, 0, 96, 97,
	98, 0, 0, 0, 0, 0, 0, 937, 99, 100,
	0, 101, 102, 0, 103, 104, 105, 332, 333, 0,
	334, 0, 335, 336, 0, 106, 337, 107, 108, 109,
	110, 0, 0, 111, 338, 339, 112, 0, 113, 114,
	115, 116, 340, 0, 0, 0, 117, 118, 119, 120,
	121, 0, 0, 122, 123, 124, 0, 125, 126, 127,
	128, 129, 130, 0, 0, 0, 131, 132, 133, 0,
	0, 0, 0, 0, 0, 134, 135, 136, 137, 138,
	341, 139, 140, 342, 343, 141, 0, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 152, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 344, 162, 163, 164, 345,
	0, 165, 0, 166, 167, 346, 168, 0, 169, 0,
	170, 0, 0, 0, 171, 172, 173, 0, 174, 175,
	347, 0, 348, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 0, 349, 192, 193, 194, 195, 350,
	351, 352, 0, 353, 0, 196, 0, 197, 0, 198,
	199, 200, 201, 202, 0, 0, 203, 354, 0, 204,
	0, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 0, 356, 221, 222, 357, 0,
	223, 224, 225, 0, 358, 226, 359, 227, 228, 229,
	0, 230, 0, 0, 231, 232, 0, 0, 233, 360,
	0, 234, 0, 361, 235, 236, 237, 238, 239, 240,
	241, 0, 242, 243, 362, 244, 363, 247, 245, 246,
	0, 248, 249, 250, 251, 252, 253, 254, 255, 364,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	273, 274, 365, 275, 0, 276, 277, 278, 279, 280,
	0, 281, 282, 283, 284, 412, 0, 285, 286, 287,
	288, 0, 289, 290, 366, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 368, 0,
	301, 302, 0, 303, 304, 0, 414, 369, 0, 0,
	413, 305, 370, 306, 371, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 314, 315, 316, 317, 318,
	0, 0, 319, 320, 321, 322, 372, 373, 0, 323,
	0, 324, 0, 0, 86, 0, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 0, 89, 90, 91, 92,
	93, 94, 95, 0, 96, 97, 98, 0, 0, 0,
	0, 0, 0, 1436, 99, 100, 0, 101, 102, 0,
	103, 104, 105, 332, 333, 0, 334, 0, 335, 336,
	0, 106, 337, 107, 108, 109, 110, 0, 0, 111,
	338, 339, 112, 0, 113, 114, 115, 116, 340, 0,
	0, 0, 117, 118, 119, 120, 121, 0, 0, 122,
	123, 124, 0, 125, 126, 127, 128, 129, 130, 0,
	0, 0, 131, 132, 133, 0, 0, 0, 0, 0,
	0, 134, 135, 136, 137, 138, 341, 139, 140, 342,
	343, 141, 0, 142, 0, 143, 144, 145, 146, 147,
	0, 148, 149, 150, 0, 0, 151, 152, 153, 154,
	0, 155, 156, 157, 0, 158, 0, 159, 0, 160,
	161, 344, 162, 163, 164, 345, 0, 165, 0, 166,
	167, 346, 168, 0, 169, 0, 170, 0, 0, 0,
	171, 172, 173, 0, 174, 175, 347, 0, 348, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	0, 186, 187, 0, 188, 189, 190, 0, 191, 0,
	349, 192, 193, 194, 195, 350, 351, 352, 0, 353,
	0, 196, 0, 197, 0, 198, 199, 200, 201, 202,
	0, 0, 203, 354, 0, 204, 0, 0, 205, 206,
	410, 0, 0, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 411, 355,
	0, 356, 221, 222, 357, 0, 223, 224, 225, 0,
	358, 226, 359, 227, 228, 229, 0, 230, 0, 0,
	231, 232, 0, 0, 233, 360, 0, 234, 0, 361,
	235, 236, 237, 238, 239, 240, 241, 0, 242, 243,
	362, 244, 363, 247, 245, 246, 0, 248, 249, 250,
	251, 252, 253, 254, 255, 364, 256, 257, 258, 259,
	0, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 273, 274, 365, 275,
	0, 276, 277, 278, 279, 280, 0, 281, 282, 283,
	284, 412, 0, 285, 286, 287, 288, 0, 289, 290,
	366, 291, 0, 292, 293, 294, 295, 296, 297, 298,
	299, 367, 300, 0, 368, 0, 301, 302, 0, 303,
	304, 0, 414, 369, 0, 0, 413, 305, 370, 306,
	371, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 314, 315, 316, 317, 318, 0, 0, 319, 320,
	321, 322, 372, 373, 0, 323, 0, 324, 0, 0,
	448, 0, 325, 326, 327, 328, 329, 330, 331, 0,
	0, 0, 89, 90, 91, 92, 93, 94, 95, 0,
	96, 97, 98, 0, 0, 0, 0, 0, 0, 617,
	99, 100, 0, 101, 102, 453, 103, 104, 105, 332,
	333, 454, 334, 0, 335, 336, 0, 106, 337, 107,
	108, 109, 110, 0, 0, 111, 338, 339, 112, 0,
	113, 114, 115, 116, 340, 0, 455, 0, 117, 118,
	119, 120, 121, 0, 456, 122, 123, 124, 0, 125,
	126, 127, 128, 129, 130, 0, 0, 457, 131, 132,
	133, 0, 0, 0, 0, 0, 0, 134, 135, 136,
	137, 138, 341, 139, 140, 342, 343, 141, 0, 142,
	0, 143, 144, 145, 146, 147, 0, 148, 149, 150,
	0, 0, 151, 152, 153, 154, 0, 155, 156, 157,
	0, 158, 0, 159, 0, 160, 161, 344, 162, 163,
	164, 345, 0, 165, 0, 166, 167, 346, 168, 0,
	169, 0, 170, 458, 0, 459, 171, 172, 173, 0,
	174, 175, 347, 0, 348, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 0, 186, 187, 0,
	188, 189, 190, 0, 191, 460, 349, 192, 193, 194,
	195, 350, 351, 352, 0, 353, 0, 196, 461, 197,
	462, 198, 199, 200, 201, 202, 0, 0, 203, 354,
	463, 204, 464, 0, 205, 206, 410, 0, 0, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 411, 355, 465, 356, 221, 222,
	357, 0, 223, 224, 225, 0, 358, 226, 359, 227,
	228, 229, 0, 230, 0, 0, 231, 232, 0, 0,
	233, 360, 466, 234, 467, 361, 235, 236, 237, 238,
	239, 240, 241, 0, 242, 243, 362, 244, 363, 247,
	245, 246, 0, 248, 249, 250, 251, 252, 253, 254,
	255, 364, 256, 257, 258, 259, 0, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 0, 271,
	272, 468, 273, 274, 365, 275, 0, 276, 277, 278,
	279, 280, 0, 281, 282, 283, 284, 412, 0, 285,
	286, 287, 288, 469, 289, 290, 366, 291, 0, 292,
	293, 294, 295, 296, 297, 298, 299, 367, 300, 0,
	368, 0, 301, 302, 0, 303, 304, 0, 414, 369,
	0, 0, 413, 305, 370, 306, 371, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 314, 315, 316,
	317, 318, 0, 0, 319, 320, 321, 322, 372, 373,
	0, 323, 470, 324, 86, 0, 0, 0, 325, 326,
	327, 328, 329, 330, 331, 0, 89, 90, 91, 92,
	93, 94, 95, 0, 96, 97, 98, 0, 0, 0,
	0, 0, 0, 0, 99, 100, 0, 101, 102, 0,
	103, 104, 105, 332, 333, 0, 334, 0, 335, 336,
	0, 106, 337, 107, 108, 109, 110, 0, 0, 111,
	338, 339, 112, 912, 113, 114, 115, 116, 340, 0,
	0, 0, 117, 118, 119, 120, 121, 0, 0, 122,
	123, 124, 910, 125, 126, 127, 128, 129, 130, 0,
	0, 0, 131, 132, 133, 0, 0, 0, 0, 0,
	0, 134, 135, 136, 137, 138, 341, 139, 140, 342,
	343, 141, 0, 142, 0, 143, 144, 145, 146, 147,
	0, 148, 149, 150, 0, 0, 151, 152, 153, 154,
	0, 155, 156, 157, 0, 158, 0, 159, 0, 160,
	161, 344, 162, 163, 164, 345, 0, 165, 0, 166,
	167, 346, 168, 0, 169, 915, 170, 0, 0, 0,
	171, 172, 173, 0, 174, 175, 347, 0, 348, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	0, 186, 187, 971, 188, 189, 190, 0, 191, 0,
	349, 192, 193, 194, 195, 350, 351, 352, 0, 353,
	0, 196, 0, 197, 0, 198, 199, 200, 201, 202,
	0, 0, 203, 354, 0, 204, 0, 0, 205, 206,
	410, 0, 0, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 411, 355,
	0, 356, 221, 222, 357, 0, 223, 224, 225, 0,
	358, 226, 359, 227, 228, 229, 0, 230, 0, 0,
	231, 232, 0, 0, 233, 360, 0, 234, 0, 361,
	235, 236, 237, 238, 239, 240, 241, 0, 242, 243,
	362, 244, 363, 247, 245, 246, 914, 248, 249, 250,
	251, 252, 253, 254, 255, 364, 256, 257, 258, 259,
	0, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 273, 274, 365, 275,
	0, 276, 277, 278, 279, 280, 0, 281, 282, 283,
	284, 412, 0, 285, 286, 287, 288, 0, 289, 290,
	366, 291, 0, 292, 293, 294, 295, 296, 297, 298,
	299, 367, 300, 0, 368, 0, 301, 302, 0, 303,
	304, 0, 414, 369, 0, 0, 413, 305, 370, 306,
	371, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	972, 314, 315, 316, 317, 318, 0, 0, 319, 320,
	321, 322, 372, 373, 0, 323, 0, 324, 86, 0,
	0, 0, 325, 326, 327, 328, 329, 330, 331, 0,
	89, 90, 91, 92, 93, 94, 95, 0, 96, 97,
	98, 0, 0, 0, 0, 0, 0, 0, 99, 100,
	0, 101, 102, 0, 103, 104, 105, 332, 333, 0,
	334, 0, 335, 336, 0, 106, 337, 107, 108, 109,
	110, 0, 0, 111, 338, 339, 112, 912, 113, 114,
	115, 116, 340, 0, 0, 907, 117, 118, 119, 120,
	121, 0, 0, 122, 123, 124, 910, 125, 126, 127,
	128, 129, 130, 0, 0, 0, 131, 132, 133, 0,
	0, 0, 0, 0, 0, 134, 135, 136, 137, 138,
	341, 139, 140, 342, 343, 141, 0, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 152, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 344, 162, 163, 164, 345,
	0, 165, 0, 166, 167, 346, 168, 0, 169, 915,
	170, 0, 0, 0, 171, 172, 173, 0, 174, 175,
	347, 0, 348, 176, 0, 177, 178, 179, 180, 906,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 0, 349, 192, 193, 194, 195, 350,
	351, 352, 0, 353, 0, 196, 0, 197, 0, 198,
	199, 200, 201, 202, 0, 0, 203, 354, 0, 204,
	0, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 0, 356, 221, 222, 357, 0,
	223, 224, 225, 0, 358, 226, 359, 227, 228, 229,
	0, 230, 0, 0, 231, 232, 0, 0, 233, 360,
	0, 234, 0, 361, 235, 236, 237, 238, 239, 240,
	241, 0, 242, 243, 362, 244, 363, 247, 245, 246,
	914, 248, 249, 250, 251, 252, 253, 254, 255, 364,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	273, 274, 365, 275, 0, 276, 277, 278, 279, 280,
	0, 281, 282, 283, 284, 412, 0, 285, 286, 287,
	288, 0, 289, 290, 366, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 368, 0,
	301, 302, 0, 303, 304, 0, 414, 369, 0, 0,
	413, 305, 370, 306, 371, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 913, 314, 315, 316, 317, 318,
	0, 0, 319, 320, 321, 322, 372, 373, 0, 323,
	0, 324, 86, 0, 0, 0, 325, 326, 327, 328,
	329, 330, 331, 0, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 0,
	1226, 0, 99, 100, 0, 101, 102, 0, 103, 104,
	105, 332, 333, 0, 334, 0, 335, 336, 0, 106,
	337, 107, 108, 109, 110, 0, 0, 111, 338, 339,
	112, 0, 113, 114, 115, 116, 340, 0, 0, 0,
	117, 118, 119, 120, 121, 0, 0, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 0,
	131, 132, 133, 0, 0, 0, 0, 0, 0, 134,
	135, 136, 137, 138, 341, 139, 140, 342, 343, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 152, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 344,
	162, 163, 164, 345, 0, 165, 0, 166, 167, 346,
	168, 0, 169, 0, 170, 0, 0, 0, 171, 172,
	173, 0, 174, 175, 347, 0, 348, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 0, 349, 192,
	193, 194, 195, 350, 351, 352, 0, 353, 0, 196,
	0, 197, 0, 198, 199, 200, 201, 202, 0, 0,
	203, 354, 0, 204, 0, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 0, 356,
	221, 222, 357, 0, 223, 224, 225, 0, 358, 226,
	359, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 0, 234, 0, 361, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 362, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 364, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 273, 274, 365, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	0, 285, 286, 287, 288, 0, 289, 290, 366, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 368, 0, 301, 302, 0, 303, 304, 0,
	414, 369, 0, 0, 413, 305, 370, 306, 371, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 314,
	315, 316, 317, 318, 0, 0, 319, 320, 321, 322,
	372, 373, 0, 323, 0, 324, 86, 0, 0, 0,
	325, 326, 327, 328, 329, 330, 331, 0, 89, 90,
	91, 92, 93, 94, 95, 0, 96, 97, 98, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 0, 101,
	102, 0, 103, 104, 105, 332, 333, 0, 334, 0,
	335, 336, 0, 106, 337, 107, 108, 109, 110, 0,
	0, 111, 338, 339, 112, 0, 113, 114, 115, 116,
	340, 0, 0, 0, 117, 118, 119, 120, 121, 0,
	0, 122, 123, 124, 0, 125, 126, 127, 128, 129,
	130, 0, 0, 0, 131, 132, 133, 0, 0, 0,
	0, 0, 0, 134, 135, 136, 137, 138, 341, 139,
	140, 342, 343, 141, 0, 142, 0, 143, 144, 145,
	146, 147, 0, 148, 149, 150, 0, 0, 151, 152,
	153, 154, 0, 155, 156, 157, 0, 158, 0, 159,
	0, 160, 161, 344, 162, 163, 164, 345, 0, 165,
	0, 166, 167, 346, 168, 0, 169, 0, 170, 0,
	0, 0, 171, 172, 173, 0, 174, 175, 347, 0,
	348, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 0, 186, 187, 0, 188, 189, 190, 0,
	191, 0, 349, 192, 193, 194, 195, 350, 351, 352,
	0, 353, 0, 196, 0, 197, 0, 198, 199, 200,
	201, 202, 0, 0, 203, 354, 0, 204, 0, 0,
	205, 206, 410, 0, 0, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	411, 355, 0, 356, 221, 222, 357, 0, 223, 224,
	225, 0, 358, 226, 359, 227, 228, 229, 0, 230,
	0, 423, 231, 232, 0, 0, 233, 360, 0, 234,
	0, 361, 235, 236, 237, 238, 239, 240, 241, 0,
	242, 243, 362, 244, 363, 247, 245, 246, 0, 248,
	249, 250, 251, 252, 253, 254, 255, 364, 256, 257,
	258, 259, 0, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 273, 274,
	365, 275, 0, 276, 277, 278, 279, 280, 0, 281,
	282, 283, 284, 412, 0, 285, 286, 287, 288, 0,
	289, 290, 366, 291, 0, 292, 293, 294, 295, 296,
	297, 298, 299, 367, 300, 0, 368, 0, 301, 302,
	0, 303, 304, 0, 414, 369, 0, 0, 413, 305,
	370, 306, 371, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 314, 315, 316, 317, 318, 0, 0,
	319, 320, 321, 322, 372, 373, 0, 323, 0, 324,
	86, 0, 0, 0, 325, 326, 327, 328, 329, 330,
	331, 0, 89, 90, 91, 92, 93, 94, 95, 0,
	96, 97, 98, 0, 0, 0, 0, 0, 0, 0,
	99, 100, 0, 101, 102, 0, 103, 104, 105, 332,
	333, 0, 334, 0, 335, 336, 0, 106, 337, 107,
	108, 109, 110, 0, 0, 111, 338, 339, 112, 0,
	113, 114, 115, 116, 340, 0, 0, 0, 117, 118,
	119, 120, 121, 0, 0, 122, 123, 124, 0, 125,
	126, 127, 128, 129, 130, 0, 0, 0, 131, 132,
	133, 0, 0, 0, 0, 0, 0, 134, 135, 136,
	657, 138, 341, 139, 140, 342, 343, 141, 0, 142,
	0, 143, 144, 145, 146, 147, 0, 148, 149, 150,
	0, 0, 151, 152, 153, 154, 0, 155, 156, 157,
	0, 158, 0, 159, 0, 160, 161, 344, 162, 163,
	164, 345, 0, 165, 0, 166, 167, 346, 168, 0,
	169, 0, 170, 0, 0, 0, 171, 172, 173, 0,
	174, 175, 347, 0, 348, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 0, 186, 187, 0,
	188, 189, 190, 0, 191, 0, 349, 192, 193, 194,
	195, 350, 351, 352, 0, 353, 0, 196, 0, 197,
	0, 198, 199, 200, 201, 202, 0, 0, 203, 354,
	0, 204, 0, 0, 205, 206, 410, 0, 0, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 411, 355, 0, 356, 221, 222,
	357, 0, 223, 224, 225, 0, 358, 226, 359, 227,
	228, 229, 0, 230, 0, 0, 231, 232, 0, 0,
	233, 360, 0, 234, 0, 361, 235, 236, 237, 238,
	239, 240, 241, 0, 242, 243, 362, 244, 363, 247,
	245, 246, 0, 248, 249, 250, 251, 252, 253, 254,
	255, 364, 256, 257, 258, 259, 0, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 273, 274, 365, 275, 0, 276, 277, 278,
	279, 280, 0, 281, 282, 283, 284, 412, 0, 285,
	286, 287, 288, 0, 289, 290, 366, 291, 0, 292,
	293, 294, 295, 296, 297, 298, 299, 367, 300, 0,
	368, 0, 301, 302, 656, 303, 304, 0, 414, 369,
	0, 0, 413, 305, 370, 306, 371, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 314, 315, 316,
	317, 318, 0, 0, 319, 320, 321, 322, 372, 373,
	0, 323, 0, 324, 86, 0, 0, 0, 325, 326,
	327, 328, 329, 330, 331, 0, 89, 90, 91, 92,
	93, 94, 95, 0, 96, 97, 98, 0, 0, 0,
	0, 0, 0, 0, 99, 100, 0, 101, 102, 0,
	103, 104, 105, 332, 333, 0, 334, 0, 335, 336,
	0, 106, 337, 107, 108, 109, 110, 0, 0, 111,
	338, 339, 112, 0, 113, 114, 115, 116, 340, 0,
	0, 0, 117, 118, 119, 120, 121, 0, 0, 122,
	123, 124, 0, 125, 126, 127, 128, 129, 130, 0,
	0, 0, 131, 132, 133, 0, 0, 0, 0, 0,
	0, 134, 135, 136, 137, 138, 341, 139, 140, 342,
	343, 141, 0, 142, 0, 143, 144, 145, 146, 147,
	0, 148, 149, 150, 0, 0, 151, 152, 153, 154,
	0, 155, 156, 157, 0, 158, 0, 159, 0, 160,
	161, 344, 162, 163, 164, 345, 0, 165, 0, 166,
	167, 346, 168, 0, 169, 0, 170, 0, 0, 0,
	171, 172, 173, 0, 174, 175, 347, 0, 348, 176,
	0, 177, 178, 179, 180, 429, 182, 183, 184, 185,
	0, 186, 187, 0, 188, 189, 190, 0, 191, 0,
	349, 192, 193, 194, 195, 350, 351, 352, 0, 353,
	0, 196, 0, 197, 0, 198, 199, 200, 201, 202,
	0, 0, 203, 354, 0, 204, 0, 0, 205, 206,
	410, 0, 0, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 411, 355,
	0, 356, 221, 222, 357, 0, 223, 224, 225, 0,
	358, 226, 359, 227, 228, 229, 0, 230, 0, 423,
	231, 232, 0, 0, 233, 360, 0, 234, 0, 361,
	235, 236, 237, 238, 239, 240, 241, 0, 242, 243,
	362, 244, 363, 247, 245, 246, 0, 248, 249, 250,
	251, 252, 253, 254, 255, 364, 256, 257, 258, 259,
	0, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 273, 274, 365, 275,
	0, 276, 277, 278, 279, 280, 0, 281, 282, 283,
	284, 412, 0, 285, 286, 287, 288, 0, 289, 290,
	366, 291, 0, 292, 293, 294, 295, 296, 297, 298,
	299, 367, 300, 0, 368, 0, 301, 302, 0, 303,
	304, 0, 414, 369, 0, 0, 413, 305, 370, 306,
	371, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 314, 315, 316, 317, 318, 0, 0, 319, 320,
	321, 322, 372, 373, 0, 323, 0, 324, 86, 0,
	0, 0, 325, 326, 327, 328, 329, 330, 331, 0,
	89, 90, 91, 92, 93, 94, 95, 0, 96, 97,
	98, 0, 0, 0, 0, 0, 0, 0, 99, 100,
	0, 101, 102, 0, 103, 104, 105, 332, 333, 0,
	334, 0, 335, 336, 0, 106, 337, 107, 108, 109,
	110, 0, 0, 111, 338, 339, 112, 0, 113, 114,
	115, 116, 340, 0, 0, 0, 117, 118, 119, 120,
	121, 0, 0, 122, 123, 124, 0, 125, 126, 127,
	128, 129, 130, 0, 0, 0, 131, 132, 133, 0,
	0, 0, 0, 0, 0, 134, 135, 136, 137, 138,
	341, 139, 140, 342, 343, 141, 0, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 152, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 344, 162, 163, 164, 345,
	0, 165, 0, 166, 167, 346, 168, 0, 169, 0,
	170, 0, 0, 0, 171, 172, 173, 0, 174, 175,
	347, 0, 348, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 0, 349, 192, 193, 194, 195, 350,
	351, 352, 0, 353, 0, 196, 0, 197, 0, 198,
	199, 200, 201, 202, 0, 0, 203, 354, 0, 204,
	0, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 0, 356, 221, 222, 357, 0,
	223, 224, 225, 0, 358, 226, 359, 227, 228, 229,
	0, 230, 0, 0, 231, 232, 0, 0, 233, 360,
	0, 234, 0, 361, 235, 236, 237, 238, 239, 240,
	241, 0, 242, 243, 362, 244, 363, 247, 245, 246,
	0, 248, 249, 250, 251, 252, 253, 254, 255, 364,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	273, 274, 365, 275, 0, 276, 277, 278, 279, 280,
	0, 281, 282, 283, 284, 412, 0, 285, 286, 287,
	288, 0, 289, 290, 366, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 368, 0,
	301, 302, 0, 303, 304, 0, 414, 369, 0, 0,
	413, 305, 370, 306, 371, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 314, 315, 316, 317, 318,
	0, 0, 319, 320, 321, 322, 372, 373, 0, 323,
	0, 324, 86, 0, 0, 0, 325, 326, 327, 328,
	329, 330, 331, 0, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 0,
	0, 0, 99, 100, 0, 101, 102, 0, 103, 104,
	105, 332, 333, 0, 334, 0, 335, 336, 0, 106,
	337, 107, 108, 109, 110, 0, 0, 111, 338, 339,
	112, 0, 113, 114, 115, 116, 340, 0, 0, 0,
	117, 118, 119, 120, 121, 0, 0, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 0,
	131, 132, 133, 0, 0, 0, 0, 0, 0, 134,
	135, 136, 137, 138, 341, 139, 140, 342, 343, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 152, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 344,
	162, 163, 164, 345, 0, 165, 0, 166, 167, 346,
	168, 0, 169, 0, 170, 0, 0, 0, 171, 172,
	173, 0, 174, 175, 347, 0, 348, 176, 0, 177,
	178, 179, 180, 1170, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 0, 349, 192,
	193, 194, 195, 350, 351, 352, 0, 353, 0, 196,
	0, 197, 0, 198, 199, 200, 201, 202, 0, 0,
	203, 354, 0, 204, 0, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 0, 356,
	221, 222, 357, 0, 223, 224, 225, 0, 358, 226,
	359, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 0, 234, 0, 361, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 362, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 364, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 273, 274, 365, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	0, 285, 286, 287, 288, 0, 289, 290, 366, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 368, 0, 301, 302, 0, 303, 304, 0,
	414, 369, 0, 0, 413, 305, 370, 306, 371, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 314,
	315, 316, 317, 318, 0, 0, 319, 320, 321, 322,
	372, 373, 0, 323, 0, 324, 86, 0, 0, 0,
	325, 326, 327, 328, 329, 330, 331, 0, 89, 90,
	91, 92, 93, 94, 95, 0, 96, 97, 98, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 0, 101,
	102, 0, 103, 104, 105, 332, 333, 0, 334, 0,
	335, 336, 0, 106, 337, 107, 108, 109, 110, 0,
	0, 111, 338, 339, 112, 0, 113, 114, 115, 116,
	340, 0, 0, 0, 117, 118, 119, 120, 121, 0,
	0, 122, 123, 124, 0, 125, 126, 127, 128, 129,
	130, 0, 0, 0, 131, 132, 133, 0, 0, 0,
	0, 0, 0, 134, 135, 136, 137, 138, 341, 139,
	140, 342, 343, 141, 0, 142, 0, 143, 144, 145,
	146, 147, 0, 148, 149, 150, 0, 0, 151, 152,
	153, 154, 0, 155, 156, 157, 0, 158, 0, 159,
	0, 160, 161, 344, 162, 163, 164, 345, 0, 165,
	0, 166, 167, 346, 168, 0, 169, 0, 170, 0,
	0, 0, 171, 172, 173, 0, 174, 175, 347, 0,
	348, 176, 0, 177, 178, 179, 180, 1168, 182, 183,
	184, 185, 0, 186, 187, 0, 188, 189, 190, 0,
	191, 0, 349, 192, 193, 194, 195, 350, 351, 352,
	0, 353, 0, 196, 0, 197, 0, 198, 199, 200,
	201, 202, 0, 0, 203, 354, 0, 204, 0, 0,
	205, 206, 410, 0, 0, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	411, 355, 0, 356, 221, 222, 357, 0, 223, 224,
	225, 0, 358, 226, 359, 227, 228, 229, 0, 230,
	0, 0, 231, 232, 0, 0, 233, 360, 0, 234,
	0, 361, 235, 236, 237, 238, 239, 240, 241, 0,
	242, 243, 362, 244, 363, 247, 245, 246, 0, 248,
	249, 250, 251, 252, 253, 254, 255, 364, 256, 257,
	258, 259, 0, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 273, 274,
	365, 275, 0, 276, 277, 278, 279, 280, 0, 281,
	282, 283, 284, 412, 0, 285, 286, 287, 288, 0,
	289, 290, 366, 291, 0, 292, 293, 294, 295, 296,
	297, 298, 299, 367, 300, 0, 368, 0, 301, 302,
	0, 303, 304, 0, 414, 369, 0, 0, 413, 305,
	370, 306, 371, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 314, 315, 316, 317, 318, 0, 0,
	319, 320, 321, 322, 372, 373, 0, 323, 0, 324,
	86, 0, 0, 0, 325, 326, 327, 328, 329, 330,
	331, 0, 89, 90, 91, 92, 93, 94, 95, 0,
	96, 97, 98, 0, 0, 0, 0, 0, 0, 0,
	99, 100, 0, 101, 102, 0, 103, 104, 105, 332,
	333, 0, 334, 0, 335, 336, 0, 106, 337, 107,
	108, 109, 110, 0, 0, 111, 338, 339, 112, 0,
	113, 114, 115, 116, 340, 0, 0, 0, 117, 118,
	119, 120, 121, 0, 0, 122, 123, 124, 0, 125,
	126, 127, 128, 129, 130, 0, 0, 0, 131, 132,
	133, 0, 0, 0, 0, 0, 0, 134, 135, 136,
	137, 138, 341, 139, 140, 342, 343, 141, 0, 142,
	0, 143, 144, 145, 146, 147, 0, 148, 149, 150,
	0, 0, 151, 152, 153, 154, 0, 155, 156, 157,
	0, 158, 0, 159, 0, 160, 161, 344, 162, 163,
	164, 345, 0, 165, 0, 166, 167, 346, 168, 0,
	169, 0, 170, 0, 0, 0, 171, 172, 173, 0,
	174, 175, 347, 0, 348, 176, 0, 177, 178, 179,
	180, 1159, 182, 183, 184, 185, 0, 186, 187, 0,
	188, 189, 190, 0, 191, 0, 349, 192, 193, 194,
	195, 350, 351, 352, 0, 353, 0, 196, 0, 197,
	0, 198, 199, 200, 201, 202, 0, 0, 203, 354,
	0, 204, 0, 0, 205, 206, 410, 0, 0, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 411, 355, 0, 356, 221, 222,
	357, 0, 223, 224, 225, 0, 358, 226, 359, 227,
	228, 229, 0, 230, 0, 0, 231, 232, 0, 0,
	233, 360, 0, 234, 0, 361, 235, 236, 237, 238,
	239, 240, 241, 0, 242, 243, 362, 244, 363, 247,
	245, 246, 0, 248, 249, 250, 251, 252, 253, 254,
	255, 364, 256, 257, 258, 259, 0, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 273, 274, 365, 275, 0, 276, 277, 278,
	279, 280, 0, 281, 282, 283, 284, 412, 0, 285,
	286, 287, 288, 0, 289, 290, 366, 291, 0, 292,
	293, 294, 295, 296, 297, 298, 299, 367, 300, 0,
	368, 0, 301, 302, 0, 303, 304, 0, 414, 369,
	0, 0, 413, 305, 370, 306, 371, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 314, 315, 316,
	317, 318, 0, 0, 319, 320, 321, 322, 372, 373,
	0, 323, 0, 324, 86, 0, 0, 0, 325, 326,
	327, 328, 329, 330, 331, 0, 89, 90, 91, 92,
	93, 94, 95, 0, 96, 97, 98, 0, 0, 0,
	0, 0, 0, 0, 99, 100, 0, 101, 102, 0,
	103, 104, 105, 332, 333, 0, 334, 0, 335, 336,
	0, 106, 337, 107, 108, 109, 110, 0, 0, 111,
	338, 339, 112, 0, 113, 114, 115, 116, 340, 0,
	0, 0, 117, 118, 119, 120, 121, 0, 0, 122,
	123, 124, 0, 125, 126, 127, 128, 129, 130, 0,
	0, 0, 131, 132, 133, 0, 0, 0, 0, 0,
	0, 134, 135, 136, 137, 138, 341, 139, 140, 342,
	343, 141, 0, 142, 0, 143, 144, 145, 146, 147,
	0, 148, 149, 150, 0, 0, 151, 152, 153, 154,
	0, 155, 156, 157, 0, 158, 0, 159, 0, 160,
	161, 344, 162, 163, 164, 345, 0, 165, 0, 166,
	167, 346, 168, 0, 169, 0, 170, 0, 0, 0,
	171, 172, 173, 0, 174, 175, 347, 0, 348, 176,
	0, 177, 178, 179, 180, 786, 182, 183, 184, 185,
	0, 186, 187, 0, 188, 189, 190, 0, 191, 0,
	349, 192, 193, 194, 195, 350, 351, 352, 0, 353,
	0, 196, 0, 197, 0, 198, 199, 200, 201, 202,
	0, 0, 203, 354, 0, 204, 0, 0, 205, 206,
	410, 0, 0, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 411, 355,
	0, 356, 221, 222, 357, 0, 223, 224, 225, 0,
	358, 226, 359, 227, 228, 229, 0, 230, 0, 0,
	231, 232, 0, 0, 233, 360, 0, 234, 0, 361,
	235, 236, 237, 238, 239, 240, 241, 0, 242, 243,
	362, 244, 363, 247, 245, 246, 0, 248, 249, 250,
	251, 252, 253, 254, 255, 364, 256, 257, 258, 259,
	0, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 273, 274, 365, 275,
	0, 276, 277, 278, 279, 280, 0, 281, 282, 283,
	284, 412, 0, 285, 286, 287, 288, 0, 289, 290,
	366, 291, 0, 292, 293, 294, 295, 296, 297, 298,
	299, 367, 300, 0, 368, 0, 301, 302, 0, 303,
	304, 0, 414, 369, 0, 0, 413, 305, 370, 306,
	371, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 314, 315, 316, 317, 318, 0, 0, 319, 320,
	321, 322, 372, 373, 0, 323, 0, 324, 86, 0,
	0, 0, 325, 326, 327, 328, 329, 330, 331, 0,
	89, 90, 91, 92, 93, 94, 95, 0, 96, 97,
	98, 0, 0, 0, 0, 0, 643, 0, 99, 100,
	0, 101, 102, 0, 103, 104, 105, 332, 333, 0,
	334, 0, 335, 336, 0, 106, 337, 107, 108, 109,
	110, 0, 0, 111, 338, 339, 112, 0, 113, 114,
	115, 116, 340, 0, 0, 0, 117, 118, 119, 120,
	121, 0, 0, 122, 123, 124, 0, 125, 126, 127,
	128, 129, 130, 0, 0, 0, 131, 132, 133, 0,
	0, 0, 0, 0, 0, 134, 135, 136, 137, 138,
	341, 139, 140, 342, 343, 141, 0, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 152, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 344, 162, 163, 164, 345,
	0, 165, 0, 166, 167, 346, 168, 0, 169, 0,
	170, 0, 0, 0, 171, 172, 173, 0, 174, 175,
	347, 0, 348, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 0, 349, 192, 193, 194, 195, 350,
	351, 352, 0, 353, 0, 196, 0, 197, 0, 198,
	199, 200, 201, 202, 0, 0, 203, 354, 0, 204,
	0, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 0, 356, 221, 222, 357, 0,
	223, 224, 225, 0, 358, 226, 359, 227, 228, 229,
	0, 230, 0, 0, 231, 232, 0, 0, 233, 360,
	0, 234, 0, 361, 235, 236, 237, 238, 239, 240,
	241, 0, 242, 243, 362, 244, 363, 247, 245, 246,
	0, 248, 249, 250, 251, 252, 253, 254, 255, 364,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	273, 274, 365, 275, 0, 276, 277, 278, 279, 280,
	0, 281, 282, 283, 284, 412, 0, 0, 286, 287,
	288, 0, 289, 290, 366, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 368, 0,
	301, 302, 0, 303, 304, 0, 414, 369, 0, 0,
	413, 305, 370, 306, 371, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 314, 315, 316, 317, 318,
	0, 0, 319, 320, 321, 322, 372, 373, 0, 323,
	0, 324, 86, 0, 0, 0, 325, 326, 327, 328,
	329, 330, 331, 0, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 0,
	0, 0, 99, 100, 0, 101, 102, 0, 103, 104,
	105, 332, 333, 0, 334, 0, 335, 336, 0, 106,
	337, 107, 108, 109, 110, 0, 0, 111, 338, 339,
	112, 0, 113, 114, 115, 116, 340, 0, 0, 0,
	117, 118, 119, 120, 121, 0, 0, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 0,
	131, 132, 133, 0, 0, 0, 0, 0, 0, 134,
	135, 136, 137, 138, 341, 139, 140, 342, 343, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 152, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 344,
	162, 163, 164, 345, 0, 165, 0, 166, 167, 346,
	168, 0, 169, 0, 170, 0, 0, 0, 171, 172,
	173, 0, 174, 175, 347, 0, 348, 176, 0, 177,
	178, 179, 180, 503, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 0, 349, 192,
	193, 194, 195, 350, 351, 352, 0, 353, 0, 196,
	0, 197, 0, 198, 199, 200, 201, 202, 0, 0,
	203, 354, 0, 204, 0, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 0, 356,
	221, 222, 357, 0, 223, 224, 225, 0, 358, 226,
	359, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 0, 234, 0, 361, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 362, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 364, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 273, 274, 365, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	0, 285, 286, 287, 288, 0, 289, 290, 366, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 368, 0, 301, 302, 0, 303, 304, 0,
	414, 369, 0, 0, 413, 305, 370, 306, 371, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 314,
	315, 316, 317, 318, 0, 0, 319, 320, 321, 322,
	372, 373, 0, 323, 0, 324, 86, 0, 0, 0,
	325, 326, 327, 328, 329, 330, 331, 0, 89, 90,
	91, 92, 93, 94, 95, 0, 96, 97, 98, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 0, 101,
	102, 0, 103, 104, 105, 332, 333, 0, 334, 0,
	335, 336, 0, 106, 337, 107, 108, 109, 110, 0,
	0, 111, 338, 339, 112, 0, 113, 114, 115, 116,
	340, 0, 0, 0, 117, 118, 119, 120, 121, 0,
	0, 122, 123, 124, 0, 125, 126, 127, 128, 129,
	130, 0, 0, 0, 131, 132, 133, 0, 0, 0,
	0, 0, 0, 134, 135, 136, 137, 138, 341, 139,
	140, 342, 343, 141, 0, 142, 0, 143, 144, 145,
	146, 147, 0, 148, 149, 150, 0, 0, 151, 152,
	153, 154, 0, 155, 156, 157, 0, 158, 0, 159,
	0, 160, 161, 344, 162, 163, 164, 345, 0, 165,
	0, 166, 167, 346, 168, 0, 169, 0, 170, 0,
	0, 0, 171, 172, 173, 0, 174, 175, 347, 0,
	348, 176, 0, 177, 178, 179, 180, 500, 182, 183,
	184, 185, 0, 186, 187, 0, 188, 189, 190, 0,
	191, 0, 349, 192, 193, 194, 195, 350, 351, 352,
	0, 353, 0, 196, 0, 197, 0, 198, 199, 200,
	201, 202, 0, 0, 203, 354, 0, 204, 0, 0,
	205, 206, 410, 0, 0, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	411, 355, 0, 356, 221, 222, 357, 0, 223, 224,
	225, 0, 358, 226, 359, 227, 228, 229, 0, 230,
	0, 0, 231, 232, 0, 0, 233, 360, 0, 234,
	0, 361, 235, 236, 237, 238, 239, 240, 241, 0,
	242, 243, 362, 244, 363, 247, 245, 246, 0, 248,
	249, 250, 251, 252, 253, 254, 255, 364, 256, 257,
	258, 259, 0, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 273, 274,
	365, 275, 0, 276, 277, 278, 279, 280, 0, 281,
	282, 283, 284, 412, 0, 285, 286, 287, 288, 0,
	289, 290, 366, 291, 0, 292, 293, 294, 295, 296,
	297, 298, 299, 367, 300, 0, 368, 0, 301, 302,
	0, 303, 304, 0, 414, 369, 0, 0, 413, 305,
	370, 306, 371, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 314, 315, 316, 317, 318, 0, 0,
	319, 320, 321, 322, 372, 373, 0, 323, 0, 324,
	86, 0, 0, 0, 325, 326, 327, 328, 329, 330,
	331, 0, 89, 90, 91, 92, 93, 94, 95, 0,
	96, 97, 98, 0, 0, 0, 0, 0, 0, 0,
	99, 100, 0, 101, 102, 0, 103, 104, 105, 332,
	333, 0, 334, 0, 335, 336, 0, 106, 337, 107,
	108, 109, 110, 0, 0, 111, 338, 339, 112, 0,
	113, 114, 115, 116, 340, 0, 0, 0, 117, 118,
	119, 120, 121, 0, 0, 122, 123, 124, 0, 125,
	126, 127, 128, 129, 130, 0, 0, 0, 131, 132,
	133, 0, 0, 0, 0, 0, 0, 134, 135, 136,
	137, 138, 341, 139, 140, 342, 343, 141, 0, 142,
	0, 143, 144, 145, 146, 147, 0, 148, 149, 150,
	0, 0, 151, 152, 153, 154, 0, 155, 156, 157,
	0, 158, 0, 159, 0, 160, 161, 344, 162, 163,
	164, 345, 0, 165, 0, 166, 167, 346, 168, 0,
	169, 0, 170, 0, 0, 0, 171, 172, 173, 0,
	174, 175, 347, 0, 348, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 0, 186, 187, 0,
	188, 189, 190, 0, 191, 0, 349, 192, 193, 194,
	195, 350, 351, 352, 0, 353, 0, 196, 0, 197,
	0, 198, 199, 200, 201, 202, 0, 0, 203, 354,
	0, 204, 0, 0, 205, 206, 410, 0, 0, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 83, 355, 0, 356, 221, 222,
	357, 0, 223, 224, 225, 0, 358, 226, 359, 227,
	228, 229, 0, 230, 0, 0, 231, 232, 0, 0,
	233, 360, 0, 234, 0, 361, 235, 236, 237, 238,
	239, 240, 241, 0, 242, 243, 362, 244, 363, 247,
	245, 246, 0, 248, 249, 250, 251, 252, 253, 254,
	255, 364, 256, 257, 258, 259, 0, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 273, 274, 365, 275, 0, 276, 277, 278,
	279, 280, 0, 281, 282, 283, 284, 412, 0, 285,
	286, 287, 288, 0, 289, 290, 366, 291, 0, 292,
	293, 294, 295, 296, 297, 298, 299, 367, 300, 0,
	368, 0, 301, 302, 0, 303, 304, 0, 82, 369,
	0, 0, 78, 305, 370, 306, 371, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 314, 315, 316,
	317, 318, 0, 0, 319, 320, 321, 322, 372, 373,
	0, 323, 0, 324, 86, 0, 0, 0, 325, 326,
	327, 328, 329, 330, 331, 0, 89, 90, 91, 92,
	93, 94, 95, 0, 96, 97, 98, 0, 0, 0,
	0, 0, 0, 0, 99, 100, 0, 101, 102, 0,
	103, 104, 105, 332, 333, 0, 334, 0, 335, 336,
	0, 106, 337, 107, 108, 109, 110, 0, 0, 111,
	338, 339, 112, 0, 113, 114, 115, 116, 340, 0,
	0, 0, 117, 118, 119, 120, 121, 0, 0, 122,
	123, 124, 0, 125, 126, 127, 128, 129, 130, 0,
	0, 0, 131, 132, 133, 0, 0, 0, 0, 0,
	0, 134, 135, 136, 137, 138, 341, 139, 140, 342,
	343, 141, 0, 142, 0, 143, 144, 145, 146, 147,
	0, 148, 149, 150, 0, 0, 151, 152, 153, 154,
	0, 155, 156, 157, 0, 158, 0, 159, 0, 160,
	161, 344, 162, 163, 164, 345, 0, 165, 0, 166,
	167, 346, 168, 0, 169, 0, 170, 0, 0, 0,
	171, 172, 173, 0, 174, 175, 347, 0, 348, 176,
	0, 177, 178, 179, 180, 443, 182, 183, 184, 185,
	0, 186, 187, 0, 188, 189, 190, 0, 191, 0,
	349, 192, 193, 194, 195, 350, 351, 352, 0, 353,
	0, 196, 0, 197, 0, 198, 199, 200, 201, 202,
	0, 0, 203, 354, 0, 204, 0, 0, 205, 206,
	410, 0, 0, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 411, 355,
	0, 356, 221, 222, 357, 0, 223, 224, 225, 0,
	358, 226, 359, 227, 228, 229, 0, 230, 0, 0,
	231, 232, 0, 0, 233, 360, 0, 234, 0, 361,
	235, 236, 237, 238, 239, 240, 241, 0, 242, 243,
	362, 244, 363, 247, 245, 246, 0, 248, 249, 250,
	251, 252, 253, 254, 255, 364, 256, 257, 258, 259,
	0, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 273, 274, 365, 275,
	0, 276, 277, 278, 279, 280, 0, 281, 282, 283,
	284, 412, 0, 285, 286, 287, 288, 0, 289, 290,
	366, 291, 0, 292, 293, 294, 295, 296, 297, 298,
	299, 367, 300, 0, 368, 0, 301, 302, 0, 303,
	304, 0, 414, 369, 0, 0, 413, 305, 370, 306,
	371, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 314, 315, 316, 317, 318, 0, 0, 319, 320,
	321, 322, 372, 373, 0, 323, 0, 324, 86, 0,
	0, 0, 325, 326, 327, 328, 329, 330, 331, 0,
	89, 90, 91, 92, 93, 94, 95, 0, 96, 97,
	98, 0, 0, 0, 0, 0, 0, 0, 99, 100,
	0, 101, 102, 0, 103, 104, 105, 332, 333, 0,
	334, 0, 335, 336, 0, 106, 337, 107, 108, 109,
	110, 0, 0, 111, 338, 339, 112, 0, 113, 114,
	115, 116, 340, 0, 0, 0, 117, 118, 119, 120,
	121, 0, 0, 122, 123, 124, 0, 125, 126, 127,
	128, 129, 130, 0, 0, 0, 131, 132, 133, 0,
	0, 0, 0, 0, 0, 134, 135, 136, 137, 138,
	341, 139, 140, 342, 343, 141, 0, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 152, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 344, 162, 163, 164, 345,
	0, 165, 0, 166, 167, 346, 168, 0, 169, 0,
	170, 0, 0, 0, 171, 172, 173, 0, 174, 175,
	347, 0, 348, 176, 0, 177, 178, 179, 180, 440,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 0, 349, 192, 193, 194, 195, 350,
	351, 352, 0, 353, 0, 196, 0, 197, 0, 198,
	199, 200, 201, 202, 0, 0, 203, 354, 0, 204,
	0, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 0, 356, 221, 222, 357, 0,
	223, 224, 225, 0, 358, 226, 359, 227, 228, 229,
	0, 230, 0, 0, 231, 232, 0, 0, 233, 360,
	0, 234, 0, 361, 235, 236, 237, 238, 239, 240,
	241, 0, 242, 243, 362, 244, 363, 247, 245, 246,
	0, 248, 249, 250, 251, 252, 253, 254, 255, 364,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	273, 274, 365, 275, 0, 276, 277, 278, 279, 280,
	0, 281, 282, 283, 284, 412, 0, 285, 286, 287,
	288, 0, 289, 290, 366, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 368, 0,
	301, 302, 0, 303, 304, 0, 414, 369, 0, 0,
	413, 305, 370, 306, 371, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 314, 315, 316, 317, 318,
	0, 0, 319, 320, 321, 322, 372, 373, 0, 323,
	0, 324, 86, 0, 0, 0, 325, 326, 327, 328,
	329, 330, 331, 0, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 0,
	0, 0, 99, 100, 0, 101, 102, 0, 103, 104,
	105, 332, 333, 0, 334, 0, 335, 336, 0, 106,
	337, 107, 108, 109, 110, 0, 0, 111, 338, 339,
	112, 0, 113, 114, 115, 116, 340, 0, 0, 0,
	117, 118, 119, 120, 121, 0, 0, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 0,
	131, 132, 133, 0, 0, 0, 0, 0, 0, 134,
	135, 136, 137, 138, 341, 139, 140, 342, 343, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 152, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 344,
	162, 163, 164, 345, 0, 165, 0, 166, 167, 346,
	168, 0, 169, 0, 170, 0, 0, 0, 171, 172,
	173, 0, 174, 175, 347, 0, 348, 176, 0, 177,
	178, 179, 180, 438, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 0, 349, 192,
	193, 194, 195, 350, 351, 352, 0, 353, 0, 196,
	0, 197, 0, 198, 199, 200, 201, 202, 0, 0,
	203, 354, 0, 204, 0, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 0, 356,
	221, 222, 357, 0, 223, 224, 225, 0, 358, 226,
	359, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 0, 234, 0, 361, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 362, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 364, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 273, 274, 365, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	0, 285, 286, 287, 288, 0, 289, 290, 366, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 368, 0, 301, 302, 0, 303, 304, 0,
	414, 369, 0, 0, 413, 305, 370, 306, 371, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 314,
	315, 316, 317, 318, 0, 0, 319, 320, 321, 322,
	372, 373, 0, 323, 0, 324, 86, 0, 0, 0,
	325, 326, 327, 328, 329, 330, 331, 0, 89, 90,
	91, 92, 93, 94, 95, 0, 96, 97, 98, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 0, 101,
	102, 0, 103, 104, 105, 332, 333, 0, 334, 0,
	335, 336, 0, 106, 337, 107, 108, 109, 110, 0,
	0, 111, 338, 339, 112, 0, 113, 114, 115, 116,
	340, 0, 0, 0, 117, 118, 119, 120, 121, 0,
	0, 122, 123, 124, 0, 125, 126, 127, 128, 129,
	130, 0, 0, 0, 131, 132, 133, 0, 0, 0,
	0, 0, 0, 134, 135, 136, 137, 138, 341, 139,
	140, 342, 343, 141, 0, 142, 0, 143, 144, 145,
	146, 147, 0, 148, 149, 150, 0, 0, 151, 152,
	153, 154, 0, 155, 156, 157, 0, 158, 0, 159,
	0, 160, 161, 344, 162, 163, 164, 345, 0, 165,
	0, 166, 167, 346, 168, 0, 169, 0, 170, 0,
	0, 0, 171, 172, 173, 0, 174, 175, 347, 0,
	348, 176, 0, 177, 178, 179, 180, 432, 182, 183,
	184, 185, 0, 186, 187, 0, 188, 189, 190, 0,
	191, 0, 349, 192, 193, 194, 195, 350, 351, 352,
	0, 353, 0, 196, 0, 197, 0, 198, 199, 200,
	201, 202, 0, 0, 203, 354, 0, 204, 0, 0,
	205, 206, 410, 0, 0, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	411, 355, 0, 356, 221, 222, 357, 0, 223, 224,
	225, 0, 358, 226, 359, 227, 228, 229, 0, 230,
	0, 0, 231, 232, 0, 0, 233, 360, 0, 234,
	0, 361, 235, 236, 237, 238, 239, 240, 241, 0,
	242, 243, 362, 244, 363, 247, 245, 246, 0, 248,
	249, 250, 251, 252, 253, 254, 255, 364, 256, 257,
	258, 259, 0, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 273, 274,
	365, 275, 0, 276, 277, 278, 279, 280, 0, 281,
	282, 283, 284, 412, 0, 285, 286, 287, 288, 0,
	289, 290, 366, 291, 0, 292, 293, 294, 295, 296,
	297, 298, 299, 367, 300, 0, 368, 0, 301, 302,
	0, 303, 304, 0, 414, 369, 0, 0, 413, 305,
	370, 306, 371, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 314, 315, 316, 317, 318, 0, 0,
	319, 320, 321, 322, 372, 373, 0, 323, 0, 324,
	86, 0, 0, 0, 325, 326, 327, 328, 329, 330,
	331, 0, 89, 90, 91, 92, 93, 94, 95, 0,
	96, 97, 98, 0, 0, 0, 0, 0, 0, 0,
	99, 100, 0, 101, 102, 0, 103, 104, 105, 332,
	333, 0, 334, 0, 335, 336, 0, 106, 337, 107,
	108, 109, 110, 0, 0, 111, 338, 339, 112, 0,
	113, 114, 115, 116, 340, 0, 0, 0, 117, 118,
	119, 120, 121, 0, 0, 122, 123, 124, 0, 125,
	126, 127, 128, 129, 130, 0, 0, 0, 131, 132,
	133, 0, 0, 0, 0, 0, 0, 134, 135, 136,
	137, 138, 341, 139, 140, 342, 343, 141, 0, 142,
	0, 143, 144, 145, 146, 147, 0, 148, 149, 150,
	0, 0, 151, 152, 153, 154, 0, 155, 156, 157,
	0, 158, 0, 159, 0, 160, 161, 344, 162, 163,
	164, 345, 0, 165, 0, 166, 167, 346, 168, 0,
	169, 0, 170, 0, 0, 0, 171, 172, 173, 0,
	174, 175, 347, 0, 348, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 0, 186, 187, 0,
	188, 189, 190, 0, 191, 0, 349, 192, 193, 194,
	195, 350, 351, 352, 0, 353, 0, 196, 0, 197,
	0, 198, 199, 200, 201, 202, 0, 0, 203, 354,
	0, 204, 0, 0, 205, 206, 410, 0, 0, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 411, 355, 0, 356, 221, 222,
	357, 0, 223, 224, 225, 0, 358, 226, 359, 227,
	228, 229, 0, 230, 0, 0, 231, 232, 0, 0,
	233, 360, 0, 234, 0, 361, 235, 236, 237, 238,
	239, 240, 241, 0, 242, 243, 362, 244, 363, 247,
	245, 246, 0, 248, 249, 250, 251, 252, 253, 254,
	255, 364, 256, 257, 407, 259, 0, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 273, 274, 365, 275, 0, 276, 277, 278,
	279, 280, 0, 281, 282, 283, 284, 412, 0, 285,
	286, 287, 288, 0, 289, 290, 366, 291, 0, 292,
	293, 294, 295, 296, 297, 298, 299, 367, 300, 0,
	368, 0, 301, 302, 0, 303, 304, 0, 414, 369,
	0, 0, 413, 305, 370, 306, 371, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 314, 315, 316,
	317, 318, 0, 0, 319, 320, 321, 322, 372, 373,
	0, 323, 0, 324, 86, 0, 0, 0, 325, 326,
	327, 328, 329, 330, 331, 0, 89, 90, 91, 92,
	93, 94, 95, 0, 96, 97, 98, 0, 0, 0,
	0, 0, 0, 0, 99, 100, 0, 101, 102, 0,
	103, 104, 105, 332, 333, 0, 334, 0, 335, 336,
	0, 106, 337, 107, 108, 109, 110, 0, 0, 111,
	338, 339, 112, 0, 113, 114, 115, 116, 340, 0,
	0, 0, 117, 118, 119, 120, 121, 0, 0, 122,
	123, 124, 0, 125, 126, 127, 128, 129, 130, 0,
	0, 0, 131, 132, 133, 0, 0, 0, 0, 0,
	0, 134, 135, 136, 137, 138, 341, 139, 140, 342,
	343, 141, 0, 142, 0, 143, 144, 145, 146, 147,
	0, 148, 149, 150, 0, 0, 151, 152, 153, 154,
	0, 155, 156, 157, 0, 158, 0, 159, 0, 160,
	161, 344, 162, 163, 164, 345, 0, 165, 0, 166,
	167, 346, 168, 0, 169, 0, 170, 0, 0, 0,
	171, 172, 173, 0, 174, 175, 347, 0, 348, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	0, 186, 187, 0, 188, 189, 190, 0, 191, 0,
	349, 192, 193, 194, 195, 350, 351, 352, 0, 353,
	0, 196, 0, 197, 0, 198, 199, 200, 201, 202,
	0, 0, 203, 354, 0, 204, 0, 0, 205, 206,
	76, 0, 0, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 83, 355,
	0, 356, 221, 222, 357, 0, 223, 224, 225, 0,
	358, 226, 359, 227, 228, 229, 0, 230, 0, 0,
	231, 232, 0, 0, 233, 360, 0, 234, 0, 361,
	235, 236, 237, 238, 239, 240, 241, 0, 242, 243,
	362, 244, 363, 247, 245, 246, 0, 248, 249, 250,
	251, 252, 253, 254, 255, 364, 256, 257, 258, 259,
	0, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 273, 274, 365, 275,
	0, 276, 277, 278, 279, 280, 0, 281, 282, 283,
	284, 77, 0, 285, 286, 287, 288, 0, 289, 290,
	366, 291, 0, 292, 293, 294, 295, 296, 297, 298,
	299, 367, 300, 0, 368, 0, 301, 302, 0, 303,
	304, 0, 82, 369, 0, 0, 78, 305, 370, 306,
	371, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 314, 315, 316, 317, 318, 0, 0, 319, 320,
	321, 322, 372, 373, 0, 323, 0, 324, 86, 0,
	0, 0, 325, 326, 327, 328, 329, 330, 331, 0,
	89, 90, 91, 92, 93, 94, 95, 0, 96, 97,
	98, 0, 0, 0, 0, 0, 0, 0, 99, 100,
	0, 101, 102, 0, 103, 104, 105, 332, 333, 0,
	334, 0, 335, 336, 0, 106, 337, 107, 108, 109,
	110, 0, 0, 111, 338, 339, 112, 0, 113, 114,
	115, 116, 340, 0, 0, 0, 117, 118, 119, 120,
	121, 0, 0, 122, 123, 124, 0, 125, 126, 127,
	128, 129, 130, 0, 0, 0, 131, 132, 133, 0,
	0, 0, 0, 0, 0, 134, 135, 136, 137, 138,
	341, 139, 140, 342, 343, 141, 0, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 152, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 344, 162, 163, 164, 345,
	0, 165, 0, 166, 167, 346, 168, 0, 169, 0,
	170, 0, 0, 0, 171, 172, 173, 0, 174, 175,
	347, 0, 348, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 0, 349, 192, 193, 194, 195, 350,
	351, 352, 0, 353, 0, 196, 0, 197, 0, 198,
	199, 200, 201, 202, 0, 0, 203, 354, 0, 204,
	0, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 0, 356, 221, 222, 357, 0,
	223, 224, 225, 0, 358, 226, 359, 227, 228, 229,
	0, 230, 0, 0, 231, 232, 0, 0, 233, 360,
	0, 234, 0, 361, 235, 236, 237, 238, 0, 240,
	241, 0, 242, 243, 362, 244, 363, 247, 245, 246,
	0, 248, 249, 250, 251, 252, 253, 0, 255, 364,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	273, 274, 365, 0, 0, 276, 277, 278, 279, 280,
	0, 281, 282, 283, 284, 412, 0, 285, 286, 287,
	288, 0, 289, 290, 366, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 368, 0,
	301, 302, 0, 303, 304, 0, 414, 369, 0, 0,
	413, 305, 370, 306, 371, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 314, 315, 316, 317, 318,
	0, 0, 319, 320, 321, 322, 372, 373, 0, 323,
	810, 324, 828, 829, 830, 0, 325, 326, 327, 328,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 831,
	810, 0, 828, 829, 830, 0, 0, 812, 0, 0,
	0, 0, 0, 837, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 0, 0, 0, 812, 0, 0,
	0, 0, 0, 837, 0, 0, 0, 0, 0, 811,
	0, 810, 0, 828, 829, 830, 0, 825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 811,
	831, 0, 0, 0, 0, 0, 0, 825, 812, 0,
	0, 0, 0, 0, 837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 828, 829, 830,
	811, 0, 0, 0, 0, 0, 0, 0, 825, 0,
	0, 0, 0, 0, 831, 0, 0, 0, 0, 0,
	0, 0, 812, 0, 0, 0, 0, 0, 837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 810,
	838, 828, 829, 830, 811, 0, 0, 0, 0, 0,
	0, 0, 825, 0, 0, 0, 0, 0, 831, 0,
	838, 0, 836, 0, 0, 0, 812, 0, 0, 0,
	0, 0, 837, 0, 0, 0, 833, 0, 0, 0,
	0, 0, 836, 0, 0, 0, 0, 826, 0, 0,
	0, 0, 0, 0, 0, 0, 833, 0, 811, 0,
	0, 838, 0, 0, 0, 0, 825, 826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 832, 836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 833, 0, 0,
	0, 0, 832, 0, 0, 0, 0, 0, 826, 0,
	0, 0, 0, 0, 810, 838, 828, 829, 830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 831, 0, 0, 0, 836, 0, 0,
	827, 812, 0, 832, 0, 0, 0, 837, 0, 0,
	0, 833, 0, 0, 0, 0, 0, 835, 0, 0,
	827, 0, 826, 0, 0, 0, 0, 0, 0, 838,
	0, 0, 0, 811, 0, 0, 0, 835, 0, 0,
	0, 825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 836, 0, 0, 0, 0, 0, 832, 0, 0,
	0, 827, 0, 0, 0, 833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 826, 0, 835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 834,
	0, 0, 822, 823, 824, 0, 821, 818, 819, 820,
	813, 814, 815, 816, 817, 0, 0, 0, 0, 834,
	1671, 832, 822, 823, 824, 827, 821, 818, 819, 820,
	813, 814, 815, 816, 817, 0, 0, 0, 0, 0,
	1649, 0, 835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 838, 0, 0, 0, 0, 0,
	834, 0, 0, 822, 823, 824, 0, 821, 818, 819,
	820, 813, 814, 815, 816, 817, 836, 0, 0, 827,
	0, 1644, 0, 810, 0, 828, 829, 830, 0, 0,
	833, 0, 0, 0, 0, 0, 835, 0, 0, 0,
	0, 826, 831, 0, 0, 0, 0, 0, 0, 0,
	812, 0, 0, 0, 834, 0, 837, 822, 823, 824,
	0, 821, 818, 819, 820, 813, 814, 815, 816, 817,
	0, 0, 0, 0, 0, 1640, 832, 810, 0, 828,
	829, 830, 811, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 0, 0, 0, 0, 831, 0, 0, 0,
	0, 0, 0, 0, 812, 0, 0, 0, 834, 0,
	837, 822, 823, 824, 0, 821, 818, 819, 820, 813,
	814, 815, 816, 817, 0, 0, 0, 0, 810, 1582,
	828, 829, 830, 0, 827, 0, 811, 0, 0, 0,
	0, 0, 0, 0, 825, 0, 0, 831, 0, 0,
	0, 835, 0, 0, 0, 812, 0, 0, 0, 0,
	0, 837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 1309, 1310, 1311, 811, 0, 0,
	0, 0, 0, 838, 0, 825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 836, 0, 0, 0, 0,
	0, 0, 0, 834, 0, 0, 822, 823, 824, 833,
	821, 818, 819, 820, 813, 814, 815, 816, 817, 0,
	826, 0, 0, 0, 1559, 0, 0, 838, 0, 1306,
	0, 0, 0, 0, 810, 0, 828, 829, 830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 836,
	0, 0, 0, 831, 0, 832, 0, 0, 0, 0,
	0, 812, 0, 833, 0, 0, 0, 837, 0, 0,
	0, 0, 0, 0, 826, 0, 0, 0, 838, 0,
	0, 0, 0, 810, 0, 828, 829, 830, 0, 0,
	0, 0, 0, 811, 0, 0, 0, 0, 0, 0,
	836, 825, 831, 0, 0, 0, 0, 0, 0, 832,
	812, 0, 0, 827, 833, 0, 837, 0, 0, 0,
	0, 0, 0, 0, 0, 826, 0, 0, 0, 0,
	835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 811, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 0, 0, 1312, 0, 0, 0, 0, 0,
	832, 810, 0, 828, 829, 830, 0, 827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1307,
	831, 0, 0, 0, 835, 0, 0, 0, 812, 0,
	0, 0, 0, 0, 837, 0, 0, 0, 0, 0,
	0, 0, 834, 0, 838, 822, 823, 824, 0, 821,
	818, 819, 820, 813, 814, 815, 816, 817, 827, 0,
	811, 0, 0, 1499, 0, 0, 836, 0, 825, 0,
	0, 0, 0, 0, 0, 835, 0, 0, 0, 0,
	833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 826, 0, 838, 0, 0, 834, 0, 0, 822,
	823, 824, 0, 821, 818, 819, 820, 813, 814, 815,
	816, 817, 1308, 0, 0, 836, 0, 1439, 0, 0,
	0, 0, 0, 0, 0, 0, 832, 0, 0, 833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	826, 0, 0, 1744, 0, 0, 0, 834, 0, 0,
	822, 823, 824, 0, 821, 818, 819, 820, 813, 814,
	815, 816, 817, 0, 0, 0, 0, 0, 1414, 0,
	810, 838, 828, 829, 830, 832, 0, 0, 0, 0,
	0, 0, 0, 0, 827, 0, 0, 0, 0, 831,
	0, 0, 0, 836, 0, 0, 0, 812, 0, 0,
	0, 835, 0, 837, 1303, 1304, 1305, 833, 1302, 1299,
	1300, 1301, 1294, 1295, 1296, 1297, 1298, 0, 826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 811,
	0, 0, 810, 827, 828, 829, 830, 825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	835, 831, 0, 832, 0, 982, 0, 0, 0, 812,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 0,
	0, 0, 1743, 834, 0, 0, 822, 823, 824, 0,
	821, 818, 819, 820, 813, 814, 815, 816, 817, 0,
	0, 811, 0, 0, 1078, 0, 0, 0, 0, 825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 827, 0, 1323, 0, 0, 0, 0, 1322, 0,
	0, 0, 834, 0, 0, 822, 823, 824, 835, 821,
	818, 819, 820, 813, 814, 815, 816, 817, 0, 0,
	838, 1483, 983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	834, 0, 838, 822, 823, 824, 0, 821, 818, 819,
	820, 813, 814, 815, 816, 817, 0, 0, 0, 0,
	0, 0, 832, 0, 836, 841, 0, 0, 0, 0,
	0, 810, 0, 828, 829, 830, 0, 0, 833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 826,
	831, 0, 0, 840, 0, 0, 0, 0, 812, 810,
	0, 828, 829, 830, 837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 831, 0,
	827, 0, 0, 0, 832, 0, 812, 0, 0, 0,
	811, 0, 837, 0, 0, 0, 0, 835, 825, 0,
	0, 810, 0, 828, 829, 830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 811, 0,
	831, 0, 0, 0, 0, 0, 825, 0, 812, 0,
	0, 0, 0, 0, 837, 0, 0, 0, 0, 0,
	0, 0, 827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 835,
	811, 0, 0, 0, 0, 0, 0, 0, 825, 834,
	0, 0, 822, 823, 824, 0, 821, 818, 819, 820,
	813, 814, 815, 816, 817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 0, 0, 838,
	0, 834, 0, 0, 822, 823, 824, 833, 821, 818,
	819, 820, 813, 814, 815, 816, 817, 0, 826, 0,
	0, 836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 0,
	0, 838, 0, 0, 0, 0, 826, 0, 0, 0,
	0, 0, 0, 832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 833, 0, 0,
	0, 832, 402, 0, 0, 0, 0, 0, 826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 810, 0,
	828, 829, 830, 0, 0, 0, 0, 0, 0, 0,
	0, 827, 0, 0, 0, 0, 810, 831, 828, 829,
	830, 0, 0, 832, 0, 812, 0, 0, 835, 0,
	0, 837, 0, 0, 0, 831, 0, 0, 1324, 827,
	0, 0, 0, 812, 0, 0, 0, 0, 0, 837,
	0, 0, 0, 0, 0, 0, 835, 811, 0, 0,
	810, 0, 828, 829, 830, 825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 811, 0, 0, 0, 831,
	0, 827, 0, 825, 0, 0, 0, 812, 0, 0,
	0, 0, 0, 837, 0, 0, 0, 0, 835, 0,
	834, 0, 0, 822, 823, 824, 0, 821, 818, 819,
	820, 813, 814, 815, 816, 817, 0, 0, 0, 811,
	0, 0, 1433, 0, 0, 0, 0, 825, 834, 0,
	0, 822, 823, 824, 0, 821, 818, 819, 820, 813,
	814, 815, 816, 817, 0, 0, 1329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 838, 0,
	834, 0, 0, 822, 823, 824, 0, 821, 818, 819,
	820, 813, 814, 815, 816, 817, 838, 0, 0, 0,
	836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 833, 0, 0, 0, 836, 0,
	0, 0, 0, 0, 0, 826, 0, 0, 0, 0,
	0, 0, 833, 0, 0, 0, 0, 0, 0, 0,
	838, 0, 0, 826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 0, 828, 829, 830, 0, 0,
	832, 0, 836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 831, 0, 0, 1286, 833, 0, 832, 0,
	812, 0, 0, 0, 0, 0, 837, 826, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 828, 829,
	830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 811, 0, 0, 831, 0, 0, 827, 0,
	825, 0, 832, 812, 810, 0, 828, 829, 830, 837,
	0, 0, 0, 0, 0, 835, 827, 1291, 0, 0,
	0, 0, 0, 831, 0, 0, 0, 0, 0, 0,
	0, 812, 0, 835, 0, 811, 0, 837, 0, 0,
	0, 0, 0, 825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	827, 0, 0, 811, 0, 0, 0, 0, 0, 0,
	0, 825, 0, 0, 0, 0, 0, 835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 834, 0, 0,
	822, 823, 824, 0, 821, 818, 819, 820, 813, 814,
	815, 816, 817, 838, 0, 834, 0, 0, 822, 823,
	824, 0, 821, 818, 819, 820, 813, 814, 815, 816,
	817, 0, 0, 0, 0, 836, 1010, 0, 1025, 1002,
	1018, 1017, 0, 0, 1003, 0, 0, 0, 0, 833,
	0, 0, 1027, 1026, 0, 0, 838, 0, 0, 834,
	826, 0, 822, 823, 824, 0, 821, 818, 819, 820,
	813, 814, 815, 816, 817, 0, 0, 0, 836, 0,
	0, 0, 0, 0, 838, 0, 0, 0, 0, 0,
	0, 0, 833, 0, 0, 832, 0, 0, 1023, 0,
	0, 1015, 1014, 826, 0, 0, 836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1013,
	833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 826, 0, 0, 0, 0, 0, 0, 832, 0,
	0, 0, 0, 1012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1006, 1007, 1008,
	0, 688, 0, 0, 0, 0, 827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 835, 834, 0, 1016, 822, 823, 824, 0, 821,
	818, 819, 820, 813, 814, 815, 816, 817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 834, 0, 1011, 822, 823,
	824, 0, 821, 818, 819, 820, 813, 814, 815, 816,
	817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 834, 0, 0, 822, 823, 824, 0,
	821, 818, 819, 820, 813, 814, 815, 816, 817, 0,
	0, 0, 1009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1005, 0, 0, 0, 0, 0, 0,
	0, 0, 1004, 0, 0, 1024, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1028,
}
var sqlPact = [...]int{

	87, -1000, -204, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 453,
	-1000, -1000, -1000, 291, 437, -119, 915, 915, -1000, -1000,
	24600, 886, 34, 34, 34, 107, 365, -93, -1000, 252,
	-148, 24206, 19084, 902, -206, 17902, -76, 87, 18690, 19084,
	23812, 707, 483, 17902, 23418, 23024, 22630, -1000, 11924, -1000,
	-1000, -1000, -1000, 296, -1000, -207, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 293, -1000, 22236, 22236, 456, -1000,
	-1000, 210, -37, 929, -1000, -200, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 704, -1000, 289, 700,
	641, -38, 458, -1000, 456, -1000, -1000, -1000, 17902, -1000,
	21842, 505, 21448, -1000, 252, -1000, -1000, -1000, 346, 883,
	883, 883, 903, -150, -152, -93, -208, 19084, -1000, -75,
	-1000, -1000, -1000, -1000, -1000, -208, 8558, 8558, -1000, -1000,
	-76, -1000, -62, 15930, -320, -1000, 7706, -1000, 372, 752,
	180, 178, 750, 17902, 19084, 138, 21054, -1000, 748, 53,
	747, -1000, -213, 745, -1000, -224, -1000, -1000, -1000, -1000,
	-1000, -1000, -76, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18296, 855, 18296, -1000, -1000, -1000, 424, 12744, 12338,
	809, 1118, -1000, -1000, -1000, -201, 3463, 19084, 715, 18296,
	19084, -1000, 19084, -1000, 422, -1000, -1000, 63, -1000, -77,
	374, 20660, -1000, 370, -1000, 346, -1000, 292, 405, 8984,
	10262, -93, -1000, -1000, -93, -93, 10262, -1000, -1000, 19084,
	-208, 936, 19084, 629, -209, -1000, 26651, -1000, -1000, 10262,
	10262, 10262, 10262, 10262, 241, -78, -1000, -1000, -1000, 4721,
	-1000, -1000, -320, -78, -137, -1000, -1000, -79, -320, -1000,
	-1000, -1000, -1000, -80, 1044, 277, -1000, -1000, -1000, 10262,
	-30, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	714, -1000, -1000, -1000, -1000, -1000, -1000, -81, -82, -83,
	-84, -85, -87, -92, -95, -97, -98, -100, 212, -1000,
	-14, -1000, -1000, -14, -14, -1000, -109, -109, -108, -1000,
	-1000, -1000, -109, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -101, 47, -1000, -1000, -1000, 19084, -320, -1000,
	3056, 3463, 10262, -229, -1000, 27236, -1000, -219, 395, -1000,
	17114, 869, 839, 826, 17902, 97, 85, 19084, -23, 15,
	935, 15138, -1000, 19084, 19084, -1000, 19084, -1000, -1000, 19084,
	19084, 19084, -148, 16326, 83, -214, 19084, 19084, -1000, 612,
	300, -210, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 990, -1000, -1000, -1000, -1000, 1031, -210, -1000,
	-1000, -1000, -1000, -1000, 273, -1000, -1000, -1000, -1000, 3463,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19084, -1000, -1000, -1000,
	-1000, -1000, 17902, 16720, 743, 288, 356, -1000, 742, -1000,
	-1000, -1000, -1000, 27236, -1000, 27236, 185, 492, -1000, 492,
	-211, -1000, 26452, -1000, -103, -230, -1000, -23, 14742, 8558,
	27352, 19084, 49, 10262, 10262, 10262, 10262, 10262, 10262, 10262,
	10262, 10262, 10262, 10262, 10262, 10262, 10262, 10262, 10262, 10262,
	10262, 10262, 10262, 10262, 712, 82, 269, 508, -110, 522,
	3463, -1000, -1000, 969, 969, 969, 2476, 2476, -41, -1000,
	-314, 26094, -212, -320, -1000, -1000, 6854, 6427, -320, 3868,
	-1000, 771, 1028, -18, 27236, 721, 532, -104, 10262, 897,
	10262, 10688, 10262, 10262, 5147, 10262, 10262, 10262, 10262, -1000,
	-105, -1000, -1000, -1000, -1000, 1026, -1000, -1000, 1025, -1000,
	1022, -23, -154, -1000, -1000, -1000, -1000, 2307, 7706, -1000,
	364, 19084, 19084, 19084, -1000, -1000, 352, 20266, -1000, 27352,
	19084, -1000, -106, -107, 443, 442, 19084, 19084, 19872, 19478,
	19084, 367, 19084, 19084, 170, -1000, 10262, 279, -1000, 13952,
	-8, 19084, -28, -1000, -1000, -1000, -52, 19084, -1000, -1000,
	-1000, 53, -1000, -213, -1000, -1000, 19084, -214, -215, 19084,
	-1000, 355, 195, -1000, -1000, 13150, -1000, -1000, -1000, 771,
	1019, -1000, -220, -1000, -1000, -155, -216, -1000, -1000, -1000,
	-1000, 19084, 91, 19084, 19084, 741, 19084, -1000, -1000, -1000,
	10262, -1000, -1000, -1000, -148, 19084, -1000, 525, -217, 1087,
	17508, 17508, -1000, 13556, -1000, -1000, 924, -1000, -1000, -1000,
	-1000, 19, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -108, 212, -109, -109, -109, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -14, -14, -14, -1000, -1000,
	-43, 433, 433, 906, 906, 906, 697, 697, 329, 1971,
	359, 359, 359, 2402, 290, 290, 359, 359, 359, 2476,
	27264, 385, 10262, 75, 445, -110, 10262, -1000, 344, -1000,
	-1000, -1000, 603, -111, 10688, 10688, -1000, -1000, -1000, 4721,
	-112, -1000, -1000, -1000, -1000, -1000, -113, 10262, -1000, 10262,
	-231, -297, -1000, 27236, -1000, -235, -1000, -1000, -140, 10262,
	10262, 10262, -158, -1000, 73, -1000, 71, 70, 69, -1000,
	-114, -159, 248, -1000, 10262, 245, -115, -116, 10262, 27193,
	-160, 582, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -161,
	27010, -162, 2455, -1000, 10688, 10688, 10688, 4721, -117, -163,
	26390, -290, 26966, 8132, 8132, 8132, -164, 26948, 10262, -290,
	2344, -237, -239, -243, 992, -244, -166, -168, 525, -1000,
	-1000, 10262, -1000, -1000, -1000, 68, 65, 740, -1000, 325,
	-1000, 479, 10262, 19084, -118, -120, 348, -1000, 738, 436,
	736, 436, -1000, -219, 382, -1000, -1000, 48, 27236, -1000,
	832, -245, -1000, -1000, -23, 15138, 7706, -249, -1000, -220,
	-220, -1000, -1000, -1000, -1000, -1000, -169, 19084, -1000, 16720,
	-121, 19084, -122, -123, 19084, -1000, -1000, -170, -1000, -1000,
	-1000, -1000, -1000, 528, 896, 14742, 452, 450, 14742, 1108,
	253, 253, 253, -1000, -1000, -1000, 19084, -124, -1000, 14348,
	-171, 1087, -69, -70, -1000, 981, 10262, 385, 10262, 10688,
	10688, -1000, 385, -1000, -1000, -1000, -1000, 579, -125, 10262,
	27352, 2418, 1069, -250, -1000, 4721, 6000, -221, 25968, 10262,
	-1000, -1000, -137, -1000, -172, 7280, -1000, 26679, -139, -139,
	-1000, 373, 363, 267, 148, 976, 1041, 761, -1000, 10262,
	26721, -1000, 15534, -22, 250, 25917, 27352, -1000, 10262, -1000,
	566, 10262, -1000, 27352, 10688, 10688, 10688, 10688, 10688, 10688,
	10688, 10688, 10688, 10688, 10688, 10688, 10688, 10688, 10688, 10688,
	10688, 10688, 519, 10688, 968, 968, 968, -222, 5573, -1000,
	713, 566, 10262, 10262, 27352, -174, -175, -178, -1000, 10262,
	-290, 10262, -1000, -1000, -1000, -181, -1000, 974, -1000, -1000,
	528, 26143, 19084, 19084, 19084, 731, 1317, -1000, 25863, -251,
	19084, 19084, -1000, 472, 515, 20, 19084, -1000, 19084, -1000,
	19084, 19084, 19084, 19084, -10, -148, -1000, -1000, -1000, -53,
	1038, -1000, -1000, 19084, -126, 16720, 11528, 271, -1000, -25,
	10262, 10262, 1087, 14742, 14742, 1622, 438, 14742, -1000, -1000,
	-1000, -1000, -127, 19084, 17508, 281, 972, -183, 907, 385,
	784, 428, 10262, 27352, 2040, -257, -1000, 10262, 10262, -1000,
	25664, -258, -1000, 10262, -1000, 27236, -1000, 1034, 10262, -184,
	-185, -187, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -188,
	-1000, -1000, 27236, 10262, -1000, -1000, 24994, 10262, -189, -1000,
	-190, 27236, 713, 27236, -1000, 414, 414, 968, 968, 968,
	923, 923, 540, 247, 1746, 1746, 1746, 1891, 369, 369,
	1746, 1746, 1746, 564, 490, -128, 26022, 10262, -259, -1000,
	-1000, -1000, 27236, 27236, -192, -1000, -1000, -1000, -290, 25549,
	-1000, -193, -25, -1000, -1000, -1000, -1000, 19084, -1000, 19084,
	-1000, 19084, 306, -1000, -1000, 423, -131, 10688, 19084, -1000,
	378, -263, -264, 286, -1000, 278, 10262, -1000, 27352, 436,
	436, -1000, 46, 40, -1000, 772, 11528, 822, -1000, -132,
	-1000, -265, 19084, -194, -269, -1000, 29, 849, 10262, -1000,
	-1000, -133, 19084, -1000, 19084, 27236, -290, -1000, 1622, -1000,
	-134, 10262, 14742, -1000, 19084, -270, -1000, -1000, -72, -73,
	-1000, 10262, 10262, 2040, -274, -1000, 27352, 385, 385, -1000,
	-1000, 25495, -1000, 26679, -1000, -1000, -1000, -1000, 27236, 223,
	-1000, 25441, -1000, -1000, -1000, 10688, 558, -138, 27352, 25400,
	-1000, -1000, -1000, -1000, -1000, -1000, 1218, -1000, -1000, -1000,
	10262, 26022, -144, -1000, -141, -1000, -1000, -1000, 187, -1000,
	-1000, 27236, 867, -1000, -1000, 19084, 19084, 139, -276, 19084,
	-1000, -1000, 4295, 378, -281, -1000, 378, 11528, 865, -320,
	19084, 865, 25380, 3868, -142, -225, -1000, 921, -1000, 19084,
	27236, -1000, -282, -1000, -1000, -1000, 385, 385, -1000, -1000,
	-1000, -195, 250, 888, -1000, 2629, 10688, 27352, -286, -1000,
	-1000, 2589, 392, 19084, 19084, 19084, -5, 19084, -1000, -1000,
	122, -1000, -23, -1000, -1000, 378, -1000, -1000, -1000, -1000,
	-1000, 849, -140, 11528, 19084, -143, -288, -1000, -1000, 189,
	10262, 2629, -293, -1000, -1000, 263, 319, -298, -305, -144,
	-1000, 10262, -1000, 15138, -1000, -1000, 865, -196, -311, -1000,
	-1000, -1000, -198, 9836, 9836, -290, -1000, -1000, 270, 268,
	304, -1000, -1000, -1000, -1000, -1000, 392, 27236, -278, -1000,
	-1000, 378, -1000, -1000, -1000, 11114, 354, 155, 26221, -1000,
	-1000, 783, -1000, 2, 596, 596, 263, -1000, -1000, 945,
	-1000, -1000, -1000, -1000, -1000, -1000, 959, -1000, -1000, 413,
	-1000, -1000, 9410, -1000, -1000, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 1304, 1302, 966, 1298, 1295, 1294, 1293, 1290, 77,
	1288, 1287, 85, 1286, 76, 1285, 1279, 1277, 44, 1275,
	1274, 1273, 1272, 74, 38, 1520, 101, 95, 1270, 1269,
	1268, 9, 72, 71, 1262, 45, 1261, 399, 1310, 47,
	1258, 17, 21, 284, 1257, 1255, 1254, 1253, 31, 1242,
	1235, 1234, 12, 35, 14, 1233, 11, 24, 1232, 1229,
	66, 1227, 78, 23, 91, 92, 1226, 1225, 367, 1224,
	13, 52, 1223, 33, 1219, 30, 50, 99, 1218, 452,
	42, 25, 43, 1213, 1211, 1210, 56, 61, 41, 1209,
	46, 34, 1195, 53, 1194, 94, 96, 1193, 1185, 1182,
	1175, 1171, 1168, 988, 1165, 7, 29, 51, 4, 26,
	0, 693, 549, 1161, 57, 37, 48, 40, 1159, 83,
	1156, 1155, 1154, 1151, 1149, 55, 1148, 1147, 49, 105,
	36, 63, 65, 19, 28, 62, 104, 199, 84, 1145,
	88, 1142, 32, 1141, 1139, 788, 60, 1138, 1137, 1133,
	786, 726, 644, 625, 1131, 1130, 638, 626, 1127, 1125,
	58, 1115, 1112, 109, 1111, 97, 73, 1110, 87, 1106,
	69, 1102, 522, 82, 79, 1101, 90, 54, 1100, 1099,
	1097, 22, 3, 10, 8, 5, 1, 16, 15, 1096,
	1094, 89, 67, 1092, 363, 1091, 1089, 27, 1088, 1087,
	20, 1084, 18, 1076, 6, 2, 1074, 106, 1073, 81,
	1068, 992, 1064, 110, 1058, 1055, 1037, 59,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 33, 33, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 29,
	29, 35, 35, 35, 34, 34, 30, 30, 5, 5,
	5, 9, 10, 10, 10, 10, 10, 10, 64, 64,
	63, 63, 67, 67, 11, 11, 12, 12, 12, 12,
	141, 141, 140, 13, 17, 207, 207, 207, 211, 211,
	212, 212, 213, 213, 213, 213, 213, 213, 213, 209,
	209, 19, 19, 19, 103, 103, 102, 102, 102, 102,
	104, 104, 104, 104, 165, 163, 163, 170, 170, 170,
	46, 46, 46, 46, 46, 162, 162, 162, 162, 171,
	171, 171, 171, 171, 171, 171, 47, 47, 47, 169,
	169, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 164, 164, 208, 208, 210, 210, 8, 8, 48,
	48, 49, 49, 107, 107, 107, 106, 179, 179, 180,
	180, 180, 181, 181, 181, 181, 181, 181, 181, 178,
	178, 176, 176, 177, 177, 177, 177, 214, 214, 105,
	105, 52, 52, 184, 184, 184, 184, 182, 182, 182,
	182, 182, 185, 183, 186, 186, 186, 186, 186, 129,
	129, 129, 22, 7, 7, 92, 92, 56, 56, 133,
	133, 133, 42, 42, 31, 31, 31, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 93, 93, 94, 94,
	21, 21, 21, 216, 216, 36, 36, 37, 6, 6,
	14, 44, 44, 99, 99, 99, 101, 101, 101, 100,
	100, 100, 23, 70, 70, 71, 71, 139, 72, 72,
	18, 18, 25, 25, 24, 24, 24, 24, 24, 24,
	26, 26, 27, 27, 27, 27, 27, 27, 27, 192,
	192, 192, 194, 194, 191, 15, 15, 15, 15, 193,
	193, 215, 215, 79, 79, 79, 51, 50, 50, 54,
	54, 53, 55, 55, 132, 77, 77, 77, 77, 95,
	96, 96, 97, 97, 98, 98, 76, 76, 115, 115,
	28, 28, 60, 60, 61, 61, 134, 134, 134, 134,
	135, 135, 135, 135, 135, 135, 130, 130, 130, 130,
	131, 131, 82, 82, 82, 82, 80, 80, 81, 81,
	136, 136, 136, 136, 78, 78, 137, 137, 137, 108,
	108, 142, 142, 142, 59, 59, 59, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 144, 144, 144,
	144, 146, 146, 146, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 147, 147, 154,
	154, 155, 155, 156, 157, 148, 148, 149, 149, 150,
	151, 158, 158, 158, 160, 160, 152, 152, 153, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 88, 88, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 187,
	187, 187, 187, 187, 187, 187, 189, 189, 190, 190,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 195, 195, 196, 196, 197, 197, 198, 198, 200,
	201, 201, 201, 202, 206, 206, 199, 199, 203, 203,
	203, 204, 204, 205, 205, 205, 205, 205, 119, 119,
	119, 120, 120, 121, 127, 127, 127, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 40, 40, 40, 65, 65, 117, 117,
	116, 116, 116, 118, 118, 66, 159, 159, 159, 159,
	159, 159, 159, 83, 83, 89, 84, 84, 85, 85,
	85, 85, 85, 85, 90, 91, 86, 86, 86, 114,
	114, 122, 126, 126, 125, 124, 124, 123, 123, 109,
	109, 109, 109, 109, 73, 73, 217, 217, 128, 128,
	74, 74, 75, 69, 69, 68, 68, 138, 138, 138,
	138, 62, 62, 43, 43, 57, 57, 58, 58, 41,
	41, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 161, 161, 161, 38, 38, 38, 39, 39,
	167, 167, 167, 168, 168, 168, 168, 166, 166, 166,
	166, 166, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175,
}
var sqlR2 = [...]int{

	0, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	4, 6, 1, 3, 2, 5, 3, 6, 4, 6,
	6, 6, 4, 8, 2, 3, 3, 6, 4, 3,
	2, 1, 1, 0, 2, 0, 2, 0, 1, 1,
	1, 5, 3, 5, 4, 6, 3, 5, 1, 3,
	1, 2, 2, 3, 2, 5, 1, 1, 1, 1,
	1, 3, 1, 6, 6, 1, 2, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 2, 3, 3, 2, 1, 3, 3, 3, 3,
	1, 3, 3, 2, 1, 1, 3, 1, 1, 1,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 0, 1,
	1, 2, 2, 4, 2, 4, 4, 3, 3, 4,
	2, 2, 0, 2, 0, 2, 0, 6, 9, 1,
	0, 1, 3, 1, 1, 1, 3, 2, 0, 3,
	1, 2, 2, 1, 1, 2, 4, 2, 5, 6,
	7, 3, 1, 4, 5, 5, 10, 1, 1, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 1,
	2, 1, 4, 10, 13, 1, 0, 1, 3, 3,
	3, 5, 2, 0, 1, 1, 0, 6, 6, 8,
	6, 8, 8, 10, 8, 10, 1, 0, 2, 0,
	3, 2, 2, 1, 0, 1, 0, 3, 3, 6,
	6, 1, 3, 1, 4, 2, 8, 5, 0, 4,
	3, 0, 7, 1, 3, 1, 1, 3, 5, 5,
	1, 1, 3, 3, 1, 2, 3, 2, 3, 4,
	1, 1, 8, 8, 1, 2, 4, 4, 4, 2,
	2, 3, 1, 3, 6, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
	0, 3, 1, 3, 2, 2, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 3, 0, 2, 0,
	2, 3, 2, 0, 1, 3, 2, 2, 1, 4,
	3, 4, 5, 4, 5, 4, 5, 2, 4, 1,
	1, 0, 2, 2, 2, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	0, 2, 5, 2, 3, 4, 0, 1, 1, 1,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 3, 0, 1,
	1, 1, 1, 5, 2, 1, 1, 1, 1, 4,
	1, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 0, 1, 4, 1, 3, 3, 5, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 5, 3, 4,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 6, 2,
	1, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 6, 6, 7, 1, 1, 1,
	3, 1, 1, 1, 2, 2, 2, 1, 1, 3,
	5, 6, 8, 6, 6, 4, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 6, 4, 4,
	4, 4, 6, 5, 5, 5, 4, 6, 4, 4,
	4, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 2, 2,
	0, 1, 4, 2, 2, 2, 2, 2, 4, 3,
	5, 4, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 3, 1, 3,
	3, 3, 2, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 2, 3, 0, 3, 3,
	2, 2, 1, 0, 2, 2, 3, 2, 1, 1,
	3, 5, 1, 2, 4, 2, 0, 1, 0, 2,
	2, 2, 3, 5, 1, 2, 1, 0, 1, 1,
	1, 3, 3, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 2, 1, 3, 3, 0, 1,
	2, 1, 1, 1, 1, 6, 2, 3, 5, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, -3, -4, -5, -9, -10, -11, -13,
	-14, -16, -17, -18, -19, -20, -21, -22, -23, 25,
	-6, -7, -8, -193, 128, 142, 163, 314, -24, -25,
	333, 336, 42, 75, 316, 372, 90, -192, -27, -26,
	429, 401, 411, 326, -28, 358, 392, 432, 358, 104,
	183, 117, 193, 385, 104, 183, 358, -12, 429, -18,
	-14, -23, -9, -211, 23, -212, -213, 90, 128, 163,
	326, 193, 117, 385, -211, -103, 220, 331, 366, -104,
	-102, -165, 362, 238, -63, -38, 4, -172, -174, 16,
	17, 18, 19, 20, 21, 22, 24, 25, 26, 34,
	35, 37, 38, 40, 41, 42, 51, 53, 54, 55,
	56, 59, 62, 64, 65, 66, 67, 72, 73, 74,
	75, 76, 79, 80, 81, 83, 84, 85, 86, 87,
	88, 92, 93, 94, 101, 102, 103, 104, 105, 107,
	108, 111, 113, 115, 116, 117, 118, 119, 121, 122,
	123, 126, 127, 128, 129, 131, 132, 133, 135, 137,
	139, 140, 142, 143, 144, 147, 149, 150, 152, 154,
	156, 160, 161, 162, 164, 165, 169, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 181, 182, 184, 185,
	186, 188, 191, 192, 193, 194, 201, 203, 205, 206,
	207, 208, 209, 212, 215, 218, 219, 223, 224, 225,
	226, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 242, 243, 246, 247, 248, 251, 253, 254, 255,
	257, 260, 261, 264, 267, 270, 271, 272, 273, 274,
	275, 276, 278, 279, 281, 284, 285, 283, 287, 288,
	289, 290, 291, 292, 293, 294, 296, 297, 298, 299,
	301, 302, 303, 304, 305, 306, 307, 308, 309, 310,
	311, 313, 314, 316, 317, 319, 321, 322, 323, 324,
	325, 327, 328, 329, 330, 333, 334, 335, 336, 338,
	339, 341, 343, 344, 345, 346, 347, 348, 349, 350,
	352, 356, 357, 359, 360, 367, 369, 372, 373, 374,
	375, 376, 377, 378, 381, 382, 383, 384, 385, 388,
	389, 390, 391, 395, 397, 402, 403, 404, 405, 406,
	407, 408, 43, 44, 46, 48, 49, 52, 60, 61,
	68, 106, 109, 110, 141, 145, 151, 166, 168, 190,
	195, 196, 197, 199, 213, 239, 241, 244, 250, 252,
	265, 269, 280, 282, 295, 318, 340, 351, 354, 363,
	368, 370, 392, 393, 4, 104, 72, 105, 165, 183,
	359, 362, 366, 23, -216, 366, -216, -216, -215, 358,
	358, -92, 104, 380, -26, -27, -25, -53, -54, 379,
	198, 138, 263, -24, -25, -192, -194, 298, -191, -38,
	220, 238, 331, 366, 362, -194, -50, -51, 23, 124,
	433, -136, -43, 259, -38, -75, 429, -3, -136, 175,
	-38, -43, 175, 158, 200, -137, -136, -38, 175, -62,
	175, -43, -64, 175, -63, -141, -140, -168, 4, -172,
	-174, -173, 392, 39, 45, 70, 78, 91, 157, 159,
	189, 202, 204, 214, 216, 240, 266, 268, 315, 337,
	396, 258, 433, 258, -103, -103, -37, 203, 364, 414,
	158, 408, -47, 6, 112, -67, 431, 158, -208, 258,
	158, -164, 158, 408, 203, -36, -37, -78, -136, -63,
	175, 183, -38, 175, -53, -54, -77, -95, -96, 217,
	256, -79, 23, 124, -79, -79, 51, 430, 430, 433,
	-194, -58, 429, -69, -68, -138, -110, 422, -112, 420,
	421, 426, 245, 409, -119, 380, -43, -113, 9, 429,
	-122, -189, -25, 141, 31, -120, -121, 318, -38, 8,
	5, 6, 7, -41, -144, -153, 371, 146, 249, 57,
	-187, -188, 4, -172, -167, -145, -155, -149, -152, 199,
	70, 96, 99, 97, 100, 332, 386, 58, 145, 269,
	280, 354, 368, 370, 250, 68, 166, 213, 127, 44,
	46, 48, 49, 60, 61, 106, 109, 110, 151, 195,
	196, 197, 252, 295, 340, 363, 393, -173, -156, -157,
	-150, -151, -158, -68, -75, 422, -43, 429, -73, -109,
	431, 434, 427, -74, -128, -110, 112, -33, 305, -32,
	19, 25, 128, 390, 141, 305, 305, 141, -137, -44,
	-43, 333, -38, 32, 141, -35, 433, 55, 311, 141,
	433, 141, 430, 433, -207, -62, 358, 104, -213, -207,
	215, -163, 112, -170, -162, -129, 9, 371, 146, 258,
	-169, 5, 421, -161, -168, 6, 8, 420, -163, 112,
	94, -171, 6, 4, -153, -129, 112, 220, 199, 431,
	-166, 4, -172, -174, -173, -175, 23, 27, 28, 29,
	30, 31, 32, 33, 36, 50, 57, 58, 63, 69,
	71, 82, 90, 95, 96, 97, 98, 99, 100, 112,
	114, 120, 124, 125, 130, 134, 138, 146, 148, 153,
	155, 158, 163, 167, 170, 180, 183, 187, 198, 200,
	210, 211, 217, 221, 222, 245, 249, 256, 258, 259,
	262, 263, 277, 286, 300, 312, 326, 332, 342, 355,
	358, 361, 364, 365, 371, 379, 380, 386, 387, 394,
	398, 399, 400, 401, -165, -210, 153, -207, -165, -165,
	215, -35, 433, 429, 245, -39, 175, -38, 245, -77,
	-96, -95, -97, -110, 23, -110, -112, -26, -26, -26,
	-55, -132, -110, -191, 32, -57, -38, -60, 158, 433,
	10, 69, 37, 420, 421, 422, 423, 424, 417, 418,
	419, 416, 412, 413, 414, 77, 227, 320, 12, 13,
	14, 29, 262, 216, 409, 337, 202, 43, 180, -40,
	32, 4, -45, -110, -110, -110, -110, -110, 268, -25,
	-25, -110, -65, -73, -25, -116, 427, 429, -73, 429,
	6, 6, 429, -123, -110, -195, 402, 153, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 282,
	-160, 395, -160, -160, -146, 429, -146, -147, 429, -146,
	429, -60, -43, -109, -166, 422, -166, -110, 433, 430,
	433, 364, -93, 82, 71, -106, 175, 71, -176, -38,
	82, -177, 63, 380, 286, 155, -93, 82, -93, 82,
	82, -136, 364, 364, -43, -108, 399, -99, -18, 429,
	112, 32, -70, -71, -139, -72, -43, 429, -38, -38,
	-43, -62, -63, -64, -12, -140, 364, -62, -57, 158,
	-46, 294, 306, 341, 329, 433, 5, 8, 8, 6,
	429, -166, -209, -38, -136, -48, -49, -107, -106, -178,
	-176, 183, 380, 141, 258, 245, 141, -98, 318, 319,
	433, -31, 33, 120, 429, 433, 430, -108, -61, -134,
	-136, -25, -135, 429, -138, -142, -143, -145, -154, -148,
	-152, -153, 47, 52, 360, 351, 195, 196, 197, 340,
	44, 295, 151, 127, 110, 109, 252, 49, 48, -156,
	-157, -150, -151, 106, 363, 46, 61, 60, 393, -63,
	362, -110, -110, -110, -110, -110, -110, -110, -110, -110,
	-110, -110, -110, -110, -110, -110, -110, -110, -110, -110,
	-110, -110, 216, 337, 43, 180, 364, 249, 245, 371,
	146, 381, 124, 254, -217, 355, 36, -114, -25, 429,
	-127, 30, 342, 23, -166, -119, 318, 429, 430, 433,
	-65, -118, 428, -110, -116, -65, 430, 430, -65, 394,
	23, 124, 422, -87, 406, 235, 107, 173, 232, -88,
	324, 8, -126, -125, 398, -196, 149, 167, 429, -110,
	-66, -159, 4, 406, 235, 107, 173, 232, 324, -83,
	-110, -84, -111, -112, 420, 421, 426, 429, 318, -85,
	-110, -65, -110, 50, 211, 365, -86, -110, 158, -65,
	-110, -65, -65, -65, 429, 8, 8, 8, -108, 430,
	428, 435, -128, -32, -43, -38, -38, 245, -106, 175,
	-142, -38, 429, 429, 205, 205, -38, -38, 175, -38,
	175, -38, -38, -33, 305, -38, -38, 305, -110, -101,
	258, -62, 392, -38, -60, 433, 414, -62, -35, -209,
	-209, 377, 76, 294, -170, -87, 8, 433, 430, 433,
	-39, 183, -63, -43, 141, -38, -132, -15, -18, -14,
	-23, -9, -38, -76, 167, 433, 91, -82, 204, 240,
	159, 214, 315, 189, -131, -130, 32, -38, -131, -25,
	-135, -134, -59, 31, -87, 429, 408, -110, 364, -217,
	355, -114, -110, 249, 371, 146, 381, 124, 254, 158,
	429, -111, -111, -65, -25, 429, 429, -65, -110, 433,
	428, 428, 433, 430, -54, 433, -53, -110, -65, -65,
	430, 364, 364, 364, 364, 429, 430, -124, -125, 130,
	-110, -201, 267, 429, 429, -110, 32, 430, 158, 430,
	-89, 277, 430, 10, 420, 421, 422, 423, 424, 417,
	418, 419, 416, 412, 413, 414, 77, 227, 320, 12,
	13, 14, 202, 180, -111, -111, -111, -65, 429, 430,
	-90, -91, 158, 153, 32, -86, -86, -86, 430, 158,
	-65, 433, 430, 430, 430, 8, 430, 433, 430, 430,
	-76, -110, 364, 364, 141, 245, -179, -177, -110, -57,
	429, 429, -29, 128, 333, -94, 141, -35, 141, -35,
	364, -93, 82, 364, 80, 430, -108, -71, -128, 430,
	430, -38, -107, 429, -39, 429, 429, -38, 430, -115,
	170, 51, -134, 204, 204, -134, -82, 204, -80, 266,
	-80, -80, -38, 429, 430, 427, 427, 8, -110, -110,
	-111, -111, 158, 429, -110, -117, -142, 29, 29, 430,
	-110, -65, 430, 433, 430, -110, -116, 430, 394, -54,
	-54, -54, 235, 173, 232, -88, 232, -88, -88, 8,
	6, 134, -110, 361, -202, -38, 429, 399, -53, 430,
	-142, -110, -90, -110, -142, -111, -111, -111, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -111, -111, 124, 245, 254, -111, 433, -65, 430,
	-91, -90, -110, -110, -142, 430, 430, 430, -65, -110,
	430, 8, -115, 428, -38, -38, -106, 141, -180, 82,
	-181, 69, 245, 249, 380, 286, 63, 112, 300, 430,
	430, -57, -57, 245, 112, 245, 112, 103, 374, -38,
	-38, -43, -38, -38, -38, -100, 429, 258, -18, 414,
	6, -57, 429, -48, -56, -133, -38, -190, 429, -187,
	-188, -41, 258, -197, 400, -110, -65, -134, -134, -81,
	387, 258, 204, -134, 429, -57, -130, 428, 8, 8,
	430, 29, 29, -110, -117, 430, 433, -110, -110, 430,
	430, -110, 6, -110, 430, 430, 430, 430, -110, -206,
	-38, -110, 430, 430, -91, 158, 124, 254, 429, -110,
	430, 430, 430, 430, -197, -106, -38, -63, 249, 205,
	429, -111, -43, -105, -214, 89, 353, 430, 430, 249,
	249, -110, -142, -35, -35, 364, 364, 125, -56, 82,
	-75, -25, 429, 430, -57, 430, 430, 433, -42, -73,
	69, -42, -110, 429, -43, -198, -200, -38, -81, 429,
	-110, -134, -57, 430, 428, 428, -110, -110, 430, -142,
	430, -54, -199, 274, 430, -111, 158, 429, -117, 430,
	-181, -110, -52, 429, 429, 300, -34, 69, -38, -38,
	385, 246, 430, -38, -105, 430, -105, -133, -31, -63,
	-31, 430, -65, 429, 433, 32, -57, 430, 430, -54,
	51, -111, -117, 430, 430, -184, 229, -57, -57, -43,
	-30, 387, -63, 333, -108, -105, -42, -54, -56, -200,
	-202, 430, -203, 293, 319, -65, 430, -182, -185, -183,
	258, 159, 273, 338, 430, 430, -52, -110, -70, -31,
	430, 430, 430, -204, -205, 43, 376, 94, -110, -204,
	-183, 258, -185, 258, 385, 117, -184, -108, -105, -205,
	281, 152, 318, 281, 152, -186, 243, 311, 55, 333,
	-186, -182, 29, 18, 249, 112, -205,
}
var sqlDef = [...]int{

	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	48, 49, 50, 0, 0, 290, 0, 0, 260, -2,
	0, 0, 234, 234, 234, 292, 206, 289, -2, 300,
	0, 0, 0, 298, 274, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 64, 0, 66,
	67, 68, 69, 0, 78, 79, 80, 82, 83, 84,
	85, 86, 87, 88, 0, 91, 840, 920, 941, 95,
	100, 0, 1006, -2, 104, 60, 705, 706, 707, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 796, 797, 798, 799, 800, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 942, 943, 944, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007,
	1008, 1009, 1010, 1011, 131, 132, 0, 134, 144, 0,
	142, 0, 0, 140, 236, 233, 231, 232, 0, 291,
	0, 0, 0, 205, -2, 270, 271, -2, 0, 295,
	295, 295, 0, 0, 271, 0, 279, 893, 282, 688,
	840, 855, 920, 941, 1006, 280, 674, 0, 297, 296,
	0, 275, 350, 0, 683, 320, 0, 2, 0, 814,
	0, 0, 814, 0, 0, 0, 356, 52, 814, 43,
	814, 681, 56, 814, 58, 0, 70, 72, 713, 714,
	715, 716, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 0, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 0, 103, 126, 127, 61, 0, 0, 146, 0,
	0, 137, 0, 138, 0, 230, 235, 43, 354, 0,
	814, 709, 238, 814, -2, 0, 266, 307, 308, 0,
	0, 0, 293, 294, 0, 0, 0, 262, 263, 0,
	281, 0, 0, 323, 673, 675, 679, 680, 435, 0,
	0, 0, 0, 0, 0, 0, 517, 518, 519, 0,
	521, 522, 523, 981, 0, 527, 528, 1002, 683, 691,
	692, 693, 694, 0, 0, 0, 699, 700, 701, 658,
	562, 537, -2, -2, 689, 377, 378, 379, 380, -2,
	1014, 541, 542, 543, 544, 545, 546, 0, 982, 998,
	999, 1005, 1008, 1009, 995, 977, 984, 991, 785, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 712, 401, 402,
	407, 408, 410, 323, 321, 351, 352, 0, 684, 664,
	0, 0, 0, 0, 670, 668, 669, 20, 227, 22,
	0, 227, 227, 0, 0, 0, 0, 0, 360, 0,
	241, 0, 357, 0, 0, 54, 0, 41, 42, 0,
	0, 0, 290, 0, 0, 75, 0, 770, 81, 0,
	0, 96, 98, 105, 107, 108, 109, 115, 116, 117,
	118, 199, 0, 201, 129, 130, 702, 0, 97, 99,
	101, 102, 119, 120, 0, 123, 124, 125, 418, 0,
	62, 717, 718, 719, 720, 721, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093,
	1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103,
	1104, 1105, 1106, 1107, 133, 135, 0, 143, 136, 141,
	139, 202, 0, 150, 0, 0, 814, 708, 0, 269,
	305, 306, 309, 312, 313, 310, 435, 276, 277, 278,
	301, 302, 216, 283, 0, 0, 685, 360, 0, 0,
	0, 0, 0, 597, 598, 599, 600, 601, 604, 605,
	602, 603, 606, 607, 608, 609, 0, 0, 610, 611,
	612, 0, 0, 614, 0, 0, 0, 667, 0, 0,
	0, 678, 613, 439, 440, 441, 462, 463, 0, 489,
	-2, 616, 0, 524, 525, 526, 0, 0, -2, 0,
	696, 432, 0, 0, 657, 564, 0, 0, 0, 0,
	0, 637, 643, 0, 0, 0, 0, 0, 0, 391,
	404, 414, 412, 411, 393, 0, 392, 390, 0, 394,
	0, 360, 0, 665, 659, 660, 661, 0, 0, 672,
	0, 0, 0, 0, 226, 24, 814, 0, 34, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 0, 248, 243, 0,
	0, 0, 323, 253, 255, 256, 0, 0, 358, 53,
	682, 43, 59, 57, 65, 71, 0, 76, 77, 0,
	237, 0, 0, 113, 114, 0, 200, 704, 703, 432,
	0, 63, 145, 89, 355, 0, 149, 151, 153, 154,
	155, 709, 0, 0, 0, 0, 0, 311, 314, 315,
	0, 304, 214, 215, 290, 0, 687, 317, 322, 324,
	341, 341, 328, 0, 676, 436, 366, 367, 368, 369,
	370, 432, 373, 374, 375, 376, 384, 385, 386, 387,
	388, 389, 398, 0, 383, 383, 383, 395, 396, 399,
	400, 405, 406, 416, 417, 415, 415, 415, 413, 437,
	0, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	-2, -2, -2, 454, 455, 456, -2, -2, -2, 460,
	461, -2, 615, 0, 667, 0, 0, 468, 0, 471,
	473, 475, 0, 0, 0, 0, 666, 485, 649, 0,
	0, 594, 595, 596, 677, 470, 0, 0, 520, 0,
	0, 0, 622, 616, 623, 0, -2, 529, 300, 0,
	0, 0, 0, 697, 419, 420, 421, 422, 423, 424,
	433, 0, 656, 652, 0, 572, 0, 0, 0, 0,
	0, 0, 626, 627, 628, 629, 630, 631, 632, 0,
	0, 0, 0, 490, 0, 0, 0, 0, 1002, 0,
	616, 642, 0, 0, 0, 0, 0, 616, 0, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 353,
	662, 0, 671, 23, 218, 0, 0, 0, 26, 814,
	158, 0, 0, 0, 0, 0, 229, 35, 814, 43,
	814, 43, 36, 21, 227, 217, 220, 0, 359, 240,
	0, 0, 245, 242, 360, 0, 0, 0, 55, 73,
	74, 110, 111, 112, 106, 121, 0, 0, 147, 0,
	0, 709, 0, 0, 0, 239, 303, 0, 285, 286,
	287, 288, 686, 319, 0, 0, 0, 0, 0, 0,
	347, 347, 347, 345, 326, 340, 0, 339, 327, -2,
	328, 0, 361, 363, 371, 0, 0, -2, 0, 0,
	0, 486, -2, 469, 472, 474, 476, 0, 0, 0,
	0, 0, 0, 0, 487, 0, 0, 0, 617, 0,
	620, 621, 0, -2, 0, 0, 299, 300, 300, 300,
	535, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	0, 536, 0, 0, 0, 0, 0, 548, 0, 549,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 493, 494, 0, 0, 551,
	640, 641, 0, 0, 0, 0, 0, 0, 556, 0,
	647, 0, 558, 559, 560, 0, 381, 0, 397, 409,
	319, 0, 0, 0, 0, 0, 156, 171, 0, 0,
	0, 0, 28, 0, 0, 0, 0, 32, 0, 38,
	0, 0, 0, 0, 251, 0, 252, 254, 257, 0,
	0, 90, 152, 0, 0, 150, 0, 0, 284, 566,
	0, 0, 325, 0, 0, 0, 0, 0, 342, 346,
	343, 344, 337, 0, 330, 0, 0, 0, 438, -2,
	0, 0, 0, 0, -2, 0, 618, 0, 0, 650,
	0, 0, 589, 0, -2, 617, 624, 530, 0, 0,
	0, 0, 425, 426, 427, 428, 429, 430, 431, 0,
	698, 651, 655, 0, 570, 571, 575, 0, 0, 540,
	0, 625, 634, 635, 491, 495, 496, 497, 498, 499,
	500, 501, 502, 503, -2, -2, -2, 507, 508, 509,
	-2, -2, -2, 0, 0, 0, 636, 0, 0, 592,
	638, 639, 644, 645, 0, 553, 554, 555, 646, 0,
	403, 0, 566, 663, 222, 224, 25, 0, 157, 0,
	160, 0, 0, 163, 164, 0, 0, 0, 0, 173,
	180, 0, 0, 0, 40, 0, 0, 228, 0, 43,
	43, 219, 0, 0, 221, 0, 0, 0, 244, 0,
	122, 0, 0, 0, 0, 207, 213, 213, 0, 538,
	539, 0, 0, 272, 0, 318, 316, 331, 0, 333,
	0, 0, 0, 335, 0, 0, 329, 364, 0, 0,
	372, 0, 0, -2, 0, 479, 0, -2, -2, 488,
	588, 617, 695, 300, 531, 533, 534, 434, 654, 577,
	574, 0, 561, 547, 633, 0, 0, 0, 0, 617,
	591, 552, 557, 382, 273, 27, 0, 161, 162, 165,
	0, 167, 182, 174, 0, 177, 178, 175, 0, 29,
	30, 39, 45, 31, 37, 0, 0, 0, 0, 0,
	258, 259, 0, 180, 0, 148, 180, 0, 216, 690,
	0, 216, 0, 0, 0, 565, 567, 0, 332, 0,
	349, 334, 0, 338, 365, 362, -2, -2, 480, 619,
	590, 0, 300, 0, 563, -2, 0, 0, 0, 593,
	159, 0, 186, 0, 0, 0, 47, 0, 223, 225,
	0, 247, 360, 250, 169, 180, 203, 208, 209, 212,
	210, 213, 300, 0, 0, 0, 0, 336, 532, 580,
	0, -2, 0, 515, 166, 191, 0, 0, 0, 182,
	33, 0, 44, 0, 249, 170, 216, 0, 0, 568,
	569, 348, 0, 0, 0, 576, 516, 168, 187, 188,
	0, 183, 184, 185, 181, 179, 186, 46, 360, 211,
	530, 180, 573, 578, 581, -2, 948, 766, 0, 579,
	189, 0, 190, 0, 0, 0, 191, 246, 204, 0,
	583, 584, 585, 586, 587, 192, 0, 195, 196, 0,
	193, 176, 0, 194, 197, 198, 582,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 418, 3, 424, 419, 3,
	429, 430, 422, 420, 433, 421, 431, 423, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 435, 432,
	412, 414, 413, 3, 434, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 427, 3, 428, 417, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 416, 3, 426,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 415,
	57755, 425, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lookahead func() int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.lookahead()
}

func sqlNewParser() sqlParser {
	p := &sqlParserImpl{
		lookahead: func() int { return -1 },
	}
	return p
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqllval sqlSymType
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := make([]sqlSymType, sqlMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlchar := -1
	sqltoken := -1 // sqlchar translated into internal numbering
	sqlrcvr.lookahead = func() int { return sqlchar }
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlchar = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlchar < 0 {
		sqlchar, sqltoken = sqllex1(sqllex, &sqllval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlchar = -1
		sqltoken = -1
		sqlVAL = sqllval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlchar < 0 {
			sqlchar, sqltoken = sqllex1(sqllex, &sqllval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlchar = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:443
		{
			sqllex.(*scanner).stmts = sqlDollar[1].stmts
		}
	case 2:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:449
		{
			if sqlDollar[3].stmt != nil {
				sqlVAL.stmts = append(sqlDollar[1].stmts, sqlDollar[3].stmt)
			}
		}
	case 3:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:455
		{
			if sqlDollar[1].stmt != nil {
				sqlVAL.stmts = []Statement{sqlDollar[1].stmt}
			} else {
				sqlVAL.stmts = nil
			}
		}
	case 13:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:474
		{
			sqlVAL.stmt = sqlDollar[1].selectStmt
		}
	case 19:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:483
		{
			sqlVAL.stmt = nil
		}
	case 20:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:489
		{
			sqlVAL.stmt = &AlterTable{Table: sqlDollar[3].qname, IfExists: false, Cmds: sqlDollar[4].alterTableCmds}
		}
	case 21:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:493
		{
			sqlVAL.stmt = &AlterTable{Table: sqlDollar[5].qname, IfExists: true, Cmds: sqlDollar[6].alterTableCmds}
		}
	case 22:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:499
		{
			sqlVAL.alterTableCmds = AlterTableCmds{sqlDollar[1].alterTableCmd}
		}
	case 23:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:503
		{
			sqlVAL.alterTableCmds = append(sqlDollar[1].alterTableCmds, sqlDollar[3].alterTableCmd)
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:510
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: false, IfNotExists: false, ColumnDef: sqlDollar[2].colDef}
		}
	case 25:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:515
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: false, IfNotExists: true, ColumnDef: sqlDollar[5].colDef}
		}
	case 26:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:520
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: true, IfNotExists: false, ColumnDef: sqlDollar[3].colDef}
		}
	case 27:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:525
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: true, IfNotExists: true, ColumnDef: sqlDollar[6].colDef}
		}
	case 28:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:529
		{
			unimplemented()
		}
	case 29:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:531
		{
			unimplemented()
		}
	case 30:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:533
		{
			unimplemented()
		}
	case 31:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:536
		{
			sqlVAL.alterTableCmd = &AlterTableDropColumn{columnKeyword: sqlDollar[2].boolVal, IfExists: true, Column: sqlDollar[5].str}
		}
	case 32:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:541
		{
			sqlVAL.alterTableCmd = &AlterTableDropColumn{columnKeyword: sqlDollar[2].boolVal, IfExists: false, Column: sqlDollar[3].str}
		}
	case 33:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:546
		{
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:549
		{
			sqlVAL.alterTableCmd = &AlterTableAddConstraint{ConstraintDef: sqlDollar[2].constraintDef}
		}
	case 35:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:553
		{
			unimplemented()
		}
	case 36:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:555
		{
			unimplemented()
		}
	case 37:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:558
		{
			sqlVAL.alterTableCmd = &AlterTableDropConstraint{IfExists: true, Constraint: sqlDollar[5].str}
		}
	case 38:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:563
		{
			sqlVAL.alterTableCmd = &AlterTableDropConstraint{IfExists: false, Constraint: sqlDollar[3].str}
		}
	case 39:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:568
		{
			unimplemented()
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:569
		{
			unimplemented()
		}
	case 41:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:572
		{
			unimplemented()
		}
	case 42:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:573
		{
			unimplemented()
		}
	case 43:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:574
		{
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:577
		{
			unimplemented()
		}
	case 45:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:578
		{
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:581
		{
			unimplemented()
		}
	case 47:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:582
		{
		}
	case 51:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:593
		{
			sqlVAL.stmt = &Delete{Table: sqlDollar[4].tblExpr, Where: newWhere(astWhere, sqlDollar[5].expr)}
		}
	case 52:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:600
		{
			sqlVAL.stmt = &DropDatabase{Name: Name(sqlDollar[3].str), IfExists: false}
		}
	case 53:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:604
		{
			sqlVAL.stmt = &DropDatabase{Name: Name(sqlDollar[5].str), IfExists: true}
		}
	case 54:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:608
		{
			sqlVAL.stmt = &DropIndex{Names: sqlDollar[3].qnames, IfExists: false}
		}
	case 55:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:612
		{
			sqlVAL.stmt = &DropIndex{Names: sqlDollar[5].qnames, IfExists: true}
		}
	case 56:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:616
		{
			sqlVAL.stmt = &DropTable{Names: sqlDollar[3].qnames, IfExists: false}
		}
	case 57:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:620
		{
			sqlVAL.stmt = &DropTable{Names: sqlDollar[5].qnames, IfExists: true}
		}
	case 58:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:626
		{
			sqlVAL.qnames = QualifiedNames{sqlDollar[1].qname}
		}
	case 59:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:630
		{
			sqlVAL.qnames = append(sqlDollar[1].qnames, sqlDollar[3].qname)
		}
	case 60:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:636
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str)}
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:640
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str), Indirect: sqlDollar[2].indirect}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:646
		{
			sqlVAL.indirect = Indirection{NameIndirection(sqlDollar[2].str)}
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:650
		{
			sqlVAL.indirect = append(sqlDollar[1].indirect, NameIndirection(sqlDollar[3].str))
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:657
		{
			sqlVAL.stmt = &Explain{Statement: sqlDollar[2].stmt}
		}
	case 65:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:661
		{
			sqlVAL.stmt = &Explain{Options: sqlDollar[3].strs, Statement: sqlDollar[5].stmt}
		}
	case 66:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:667
		{
			sqlVAL.stmt = sqlDollar[1].selectStmt
		}
	case 70:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:676
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:680
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 73:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:690
		{
			sqlVAL.stmt = &Grant{Privileges: sqlDollar[2].privilegeList, Grantees: NameList(sqlDollar[6].strs), Targets: sqlDollar[4].targetList}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:697
		{
			sqlVAL.stmt = &Revoke{Privileges: sqlDollar[2].privilegeList, Grantees: NameList(sqlDollar[6].strs), Targets: sqlDollar[4].targetList}
		}
	case 75:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:704
		{
			sqlVAL.targetList = TargetList{Tables: QualifiedNames(sqlDollar[1].qnames)}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:708
		{
			// TODO(marc): this is postgres' grammar, but do we really need
			// both "x" and "TABLE X"?
			sqlVAL.targetList = TargetList{Tables: QualifiedNames(sqlDollar[2].qnames)}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:714
		{
			sqlVAL.targetList = TargetList{Databases: NameList(sqlDollar[2].strs)}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:721
		{
			sqlVAL.privilegeList = privilege.List{privilege.ALL}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:724
		{
		}
	case 80:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:728
		{
			sqlVAL.privilegeList = privilege.List{sqlDollar[1].privilegeType}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:732
		{
			sqlVAL.privilegeList = append(sqlDollar[1].privilegeList, sqlDollar[3].privilegeType)
		}
	case 82:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:739
		{
			sqlVAL.privilegeType = privilege.CREATE
		}
	case 83:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:743
		{
			sqlVAL.privilegeType = privilege.DROP
		}
	case 84:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:747
		{
			sqlVAL.privilegeType = privilege.GRANT
		}
	case 85:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:751
		{
			sqlVAL.privilegeType = privilege.SELECT
		}
	case 86:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:755
		{
			sqlVAL.privilegeType = privilege.INSERT
		}
	case 87:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:759
		{
			sqlVAL.privilegeType = privilege.DELETE
		}
	case 88:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:763
		{
			sqlVAL.privilegeType = privilege.UPDATE
		}
	case 89:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:771
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:775
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 91:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:783
		{
			sqlVAL.stmt = sqlDollar[2].stmt
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:787
		{
			sqlVAL.stmt = sqlDollar[3].stmt
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:791
		{
			sqlVAL.stmt = sqlDollar[3].stmt
		}
	case 94:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:797
		{
			sqlVAL.stmt = &SetTransaction{Isolation: sqlDollar[2].isoLevel}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:804
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname, Values: sqlDollar[3].exprs}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:808
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname, Values: sqlDollar[3].exprs}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:812
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:816
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:823
		{
			unimplemented()
		}
	case 102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:825
		{
			unimplemented()
		}
	case 103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:826
		{
			unimplemented()
		}
	case 105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:833
		{
			sqlVAL.exprs = []Expr{sqlDollar[1].expr}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:837
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:845
		{
			sqlVAL.expr = ValArg(sqlDollar[1].str)
		}
	case 110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:851
		{
			// Mapped to the closest supported isolation level.
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:856
		{
			// Mapped to the closest supported isolation level.
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:861
		{
			// Mapped to the closest supported isolation level.
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:866
		{
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:870
		{
			sqlVAL.isoLevel = SerializableIsolation
		}
	case 115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:876
		{
			sqlVAL.expr = DBool(true)
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:880
		{
			sqlVAL.expr = DBool(false)
		}
	case 117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:884
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:900
		{
			unimplemented()
		}
	case 120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:901
		{
			unimplemented()
		}
	case 121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:902
		{
			unimplemented()
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:903
		{
			unimplemented()
		}
	case 123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:904
		{
			unimplemented()
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:905
		{
			unimplemented()
		}
	case 125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:906
		{
			unimplemented()
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:909
		{
			unimplemented()
		}
	case 127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:910
		{
			unimplemented()
		}
	case 128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:911
		{
		}
	case 129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:915
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:919
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:925
		{
			sqlVAL.stmt = &Show{Name: sqlDollar[2].str}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:929
		{
			sqlVAL.stmt = &Show{Name: sqlDollar[2].str}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:933
		{
			sqlVAL.stmt = &ShowColumns{Table: sqlDollar[4].qname}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:937
		{
			sqlVAL.stmt = &ShowDatabases{}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:941
		{
			sqlVAL.stmt = &ShowGrants{Targets: sqlDollar[3].targetListPtr, Grantees: sqlDollar[4].strs}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:945
		{
			sqlVAL.stmt = &ShowIndex{Table: sqlDollar[4].qname}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:949
		{
			sqlVAL.stmt = &ShowTables{Name: sqlDollar[3].qname}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:953
		{
			sqlVAL.stmt = nil
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:957
		{
			sqlVAL.stmt = &Show{Name: "TRANSACTION ISOLATION LEVEL"}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:961
		{
			sqlVAL.stmt = nil
		}
	case 141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:967
		{
			sqlVAL.qname = sqlDollar[2].qname
		}
	case 142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:971
		{
			sqlVAL.qname = nil
		}
	case 143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:977
		{
			tmp := sqlDollar[2].targetList
			sqlVAL.targetListPtr = &tmp
		}
	case 144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:982
		{
			sqlVAL.targetListPtr = nil
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:988
		{
			sqlVAL.strs = sqlDollar[2].strs
		}
	case 146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:992
		{
			sqlVAL.strs = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:999
		{
			sqlVAL.stmt = &CreateTable{Table: sqlDollar[3].qname, IfNotExists: false, Defs: sqlDollar[5].tblDefs}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql.y:1003
		{
			sqlVAL.stmt = &CreateTable{Table: sqlDollar[6].qname, IfNotExists: true, Defs: sqlDollar[8].tblDefs}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1010
		{
			sqlVAL.tblDefs = nil
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1016
		{
			sqlVAL.tblDefs = TableDefs{sqlDollar[1].tblDef}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1020
		{
			sqlVAL.tblDefs = append(sqlDollar[1].tblDefs, sqlDollar[3].tblDef)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1026
		{
			sqlVAL.tblDef = sqlDollar[1].colDef
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1031
		{
			sqlVAL.tblDef = sqlDollar[1].constraintDef
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1037
		{
			sqlVAL.colDef = newColumnTableDef(Name(sqlDollar[1].str), sqlDollar[2].colType, sqlDollar[3].colQuals)
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1043
		{
			sqlVAL.colQuals = append(sqlDollar[1].colQuals, sqlDollar[2].colQual)
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1047
		{
			sqlVAL.colQuals = nil
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1053
		{
			// TODO(pmattis): Handle constraint name.
			sqlVAL.colQual = sqlDollar[3].colQual
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1058
		{
			unimplemented()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1074
		{
			sqlVAL.colQual = NotNullConstraint{}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1078
		{
			sqlVAL.colQual = NullConstraint{}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1082
		{
			sqlVAL.colQual = UniqueConstraint{}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1086
		{
			sqlVAL.colQual = PrimaryKeyConstraint{}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1089
		{
			unimplemented()
		}
	case 167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1091
		{
			if ContainsVars(sqlDollar[2].expr) {
				sqllex.Error("default expression contains a variable")
				return 1
			}
			if containsSubquery(sqlDollar[2].expr) {
				sqllex.Error("default expression contains a subquery")
				return 1
			}
			sqlVAL.colQual = &ColumnDefault{Expr: sqlDollar[2].expr}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1102
		{
			unimplemented()
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1106
		{
			sqlVAL.tblDef = &IndexTableDef{
				Name:    Name(sqlDollar[2].str),
				Columns: NameList(sqlDollar[4].strs),
				Storing: sqlDollar[6].strs,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:1114
		{
			sqlVAL.tblDef = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Name:    Name(sqlDollar[3].str),
					Columns: NameList(sqlDollar[5].strs),
					Storing: sqlDollar[7].strs,
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1129
		{
			sqlVAL.constraintDef = sqlDollar[3].constraintDef
			sqlVAL.constraintDef.setName(Name(sqlDollar[2].str))
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1134
		{
			sqlVAL.constraintDef = sqlDollar[1].constraintDef
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1139
		{
			unimplemented()
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1141
		{
			sqlVAL.constraintDef = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Columns: NameList(sqlDollar[3].strs),
					Storing: sqlDollar[5].strs,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1150
		{
			sqlVAL.constraintDef = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Columns: NameList(sqlDollar[4].strs),
				},
				PrimaryKey: true,
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1159
		{
			unimplemented()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1176
		{
			sqlVAL.strs = sqlDollar[3].strs
		}
	case 180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1180
		{
			sqlVAL.strs = nil
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1186
		{
			sqlVAL.strs = sqlDollar[2].strs
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1190
		{
			sqlVAL.strs = nil
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1195
		{
			unimplemented()
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1196
		{
			unimplemented()
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1197
		{
			unimplemented()
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1198
		{
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1205
		{
			unimplemented()
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1206
		{
			unimplemented()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1207
		{
			unimplemented()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1208
		{
			unimplemented()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1209
		{
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1212
		{
			unimplemented()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1215
		{
			unimplemented()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1218
		{
			unimplemented()
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1219
		{
			unimplemented()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1220
		{
			unimplemented()
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1221
		{
			unimplemented()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1222
		{
			unimplemented()
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1226
		{
			sqlVAL.expr = NumVal(sqlDollar[1].str)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1230
		{
			sqlVAL.expr = NumVal("-" + sqlDollar[2].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1234
		{
			sqlVAL.expr = IntVal(sqlDollar[1].ival)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1241
		{
			sqlVAL.stmt = &Truncate{Tables: sqlDollar[3].qnames}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1248
		{
			sqlVAL.stmt = &CreateIndex{
				Name:    Name(sqlDollar[4].str),
				Table:   sqlDollar[6].qname,
				Unique:  sqlDollar[2].boolVal,
				Columns: sqlDollar[8].strs,
				Storing: sqlDollar[10].strs,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
		//line sql.y:1258
		{
			sqlVAL.stmt = &CreateIndex{
				Name:        Name(sqlDollar[7].str),
				Table:       sqlDollar[9].qname,
				Unique:      sqlDollar[2].boolVal,
				IfNotExists: true,
				Columns:     sqlDollar[11].strs,
				Storing:     sqlDollar[13].strs,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1271
		{
			sqlVAL.boolVal = true
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1275
		{
			sqlVAL.boolVal = false
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1281
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1285
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1294
		{
			// TODO(pmattis): Support opt_asc_desc.
			sqlVAL.str = sqlDollar[1].str
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1298
		{
			unimplemented()
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1299
		{
			unimplemented()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1302
		{
			unimplemented()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1303
		{
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1307
		{
			sqlVAL.dir = Ascending
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1311
		{
			sqlVAL.dir = Descending
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1315
		{
			sqlVAL.dir = DefaultDirection
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1322
		{
			sqlVAL.stmt = &RenameDatabase{Name: Name(sqlDollar[3].str), NewName: Name(sqlDollar[6].str)}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1326
		{
			sqlVAL.stmt = &RenameTable{Name: sqlDollar[3].qname, NewName: sqlDollar[6].qname, IfExists: false}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1330
		{
			sqlVAL.stmt = &RenameTable{Name: sqlDollar[5].qname, NewName: sqlDollar[8].qname, IfExists: true}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1334
		{
			sqlVAL.stmt = &RenameIndex{Name: sqlDollar[3].qname, NewName: Name(sqlDollar[6].str), IfExists: false}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1338
		{
			sqlVAL.stmt = &RenameIndex{Name: sqlDollar[5].qname, NewName: Name(sqlDollar[8].str), IfExists: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1342
		{
			sqlVAL.stmt = &RenameColumn{Table: sqlDollar[3].qname, Name: Name(sqlDollar[6].str), NewName: Name(sqlDollar[8].str), IfExists: false}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1346
		{
			sqlVAL.stmt = &RenameColumn{Table: sqlDollar[5].qname, Name: Name(sqlDollar[8].str), NewName: Name(sqlDollar[10].str), IfExists: true}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1350
		{
			sqlVAL.stmt = nil
		}
	case 225:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1354
		{
			sqlVAL.stmt = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1360
		{
			sqlVAL.boolVal = true
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1364
		{
			sqlVAL.boolVal = false
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1369
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1370
		{
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1375
		{
			sqlVAL.stmt = &BeginTransaction{Isolation: sqlDollar[3].isoLevel}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1379
		{
			sqlVAL.stmt = &CommitTransaction{}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1383
		{
			sqlVAL.stmt = &RollbackTransaction{}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1388
		{
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1389
		{
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1394
		{
			sqlVAL.isoLevel = UnspecifiedIsolation
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1400
		{
			sqlVAL.isoLevel = sqlDollar[3].isoLevel
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1406
		{
			sqlVAL.stmt = &CreateDatabase{Name: Name(sqlDollar[3].str)}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1410
		{
			sqlVAL.stmt = &CreateDatabase{IfNotExists: true, Name: Name(sqlDollar[6].str)}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1416
		{
			sqlVAL.stmt = sqlDollar[5].stmt
			sqlVAL.stmt.(*Insert).Table = sqlDollar[4].qname
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1432
		{
			sqlVAL.stmt = &Insert{Rows: sqlDollar[1].selectStmt}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1436
		{
			sqlVAL.stmt = &Insert{Columns: sqlDollar[2].qnames, Rows: sqlDollar[4].selectStmt}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1440
		{
			sqlVAL.stmt = &Insert{}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1445
		{
			unimplemented()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1446
		{
			unimplemented()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1447
		{
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1450
		{
			unimplemented()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1451
		{
			unimplemented()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1452
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:1457
		{
			sqlVAL.stmt = &Update{Table: sqlDollar[3].tblExpr, Exprs: sqlDollar[5].updateExprs, Where: newWhere(astWhere, sqlDollar[7].expr)}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1463
		{
			sqlVAL.updateExprs = UpdateExprs{sqlDollar[1].updateExpr}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1467
		{
			sqlVAL.updateExprs = append(sqlDollar[1].updateExprs, sqlDollar[3].updateExpr)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1477
		{
			sqlVAL.updateExpr = &UpdateExpr{Names: QualifiedNames{sqlDollar[1].qname}, Expr: sqlDollar[3].expr}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1489
		{
			sqlVAL.updateExpr = &UpdateExpr{Tuple: true, Names: sqlDollar[2].qnames, Expr: Tuple(sqlDollar[5].exprs)}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1493
		{
			sqlVAL.updateExpr = &UpdateExpr{Tuple: true, Names: sqlDollar[2].qnames, Expr: &Subquery{Select: sqlDollar[5].selectStmt}}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1540
		{
			sqlVAL.selectStmt = &ParenSelect{Select: sqlDollar[2].selectStmt}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1544
		{
			sqlVAL.selectStmt = &ParenSelect{Select: sqlDollar[2].selectStmt}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1560
		{
			sqlVAL.selectStmt = sqlDollar[1].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[2].orderBy
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1567
		{
			sqlVAL.selectStmt = sqlDollar[1].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[2].orderBy
				s.Limit = sqlDollar[3].limit
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1575
		{
			sqlVAL.selectStmt = sqlDollar[2].selectStmt
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1579
		{
			sqlVAL.selectStmt = sqlDollar[2].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[3].orderBy
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1586
		{
			sqlVAL.selectStmt = sqlDollar[2].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[3].orderBy
				s.Limit = sqlDollar[4].limit
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1624
		{
			sqlVAL.selectStmt = &Select{
				Exprs:   sqlDollar[3].selExprs,
				From:    sqlDollar[4].tblExprs,
				Where:   newWhere(astWhere, sqlDollar[5].expr),
				GroupBy: sqlDollar[6].groupBy,
				Having:  newWhere(astHaving, sqlDollar[7].expr),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1636
		{
			sqlVAL.selectStmt = &Select{
				Distinct: sqlDollar[2].boolVal,
				Exprs:    sqlDollar[3].selExprs,
				From:     sqlDollar[4].tblExprs,
				Where:    newWhere(astWhere, sqlDollar[5].expr),
				GroupBy:  sqlDollar[6].groupBy,
				Having:   newWhere(astHaving, sqlDollar[7].expr),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1648
		{
			sqlVAL.selectStmt = &Select{
				Exprs:       SelectExprs{StarSelectExpr()},
				From:        TableExprs{&AliasedTableExpr{Expr: sqlDollar[2].qname}},
				tableSelect: true,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1656
		{
			sqlVAL.selectStmt = &Union{
				Type:  astUnion,
				Left:  sqlDollar[1].selectStmt,
				Right: sqlDollar[4].selectStmt,
				All:   sqlDollar[3].boolVal,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1665
		{
			sqlVAL.selectStmt = &Union{
				Type:  astIntersect,
				Left:  sqlDollar[1].selectStmt,
				Right: sqlDollar[4].selectStmt,
				All:   sqlDollar[3].boolVal,
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1674
		{
			sqlVAL.selectStmt = &Union{
				Type:  astExcept,
				Left:  sqlDollar[1].selectStmt,
				Right: sqlDollar[4].selectStmt,
				All:   sqlDollar[3].boolVal,
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1692
		{
			unimplemented()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1693
		{
			unimplemented()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1694
		{
			unimplemented()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1697
		{
			unimplemented()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1698
		{
			unimplemented()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1701
		{
			unimplemented()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1705
		{
			sqlVAL.stmt = sqlDollar[1].selectStmt
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1713
		{
			unimplemented()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1714
		{
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1717
		{
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1718
		{
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1722
		{
			sqlVAL.boolVal = true
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1726
		{
			sqlVAL.boolVal = false
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1730
		{
			sqlVAL.boolVal = false
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1736
		{
			sqlVAL.boolVal = true
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1741
		{
		}
	case 298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1742
		{
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1746
		{
			sqlVAL.orderBy = sqlDollar[1].orderBy
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1750
		{
			sqlVAL.orderBy = nil
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1756
		{
			sqlVAL.orderBy = OrderBy(sqlDollar[3].orders)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1762
		{
			sqlVAL.orders = []*Order{sqlDollar[1].order}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1766
		{
			sqlVAL.orders = append(sqlDollar[1].orders, sqlDollar[3].order)
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1772
		{
			sqlVAL.order = &Order{Expr: sqlDollar[1].expr, Direction: sqlDollar[2].dir}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1780
		{
			if sqlDollar[1].limit == nil {
				sqlVAL.limit = sqlDollar[2].limit
			} else {
				sqlVAL.limit = sqlDollar[1].limit
				sqlVAL.limit.Offset = sqlDollar[2].limit.Offset
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1789
		{
			sqlVAL.limit = sqlDollar[1].limit
			if sqlDollar[2].limit != nil {
				sqlVAL.limit.Count = sqlDollar[2].limit.Count
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1800
		{
			if sqlDollar[2].expr == nil {
				sqlVAL.limit = nil
			} else {
				sqlVAL.limit = &Limit{Count: sqlDollar[2].expr}
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1813
		{
			sqlVAL.limit = &Limit{Offset: sqlDollar[2].expr}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1820
		{
			sqlVAL.limit = &Limit{Offset: sqlDollar[2].expr}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1827
		{
			sqlVAL.expr = nil
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1841
		{
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1842
		{
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1868
		{
			sqlVAL.groupBy = GroupBy(sqlDollar[3].exprs)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1872
		{
			sqlVAL.groupBy = nil
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1878
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1882
		{
			sqlVAL.expr = nil
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1888
		{
			sqlVAL.selectStmt = Values{Tuple(sqlDollar[2].exprs)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1892
		{
			sqlVAL.selectStmt = append(sqlDollar[1].selectStmt.(Values), Tuple(sqlDollar[3].exprs))
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1902
		{
			sqlVAL.tblExprs = sqlDollar[2].tblExprs
		}
	case 323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1906
		{
			sqlVAL.tblExprs = nil
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1912
		{
			sqlVAL.tblExprs = TableExprs{sqlDollar[1].tblExpr}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1916
		{
			sqlVAL.tblExprs = append(sqlDollar[1].tblExprs, sqlDollar[3].tblExpr)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1923
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname, As: Name(sqlDollar[2].str)}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1927
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: &Subquery{Select: sqlDollar[1].selectStmt}, As: Name(sqlDollar[2].str)}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1931
		{
			unimplemented()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1949
		{
			sqlVAL.tblExpr = &ParenTableExpr{Expr: sqlDollar[2].tblExpr}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1953
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astCrossJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[4].tblExpr}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1957
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: sqlDollar[2].str, Left: sqlDollar[1].tblExpr, Right: sqlDollar[4].tblExpr, Cond: sqlDollar[5].joinCond}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1961
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[3].tblExpr, Cond: sqlDollar[4].joinCond}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1965
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astNaturalJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[5].tblExpr}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1969
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astNaturalJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[4].tblExpr}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1974
		{
			unimplemented()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1976
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1979
		{
			unimplemented()
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1981
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1988
		{
			sqlVAL.str = ""
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1994
		{
			sqlVAL.str = astFullJoin
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1998
		{
			sqlVAL.str = astLeftJoin
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2002
		{
			sqlVAL.str = astRightJoin
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2006
		{
			sqlVAL.str = astInnerJoin
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2012
		{
		}
	case 347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2013
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2024
		{
			sqlVAL.joinCond = &UsingJoinCond{Cols: NameList(sqlDollar[3].strs)}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2028
		{
			sqlVAL.joinCond = &OnJoinCond{Expr: sqlDollar[2].expr}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2034
		{
			sqlVAL.qname = sqlDollar[1].qname
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2038
		{
			// TODO(pmattis): Handle the "*".
			sqlVAL.qname = sqlDollar[1].qname
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2043
		{
			// TODO(pmattis): Support ONLY.
			sqlVAL.qname = sqlDollar[2].qname
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2048
		{
			// TODO(pmattis): Support ONLY.
			sqlVAL.qname = sqlDollar[3].qname
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2055
		{
			sqlVAL.qnames = QualifiedNames{sqlDollar[1].qname}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2059
		{
			sqlVAL.qnames = append(sqlDollar[1].qnames, sqlDollar[3].qname)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2072
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2076
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname, As: Name(sqlDollar[2].str)}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2080
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname, As: Name(sqlDollar[3].str)}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2086
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2090
		{
			sqlVAL.expr = nil
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2102
		{
			sqlVAL.colType = sqlDollar[1].colType
		}
	case 362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2106
		{
			unimplemented()
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2107
		{
			unimplemented()
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2110
		{
			unimplemented()
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2111
		{
			unimplemented()
		}
	case 366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2112
		{
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2120
		{
			unimplemented()
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2122
		{
			sqlVAL.colType = &BytesType{Name: "BLOB"}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2126
		{
			sqlVAL.colType = &BytesType{Name: "BYTES"}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2130
		{
			sqlVAL.colType = &StringType{Name: "TEXT"}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2134
		{
			sqlVAL.colType = &StringType{Name: "STRING"}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2155
		{
			sqlVAL.colType = &DecimalType{Prec: int(sqlDollar[2].ival)}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2159
		{
			sqlVAL.colType = &DecimalType{Prec: int(sqlDollar[2].ival), Scale: int(sqlDollar[4].ival)}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2163
		{
			sqlVAL.colType = &DecimalType{}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2170
		{
			sqlVAL.colType = &IntType{Name: "INT"}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2174
		{
			sqlVAL.colType = &IntType{Name: "INT64"}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2178
		{
			sqlVAL.colType = &IntType{Name: "INTEGER"}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2182
		{
			sqlVAL.colType = &IntType{Name: "SMALLINT"}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2186
		{
			sqlVAL.colType = &IntType{Name: "BIGINT"}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2190
		{
			sqlVAL.colType = &FloatType{Name: "REAL"}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2194
		{
			sqlVAL.colType = &FloatType{Name: "FLOAT", Prec: int(sqlDollar[2].ival)}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2198
		{
			sqlVAL.colType = &FloatType{Name: "DOUBLE PRECISION"}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2202
		{
			sqlVAL.colType = sqlDollar[2].colType
			sqlVAL.colType.(*DecimalType).Name = "DECIMAL"
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2207
		{
			sqlVAL.colType = sqlDollar[2].colType
			sqlVAL.colType.(*DecimalType).Name = "DEC"
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2212
		{
			sqlVAL.colType = sqlDollar[2].colType
			sqlVAL.colType.(*DecimalType).Name = "NUMERIC"
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2217
		{
			sqlVAL.colType = &BoolType{Name: "BOOLEAN"}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2221
		{
			sqlVAL.colType = &BoolType{Name: "BOOL"}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2227
		{
			sqlVAL.ival = sqlDollar[2].ival
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2231
		{
			sqlVAL.ival = 0
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2249
		{
			sqlVAL.colType = &IntType{Name: "BIT", N: int(sqlDollar[4].ival)}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2255
		{
			sqlVAL.colType = &IntType{Name: "BIT"}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2271
		{
			sqlVAL.colType = sqlDollar[1].colType
			sqlVAL.colType.(*StringType).N = int(sqlDollar[3].ival)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2278
		{
			sqlVAL.colType = sqlDollar[1].colType
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2284
		{
			sqlVAL.colType = &StringType{Name: "CHAR"}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2288
		{
			sqlVAL.colType = &StringType{Name: "CHAR"}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2292
		{
			sqlVAL.colType = &StringType{Name: "VARCHAR"}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2297
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2298
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2303
		{
			sqlVAL.colType = &DateType{}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2307
		{
			sqlVAL.colType = &TimestampType{}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2312
		{
			sqlVAL.colType = &IntervalType{}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2317
		{
			unimplemented()
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2318
		{
			unimplemented()
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2319
		{
			unimplemented()
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2320
		{
			unimplemented()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2321
		{
			unimplemented()
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2322
		{
			unimplemented()
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2323
		{
			unimplemented()
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2324
		{
			unimplemented()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2325
		{
			unimplemented()
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2326
		{
			unimplemented()
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2327
		{
			unimplemented()
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2328
		{
			unimplemented()
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2329
		{
			unimplemented()
		}
	case 432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2330
		{
		}
	case 433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2333
		{
			unimplemented()
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2334
		{
			unimplemented()
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2358
		{
			sqlVAL.expr = &CastExpr{Expr: sqlDollar[1].expr, Type: sqlDollar[3].colType}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2361
		{
			unimplemented()
		}
	case 438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2362
		{
			unimplemented()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2371
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryPlus, Expr: sqlDollar[2].expr}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2375
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryMinus, Expr: sqlDollar[2].expr}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2379
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryComplement, Expr: sqlDollar[2].expr}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2383
		{
			sqlVAL.expr = &BinaryExpr{Operator: Plus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2387
		{
			sqlVAL.expr = &BinaryExpr{Operator: Minus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2391
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mult, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2395
		{
			sqlVAL.expr = &BinaryExpr{Operator: Div, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2399
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mod, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2403
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2407
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2411
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitand, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2415
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2419
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2423
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2427
		{
			sqlVAL.expr = &ComparisonExpr{Operator: EQ, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2431
		{
			sqlVAL.expr = &BinaryExpr{Operator: Concat, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2435
		{
			sqlVAL.expr = &BinaryExpr{Operator: LShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2439
		{
			sqlVAL.expr = &BinaryExpr{Operator: RShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2443
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2447
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2451
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2455
		{
			sqlVAL.expr = &AndExpr{Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2459
		{
			sqlVAL.expr = &OrExpr{Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2463
		{
			sqlVAL.expr = &NotExpr{Expr: sqlDollar[2].expr}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2467
		{
			sqlVAL.expr = &NotExpr{Expr: sqlDollar[2].expr}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2471
		{
			sqlVAL.expr = &ComparisonExpr{Operator: Like, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2475
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NotLike, Left: sqlDollar[1].expr, Right: sqlDollar[4].expr}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2479
		{
			sqlVAL.expr = &ComparisonExpr{Operator: SimilarTo, Left: sqlDollar[1].expr, Right: sqlDollar[4].expr}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2483
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NotSimilarTo, Left: sqlDollar[1].expr, Right: sqlDollar[5].expr}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2487
		{
			sqlVAL.expr = &IsExpr{Operator: IsNull, Expr: sqlDollar[1].expr}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2491
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotNull, Expr: sqlDollar[1].expr}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2494
		{
			unimplemented()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2496
		{
			sqlVAL.expr = &IsExpr{Operator: IsTrue, Expr: sqlDollar[1].expr}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2500
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotTrue, Expr: sqlDollar[1].expr}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2504
		{
			sqlVAL.expr = &IsExpr{Operator: IsFalse, Expr: sqlDollar[1].expr}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2508
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotFalse, Expr: sqlDollar[1].expr}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2512
		{
			sqlVAL.expr = &IsExpr{Operator: IsUnknown, Expr: sqlDollar[1].expr}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2516
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotUnknown, Expr: sqlDollar[1].expr}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2520
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[5].expr}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2524
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsNotDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[6].expr}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2528
		{
			sqlVAL.expr = &IsOfTypeExpr{Expr: sqlDollar[1].expr, Types: sqlDollar[5].colTypes}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2532
		{
			sqlVAL.expr = &IsOfTypeExpr{Not: true, Expr: sqlDollar[1].expr, Types: sqlDollar[6].colTypes}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2536
		{
			sqlVAL.expr = &RangeCond{Left: sqlDollar[1].expr, From: sqlDollar[4].expr, To: sqlDollar[6].expr}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2540
		{
			sqlVAL.expr = &RangeCond{Not: true, Left: sqlDollar[1].expr, From: sqlDollar[5].expr, To: sqlDollar[7].expr}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2544
		{
			sqlVAL.expr = &RangeCond{Left: sqlDollar[1].expr, From: sqlDollar[4].expr, To: sqlDollar[6].expr}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2548
		{
			sqlVAL.expr = &RangeCond{Not: true, Left: sqlDollar[1].expr, From: sqlDollar[5].expr, To: sqlDollar[7].expr}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2552
		{
			sqlVAL.expr = &ComparisonExpr{Operator: In, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2556
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NotIn, Left: sqlDollar[1].expr, Right: sqlDollar[4].expr}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2559
		{
			unimplemented()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2560
		{
			unimplemented()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2561
		{
			unimplemented()
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2573
		{
			sqlVAL.expr = &CastExpr{Expr: sqlDollar[1].expr, Type: sqlDollar[3].colType}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2577
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryPlus, Expr: sqlDollar[2].expr}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2581
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryMinus, Expr: sqlDollar[2].expr}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2585
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryComplement, Expr: sqlDollar[2].expr}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2589
		{
			sqlVAL.expr = &BinaryExpr{Operator: Plus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2593
		{
			sqlVAL.expr = &BinaryExpr{Operator: Minus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2597
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mult, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2601
		{
			sqlVAL.expr = &BinaryExpr{Operator: Div, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2605
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mod, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2609
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2613
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2617
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitand, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2621
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2625
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2629
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2633
		{
			sqlVAL.expr = &ComparisonExpr{Operator: EQ, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2637
		{
			sqlVAL.expr = &BinaryExpr{Operator: Concat, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2641
		{
			sqlVAL.expr = &BinaryExpr{Operator: LShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2645
		{
			sqlVAL.expr = &BinaryExpr{Operator: RShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2649
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2653
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2657
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2661
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[5].expr}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2665
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsNotDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[6].expr}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2669
		{
			sqlVAL.expr = &IsOfTypeExpr{Expr: sqlDollar[1].expr, Types: sqlDollar[5].colTypes}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2673
		{
			sqlVAL.expr = &IsOfTypeExpr{Not: true, Expr: sqlDollar[1].expr, Types: sqlDollar[6].colTypes}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2685
		{
			sqlVAL.expr = sqlDollar[1].qname
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2690
		{
			sqlVAL.expr = ValArg(sqlDollar[1].str)
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2694
		{
			sqlVAL.expr = &ParenExpr{Expr: sqlDollar[2].expr}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2700
		{
			sqlVAL.expr = &Subquery{Select: sqlDollar[1].selectStmt}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2704
		{
			sqlVAL.expr = &Subquery{Select: sqlDollar[1].selectStmt}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2708
		{
			sqlVAL.expr = &ExistsExpr{Subquery: &Subquery{Select: sqlDollar[2].selectStmt}}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2714
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2718
		{
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2722
		{
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2730
		{
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2734
		{
			// TODO(pmattis): Support opt_sort_clause or remove it?
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname, Exprs: sqlDollar[3].exprs}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2738
		{
			unimplemented()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2739
		{
			unimplemented()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2740
		{
			unimplemented()
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2742
		{
			// TODO(pmattis): Support opt_sort_clause or remove it?
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname, Distinct: true, Exprs: sqlDollar[4].exprs}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2747
		{
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname, Exprs: Exprs{StarExpr()}}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2760
		{
			// TODO(pmattis): Support within_group_clause, filter_clause and
			// over_clause?
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2766
		{
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2775
		{
			unimplemented()
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2776
		{
			unimplemented()
		}
	case 540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2780
		{
			unimplemented()
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2782
		{
			sqlVAL.expr = &FuncExpr{Name: &QualifiedName{Base: Name(sqlDollar[1].str)}}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2786
		{
			sqlVAL.expr = &FuncExpr{Name: &QualifiedName{Base: Name(sqlDollar[1].str)}}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2789
		{
			unimplemented()
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2790
		{
			unimplemented()
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2791
		{
			unimplemented()
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2792
		{
			unimplemented()
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2794
		{
			sqlVAL.expr = &CastExpr{Expr: sqlDollar[3].expr, Type: sqlDollar[5].colType}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2798
		{
			sqlVAL.expr = &FuncExpr{Name: &QualifiedName{Base: Name(sqlDollar[1].str)}, Exprs: sqlDollar[3].exprs}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2801
		{
			unimplemented()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2802
		{
			unimplemented()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2803
		{
			unimplemented()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2804
		{
			unimplemented()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2805
		{
			unimplemented()
		}
	case 554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2806
		{
			unimplemented()
		}
	case 555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2807
		{
			unimplemented()
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2808
		{
			unimplemented()
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2809
		{
			unimplemented()
		}
	case 558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2810
		{
			unimplemented()
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2811
		{
			unimplemented()
		}
	case 560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2812
		{
			unimplemented()
		}
	case 561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2816
		{
			unimplemented()
		}
	case 562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2817
		{
		}
	case 563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2820
		{
			unimplemented()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2821
		{
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2825
		{
			unimplemented()
		}
	case 566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2826
		{
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2829
		{
			unimplemented()
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2830
		{
			unimplemented()
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2833
		{
			unimplemented()
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2836
		{
			unimplemented()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2837
		{
			unimplemented()
		}
	case 572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2838
		{
		}
	case 573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2842
		{
			unimplemented()
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2853
		{
			unimplemented()
		}
	case 575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2854
		{
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2857
		{
			unimplemented()
		}
	case 577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2858
		{
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2866
		{
			unimplemented()
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2867
		{
			unimplemented()
		}
	case 580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2868
		{
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2871
		{
			unimplemented()
		}
	case 582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2872
		{
			unimplemented()
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2878
		{
			unimplemented()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2879
		{
			unimplemented()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2880
		{
			unimplemented()
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2881
		{
			unimplemented()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2882
		{
			unimplemented()
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2893
		{
			sqlVAL.expr = Row(sqlDollar[3].exprs)
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2897
		{
			sqlVAL.expr = Row(nil)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2901
		{
			sqlVAL.expr = Tuple(append(sqlDollar[2].exprs, sqlDollar[4].expr))
		}
	case 591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2907
		{
			sqlVAL.expr = Row(sqlDollar[3].exprs)
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2911
		{
			sqlVAL.expr = Row(nil)
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2917
		{
			sqlVAL.expr = Tuple(append(sqlDollar[2].exprs, sqlDollar[4].expr))
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2922
		{
			unimplemented()
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2923
		{
			unimplemented()
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2924
		{
			unimplemented()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2927
		{
			unimplemented()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2928
		{
			unimplemented()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2929
		{
			unimplemented()
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2930
		{
			unimplemented()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2931
		{
			unimplemented()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2932
		{
			unimplemented()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2933
		{
			unimplemented()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2934
		{
			unimplemented()
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2935
		{
			unimplemented()
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2936
		{
			unimplemented()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2937
		{
			unimplemented()
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2938
		{
			unimplemented()
		}
	case 609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2939
		{
			unimplemented()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2940
		{
			unimplemented()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2941
		{
			unimplemented()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2942
		{
			unimplemented()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2945
		{
			unimplemented()
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2946
		{
			unimplemented()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2947
		{
			unimplemented()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2958
		{
			sqlVAL.exprs = Exprs{sqlDollar[1].expr}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2962
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2968
		{
			sqlVAL.colTypes = []ColumnType{sqlDollar[1].colType}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2972
		{
			sqlVAL.colTypes = append(sqlDollar[1].colTypes, sqlDollar[3].colType)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2978
		{
			sqlVAL.expr = Array(sqlDollar[2].exprs)
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2982
		{
			sqlVAL.expr = Array(sqlDollar[2].exprs)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2986
		{
			sqlVAL.expr = Array(nil)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2992
		{
			sqlVAL.exprs = Exprs{sqlDollar[1].expr}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2996
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3002
		{
			sqlVAL.exprs = Exprs{DString(sqlDollar[1].str), sqlDollar[3].expr}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3023
		{
			unimplemented()
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3024
		{
			unimplemented()
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3027
		{
			unimplemented()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3031
		{
			unimplemented()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3032
		{
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3046
		{
			unimplemented()
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3047
		{
			unimplemented()
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3048
		{
			unimplemented()
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3049
		{
			unimplemented()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3050
		{
			unimplemented()
		}
	case 643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3051
		{
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3054
		{
			unimplemented()
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3057
		{
			unimplemented()
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3060
		{
			unimplemented()
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3061
		{
			unimplemented()
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3062
		{
			unimplemented()
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3066
		{
			sqlVAL.expr = &Subquery{Select: sqlDollar[1].selectStmt}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3070
		{
			sqlVAL.expr = Tuple(sqlDollar[2].exprs)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3081
		{
			sqlVAL.expr = &CaseExpr{Expr: sqlDollar[2].expr, Whens: sqlDollar[3].whens, Else: sqlDollar[4].expr}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3088
		{
			sqlVAL.whens = []*When{sqlDollar[1].when}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3092
		{
			sqlVAL.whens = append(sqlDollar[1].whens, sqlDollar[2].when)
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3098
		{
			sqlVAL.when = &When{Cond: sqlDollar[2].expr, Val: sqlDollar[4].expr}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3104
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3108
		{
			sqlVAL.expr = nil
		}
	case 658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3115
		{
			sqlVAL.expr = nil
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3121
		{
			sqlVAL.indirectElem = NameIndirection(sqlDollar[2].str)
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3125
		{
			sqlVAL.indirectElem = qualifiedStar
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3129
		{
			sqlVAL.indirectElem = IndexIndirection(sqlDollar[2].str)
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3133
		{
			sqlVAL.indirectElem = &ArrayIndirection{Begin: sqlDollar[2].expr}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3137
		{
			sqlVAL.indirectElem = &ArrayIndirection{Begin: sqlDollar[2].expr, End: sqlDollar[4].expr}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3143
		{
			sqlVAL.indirect = Indirection{sqlDollar[1].indirectElem}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3147
		{
			sqlVAL.indirect = append(sqlDollar[1].indirect, sqlDollar[2].indirectElem)
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3152
		{
		}
	case 667:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3153
		{
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3162
		{
			sqlVAL.expr = DefaultVal{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3168
		{
			sqlVAL.exprs = []Expr{sqlDollar[1].expr}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3172
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3181
		{
			sqlVAL.exprs = sqlDollar[2].exprs
		}
	case 674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3189
		{
			sqlVAL.selExprs = nil
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3195
		{
			sqlVAL.selExprs = SelectExprs{sqlDollar[1].selExpr}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3199
		{
			sqlVAL.selExprs = append(sqlDollar[1].selExprs, sqlDollar[3].selExpr)
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3205
		{
			sqlVAL.selExpr = SelectExpr{Expr: sqlDollar[1].expr, As: Name(sqlDollar[3].str)}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3214
		{
			sqlVAL.selExpr = SelectExpr{Expr: sqlDollar[1].expr, As: Name(sqlDollar[2].str)}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3218
		{
			sqlVAL.selExpr = SelectExpr{Expr: sqlDollar[1].expr}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3222
		{
			sqlVAL.selExpr = StarSelectExpr()
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3230
		{
			sqlVAL.qnames = QualifiedNames{sqlDollar[1].qname}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3234
		{
			sqlVAL.qnames = append(sqlDollar[1].qnames, sqlDollar[3].qname)
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3245
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str)}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3249
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str), Indirect: sqlDollar[2].indirect}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3255
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3259
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3265
		{
			sqlVAL.strs = sqlDollar[2].strs
		}
	case 688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3268
		{
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3278
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str)}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3282
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str), Indirect: sqlDollar[2].indirect}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3289
		{
			sqlVAL.expr = IntVal(sqlDollar[1].ival)
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3293
		{
			sqlVAL.expr = NumVal(sqlDollar[1].str)
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3297
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3301
		{
			sqlVAL.expr = DBytes(sqlDollar[1].str)
		}
	case 695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:3304
		{
			unimplemented()
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3306
		{
			sqlVAL.expr = &CastExpr{Expr: DString(sqlDollar[2].str), Type: sqlDollar[1].colType}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3310
		{
			// TODO(pmattis): support opt_interval?
			sqlVAL.expr = &CastExpr{Expr: DString(sqlDollar[2].str), Type: sqlDollar[1].colType}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3315
		{
			// TODO(pmattis): Support the precision specification?
			sqlVAL.expr = &CastExpr{Expr: DString(sqlDollar[5].str), Type: sqlDollar[1].colType}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3320
		{
			sqlVAL.expr = DBool(true)
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3324
		{
			sqlVAL.expr = DBool(false)
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3328
		{
			sqlVAL.expr = DNull
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3335
		{
			sqlVAL.ival = +sqlDollar[2].ival
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3339
		{
			sqlVAL.ival = -sqlDollar[2].ival
		}
	case 709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3361
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
