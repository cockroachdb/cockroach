// Copyright 2015 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License. See the AUTHORS file
// for names of contributors.
//
// Author: Vivek Menezes (vivek@cockroachlabs.com)

syntax = "proto2";
package cockroach.sql;
option go_package = "sql";

import "gogoproto/gogo.proto";
import "cockroach/roachpb/data.proto";
import "cockroach/sql/driver/wire.proto";

option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

message Session {
  optional string database = 1 [(gogoproto.nullable) = false];
  optional int32 syntax = 2 [(gogoproto.nullable) = false];
  message Transaction {
    optional roachpb.Transaction txn = 1 [(gogoproto.nullable) = false];
    // Timestamp to be used by SQL in the above transaction. Note: this is not the
    // transaction timestamp in roachpb.Transaction above.
    optional driver.Datum.Timestamp timestamp = 2 [(gogoproto.nullable) = false];

    message TableMutation {
      optional string name = 1 [(gogoproto.nullable) = false];
      // ID of the parent database.
      optional uint32 parent_id = 2 [(gogoproto.nullable) = false,
          (gogoproto.customname) = "ParentID", (gogoproto.casttype) = "ID"];
      // Mutation id.
      optional uint32 id = 3 [(gogoproto.nullable) = false,
          (gogoproto.customname) = "ID", (gogoproto.casttype) = "MutationID"];
    }
    optional TableMutation mutation = 3;
  }
  // Open transaction.
  optional Transaction txn = 3 [(gogoproto.nullable) = false];
  // Indicates that the above transaction is mutating keys in the
  // SystemDB span.
  optional bool mutates_system_db = 4 [(gogoproto.nullable) = false, (gogoproto.customname) = "MutatesSystemDB"];
  oneof timezone {
    // A time zone; LOCAL or DEFAULT imply UTC.
    string location = 5;
    // A time duration in seconds.
    int64 offset = 6;
  }
}
