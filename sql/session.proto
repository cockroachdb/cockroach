// Copyright 2015 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License.
//
// Author: Vivek Menezes (vivek@cockroachlabs.com)

syntax = "proto2";
package cockroach.sql;
option go_package = "sql";

import "cockroach/roachpb/data.proto";
import weak "gogoproto/gogo.proto";

message Session {
  optional string database = 1 [(gogoproto.nullable) = false];
  optional int32 syntax = 2 [(gogoproto.nullable) = false];
  // Timestamp represents an absolute timestamp devoid of time-zone.
  message Timestamp {
    // The time in seconds since, January 1, 1970 UTC (Unix time).
    optional int64 sec = 1 [(gogoproto.nullable) = false];
    // nsec specifies a non-negative nanosecond offset within sec.
    // It must be in the range [0, 999999999].
    optional uint32 nsec = 2 [(gogoproto.nullable) = false];
  }
  message Transaction {
    // If missing, it means we're not inside a (KV) txn.
    optional roachpb.Transaction txn = 1;
    // txnAborted is set once executing a statement returned an error from KV.
    // While in this state, every subsequent statement must be rejected until
    // a COMMIT/ROLLBACK is seen.
    optional bool txnAborted = 2 [(gogoproto.nullable) = false];
    // Timestamp to be used by SQL (transaction_timestamp()) in the above
    // transaction. Note: this is not the transaction timestamp in
    // roachpb.Transaction above, although it probably should be (#4393).
    optional Timestamp txn_timestamp = 3 [(gogoproto.nullable) = false];
    optional double user_priority = 4 [(gogoproto.nullable) = false,
        (gogoproto.casttype) = "github.com/cockroachdb/cockroach/roachpb.UserPriority"];
    // Indicates that the transaction is mutating keys in the
    // SystemConfig span.
    optional bool mutates_system_config = 5 [(gogoproto.nullable) = false];
  }
  // Info about the open transaction (if any).
  optional Transaction txn = 3 [(gogoproto.nullable) = false];
  oneof timezone {
    // A time zone; LOCAL or DEFAULT imply UTC.
    string location = 5;
    // A time duration in seconds.
    int64 offset = 6;
  }
  optional roachpb.IsolationType default_isolation_level = 7 [(gogoproto.nullable) = false];
  optional int64 transaction_timeout = 8;
}
