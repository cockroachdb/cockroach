load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "loopvarcapture",
    srcs = [
        "loop.go",
        "loopvarcapture.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/testutils/lint/passes/loopvarcapture",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/testutils/lint/passes/passesutil",
        "@org_golang_x_tools//go/analysis",
        "@org_golang_x_tools//go/analysis/passes/inspect",
        "@org_golang_x_tools//go/ast/inspector",
        "@org_golang_x_tools//go/types/typeutil",
    ],
)

go_test(
    name = "loopvarcapture_test",
    srcs = ["loopvarcapture_test.go"],
    args = ["-test.timeout=295s"],
    data = glob(["testdata/**"]) + [
        "@go_sdk//:files",
    ],
    # N.B. We must disable CGO owing to a rather obscure failure [1].
    #      It's surmised that the root cause is the missing CGO metadata
    #      inside the test's runfiles directory. By disabling CGO, we're
    #      allowing the go type checker to create a dummy object [2] without
    #      causing a (type) resolution error.
    #
    # [1] https://github.com/golang/go/issues/36547
    # [2] https://github.com/golang/tools/blob/master/go/packages/packages.go#L1056-L1064
    #
    env = {
        "CGO_ENABLED": "0",
    },
    deps = [
        ":loopvarcapture",
        "//pkg/build/bazel",
        "//pkg/testutils/datapathutils",
        "//pkg/testutils/skip",
        "@org_golang_x_tools//go/analysis/analysistest",
    ],
)
