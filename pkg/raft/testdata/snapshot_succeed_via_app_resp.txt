# TestSnapshotSucceedViaAppResp regression tests the situation in which a snap-
# shot is sent to a follower at the most recent index (i.e. the snapshot index
# is the leader's last index is the committed index). In that situation, a bug
# in the past left the follower in probing status until the next log entry was
# committed.
#
# See https://github.com/etcd-io/etcd/pull/10308 for additional background.

# Turn off output during the setup of the test.
log-level none
----
ok

add-nodes 3 voters=(1,2,3) index=10
----
ok

campaign 1
----
ok

stabilize
----
ok

propose 1 entry12
----
ok

stabilize 1 2
----
ok

# Compact the new entry out from the leader's log.
compact 1 12
----
ok

# Drop inflight messages to n3.
deliver-msgs drop=(3)
----
ok

# Show the Raft log messages from now on.
log-level debug
----
ok

# The log is fully replicated and committed on nodes 1 and 2. For node 3, the
# last entry 12 has been sent but dropped. The leader is not yet aware of that.
status 1
----
1: StateReplicate match=12 next=13 sentCommit=11 matchCommit=11
2: StateReplicate match=12 next=13 sentCommit=12 matchCommit=12
3: StateReplicate match=11 next=13 sentCommit=12 matchCommit=11 inflight=1

# Time passes on the leader, and it pings the lagging follower again.
tick-heartbeat 1
----
ok

# A MsgApp reject from the follower on node 3 coerces the leader into sending a
# snapshot at the last log index.
#
# Follower applies the snapshot. Note how it reacts with a MsgAppResp upon completion.
# The snapshot fully catches the follower up (i.e. there are no more log entries it
# needs to apply after). The bug was that the leader failed to realize that the follower
# was now fully caught up.
stabilize
----
> 1 handling Ready
  Ready MustSync=false:
  Messages:
  1->3 MsgApp Term:1 Log:1/12 Commit:12
> 3 receiving messages
  1->3 MsgApp Term:1 Log:1/12 Commit:12
  DEBUG 3 [logterm: 0, index: 12] rejected MsgApp [logterm: 1, index: 12] from 1
> 3 handling Ready
  Ready MustSync=false:
  Messages:
  3->1 MsgAppResp Term:1 Log:1/12 Rejected (Hint: 11) Commit:11
> 1 receiving messages
  3->1 MsgAppResp Term:1 Log:1/12 Rejected (Hint: 11) Commit:11
  DEBUG 1 received MsgAppResp(rejected, hint: (index 11, term 1)) from 3 for index 12
  DEBUG 1 decreased progress of 3 to [StateReplicate match=11 next=12 sentCommit=11 matchCommit=11 inflight=1]
  DEBUG 1 [firstindex: 13, commit: 12] sent snapshot[index: 12, term: 1] to 3 [StateProbe match=11 next=12 sentCommit=11 matchCommit=11]
  DEBUG 1 paused sending replication messages to 3 [StateSnapshot match=11 next=13 sentCommit=12 matchCommit=11 paused pendingSnap=12]
> 1 handling Ready
  Ready MustSync=false:
  Messages:
  1->3 MsgSnap Term:1 Log:0/0
    Snapshot: Index:12 Term:1 ConfState:Voters:[1 2 3] VotersOutgoing:[] Learners:[] LearnersNext:[] AutoLeave:false
> 3 receiving messages
  1->3 MsgSnap Term:1 Log:0/0
    Snapshot: Index:12 Term:1 ConfState:Voters:[1 2 3] VotersOutgoing:[] Learners:[] LearnersNext:[] AutoLeave:false
  INFO log [committed=11, applied=11, applying=11, unstable.offset=12, unstable.offsetInProgress=12, len(unstable.Entries)=0] starts to restore snapshot [index: 12, term: 1]
  INFO 3 switched to configuration voters=(1 2 3)
  INFO 3 [commit: 12, lastindex: 12, lastterm: 1] restored snapshot [index: 12, term: 1]
  INFO 3 [commit: 12] restored snapshot [index: 12, term: 1]
> 3 handling Ready
  Ready MustSync=true:
  HardState Term:1 Vote:1 Commit:12 Lead:1 LeadEpoch:1
  Snapshot Index:12 Term:1 ConfState:Voters:[1 2 3] VotersOutgoing:[] Learners:[] LearnersNext:[] AutoLeave:false
  Messages:
  3->1 MsgAppResp Term:1 Log:0/12 Commit:12
> 1 receiving messages
  3->1 MsgAppResp Term:1 Log:0/12 Commit:12
  DEBUG 1 recovered from needing snapshot, resumed sending replication messages to 3 [StateSnapshot match=12 next=13 sentCommit=12 matchCommit=12 paused pendingSnap=12]

# The MsgAppResp let the leader move the follower back to replicating state.
# Everything has converged to fully replicated.
status 1
----
1: StateReplicate match=12 next=13 sentCommit=11 matchCommit=11
2: StateReplicate match=12 next=13 sentCommit=12 matchCommit=12
3: StateReplicate match=12 next=13 sentCommit=12 matchCommit=12
