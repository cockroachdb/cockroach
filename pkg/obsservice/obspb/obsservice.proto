// Copyright 2023 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0

syntax = "proto3";

package cockroach.obspb;

import "gogoproto/gogo.proto";

import "obsservice/obspb/opentelemetry-proto/logs/v1/logs.proto";
import "obsservice/obspb/opentelemetry-proto/common/v1/common.proto";
import "obsservice/obspb/opentelemetry-proto/resource/v1/resource.proto";

option go_package = "github.com/cockroachdb/cockroach/pkg/obsservice/obspb";

// A generic event record used within the Observability Service.
// Generally, the data within log_record is eventually transformed
// into an event-specific protobuf message for further processing,
// but this message represents the event in its raw form.
message Event {
  // The resource for the event.
  // If this field is not set then resource info is unknown.
  // Contains information referring to the source of the event.
  // For example, cluster ID, node ID, etc.
  opentelemetry.proto.resource.v1.Resource resource = 1;

  // The instrumentation scope information for the event. Contains
  // event-specific information. For example, event type and version.
  opentelemetry.proto.common.v1.InstrumentationScope scope = 2;

  // The LogRecord containing the specific event information.
  opentelemetry.proto.logs.v1.LogRecord log_record = 3 [(gogoproto.nullable) = false ];
}
