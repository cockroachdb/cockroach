// Copyright 2021 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

package main

import (
	"fmt"
	"log"
	"os"
	"os/exec"
	"sort"
	"strings"
)

func main() {
	// First list all tests.
	buf, err := exec.Command("bazel", "query", "kind(go_test, //pkg/...)", "--output=label").Output()
	if err != nil {
		log.Printf("Could not query Bazel tests: got error %v", err)
		os.Exit(1)
	}
	labels := strings.Split(string(buf[:]), "\n")
	sort.Slice(labels, func(i, j int) bool { return labels[i] < labels[j] })

	// Write the output to stdout
	fmt.Println(`# Code generated by generate-test-suites, DO NOT EDIT.
# gazelle:proto_strip_import_prefix /pkg

ALL_TESTS = [`)
	for _, label := range labels {
		if len(label) > 0 {
			fmt.Printf("    %q,\n", label)
		}
	}
	fmt.Println(`]

# These suites run only the tests with the appropriate "size" (excepting those
# tagged "broken_in_bazel" or "flaky") [1]. Note that tests have a default
# timeout depending on the size [2].

# [1] https://docs.bazel.build/versions/master/be/general.html#test_suite
# [2] https://docs.bazel.build/versions/master/be/common-definitions.html#common-attributes-tests`)

	for _, size := range []string{"small", "medium", "large", "enormous"} {
		fmt.Printf(`
test_suite(
    name = "%[1]s_tests",
    tags = [
        "-broken_in_bazel",
        "-flaky",
        "%[1]s",
    ],
    tests = ALL_TESTS,
)
`, size)
	}
}
