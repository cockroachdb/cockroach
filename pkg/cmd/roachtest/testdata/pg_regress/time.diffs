diff -U3 --label=/mnt/data1/postgres/src/test/regress/expected/time.out --label=/mnt/data1/postgres/src/test/regress/results/time.out /mnt/data1/postgres/src/test/regress/expected/time.out /mnt/data1/postgres/src/test/regress/results/time.out
--- /mnt/data1/postgres/src/test/regress/expected/time.out
+++ /mnt/data1/postgres/src/test/regress/results/time.out
@@ -6,7 +6,13 @@
 INSERT INTO TIME_TBL VALUES ('01:00');
 -- as of 7.4, timezone spec should be accepted and ignored
 INSERT INTO TIME_TBL VALUES ('02:03 PST');
+ERROR:  could not parse "02:03 PST" as type time: parsing as type time: unimplemented: timestamp abbreviations not supported
+HINT:  You have attempted to use a feature that is not yet implemented.
+See: https://go.crdb.dev/issue-v/31710/_version_
 INSERT INTO TIME_TBL VALUES ('11:59 EDT');
+ERROR:  could not parse "11:59 EDT" as type time: parsing as type time: unimplemented: timestamp abbreviations not supported
+HINT:  You have attempted to use a feature that is not yet implemented.
+See: https://go.crdb.dev/issue-v/31710/_version_
 INSERT INTO TIME_TBL VALUES ('12:00');
 INSERT INTO TIME_TBL VALUES ('12:01');
 INSERT INTO TIME_TBL VALUES ('23:59');
@@ -15,43 +21,39 @@
 INSERT INTO TIME_TBL VALUES ('2003-07-07 15:36:39 America/New_York');
 -- this should fail (the timezone offset is not known)
 INSERT INTO TIME_TBL VALUES ('15:36:39 America/New_York');
-ERROR:  invalid input syntax for type time: "15:36:39 America/New_York"
-LINE 1: INSERT INTO TIME_TBL VALUES ('15:36:39 America/New_York');
-                                     ^
+ERROR:  could not parse "15:36:39 America/New_York" as type time: parsing as type time: unexpected separator ':' for field Day
+DETAIL:  Wanted: [ Year Day Era Hour Minute Second Nanos Meridian ]
+Already found in input: [ Month ]
 SELECT f1 AS "Time" FROM TIME_TBL;
     Time     
 -------------
  00:00:00
  01:00:00
- 02:03:00
- 11:59:00
  12:00:00
  12:01:00
  23:59:00
  23:59:59.99
  15:36:39
  15:36:39
-(10 rows)
+(8 rows)
 
 SELECT f1 AS "Three" FROM TIME_TBL WHERE f1 < '05:06:07';
   Three   
 ----------
  00:00:00
  01:00:00
- 02:03:00
-(3 rows)
+(2 rows)
 
 SELECT f1 AS "Five" FROM TIME_TBL WHERE f1 > '05:06:07';
     Five     
 -------------
- 11:59:00
  12:00:00
  12:01:00
  23:59:00
  23:59:59.99
  15:36:39
  15:36:39
-(7 rows)
+(6 rows)
 
 SELECT f1 AS "None" FROM TIME_TBL WHERE f1 < '00:00';
  None 
@@ -63,15 +65,13 @@
 -------------
  00:00:00
  01:00:00
- 02:03:00
- 11:59:00
  12:00:00
  12:01:00
  23:59:00
  23:59:59.99
  15:36:39
  15:36:39
-(10 rows)
+(8 rows)
 
 -- Check edge cases
 SELECT '23:59:59.999999'::time;
@@ -83,15 +83,13 @@
 SELECT '23:59:59.9999999'::time;  -- rounds up
    time   
 ----------
- 24:00:00
+ 00:00:00
 (1 row)
 
 SELECT '23:59:60'::time;  -- rounds up
-   time   
-----------
- 24:00:00
-(1 row)
-
+ERROR:  could not parse "23:59:60" as type time: parsing as type time: unexpected separator ':' for field Day
+DETAIL:  Wanted: [ Year Day Era Hour Minute Second Nanos Meridian TZHour TZMinute TZSecond ]
+Already found in input: [ Month ]
 SELECT '24:00:00'::time;  -- allowed
    time   
 ----------
@@ -99,52 +97,32 @@
 (1 row)
 
 SELECT '24:00:00.01'::time;  -- not allowed
-ERROR:  date/time field value out of range: "24:00:00.01"
-LINE 1: SELECT '24:00:00.01'::time;
-               ^
+ERROR:  could not parse "24:00:00.01" as type time: parsing as type time: unexpected separator ':' for field Day
+DETAIL:  Wanted: [ Year Day Era Hour Minute Second Nanos Meridian TZHour TZMinute TZSecond ]
+Already found in input: [ Month ]
 SELECT '23:59:60.01'::time;  -- not allowed
-ERROR:  date/time field value out of range: "23:59:60.01"
-LINE 1: SELECT '23:59:60.01'::time;
-               ^
+ERROR:  could not parse "23:59:60.01" as type time: parsing as type time: unexpected separator ':' for field Day
+DETAIL:  Wanted: [ Year Day Era Hour Minute Second Nanos Meridian TZHour TZMinute TZSecond ]
+Already found in input: [ Month ]
 SELECT '24:01:00'::time;  -- not allowed
-ERROR:  date/time field value out of range: "24:01:00"
-LINE 1: SELECT '24:01:00'::time;
-               ^
+ERROR:  could not parse "24:01:00" as type time: parsing as type time: unexpected separator ':' for field Day
+DETAIL:  Wanted: [ Year Day Era Hour Minute Second Nanos Meridian TZHour TZMinute TZSecond ]
+Already found in input: [ Month ]
 SELECT '25:00:00'::time;  -- not allowed
-ERROR:  date/time field value out of range: "25:00:00"
-LINE 1: SELECT '25:00:00'::time;
-               ^
+ERROR:  could not parse "25:00:00" as type time: parsing as type time: unexpected separator ':' for field Day
+DETAIL:  Wanted: [ Year Day Era Hour Minute Second Nanos Meridian TZHour TZMinute TZSecond ]
+Already found in input: [ Month ]
 -- Test non-error-throwing API
 SELECT pg_input_is_valid('12:00:00', 'time');
- pg_input_is_valid 
--------------------
- t
-(1 row)
-
+ERROR:  unknown function: pg_input_is_valid()
 SELECT pg_input_is_valid('25:00:00', 'time');
- pg_input_is_valid 
--------------------
- f
-(1 row)
-
+ERROR:  unknown function: pg_input_is_valid()
 SELECT pg_input_is_valid('15:36:39 America/New_York', 'time');
- pg_input_is_valid 
--------------------
- f
-(1 row)
-
+ERROR:  unknown function: pg_input_is_valid()
 SELECT * FROM pg_input_error_info('25:00:00', 'time');
-                    message                     | detail | hint | sql_error_code 
-------------------------------------------------+--------+------+----------------
- date/time field value out of range: "25:00:00" |        |      | 22008
-(1 row)
-
+ERROR:  unknown function: pg_input_error_info()
 SELECT * FROM pg_input_error_info('15:36:39 America/New_York', 'time');
-                             message                             | detail | hint | sql_error_code 
------------------------------------------------------------------+--------+------+----------------
- invalid input syntax for type time: "15:36:39 America/New_York" |        |      | 22007
-(1 row)
-
+ERROR:  unknown function: pg_input_error_info()
 --
 -- TIME simple math
 --
@@ -154,17 +132,14 @@
 -- and do the rest of the testing in horology.sql
 -- where we do mixed-type arithmetic. - thomas 2000-12-02
 SELECT f1 + time '00:01' AS "Illegal" FROM TIME_TBL;
-ERROR:  operator is not unique: time without time zone + time without time zone
-LINE 1: SELECT f1 + time '00:01' AS "Illegal" FROM TIME_TBL;
-                  ^
-HINT:  Could not choose a best candidate operator. You might need to add explicit type casts.
+ERROR:  unsupported binary operator: <time(2)> + <time>
 --
 -- test EXTRACT
 --
 SELECT EXTRACT(MICROSECOND FROM TIME '2020-05-26 13:30:25.575401');
- extract  
-----------
- 25575401
+    extract    
+---------------
+ 2.5575401e+07
 (1 row)
 
 SELECT EXTRACT(MILLISECOND FROM TIME '2020-05-26 13:30:25.575401');
@@ -192,11 +167,11 @@
 (1 row)
 
 SELECT EXTRACT(DAY         FROM TIME '2020-05-26 13:30:25.575401');  -- error
-ERROR:  unit "day" not supported for type time without time zone
+ERROR:  extract(): unsupported timespan: day
 SELECT EXTRACT(FORTNIGHT   FROM TIME '2020-05-26 13:30:25.575401');  -- error
-ERROR:  unit "fortnight" not recognized for type time without time zone
+ERROR:  extract(): unsupported timespan: fortnight
 SELECT EXTRACT(TIMEZONE    FROM TIME '2020-05-26 13:30:25.575401');  -- error
-ERROR:  unit "timezone" not supported for type time without time zone
+ERROR:  extract(): unsupported timespan: timezone
 SELECT EXTRACT(EPOCH       FROM TIME '2020-05-26 13:30:25.575401');
    extract    
 --------------
@@ -206,9 +181,9 @@
 -- date_part implementation is mostly the same as extract, so only
 -- test a few cases for additional coverage.
 SELECT date_part('microsecond', TIME '2020-05-26 13:30:25.575401');
- date_part 
------------
-  25575401
+   date_part   
+---------------
+ 2.5575401e+07
 (1 row)
 
 SELECT date_part('millisecond', TIME '2020-05-26 13:30:25.575401');
