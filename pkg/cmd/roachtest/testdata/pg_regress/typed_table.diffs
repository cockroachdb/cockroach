diff -U3 --label=/mnt/data1/postgres/src/test/regress/expected/typed_table.out --label=/mnt/data1/postgres/src/test/regress/results/typed_table.out /mnt/data1/postgres/src/test/regress/expected/typed_table.out /mnt/data1/postgres/src/test/regress/results/typed_table.out
--- /mnt/data1/postgres/src/test/regress/expected/typed_table.out
+++ /mnt/data1/postgres/src/test/regress/results/typed_table.out
@@ -1,133 +1,176 @@
 CREATE TABLE ttable1 OF nothing;
-ERROR:  type "nothing" does not exist
+ERROR:  at or near "of": syntax error
+DETAIL:  source SQL:
+CREATE TABLE ttable1 OF nothing
+                     ^
+HINT:  try \h CREATE TABLE
 CREATE TYPE person_type AS (id int, name text);
 CREATE TABLE persons OF person_type;
+ERROR:  at or near "of": syntax error
+DETAIL:  source SQL:
+CREATE TABLE persons OF person_type
+                     ^
+HINT:  try \h CREATE TABLE
 CREATE TABLE IF NOT EXISTS persons OF person_type;
-NOTICE:  relation "persons" already exists, skipping
+ERROR:  at or near "of": syntax error
+DETAIL:  source SQL:
+CREATE TABLE IF NOT EXISTS persons OF person_type
+                                   ^
+HINT:  try \h CREATE TABLE
 SELECT * FROM persons;
- id | name 
-----+------
-(0 rows)
-
+ERROR:  relation "persons" does not exist
 \d persons
-              Table "public.persons"
- Column |  Type   | Collation | Nullable | Default 
---------+---------+-----------+----------+---------
- id     | integer |           |          | 
- name   | text    |           |          | 
-Typed table of type: person_type
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(persons)$' COLLATE pg_catalog.default
+                                                                       ^
 CREATE FUNCTION get_all_persons() RETURNS SETOF person_type
 LANGUAGE SQL
 AS $$
     SELECT * FROM persons;
 $$;
+ERROR:  relation "persons" does not exist
 SELECT * FROM get_all_persons();
- id | name 
-----+------
-(0 rows)
-
+ERROR:  unknown function: get_all_persons()
 -- certain ALTER TABLE operations on typed tables are not allowed
 ALTER TABLE persons ADD COLUMN comment text;
-ERROR:  cannot add column to typed table
+ERROR:  relation "persons" does not exist
 ALTER TABLE persons DROP COLUMN name;
-ERROR:  cannot drop column from typed table
+ERROR:  relation "persons" does not exist
 ALTER TABLE persons RENAME COLUMN id TO num;
-ERROR:  cannot rename column of typed table
+ERROR:  relation "persons" does not exist
 ALTER TABLE persons ALTER COLUMN name TYPE varchar;
-ERROR:  cannot alter column type of typed table
+ERROR:  relation "persons" does not exist
 CREATE TABLE stuff (id int);
 ALTER TABLE persons INHERIT stuff;
-ERROR:  cannot change inheritance of typed table
+ERROR:  at or near "inherit": syntax error
+DETAIL:  source SQL:
+ALTER TABLE persons INHERIT stuff
+                    ^
+HINT:  try \h ALTER TABLE
 CREATE TABLE personsx OF person_type (myname WITH OPTIONS NOT NULL); -- error
-ERROR:  column "myname" does not exist
+ERROR:  at or near "of": syntax error
+DETAIL:  source SQL:
+CREATE TABLE personsx OF person_type (myname WITH OPTIONS NOT NULL)
+                      ^
+HINT:  try \h CREATE TABLE
 CREATE TABLE persons2 OF person_type (
     id WITH OPTIONS PRIMARY KEY,
     UNIQUE (name)
 );
+ERROR:  at or near "of": syntax error
+DETAIL:  source SQL:
+CREATE TABLE persons2 OF person_type (
+                      ^
+HINT:  try \h CREATE TABLE
 \d persons2
-              Table "public.persons2"
- Column |  Type   | Collation | Nullable | Default 
---------+---------+-----------+----------+---------
- id     | integer |           | not null | 
- name   | text    |           |          | 
-Indexes:
-    "persons2_pkey" PRIMARY KEY, btree (id)
-    "persons2_name_key" UNIQUE CONSTRAINT, btree (name)
-Typed table of type: person_type
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(persons2)$' COLLATE pg_catalog.default
+                                                                        ^
 CREATE TABLE persons3 OF person_type (
     PRIMARY KEY (id),
     name WITH OPTIONS DEFAULT ''
 );
+ERROR:  at or near "of": syntax error
+DETAIL:  source SQL:
+CREATE TABLE persons3 OF person_type (
+                      ^
+HINT:  try \h CREATE TABLE
 \d persons3
-              Table "public.persons3"
- Column |  Type   | Collation | Nullable | Default  
---------+---------+-----------+----------+----------
- id     | integer |           | not null | 
- name   | text    |           |          | ''::text
-Indexes:
-    "persons3_pkey" PRIMARY KEY, btree (id)
-Typed table of type: person_type
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(persons3)$' COLLATE pg_catalog.default
+                                                                        ^
 CREATE TABLE persons4 OF person_type (
     name WITH OPTIONS NOT NULL,
     name WITH OPTIONS DEFAULT ''  -- error, specified more than once
 );
-ERROR:  column "name" specified more than once
+ERROR:  at or near "of": syntax error
+DETAIL:  source SQL:
+CREATE TABLE persons4 OF person_type (
+                      ^
+HINT:  try \h CREATE TABLE
 DROP TYPE person_type RESTRICT;
-ERROR:  cannot drop type person_type because other objects depend on it
-DETAIL:  table persons depends on type person_type
-function get_all_persons() depends on type person_type
-table persons2 depends on type person_type
-table persons3 depends on type person_type
-HINT:  Use DROP ... CASCADE to drop the dependent objects too.
 DROP TYPE person_type CASCADE;
-NOTICE:  drop cascades to 4 other objects
-DETAIL:  drop cascades to table persons
-drop cascades to function get_all_persons()
-drop cascades to table persons2
-drop cascades to table persons3
+ERROR:  unimplemented: DROP TYPE CASCADE is not yet supported
+HINT:  You have attempted to use a feature that is not yet implemented.
+See: https://go.crdb.dev/issue-v/51480/_version_
 CREATE TABLE persons5 OF stuff; -- only CREATE TYPE AS types may be used
-ERROR:  type stuff is not a composite type
+ERROR:  at or near "of": syntax error
+DETAIL:  source SQL:
+CREATE TABLE persons5 OF stuff
+                      ^
+HINT:  try \h CREATE TABLE
 DROP TABLE stuff;
 -- implicit casting
 CREATE TYPE person_type AS (id int, name text);
 CREATE TABLE persons OF person_type;
+ERROR:  at or near "of": syntax error
+DETAIL:  source SQL:
+CREATE TABLE persons OF person_type
+                     ^
+HINT:  try \h CREATE TABLE
 INSERT INTO persons VALUES (1, 'test');
+ERROR:  relation "persons" does not exist
 CREATE FUNCTION namelen(person_type) RETURNS int LANGUAGE SQL AS $$ SELECT length($1.name) $$;
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT length($1.name) 
+                ^
+HINT:  try \hf length
 SELECT id, namelen(persons) FROM persons;
- id | namelen 
-----+---------
-  1 |       4
-(1 row)
-
+ERROR:  relation "persons" does not exist
 CREATE TABLE persons2 OF person_type (
     id WITH OPTIONS PRIMARY KEY,
     UNIQUE (name)
 );
+ERROR:  at or near "of": syntax error
+DETAIL:  source SQL:
+CREATE TABLE persons2 OF person_type (
+                      ^
+HINT:  try \h CREATE TABLE
 \d persons2
-              Table "public.persons2"
- Column |  Type   | Collation | Nullable | Default 
---------+---------+-----------+----------+---------
- id     | integer |           | not null | 
- name   | text    |           |          | 
-Indexes:
-    "persons2_pkey" PRIMARY KEY, btree (id)
-    "persons2_name_key" UNIQUE CONSTRAINT, btree (name)
-Typed table of type: person_type
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(persons2)$' COLLATE pg_catalog.default
+                                                                        ^
 CREATE TABLE persons3 OF person_type (
     PRIMARY KEY (id),
     name NOT NULL DEFAULT ''
 );
+ERROR:  at or near "of": syntax error
+DETAIL:  source SQL:
+CREATE TABLE persons3 OF person_type (
+                      ^
+HINT:  try \h CREATE TABLE
 \d persons3
-              Table "public.persons3"
- Column |  Type   | Collation | Nullable | Default  
---------+---------+-----------+----------+----------
- id     | integer |           | not null | 
- name   | text    |           | not null | ''::text
-Indexes:
-    "persons3_pkey" PRIMARY KEY, btree (id)
-Typed table of type: person_type
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(persons3)$' COLLATE pg_catalog.default
+                                                                        ^
