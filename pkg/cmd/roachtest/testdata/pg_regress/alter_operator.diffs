diff -U3 --label=/mnt/data1/postgres/src/test/regress/expected/alter_operator.out --label=/mnt/data1/postgres/src/test/regress/results/alter_operator.out /mnt/data1/postgres/src/test/regress/expected/alter_operator.out /mnt/data1/postgres/src/test/regress/results/alter_operator.out
--- /mnt/data1/postgres/src/test/regress/expected/alter_operator.out
+++ /mnt/data1/postgres/src/test/regress/results/alter_operator.out
@@ -2,6 +2,7 @@
 RETURNS boolean AS $$ SELECT NULL::BOOLEAN; $$ LANGUAGE sql IMMUTABLE;
 CREATE FUNCTION customcontsel(internal, oid, internal, integer)
 RETURNS float8 AS 'contsel' LANGUAGE internal STABLE STRICT;
+ERROR:  language "internal" does not exist
 CREATE OPERATOR === (
     LEFTARG = boolean,
     RIGHTARG = boolean,
@@ -12,128 +13,192 @@
     JOIN = contjoinsel,
     HASHES, MERGES
 );
+ERROR:  at or near "=": syntax error: unimplemented: this syntax
+DETAIL:  source SQL:
+CREATE OPERATOR === (
+                ^
+HINT:  You have attempted to use a feature that is not yet implemented.
+See: https://go.crdb.dev/issue-v/65017/_version_
 SELECT pg_describe_object(refclassid,refobjid,refobjsubid) as ref, deptype
 FROM pg_depend
 WHERE classid = 'pg_operator'::regclass AND
       objid = '===(bool,bool)'::regoperator
 ORDER BY 1;
-                          ref                          | deptype 
--------------------------------------------------------+---------
- function alter_op_test_fn(boolean,boolean)            | n
- function customcontsel(internal,oid,internal,integer) | n
- schema public                                         | n
-(3 rows)
-
+ERROR:  type "regoperator" does not exist
 --
 -- Reset and set params
 --
 ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = NONE);
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = NONE)
+      ^
+HINT:  try \h ALTER
 ALTER OPERATOR === (boolean, boolean) SET (JOIN = NONE);
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (JOIN = NONE)
+      ^
+HINT:  try \h ALTER
 SELECT oprrest, oprjoin FROM pg_operator WHERE oprname = '==='
   AND oprleft = 'boolean'::regtype AND oprright = 'boolean'::regtype;
  oprrest | oprjoin 
 ---------+---------
- -       | -
-(1 row)
+(0 rows)
 
 SELECT pg_describe_object(refclassid,refobjid,refobjsubid) as ref, deptype
 FROM pg_depend
 WHERE classid = 'pg_operator'::regclass AND
       objid = '===(bool,bool)'::regoperator
 ORDER BY 1;
-                    ref                     | deptype 
---------------------------------------------+---------
- function alter_op_test_fn(boolean,boolean) | n
- schema public                              | n
-(2 rows)
-
+ERROR:  type "regoperator" does not exist
 ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = contsel);
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = contsel)
+      ^
+HINT:  try \h ALTER
 ALTER OPERATOR === (boolean, boolean) SET (JOIN = contjoinsel);
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (JOIN = contjoinsel)
+      ^
+HINT:  try \h ALTER
 SELECT oprrest, oprjoin FROM pg_operator WHERE oprname = '==='
   AND oprleft = 'boolean'::regtype AND oprright = 'boolean'::regtype;
- oprrest |   oprjoin   
----------+-------------
- contsel | contjoinsel
-(1 row)
+ oprrest | oprjoin 
+---------+---------
+(0 rows)
 
 SELECT pg_describe_object(refclassid,refobjid,refobjsubid) as ref, deptype
 FROM pg_depend
 WHERE classid = 'pg_operator'::regclass AND
       objid = '===(bool,bool)'::regoperator
 ORDER BY 1;
-                    ref                     | deptype 
---------------------------------------------+---------
- function alter_op_test_fn(boolean,boolean) | n
- schema public                              | n
-(2 rows)
-
+ERROR:  type "regoperator" does not exist
 ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = NONE, JOIN = NONE);
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = NONE, JOIN = NONE)
+      ^
+HINT:  try \h ALTER
 SELECT oprrest, oprjoin FROM pg_operator WHERE oprname = '==='
   AND oprleft = 'boolean'::regtype AND oprright = 'boolean'::regtype;
  oprrest | oprjoin 
 ---------+---------
- -       | -
-(1 row)
+(0 rows)
 
 SELECT pg_describe_object(refclassid,refobjid,refobjsubid) as ref, deptype
 FROM pg_depend
 WHERE classid = 'pg_operator'::regclass AND
       objid = '===(bool,bool)'::regoperator
 ORDER BY 1;
-                    ref                     | deptype 
---------------------------------------------+---------
- function alter_op_test_fn(boolean,boolean) | n
- schema public                              | n
-(2 rows)
-
+ERROR:  type "regoperator" does not exist
 ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = customcontsel, JOIN = contjoinsel);
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = customcontsel, JOIN = contjoinsel)
+      ^
+HINT:  try \h ALTER
 SELECT oprrest, oprjoin FROM pg_operator WHERE oprname = '==='
   AND oprleft = 'boolean'::regtype AND oprright = 'boolean'::regtype;
-    oprrest    |   oprjoin   
----------------+-------------
- customcontsel | contjoinsel
-(1 row)
+ oprrest | oprjoin 
+---------+---------
+(0 rows)
 
 SELECT pg_describe_object(refclassid,refobjid,refobjsubid) as ref, deptype
 FROM pg_depend
 WHERE classid = 'pg_operator'::regclass AND
       objid = '===(bool,bool)'::regoperator
 ORDER BY 1;
-                          ref                          | deptype 
--------------------------------------------------------+---------
- function alter_op_test_fn(boolean,boolean)            | n
- function customcontsel(internal,oid,internal,integer) | n
- schema public                                         | n
-(3 rows)
-
+ERROR:  type "regoperator" does not exist
 --
 -- Test invalid options.
 --
 ALTER OPERATOR === (boolean, boolean) SET (COMMUTATOR = ====);
-ERROR:  operator attribute "commutator" cannot be changed
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (COMMUTATOR = ====)
+      ^
+HINT:  try \h ALTER
 ALTER OPERATOR === (boolean, boolean) SET (NEGATOR = ====);
-ERROR:  operator attribute "negator" cannot be changed
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (NEGATOR = ====)
+      ^
+HINT:  try \h ALTER
 ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = non_existent_func);
-ERROR:  function non_existent_func(internal, oid, internal, integer) does not exist
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = non_existent_func)
+      ^
+HINT:  try \h ALTER
 ALTER OPERATOR === (boolean, boolean) SET (JOIN = non_existent_func);
-ERROR:  function non_existent_func(internal, oid, internal, smallint, internal) does not exist
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (JOIN = non_existent_func)
+      ^
+HINT:  try \h ALTER
 ALTER OPERATOR === (boolean, boolean) SET (COMMUTATOR = !==);
-ERROR:  operator attribute "commutator" cannot be changed
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (COMMUTATOR = !==)
+      ^
+HINT:  try \h ALTER
 ALTER OPERATOR === (boolean, boolean) SET (NEGATOR = !==);
-ERROR:  operator attribute "negator" cannot be changed
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (NEGATOR = !==)
+      ^
+HINT:  try \h ALTER
 -- invalid: non-lowercase quoted identifiers
 ALTER OPERATOR & (bit, bit) SET ("Restrict" = _int_contsel, "Join" = _int_contjoinsel);
-ERROR:  operator attribute "Restrict" not recognized
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR & (bit, bit) SET ("Restrict" = _int_contsel, "Join" = _int_contjoinsel)
+      ^
+HINT:  try \h ALTER
 --
 -- Test permission check. Must be owner to ALTER OPERATOR.
 --
 CREATE USER regress_alter_op_user;
 SET SESSION AUTHORIZATION regress_alter_op_user;
+ERROR:  at or near "regress_alter_op_user": syntax error: unimplemented: this syntax
+DETAIL:  source SQL:
+SET SESSION AUTHORIZATION regress_alter_op_user
+                          ^
+HINT:  You have attempted to use a feature that is not yet implemented.
+See: https://go.crdb.dev/issue-v/40283/_version_
 ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = NONE);
-ERROR:  must be owner of operator ===
+ERROR:  at or near "operator": syntax error
+DETAIL:  source SQL:
+ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = NONE)
+      ^
+HINT:  try \h ALTER
 -- Clean up
 RESET SESSION AUTHORIZATION;
+ERROR:  at or near "authorization": syntax error
+DETAIL:  source SQL:
+RESET SESSION AUTHORIZATION
+              ^
+HINT:  try \h RESET
 DROP USER regress_alter_op_user;
 DROP OPERATOR === (boolean, boolean);
+ERROR:  at or near "=": syntax error: unimplemented: this syntax
+DETAIL:  source SQL:
+DROP OPERATOR === (boolean, boolean)
+              ^
+HINT:  You have attempted to use a feature that is not yet implemented.
+
+Please check the public issue tracker to check whether this problem is
+already tracked. If you cannot find it there, please report the error
+with details by creating a new issue.
+
+If you would rather not post publicly, please contact us directly
+using the support form.
+
+We appreciate your feedback.
+
 DROP FUNCTION customcontsel(internal, oid, internal, integer);
+ERROR:  unknown function: customcontsel()
 DROP FUNCTION alter_op_test_fn(boolean, boolean);
