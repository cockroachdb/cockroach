diff -U3 --label=/mnt/data1/postgres/src/test/regress/expected/limit.out --label=/mnt/data1/postgres/src/test/regress/results/limit.out /mnt/data1/postgres/src/test/regress/expected/limit.out /mnt/data1/postgres/src/test/regress/results/limit.out
--- /mnt/data1/postgres/src/test/regress/expected/limit.out
+++ /mnt/data1/postgres/src/test/regress/results/limit.out
@@ -149,195 +149,77 @@
 (0 rows)
 
 fetch backward 1 in c1;
-        q1        |        q2         
-------------------+-------------------
- 4567890123456789 | -4567890123456789
-(1 row)
-
+ERROR:  cursor can only scan forward
 fetch backward all in c1;
-        q1        |        q2        
-------------------+------------------
- 4567890123456789 | 4567890123456789
- 4567890123456789 |              123
-              123 | 4567890123456789
-              123 |              456
-(4 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward 1 in c1;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch all in c1;
-        q1        |        q2         
-------------------+-------------------
-              123 |               456
-              123 |  4567890123456789
- 4567890123456789 |               123
- 4567890123456789 |  4567890123456789
- 4567890123456789 | -4567890123456789
-(5 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 declare c2 cursor for select * from int8_tbl limit 3;
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch all in c2;
-        q1        |        q2        
-------------------+------------------
-              123 |              456
-              123 | 4567890123456789
- 4567890123456789 |              123
-(3 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch 1 in c2;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward 1 in c2;
-        q1        | q2  
-------------------+-----
- 4567890123456789 | 123
-(1 row)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward all in c2;
- q1  |        q2        
------+------------------
- 123 | 4567890123456789
- 123 |              456
-(2 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward 1 in c2;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch all in c2;
-        q1        |        q2        
-------------------+------------------
-              123 |              456
-              123 | 4567890123456789
- 4567890123456789 |              123
-(3 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 declare c3 cursor for select * from int8_tbl offset 3;
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch all in c3;
-        q1        |        q2         
-------------------+-------------------
- 4567890123456789 |  4567890123456789
- 4567890123456789 | -4567890123456789
-(2 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch 1 in c3;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward 1 in c3;
-        q1        |        q2         
-------------------+-------------------
- 4567890123456789 | -4567890123456789
-(1 row)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward all in c3;
-        q1        |        q2        
-------------------+------------------
- 4567890123456789 | 4567890123456789
-(1 row)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward 1 in c3;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch all in c3;
-        q1        |        q2         
-------------------+-------------------
- 4567890123456789 |  4567890123456789
- 4567890123456789 | -4567890123456789
-(2 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 declare c4 cursor for select * from int8_tbl offset 10;
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch all in c4;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch 1 in c4;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward 1 in c4;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward all in c4;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward 1 in c4;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch all in c4;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 declare c5 cursor for select * from int8_tbl order by q1 fetch first 2 rows with ties;
+ERROR:  at or near "with": syntax error
+DETAIL:  source SQL:
+declare c5 cursor for select * from int8_tbl order by q1 fetch first 2 rows with ties
+                                                                            ^
+HINT:  try \h DECLARE
 fetch all in c5;
- q1  |        q2        
------+------------------
- 123 |              456
- 123 | 4567890123456789
-(2 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch 1 in c5;
- q1 | q2 
-----+----
-(0 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward 1 in c5;
- q1  |        q2        
------+------------------
- 123 | 4567890123456789
-(1 row)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward 1 in c5;
- q1  | q2  
------+-----
- 123 | 456
-(1 row)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch all in c5;
- q1  |        q2        
------+------------------
- 123 | 4567890123456789
-(1 row)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward all in c5;
- q1  |        q2        
------+------------------
- 123 | 4567890123456789
- 123 |              456
-(2 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch all in c5;
- q1  |        q2        
------+------------------
- 123 |              456
- 123 | 4567890123456789
-(2 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 fetch backward all in c5;
- q1  |        q2        
------+------------------
- 123 | 4567890123456789
- 123 |              456
-(2 rows)
-
+ERROR:  current transaction is aborted, commands ignored until end of transaction block
 rollback;
 -- Stress test for variable LIMIT in conjunction with bounded-heap sorting
 SELECT
@@ -368,14 +250,11 @@
 explain (verbose, costs off)
 select unique1, unique2, nextval('testseq')
   from tenk1 order by unique2 limit 10;
-                           QUERY PLAN                           
-----------------------------------------------------------------
- Limit
-   Output: unique1, unique2, (nextval('testseq'::regclass))
-   ->  Index Scan using tenk1_unique2 on public.tenk1
-         Output: unique1, unique2, nextval('testseq'::regclass)
-(4 rows)
-
+ERROR:  at or near "off": syntax error
+DETAIL:  source SQL:
+explain (verbose, costs off)
+                        ^
+HINT:  try \h <SELECTCLAUSE>
 select unique1, unique2, nextval('testseq')
   from tenk1 order by unique2 limit 10;
  unique1 | unique2 | nextval 
@@ -401,19 +280,11 @@
 explain (verbose, costs off)
 select unique1, unique2, nextval('testseq')
   from tenk1 order by tenthous limit 10;
-                                QUERY PLAN                                
---------------------------------------------------------------------------
- Limit
-   Output: unique1, unique2, (nextval('testseq'::regclass)), tenthous
-   ->  Result
-         Output: unique1, unique2, nextval('testseq'::regclass), tenthous
-         ->  Sort
-               Output: unique1, unique2, tenthous
-               Sort Key: tenk1.tenthous
-               ->  Seq Scan on public.tenk1
-                     Output: unique1, unique2, tenthous
-(9 rows)
-
+ERROR:  at or near "off": syntax error
+DETAIL:  source SQL:
+explain (verbose, costs off)
+                        ^
+HINT:  try \h <SELECTCLAUSE>
 select unique1, unique2, nextval('testseq')
   from tenk1 order by tenthous limit 10;
  unique1 | unique2 | nextval 
@@ -439,68 +310,53 @@
 explain (verbose, costs off)
 select unique1, unique2, generate_series(1,10)
   from tenk1 order by unique2 limit 7;
-                                                                         QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
- Limit
-   Output: unique1, unique2, (generate_series(1, 10))
-   ->  ProjectSet
-         Output: unique1, unique2, generate_series(1, 10)
-         ->  Index Scan using tenk1_unique2 on public.tenk1
-               Output: unique1, unique2, two, four, ten, twenty, hundred, thousand, twothousand, fivethous, tenthous, odd, even, stringu1, stringu2, string4
-(6 rows)
-
+ERROR:  at or near "off": syntax error
+DETAIL:  source SQL:
+explain (verbose, costs off)
+                        ^
+HINT:  try \h <SELECTCLAUSE>
 select unique1, unique2, generate_series(1,10)
   from tenk1 order by unique2 limit 7;
  unique1 | unique2 | generate_series 
 ---------+---------+-----------------
-    8800 |       0 |               1
     8800 |       0 |               2
     8800 |       0 |               3
     8800 |       0 |               4
     8800 |       0 |               5
     8800 |       0 |               6
     8800 |       0 |               7
+    8800 |       0 |               1
 (7 rows)
 
 explain (verbose, costs off)
 select unique1, unique2, generate_series(1,10)
   from tenk1 order by tenthous limit 7;
-                             QUERY PLAN                             
---------------------------------------------------------------------
- Limit
-   Output: unique1, unique2, (generate_series(1, 10)), tenthous
-   ->  ProjectSet
-         Output: unique1, unique2, generate_series(1, 10), tenthous
-         ->  Sort
-               Output: unique1, unique2, tenthous
-               Sort Key: tenk1.tenthous
-               ->  Seq Scan on public.tenk1
-                     Output: unique1, unique2, tenthous
-(9 rows)
-
+ERROR:  at or near "off": syntax error
+DETAIL:  source SQL:
+explain (verbose, costs off)
+                        ^
+HINT:  try \h <SELECTCLAUSE>
 select unique1, unique2, generate_series(1,10)
   from tenk1 order by tenthous limit 7;
  unique1 | unique2 | generate_series 
 ---------+---------+-----------------
+       0 |    9998 |               3
+       0 |    9998 |               6
        0 |    9998 |               1
        0 |    9998 |               2
-       0 |    9998 |               3
        0 |    9998 |               4
        0 |    9998 |               5
-       0 |    9998 |               6
        0 |    9998 |               7
 (7 rows)
 
 -- use of random() is to keep planner from folding the expressions together
 explain (verbose, costs off)
 select generate_series(0,2) as s1, generate_series((random()*.1)::int,2) as s2;
-                                              QUERY PLAN                                              
-------------------------------------------------------------------------------------------------------
- ProjectSet
-   Output: generate_series(0, 2), generate_series(((random() * '0.1'::double precision))::integer, 2)
-   ->  Result
-(3 rows)
-
+ERROR:  at or near "off": syntax error
+DETAIL:  source SQL:
+explain (verbose, costs off)
+                        ^
+HINT:  try \h <SELECTCLAUSE>
 select generate_series(0,2) as s1, generate_series((random()*.1)::int,2) as s2;
  s1 | s2 
 ----+----
@@ -512,16 +368,11 @@
 explain (verbose, costs off)
 select generate_series(0,2) as s1, generate_series((random()*.1)::int,2) as s2
 order by s2 desc;
-                                                 QUERY PLAN                                                 
-------------------------------------------------------------------------------------------------------------
- Sort
-   Output: (generate_series(0, 2)), (generate_series(((random() * '0.1'::double precision))::integer, 2))
-   Sort Key: (generate_series(((random() * '0.1'::double precision))::integer, 2)) DESC
-   ->  ProjectSet
-         Output: generate_series(0, 2), generate_series(((random() * '0.1'::double precision))::integer, 2)
-         ->  Result
-(6 rows)
-
+ERROR:  at or near "off": syntax error
+DETAIL:  source SQL:
+explain (verbose, costs off)
+                        ^
+HINT:  try \h <SELECTCLAUSE>
 select generate_series(0,2) as s1, generate_series((random()*.1)::int,2) as s2
 order by s2 desc;
  s1 | s2 
@@ -535,26 +386,14 @@
 explain (verbose, costs off)
 select sum(tenthous) as s1, sum(tenthous) + random()*0 as s2
   from tenk1 group by thousand order by thousand limit 3;
-                                                    QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
- Limit
-   Output: (sum(tenthous)), (((sum(tenthous))::double precision + (random() * '0'::double precision))), thousand
-   ->  GroupAggregate
-         Output: sum(tenthous), ((sum(tenthous))::double precision + (random() * '0'::double precision)), thousand
-         Group Key: tenk1.thousand
-         ->  Index Only Scan using tenk1_thous_tenthous on public.tenk1
-               Output: thousand, tenthous
-(7 rows)
-
+ERROR:  at or near "off": syntax error
+DETAIL:  source SQL:
+explain (verbose, costs off)
+                        ^
+HINT:  try \h <SELECTCLAUSE>
 select sum(tenthous) as s1, sum(tenthous) + random()*0 as s2
   from tenk1 group by thousand order by thousand limit 3;
-  s1   |  s2   
--------+-------
- 45000 | 45000
- 45010 | 45010
- 45020 | 45020
-(3 rows)
-
+ERROR:  unsupported binary operator: <decimal> + <float>
 --
 -- FETCH FIRST
 -- Check the WITH TIES clause
@@ -562,54 +401,30 @@
 SELECT  thousand
 		FROM onek WHERE thousand < 5
 		ORDER BY thousand FETCH FIRST 2 ROW WITH TIES;
- thousand 
-----------
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-(10 rows)
-
+ERROR:  at or near "with": syntax error
+DETAIL:  source SQL:
+SELECT  thousand
+		FROM onek WHERE thousand < 5
+		ORDER BY thousand FETCH FIRST 2 ROW WITH TIES
+                                      ^
 SELECT  thousand
 		FROM onek WHERE thousand < 5
 		ORDER BY thousand FETCH FIRST ROWS WITH TIES;
- thousand 
-----------
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-(10 rows)
-
+ERROR:  at or near "with": syntax error
+DETAIL:  source SQL:
+SELECT  thousand
+		FROM onek WHERE thousand < 5
+		ORDER BY thousand FETCH FIRST ROWS WITH TIES
+                                     ^
 SELECT  thousand
 		FROM onek WHERE thousand < 5
 		ORDER BY thousand FETCH FIRST 1 ROW WITH TIES;
- thousand 
-----------
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-(10 rows)
-
+ERROR:  at or near "with": syntax error
+DETAIL:  source SQL:
+SELECT  thousand
+		FROM onek WHERE thousand < 5
+		ORDER BY thousand FETCH FIRST 1 ROW WITH TIES
+                                      ^
 SELECT  thousand
 		FROM onek WHERE thousand < 5
 		ORDER BY thousand FETCH FIRST 2 ROW ONLY;
@@ -623,72 +438,89 @@
 SELECT  thousand
 		FROM onek WHERE thousand < 5
 		ORDER BY thousand FETCH FIRST 1 ROW WITH TIES FOR UPDATE SKIP LOCKED;
-ERROR:  SKIP LOCKED and WITH TIES options cannot be used together
+ERROR:  at or near "with": syntax error
+DETAIL:  source SQL:
+SELECT  thousand
+		FROM onek WHERE thousand < 5
+		ORDER BY thousand FETCH FIRST 1 ROW WITH TIES FOR UPDATE SKIP LOCKED
+                                      ^
 -- should fail
 SELECT ''::text AS two, unique1, unique2, stringu1
 		FROM onek WHERE unique1 > 50
 		FETCH FIRST 2 ROW WITH TIES;
-ERROR:  WITH TIES cannot be specified without ORDER BY clause
+ERROR:  at or near "with": syntax error
+DETAIL:  source SQL:
+SELECT ''::text AS two, unique1, unique2, stringu1
+		FROM onek WHERE unique1 > 50
+		FETCH FIRST 2 ROW WITH TIES
+                    ^
 -- test ruleutils
 CREATE VIEW limit_thousand_v_1 AS SELECT thousand FROM onek WHERE thousand < 995
 		ORDER BY thousand FETCH FIRST 5 ROWS WITH TIES OFFSET 10;
+ERROR:  at or near "with": syntax error
+DETAIL:  source SQL:
+CREATE VIEW limit_thousand_v_1 AS SELECT thousand FROM onek WHERE thousand < 995
+		ORDER BY thousand FETCH FIRST 5 ROWS WITH TIES OFFSET 10
+                                       ^
+HINT:  try \h CREATE VIEW
 \d+ limit_thousand_v_1
-                      View "public.limit_thousand_v_1"
-  Column  |  Type   | Collation | Nullable | Default | Storage | Description 
-----------+---------+-----------+----------+---------+---------+-------------
- thousand | integer |           |          |         | plain   | 
-View definition:
- SELECT thousand
-   FROM onek
-  WHERE thousand < 995
-  ORDER BY thousand
- OFFSET 10
- FETCH FIRST 5 ROWS WITH TIES;
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(limit_thousand_v_1)$' COLLATE pg_catalog.default
+                                                                                  ^
 CREATE VIEW limit_thousand_v_2 AS SELECT thousand FROM onek WHERE thousand < 995
 		ORDER BY thousand OFFSET 10 FETCH FIRST 5 ROWS ONLY;
 \d+ limit_thousand_v_2
-                      View "public.limit_thousand_v_2"
-  Column  |  Type   | Collation | Nullable | Default | Storage | Description 
-----------+---------+-----------+----------+---------+---------+-------------
- thousand | integer |           |          |         | plain   | 
-View definition:
- SELECT thousand
-   FROM onek
-  WHERE thousand < 995
-  ORDER BY thousand
- OFFSET 10
- LIMIT 5;
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(limit_thousand_v_2)$' COLLATE pg_catalog.default
+                                                                                  ^
 CREATE VIEW limit_thousand_v_3 AS SELECT thousand FROM onek WHERE thousand < 995
 		ORDER BY thousand FETCH FIRST NULL ROWS WITH TIES;		-- fails
-ERROR:  row count cannot be null in FETCH FIRST ... WITH TIES clause
+ERROR:  at or near "with": syntax error
+DETAIL:  source SQL:
+CREATE VIEW limit_thousand_v_3 AS SELECT thousand FROM onek WHERE thousand < 995
+		ORDER BY thousand FETCH FIRST NULL ROWS WITH TIES
+                                          ^
+HINT:  try \h CREATE VIEW
 CREATE VIEW limit_thousand_v_3 AS SELECT thousand FROM onek WHERE thousand < 995
 		ORDER BY thousand FETCH FIRST (NULL+1) ROWS WITH TIES;
+ERROR:  at or near "with": syntax error
+DETAIL:  source SQL:
+CREATE VIEW limit_thousand_v_3 AS SELECT thousand FROM onek WHERE thousand < 995
+		ORDER BY thousand FETCH FIRST (NULL+1) ROWS WITH TIES
+                                              ^
+HINT:  try \h CREATE VIEW
 \d+ limit_thousand_v_3
-                      View "public.limit_thousand_v_3"
-  Column  |  Type   | Collation | Nullable | Default | Storage | Description 
-----------+---------+-----------+----------+---------+---------+-------------
- thousand | integer |           |          |         | plain   | 
-View definition:
- SELECT thousand
-   FROM onek
-  WHERE thousand < 995
-  ORDER BY thousand
- FETCH FIRST (NULL::integer + 1) ROWS WITH TIES;
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(limit_thousand_v_3)$' COLLATE pg_catalog.default
+                                                                                  ^
 CREATE VIEW limit_thousand_v_4 AS SELECT thousand FROM onek WHERE thousand < 995
 		ORDER BY thousand FETCH FIRST NULL ROWS ONLY;
 \d+ limit_thousand_v_4
-                      View "public.limit_thousand_v_4"
-  Column  |  Type   | Collation | Nullable | Default | Storage | Description 
-----------+---------+-----------+----------+---------+---------+-------------
- thousand | integer |           |          |         | plain   | 
-View definition:
- SELECT thousand
-   FROM onek
-  WHERE thousand < 995
-  ORDER BY thousand
- LIMIT ALL;
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(limit_thousand_v_4)$' COLLATE pg_catalog.default
+                                                                                  ^
 -- leave these views
