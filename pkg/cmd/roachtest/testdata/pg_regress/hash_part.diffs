diff -U3 --label=/mnt/data1/postgres/src/test/regress/expected/hash_part.out --label=/mnt/data1/postgres/src/test/regress/results/hash_part.out /mnt/data1/postgres/src/test/regress/expected/hash_part.out /mnt/data1/postgres/src/test/regress/results/hash_part.out
--- /mnt/data1/postgres/src/test/regress/expected/hash_part.out
+++ /mnt/data1/postgres/src/test/regress/results/hash_part.out
@@ -6,109 +6,192 @@
 -- part_part_test_int4_ops and part_test_text_ops in insert.sql.
 CREATE TABLE mchash (a int, b text, c jsonb)
   PARTITION BY HASH (a part_test_int4_ops, b part_test_text_ops);
+ERROR:  at or near "hash": syntax error
+DETAIL:  source SQL:
+CREATE TABLE mchash (a int, b text, c jsonb)
+  PARTITION BY HASH (a part_test_int4_ops, b part_test_text_ops)
+               ^
+HINT:  try \h CREATE TABLE
 CREATE TABLE mchash1
   PARTITION OF mchash FOR VALUES WITH (MODULUS 4, REMAINDER 0);
+ERROR:  at or near "partition": syntax error
+DETAIL:  source SQL:
+CREATE TABLE mchash1
+  PARTITION OF mchash FOR VALUES WITH (MODULUS 4, REMAINDER 0)
+  ^
+HINT:  try \h CREATE TABLE
 -- invalid OID, no such table
 SELECT satisfies_hash_partition(0, 4, 0, NULL);
-ERROR:  could not open relation with OID 0
+ERROR:  unknown function: satisfies_hash_partition()
 -- not partitioned
 SELECT satisfies_hash_partition('tenk1'::regclass, 4, 0, NULL);
-ERROR:  "tenk1" is not a hash partitioned table
+ERROR:  unknown function: satisfies_hash_partition()
 -- partition rather than the parent
 SELECT satisfies_hash_partition('mchash1'::regclass, 4, 0, NULL);
-ERROR:  "mchash1" is not a hash partitioned table
+ERROR:  unknown function: satisfies_hash_partition()
 -- invalid modulus
 SELECT satisfies_hash_partition('mchash'::regclass, 0, 0, NULL);
-ERROR:  modulus for hash partition must be an integer value greater than zero
+ERROR:  unknown function: satisfies_hash_partition()
 -- remainder too small
 SELECT satisfies_hash_partition('mchash'::regclass, 1, -1, NULL);
-ERROR:  remainder for hash partition must be an integer value greater than or equal to zero
+ERROR:  unknown function: satisfies_hash_partition()
 -- remainder too large
 SELECT satisfies_hash_partition('mchash'::regclass, 1, 1, NULL);
-ERROR:  remainder for hash partition must be less than modulus
+ERROR:  unknown function: satisfies_hash_partition()
 -- modulus is null
 SELECT satisfies_hash_partition('mchash'::regclass, NULL, 0, NULL);
- satisfies_hash_partition 
---------------------------
- f
-(1 row)
-
+ERROR:  unknown function: satisfies_hash_partition()
 -- remainder is null
 SELECT satisfies_hash_partition('mchash'::regclass, 4, NULL, NULL);
- satisfies_hash_partition 
---------------------------
- f
-(1 row)
-
+ERROR:  unknown function: satisfies_hash_partition()
 -- too many arguments
 SELECT satisfies_hash_partition('mchash'::regclass, 4, 0, NULL::int, NULL::text, NULL::json);
-ERROR:  number of partitioning columns (2) does not match number of partition keys provided (3)
+ERROR:  unknown function: satisfies_hash_partition()
 -- too few arguments
 SELECT satisfies_hash_partition('mchash'::regclass, 3, 1, NULL::int);
-ERROR:  number of partitioning columns (2) does not match number of partition keys provided (1)
+ERROR:  unknown function: satisfies_hash_partition()
 -- wrong argument type
 SELECT satisfies_hash_partition('mchash'::regclass, 2, 1, NULL::int, NULL::int);
-ERROR:  column 2 of the partition key has type text, but supplied value is of type integer
+ERROR:  unknown function: satisfies_hash_partition()
 -- ok, should be false
 SELECT satisfies_hash_partition('mchash'::regclass, 4, 0, 0, ''::text);
- satisfies_hash_partition 
---------------------------
- f
-(1 row)
-
+ERROR:  unknown function: satisfies_hash_partition()
 -- ok, should be true
 SELECT satisfies_hash_partition('mchash'::regclass, 4, 0, 2, ''::text);
- satisfies_hash_partition 
---------------------------
- t
-(1 row)
-
+ERROR:  unknown function: satisfies_hash_partition()
 -- argument via variadic syntax, should fail because not all partitioning
 -- columns are of the correct type
 SELECT satisfies_hash_partition('mchash'::regclass, 2, 1,
 								variadic array[1,2]::int[]);
-ERROR:  column 2 of the partition key has type "text", but supplied value is of type "integer"
+ERROR:  at or near ")": syntax error: unimplemented: this syntax
+DETAIL:  source SQL:
+SELECT satisfies_hash_partition('mchash'::regclass, 2, 1,
+								variadic array[1,2]::int[])
+                                  ^
+HINT:  You have attempted to use a feature that is not yet implemented.
+
+Please check the public issue tracker to check whether this problem is
+already tracked. If you cannot find it there, please report the error
+with details by creating a new issue.
+
+If you would rather not post publicly, please contact us directly
+using the support form.
+
+We appreciate your feedback.
+
 -- multiple partitioning columns of the same type
 CREATE TABLE mcinthash (a int, b int, c jsonb)
   PARTITION BY HASH (a part_test_int4_ops, b part_test_int4_ops);
+ERROR:  at or near "hash": syntax error
+DETAIL:  source SQL:
+CREATE TABLE mcinthash (a int, b int, c jsonb)
+  PARTITION BY HASH (a part_test_int4_ops, b part_test_int4_ops)
+               ^
+HINT:  try \h CREATE TABLE
 -- now variadic should work, should be false
 SELECT satisfies_hash_partition('mcinthash'::regclass, 4, 0,
 								variadic array[0, 0]);
- satisfies_hash_partition 
---------------------------
- f
-(1 row)
+ERROR:  at or near ")": syntax error: unimplemented: this syntax
+DETAIL:  source SQL:
+SELECT satisfies_hash_partition('mcinthash'::regclass, 4, 0,
+								variadic array[0, 0])
+                            ^
+HINT:  You have attempted to use a feature that is not yet implemented.
+
+Please check the public issue tracker to check whether this problem is
+already tracked. If you cannot find it there, please report the error
+with details by creating a new issue.
+
+If you would rather not post publicly, please contact us directly
+using the support form.
+
+We appreciate your feedback.
 
 -- should be true
 SELECT satisfies_hash_partition('mcinthash'::regclass, 4, 0,
 								variadic array[0, 1]);
- satisfies_hash_partition 
---------------------------
- t
-(1 row)
+ERROR:  at or near ")": syntax error: unimplemented: this syntax
+DETAIL:  source SQL:
+SELECT satisfies_hash_partition('mcinthash'::regclass, 4, 0,
+								variadic array[0, 1])
+                            ^
+HINT:  You have attempted to use a feature that is not yet implemented.
+
+Please check the public issue tracker to check whether this problem is
+already tracked. If you cannot find it there, please report the error
+with details by creating a new issue.
+
+If you would rather not post publicly, please contact us directly
+using the support form.
+
+We appreciate your feedback.
 
 -- wrong length
 SELECT satisfies_hash_partition('mcinthash'::regclass, 4, 0,
 								variadic array[]::int[]);
-ERROR:  number of partitioning columns (2) does not match number of partition keys provided (0)
+ERROR:  at or near ")": syntax error: unimplemented: this syntax
+DETAIL:  source SQL:
+SELECT satisfies_hash_partition('mcinthash'::regclass, 4, 0,
+								variadic array[]::int[])
+                               ^
+HINT:  You have attempted to use a feature that is not yet implemented.
+
+Please check the public issue tracker to check whether this problem is
+already tracked. If you cannot find it there, please report the error
+with details by creating a new issue.
+
+If you would rather not post publicly, please contact us directly
+using the support form.
+
+We appreciate your feedback.
+
 -- wrong type
 SELECT satisfies_hash_partition('mcinthash'::regclass, 4, 0,
 								variadic array[now(), now()]);
-ERROR:  column 1 of the partition key has type "integer", but supplied value is of type "timestamp with time zone"
+ERROR:  at or near ")": syntax error: unimplemented: this syntax
+DETAIL:  source SQL:
+SELECT satisfies_hash_partition('mcinthash'::regclass, 4, 0,
+								variadic array[now(), now()])
+                                    ^
+HINT:  You have attempted to use a feature that is not yet implemented.
+
+Please check the public issue tracker to check whether this problem is
+already tracked. If you cannot find it there, please report the error
+with details by creating a new issue.
+
+If you would rather not post publicly, please contact us directly
+using the support form.
+
+We appreciate your feedback.
+
 -- check satisfies_hash_partition passes correct collation
 create table text_hashp (a text) partition by hash (a);
+ERROR:  at or near "hash": syntax error
+DETAIL:  source SQL:
+create table text_hashp (a text) partition by hash (a)
+                                              ^
+HINT:  try \h CREATE TABLE
 create table text_hashp0 partition of text_hashp for values with (modulus 2, remainder 0);
+ERROR:  at or near "partition": syntax error
+DETAIL:  source SQL:
+create table text_hashp0 partition of text_hashp for values with (modulus 2, remainder 0)
+                         ^
+HINT:  try \h CREATE TABLE
 create table text_hashp1 partition of text_hashp for values with (modulus 2, remainder 1);
+ERROR:  at or near "partition": syntax error
+DETAIL:  source SQL:
+create table text_hashp1 partition of text_hashp for values with (modulus 2, remainder 1)
+                         ^
+HINT:  try \h CREATE TABLE
 -- The result here should always be true, because 'xxx' must belong to
 -- one of the two defined partitions
 select satisfies_hash_partition('text_hashp'::regclass, 2, 0, 'xxx'::text) OR
 	   satisfies_hash_partition('text_hashp'::regclass, 2, 1, 'xxx'::text) AS satisfies;
- satisfies 
------------
- t
-(1 row)
-
+ERROR:  unknown function: satisfies_hash_partition()
 -- cleanup
 DROP TABLE mchash;
+ERROR:  relation "mchash" does not exist
 DROP TABLE mcinthash;
+ERROR:  relation "mcinthash" does not exist
 DROP TABLE text_hashp;
+ERROR:  relation "text_hashp" does not exist
