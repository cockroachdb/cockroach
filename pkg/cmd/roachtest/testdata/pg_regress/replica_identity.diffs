diff -U3 --label=/mnt/data1/postgres/src/test/regress/expected/replica_identity.out --label=/mnt/data1/postgres/src/test/regress/results/replica_identity.out /mnt/data1/postgres/src/test/regress/expected/replica_identity.out /mnt/data1/postgres/src/test/regress/results/replica_identity.out
--- /mnt/data1/postgres/src/test/regress/expected/replica_identity.out
+++ /mnt/data1/postgres/src/test/regress/results/replica_identity.out
@@ -6,31 +6,59 @@
        CONSTRAINT test_replica_identity_unique_defer UNIQUE (keya, keyb) DEFERRABLE,
        CONSTRAINT test_replica_identity_unique_nondefer UNIQUE (keya, keyb)
 ) ;
+ERROR:  at or near ",": syntax error: unimplemented: this syntax
+DETAIL:  source SQL:
+CREATE TABLE test_replica_identity (
+       id serial primary key,
+       keya text not null,
+       keyb text not null,
+       nonkey text,
+       CONSTRAINT test_replica_identity_unique_defer UNIQUE (keya, keyb) DEFERRABLE,
+                                                                                   ^
+HINT:  You have attempted to use a feature that is not yet implemented.
+See: https://go.crdb.dev/issue-v/31632/_version_
 CREATE TABLE test_replica_identity_othertable (id serial primary key);
+NOTICE:  using sequential values in a primary key does not perform as well as using random UUIDs. See https://www.cockroachlabs.com/docs/_version_/serial.html
 CREATE INDEX test_replica_identity_keyab ON test_replica_identity (keya, keyb);
+ERROR:  relation "test_replica_identity" does not exist
 CREATE UNIQUE INDEX test_replica_identity_keyab_key ON test_replica_identity (keya, keyb);
+ERROR:  relation "test_replica_identity" does not exist
 CREATE UNIQUE INDEX test_replica_identity_nonkey ON test_replica_identity (keya, nonkey);
+ERROR:  relation "test_replica_identity" does not exist
 CREATE INDEX test_replica_identity_hash ON test_replica_identity USING hash (nonkey);
+ERROR:  at or near "hash": syntax error: unimplemented: this syntax
+DETAIL:  source SQL:
+CREATE INDEX test_replica_identity_hash ON test_replica_identity USING hash (nonkey)
+                                                                       ^
+HINT:  You have attempted to use a feature that is not yet implemented.
+
+Please check the public issue tracker to check whether this problem is
+already tracked. If you cannot find it there, please report the error
+with details by creating a new issue.
+
+If you would rather not post publicly, please contact us directly
+using the support form.
+
+We appreciate your feedback.
+
 CREATE UNIQUE INDEX test_replica_identity_expr ON test_replica_identity (keya, keyb, (3));
+ERROR:  relation "test_replica_identity" does not exist
 CREATE UNIQUE INDEX test_replica_identity_partial ON test_replica_identity (keya, keyb) WHERE keyb != '3';
+ERROR:  relation "test_replica_identity" does not exist
 -- default is 'd'/DEFAULT for user created tables
 SELECT relreplident FROM pg_class WHERE oid = 'test_replica_identity'::regclass;
- relreplident 
---------------
- d
-(1 row)
-
+ERROR:  relation "test_replica_identity" does not exist
 -- but 'none' for system tables
 SELECT relreplident FROM pg_class WHERE oid = 'pg_class'::regclass;
  relreplident 
 --------------
- n
+ d
 (1 row)
 
 SELECT relreplident FROM pg_class WHERE oid = 'pg_constraint'::regclass;
  relreplident 
 --------------
- n
+ d
 (1 row)
 
 ----
@@ -38,233 +66,279 @@
 ----
 -- fail, not unique
 ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_keyab;
-ERROR:  cannot use non-unique index "test_replica_identity_keyab" as replica identity
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_keyab
+                                  ^
+HINT:  try \h ALTER TABLE
 -- fail, not a candidate key, nullable column
 ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_nonkey;
-ERROR:  index "test_replica_identity_nonkey" cannot be used as replica identity because column "nonkey" is nullable
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_nonkey
+                                  ^
+HINT:  try \h ALTER TABLE
 -- fail, hash indexes cannot do uniqueness
 ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_hash;
-ERROR:  cannot use non-unique index "test_replica_identity_hash" as replica identity
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_hash
+                                  ^
+HINT:  try \h ALTER TABLE
 -- fail, expression index
 ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_expr;
-ERROR:  cannot use expression index "test_replica_identity_expr" as replica identity
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_expr
+                                  ^
+HINT:  try \h ALTER TABLE
 -- fail, partial index
 ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_partial;
-ERROR:  cannot use partial index "test_replica_identity_partial" as replica identity
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_partial
+                                  ^
+HINT:  try \h ALTER TABLE
 -- fail, not our index
 ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_othertable_pkey;
-ERROR:  "test_replica_identity_othertable_pkey" is not an index for table "test_replica_identity"
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_othertable_pkey
+                                  ^
+HINT:  try \h ALTER TABLE
 -- fail, deferrable
 ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_unique_defer;
-ERROR:  cannot use non-immediate index "test_replica_identity_unique_defer" as replica identity
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_unique_defer
+                                  ^
+HINT:  try \h ALTER TABLE
 SELECT relreplident FROM pg_class WHERE oid = 'test_replica_identity'::regclass;
- relreplident 
---------------
- d
-(1 row)
-
+ERROR:  relation "test_replica_identity" does not exist
 ----
 -- Make sure index cases succeed
 ----
 -- succeed, primary key
 ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_pkey;
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_pkey
+                                  ^
+HINT:  try \h ALTER TABLE
 SELECT relreplident FROM pg_class WHERE oid = 'test_replica_identity'::regclass;
- relreplident 
---------------
- i
-(1 row)
-
+ERROR:  relation "test_replica_identity" does not exist
 \d test_replica_identity
-                            Table "public.test_replica_identity"
- Column |  Type   | Collation | Nullable |                      Default                      
---------+---------+-----------+----------+---------------------------------------------------
- id     | integer |           | not null | nextval('test_replica_identity_id_seq'::regclass)
- keya   | text    |           | not null | 
- keyb   | text    |           | not null | 
- nonkey | text    |           |          | 
-Indexes:
-    "test_replica_identity_pkey" PRIMARY KEY, btree (id) REPLICA IDENTITY
-    "test_replica_identity_expr" UNIQUE, btree (keya, keyb, (3))
-    "test_replica_identity_hash" hash (nonkey)
-    "test_replica_identity_keyab" btree (keya, keyb)
-    "test_replica_identity_keyab_key" UNIQUE, btree (keya, keyb)
-    "test_replica_identity_nonkey" UNIQUE, btree (keya, nonkey)
-    "test_replica_identity_partial" UNIQUE, btree (keya, keyb) WHERE keyb <> '3'::text
-    "test_replica_identity_unique_defer" UNIQUE CONSTRAINT, btree (keya, keyb) DEFERRABLE
-    "test_replica_identity_unique_nondefer" UNIQUE CONSTRAINT, btree (keya, keyb)
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(test_replica_identity)$' COLLATE pg_catalog.default
+                                                                                     ^
 -- succeed, nondeferrable unique constraint over nonnullable cols
 ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_unique_nondefer;
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_unique_nondefer
+                                  ^
+HINT:  try \h ALTER TABLE
 -- succeed unique index over nonnullable cols
 ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_keyab_key;
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_keyab_key
+                                  ^
+HINT:  try \h ALTER TABLE
 ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_keyab_key;
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_keyab_key
+                                  ^
+HINT:  try \h ALTER TABLE
 SELECT relreplident FROM pg_class WHERE oid = 'test_replica_identity'::regclass;
- relreplident 
---------------
- i
-(1 row)
-
+ERROR:  relation "test_replica_identity" does not exist
 \d test_replica_identity
-                            Table "public.test_replica_identity"
- Column |  Type   | Collation | Nullable |                      Default                      
---------+---------+-----------+----------+---------------------------------------------------
- id     | integer |           | not null | nextval('test_replica_identity_id_seq'::regclass)
- keya   | text    |           | not null | 
- keyb   | text    |           | not null | 
- nonkey | text    |           |          | 
-Indexes:
-    "test_replica_identity_pkey" PRIMARY KEY, btree (id)
-    "test_replica_identity_expr" UNIQUE, btree (keya, keyb, (3))
-    "test_replica_identity_hash" hash (nonkey)
-    "test_replica_identity_keyab" btree (keya, keyb)
-    "test_replica_identity_keyab_key" UNIQUE, btree (keya, keyb) REPLICA IDENTITY
-    "test_replica_identity_nonkey" UNIQUE, btree (keya, nonkey)
-    "test_replica_identity_partial" UNIQUE, btree (keya, keyb) WHERE keyb <> '3'::text
-    "test_replica_identity_unique_defer" UNIQUE CONSTRAINT, btree (keya, keyb) DEFERRABLE
-    "test_replica_identity_unique_nondefer" UNIQUE CONSTRAINT, btree (keya, keyb)
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(test_replica_identity)$' COLLATE pg_catalog.default
+                                                                                     ^
 SELECT count(*) FROM pg_index WHERE indrelid = 'test_replica_identity'::regclass AND indisreplident;
- count 
--------
-     1
-(1 row)
-
+ERROR:  relation "test_replica_identity" does not exist
 ----
 -- Make sure non index cases work
 ----
 ALTER TABLE test_replica_identity REPLICA IDENTITY DEFAULT;
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY DEFAULT
+                                  ^
+HINT:  try \h ALTER TABLE
 SELECT relreplident FROM pg_class WHERE oid = 'test_replica_identity'::regclass;
- relreplident 
---------------
- d
-(1 row)
-
+ERROR:  relation "test_replica_identity" does not exist
 SELECT count(*) FROM pg_index WHERE indrelid = 'test_replica_identity'::regclass AND indisreplident;
- count 
--------
-     0
-(1 row)
-
+ERROR:  relation "test_replica_identity" does not exist
 ALTER TABLE test_replica_identity REPLICA IDENTITY FULL;
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY FULL
+                                  ^
+HINT:  try \h ALTER TABLE
 SELECT relreplident FROM pg_class WHERE oid = 'test_replica_identity'::regclass;
- relreplident 
---------------
- f
-(1 row)
-
+ERROR:  relation "test_replica_identity" does not exist
 \d+ test_replica_identity
-                                                Table "public.test_replica_identity"
- Column |  Type   | Collation | Nullable |                      Default                      | Storage  | Stats target | Description 
---------+---------+-----------+----------+---------------------------------------------------+----------+--------------+-------------
- id     | integer |           | not null | nextval('test_replica_identity_id_seq'::regclass) | plain    |              | 
- keya   | text    |           | not null |                                                   | extended |              | 
- keyb   | text    |           | not null |                                                   | extended |              | 
- nonkey | text    |           |          |                                                   | extended |              | 
-Indexes:
-    "test_replica_identity_pkey" PRIMARY KEY, btree (id)
-    "test_replica_identity_expr" UNIQUE, btree (keya, keyb, (3))
-    "test_replica_identity_hash" hash (nonkey)
-    "test_replica_identity_keyab" btree (keya, keyb)
-    "test_replica_identity_keyab_key" UNIQUE, btree (keya, keyb)
-    "test_replica_identity_nonkey" UNIQUE, btree (keya, nonkey)
-    "test_replica_identity_partial" UNIQUE, btree (keya, keyb) WHERE keyb <> '3'::text
-    "test_replica_identity_unique_defer" UNIQUE CONSTRAINT, btree (keya, keyb) DEFERRABLE
-    "test_replica_identity_unique_nondefer" UNIQUE CONSTRAINT, btree (keya, keyb)
-Replica Identity: FULL
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(test_replica_identity)$' COLLATE pg_catalog.default
+                                                                                     ^
 ALTER TABLE test_replica_identity REPLICA IDENTITY NOTHING;
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity REPLICA IDENTITY NOTHING
+                                  ^
+HINT:  try \h ALTER TABLE
 SELECT relreplident FROM pg_class WHERE oid = 'test_replica_identity'::regclass;
- relreplident 
---------------
- n
-(1 row)
-
+ERROR:  relation "test_replica_identity" does not exist
 ---
 -- Test that ALTER TABLE rewrite preserves nondefault replica identity
 ---
 -- constraint variant
 CREATE TABLE test_replica_identity2 (id int UNIQUE NOT NULL);
 ALTER TABLE test_replica_identity2 REPLICA IDENTITY USING INDEX test_replica_identity2_id_key;
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity2 REPLICA IDENTITY USING INDEX test_replica_identity2_id_key
+                                   ^
+HINT:  try \h ALTER TABLE
 \d test_replica_identity2
-       Table "public.test_replica_identity2"
- Column |  Type   | Collation | Nullable | Default 
---------+---------+-----------+----------+---------
- id     | integer |           | not null | 
-Indexes:
-    "test_replica_identity2_id_key" UNIQUE CONSTRAINT, btree (id) REPLICA IDENTITY
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(test_replica_identity2)$' COLLATE pg_catalog.default
+                                                                                      ^
 ALTER TABLE test_replica_identity2 ALTER COLUMN id TYPE bigint;
 \d test_replica_identity2
-      Table "public.test_replica_identity2"
- Column |  Type  | Collation | Nullable | Default 
---------+--------+-----------+----------+---------
- id     | bigint |           | not null | 
-Indexes:
-    "test_replica_identity2_id_key" UNIQUE CONSTRAINT, btree (id) REPLICA IDENTITY
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(test_replica_identity2)$' COLLATE pg_catalog.default
+                                                                                      ^
 -- straight index variant
 CREATE TABLE test_replica_identity3 (id int NOT NULL);
 CREATE UNIQUE INDEX test_replica_identity3_id_key ON test_replica_identity3 (id);
 ALTER TABLE test_replica_identity3 REPLICA IDENTITY USING INDEX test_replica_identity3_id_key;
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE test_replica_identity3 REPLICA IDENTITY USING INDEX test_replica_identity3_id_key
+                                   ^
+HINT:  try \h ALTER TABLE
 \d test_replica_identity3
-       Table "public.test_replica_identity3"
- Column |  Type   | Collation | Nullable | Default 
---------+---------+-----------+----------+---------
- id     | integer |           | not null | 
-Indexes:
-    "test_replica_identity3_id_key" UNIQUE, btree (id) REPLICA IDENTITY
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(test_replica_identity3)$' COLLATE pg_catalog.default
+                                                                                      ^
 ALTER TABLE test_replica_identity3 ALTER COLUMN id TYPE bigint;
 \d test_replica_identity3
-      Table "public.test_replica_identity3"
- Column |  Type  | Collation | Nullable | Default 
---------+--------+-----------+----------+---------
- id     | bigint |           | not null | 
-Indexes:
-    "test_replica_identity3_id_key" UNIQUE, btree (id) REPLICA IDENTITY
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(test_replica_identity3)$' COLLATE pg_catalog.default
+                                                                                      ^
 -- ALTER TABLE DROP NOT NULL is not allowed for columns part of an index
 -- used as replica identity.
 ALTER TABLE test_replica_identity3 ALTER COLUMN id DROP NOT NULL;
-ERROR:  column "id" is in index used as replica identity
 --
 -- Test that replica identity can be set on an index that's not yet valid.
 -- (This matches the way pg_dump will try to dump a partitioned table.)
 --
 CREATE TABLE test_replica_identity4(id integer NOT NULL) PARTITION BY LIST (id);
+ERROR:  at or near "EOF": syntax error
+DETAIL:  source SQL:
+CREATE TABLE test_replica_identity4(id integer NOT NULL) PARTITION BY LIST (id)
+                                                                               ^
+HINT:  try \h CREATE TABLE
 CREATE TABLE test_replica_identity4_1(id integer NOT NULL);
 ALTER TABLE ONLY test_replica_identity4
   ATTACH PARTITION test_replica_identity4_1 FOR VALUES IN (1);
+ERROR:  at or near "attach": syntax error
+DETAIL:  source SQL:
+ALTER TABLE ONLY test_replica_identity4
+  ATTACH PARTITION test_replica_identity4_1 FOR VALUES IN (1)
+  ^
+HINT:  try \h ALTER TABLE
 ALTER TABLE ONLY test_replica_identity4
   ADD CONSTRAINT test_replica_identity4_pkey PRIMARY KEY (id);
+ERROR:  relation "test_replica_identity4" does not exist
 ALTER TABLE ONLY test_replica_identity4
   REPLICA IDENTITY USING INDEX test_replica_identity4_pkey;
+ERROR:  at or near "replica": syntax error
+DETAIL:  source SQL:
+ALTER TABLE ONLY test_replica_identity4
+  REPLICA IDENTITY USING INDEX test_replica_identity4_pkey
+  ^
+HINT:  try \h ALTER TABLE
 ALTER TABLE ONLY test_replica_identity4_1
   ADD CONSTRAINT test_replica_identity4_1_pkey PRIMARY KEY (id);
 \d+ test_replica_identity4
-                    Partitioned table "public.test_replica_identity4"
- Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
---------+---------+-----------+----------+---------+---------+--------------+-------------
- id     | integer |           | not null |         | plain   |              | 
-Partition key: LIST (id)
-Indexes:
-    "test_replica_identity4_pkey" PRIMARY KEY, btree (id) INVALID REPLICA IDENTITY
-Partitions: test_replica_identity4_1 FOR VALUES IN (1)
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(test_replica_identity4)$' COLLATE pg_catalog.default
+                                                                                      ^
 ALTER INDEX test_replica_identity4_pkey
   ATTACH PARTITION test_replica_identity4_1_pkey;
+ERROR:  at or near "attach": syntax error
+DETAIL:  source SQL:
+ALTER INDEX test_replica_identity4_pkey
+  ATTACH PARTITION test_replica_identity4_1_pkey
+  ^
+HINT:  try \h ALTER INDEX
 \d+ test_replica_identity4
-                    Partitioned table "public.test_replica_identity4"
- Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
---------+---------+-----------+----------+---------+---------+--------------+-------------
- id     | integer |           | not null |         | plain   |              | 
-Partition key: LIST (id)
-Indexes:
-    "test_replica_identity4_pkey" PRIMARY KEY, btree (id) REPLICA IDENTITY
-Partitions: test_replica_identity4_1 FOR VALUES IN (1)
-
+ERROR:  at or near ".": syntax error
+DETAIL:  source SQL:
+SELECT c.oid,
+  n.nspname,
+  c.relname
+FROM pg_catalog.pg_class c
+     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
+WHERE c.relname OPERATOR(pg_catalog.~) '^(test_replica_identity4)$' COLLATE pg_catalog.default
+                                                                                      ^
 DROP TABLE test_replica_identity;
+ERROR:  relation "test_replica_identity" does not exist
 DROP TABLE test_replica_identity2;
 DROP TABLE test_replica_identity3;
 DROP TABLE test_replica_identity4;
+ERROR:  relation "test_replica_identity4" does not exist
 DROP TABLE test_replica_identity_othertable;
