# Tests that workload node get's upgraded after a version upgrade
mixed-version-test workload_node=(5)
----
ok

plan
----
Seed:               12345
Upgrades:           v23.1.17 → v23.2.4 → v24.1.1 → v24.2.2 → v24.3.0 (<current>)
Deployment mode:    system-only
Plan:
├── install fixtures for version "v23.1.17" (1)
├── start cluster at version "v23.1.17" (2)
├── wait for all nodes (:1-4) to acknowledge cluster version '23.1' on system tenant (3)
├── stage workload binary on workload node(s) :5 for version(s) v23.1.17, v23.2.4, v24.1.1, v24.2.2, v24.3.0 (<current>) (4)
├── upgrade cluster from "v23.1.17" to "v23.2.4"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (5)
│   ├── upgrade nodes :1-4 from "v23.1.17" to "v23.2.4"
│   │   ├── restart node 4 with binary version v23.2.4 (6)
│   │   ├── restart node 3 with binary version v23.2.4 (7)
│   │   ├── restart node 2 with binary version v23.2.4 (8)
│   │   └── restart node 1 with binary version v23.2.4 (9)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (10)
│   └── wait for all nodes (:1-4) to acknowledge cluster version '23.2' on system tenant (11)
├── upgrade cluster from "v23.2.4" to "v24.1.1"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (12)
│   ├── upgrade nodes :1-4 from "v23.2.4" to "v24.1.1"
│   │   ├── restart node 3 with binary version v24.1.1 (13)
│   │   ├── restart node 2 with binary version v24.1.1 (14)
│   │   ├── restart node 4 with binary version v24.1.1 (15)
│   │   └── restart node 1 with binary version v24.1.1 (16)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (17)
│   └── wait for all nodes (:1-4) to acknowledge cluster version '24.1' on system tenant (18)
├── upgrade cluster from "v24.1.1" to "v24.2.2"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (19)
│   ├── upgrade nodes :1-4 from "v24.1.1" to "v24.2.2"
│   │   ├── restart node 1 with binary version v24.2.2 (20)
│   │   ├── restart node 2 with binary version v24.2.2 (21)
│   │   ├── restart node 4 with binary version v24.2.2 (22)
│   │   └── restart node 3 with binary version v24.2.2 (23)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (24)
│   └── wait for all nodes (:1-4) to acknowledge cluster version '24.2' on system tenant (25)
└── upgrade cluster from "v24.2.2" to "v24.3.0 (<current>)"
   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (26)
   ├── upgrade nodes :1-4 from "v24.2.2" to "v24.3.0 (<current>)"
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (27)
   │   ├── restart node 1 with binary version v24.3.0 (<current>) (28)
   │   ├── restart node 4 with binary version v24.3.0 (<current>) (29)
   │   └── restart node 2 with binary version v24.3.0 (<current>) (30)
   ├── downgrade nodes :1-4 from "v24.3.0 (<current>)" to "v24.2.2"
   │   ├── restart node 1 with binary version v24.2.2 (31)
   │   ├── restart node 3 with binary version v24.2.2 (32)
   │   ├── restart node 2 with binary version v24.2.2 (33)
   │   └── restart node 4 with binary version v24.2.2 (34)
   ├── upgrade nodes :1-4 from "v24.2.2" to "v24.3.0 (<current>)"
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (35)
   │   ├── restart node 2 with binary version v24.3.0 (<current>) (36)
   │   ├── restart node 1 with binary version v24.3.0 (<current>) (37)
   │   └── restart node 4 with binary version v24.3.0 (<current>) (38)
   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (39)
   └── wait for all nodes (:1-4) to acknowledge cluster version <current> on system tenant (40)
