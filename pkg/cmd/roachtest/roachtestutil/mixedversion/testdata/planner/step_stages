# Test that steps have the expected upgrade stage associated to their
# context.

mixed-version-test predecessors=(21.2.11, 22.1.8, 22.2.3, 23.1.4, 23.2.0) num_upgrades=5
----
ok

in-mixed-version name=(mixed-version 1)
----
ok

in-mixed-version name=(mixed-version 2)
----
ok

workload name=bank
----
ok

background-command name=(csv server)
----
ok

after-upgrade-finalized name=(validate upgrade)
----
ok

plan debug=true
----
mixed-version test plan for upgrading from "v21.2.11" to "v22.1.8" to "v22.2.3" to "v23.1.4" to "v23.2.0" to "<current>":
├── install fixtures for version "v21.2.11" (1) [stage=cluster-setup]
├── start cluster at version "v21.2.11" (2) [stage=cluster-setup]
├── wait for nodes :1-4 to reach cluster version '21.2' (3) [stage=cluster-setup]
├── upgrade cluster from "v21.2.11" to "v22.1.8"
│   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (4) [stage=init]
│   ├── upgrade nodes :1-4 from "v21.2.11" to "v22.1.8"
│   │   ├── restart node 2 with binary version v22.1.8 (5) [stage=last-upgrade]
│   │   ├── restart node 4 with binary version v22.1.8 (6) [stage=last-upgrade]
│   │   ├── wait for 5m0s (7) [stage=last-upgrade]
│   │   ├── restart node 1 with binary version v22.1.8 (8) [stage=last-upgrade]
│   │   └── restart node 3 with binary version v22.1.8 (9) [stage=last-upgrade]
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (10) [stage=running-upgrade-migrations,finalizing]
│   └── wait for nodes :1-4 to reach cluster version '22.1' (11) [stage=running-upgrade-migrations,finalizing]
├── upgrade cluster from "v22.1.8" to "v22.2.3"
│   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (12) [stage=init]
│   ├── upgrade nodes :1-4 from "v22.1.8" to "v22.2.3"
│   │   ├── restart node 4 with binary version v22.2.3 (13) [stage=last-upgrade]
│   │   ├── restart node 1 with binary version v22.2.3 (14) [stage=last-upgrade]
│   │   ├── restart node 2 with binary version v22.2.3 (15) [stage=last-upgrade]
│   │   └── restart node 3 with binary version v22.2.3 (16) [stage=last-upgrade]
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (17) [stage=running-upgrade-migrations,finalizing]
│   └── wait for nodes :1-4 to reach cluster version '22.2' (18) [stage=running-upgrade-migrations,finalizing]
├── run "initialize bank workload" (19) [stage=on-startup]
├── start background hooks concurrently
│   ├── run "bank workload", after 3m0s delay (20) [stage=background]
│   └── run "csv server", after 5s delay (21) [stage=background]
├── upgrade cluster from "v22.2.3" to "v23.1.4"
│   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (22) [stage=init]
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.4"
│   │   ├── restart node 3 with binary version v23.1.4 (23) [stage=last-upgrade]
│   │   ├── restart node 1 with binary version v23.1.4 (24) [stage=last-upgrade]
│   │   ├── run "mixed-version 1" (25) [stage=last-upgrade]
│   │   ├── restart node 4 with binary version v23.1.4 (26) [stage=last-upgrade]
│   │   ├── run "mixed-version 2" (27) [stage=last-upgrade]
│   │   └── restart node 2 with binary version v23.1.4 (28) [stage=last-upgrade]
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (29) [stage=running-upgrade-migrations,finalizing]
│   ├── wait for nodes :1-4 to reach cluster version '23.1' (30) [stage=running-upgrade-migrations,finalizing]
│   └── run "validate upgrade" (31) [stage=after-upgrade-finished]
├── upgrade cluster from "v23.1.4" to "v23.2.0"
│   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (32) [stage=init]
│   ├── upgrade nodes :1-4 from "v23.1.4" to "v23.2.0"
│   │   ├── restart node 1 with binary version v23.2.0 (33) [stage=last-upgrade]
│   │   ├── restart node 3 with binary version v23.2.0 (34) [stage=last-upgrade]
│   │   ├── run "mixed-version 1" (35) [stage=last-upgrade]
│   │   ├── restart node 2 with binary version v23.2.0 (36) [stage=last-upgrade]
│   │   ├── run "mixed-version 2" (37) [stage=last-upgrade]
│   │   └── restart node 4 with binary version v23.2.0 (38) [stage=last-upgrade]
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (39) [stage=running-upgrade-migrations,finalizing]
│   ├── wait for nodes :1-4 to reach cluster version '23.2' (40) [stage=running-upgrade-migrations,finalizing]
│   └── run "validate upgrade" (41) [stage=after-upgrade-finished]
└── upgrade cluster from "v23.2.0" to "<current>"
   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (42) [stage=init]
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 3 with binary version <current> (43) [stage=temporary-upgrade]
   │   ├── run "mixed-version 1" (44) [stage=temporary-upgrade]
   │   ├── restart node 2 with binary version <current> (45) [stage=temporary-upgrade]
   │   ├── run "mixed-version 2" (46) [stage=temporary-upgrade]
   │   ├── restart node 4 with binary version <current> (47) [stage=temporary-upgrade]
   │   └── restart node 1 with binary version <current> (48) [stage=temporary-upgrade]
   ├── downgrade nodes :1-4 from "<current>" to "v23.2.0"
   │   ├── restart node 2 with binary version v23.2.0 (49) [stage=rollback-upgrade]
   │   ├── restart node 3 with binary version v23.2.0 (50) [stage=rollback-upgrade]
   │   ├── restart node 1 with binary version v23.2.0 (51) [stage=rollback-upgrade]
   │   ├── run "mixed-version 1" (52) [stage=rollback-upgrade]
   │   └── restart node 4 with binary version v23.2.0 (53) [stage=rollback-upgrade]
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 1 with binary version <current> (54) [stage=last-upgrade]
   │   ├── restart node 3 with binary version <current> (55) [stage=last-upgrade]
   │   ├── run "mixed-version 2" (56) [stage=last-upgrade]
   │   ├── restart node 2 with binary version <current> (57) [stage=last-upgrade]
   │   ├── run "mixed-version 1" (58) [stage=last-upgrade]
   │   └── restart node 4 with binary version <current> (59) [stage=last-upgrade]
   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (60) [stage=running-upgrade-migrations,finalizing]
   ├── run "mixed-version 1" (61) [stage=running-upgrade-migrations,finalizing]
   ├── wait for nodes :1-4 to reach cluster version <current> (62) [stage=running-upgrade-migrations,finalizing]
   └── run "validate upgrade" (63) [stage=after-upgrade-finished]
