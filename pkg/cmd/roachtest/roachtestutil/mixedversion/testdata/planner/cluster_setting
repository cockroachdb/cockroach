# Tests the behaviour of the `cluster_setting[*]` mutator.

add-mutators cluster_setting[test_cluster_setting]
----
ok

mixed-version-test predecessors=(22.1.1, 22.2.3, 23.1.10, 23.2.4, 24.1.0, 24.2.1) num_upgrades=3 mutator_probabilities=(cluster_setting[test_cluster_setting], 1) enable_skip_version=true
----
ok

in-mixed-version name=(my mixed-version feature)
----
ok

on-startup name=(do something)
----
ok

plan
----
Seed:               12345
Upgrades:           v23.1.10 → v23.2.4 → v24.1.0 → v24.3.0 (<current>)
Deployment mode:    system-only
Mutators:           cluster_setting[test_cluster_setting]
Hooks:              do something, my mixed-version feature
Plan:
├── install fixtures for version "v23.1.10" (1)
├── start cluster at version "v23.1.10" (2)
├── wait for all nodes (:1-4) to acknowledge cluster version '23.1' on system tenant (3)
├── run "do something" (4)
├── upgrade cluster from "v23.1.10" to "v23.2.4"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (5)
│   ├── upgrade nodes :1-4 from "v23.1.10" to "v23.2.4"
│   │   ├── restart node 2 with binary version v23.2.4 (6)
│   │   ├── restart node 4 with binary version v23.2.4 (7)
│   │   ├── run "my mixed-version feature" (8)
│   │   ├── set cluster setting "test_cluster_setting" to '1' on system tenant (9)
│   │   ├── restart node 1 with binary version v23.2.4 (10)
│   │   └── restart node 3 with binary version v23.2.4 (11)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (12)
│   └── wait for all nodes (:1-4) to acknowledge cluster version '23.2' on system tenant (13)
├── upgrade cluster from "v23.2.4" to "v24.1.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (14)
│   ├── upgrade nodes :1-4 from "v23.2.4" to "v24.1.0"
│   │   ├── restart node 3 with binary version v24.1.0 (15)
│   │   ├── restart node 1 with binary version v24.1.0 (16)
│   │   ├── restart node 4 with binary version v24.1.0 (17)
│   │   ├── run "my mixed-version feature" (18)
│   │   └── restart node 2 with binary version v24.1.0 (19)
│   ├── downgrade nodes :1-4 from "v24.1.0" to "v23.2.4"
│   │   ├── restart node 1 with binary version v23.2.4 (20)
│   │   ├── run "my mixed-version feature" (21)
│   │   ├── restart node 3 with binary version v23.2.4 (22)
│   │   ├── restart node 4 with binary version v23.2.4 (23)
│   │   └── restart node 2 with binary version v23.2.4 (24)
│   ├── upgrade nodes :1-4 from "v23.2.4" to "v24.1.0"
│   │   ├── restart node 3 with binary version v24.1.0 (25)
│   │   ├── run "my mixed-version feature" (26)
│   │   ├── restart node 4 with binary version v24.1.0 (27)
│   │   ├── restart node 2 with binary version v24.1.0 (28)
│   │   └── restart node 1 with binary version v24.1.0 (29)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (30)
│   ├── run "my mixed-version feature" (31)
│   ├── set cluster setting "test_cluster_setting" to '3' on system tenant (32)
│   └── wait for all nodes (:1-4) to acknowledge cluster version '24.1' on system tenant (33)
└── upgrade cluster from "v24.1.0" to "v24.3.0 (<current>)"
   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (34)
   ├── upgrade nodes :1-4 from "v24.1.0" to "v24.3.0 (<current>)"
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (35)
   │   ├── run "my mixed-version feature" (36)
   │   ├── restart node 2 with binary version v24.3.0 (<current>) (37)
   │   ├── restart node 1 with binary version v24.3.0 (<current>) (38)
   │   └── restart node 4 with binary version v24.3.0 (<current>) (39)
   ├── downgrade nodes :1-4 from "v24.3.0 (<current>)" to "v24.1.0"
   │   ├── restart node 2 with binary version v24.1.0 (40)
   │   ├── restart node 3 with binary version v24.1.0 (41)
   │   ├── run "my mixed-version feature" (42)
   │   ├── restart node 1 with binary version v24.1.0 (43)
   │   └── restart node 4 with binary version v24.1.0 (44)
   ├── upgrade nodes :1-4 from "v24.1.0" to "v24.3.0 (<current>)"
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (45)
   │   ├── restart node 4 with binary version v24.3.0 (<current>) (46)
   │   ├── restart node 2 with binary version v24.3.0 (<current>) (47)
   │   ├── restart node 1 with binary version v24.3.0 (<current>) (48)
   │   └── run "my mixed-version feature" (49)
   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (50)
   ├── run "my mixed-version feature" (51)
   └── wait for all nodes (:1-4) to acknowledge cluster version <current> on system tenant (52)
