# Test that wait times while upgrading from older versions is reduced
# in local runs.

mixed-version-test predecessors=(22.2.3, 23.1.4, 23.2.0, 24.1.0, 24.2.1) num_upgrades=3 minimum_supported_version=v23.1.0 is_local=true enable_skip_version=true
----
ok

in-mixed-version name=(mixed-version 1)
----
ok

in-mixed-version name=(mixed-version 2)
----
ok

workload name=bank
----
ok

background-command name=(csv server)
----
ok

after-upgrade-finalized name=(validate upgrade)
----
ok

plan
----
Seed:               12345
Upgrades:           v23.1.4 → v23.2.0 → v24.1.0 → v24.3.0 (<current>)
Deployment mode:    system-only
Hooks:              bank workload, csv server, initialize bank workload, mixed-version 1, mixed-version 2, validate upgrade
Plan:
├── install fixtures for version "v23.1.4" (1)
├── start cluster at version "v23.1.4" (2)
├── wait for all nodes (:1-4) to acknowledge cluster version '23.1' on system tenant (3)
├── run "initialize bank workload" (4)
├── start background hooks concurrently
│   ├── run "bank workload", after 18s delay (5)
│   └── run "csv server", after 500ms delay (6)
├── upgrade cluster from "v23.1.4" to "v23.2.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (7)
│   ├── upgrade nodes :1-4 from "v23.1.4" to "v23.2.0"
│   │   ├── restart node 4 with binary version v23.2.0 (8)
│   │   ├── restart node 1 with binary version v23.2.0 (9)
│   │   ├── run mixed-version hooks concurrently
│   │   │   ├── run "mixed-version 1", after 50ms delay (10)
│   │   │   └── run "mixed-version 2", after 500ms delay (11)
│   │   ├── restart node 2 with binary version v23.2.0 (12)
│   │   └── restart node 3 with binary version v23.2.0 (13)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (14)
│   ├── run mixed-version hooks concurrently
│   │   ├── run "mixed-version 1", after 10ms delay (15)
│   │   └── run "mixed-version 2", after 50ms delay (16)
│   ├── wait for all nodes (:1-4) to acknowledge cluster version '23.2' on system tenant (17)
│   └── run "validate upgrade" (18)
├── upgrade cluster from "v23.2.0" to "v24.1.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (19)
│   ├── upgrade nodes :1-4 from "v23.2.0" to "v24.1.0"
│   │   ├── restart node 1 with binary version v24.1.0 (20)
│   │   ├── restart node 3 with binary version v24.1.0 (21)
│   │   ├── restart node 4 with binary version v24.1.0 (22)
│   │   ├── run "mixed-version 1" (23)
│   │   ├── restart node 2 with binary version v24.1.0 (24)
│   │   └── run "mixed-version 2" (25)
│   ├── downgrade nodes :1-4 from "v24.1.0" to "v23.2.0"
│   │   ├── restart node 4 with binary version v23.2.0 (26)
│   │   ├── restart node 3 with binary version v23.2.0 (27)
│   │   ├── restart node 2 with binary version v23.2.0 (28)
│   │   └── restart node 1 with binary version v23.2.0 (29)
│   ├── upgrade nodes :1-4 from "v23.2.0" to "v24.1.0"
│   │   ├── restart node 3 with binary version v24.1.0 (30)
│   │   ├── run "mixed-version 1" (31)
│   │   ├── restart node 2 with binary version v24.1.0 (32)
│   │   ├── restart node 1 with binary version v24.1.0 (33)
│   │   ├── run "mixed-version 2" (34)
│   │   └── restart node 4 with binary version v24.1.0 (35)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (36)
│   ├── wait for all nodes (:1-4) to acknowledge cluster version '24.1' on system tenant (37)
│   └── run "validate upgrade" (38)
└── upgrade cluster from "v24.1.0" to "v24.3.0 (<current>)"
   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (39)
   ├── upgrade nodes :1-4 from "v24.1.0" to "v24.3.0 (<current>)"
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (40)
   │   ├── run "mixed-version 1" (41)
   │   ├── restart node 2 with binary version v24.3.0 (<current>) (42)
   │   ├── run "mixed-version 2" (43)
   │   ├── restart node 4 with binary version v24.3.0 (<current>) (44)
   │   └── restart node 1 with binary version v24.3.0 (<current>) (45)
   ├── downgrade nodes :1-4 from "v24.3.0 (<current>)" to "v24.1.0"
   │   ├── restart node 2 with binary version v24.1.0 (46)
   │   ├── restart node 3 with binary version v24.1.0 (47)
   │   ├── restart node 1 with binary version v24.1.0 (48)
   │   ├── run "mixed-version 1" (49)
   │   └── restart node 4 with binary version v24.1.0 (50)
   ├── upgrade nodes :1-4 from "v24.1.0" to "v24.3.0 (<current>)"
   │   ├── restart node 1 with binary version v24.3.0 (<current>) (51)
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (52)
   │   ├── run "mixed-version 2" (53)
   │   ├── restart node 2 with binary version v24.3.0 (<current>) (54)
   │   ├── run "mixed-version 1" (55)
   │   └── restart node 4 with binary version v24.3.0 (<current>) (56)
   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (57)
   ├── run "mixed-version 1" (58)
   ├── wait for all nodes (:1-4) to acknowledge cluster version <current> on system tenant (59)
   └── run "validate upgrade" (60)
