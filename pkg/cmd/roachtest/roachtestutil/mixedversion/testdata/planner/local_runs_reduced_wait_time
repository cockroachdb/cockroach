# Test that wait times while upgrading from older versions is reduced
# in local runs.

mixed-version-test predecessors=(22.2.3, 23.1.4, 23.2.0) num_upgrades=3 minimum_supported_version=v23.1.0 is_local=true
----
ok

in-mixed-version name=(mixed-version 1)
----
ok

in-mixed-version name=(mixed-version 2)
----
ok

workload name=bank
----
ok

background-command name=(csv server)
----
ok

after-upgrade-finalized name=(validate upgrade)
----
ok

plan
----
mixed-version test plan for upgrading from "v22.2.3" to "v23.1.4" to "v23.2.0" to "<current>":
├── install fixtures for version "v22.2.3" (1)
├── start cluster at version "v22.2.3" (2)
├── wait for nodes :1-4 to reach cluster version '22.2' (3)
├── upgrade cluster from "v22.2.3" to "v23.1.4"
│   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (4)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.4"
│   │   ├── restart node 1 with binary version v23.1.4 (5)
│   │   ├── restart node 3 with binary version v23.1.4 (6)
│   │   ├── wait for 30s (7)
│   │   ├── restart node 2 with binary version v23.1.4 (8)
│   │   └── restart node 4 with binary version v23.1.4 (9)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (10)
│   └── wait for nodes :1-4 to reach cluster version '23.1' (11)
├── run "initialize bank workload" (12)
├── start background hooks concurrently
│   ├── run "bank workload", after 50ms delay (13)
│   └── run "csv server", after 10ms delay (14)
├── upgrade cluster from "v23.1.4" to "v23.2.0"
│   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (15)
│   ├── upgrade nodes :1-4 from "v23.1.4" to "v23.2.0"
│   │   ├── restart node 4 with binary version v23.2.0 (16)
│   │   ├── restart node 3 with binary version v23.2.0 (17)
│   │   ├── run "mixed-version 1" (18)
│   │   ├── restart node 2 with binary version v23.2.0 (19)
│   │   ├── run "mixed-version 2" (20)
│   │   └── restart node 1 with binary version v23.2.0 (21)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (22)
│   ├── run "mixed-version 2" (23)
│   ├── wait for nodes :1-4 to reach cluster version '23.2' (24)
│   └── run "validate upgrade" (25)
└── upgrade cluster from "v23.2.0" to "<current>"
   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (26)
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 3 with binary version <current> (27)
   │   ├── run "mixed-version 1" (28)
   │   ├── restart node 4 with binary version <current> (29)
   │   ├── restart node 2 with binary version <current> (30)
   │   ├── run "mixed-version 2" (31)
   │   └── restart node 1 with binary version <current> (32)
   ├── downgrade nodes :1-4 from "<current>" to "v23.2.0"
   │   ├── restart node 3 with binary version v23.2.0 (33)
   │   ├── run "mixed-version 2" (34)
   │   ├── restart node 2 with binary version v23.2.0 (35)
   │   ├── restart node 1 with binary version v23.2.0 (36)
   │   ├── run "mixed-version 1" (37)
   │   └── restart node 4 with binary version v23.2.0 (38)
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 1 with binary version <current> (39)
   │   ├── restart node 3 with binary version <current> (40)
   │   ├── run "mixed-version 2" (41)
   │   ├── restart node 4 with binary version <current> (42)
   │   ├── run "mixed-version 1" (43)
   │   └── restart node 2 with binary version <current> (44)
   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (45)
   ├── run "mixed-version 2" (46)
   ├── wait for nodes :1-4 to reach cluster version <current> (47)
   └── run "validate upgrade" (48)
