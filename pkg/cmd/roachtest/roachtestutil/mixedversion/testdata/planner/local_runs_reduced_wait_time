# Test that wait times while upgrading from older versions is reduced
# in local runs.

mixed-version-test predecessors=(22.2.3, 23.1.4, 23.2.0) num_upgrades=3 minimum_supported_version=v23.1.0 is_local=true
----
ok

in-mixed-version name=(mixed-version 1)
----
ok

in-mixed-version name=(mixed-version 2)
----
ok

workload name=bank
----
ok

background-command name=(csv server)
----
ok

after-upgrade-finalized name=(validate upgrade)
----
ok

plan
----
mixed-version test plan for upgrading from "v22.2.3" to "v23.1.4" to "v23.2.0" to "<current>":
├── start cluster at version "v22.2.3" (1)
├── wait for nodes :1-4 to reach cluster version '22.2' (2)
├── upgrade cluster from "v22.2.3" to "v23.1.4"
│   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (3)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.4"
│   │   ├── restart node 3 with binary version v23.1.4 (4)
│   │   ├── restart node 1 with binary version v23.1.4 (5)
│   │   ├── restart node 2 with binary version v23.1.4 (6)
│   │   ├── wait for 1m0s (7)
│   │   └── restart node 4 with binary version v23.1.4 (8)
│   ├── downgrade nodes :1-4 from "v23.1.4" to "v22.2.3"
│   │   ├── restart node 1 with binary version v22.2.3 (9)
│   │   ├── restart node 4 with binary version v22.2.3 (10)
│   │   ├── restart node 3 with binary version v22.2.3 (11)
│   │   └── restart node 2 with binary version v22.2.3 (12)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.4"
│   │   ├── restart node 3 with binary version v23.1.4 (13)
│   │   ├── restart node 1 with binary version v23.1.4 (14)
│   │   ├── wait for 30s (15)
│   │   ├── restart node 4 with binary version v23.1.4 (16)
│   │   └── restart node 2 with binary version v23.1.4 (17)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (18)
│   └── wait for nodes :1-4 to reach cluster version '23.1' (19)
├── run "initialize bank workload" (20)
├── start background hooks concurrently
│   ├── run "bank workload", after 18s delay (21)
│   └── run "csv server", after 0s delay (22)
├── upgrade cluster from "v23.1.4" to "v23.2.0"
│   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (23)
│   ├── upgrade nodes :1-4 from "v23.1.4" to "v23.2.0"
│   │   ├── restart node 4 with binary version v23.2.0 (24)
│   │   ├── run mixed-version hooks concurrently
│   │   │   ├── run "mixed-version 1", after 10ms delay (25)
│   │   │   └── run "mixed-version 2", after 50ms delay (26)
│   │   ├── restart node 1 with binary version v23.2.0 (27)
│   │   ├── restart node 2 with binary version v23.2.0 (28)
│   │   └── restart node 3 with binary version v23.2.0 (29)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (30)
│   ├── wait for nodes :1-4 to reach cluster version '23.2' (31)
│   └── run "validate upgrade" (32)
└── upgrade cluster from "v23.2.0" to "<current>"
   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (33)
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 2 with binary version <current> (34)
   │   ├── restart node 4 with binary version <current> (35)
   │   ├── restart node 1 with binary version <current> (36)
   │   ├── run "mixed-version 2" (37)
   │   ├── restart node 3 with binary version <current> (38)
   │   └── run "mixed-version 1" (39)
   ├── downgrade nodes :1-4 from "<current>" to "v23.2.0"
   │   ├── restart node 3 with binary version v23.2.0 (40)
   │   ├── run "mixed-version 1" (41)
   │   ├── restart node 4 with binary version v23.2.0 (42)
   │   ├── restart node 2 with binary version v23.2.0 (43)
   │   ├── run "mixed-version 2" (44)
   │   └── restart node 1 with binary version v23.2.0 (45)
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 4 with binary version <current> (46)
   │   ├── run "mixed-version 1" (47)
   │   ├── restart node 1 with binary version <current> (48)
   │   ├── run "mixed-version 2" (49)
   │   ├── restart node 2 with binary version <current> (50)
   │   └── restart node 3 with binary version <current> (51)
   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (52)
   ├── run "mixed-version 2" (53)
   ├── wait for nodes :1-4 to reach cluster version <current> (54)
   └── run "validate upgrade" (55)
