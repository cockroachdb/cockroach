# Test that wait times while upgrading from older versions is reduced
# in local runs.

mixed-version-test predecessors=(22.2.3, 23.1.4, 23.2.0) num_upgrades=3 minimum_supported_version=v23.1.0 is_local=true
----
ok

in-mixed-version name=(mixed-version 1)
----
ok

in-mixed-version name=(mixed-version 2)
----
ok

workload name=bank
----
ok

background-command name=(csv server)
----
ok

after-upgrade-finalized name=(validate upgrade)
----
ok

plan
----
mixed-version test plan for upgrading from "v22.2.3" to "v23.1.4" to "v23.2.0" to "<current>":
├── start cluster at version "v22.2.3" (1)
├── wait for system tenant on nodes :1-4 to reach cluster version '22.2' (2)
├── upgrade cluster from "v22.2.3" to "v23.1.4"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (3)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.4"
│   │   ├── restart node 3 with binary version v23.1.4 (4)
│   │   ├── restart node 2 with binary version v23.1.4 (5)
│   │   ├── wait for 6s (6)
│   │   ├── restart node 4 with binary version v23.1.4 (7)
│   │   └── restart node 1 with binary version v23.1.4 (8)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (9)
│   └── wait for system tenant on nodes :1-4 to reach cluster version '23.1' (10)
├── run "initialize bank workload" (11)
├── start background hooks concurrently
│   ├── run "bank workload", after 50ms delay (12)
│   └── run "csv server", after 18s delay (13)
├── upgrade cluster from "v23.1.4" to "v23.2.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (14)
│   ├── upgrade nodes :1-4 from "v23.1.4" to "v23.2.0"
│   │   ├── restart node 1 with binary version v23.2.0 (15)
│   │   ├── run mixed-version hooks concurrently
│   │   │   ├── run "mixed-version 1", after 50ms delay (16)
│   │   │   └── run "mixed-version 2", after 10ms delay (17)
│   │   ├── restart node 3 with binary version v23.2.0 (18)
│   │   ├── restart node 4 with binary version v23.2.0 (19)
│   │   └── restart node 2 with binary version v23.2.0 (20)
│   ├── downgrade nodes :1-4 from "v23.2.0" to "v23.1.4"
│   │   ├── restart node 2 with binary version v23.1.4 (21)
│   │   ├── restart node 3 with binary version v23.1.4 (22)
│   │   ├── restart node 1 with binary version v23.1.4 (23)
│   │   ├── run "mixed-version 2" (24)
│   │   └── restart node 4 with binary version v23.1.4 (25)
│   ├── upgrade nodes :1-4 from "v23.1.4" to "v23.2.0"
│   │   ├── restart node 2 with binary version v23.2.0 (26)
│   │   ├── run "mixed-version 2" (27)
│   │   ├── restart node 3 with binary version v23.2.0 (28)
│   │   ├── restart node 4 with binary version v23.2.0 (29)
│   │   ├── run "mixed-version 1" (30)
│   │   └── restart node 1 with binary version v23.2.0 (31)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (32)
│   ├── run "mixed-version 2" (33)
│   ├── wait for system tenant on nodes :1-4 to reach cluster version '23.2' (34)
│   └── run "validate upgrade" (35)
└── upgrade cluster from "v23.2.0" to "<current>"
   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (36)
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 3 with binary version <current> (37)
   │   ├── run "mixed-version 2" (38)
   │   ├── restart node 1 with binary version <current> (39)
   │   ├── run "mixed-version 1" (40)
   │   ├── restart node 2 with binary version <current> (41)
   │   └── restart node 4 with binary version <current> (42)
   ├── downgrade nodes :1-4 from "<current>" to "v23.2.0"
   │   ├── restart node 3 with binary version v23.2.0 (43)
   │   ├── restart node 2 with binary version v23.2.0 (44)
   │   ├── run "mixed-version 2" (45)
   │   ├── restart node 4 with binary version v23.2.0 (46)
   │   ├── run "mixed-version 1" (47)
   │   └── restart node 1 with binary version v23.2.0 (48)
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 2 with binary version <current> (49)
   │   ├── run "mixed-version 1" (50)
   │   ├── restart node 3 with binary version <current> (51)
   │   ├── restart node 1 with binary version <current> (52)
   │   ├── restart node 4 with binary version <current> (53)
   │   └── run "mixed-version 2" (54)
   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (55)
   ├── wait for system tenant on nodes :1-4 to reach cluster version <current> (56)
   └── run "validate upgrade" (57)
