# Test that wait times while upgrading from older versions is reduced
# in local runs.

mixed-version-test predecessors=(22.2.3, 23.1.4, 23.2.0) num_upgrades=3 minimum_supported_version=v23.1.0 is_local=true
----
ok

in-mixed-version name=(mixed-version 1)
----
ok

in-mixed-version name=(mixed-version 2)
----
ok

workload name=bank
----
ok

background-command name=(csv server)
----
ok

after-upgrade-finalized name=(validate upgrade)
----
ok

plan
----
Seed:               12345
Upgrades:           v22.2.3 → v23.1.4 → v23.2.0 → <current>
Deployment mode:    system-only
Plan:
├── start cluster at version "v22.2.3" (1)
├── wait for all nodes (:1-4) to acknowledge cluster version '22.2' on system tenant (2)
├── upgrade cluster from "v22.2.3" to "v23.1.4"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (3)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.4"
│   │   ├── restart node 4 with binary version v23.1.4 (4)
│   │   ├── restart node 3 with binary version v23.1.4 (5)
│   │   ├── restart node 2 with binary version v23.1.4 (6)
│   │   └── restart node 1 with binary version v23.1.4 (7)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (8)
│   └── wait for all nodes (:1-4) to acknowledge cluster version '23.1' on system tenant (9)
├── run "initialize bank workload" (10)
├── start background hooks concurrently
│   ├── run "bank workload", after 50ms delay (11)
│   └── run "csv server", after 18s delay (12)
├── upgrade cluster from "v23.1.4" to "v23.2.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (13)
│   ├── upgrade nodes :1-4 from "v23.1.4" to "v23.2.0"
│   │   ├── restart node 1 with binary version v23.2.0 (14)
│   │   ├── run mixed-version hooks concurrently
│   │   │   ├── run "mixed-version 1", after 50ms delay (15)
│   │   │   └── run "mixed-version 2", after 10ms delay (16)
│   │   ├── restart node 3 with binary version v23.2.0 (17)
│   │   ├── restart node 4 with binary version v23.2.0 (18)
│   │   └── restart node 2 with binary version v23.2.0 (19)
│   ├── downgrade nodes :1-4 from "v23.2.0" to "v23.1.4"
│   │   ├── restart node 2 with binary version v23.1.4 (20)
│   │   ├── restart node 3 with binary version v23.1.4 (21)
│   │   ├── restart node 1 with binary version v23.1.4 (22)
│   │   ├── run "mixed-version 2" (23)
│   │   └── restart node 4 with binary version v23.1.4 (24)
│   ├── upgrade nodes :1-4 from "v23.1.4" to "v23.2.0"
│   │   ├── restart node 2 with binary version v23.2.0 (25)
│   │   ├── run "mixed-version 2" (26)
│   │   ├── restart node 3 with binary version v23.2.0 (27)
│   │   ├── restart node 4 with binary version v23.2.0 (28)
│   │   ├── run "mixed-version 1" (29)
│   │   └── restart node 1 with binary version v23.2.0 (30)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (31)
│   ├── run "mixed-version 2" (32)
│   ├── wait for all nodes (:1-4) to acknowledge cluster version '23.2' on system tenant (33)
│   └── run "validate upgrade" (34)
└── upgrade cluster from "v23.2.0" to "<current>"
   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (35)
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 3 with binary version <current> (36)
   │   ├── run "mixed-version 2" (37)
   │   ├── restart node 1 with binary version <current> (38)
   │   ├── run "mixed-version 1" (39)
   │   ├── restart node 2 with binary version <current> (40)
   │   └── restart node 4 with binary version <current> (41)
   ├── downgrade nodes :1-4 from "<current>" to "v23.2.0"
   │   ├── restart node 3 with binary version v23.2.0 (42)
   │   ├── restart node 2 with binary version v23.2.0 (43)
   │   ├── run "mixed-version 2" (44)
   │   ├── restart node 4 with binary version v23.2.0 (45)
   │   ├── run "mixed-version 1" (46)
   │   └── restart node 1 with binary version v23.2.0 (47)
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 2 with binary version <current> (48)
   │   ├── run "mixed-version 1" (49)
   │   ├── restart node 3 with binary version <current> (50)
   │   ├── restart node 1 with binary version <current> (51)
   │   ├── restart node 4 with binary version <current> (52)
   │   └── run "mixed-version 2" (53)
   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (54)
   ├── wait for all nodes (:1-4) to acknowledge cluster version <current> on system tenant (55)
   └── run "validate upgrade" (56)
