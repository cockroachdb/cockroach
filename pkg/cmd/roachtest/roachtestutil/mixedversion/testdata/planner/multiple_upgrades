# Test that we are able to generate valid test plans with multiple
# upgrades.

mixed-version-test predecessors=(22.1.8, 22.2.3, 23.1.4) num_upgrades=3
----
ok

in-mixed-version name=(mixed-version 1)
----
ok

workload name=bank
----
ok

plan
----
Seed:               12345
Upgrades:           v22.1.8 → v22.2.3 → v23.1.4 → <current>
Deployment mode:    system-only
Plan:
├── start cluster at version "v22.1.8" (1)
├── wait for all nodes (:1-4) to acknowledge cluster version '22.1' on system tenant (2)
├── upgrade cluster from "v22.1.8" to "v22.2.3"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (3)
│   ├── upgrade nodes :1-4 from "v22.1.8" to "v22.2.3"
│   │   ├── restart node 4 with binary version v22.2.3 (4)
│   │   ├── restart node 3 with binary version v22.2.3 (5)
│   │   ├── restart node 2 with binary version v22.2.3 (6)
│   │   └── restart node 1 with binary version v22.2.3 (7)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (8)
│   └── wait for all nodes (:1-4) to acknowledge cluster version '22.2' on system tenant (9)
├── run "initialize bank workload" (10)
├── run "bank workload" (11)
├── upgrade cluster from "v22.2.3" to "v23.1.4"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (12)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.4"
│   │   ├── restart node 1 with binary version v23.1.4 (13)
│   │   ├── run "mixed-version 1" (14)
│   │   ├── restart node 3 with binary version v23.1.4 (15)
│   │   ├── restart node 4 with binary version v23.1.4 (16)
│   │   └── restart node 2 with binary version v23.1.4 (17)
│   ├── downgrade nodes :1-4 from "v23.1.4" to "v22.2.3"
│   │   ├── restart node 1 with binary version v22.2.3 (18)
│   │   ├── restart node 3 with binary version v22.2.3 (19)
│   │   ├── run "mixed-version 1" (20)
│   │   ├── restart node 4 with binary version v22.2.3 (21)
│   │   └── restart node 2 with binary version v22.2.3 (22)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.4"
│   │   ├── restart node 1 with binary version v23.1.4 (23)
│   │   ├── restart node 3 with binary version v23.1.4 (24)
│   │   ├── restart node 4 with binary version v23.1.4 (25)
│   │   ├── run "mixed-version 1" (26)
│   │   └── restart node 2 with binary version v23.1.4 (27)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (28)
│   └── wait for all nodes (:1-4) to acknowledge cluster version '23.1' on system tenant (29)
└── upgrade cluster from "v23.1.4" to "<current>"
   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (30)
   ├── upgrade nodes :1-4 from "v23.1.4" to "<current>"
   │   ├── restart node 2 with binary version <current> (31)
   │   ├── run "mixed-version 1" (32)
   │   ├── restart node 4 with binary version <current> (33)
   │   ├── restart node 1 with binary version <current> (34)
   │   └── restart node 3 with binary version <current> (35)
   ├── downgrade nodes :1-4 from "<current>" to "v23.1.4"
   │   ├── restart node 1 with binary version v23.1.4 (36)
   │   ├── restart node 2 with binary version v23.1.4 (37)
   │   ├── restart node 3 with binary version v23.1.4 (38)
   │   └── restart node 4 with binary version v23.1.4 (39)
   ├── upgrade nodes :1-4 from "v23.1.4" to "<current>"
   │   ├── restart node 2 with binary version <current> (40)
   │   ├── run "mixed-version 1" (41)
   │   ├── restart node 3 with binary version <current> (42)
   │   ├── restart node 4 with binary version <current> (43)
   │   └── restart node 1 with binary version <current> (44)
   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (45)
   ├── run "mixed-version 1" (46)
   └── wait for all nodes (:1-4) to acknowledge cluster version <current> on system tenant (47)
