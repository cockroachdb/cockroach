# Test that we are able to generate valid test plans with multiple
# upgrades.

mixed-version-test predecessors=(22.1.8, 22.2.3, 23.1.4) num_upgrades=3
----
ok

in-mixed-version name=(mixed-version 1)
----
ok

workload name=bank
----
ok

plan
----
mixed-version test plan for upgrading from "v22.1.8" to "v22.2.3" to "v23.1.4" to "<current>":
├── install fixtures for version "v22.1.8" (1)
├── start cluster at version "v22.1.8" (2)
├── wait for nodes :1-4 to reach cluster version '22.1' (3)
├── upgrade cluster from "v22.1.8" to "v22.2.3"
│   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (4)
│   ├── upgrade nodes :1-4 from "v22.1.8" to "v22.2.3"
│   │   ├── restart node 1 with binary version v22.2.3 (5)
│   │   ├── restart node 3 with binary version v22.2.3 (6)
│   │   ├── wait for 5m0s (7)
│   │   ├── restart node 2 with binary version v22.2.3 (8)
│   │   └── restart node 4 with binary version v22.2.3 (9)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (10)
│   └── wait for nodes :1-4 to reach cluster version '22.2' (11)
├── run "initialize bank workload" (12)
├── run "bank workload" (13)
├── upgrade cluster from "v22.2.3" to "v23.1.4"
│   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (14)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.4"
│   │   ├── restart node 4 with binary version v23.1.4 (15)
│   │   ├── restart node 3 with binary version v23.1.4 (16)
│   │   ├── run "mixed-version 1" (17)
│   │   ├── restart node 2 with binary version v23.1.4 (18)
│   │   └── restart node 1 with binary version v23.1.4 (19)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (20)
│   ├── run "mixed-version 1" (21)
│   └── wait for nodes :1-4 to reach cluster version '23.1' (22)
└── upgrade cluster from "v23.1.4" to "<current>"
   ├── prevent auto-upgrades by setting `preserve_downgrade_option` (23)
   ├── upgrade nodes :1-4 from "v23.1.4" to "<current>"
   │   ├── restart node 1 with binary version <current> (24)
   │   ├── restart node 4 with binary version <current> (25)
   │   ├── restart node 2 with binary version <current> (26)
   │   ├── run "mixed-version 1" (27)
   │   └── restart node 3 with binary version <current> (28)
   ├── downgrade nodes :1-4 from "<current>" to "v23.1.4"
   │   ├── restart node 1 with binary version v23.1.4 (29)
   │   ├── run "mixed-version 1" (30)
   │   ├── restart node 2 with binary version v23.1.4 (31)
   │   ├── restart node 4 with binary version v23.1.4 (32)
   │   └── restart node 3 with binary version v23.1.4 (33)
   ├── upgrade nodes :1-4 from "v23.1.4" to "<current>"
   │   ├── restart node 2 with binary version <current> (34)
   │   ├── restart node 1 with binary version <current> (35)
   │   ├── restart node 4 with binary version <current> (36)
   │   ├── run "mixed-version 1" (37)
   │   └── restart node 3 with binary version <current> (38)
   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (39)
   └── wait for nodes :1-4 to reach cluster version <current> (40)
