# Test that user steps are not scheduled until the cluster is
# upgrading from the minimum supported version.

mixed-version-test predecessors=(21.2.11, 22.1.8, 22.2.3, 23.1.4, 23.2.0, 24.1.0, 24.2.1) num_upgrades=5 minimum_supported_version=v23.1.0 enable_skip_version=true
----
ok

in-mixed-version name=(mixed-version 1)
----
ok

in-mixed-version name=(mixed-version 2)
----
ok

workload name=bank
----
ok

background-command name=(csv server)
----
ok

after-upgrade-finalized name=(validate upgrade)
----
ok

plan
----
Seed:               12345
Upgrades:           v22.1.8 → v22.2.3 → v23.1.4 → v23.2.0 → v24.1.0 → v24.3.0 (<current>)
Deployment mode:    system-only
Hooks:              bank workload, csv server, initialize bank workload, mixed-version 1, mixed-version 2, validate upgrade
Plan:
├── install fixtures for version "v22.1.8" (1)
├── start cluster at version "v22.1.8" (2)
├── wait for all nodes (:1-4) to acknowledge cluster version '22.1' on system tenant (3)
├── upgrade cluster from "v22.1.8" to "v22.2.3"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (4)
│   ├── upgrade nodes :1-4 from "v22.1.8" to "v22.2.3"
│   │   ├── restart node 3 with binary version v22.2.3 (5)
│   │   ├── restart node 1 with binary version v22.2.3 (6)
│   │   ├── wait for 10m0s (7)
│   │   ├── restart node 4 with binary version v22.2.3 (8)
│   │   └── restart node 2 with binary version v22.2.3 (9)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (10)
│   └── wait for all nodes (:1-4) to acknowledge cluster version '22.2' on system tenant (11)
├── upgrade cluster from "v22.2.3" to "v23.1.4"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (12)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.4"
│   │   ├── restart node 1 with binary version v23.1.4 (13)
│   │   ├── restart node 3 with binary version v23.1.4 (14)
│   │   ├── restart node 4 with binary version v23.1.4 (15)
│   │   └── restart node 2 with binary version v23.1.4 (16)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (17)
│   └── wait for all nodes (:1-4) to acknowledge cluster version '23.1' on system tenant (18)
├── run "initialize bank workload" (19)
├── start background hooks concurrently
│   ├── run "bank workload", after 30s delay (20)
│   └── run "csv server", after 100ms delay (21)
├── upgrade cluster from "v23.1.4" to "v23.2.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (22)
│   ├── upgrade nodes :1-4 from "v23.1.4" to "v23.2.0"
│   │   ├── restart node 1 with binary version v23.2.0 (23)
│   │   ├── restart node 4 with binary version v23.2.0 (24)
│   │   ├── restart node 2 with binary version v23.2.0 (25)
│   │   ├── run "mixed-version 1" (26)
│   │   ├── restart node 3 with binary version v23.2.0 (27)
│   │   └── run "mixed-version 2" (28)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (29)
│   ├── run "mixed-version 2" (30)
│   ├── wait for all nodes (:1-4) to acknowledge cluster version '23.2' on system tenant (31)
│   └── run "validate upgrade" (32)
├── upgrade cluster from "v23.2.0" to "v24.1.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (33)
│   ├── upgrade nodes :1-4 from "v23.2.0" to "v24.1.0"
│   │   ├── restart node 3 with binary version v24.1.0 (34)
│   │   ├── restart node 2 with binary version v24.1.0 (35)
│   │   ├── restart node 1 with binary version v24.1.0 (36)
│   │   ├── run "mixed-version 1" (37)
│   │   ├── restart node 4 with binary version v24.1.0 (38)
│   │   └── run "mixed-version 2" (39)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (40)
│   ├── run mixed-version hooks concurrently
│   │   ├── run "mixed-version 1", after 0s delay (41)
│   │   └── run "mixed-version 2", after 5s delay (42)
│   ├── wait for all nodes (:1-4) to acknowledge cluster version '24.1' on system tenant (43)
│   └── run "validate upgrade" (44)
└── upgrade cluster from "v24.1.0" to "v24.3.0 (<current>)"
   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (45)
   ├── upgrade nodes :1-4 from "v24.1.0" to "v24.3.0 (<current>)"
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (46)
   │   ├── run "mixed-version 2" (47)
   │   ├── restart node 2 with binary version v24.3.0 (<current>) (48)
   │   ├── restart node 4 with binary version v24.3.0 (<current>) (49)
   │   ├── run "mixed-version 1" (50)
   │   └── restart node 1 with binary version v24.3.0 (<current>) (51)
   ├── downgrade nodes :1-4 from "v24.3.0 (<current>)" to "v24.1.0"
   │   ├── restart node 3 with binary version v24.1.0 (52)
   │   ├── restart node 4 with binary version v24.1.0 (53)
   │   ├── run "mixed-version 2" (54)
   │   ├── restart node 2 with binary version v24.1.0 (55)
   │   ├── run "mixed-version 1" (56)
   │   └── restart node 1 with binary version v24.1.0 (57)
   ├── upgrade nodes :1-4 from "v24.1.0" to "v24.3.0 (<current>)"
   │   ├── restart node 1 with binary version v24.3.0 (<current>) (58)
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (59)
   │   ├── restart node 2 with binary version v24.3.0 (<current>) (60)
   │   ├── run mixed-version hooks concurrently
   │   │   ├── run "mixed-version 1", after 5s delay (61)
   │   │   └── run "mixed-version 2", after 5s delay (62)
   │   └── restart node 4 with binary version v24.3.0 (<current>) (63)
   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (64)
   ├── wait for all nodes (:1-4) to acknowledge cluster version <current> on system tenant (65)
   └── run "validate upgrade" (66)
