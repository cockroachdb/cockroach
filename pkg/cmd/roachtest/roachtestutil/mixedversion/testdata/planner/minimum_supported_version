# Test that user steps are not scheduled until the cluster is
# upgrading from the minimum supported version.

mixed-version-test predecessors=(21.2.11, 22.1.8, 22.2.3, 23.1.0, 23.1.4, 23.2.0, 24.1.0, 24.2.1) num_upgrades=5 minimum_supported_version=v23.1.0 enable_skip_version=true
----
ok

in-mixed-version name=(mixed-version 1)
----
ok

in-mixed-version name=(mixed-version 2)
----
ok

workload name=bank
----
ok

background-command name=(csv server)
----
ok

after-upgrade-finalized name=(validate upgrade)
----
ok

plan
----
Seed:               12345
Upgrades:           v22.2.3 → v23.1.0 → v23.1.4 → v23.2.0 → v24.1.0 → v24.3.0 (<current>)
Deployment mode:    system-only
Hooks:              bank workload, csv server, initialize bank workload, mixed-version 1, mixed-version 2, validate upgrade
Plan:
├── install fixtures for version "v22.2.3" (1)
├── start cluster at version "v22.2.3" (2)
├── wait for all nodes (:1-4) to acknowledge cluster version '22.2' on system tenant (3)
├── upgrade cluster from "v22.2.3" to "v23.1.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (4)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.0"
│   │   ├── restart node 3 with binary version v23.1.0 (5)
│   │   ├── restart node 1 with binary version v23.1.0 (6)
│   │   ├── restart node 4 with binary version v23.1.0 (7)
│   │   └── restart node 2 with binary version v23.1.0 (8)
│   ├── downgrade nodes :1-4 from "v23.1.0" to "v22.2.3"
│   │   ├── restart node 4 with binary version v22.2.3 (9)
│   │   ├── wait for 10m0s (10)
│   │   ├── restart node 1 with binary version v22.2.3 (11)
│   │   ├── restart node 2 with binary version v22.2.3 (12)
│   │   └── restart node 3 with binary version v22.2.3 (13)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.0"
│   │   ├── restart node 2 with binary version v23.1.0 (14)
│   │   ├── restart node 3 with binary version v23.1.0 (15)
│   │   ├── restart node 1 with binary version v23.1.0 (16)
│   │   └── restart node 4 with binary version v23.1.0 (17)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (18)
│   └── wait for all nodes (:1-4) to acknowledge cluster version '23.1' on system tenant (19)
├── run "initialize bank workload" (20)
├── start background hooks concurrently
│   ├── run "bank workload", after 3m0s delay (21)
│   └── run "csv server", after 30s delay (22)
├── upgrade cluster from "v23.1.0" to "v23.1.4"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (23)
│   ├── upgrade nodes :1-4 from "v23.1.0" to "v23.1.4"
│   │   ├── restart node 4 with binary version v23.1.4 (24)
│   │   ├── restart node 3 with binary version v23.1.4 (25)
│   │   ├── restart node 1 with binary version v23.1.4 (26)
│   │   ├── run "mixed-version 1" (27)
│   │   ├── restart node 2 with binary version v23.1.4 (28)
│   │   └── run "mixed-version 2" (29)
│   ├── downgrade nodes :1-4 from "v23.1.4" to "v23.1.0"
│   │   ├── restart node 1 with binary version v23.1.0 (30)
│   │   ├── run mixed-version hooks concurrently
│   │   │   ├── run "mixed-version 1", after 500ms delay (31)
│   │   │   └── run "mixed-version 2", after 3m0s delay (32)
│   │   ├── restart node 4 with binary version v23.1.0 (33)
│   │   ├── restart node 3 with binary version v23.1.0 (34)
│   │   └── restart node 2 with binary version v23.1.0 (35)
│   ├── upgrade nodes :1-4 from "v23.1.0" to "v23.1.4"
│   │   ├── restart node 2 with binary version v23.1.4 (36)
│   │   ├── run "mixed-version 1" (37)
│   │   ├── restart node 3 with binary version v23.1.4 (38)
│   │   ├── restart node 4 with binary version v23.1.4 (39)
│   │   ├── restart node 1 with binary version v23.1.4 (40)
│   │   └── run "mixed-version 2" (41)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (42)
│   ├── run "mixed-version 2" (43)
│   ├── wait for all nodes (:1-4) to acknowledge cluster version '23.1' on system tenant (44)
│   └── run "validate upgrade" (45)
├── upgrade cluster from "v23.1.4" to "v23.2.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (46)
│   ├── upgrade nodes :1-4 from "v23.1.4" to "v23.2.0"
│   │   ├── restart node 2 with binary version v23.2.0 (47)
│   │   ├── run "mixed-version 1" (48)
│   │   ├── restart node 1 with binary version v23.2.0 (49)
│   │   ├── restart node 4 with binary version v23.2.0 (50)
│   │   ├── restart node 3 with binary version v23.2.0 (51)
│   │   └── run "mixed-version 2" (52)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (53)
│   ├── wait for all nodes (:1-4) to acknowledge cluster version '23.2' on system tenant (54)
│   └── run "validate upgrade" (55)
├── upgrade cluster from "v23.2.0" to "v24.1.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (56)
│   ├── upgrade nodes :1-4 from "v23.2.0" to "v24.1.0"
│   │   ├── restart node 2 with binary version v24.1.0 (57)
│   │   ├── run "mixed-version 1" (58)
│   │   ├── restart node 4 with binary version v24.1.0 (59)
│   │   ├── restart node 3 with binary version v24.1.0 (60)
│   │   ├── restart node 1 with binary version v24.1.0 (61)
│   │   └── run "mixed-version 2" (62)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (63)
│   ├── wait for all nodes (:1-4) to acknowledge cluster version '24.1' on system tenant (64)
│   └── run "validate upgrade" (65)
└── upgrade cluster from "v24.1.0" to "v24.3.0 (<current>)"
   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (66)
   ├── upgrade nodes :1-4 from "v24.1.0" to "v24.3.0 (<current>)"
   │   ├── restart node 4 with binary version v24.3.0 (<current>) (67)
   │   ├── restart node 1 with binary version v24.3.0 (<current>) (68)
   │   ├── restart node 2 with binary version v24.3.0 (<current>) (69)
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (70)
   │   └── run mixed-version hooks concurrently
   │      ├── run "mixed-version 1", after 5s delay (71)
   │      └── run "mixed-version 2", after 100ms delay (72)
   ├── downgrade nodes :1-4 from "v24.3.0 (<current>)" to "v24.1.0"
   │   ├── restart node 3 with binary version v24.1.0 (73)
   │   ├── restart node 1 with binary version v24.1.0 (74)
   │   ├── run "mixed-version 1" (75)
   │   ├── restart node 4 with binary version v24.1.0 (76)
   │   └── restart node 2 with binary version v24.1.0 (77)
   ├── upgrade nodes :1-4 from "v24.1.0" to "v24.3.0 (<current>)"
   │   ├── restart node 2 with binary version v24.3.0 (<current>) (78)
   │   ├── run "mixed-version 2" (79)
   │   ├── restart node 1 with binary version v24.3.0 (<current>) (80)
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (81)
   │   ├── run "mixed-version 1" (82)
   │   └── restart node 4 with binary version v24.3.0 (<current>) (83)
   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (84)
   ├── run "mixed-version 2" (85)
   ├── wait for all nodes (:1-4) to acknowledge cluster version <current> on system tenant (86)
   └── run "validate upgrade" (87)
