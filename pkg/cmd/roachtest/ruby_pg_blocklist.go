// Copyright 2021 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

package main

var rubyPGBlocklist = blocklistsForVersion{
	{"v20.1", "rubyPGBlockList21_1", rubyPGBlockList21_1, "rubyPGIgnoreList21_1", rubyPGIgnoreList21_1},
	{"v20.2", "rubyPGBlockList21_1", rubyPGBlockList21_1, "rubyPGIgnoreList21_1", rubyPGIgnoreList21_1},
	{"v21.1", "rubyPGBlockList21_1", rubyPGBlockList21_1, "rubyPGIgnoreList21_1", rubyPGIgnoreList21_1},
}

var rubyPGBlockList21_1 = blocklist{
	"PG::TypeMapByColumn will deny copy queries with different column count":                                                                                                                                                    "63642",
	"PG::TypeMapByColumn should gracefully handle not initialized state":                                                                                                                                                        "63642",
	"PG::TypeMapByColumn forwards get_copy_data conversions to another TypeMapByColumn as #default_type_map":                                                                                                                    "63642",
	"PG::TypeMapByOid should build a TypeMapByColumn when assigned and the number of rows is high enough":                                                                                                                       "63642",
	"PG::TypeMapByOid should allow mixed type conversions in binary format":                                                                                                                                                     "63642",
	"PG::TypeMapByOid should allow mixed type conversions in text format":                                                                                                                                                       "63642",
	"PG::TypeMapByOid should allow building new TypeMapByColumn for a given result":                                                                                                                                             "63642",
	"running with sync_* methods PG::Connection calls the block supplied to wait_for_notify with the notify payload if it accepts three arguments":                                                                              "63642",
	"running with sync_* methods PG::Connection calls a block for NOTIFY events if one is given":                                                                                                                                "63642",
	"running with sync_* methods PG::Connection sends nil as the payload if the notification wasn't given one":                                                                                                                  "63642",
	"running with sync_* methods PG::Connection described_class#block shouldn't block a second thread":                                                                                                                          "63642",
	"running with sync_* methods PG::Connection gracefully handle SQL statements while in #copy_data for output":                                                                                                                "63642",
	"running with sync_* methods PG::Connection calls the block supplied to wait_for_notify with the notify payload if it accepts two arguments":                                                                                "63642",
	"running with sync_* methods PG::Connection not read past the end of a large object":                                                                                                                                        "63642",
	"running with sync_* methods PG::Connection automatically rolls back a transaction started with Connection#transaction if an exception is raised":                                                                           "63642",
	"running with sync_* methods PG::Connection doesn't leave stale server connections after finish":                                                                                                                            "63642",
	"running with sync_* methods PG::Connection can handle server errors in #copy_data for input":                                                                                                                               "63642",
	"running with sync_* methods PG::Connection can process #copy_data output queries":                                                                                                                                          "63642",
	"running with sync_* methods PG::Connection gracefully handle SQL statements while in #copy_data for input":                                                                                                                 "63642",
	"running with sync_* methods PG::Connection doesn't collapse sequential notifications":                                                                                                                                      "63642",
	"running with sync_* methods PG::Connection can process #copy_data input queries":                                                                                                                                           "63642",
	"running with sync_* methods PG::Connection can handle client errors in #copy_data for output":                                                                                                                              "63642",
	"running with sync_* methods PG::Connection correctly finishes COPY queries passed to #async_exec":                                                                                                                          "63642",
	"running with sync_* methods PG::Connection calls the block supplied to wait_for_notify with the notify payload if it doesn't accept arguments":                                                                             "63642",
	"running with sync_* methods PG::Connection can handle client errors in #copy_data for input":                                                                                                                               "63642",
	"running with sync_* methods PG::Connection can handle server errors in #copy_data for output":                                                                                                                              "63642",
	"running with sync_* methods PG::Connection returns notifications which are already in the queue before wait_for_notify is called without waiting for the socket to become readable":                                        "63642",
	"running with sync_* methods PG::Connection calls the block supplied to wait_for_notify with the notify payload if it accepts any number of arguments":                                                                      "63642",
	"running with sync_* methods PG::Connection allows a query to be cancelled":                                                                                                                                                 "63642",
	"running with sync_* methods PG::Connection accepts nil as the timeout in #wait_for_notify ":                                                                                                                                "63642",
	"running with sync_* methods PG::Connection can handle incomplete #copy_data output queries":                                                                                                                                "63642",
	"running with sync_* methods PG::Connection can receive notices while waiting for NOTIFY without exceeding the timeout":                                                                                                     "63642",
	"running with sync_* methods PG::Connection trace and untrace client-server communication":                                                                                                                                  "63642",
	"running with sync_* methods PG::Connection returns the block result from Connection#transaction":                                                                                                                           "63642",
	"running with sync_* methods PG::Connection can wait for NOTIFY events":                                                                                                                                                     "63642",
	"running with sync_* methods PG::Connection set_single_row_mode should receive rows before entire query is finished":                                                                                                        "63642",
	"running with sync_* methods PG::Connection set_single_row_mode should receive rows before entire query fails":                                                                                                              "63642",
	"running with sync_* methods PG::Connection deprecated forms of methods should forward send_query to send_query_params":                                                                                                     "63642",
	"running with sync_* methods PG::Connection deprecated forms of methods should forward exec to exec_params":                                                                                                                 "63642",
	"running with sync_* methods PG::Connection multinationalization support returns properly encoded text from notifies":                                                                                                       "63642",
	"running with sync_* methods PG::Connection multinationalization support receives properly encoded text from wait_for_notify":                                                                                               "63642",
	"running with sync_* methods PG::Connection multinationalization support receives properly encoded messages in the notice callbacks":                                                                                        "63642",
	"running with sync_* methods PG::Connection multinationalization support encodes exception messages with the connection's encoding (#96)":                                                                                   "63642",
	"running with sync_* methods PG::Connection multinationalization support handles clearing result in or after set_notice_receiver":                                                                                           "63642",
	"running with sync_* methods PG::Connection multinationalization support respect and convert character encoding of input strings should convert strings to #send_describe_portal":                                           "63642",
	"running with sync_* methods PG::Connection multinationalization support respect and convert character encoding of input strings should convert strings and parameters to #prepare and #exec_prepared":                      "63642",
	"running with sync_* methods PG::Connection multinationalization support respect and convert character encoding of input strings should convert query string and parameters to #send_query_params":                          "63642",
	"running with sync_* methods PG::Connection multinationalization support respect and convert character encoding of input strings should convert strings and parameters to #send_prepare and #send_query_prepared":           "63642",
	"running with sync_* methods PG::Connection multinationalization support respect and convert character encoding of input strings should convert strings to #describe_portal":                                                "63642",
	"running with sync_* methods PG::Connection multinationalization support respect and convert character encoding of input strings should convert query string and parameters to #exec_params":                                "63642",
	"running with sync_* methods PG::Connection multinationalization support respect and convert character encoding of input strings should convert error string to #put_copy_end":                                              "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support uses the client encoding for escaped literal":                                                                       "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support should return results in the same encoding as the client (EUC-JP)":                                                  "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support the connection should use JOHAB dummy encoding when it's set to JOHAB":                                              "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support should return results in the same encoding as the client (iso-8859-1)":                                              "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support can use an encoding with high index for client encoding":                                                            "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support uses the client encoding for escaped string":                                                                        "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support uses the previous string encoding for escaped string":                                                               "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support uses the previous string encoding for quote_ident":                                                                  "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support uses the client encoding for quote_ident":                                                                           "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support the connection should return ASCII-8BIT when it's set to SQL_ASCII":                                                 "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support uses the client encoding for escaped identifier":                                                                    "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support returns the results in the correct encoding even if the client_encoding has changed since the results were fetched": "63642",
	"running with sync_* methods PG::Connection multinationalization support rubyforge #22925: m17n support raises appropriate error if set_client_encoding is called with invalid arguments":                                   "63642",
	"running with sync_* methods PG::Connection multinationalization support Ruby 1.9.x default_internal encoding allows users of the async interface to set the client_encoding to the default_internal":                       "63642",
	"running with sync_* methods PG::Connection multinationalization support Ruby 1.9.x default_internal encoding honors the Encoding.default_internal if it's set and the synchronous interface is used":                       "63642",
	"running with sync_* methods PG::Connection type casting shouldn't type map params unless requested":                                                                                                                        "63642",
	"running with sync_* methods PG::Connection type casting can type cast parameters to put_copy_data with explicit encoder":                                                                                                   "63642",
	"running with sync_* methods PG::Connection type casting with default query type map can process #copy_data input queries with row encoder and respects character encoding":                                                 "63642",
	"running with sync_* methods PG::Connection type casting with default result type map should work with arbitrary number of params in conjunction with type casting":                                                         "63642",
	"running with sync_* methods PG::Connection type casting with default result type map can process #copy_data output with row decoder and respects character encoding":                                                       "63642",
	"running with sync_* methods PG::Connection type casting with default result type map should respect a type mapping for result":                                                                                             "63642",
	"running with sync_* methods PG::Connection type casting with default result type map can type cast #copy_data output with explicit decoder":                                                                                "63642",
	"PG::Result raises a proper exception for a nonexistant schema":                                                                                                                                                             "63642",
	"PG::Result encapsulates errors in a PG::Error object":                                                                                                                                                                      "63642",
	"PG::Result encapsulates database object names for integrity constraint violations":                                                                                                                                         "63642",
	"Basic type mapping PG::BasicTypeMapForResults with usage of result oids for copy decoder selection can type cast #copy_data output with explicit decoder":                                                                  "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should convert format 0 timestamps per TimestampLocal":                                                                                          "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should convert format 1 timestamps per TimestampUtc":                                                                                            "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should do float type conversions":                                                                                                               "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should do cidr type conversions":                                                                                                                "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should do text datetime without time zone type conversions":                                                                                     "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should convert format 0 timestamps per TimestampUtc":                                                                                            "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should convert format 1 timestamps per TimestampUtcToLocal":                                                                                     "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should convert format 0 timestamps per TimestampUtcToLocal":                                                                                     "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should do array type conversions":                                                                                                               "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should convert format 1 timestamps with time zone":                                                                                              "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should convert format 0 timestamps with time zone":                                                                                              "63642",
	"Basic type mapping PG::BasicTypeMapForResults connection wide type mapping should convert format 1 timestamps per TimestampLocal":                                                                                          "63642",
	"Basic type mapping PG::BasicTypeMapBasedOnResult with usage of result oids for copy encoder selection can type cast #copy_data input with explicit encoder":                                                                "63642",
	"Basic type mapping PG::BasicTypeMapBasedOnResult with usage of result oids for bind params encoder selection can do JSON conversions":                                                                                      "63642",
	"Basic type mapping PG::BasicTypeMapForQueries should do IPAddr param encoding":                                                                                                                                             "63642",
	"Basic type mapping PG::BasicTypeMapForQueries should do bigdecimal param encoding":                                                                                                                                         "63642",
	"Basic type mapping PG::BasicTypeMapForQueries should do hash-as-json encoding":                                                                                                                                             "63642",
	"Basic type mapping PG::BasicTypeMapForQueries should do array of string encoding on unknown classes":                                                                                                                       "63642",
	"Basic type mapping PG::BasicTypeMapForQueries should do default array-as-array param encoding with Time objects":                                                                                                           "63642",
	"Basic type mapping PG::BasicTypeMapForQueries should do default array-as-array param encoding":                                                                                                                             "63642",
	"Basic type mapping PG::BasicTypeMapForQueries should do basic param encoding":                                                                                                                                              "63642",
	"Basic type mapping PG::BasicTypeMapForQueries should do basic Time encoding":                                                                                                                                               "63642",
	"Basic type mapping PG::BasicTypeMapForQueries should do basic param encoding of various float values":                                                                                                                      "63642",
	"Basic type mapping PG::BasicTypeMapForQueries should do array-as-json encoding":                                                                                                                                            "63642",
	"Basic type mapping PG::BasicTypeMapForQueries Record encoding should do array-as-record encoding":                                                                                                                          "63642",
	"PG::TypeMapByClass should expire the cache after changes to the coders":                                                                                                                                                    "63642",
	"PG::Connection doesn't leave stale server connections after finish":                                                                                                                                                        "63642",
	"PG::Connection sends nil as the payload if the notification wasn't given one":                                                                                                                                              "63642",
	"PG::Connection can handle client errors in #copy_data for input":                                                                                                                                                           "63642",
	"PG::Connection automatically rolls back a transaction started with Connection#transaction if an exception is raised":                                                                                                       "63642",
	"PG::Connection returns the block result from Connection#transaction":                                                                                                                                                       "63642",
	"PG::Connection can handle server errors in #copy_data for output":                                                                                                                                                          "63642",
	"PG::Connection calls the block supplied to wait_for_notify with the notify payload if it doesn't accept arguments":                                                                                                         "63642",
	"PG::Connection allows a query to be cancelled":                                                                                                                                                                             "63642",
	"PG::Connection can process #copy_data output queries":                                                                                                                                                                      "63642",
	"PG::Connection can handle client errors in #copy_data for output":                                                                                                                                                          "63642",
	"PG::Connection returns notifications which are already in the queue before wait_for_notify is called without waiting for the socket to become readable":                                                                    "63642",
	"PG::Connection can process #copy_data input queries":                                                                                                                                                                       "63642",
	"PG::Connection not read past the end of a large object":                                                                                                                                                                    "63642",
	"PG::Connection doesn't collapse sequential notifications":                                                                                                                                                                  "63642",
	"PG::Connection gracefully handle SQL statements while in #copy_data for output":                                                                                                                                            "63642",
	"PG::Connection calls a block for NOTIFY events if one is given":                                                                                                                                                            "63642",
	"PG::Connection can wait for NOTIFY events":                                                                                                                                                     "63642",
	"PG::Connection can handle incomplete #copy_data output queries":                                                                                                                                "63642",
	"PG::Connection calls the block supplied to wait_for_notify with the notify payload if it accepts any number of arguments":                                                                      "63642",
	"PG::Connection gracefully handle SQL statements while in #copy_data for input":                                                                                                                 "63642",
	"PG::Connection can handle server errors in #copy_data for input":                                                                                                                               "63642",
	"PG::Connection can receive notices while waiting for NOTIFY without exceeding the timeout":                                                                                                     "63642",
	"PG::Connection correctly finishes COPY queries passed to #async_exec":                                                                                                                          "63642",
	"PG::Connection trace and untrace client-server communication":                                                                                                                                  "63642",
	"PG::Connection accepts nil as the timeout in #wait_for_notify ":                                                                                                                                "63642",
	"PG::Connection calls the block supplied to wait_for_notify with the notify payload if it accepts three arguments":                                                                              "63642",
	"PG::Connection described_class#block shouldn't block a second thread":                                                                                                                          "63642",
	"PG::Connection calls the block supplied to wait_for_notify with the notify payload if it accepts two arguments":                                                                                "63642",
	"PG::Connection multinationalization support handles clearing result in or after set_notice_receiver":                                                                                           "63642",
	"PG::Connection multinationalization support receives properly encoded messages in the notice callbacks":                                                                                        "63642",
	"PG::Connection multinationalization support encodes exception messages with the connection's encoding (#96)":                                                                                   "63642",
	"PG::Connection multinationalization support returns properly encoded text from notifies":                                                                                                       "63642",
	"PG::Connection multinationalization support receives properly encoded text from wait_for_notify":                                                                                               "63642",
	"PG::Connection multinationalization support Ruby 1.9.x default_internal encoding allows users of the async interface to set the client_encoding to the default_internal":                       "63642",
	"PG::Connection multinationalization support Ruby 1.9.x default_internal encoding honors the Encoding.default_internal if it's set and the synchronous interface is used":                       "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support uses the previous string encoding for quote_ident":                                                                  "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support raises appropriate error if set_client_encoding is called with invalid arguments":                                   "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support can use an encoding with high index for client encoding":                                                            "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support uses the client encoding for escaped string":                                                                        "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support uses the client encoding for escaped literal":                                                                       "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support returns the results in the correct encoding even if the client_encoding has changed since the results were fetched": "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support uses the previous string encoding for escaped string":                                                               "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support the connection should use JOHAB dummy encoding when it's set to JOHAB":                                              "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support uses the client encoding for escaped identifier":                                                                    "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support uses the client encoding for quote_ident":                                                                           "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support should return results in the same encoding as the client (iso-8859-1)":                                              "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support the connection should return ASCII-8BIT when it's set to SQL_ASCII":                                                 "63642",
	"PG::Connection multinationalization support rubyforge #22925: m17n support should return results in the same encoding as the client (EUC-JP)":                                                  "63642",
	"PG::Connection multinationalization support respect and convert character encoding of input strings should convert query string and parameters to #send_query_params":                          "63642",
	"PG::Connection multinationalization support respect and convert character encoding of input strings should convert strings and parameters to #send_prepare and #send_query_prepared":           "63642",
	"PG::Connection multinationalization support respect and convert character encoding of input strings should convert query string and parameters to #exec_params":                                "63642",
	"PG::Connection multinationalization support respect and convert character encoding of input strings should convert strings to #describe_portal":                                                "63642",
	"PG::Connection multinationalization support respect and convert character encoding of input strings should convert strings and parameters to #prepare and #exec_prepared":                      "63642",
	"PG::Connection multinationalization support respect and convert character encoding of input strings should convert strings to #send_describe_portal":                                           "63642",
	"PG::Connection multinationalization support respect and convert character encoding of input strings should convert error string to #put_copy_end":                                              "63642",
	"PG::Connection type casting can type cast parameters to put_copy_data with explicit encoder":                                                                                                   "63642",
	"PG::Connection type casting shouldn't type map params unless requested":                                                                                                                        "63642",
	"PG::Connection type casting with default query type map can process #copy_data input queries with row encoder and respects character encoding":                                                 "63642",
	"PG::Connection type casting with default result type map can type cast #copy_data output with explicit decoder":                                                                                "63642",
	"PG::Connection type casting with default result type map can process #copy_data output with row decoder and respects character encoding":                                                       "63642",
	"PG::Connection type casting with default result type map should respect a type mapping for result":                                                                                             "63642",
	"PG::Connection type casting with default result type map should work with arbitrary number of params in conjunction with type casting":                                                         "63642",
	"PG::Connection set_single_row_mode should receive rows before entire query is finished":                                                                                                        "63642",
	"PG::Connection set_single_row_mode should receive rows before entire query fails":                                                                                                              "63642",
	"PG::Connection deprecated forms of methods should forward send_query to send_query_params":                                                                                                     "63642",
	"PG::Connection deprecated forms of methods should forward exec to exec_params":                                                                                                                 "63642",
}

var rubyPGIgnoreList21_1 = blocklist{}
