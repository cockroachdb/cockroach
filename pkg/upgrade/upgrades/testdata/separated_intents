
# Simple case - no resume spans (unlimited intents returned per scan),
# one range, no range local keys.

reset
----

add-range id=3 key=a endkey=g
  a 1
  b 1
  c 1
  d 2
  e 2
  f 2
----

run-migration
----
ok

count-calls
----
barrier: 2
scanInterleavedIntents: 2

pushed-txns
----
1
2

resolved-intents
----
"a"
"b"
"c"
"d"
"e"
"f"

reset
----

# Same case as above, but with use of resume spans. There should be 4
# scanInterleavedIntents requests, 3 for the six range replicates keys, and 1
# for range local keys (which there are none of).

add-range id=3 key=a endkey=g
  a 1
  b 1
  c 1
  d 2
  e 2
  f 2
----

set-max-intent-count
2
----

run-migration
----
ok

count-calls
----
barrier: 2
scanInterleavedIntents: 4

pushed-txns
----
1
1
2
2

resolved-intents
----
"a"
"b"
"c"
"d"
"e"
"f"

reset
----

# Add range local keys, while maintaining the same limit of two intents returned
# per scanInterleavedIntents call. There should be 5 calls to
# scanInterleavedIntents in all - 3 for replicated keys, 2 for range local keys.

add-range id=3 key=a endkey=g
  a 1
  b 1
  c 1
  d 2
  e 2
  f 2
local
  a 4
  b 3
  c 3
----

set-max-intent-count
2
----

run-migration
----
ok

count-calls
----
barrier: 2
scanInterleavedIntents: 5

pushed-txns
----
1
1
2
2
3
3
4

resolved-intents
----
/Local/Range"a"/QueueLastProcessed/"a"
/Local/Range"a"/QueueLastProcessed/"b"
/Local/Range"a"/QueueLastProcessed/"c"
"a"
"b"
"c"
"d"
"e"
"f"

reset
----

# Case where one scanInterleavedIntent request is fired per intent. There are 15
# keys across 2 ranges, so there should be 4 barrier calls (2x per range), and 16
# scanInterleavedIntents calls (1 per intent, 1 for the empty range local keys
# of range 2).

add-range id=1 key=a endkey=g
  a 1
  b 1
  c 1
  d 2
  e 2
  f 2
local
  a 4
  b 3
  c 3
----

add-range id=2 key=g endkey=k
  g 5
  gg 6
  h 7
  hh 8
  i 9
  ii 10
----

set-max-intent-count
1
----

run-migration
----
ok

count-calls
----
barrier: 4
scanInterleavedIntents: 16

pushed-txns
----
1
1
1
2
2
2
3
3
4
5
6
7
8
9
10

resolved-intents
----
/Local/Range"a"/QueueLastProcessed/"a"
/Local/Range"a"/QueueLastProcessed/"b"
/Local/Range"a"/QueueLastProcessed/"c"
"a"
"b"
"c"
"d"
"e"
"f"
"g"
"gg"
"h"
"hh"
"i"
"ii"

reset
----

# Same case as above, but with no resume span usage.

add-range id=1 key=a endkey=g
  a 1
  b 1
  c 1
  d 2
  e 2
  f 2
local
  a 4
  b 3
  c 3
----

add-range id=2 key=g endkey=k
  g 5
  gg 6
  h 7
  hh 8
  i 9
  ii 10
----

set-max-intent-count
0
----

run-migration
----
ok

count-calls
----
barrier: 4
scanInterleavedIntents: 4

pushed-txns
----
1
2
3
4
5
6
7
8
9
10

resolved-intents
----
/Local/Range"a"/QueueLastProcessed/"a"
/Local/Range"a"/QueueLastProcessed/"b"
/Local/Range"a"/QueueLastProcessed/"c"
"a"
"b"
"c"
"d"
"e"
"f"
"g"
"gg"
"h"
"hh"
"i"
"ii"

reset
----

# Take the case above, and add an error injection rate of 33% (1/3). The number
# of calls will go up, but the end result (pushed txns, resolved intents) will
# be the same. count-calls isn't added here as the count itself could be
# possibly non-deterministic.

add-range id=1 key=a endkey=g
  a 1
  b 1
  c 1
  d 2
  e 2
  f 2
local
  a 4
  b 3
  c 3
----

add-range id=2 key=g endkey=k
  g 5
  gg 6
  h 7
  hh 8
  i 9
  ii 10
----

error-per-n-calls
3
----

run-migration
----
ok


pushed-txns
----
1
2
3
4
5
6
7
8
9
10

resolved-intents
----
/Local/Range"a"/QueueLastProcessed/"a"
/Local/Range"a"/QueueLastProcessed/"b"
/Local/Range"a"/QueueLastProcessed/"c"
"a"
"b"
"c"
"d"
"e"
"f"
"g"
"gg"
"h"
"hh"
"i"
"ii"

reset
----

# Take the case above, and add an error injection rate of 100% (1/1). The
# migration should error out and quit gracefully.

add-range id=1 key=a endkey=g
  a 1
  b 1
  c 1
  d 2
  e 2
  f 2
local
  a 4
  b 3
  c 3
----

add-range id=2 key=g endkey=k
  g 5
  gg 6
  h 7
  hh 8
  i 9
  ii 10
----

error-per-n-calls
1
----

run-migration
----
error when invoking Barrier command: injected

pushed-txns
----

resolved-intents
----

reset
----

# Test a range containing timeseries keys only. Its range-local keys should be
# migrated, but not its global keys.

add-range id=1 key=/tsd/a endkey=/tsd/g
  /tsd/a 1
  /tsd/b 1
  /tsd/c 1
  /tsd/d 2
  /tsd/e 2
  /tsd/f 2
local
  a 4
  b 3
  c 3
----

run-migration
----
ok

pushed-txns
----
3
4

resolved-intents
----
/Local/Range/System/tsd/"a"/QueueLastProcessed/"a"
/Local/Range/System/tsd/"a"/QueueLastProcessed/"b"
/Local/Range/System/tsd/"a"/QueueLastProcessed/"c"

count-calls
----
barrier: 1
scanInterleavedIntents: 1

reset
----
