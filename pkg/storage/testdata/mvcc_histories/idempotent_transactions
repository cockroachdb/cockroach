run ok
with t=a k=a
  txn_begin ts=11
  # Lay down an intent.
  put v=first
  # Lay down an intent again with no problem because we're idempotent.
  put v=first
----
>> at end:
txn: "a" meta={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=0} lock=true stat=PENDING rts=11.000000000,0 wto=false gul=0,0
meta: "a"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=0} ts=11.000000000,0 del=false klen=12 vlen=10
data: "a"/11.000000000,0 -> /BYTES/first

# Lay down an intent without increasing the sequence but with a different value.
# Expect an error.
run error
with t=a k=a
  put v=second
----
>> at end:
meta: "a"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=0} ts=11.000000000,0 del=false klen=12 vlen=10
data: "a"/11.000000000,0 -> /BYTES/first
error: (*withstack.withStack:) transaction 00000000-0000-0000-0000-000000000001 with sequence 0 has a different value [0 0 0 0 3 115 101 99 111 110 100] after recomputing from what was written: [0 0 0 0 3 102 105 114 115 116]

run ok
with t=a k=a
  # Lay down a second intent.
  txn_step
  put v=second
  # Replay first intent without writing anything down.
  txn_step n=-1
  put v=first
  # Check the intent meta is still there and its value.
  txn_step
  check_intent
----
meta: "a" -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=1} ts=11.000000000,0 del=false klen=12 vlen=11 ih={{0 /BYTES/first}}
>> at end:
txn: "a" meta={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=1} lock=true stat=PENDING rts=11.000000000,0 wto=false gul=0,0
meta: "a"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=1} ts=11.000000000,0 del=false klen=12 vlen=11 ih={{0 /BYTES/first}}
data: "a"/11.000000000,0 -> /BYTES/second

run error
with t=a k=a
  # Lay down an intent with a lower sequence number to see if it detects missing intents.
  txn_step n=-2
  put v=second
----
>> at end:
txn: "a" meta={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=-1} lock=true stat=PENDING rts=11.000000000,0 wto=false gul=0,0
meta: "a"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=1} ts=11.000000000,0 del=false klen=12 vlen=11 ih={{0 /BYTES/first}}
data: "a"/11.000000000,0 -> /BYTES/second
error: (*withstack.withStack:) transaction 00000000-0000-0000-0000-000000000001 with sequence 1 missing an intent with lower sequence -1

run ok
with t=a k=i
  # On a separate nonexistent key, start an increment.
  txn_step n=3
  increment
  # As long as the sequence is unchanged, replaying the increment doesn't increase the value.
  increment
  increment
  increment
----
inc: current value = 1
inc: current value = 1
inc: current value = 1
inc: current value = 1
>> at end:
txn: "a" meta={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=2} lock=true stat=PENDING rts=11.000000000,0 wto=false gul=0,0
meta: "a"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=1} ts=11.000000000,0 del=false klen=12 vlen=11 ih={{0 /BYTES/first}}
data: "a"/11.000000000,0 -> /BYTES/second
meta: "i"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=2} ts=11.000000000,0 del=false klen=12 vlen=6
data: "i"/11.000000000,0 -> /INT/1

run ok
with t=a k=i
  # Increment previously nonexistent key again.
  txn_step
  increment
  # As long as the sequence is unchanged, replaying the increment doesn't increase the value.
  increment
  increment
  txn_step n=-1
  # Replaying an older increment doesn't increase the value.
  increment
  increment
  increment
----
inc: current value = 2
inc: current value = 2
inc: current value = 2
inc: current value = 1
inc: current value = 1
inc: current value = 1
>> at end:
txn: "a" meta={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=2} lock=true stat=PENDING rts=11.000000000,0 wto=false gul=0,0
meta: "a"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=1} ts=11.000000000,0 del=false klen=12 vlen=11 ih={{0 /BYTES/first}}
data: "a"/11.000000000,0 -> /BYTES/second
meta: "i"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=3} ts=11.000000000,0 del=false klen=12 vlen=6 ih={{2 /INT/1}}
data: "i"/11.000000000,0 -> /INT/2

# Write a key outside of the transaction.
run ok
increment k=i2 ts=10
----
inc: current value = 1
>> at end:
meta: "a"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=1} ts=11.000000000,0 del=false klen=12 vlen=11 ih={{0 /BYTES/first}}
data: "a"/11.000000000,0 -> /BYTES/second
meta: "i"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=3} ts=11.000000000,0 del=false klen=12 vlen=6 ih={{2 /INT/1}}
data: "i"/11.000000000,0 -> /INT/2
data: "i2"/10.000000000,0 -> /INT/1

run ok
with t=a k=i2
  # On a separate existent key, start an increment.
  txn_step n=2
  increment
  # As long as the sequence is unchanged, replaying the increment doesn't increase the value.
  increment
  increment
  increment
----
inc: current value = 2
inc: current value = 2
inc: current value = 2
inc: current value = 2
>> at end:
txn: "a" meta={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=4} lock=true stat=PENDING rts=11.000000000,0 wto=false gul=0,0
meta: "a"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=1} ts=11.000000000,0 del=false klen=12 vlen=11 ih={{0 /BYTES/first}}
data: "a"/11.000000000,0 -> /BYTES/second
meta: "i"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=3} ts=11.000000000,0 del=false klen=12 vlen=6 ih={{2 /INT/1}}
data: "i"/11.000000000,0 -> /INT/2
meta: "i2"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=4} ts=11.000000000,0 del=false klen=12 vlen=6
data: "i2"/11.000000000,0 -> /INT/2
data: "i2"/10.000000000,0 -> /INT/1

run ok
with t=a k=i2
  # Increment previously existent key again.
  txn_step
  increment
  # As long as the sequence is unchanged, replaying the increment doesn't increase the value.
  increment
  increment
  txn_step n=-1
  # Replaying an older increment doesn't increase the value.
  increment
  increment
  increment
----
inc: current value = 3
inc: current value = 3
inc: current value = 3
inc: current value = 2
inc: current value = 2
inc: current value = 2
>> at end:
txn: "a" meta={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=4} lock=true stat=PENDING rts=11.000000000,0 wto=false gul=0,0
meta: "a"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=1} ts=11.000000000,0 del=false klen=12 vlen=11 ih={{0 /BYTES/first}}
data: "a"/11.000000000,0 -> /BYTES/second
meta: "i"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=3} ts=11.000000000,0 del=false klen=12 vlen=6 ih={{2 /INT/1}}
data: "i"/11.000000000,0 -> /INT/2
meta: "i2"/0,0 -> txn={id=00000000 key="a" pri=0.00000000 epo=0 ts=11.000000000,0 min=0,0 seq=5} ts=11.000000000,0 del=false klen=12 vlen=6 ih={{4 /INT/2}}
data: "i2"/11.000000000,0 -> /INT/3
data: "i2"/10.000000000,0 -> /INT/1
