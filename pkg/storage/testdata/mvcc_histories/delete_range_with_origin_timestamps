run ok
with v=abc
  put k=a ts=1
  put k=b ts=1
  put k=c ts=3
----
>> at end:
data: "a"/1.000000000,0 -> /BYTES/abc
data: "b"/1.000000000,0 -> /BYTES/abc
data: "c"/3.000000000,0 -> /BYTES/abc

run error
del_range k=c end=d ts=4 origin_ts=2
----
>> at end:
data: "a"/1.000000000,0 -> /BYTES/abc
data: "b"/1.000000000,0 -> /BYTES/abc
data: "c"/3.000000000,0 -> /BYTES/abc
error: (*kvpb.ConditionFailedError:) OriginTimestamp older than 3.000000000,0

run ok
del_range k=a end=c ts=5 origin_ts=2
----
del_range: "a"-"c" -> deleted 2 key(s)
>> at end:
data: "a"/5.000000000,0 -> {originTs=2.000000000,0}/<empty>
data: "a"/1.000000000,0 -> /BYTES/abc
data: "b"/5.000000000,0 -> {originTs=2.000000000,0}/<empty>
data: "b"/1.000000000,0 -> /BYTES/abc
data: "c"/3.000000000,0 -> /BYTES/abc

# NOTE: there is a subtle behavior demonstrated by this test. Delete range does
# not advance the origin ts if the key was already deleted. This is okay
# because the SQL writer will issue a CPUT to update the origin timestamp
# assigned to the primary key.
run ok
del_range k=a end=d ts=6 origin_ts=4
----
del_range: "a"-"d" -> deleted 1 key(s)
>> at end:
data: "a"/5.000000000,0 -> {originTs=2.000000000,0}/<empty>
data: "a"/1.000000000,0 -> /BYTES/abc
data: "b"/5.000000000,0 -> {originTs=2.000000000,0}/<empty>
data: "b"/1.000000000,0 -> /BYTES/abc
data: "c"/6.000000000,0 -> {originTs=4.000000000,0}/<empty>
data: "c"/3.000000000,0 -> /BYTES/abc
