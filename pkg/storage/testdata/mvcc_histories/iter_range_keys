# Tests range key handling in MVCC iterators.
#
# Sets up following dataset, where x is tombstone, o-o is range key, [] is intent.
#
#  T
#  7             [d7]                    [j7]
#  6                      f6
#  5          o-------x-------o               k5
#  4  x   x       d4          g4
#  3      o--bd3--o   e3  o--fh3--oh3
#  2  a2                      g2
#  1  o------------------ak1------------------o
#     a   b   c   d   e   f   g   h   i   j   k
#
run ok
put_rangekey k=a end=k ts=1 v=ak1
put_rangekey k=b end=d ts=3 v=bd3
put_rangekey k=f end=h ts=3 v=fh3
put_rangekey k=c end=g ts=5 v=
put k=a ts=2 v=a2
del k=a ts=4
del k=b ts=4
put k=d ts=4 v=d4
put k=e ts=3 v=e3
put k=f ts=6 v=f6
put k=g ts=2 v=g2
put k=g ts=4 v=g4
put k=h ts=3 v=h3
put k=k ts=5 v=k5
with t=A
  txn_begin ts=7
  put k=d v=d7
  put k=j v=j7
----
>> at end:
txn: "A" meta={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} lock=true stat=PENDING rts=7.000000000,0 wto=false gul=0,0
rangekey: {b-d}/3.000000000,0 -> /BYTES/bd3
rangekey: {c-g}/5.000000000,0 -> /<empty>
rangekey: {f-h}/3.000000000,0 -> /BYTES/fh3
rangekey: {a-k}/1.000000000,0 -> /BYTES/ak1
data: "a"/4.000000000,0 -> /<empty>
data: "a"/2.000000000,0 -> /BYTES/a2
data: "b"/4.000000000,0 -> /<empty>
meta: "d"/0,0 -> txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true
data: "d"/7.000000000,0 -> /BYTES/d7
data: "d"/4.000000000,0 -> /BYTES/d4
data: "e"/3.000000000,0 -> /BYTES/e3
data: "f"/6.000000000,0 -> /BYTES/f6
data: "g"/4.000000000,0 -> /BYTES/g4
data: "g"/2.000000000,0 -> /BYTES/g2
data: "h"/3.000000000,0 -> /BYTES/h3
meta: "j"/0,0 -> txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true
data: "j"/7.000000000,0 -> /BYTES/j7
data: "k"/5.000000000,0 -> /BYTES/k5

# Iterate across the entire span for all key types, and without intents.
run ok
iter_new types=pointsOnly
iter_seek_ge k=a
iter_scan
----
iter_seek_ge: "a"/4.000000000,0=/<empty>
iter_scan: "a"/4.000000000,0=/<empty>
iter_scan: "a"/2.000000000,0=/BYTES/a2
iter_scan: "b"/4.000000000,0=/<empty>
iter_scan: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true
iter_scan: "d"/7.000000000,0=/BYTES/d7
iter_scan: "d"/4.000000000,0=/BYTES/d4
iter_scan: "e"/3.000000000,0=/BYTES/e3
iter_scan: "f"/6.000000000,0=/BYTES/f6
iter_scan: "g"/4.000000000,0=/BYTES/g4
iter_scan: "g"/2.000000000,0=/BYTES/g2
iter_scan: "h"/3.000000000,0=/BYTES/h3
iter_scan: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true
iter_scan: "j"/7.000000000,0=/BYTES/j7
iter_scan: "k"/5.000000000,0=/BYTES/k5
iter_scan: .

run ok
iter_new types=pointsWithRanges
iter_seek_ge k=a
iter_scan
----
iter_seek_ge: "a"/4.000000000,0=/<empty> {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: "a"/4.000000000,0=/<empty> {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: "a"/2.000000000,0=/BYTES/a2 {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "e"/3.000000000,0=/BYTES/e3 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "f"/6.000000000,0=/BYTES/f6 {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "g"/4.000000000,0=/BYTES/g4 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "g"/2.000000000,0=/BYTES/g2 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "h"/3.000000000,0=/BYTES/h3 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "j"/7.000000000,0=/BYTES/j7 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "k"/5.000000000,0=/BYTES/k5
iter_scan: .

run ok
iter_new types=pointsAndRanges
iter_seek_ge k=a
iter_scan
----
iter_seek_ge: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: "a"/4.000000000,0=/<empty> {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: "a"/2.000000000,0=/BYTES/a2 {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "e"/3.000000000,0=/BYTES/e3 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "f"/6.000000000,0=/BYTES/f6 {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "g"/4.000000000,0=/BYTES/g4 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "g"/2.000000000,0=/BYTES/g2 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "h"/3.000000000,0=/BYTES/h3 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "j"/7.000000000,0=/BYTES/j7 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "k"/5.000000000,0=/BYTES/k5
iter_scan: .

run ok
iter_new types=rangesOnly
iter_seek_ge k=a
iter_scan
----
iter_seek_ge: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: .

run ok
iter_new kind=keys types=pointsAndRanges
iter_seek_ge k=a
iter_scan
----
iter_seek_ge: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: "a"/4.000000000,0=/<empty> {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: "a"/2.000000000,0=/BYTES/a2 {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "e"/3.000000000,0=/BYTES/e3 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "f"/6.000000000,0=/BYTES/f6 {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "g"/4.000000000,0=/BYTES/g4 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "g"/2.000000000,0=/BYTES/g2 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "h"/3.000000000,0=/BYTES/h3 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "j"/7.000000000,0=/BYTES/j7 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "k"/5.000000000,0=/BYTES/k5
iter_scan: .

# And do the same in reverse.
run ok
iter_new types=pointsOnly
iter_seek_lt k=z
iter_scan reverse
----
iter_seek_lt: "k"/5.000000000,0=/BYTES/k5
iter_scan: "k"/5.000000000,0=/BYTES/k5
iter_scan: "j"/7.000000000,0=/BYTES/j7
iter_scan: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true
iter_scan: "h"/3.000000000,0=/BYTES/h3
iter_scan: "g"/2.000000000,0=/BYTES/g2
iter_scan: "g"/4.000000000,0=/BYTES/g4
iter_scan: "f"/6.000000000,0=/BYTES/f6
iter_scan: "e"/3.000000000,0=/BYTES/e3
iter_scan: "d"/4.000000000,0=/BYTES/d4
iter_scan: "d"/7.000000000,0=/BYTES/d7
iter_scan: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true
iter_scan: "b"/4.000000000,0=/<empty>
iter_scan: "a"/2.000000000,0=/BYTES/a2
iter_scan: "a"/4.000000000,0=/<empty>
iter_scan: .

run ok
iter_new types=pointsWithRanges
iter_seek_lt k=z
iter_scan reverse
----
iter_seek_lt: "k"/5.000000000,0=/BYTES/k5
iter_scan: "k"/5.000000000,0=/BYTES/k5
iter_scan: "j"/7.000000000,0=/BYTES/j7 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "h"/3.000000000,0=/BYTES/h3 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "g"/2.000000000,0=/BYTES/g2 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "g"/4.000000000,0=/BYTES/g4 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "f"/6.000000000,0=/BYTES/f6 {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "e"/3.000000000,0=/BYTES/e3 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: "a"/2.000000000,0=/BYTES/a2 {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: "a"/4.000000000,0=/<empty> {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: .

run ok
iter_new types=pointsAndRanges
iter_seek_lt k=z
iter_scan reverse
----
iter_seek_lt: "k"/5.000000000,0=/BYTES/k5
iter_scan: "k"/5.000000000,0=/BYTES/k5
iter_scan: "j"/7.000000000,0=/BYTES/j7 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "h"/3.000000000,0=/BYTES/h3 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "g"/2.000000000,0=/BYTES/g2 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "g"/4.000000000,0=/BYTES/g4 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "f"/6.000000000,0=/BYTES/f6 {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "e"/3.000000000,0=/BYTES/e3 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: "a"/2.000000000,0=/BYTES/a2 {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: "a"/4.000000000,0=/<empty> {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: .

run ok
iter_new types=rangesOnly
iter_seek_lt k=z
iter_scan reverse
----
iter_seek_lt: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: .

run ok
iter_new kind=keys types=pointsAndRanges
iter_seek_lt k=z
iter_scan reverse
----
iter_seek_lt: "k"/5.000000000,0=/BYTES/k5
iter_scan: "k"/5.000000000,0=/BYTES/k5
iter_scan: "j"/7.000000000,0=/BYTES/j7 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "h"/3.000000000,0=/BYTES/h3 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_scan: "g"/2.000000000,0=/BYTES/g2 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "g"/4.000000000,0=/BYTES/g4 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "f"/6.000000000,0=/BYTES/f6 {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_scan: "e"/3.000000000,0=/BYTES/e3 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_scan: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_scan: "a"/2.000000000,0=/BYTES/a2 {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: "a"/4.000000000,0=/<empty> {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_scan: .

# Seek to d, iterate a few times, then reverse direction and iterate beyond seek point.
run ok
iter_new types=pointsAndRanges
iter_seek_ge k=d
iter_next
iter_next
iter_next
iter_next
iter_prev
iter_prev
iter_prev
iter_prev
iter_prev
iter_prev
----
iter_seek_ge: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next: "e"/3.000000000,0=/BYTES/e3 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_prev: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]

# Do a few seeks around an intent/point/range.
#
# TODO(erikgrinaker): Is it correct/desirable that seeking to d@8 surfaces the
# range key alone first, but seeking to d@7 lands directly on the point key?
run ok
iter_new types=pointsAndRanges
iter_seek_ge k=d
iter_next
iter_seek_ge k=d ts=8
iter_next
iter_seek_ge k=d ts=7
iter_seek_ge k=d ts=5
iter_next
iter_seek_ge k=d ts=4
----
iter_seek_ge: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_ge: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_ge: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_ge: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_ge: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]

run ok
iter_new types=pointsAndRanges
iter_seek_lt k=e
iter_seek_lt k=d ts=4
iter_seek_lt k=d ts=7
iter_prev
iter_seek_lt k=d
----
iter_seek_lt: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_lt: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_lt: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_lt: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]

# Do the same, but switch direction immediately.
run ok
iter_new types=pointsAndRanges
iter_seek_ge k=d
iter_prev
iter_seek_ge k=d ts=8
iter_prev
iter_prev
iter_seek_ge k=d ts=7
iter_seek_ge k=d ts=5
iter_prev
iter_seek_ge k=d ts=4
----
iter_seek_ge: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_seek_ge: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_ge: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_ge: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_ge: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]

run ok
iter_new types=pointsAndRanges
iter_seek_lt k=e
iter_next
iter_seek_lt k=d ts=4
iter_next
iter_seek_lt k=d ts=7
iter_next
iter_seek_lt k=d
iter_next
----
iter_seek_lt: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next: "e"/3.000000000,0=/BYTES/e3 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_lt: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next: "d"/4.000000000,0=/BYTES/d4 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_lt: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_lt: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_next: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]

# Check that switching direction past an intent will yield the right range key
# for the intent. Regression test for intentInterleavingIter, in the case where
# the internal iterator is positioned on a different range key than the intent
# iter (with IterKeyTypePointsWithRanges). We also reverse seek to the intent,
# which must surface the correct range key too.
run ok
iter_new types=pointsWithRanges
iter_seek_ge k=d
iter_prev
iter_next
iter_next
iter_prev
iter_prev
----
iter_seek_ge: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_next: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]

run ok
iter_new types=pointsWithRanges
iter_seek_lt k=d ts=7
iter_prev
----
iter_seek_lt: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_prev: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]

# Test NextKey() without and with intents/range keys, and with some seeks.
run ok
iter_new kind=keys types=pointsAndRanges
iter_seek_ge k=a
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
----
iter_seek_ge: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_next_key: "a"/4.000000000,0=/<empty> {a-b}=[1.000000000,0=/BYTES/ak1]
iter_next_key: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_next_key: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_next_key: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_next_key: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next_key: "d"/7.000000000,0=/BYTES/d7 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next_key: "e"/3.000000000,0=/BYTES/e3 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next_key: {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: "f"/6.000000000,0=/BYTES/f6 {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: "g"/4.000000000,0=/BYTES/g4 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_next_key: "h"/3.000000000,0=/BYTES/h3 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_next_key: "j"/7.000000000,0=/BYTES/j7 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_next_key: "k"/5.000000000,0=/BYTES/k5
iter_next_key: .

run ok
iter_new types=pointsAndRanges
iter_seek_ge k=a
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
----
iter_seek_ge: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_next_key: "a"/4.000000000,0=/<empty> {a-b}=[1.000000000,0=/BYTES/ak1]
iter_next_key: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_next_key: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_next_key: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_next_key: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next_key: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next_key: "e"/3.000000000,0=/BYTES/e3 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next_key: {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: "f"/6.000000000,0=/BYTES/f6 {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: "g"/4.000000000,0=/BYTES/g4 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_next_key: "h"/3.000000000,0=/BYTES/h3 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_next_key: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {h-k}=[1.000000000,0=/BYTES/ak1]
iter_next_key: "k"/5.000000000,0=/BYTES/k5
iter_next_key: .

run ok
iter_new types=pointsWithRanges
iter_seek_ge k=a
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
----
iter_seek_ge: "a"/4.000000000,0=/<empty> {a-b}=[1.000000000,0=/BYTES/ak1]
iter_next_key: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_next_key: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next_key: "e"/3.000000000,0=/BYTES/e3 {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next_key: "f"/6.000000000,0=/BYTES/f6 {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: "g"/4.000000000,0=/BYTES/g4 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: "h"/3.000000000,0=/BYTES/h3 {h-k}=[1.000000000,0=/BYTES/ak1]
iter_next_key: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {h-k}=[1.000000000,0=/BYTES/ak1]
iter_next_key: "k"/5.000000000,0=/BYTES/k5
iter_next_key: .

run ok
iter_new types=pointsOnly
iter_seek_ge k=a
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
----
iter_seek_ge: "a"/4.000000000,0=/<empty>
iter_next_key: "b"/4.000000000,0=/<empty>
iter_next_key: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true
iter_next_key: "e"/3.000000000,0=/BYTES/e3
iter_next_key: "f"/6.000000000,0=/BYTES/f6
iter_next_key: "g"/4.000000000,0=/BYTES/g4
iter_next_key: "h"/3.000000000,0=/BYTES/h3
iter_next_key: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true
iter_next_key: "k"/5.000000000,0=/BYTES/k5
iter_next_key: .

run ok
iter_new types=rangesOnly
iter_seek_ge k=a
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
iter_next_key
----
iter_seek_ge: {a-b}=[1.000000000,0=/BYTES/ak1]
iter_next_key: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_next_key: {c-d}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_next_key: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next_key: {f-g}=[5.000000000,0=/<empty> 3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_next_key: .

# Test NextKey() during seeks.
run ok
iter_new types=pointsAndRanges
iter_seek_ge k=g ts=2
iter_next_key
iter_seek_ge k=d
iter_next_key
----
iter_seek_ge: "g"/2.000000000,0=/BYTES/g2 {g-h}=[3.000000000,0=/BYTES/fh3 1.000000000,0=/BYTES/ak1]
iter_next_key: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_seek_ge: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_next_key: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]

# Test SeekIntentGE both with and without intents and range keys.
run ok
iter_new types=pointsAndRanges
iter_seek_intent_ge k=b txn=A
iter_seek_intent_ge k=d txn=A
iter_seek_intent_ge k=i txn=A
iter_seek_intent_ge k=j txn=A
iter_seek_intent_ge k=k txn=A
----
iter_seek_intent_ge: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {h-k}=[1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: "k"/5.000000000,0=/BYTES/k5

run ok
iter_new kind=keys types=pointsAndRanges
iter_seek_intent_ge k=b txn=A
iter_seek_intent_ge k=d txn=A
iter_seek_intent_ge k=i txn=A
iter_seek_intent_ge k=j txn=A
iter_seek_intent_ge k=k txn=A
----
iter_seek_intent_ge: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: "k"/5.000000000,0=/BYTES/k5

run ok
iter_new types=pointsOnly
iter_seek_intent_ge k=b txn=A
iter_seek_intent_ge k=d txn=A
iter_seek_intent_ge k=i txn=A
iter_seek_intent_ge k=j txn=A
iter_seek_intent_ge k=k txn=A
----
iter_seek_intent_ge: "b"/4.000000000,0=/<empty>
iter_seek_intent_ge: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true
iter_seek_intent_ge: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true
iter_seek_intent_ge: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true
iter_seek_intent_ge: "k"/5.000000000,0=/BYTES/k5

run ok
iter_new types=pointsWithRanges
iter_seek_intent_ge k=b txn=A
iter_seek_intent_ge k=d txn=A
iter_seek_intent_ge k=i txn=A
iter_seek_intent_ge k=j txn=A
iter_seek_intent_ge k=k txn=A
----
iter_seek_intent_ge: "b"/4.000000000,0=/<empty> {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: "d"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {h-k}=[1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: "j"/0,0=txn={id=00000000 key=/Min pri=0.00000000 epo=0 ts=7.000000000,0 min=0,0 seq=0} ts=7.000000000,0 del=false klen=12 vlen=7 mergeTs=<nil> txnDidNotUpdateMeta=true {h-k}=[1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: "k"/5.000000000,0=/BYTES/k5

run ok
iter_new types=rangesOnly
iter_seek_intent_ge k=b txn=A
iter_seek_intent_ge k=d txn=A
iter_seek_intent_ge k=i txn=A
iter_seek_intent_ge k=j txn=A
iter_seek_intent_ge k=k txn=A
----
iter_seek_intent_ge: {b-c}=[3.000000000,0=/BYTES/bd3 1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: {d-f}=[5.000000000,0=/<empty> 1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: {h-k}=[1.000000000,0=/BYTES/ak1]
iter_seek_intent_ge: .
