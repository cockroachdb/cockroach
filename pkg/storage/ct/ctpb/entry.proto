// Copyright 2018 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License.

syntax = "proto3";
package cockroach.storage.ctupdate;
option go_package = "ctpb";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

import "util/hlc/timestamp.proto";

message Entry {
  option (gogoproto.goproto_stringer) = false;

  int64 epoch = 1;
  util.hlc.Timestamp closed_timestamp = 2 [(gogoproto.nullable) = false];
  bool full = 3;
  map<int32, int64> mlai = 4 [(gogoproto.castkey) = "github.com/cockroachdb/cockroach/pkg/roachpb.RangeID", (gogoproto.customname) = "MLAI"];
}

message Reaction {
  repeated int32 Requested = 1 [(gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.RangeID"];
}

service ClosedTimestamp {
  rpc Get(stream Reaction) returns (stream Entry) { }
}
