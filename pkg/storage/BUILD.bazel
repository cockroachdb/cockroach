load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "storage",
    srcs = [
        "array_32bit.go",
        "array_64bit.go",
        "batch.go",
        "disk_map.go",
        "doc.go",
        "enable_cc.cc",
        "engine.go",
        "engine_key.go",
        "error.go",
        "file_util.go",
        "in_mem.go",
        "intent_interleaving_iter.go",
        "intent_reader_writer.go",
        "multi_iterator.go",
        "mvcc.go",
        "mvcc_incremental_iterator.go",
        "mvcc_logical_ops.go",
        "pebble.go",
        "pebble_batch.go",
        "pebble_file_registry.go",
        "pebble_iterator.go",
        "pebble_merge.go",
        "pebble_mvcc_scanner.go",
        "row_counter.go",
        "slice.go",
        "slice_go1.9.go",
        "sst_info.go",
        "sst_iterator.go",
        "sst_writer.go",
        "stacks.go",
        "temp_dir.go",
        "temp_engine.go",
    ],
    # List out all the c-dependencies pkg/storage depends on.
    cdeps = [
        "@cockroach//c-deps:libroach",
    ],
    cgo = True,

    # Pin the clinkopts, we don't have to link libroach directly (which gazelle
    # would auto-generate through the cgo tags if left unpinned. Those linker
    # directives are implicitly defined by listing out the appropriate
    # c-dependencies above.
    #
    # keep
    clinkopts = select({
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "-lm",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "-lm",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "-lrt -lm -lpthread",
            "-lrt -lpthread",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "-lshlwapi -lrpcrt4",
        ],
        "//conditions:default": [],
    }),
    # We do the same for the include directives. By defining the appropriate
    # c-dependencies above, bazel determines the right ones automagically.
    #
    # keep
    cppopts = [],
    importpath = "github.com/cockroachdb/cockroach/pkg/storage",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/base",
        "//pkg/clusterversion",
        "//pkg/keys",
        "//pkg/kv/kvserver/concurrency/lock",
        "//pkg/kv/kvserver/diskmap",
        "//pkg/kv/kvserver/observedts",
        "//pkg/roachpb",
        "//pkg/settings",
        "//pkg/settings/cluster",
        "//pkg/storage/enginepb",
        "//pkg/storage/fs",
        "//pkg/util",
        "//pkg/util/bufalloc",
        "//pkg/util/encoding",
        "//pkg/util/envutil",
        "//pkg/util/hlc",
        "//pkg/util/humanizeutil",
        "//pkg/util/iterutil",
        "//pkg/util/log",
        "//pkg/util/protoutil",
        "//pkg/util/stop",
        "//pkg/util/syncutil",
        "//pkg/util/timeutil",
        "//pkg/util/uuid",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_cockroachdb_errors//oserror",
        "@com_github_cockroachdb_logtags//:logtags",
        "@com_github_cockroachdb_pebble//:pebble",
        "@com_github_cockroachdb_pebble//bloom",
        "@com_github_cockroachdb_pebble//sstable",
        "@com_github_cockroachdb_pebble//vfs",
        "@com_github_cockroachdb_redact//:redact",
        "@com_github_dustin_go_humanize//:go-humanize",
        "@com_github_gogo_protobuf//proto",
    ],
)

go_test(
    name = "storage_test",
    size = "medium",
    srcs = [
        "batch_test.go",
        "bench_pebble_test.go",
        "bench_test.go",
        "disk_map_test.go",
        "engine_key_test.go",
        "engine_test.go",
        "file_util_test.go",
        "intent_interleaving_iter_test.go",
        "intent_reader_writer_test.go",
        "main_test.go",
        "multi_iterator_test.go",
        "mvcc_history_test.go",
        "mvcc_incremental_iterator_test.go",
        "mvcc_logical_ops_test.go",
        "mvcc_stats_test.go",
        "mvcc_test.go",
        "pebble_file_registry_test.go",
        "pebble_mvcc_scanner_test.go",
        "pebble_test.go",
        "sst_info_test.go",
        "sst_iterator_test.go",
        "sst_writer_test.go",
        "temp_dir_test.go",
        "temp_engine_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":storage"],
    deps = [
        "//pkg/base",
        "//pkg/keys",
        "//pkg/kv/kvserver/concurrency/lock",
        "//pkg/kv/kvserver/diskmap",
        "//pkg/roachpb",
        "//pkg/settings/cluster",
        "//pkg/storage/enginepb",
        "//pkg/storage/fs",
        "//pkg/testutils",
        "//pkg/testutils/skip",
        "//pkg/testutils/zerofields",
        "//pkg/util",
        "//pkg/util/caller",
        "//pkg/util/encoding",
        "//pkg/util/fileutil",
        "//pkg/util/hlc",
        "//pkg/util/iterutil",
        "//pkg/util/leaktest",
        "//pkg/util/log",
        "//pkg/util/protoutil",
        "//pkg/util/randutil",
        "//pkg/util/shuffle",
        "//pkg/util/stop",
        "//pkg/util/timeutil",
        "//pkg/util/uint128",
        "//pkg/util/uuid",
        "@com_github_cockroachdb_datadriven//:datadriven",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_cockroachdb_errors//oserror",
        "@com_github_cockroachdb_pebble//:pebble",
        "@com_github_cockroachdb_pebble//vfs",
        "@com_github_kr_pretty//:pretty",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_protobuf//proto",
        "@org_golang_x_sync//errgroup",
    ],
)
