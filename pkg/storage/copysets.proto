// Copyright 2018 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License.

syntax = "proto3";
package cockroach.storage;
option go_package = "storage";

import "gogoproto/gogo.proto";

// AllCopysets contains the map between replication factor to
// its copysets.
message AllCopysets {
  // Map from replication factors to copysets.
  map<int32, Copysets> by_rf = 1 [(gogoproto.nullable) = false];
}

// Copysets contains copy sets for a particular replication factor.
// If copysets based rebalancing is enabled, the replicas of a range will
// be contained within a copyset. Each store belongs to a single copyset.
// Copyset based rebalancing significantly improves failure tolerance.
message Copysets {
  // Map from CopysetID to a Copyset (set of stores in the copyset).
  map<int32, Copyset> sets = 1 [(gogoproto.nullable) = false,
      (gogoproto.castkey) = "github.com/cockroachdb/cockroach/pkg/roachpb.CopysetID"];
  // Replication factor of copy sets.
  int32 replication_factor = 2;
}

// Copyset contains the set of stores belonging to the same copyset.
message Copyset{
  // Map of StoreIDs.
  map<int32, bool> ids = 1 [
      (gogoproto.castkey) = "github.com/cockroachdb/cockroach/pkg/roachpb.StoreID"];
}
