# The MVCC merge operator is non-transactional and stores data in the
# intent, so that subsequent reads diregard the MVCC values stored on
# the same key.
#
# This is a very unique feature and is currently only used in CockroachDB's
# built-in timeseries database.

run ok
with t=A
  begin_txn  ts=11
  mvcc_put   k=a v=abc
  commit_txn
----
txn: "A" meta={id=00000000 key=/Min pri=0.00000000 epo=0 ts=0.000000011,0 min=0.000000000,0 seq=1} rw=true stat=COMMITTED orig=0.000000011,0 max=0.000000000,0 rts=0.000000000,0 wto=false int=1
data: "k/a"/0.000000011,0 -> /BYTES/abc

# Merge appends data in the intent and ignores the regular k/v pairs.

run trace ok
mvcc_merge k=a v=def ts=22
mvcc_merge k=a v=ghi ts=22
----
>> mvcc_merge k=a v=def ts=22
meta: "k/a"/0.000000000,0 -> txn={<nil>} ts=0.000000000,0 del=false klen=0 vlen=0 raw=/BYTES/def
data: "k/a"/0.000000011,0 -> /BYTES/abc
>> mvcc_merge k=a v=ghi ts=22
meta: "k/a"/0.000000000,0 -> txn={<nil>} ts=0.000000000,0 del=false klen=0 vlen=0 raw=/BYTES/defghi
data: "k/a"/0.000000011,0 -> /BYTES/abc

# After a merge, only the data in the intent is every used.

run ok
with t=A
  begin_txn ts=33
  mvcc_get k=a
----
get: "k/a" -> /BYTES/defghi
txn: "A" meta={id=00000000 key=/Min pri=0.00000000 epo=0 ts=0.000000033,0 min=0.000000000,0 seq=1} rw=true stat=PENDING orig=0.000000033,0 max=0.000000000,0 rts=0.000000000,0 wto=false
