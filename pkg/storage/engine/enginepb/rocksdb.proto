// Copyright 2016 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License.

syntax = "proto3";
package cockroach.storage.engine.enginepb;
option go_package = "enginepb";

import "util/hlc/timestamp.proto";
import "gogoproto/gogo.proto";

// SSTUserProperties contains the user-added properties of a single sstable.
message SSTUserProperties {
    string path = 1;
    // ts_min is the minimum mvcc timestamp present in this sstable.
    util.hlc.Timestamp ts_min = 2;
    // ts_max is the maximum mvcc timestamp present in this sstable.
    util.hlc.Timestamp ts_max = 3;
}

// SSTUserPropertiesCollection contains the user-added properties of every
// sstable in a RocksDB instance.
message SSTUserPropertiesCollection {
    repeated SSTUserProperties sst = 1 [(gogoproto.nullable) = false];
    string error = 2;
}

// HistogramData holds the relevant metrics returned by a call to
// `rocksdb::Statistics::histogramData()`.
message HistogramData {
  double mean = 1;
  double p50 = 2;
  double p95 = 3;
  double p99 = 4;
  double max = 5;
  uint64 count = 6;
  uint64 sum = 7;
}

// TickersAndHistograms holds maps from ticker/histogram name to its value for
// all stats measured by a `rocksdb::Statistics` object.
message TickersAndHistograms {
  map<string, uint64> tickers = 1;
  map<string, HistogramData> histograms = 2;
}
