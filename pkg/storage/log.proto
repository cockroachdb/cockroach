// Copyright 2017 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License.

syntax = "proto3";
package cockroach.storage;
option go_package = "storage";

import "cockroach/pkg/roachpb/metadata.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

enum RangeLogEventType {
  // Split is the event type recorded when a range splits.
  SPLIT = 0;
  // Add is the event type recorded when a range adds a new replica.
  ADD = 1;
  // Add is the event type recorded when a range removed an existing replica.
  REMOVE = 2;
}

message RangeLogEvent {
  message Info {
      roachpb.RangeDescriptor updated_desc = 1;
      roachpb.RangeDescriptor new_desc = 2;
      roachpb.ReplicaDescriptor added_replica = 3;
      roachpb.ReplicaDescriptor removed_replica = 4;
  }

  google.protobuf.Timestamp timestamp = 1 [
      (gogoproto.nullable) = false,
      (gogoproto.stdtime) = true
  ];
  int64 range_id = 2 [
    (gogoproto.customname) = "RangeID",
    (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.RangeID"
  ];
  int32 store_id = 3 [
    (gogoproto.customname) = "StoreID",
    (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.StoreID"
  ];
  RangeLogEventType event_type = 4;
  int64 other_range_id = 5 [
    (gogoproto.customname) = "OtherRangeID",
    (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.RangeID"
  ];
  Info info = 6;
}
