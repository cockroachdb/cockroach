#!/usr/bin/env bash

set -eu -o pipefail

if [ $# -ne 2 ]; then
    echo "Usage: $0 <type> <package>"
    exit 1
fi

which go_generics > /dev/null || (echo "Could not find go_generics, to install run: \"go get -u github.com/mmatczuk/go_generics/cmd/go_generics\""; exit 1)
which go_merge    > /dev/null || (echo "Could not find go_merge, to install run: \"go get -u github.com/mmatczuk/go_generics/cmd/go_merge\""; exit 1)

TYPE=$1
PKG=$2
INTERNAL_PKG=$(dirname "$0")/internal

# Make filename prefix from type. Lower case and strip pointer.
PREFIX=$(echo ${TYPE} | awk '{print tolower($0)}' | sed 's/*//')

# Generate files.
go_merge -o /dev/stdout ${INTERNAL_PKG}/contract.go ${INTERNAL_PKG}/interval_btree.tmpl.go      | go_generics -i /dev/stdin -t T=${TYPE} -p ${PKG} -o ${PREFIX}_interval_btree.go
go_merge -o /dev/stdout ${INTERNAL_PKG}/contract.go ${INTERNAL_PKG}/interval_btree_test.tmpl.go | go_generics -i /dev/stdin -t T=${TYPE} -p ${PKG} -o ${PREFIX}_interval_btree_test.go

# Add code generation comment to beginning of files.
GEN_COMMENT="// Code generated by go_generics. DO NOT EDIT.\n"
echo -e "$(echo ${GEN_COMMENT}; cat ${PREFIX}_interval_btree.go)" > ${PREFIX}_interval_btree.go
echo -e "$(echo ${GEN_COMMENT}; cat ${PREFIX}_interval_btree_test.go)" > ${PREFIX}_interval_btree_test.go

# Crlfmt. go_generics might re-order imports.
crlfmt -w ${PREFIX}_interval_btree.go      > /dev/null
crlfmt -w ${PREFIX}_interval_btree_test.go > /dev/null
