# Test cases where storeAdmissionStats only populate admittedCount. This is
# the the case where the requests are not providing any byte information.

init
----

prep-admission-stats admitted=0
----
{admittedCount:0 admittedWithBytesCount:0 admittedBytes:0 ingestedBytes:0 ingestedIntoL0Bytes:0}

# Even though above the threshold, the first 60 ticks don't limit the tokens.
set-state l0-bytes=10000 l0-added=1000 l0-files=21 l0-sublevels=21
----
admitted: 0, bytes: 10000, added-bytes: 1000,
smoothed-removed: 0, smoothed-byte-tokens: 0, smoothed-bytes-unaccounted-per-work: 0,
tokens: unlimited, tokens-allocated: 0
tick: 0, setAvailableIOTokens: unlimited
tick: 1, setAvailableIOTokens: unlimited
tick: 2, setAvailableIOTokens: unlimited
tick: 3, setAvailableIOTokens: unlimited
tick: 4, setAvailableIOTokens: unlimited
tick: 5, setAvailableIOTokens: unlimited
tick: 6, setAvailableIOTokens: unlimited
tick: 7, setAvailableIOTokens: unlimited
tick: 8, setAvailableIOTokens: unlimited
tick: 9, setAvailableIOTokens: unlimited
tick: 10, setAvailableIOTokens: unlimited
tick: 11, setAvailableIOTokens: unlimited
tick: 12, setAvailableIOTokens: unlimited
tick: 13, setAvailableIOTokens: unlimited
tick: 14, setAvailableIOTokens: unlimited

prep-admission-stats admitted=10000
----
{admittedCount:10000 admittedWithBytesCount:0 admittedBytes:0 ingestedBytes:0 ingestedIntoL0Bytes:0}

# Delta added is 100,000. The l0-bytes are the same, so compactions removed
# 100,000 bytes. Smoothed removed by compactions is 50,000. Each admitted is
# expected to add 10 bytes. We want to add only 25,000 (half the smoothed
# removed), but smoothing it drops the tokens to 12,500.
set-state l0-bytes=10000 l0-added=101000 l0-files=21 l0-sublevels=21
----
admitted: 10000, bytes: 10000, added-bytes: 101000,
smoothed-removed: 50000, smoothed-byte-tokens: 12500, smoothed-bytes-unaccounted-per-work: 10,
tokens: 12500, tokens-allocated: 0
store-request-estimates: fractionOfIngestIntoL0: 0.50, workByteAddition: 10
tick: 0, setAvailableIOTokens: 834
tick: 1, setAvailableIOTokens: 834
tick: 2, setAvailableIOTokens: 834
tick: 3, setAvailableIOTokens: 834
tick: 4, setAvailableIOTokens: 834
tick: 5, setAvailableIOTokens: 834
tick: 6, setAvailableIOTokens: 834
tick: 7, setAvailableIOTokens: 834
tick: 8, setAvailableIOTokens: 834
tick: 9, setAvailableIOTokens: 834
tick: 10, setAvailableIOTokens: 834
tick: 11, setAvailableIOTokens: 834
tick: 12, setAvailableIOTokens: 834
tick: 13, setAvailableIOTokens: 834
tick: 14, setAvailableIOTokens: 824

prep-admission-stats admitted=20000
----
{admittedCount:20000 admittedWithBytesCount:0 admittedBytes:0 ingestedBytes:0 ingestedIntoL0Bytes:0}

# Same delta as previous but smoothing bumps up the tokens to 25,000.
set-state l0-bytes=10000 l0-added=201000 l0-files=21 l0-sublevels=21
----
admitted: 20000, bytes: 10000, added-bytes: 201000,
smoothed-removed: 75000, smoothed-byte-tokens: 25000, smoothed-bytes-unaccounted-per-work: 10,
tokens: 25000, tokens-allocated: 0
store-request-estimates: fractionOfIngestIntoL0: 0.50, workByteAddition: 10
tick: 0, setAvailableIOTokens: 1667
tick: 1, setAvailableIOTokens: 1667
tick: 2, setAvailableIOTokens: 1667
tick: 3, setAvailableIOTokens: 1667
tick: 4, setAvailableIOTokens: 1667
tick: 5, setAvailableIOTokens: 1667
tick: 6, setAvailableIOTokens: 1667
tick: 7, setAvailableIOTokens: 1667
tick: 8, setAvailableIOTokens: 1667
tick: 9, setAvailableIOTokens: 1667
tick: 10, setAvailableIOTokens: 1667
tick: 11, setAvailableIOTokens: 1667
tick: 12, setAvailableIOTokens: 1667
tick: 13, setAvailableIOTokens: 1667
tick: 14, setAvailableIOTokens: 1662

# No delta. This used to trigger an overflow bug.
set-state l0-bytes=10000 l0-added=201000 l0-files=21 l0-sublevels=21
----
admitted: 20000, bytes: 10000, added-bytes: 201000,
smoothed-removed: 37500, smoothed-byte-tokens: 21875, smoothed-bytes-unaccounted-per-work: 10,
tokens: 21875, tokens-allocated: 0
store-request-estimates: fractionOfIngestIntoL0: 0.50, workByteAddition: 10
tick: 0, setAvailableIOTokens: 1459
tick: 1, setAvailableIOTokens: 1459
tick: 2, setAvailableIOTokens: 1459
tick: 3, setAvailableIOTokens: 1459
tick: 4, setAvailableIOTokens: 1459
tick: 5, setAvailableIOTokens: 1459
tick: 6, setAvailableIOTokens: 1459
tick: 7, setAvailableIOTokens: 1459
tick: 8, setAvailableIOTokens: 1459
tick: 9, setAvailableIOTokens: 1459
tick: 10, setAvailableIOTokens: 1459
tick: 11, setAvailableIOTokens: 1459
tick: 12, setAvailableIOTokens: 1459
tick: 13, setAvailableIOTokens: 1459
tick: 14, setAvailableIOTokens: 1449

prep-admission-stats admitted=30000
----
{admittedCount:30000 admittedWithBytesCount:0 admittedBytes:0 ingestedBytes:0 ingestedIntoL0Bytes:0}

# l0-sublevels drops below threshold. We calculate the smoothed values, but
# don't limit the tokens.
#
# TODO: Remove this temp comment for reviewers. All of the earlier test cases
# are effectively unchanged when switching from work tokens to byte tokens.
# That is, smoothed-byte-tokens/smoothed-bytes-unaccounted-per-work =
# smoothed-admit. Except for this one, where there is a small logic change.
# Instead of using what was admitted to smooth out the work tokens, we are
# using the bytes removed by compactions from L0 to smooth the byte tokens.
set-state l0-bytes=10000 l0-added=501000 l0-files=21 l0-sublevels=20
----
admitted: 30000, bytes: 10000, added-bytes: 501000,
smoothed-removed: 168750, smoothed-byte-tokens: 160937, smoothed-bytes-unaccounted-per-work: 20,
tokens: unlimited, tokens-allocated: 0
store-request-estimates: fractionOfIngestIntoL0: 0.50, workByteAddition: 20
tick: 0, setAvailableIOTokens: unlimited
tick: 1, setAvailableIOTokens: unlimited
tick: 2, setAvailableIOTokens: unlimited
tick: 3, setAvailableIOTokens: unlimited
tick: 4, setAvailableIOTokens: unlimited
tick: 5, setAvailableIOTokens: unlimited
tick: 6, setAvailableIOTokens: unlimited
tick: 7, setAvailableIOTokens: unlimited
tick: 8, setAvailableIOTokens: unlimited
tick: 9, setAvailableIOTokens: unlimited
tick: 10, setAvailableIOTokens: unlimited
tick: 11, setAvailableIOTokens: unlimited
tick: 12, setAvailableIOTokens: unlimited
tick: 13, setAvailableIOTokens: unlimited
tick: 14, setAvailableIOTokens: unlimited

# Test cases with more information in storeAdmissionStats.
init
----

prep-admission-stats admitted=0
----
{admittedCount:0 admittedWithBytesCount:0 admittedBytes:0 ingestedBytes:0 ingestedIntoL0Bytes:0}

set-state l0-bytes=1000 l0-added=1000 l0-files=21 l0-sublevels=21
----
admitted: 0, bytes: 1000, added-bytes: 1000,
smoothed-removed: 0, smoothed-byte-tokens: 0, smoothed-bytes-unaccounted-per-work: 0,
tokens: unlimited, tokens-allocated: 0
tick: 0, setAvailableIOTokens: unlimited
tick: 1, setAvailableIOTokens: unlimited
tick: 2, setAvailableIOTokens: unlimited
tick: 3, setAvailableIOTokens: unlimited
tick: 4, setAvailableIOTokens: unlimited
tick: 5, setAvailableIOTokens: unlimited
tick: 6, setAvailableIOTokens: unlimited
tick: 7, setAvailableIOTokens: unlimited
tick: 8, setAvailableIOTokens: unlimited
tick: 9, setAvailableIOTokens: unlimited
tick: 10, setAvailableIOTokens: unlimited
tick: 11, setAvailableIOTokens: unlimited
tick: 12, setAvailableIOTokens: unlimited
tick: 13, setAvailableIOTokens: unlimited
tick: 14, setAvailableIOTokens: unlimited

# L0 will see an addition of 200,000 bytes. 180,000 bytes were mentioned by
# the admitted requests, but 30,000 went into levels below L0. So 150,000 are
# accounted for.
prep-admission-stats admitted=10 admitted-bytes=180000 ingested-bytes=50000 ingested-into-l0=20000
----
{admittedCount:10 admittedWithBytesCount:0 admittedBytes:180000 ingestedBytes:50000 ingestedIntoL0Bytes:20000}

set-state l0-bytes=1000 l0-added=201000 l0-files=21 l0-sublevels=21
----
admitted: 10, bytes: 1000, added-bytes: 201000,
smoothed-removed: 100000, smoothed-byte-tokens: 25000, smoothed-bytes-unaccounted-per-work: 5000,
tokens: 25000, tokens-allocated: 0
store-request-estimates: fractionOfIngestIntoL0: 0.45, workByteAddition: 5000
tick: 0, setAvailableIOTokens: 1667
tick: 1, setAvailableIOTokens: 1667
tick: 2, setAvailableIOTokens: 1667
tick: 3, setAvailableIOTokens: 1667
tick: 4, setAvailableIOTokens: 1667
tick: 5, setAvailableIOTokens: 1667
tick: 6, setAvailableIOTokens: 1667
tick: 7, setAvailableIOTokens: 1667
tick: 8, setAvailableIOTokens: 1667
tick: 9, setAvailableIOTokens: 1667
tick: 10, setAvailableIOTokens: 1667
tick: 11, setAvailableIOTokens: 1667
tick: 12, setAvailableIOTokens: 1667
tick: 13, setAvailableIOTokens: 1667
tick: 14, setAvailableIOTokens: 1662

# L0 will see an addition of 20,000 bytes, all of which are accounted for.
prep-admission-stats admitted=20 admitted-bytes=200000 ingested-bytes=50000 ingested-into-l0=20000
----
{admittedCount:20 admittedWithBytesCount:0 admittedBytes:200000 ingestedBytes:50000 ingestedIntoL0Bytes:20000}

set-state l0-bytes=1000 l0-added=221000 l0-files=21 l0-sublevels=21
----
admitted: 20, bytes: 1000, added-bytes: 221000,
smoothed-removed: 60000, smoothed-byte-tokens: 27500, smoothed-bytes-unaccounted-per-work: 2500,
tokens: 27500, tokens-allocated: 0
store-request-estimates: fractionOfIngestIntoL0: 0.45, workByteAddition: 2500
tick: 0, setAvailableIOTokens: 1834
tick: 1, setAvailableIOTokens: 1834
tick: 2, setAvailableIOTokens: 1834
tick: 3, setAvailableIOTokens: 1834
tick: 4, setAvailableIOTokens: 1834
tick: 5, setAvailableIOTokens: 1834
tick: 6, setAvailableIOTokens: 1834
tick: 7, setAvailableIOTokens: 1834
tick: 8, setAvailableIOTokens: 1834
tick: 9, setAvailableIOTokens: 1834
tick: 10, setAvailableIOTokens: 1834
tick: 11, setAvailableIOTokens: 1834
tick: 12, setAvailableIOTokens: 1834
tick: 13, setAvailableIOTokens: 1834
tick: 14, setAvailableIOTokens: 1824

# L0 will see an addition of 20,000 bytes, but we think we have added 100,000
# bytes to L0. We don't let unaccounted bytes become negative.
prep-admission-stats admitted=30 admitted-bytes=300000 ingested-bytes=50000 ingested-into-l0=20000
----
{admittedCount:30 admittedWithBytesCount:0 admittedBytes:300000 ingestedBytes:50000 ingestedIntoL0Bytes:20000}

set-state l0-bytes=1000 l0-added=241000 l0-files=21 l0-sublevels=21
----
admitted: 30, bytes: 1000, added-bytes: 241000,
smoothed-removed: 40000, smoothed-byte-tokens: 23750, smoothed-bytes-unaccounted-per-work: 1250,
tokens: 23750, tokens-allocated: 0
store-request-estimates: fractionOfIngestIntoL0: 0.45, workByteAddition: 1250
tick: 0, setAvailableIOTokens: 1584
tick: 1, setAvailableIOTokens: 1584
tick: 2, setAvailableIOTokens: 1584
tick: 3, setAvailableIOTokens: 1584
tick: 4, setAvailableIOTokens: 1584
tick: 5, setAvailableIOTokens: 1584
tick: 6, setAvailableIOTokens: 1584
tick: 7, setAvailableIOTokens: 1584
tick: 8, setAvailableIOTokens: 1584
tick: 9, setAvailableIOTokens: 1584
tick: 10, setAvailableIOTokens: 1584
tick: 11, setAvailableIOTokens: 1584
tick: 12, setAvailableIOTokens: 1584
tick: 13, setAvailableIOTokens: 1584
tick: 14, setAvailableIOTokens: 1574
