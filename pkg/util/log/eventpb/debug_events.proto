// Copyright 2021 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

syntax = "proto3";
package cockroach.util.log.eventpb;
option go_package = "github.com/cockroachdb/cockroach/pkg/util/log/eventpb";

import "gogoproto/gogo.proto";
import "util/log/logpb/event.proto";

// Category: Debugging events
// Channel: OPS
//
// Events in this category pertain to debugging operations performed by
// operators or (more commonly) Cockroach Labs employees. These operations can
// e.g. directly access and mutate internal state, breaking system invariants.

// Notes to CockroachDB maintainers: refer to doc.go at the package
// level for more details. Beware that JSON compatibility rules apply
// here, not protobuf.
// *Really look at doc.go before modifying this file.*

// CommonDebugEventDetails contains the fields common to all debugging events.
message CommonDebugEventDetails {
  // The node ID where the event originated.
  int32 node_id = 1 [(gogoproto.customname) = "NodeID", (gogoproto.jsontag) = ",omitempty"];
  // The user which performed the operation.
  string user = 2 [(gogoproto.jsontag) = ",omitempty"];
}

// DebugSendKvBatch is recorded when an arbitrary KV BatchRequest is submitted
// to the cluster via the `debug send-kv-batch` CLI command.
message DebugSendKvBatch {
  CommonEventDetails common = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "", (gogoproto.embed) = true];
  CommonDebugEventDetails debug = 2 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "", (gogoproto.embed) = true];
  string batch_request = 3 [(gogoproto.jsontag) = ",omitempty"];
}

// DebugRecoverReplica is recorded when unsafe loss of quorum recovery is performed.
message DebugRecoverReplica {
  CommonEventDetails common = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "", (gogoproto.embed) = true];
  CommonDebugEventDetails debug = 2 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "", (gogoproto.embed) = true];
  int64 range_id = 3 [(gogoproto.customname) = "RangeID"];
  int64 store_id = 4 [(gogoproto.customname) = "StoreID"];
  int32 survivor_replica_id = 5 [(gogoproto.customname) = "SurvivorReplicaID"];
  int32 updated_replica_id = 6 [(gogoproto.customname) = "UpdatedReplicaID"];
  string start_key = 7;
  string end_key = 8;
}
