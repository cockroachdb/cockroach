// Copyright 2021 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

syntax = "proto3";
package cockroach.util.log.eventpb;
option go_package = "eventpb";

import "gogoproto/gogo.proto";
import "util/log/eventpb/events.proto";

// Category: Health events
// Channel: HEALTH
//
// Events in this category pertain to the health of one or more servers.
//
// They are relative to a particular SQL tenant.
// In a multi-tenant setup, copies of these events are
// preserved in each tenant's own system.eventlog table.

// Notes to CockroachDB maintainers: refer to doc.go at the package
// level for more details. Beware that JSON compatibility rules apply
// here, not protobuf.
// *Really look at doc.go before modifying this file.*

message RuntimeStats {
  CommonEventDetails common = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "", (gogoproto.embed) = true];
  // The process RSS. Expressed as mebibytes.
  string rss = 2 [(gogoproto.customname) = "RSS", (gogoproto.jsontag) = ",omitempty"];
  // The number of goroutines.
  string num_goroutines = 3 [(gogoproto.jsontag) = ",omitempty"];
  // The stack system memory used. Expressed as mebibytes.
  string stack_sys_memory = 4 [(gogoproto.jsontag) = ",omitempty"];
  // The ratio of the mebibytes of memory allocated by Go to the total mebibytes of memory allocated by Go but not released.
  string go_memory_ratio = 5 [(gogoproto.jsontag) = ",omitempty"];
  // If the Go memory statistics are stale, the stale message.
  string stale_message = 6 [(gogoproto.jsontag) = ",omitempty"];
  // The amount of heap fragmentation. Expressed as mebibytes.
  string heap_fragmentation = 7 [(gogoproto.jsontag) = ",omitempty"];
  // The amount of heap reserved. Expressed as mebibytes.
  string heap_reserved = 8 [(gogoproto.jsontag) = ",omitempty"];
  // The amount of heap released. Expressed as mebibytes.
  string heap_released = 9 [(gogoproto.jsontag) = ",omitempty"];
  // The ratio of the mebibytes of memory allocated outside of Go to the total mebibytes of memory allocated outside of Go but not released.
  string cgo_memory_ratio = 10 [(gogoproto.customname) = "CGoMemoryRatio", (gogoproto.jsontag) = ",omitempty"];
  // The total number of calls outside of Go over time. Expressed as operations per second.
  string cgo_rate = 11 [(gogoproto.customname) = "CGoRate", (gogoproto.jsontag) = ",omitempty"];
  // The ratio of user CPU percentage to system CPU percentage.
  string cpu_rate = 12 [(gogoproto.customname) = "CPURatio", (gogoproto.jsontag) = ",omitempty"];
  // The GC pause percentage.
  string gc_pause_ratio = 13 [(gogoproto.customname) = "GCPauseRatio", (gogoproto.jsontag) = ",omitempty"];
  // The total number of GC runs.
  string gc_count = 14 [(gogoproto.customname) = "GCCount", (gogoproto.jsontag) = ",omitempty"];
  // The ratio of kilobytes received to kilobytes sent, on all network interfaces since this process started.
  string host_net_bytes_ratio = 15 [(gogoproto.jsontag) = ",omitempty"];
}
