// Copyright 2016 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

syntax = "proto3";
package cockroach.util.log;
option go_package = "log";

import "gogoproto/gogo.proto";

enum Severity {
  UNKNOWN = 0;
  INFO = 1;
  WARNING = 2;
  ERROR = 3;
  FATAL = 4;
  // NONE is used to specify when no messages
  // should be printed to the log file or stderr.
  NONE = 5;
  // DEFAULT is the end sentinel. It is used during command-line
  // handling to indicate that another value should be replaced instead
  // (depending on which command is being run); see cli/flags.go for
  // details.
  DEFAULT = 6;
}

// Entry represents a cockroach structured log entry.
message Entry {
  Severity severity = 1;
  // Nanoseconds since the epoch.
  int64 time = 2;
  int64 goroutine = 6;
  string file = 3;
  int64 line = 4;
  string message = 5;

  // tags contains the context tags available in the context where the
  // entry was created.
  string tags = 7;

  // counter is an entry counter, meant for use in audit logs as an
  // instrument against log repudiation.
  // See: https://en.wikipedia.org/wiki/Non-repudiation
  //
  // It is incremented for every use of the logger where the entry was
  // produced.
  uint64 counter = 8;

  // redactable is true if the message and tags fields include markers
  // to delineate sensitive information. In that case, confidentiality
  // can be obtained by only stripping away the data within this
  // marker. If redactable is false or unknown, the message should be
  // considered to only contain sensitive information, and should be
  // stripped away completely for confidentiality.
  bool redactable = 9;
}

// A FileDetails holds all of the particulars that can be parsed by the name of
// a log file.
message FileDetails {
  string program = 1;
  string host = 2;
  string user_name = 3;
  reserved 4;
  int64 time = 5;
  int64 pid = 6 [(gogoproto.customname) = "PID"];
}

message FileInfo {
  string name = 1;
  int64 size_bytes = 2;
  int64 mod_time_nanos = 3;
  FileDetails details = 4 [(gogoproto.nullable) = false];
}
