// Code generated by "stringer -type=VersionKey"; DO NOT EDIT.

package cluster

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Version2_0-0]
	_ = x[Version2_1-1]
	_ = x[VersionCascadingZoneConfigs-2]
	_ = x[VersionLoadSplits-3]
	_ = x[VersionExportStorageWorkload-4]
	_ = x[VersionLazyTxnRecord-5]
	_ = x[VersionSequencedReads-6]
	_ = x[VersionUnreplicatedRaftTruncatedState-7]
	_ = x[VersionCreateStats-8]
	_ = x[VersionDirectImport-9]
	_ = x[VersionSideloadedStorageNoReplicaID-10]
	_ = x[VersionPushTxnToInclusive-11]
	_ = x[VersionSnapshotsWithoutLog-12]
	_ = x[Version19_1-13]
	_ = x[VersionStart19_2-14]
	_ = x[VersionQueryTxnTimestamp-15]
	_ = x[VersionStickyBit-16]
	_ = x[VersionParallelCommits-17]
}

const _VersionKey_name = "Version2_0Version2_1VersionCascadingZoneConfigsVersionLoadSplitsVersionExportStorageWorkloadVersionLazyTxnRecordVersionSequencedReadsVersionUnreplicatedRaftTruncatedStateVersionCreateStatsVersionDirectImportVersionSideloadedStorageNoReplicaIDVersionPushTxnToInclusiveVersionSnapshotsWithoutLogVersion19_1VersionStart19_2VersionQueryTxnTimestampVersionStickyBitVersionParallelCommits"

var _VersionKey_index = [...]uint16{0, 10, 20, 47, 64, 92, 112, 133, 170, 188, 207, 242, 267, 293, 304, 320, 344, 360, 382}

func (i VersionKey) String() string {
	if i < 0 || i >= VersionKey(len(_VersionKey_index)-1) {
		return "VersionKey(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VersionKey_name[_VersionKey_index[i]:_VersionKey_index[i+1]]
}
