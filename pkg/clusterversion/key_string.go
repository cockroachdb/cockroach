// Code generated by "stringer"; DO NOT EDIT.

package clusterversion

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[V21_1-0]
	_ = x[Start21_1PLUS-1]
	_ = x[Start21_2-2]
	_ = x[DatabaseRoleSettings-3]
	_ = x[TenantUsageTable-4]
	_ = x[SQLInstancesTable-5]
	_ = x[NewRetryableRangefeedErrors-6]
	_ = x[AlterSystemWebSessionsCreateIndexes-7]
	_ = x[SeparatedIntentsMigration-8]
	_ = x[PostSeparatedIntentsMigration-9]
	_ = x[RetryJobsWithExponentialBackoff-10]
	_ = x[AutoSpanConfigReconciliationJob-11]
	_ = x[DefaultPrivileges-12]
	_ = x[ZonesTableForSecondaryTenants-13]
	_ = x[UseKeyEncodeForHashShardedIndexes-14]
	_ = x[DatabasePlacementPolicy-15]
	_ = x[GeneratedAsIdentity-16]
	_ = x[OnUpdateExpressions-17]
	_ = x[SpanConfigurationsTable-18]
	_ = x[BoundedStaleness-19]
	_ = x[DateAndIntervalStyle-20]
	_ = x[TenantUsageSingleConsumptionColumn-21]
	_ = x[SQLStatsTables-22]
	_ = x[SQLStatsCompactionScheduledJob-23]
	_ = x[V21_2-24]
	_ = x[Start22_1-25]
	_ = x[TargetBytesAvoidExcess-26]
	_ = x[AvoidDrainingNames-27]
	_ = x[DrainingNamesMigration-28]
	_ = x[TraceIDDoesntImplyStructuredRecording-29]
	_ = x[AlterSystemTableStatisticsAddAvgSizeCol-30]
	_ = x[AlterSystemStmtDiagReqs-31]
	_ = x[MVCCAddSSTable-32]
	_ = x[InsertPublicSchemaNamespaceEntryOnRestore-33]
	_ = x[UnsplitRangesInAsyncGCJobs-34]
	_ = x[ValidateGrantOption-35]
	_ = x[PebbleFormatBlockPropertyCollector-36]
	_ = x[ProbeRequest-37]
	_ = x[SelectRPCsTakeTracingInfoInband-38]
	_ = x[PreSeedTenantSpanConfigs-39]
	_ = x[SeedTenantSpanConfigs-40]
	_ = x[PublicSchemasWithDescriptors-41]
}

const _Key_name = "V21_1Start21_1PLUSStart21_2DatabaseRoleSettingsTenantUsageTableSQLInstancesTableNewRetryableRangefeedErrorsAlterSystemWebSessionsCreateIndexesSeparatedIntentsMigrationPostSeparatedIntentsMigrationRetryJobsWithExponentialBackoffAutoSpanConfigReconciliationJobDefaultPrivilegesZonesTableForSecondaryTenantsUseKeyEncodeForHashShardedIndexesDatabasePlacementPolicyGeneratedAsIdentityOnUpdateExpressionsSpanConfigurationsTableBoundedStalenessDateAndIntervalStyleTenantUsageSingleConsumptionColumnSQLStatsTablesSQLStatsCompactionScheduledJobV21_2Start22_1TargetBytesAvoidExcessAvoidDrainingNamesDrainingNamesMigrationTraceIDDoesntImplyStructuredRecordingAlterSystemTableStatisticsAddAvgSizeColAlterSystemStmtDiagReqsMVCCAddSSTableInsertPublicSchemaNamespaceEntryOnRestoreUnsplitRangesInAsyncGCJobsValidateGrantOptionPebbleFormatBlockPropertyCollectorProbeRequestSelectRPCsTakeTracingInfoInbandPreSeedTenantSpanConfigsSeedTenantSpanConfigsPublicSchemasWithDescriptors"

var _Key_index = [...]uint16{0, 5, 18, 27, 47, 63, 80, 107, 142, 167, 196, 227, 258, 275, 304, 337, 360, 379, 398, 421, 437, 457, 491, 505, 535, 540, 549, 571, 589, 611, 648, 687, 710, 724, 765, 791, 810, 844, 856, 887, 911, 932, 960}

func (i Key) String() string {
	if i < 0 || i >= Key(len(_Key_index)-1) {
		return "Key(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Key_name[_Key_index[i]:_Key_index[i+1]]
}
