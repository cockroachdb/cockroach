// Code generated by "stringer"; DO NOT EDIT.

package clusterversion

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[V21_2-0]
	_ = x[Start22_1-1]
	_ = x[PebbleFormatBlockPropertyCollector-2]
	_ = x[PublicSchemasWithDescriptors-3]
	_ = x[EnsureSpanConfigReconciliation-4]
	_ = x[EnsureSpanConfigSubscription-5]
	_ = x[EnableSpanConfigStore-6]
	_ = x[UnsafeLossOfQuorumRecoveryRangeLog-7]
	_ = x[AlterSystemProtectedTimestampAddColumn-8]
	_ = x[EnableProtectedTimestampsForTenant-9]
	_ = x[DeleteCommentsWithDroppedIndexes-10]
	_ = x[RemoveIncompatibleDatabasePrivileges-11]
	_ = x[AddRaftAppliedIndexTermMigration-12]
	_ = x[PostAddRaftAppliedIndexTermMigration-13]
	_ = x[DontProposeWriteTimestampForLeaseTransfers-14]
	_ = x[EnablePebbleFormatVersionBlockProperties-15]
	_ = x[MVCCIndexBackfiller-16]
	_ = x[EnableLeaseHolderRemoval-17]
	_ = x[LooselyCoupledRaftLogTruncation-18]
	_ = x[ChangefeedIdleness-19]
	_ = x[EnableDeclarativeSchemaChanger-20]
	_ = x[RowLevelTTL-21]
	_ = x[PebbleFormatSplitUserKeysMarked-22]
	_ = x[EnableNewStoreRebalancer-23]
	_ = x[ClusterLocksVirtualTable-24]
	_ = x[AutoStatsTableSettings-25]
	_ = x[SuperRegions-26]
	_ = x[EnableNewChangefeedOptions-27]
	_ = x[SpanCountTable-28]
	_ = x[PreSeedSpanCountTable-29]
	_ = x[SeedSpanCountTable-30]
	_ = x[V22_1-31]
	_ = x[Start22_2-32]
	_ = x[LocalTimestamps-33]
	_ = x[PebbleFormatSplitUserKeysMarkedCompacted-34]
	_ = x[EnsurePebbleFormatVersionRangeKeys-35]
	_ = x[EnablePebbleFormatVersionRangeKeys-36]
	_ = x[TrigramInvertedIndexes-37]
	_ = x[RemoveGrantPrivilege-38]
	_ = x[MVCCRangeTombstones-39]
	_ = x[UpgradeSequenceToBeReferencedByID-40]
	_ = x[SampledStmtDiagReqs-41]
	_ = x[AddSSTableTombstones-42]
	_ = x[SystemPrivilegesTable-43]
	_ = x[EnablePredicateProjectionChangefeed-44]
	_ = x[AlterSystemSQLInstancesAddLocality-45]
	_ = x[SystemExternalConnectionsTable-46]
	_ = x[AlterSystemStatementStatisticsAddIndexRecommendations-47]
	_ = x[RoleIDSequence-48]
	_ = x[AddSystemUserIDColumn-49]
	_ = x[UsersHaveIDs-50]
	_ = x[SetUserIDNotNull-51]
	_ = x[SQLSchemaTelemetryScheduledJobs-52]
	_ = x[SchemaChangeSupportsCreateFunction-53]
}

const _Key_name = "V21_2Start22_1PebbleFormatBlockPropertyCollectorPublicSchemasWithDescriptorsEnsureSpanConfigReconciliationEnsureSpanConfigSubscriptionEnableSpanConfigStoreUnsafeLossOfQuorumRecoveryRangeLogAlterSystemProtectedTimestampAddColumnEnableProtectedTimestampsForTenantDeleteCommentsWithDroppedIndexesRemoveIncompatibleDatabasePrivilegesAddRaftAppliedIndexTermMigrationPostAddRaftAppliedIndexTermMigrationDontProposeWriteTimestampForLeaseTransfersEnablePebbleFormatVersionBlockPropertiesMVCCIndexBackfillerEnableLeaseHolderRemovalLooselyCoupledRaftLogTruncationChangefeedIdlenessEnableDeclarativeSchemaChangerRowLevelTTLPebbleFormatSplitUserKeysMarkedEnableNewStoreRebalancerClusterLocksVirtualTableAutoStatsTableSettingsSuperRegionsEnableNewChangefeedOptionsSpanCountTablePreSeedSpanCountTableSeedSpanCountTableV22_1Start22_2LocalTimestampsPebbleFormatSplitUserKeysMarkedCompactedEnsurePebbleFormatVersionRangeKeysEnablePebbleFormatVersionRangeKeysTrigramInvertedIndexesRemoveGrantPrivilegeMVCCRangeTombstonesUpgradeSequenceToBeReferencedByIDSampledStmtDiagReqsAddSSTableTombstonesSystemPrivilegesTableEnablePredicateProjectionChangefeedAlterSystemSQLInstancesAddLocalitySystemExternalConnectionsTableAlterSystemStatementStatisticsAddIndexRecommendationsRoleIDSequenceAddSystemUserIDColumnUsersHaveIDsSetUserIDNotNullSQLSchemaTelemetryScheduledJobsSchemaChangeSupportsCreateFunction"

var _Key_index = [...]uint16{0, 5, 14, 48, 76, 106, 134, 155, 189, 227, 261, 293, 329, 361, 397, 439, 479, 498, 522, 553, 571, 601, 612, 643, 667, 691, 713, 725, 751, 765, 786, 804, 809, 818, 833, 873, 907, 941, 963, 983, 1002, 1035, 1054, 1074, 1095, 1130, 1164, 1194, 1247, 1261, 1282, 1294, 1310, 1341, 1375}

func (i Key) String() string {
	if i < 0 || i >= Key(len(_Key_index)-1) {
		return "Key(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Key_name[_Key_index[i]:_Key_index[i+1]]
}
