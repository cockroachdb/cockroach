// Code generated by "stringer"; DO NOT EDIT.

package clusterversion

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[V21_2-0]
	_ = x[Start22_1-1]
	_ = x[PebbleFormatBlockPropertyCollector-2]
	_ = x[ProbeRequest-3]
	_ = x[EnsureSpanConfigReconciliation-4]
	_ = x[EnsureSpanConfigSubscription-5]
	_ = x[EnableSpanConfigStore-6]
	_ = x[SCRAMAuthentication-7]
	_ = x[UnsafeLossOfQuorumRecoveryRangeLog-8]
	_ = x[AlterSystemProtectedTimestampAddColumn-9]
	_ = x[EnableProtectedTimestampsForTenant-10]
	_ = x[DeleteCommentsWithDroppedIndexes-11]
	_ = x[RemoveIncompatibleDatabasePrivileges-12]
	_ = x[AddRaftAppliedIndexTermMigration-13]
	_ = x[PostAddRaftAppliedIndexTermMigration-14]
	_ = x[DontProposeWriteTimestampForLeaseTransfers-15]
	_ = x[EnablePebbleFormatVersionBlockProperties-16]
	_ = x[MVCCIndexBackfiller-17]
	_ = x[EnableLeaseHolderRemoval-18]
	_ = x[LooselyCoupledRaftLogTruncation-19]
	_ = x[ChangefeedIdleness-20]
	_ = x[EnableDeclarativeSchemaChanger-21]
	_ = x[RowLevelTTL-22]
	_ = x[PebbleFormatSplitUserKeysMarked-23]
	_ = x[EnableNewStoreRebalancer-24]
	_ = x[ClusterLocksVirtualTable-25]
	_ = x[AutoStatsTableSettings-26]
	_ = x[SuperRegions-27]
	_ = x[EnableNewChangefeedOptions-28]
	_ = x[SpanCountTable-29]
	_ = x[PreSeedSpanCountTable-30]
	_ = x[SeedSpanCountTable-31]
	_ = x[V22_1-32]
	_ = x[Start22_2-33]
	_ = x[LocalTimestamps-34]
	_ = x[PebbleFormatSplitUserKeysMarkedCompacted-35]
	_ = x[EnsurePebbleFormatVersionRangeKeys-36]
	_ = x[EnablePebbleFormatVersionRangeKeys-37]
	_ = x[TrigramInvertedIndexes-38]
	_ = x[RemoveGrantPrivilege-39]
	_ = x[MVCCRangeTombstones-40]
	_ = x[UpgradeSequenceToBeReferencedByID-41]
	_ = x[SampledStmtDiagReqs-42]
	_ = x[AddSSTableTombstones-43]
	_ = x[SystemPrivilegesTable-44]
	_ = x[EnablePredicateProjectionChangefeed-45]
	_ = x[AlterSystemSQLInstancesAddLocality-46]
	_ = x[SystemExternalConnectionsTable-47]
	_ = x[AlterSystemStatementStatisticsAddIndexRecommendations-48]
	_ = x[RoleIDSequence-49]
	_ = x[AddSystemUserIDColumn-50]
	_ = x[UsersHaveIDs-51]
	_ = x[SetUserIDNotNull-52]
	_ = x[SQLSchemaTelemetryScheduledJobs-53]
}

const _Key_name = "V21_2Start22_1PebbleFormatBlockPropertyCollectorProbeRequestEnsureSpanConfigReconciliationEnsureSpanConfigSubscriptionEnableSpanConfigStoreSCRAMAuthenticationUnsafeLossOfQuorumRecoveryRangeLogAlterSystemProtectedTimestampAddColumnEnableProtectedTimestampsForTenantDeleteCommentsWithDroppedIndexesRemoveIncompatibleDatabasePrivilegesAddRaftAppliedIndexTermMigrationPostAddRaftAppliedIndexTermMigrationDontProposeWriteTimestampForLeaseTransfersEnablePebbleFormatVersionBlockPropertiesMVCCIndexBackfillerEnableLeaseHolderRemovalLooselyCoupledRaftLogTruncationChangefeedIdlenessEnableDeclarativeSchemaChangerRowLevelTTLPebbleFormatSplitUserKeysMarkedEnableNewStoreRebalancerClusterLocksVirtualTableAutoStatsTableSettingsSuperRegionsEnableNewChangefeedOptionsSpanCountTablePreSeedSpanCountTableSeedSpanCountTableV22_1Start22_2LocalTimestampsPebbleFormatSplitUserKeysMarkedCompactedEnsurePebbleFormatVersionRangeKeysEnablePebbleFormatVersionRangeKeysTrigramInvertedIndexesRemoveGrantPrivilegeMVCCRangeTombstonesUpgradeSequenceToBeReferencedByIDSampledStmtDiagReqsAddSSTableTombstonesSystemPrivilegesTableEnablePredicateProjectionChangefeedAlterSystemSQLInstancesAddLocalitySystemExternalConnectionsTableAlterSystemStatementStatisticsAddIndexRecommendationsRoleIDSequenceAddSystemUserIDColumnUsersHaveIDsSetUserIDNotNullSQLSchemaTelemetryScheduledJobs"

var _Key_index = [...]uint16{0, 5, 14, 48, 60, 90, 118, 139, 158, 192, 230, 264, 296, 332, 364, 400, 442, 482, 501, 525, 556, 574, 604, 615, 646, 670, 694, 716, 728, 754, 768, 789, 807, 812, 821, 836, 876, 910, 944, 966, 986, 1005, 1038, 1057, 1077, 1098, 1133, 1167, 1197, 1250, 1264, 1285, 1297, 1313, 1344}

func (i Key) String() string {
	if i < 0 || i >= Key(len(_Key_index)-1) {
		return "Key(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Key_name[_Key_index[i]:_Key_index[i+1]]
}
