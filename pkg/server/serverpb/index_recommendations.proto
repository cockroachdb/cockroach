// Copyright 2022 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

syntax = "proto2";
package cockroach.sql;
option go_package = "github.com/cockroachdb/cockroach/pkg/server/serverpb";

import "gogoproto/gogo.proto";

message IndexRecommendation {
  enum RecommendationType {
    DROP_UNUSED = 0;
  }
  // TableID is the ID of the table this index is created on. This is same as
  // descpb.TableID and is unique within the cluster.
  optional uint32 table_id = 1 [(gogoproto.nullable) = false,
    (gogoproto.customname) = "TableID", (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.TableID"];
  // IndexID is the ID of the index within the scope of the given table.
  optional uint32 index_id = 2 [(gogoproto.nullable) = false,
    (gogoproto.customname) = "IndexID", (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.IndexID" ];

  // Type of recommendation for the index.
  optional RecommendationType type = 3 [(gogoproto.nullable) = false];
  // Reason for our recommendation type.
  optional string reason = 4 [(gogoproto.nullable) = false];
}
