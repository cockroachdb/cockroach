// Copyright 2020 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

syntax = "proto3";
package cockroach.server.serverpb;
option go_package = "serverpb";

import "clusterversion/cluster_version.proto";

// ValidateTargetClusterVersion is used to verify that the target node is
// running a binary that's able to support the specified cluster version.
message ValidateTargetClusterVersionRequest {
   clusterversion.ClusterVersion cluster_version = 1;
}

// ValidateTargetClusterVersionResponse is the response to a
// ValidateTargetClusterVersionRequest.
message ValidateTargetClusterVersionResponse {
}

// BumpClusterVersionRequest is used to inform a given node of a cluster version
// bump.
message BumpClusterVersionRequest {
   clusterversion.ClusterVersion cluster_version = 1;
}

// BumpClusterVersionResponse is the response to an BumpClusterVersionRequest.
message BumpClusterVersionResponse { }

service Migration {
   // ValidateTargetClusterVersion is used to verify that the target node is
   // running a binary that's able to support the specified cluster version.
   // Specifically:
   //
   //   node's minimum supported version <= version <= node's binary version
   rpc ValidateTargetClusterVersion(ValidateTargetClusterVersionRequest) returns (ValidateTargetClusterVersionResponse) { }

   // BumpClusterVersion is used to inform a given node of a cluster version
   // bump. The node is responsible for durably persisting the message and
   // enabling the corresponding version gates.
   //
   // This RPC is typically used together with ValidateTargetClusterVersion,
   // which checks to see that all nodes in the cluster are running binaries
   // that would be able to support the intended version bump.
   rpc BumpClusterVersion(BumpClusterVersionRequest) returns (BumpClusterVersionResponse) { }
}
