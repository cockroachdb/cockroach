load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "serverpb",
    srcs = [
        "admin.go",
        "admin.pb.go",
        "admin.pb.gw.go",
        "authentication.pb.go",
        "authentication.pb.gw.go",
        "init.pb.go",
        "migration.pb.go",
        "status.go",
        "status.pb.go",
        "status.pb.gw.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/server/serverpb",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/build",
        "//pkg/clusterversion",
        "//pkg/config/zonepb",
        "//pkg/gossip",
        "//pkg/jobs/jobspb",
        "//pkg/kv/kvserver/kvserverpb",
        "//pkg/kv/kvserver/liveness/livenesspb",
        "//pkg/roachpb",
        "//pkg/server/diagnosticspb",
        "//pkg/server/status/statuspb",
        "//pkg/sql/catalog/descpb",
        "//pkg/storage/enginepb",
        "//pkg/ts/catalog",
        "//pkg/util",
        "//pkg/util/errorutil",
        "//pkg/util/log/logpb",
        "//pkg/util/metric",
        "//pkg/util/timeutil",
        "//pkg/util/uuid",
        "//vendor/github.com/gogo/protobuf/proto",
        "//vendor/github.com/gogo/protobuf/sortkeys",
        "//vendor/github.com/gogo/protobuf/types",
        "//vendor/github.com/golang/protobuf/descriptor",
        "//vendor/github.com/golang/protobuf/proto",
        "//vendor/github.com/grpc-ecosystem/grpc-gateway/runtime",
        "//vendor/github.com/grpc-ecosystem/grpc-gateway/utilities",
        "//vendor/go.etcd.io/etcd/raft/v3/raftpb",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/grpclog",
        "//vendor/google.golang.org/grpc/status",
    ],
)

go_test(
    name = "serverpb_test",
    srcs = ["admin_test.go"],
    embed = [":serverpb"],
    deps = ["//vendor/github.com/stretchr/testify/assert"],
)
