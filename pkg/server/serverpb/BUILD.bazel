load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "serverpb",
    srcs = [
        "admin.go",
        "admin.pb.gw.go",
        "authentication.pb.gw.go",
        "status.go",
        "status.pb.gw.go",
    ],
    embed = [":serverpb_go_proto"],
    importpath = "github.com/cockroachdb/cockroach/pkg/server/serverpb",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/roachpb",
        "//pkg/util/errorutil",
        "//pkg/util/syncutil",
        "//pkg/util/timeutil",
        "//vendor/github.com/golang/protobuf/descriptor",
        "//vendor/github.com/golang/protobuf/proto",
        "//vendor/github.com/grpc-ecosystem/grpc-gateway/runtime",
        "//vendor/github.com/grpc-ecosystem/grpc-gateway/utilities",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/grpclog",
        "//vendor/google.golang.org/grpc/status",
    ],
)

go_test(
    name = "serverpb_test",
    srcs = [
        "admin_test.go",
        "status_test.go",
    ],
    embed = [":serverpb"],
    deps = [
        "//pkg/roachpb",
        "//pkg/util/timeutil",
        "//vendor/github.com/stretchr/testify/assert",
    ],
)

proto_library(
    name = "serverpb_proto",
    srcs = [
        "admin.proto",
        "authentication.proto",
        "init.proto",
        "migration.proto",
        "status.proto",
    ],
    strip_import_prefix = "/pkg",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/build:build_proto",
        "//pkg/clusterversion:clusterversion_proto",
        "//pkg/config/zonepb:zonepb_proto",
        "//pkg/gossip:gossip_proto",
        "//pkg/jobs/jobspb:jobspb_proto",
        "//pkg/kv/kvserver/kvserverpb:kvserverpb_proto",
        "//pkg/kv/kvserver/liveness/livenesspb:livenesspb_proto",
        "//pkg/roachpb:roachpb_proto",
        "//pkg/server/diagnosticspb:diagnosticspb_proto",
        "//pkg/server/status/statuspb:statuspb_proto",
        "//pkg/storage/enginepb:enginepb_proto",
        "//pkg/ts/catalog:catalog_proto",
        "//pkg/util:util_proto",
        "//pkg/util/log/logpb:logpb_proto",
        "//pkg/util/metric:metric_proto",
        "//vendor/github.com/gogo/protobuf/gogoproto:gogo_proto",
        "//vendor/go.etcd.io/etcd/raft/v3/raftpb:raft_proto",
        "@com_google_protobuf//:timestamp_proto",
        "@go_googleapis//google/api:annotations_proto",
    ],
)

go_proto_library(
    name = "serverpb_go_proto",
    compilers = ["//pkg/cmd/protoc-gen-gogoroach:protoc-gen-gogoroach_grpc_compiler"],
    importpath = "github.com/cockroachdb/cockroach/pkg/server/serverpb",
    proto = ":serverpb_proto",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/build",
        "//pkg/clusterversion",
        "//pkg/config/zonepb",
        "//pkg/gossip",
        "//pkg/jobs/jobspb",
        "//pkg/kv/kvserver/kvserverpb",
        "//pkg/kv/kvserver/liveness/livenesspb",
        "//pkg/roachpb",
        "//pkg/server/diagnosticspb",
        "//pkg/server/status/statuspb:statuspb_go_proto",
        "//pkg/sql/catalog/descpb",  # keep
        "//pkg/storage/enginepb",
        "//pkg/ts/catalog",
        "//pkg/util",
        "//pkg/util/log/logpb",
        "//pkg/util/metric",
        "//vendor/github.com/gogo/protobuf/gogoproto",
        "//vendor/go.etcd.io/etcd/raft/v3/raftpb",
        "@go_googleapis//google/api:annotations_go_proto",
    ],
)
