// Copyright 2017 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License.

syntax = "proto3";
package cockroach.server.diagnosticspb;
option go_package = "diagnosticspb";

import "config/zone.proto";
import "gogoproto/gogo.proto";
import "roachpb/app_stats.proto";
import "sql/sqlbase/structured.proto";
import "roachpb/metadata.proto";

message DiagnosticReport {
  NodeInfo node = 1 [(gogoproto.nullable) = false];
  repeated StoreInfo stores = 2  [(gogoproto.nullable) = false];
  repeated sql.sqlbase.TableDescriptor schema = 3 [(gogoproto.nullable) = false];
  repeated sql.CollectedStatementStatistics sql_stats = 4 [(gogoproto.nullable) = false];
  map<string, int64> unimplemented_errors = 5;
  map<string, string> altered_settings = 6;
  map<string, int64> error_counts = 7;
  map<int64, config.ZoneConfig> zone_configs = 8 [(gogoproto.nullable) = false];
}

message NodeInfo {
  int32 node_id = 1 [(gogoproto.customname) = "NodeID", (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.NodeID"];
  int64 bytes = 2;
  int64 key_count = 3;
  int64 range_count = 4;
  roachpb.Locality locality = 5 [(gogoproto.nullable) = false];
}

message StoreInfo {
  int32 node_id = 1 [(gogoproto.customname) = "NodeID", (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.NodeID"];
  int32 store_id = 2 [(gogoproto.customname) = "StoreID", (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.StoreID"];
  int64 bytes = 3;
  int64 key_count = 4;
  int64 range_count = 5;
}

