load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "cli",
    srcs = [
        "auth.go",
        "cert.go",
        "cli.go",
        "client_url.go",
        "context.go",
        "cpuprofile.go",
        "debug.go",
        "debug_check_store.go",
        "debug_logconfig.go",
        "debug_merge_logs.go",
        "debug_reset_quorum.go",
        "debug_synctest.go",
        "decode.go",
        "demo.go",
        "demo_cluster.go",
        "demo_telemetry.go",
        "doctor.go",
        "error.go",
        "examples.go",
        "flags.go",
        "flags_util.go",
        "format_table.go",
        "gen.go",
        "haproxy.go",
        "import.go",
        "init.go",
        "initial_sql.go",
        "keytype_string.go",
        "log_flags.go",
        "mt.go",
        "mt_cert.go",
        "mt_start_sql.go",
        "node.go",
        "nodelocal.go",
        "quit.go",
        "sql.go",
        "sql_util.go",
        "sqlfmt.go",
        "start.go",
        "start_jemalloc.go",
        "start_unix.go",
        "start_windows.go",
        "statement_diag.go",
        "systembench.go",
        "testutils.go",
        "tsdump.go",
        "userfile.go",
        "zip.go",
    ],
    # keep
    cdeps = [
        "@cockroach//c-deps:libjemalloc",
    ],
    cgo = True,
    # keep
    clinkopts = select({
        "@io_bazel_rules_go//go/platform:android": [
            "-lrt -lm -lpthread",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "-lm",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "-lm",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "-lrt -lm -lpthread",
        ],
        "//conditions:default": [],
    }),
    # keep
    cppopts = [
        "-DJEMALLOC_NO_DEMANGLE",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/cli",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/base",
        "//pkg/build",
        "//pkg/cli/cliflags",
        "//pkg/cli/exit",
        "//pkg/cli/syncbench",
        "//pkg/cli/systembench",
        "//pkg/clusterversion",
        "//pkg/config",
        "//pkg/config/zonepb",
        "//pkg/docs",
        "//pkg/geo/geos",
        "//pkg/gossip",
        "//pkg/jobs",
        "//pkg/jobs/jobspb",
        "//pkg/keys",
        "//pkg/kv/kvserver",
        "//pkg/kv/kvserver/gc",
        "//pkg/kv/kvserver/liveness/livenesspb",
        "//pkg/kv/kvserver/rditer",
        "//pkg/kv/kvserver/stateloader",
        "//pkg/roachpb",
        "//pkg/rpc",
        "//pkg/security",
        "//pkg/server",
        "//pkg/server/debug",
        "//pkg/server/dumpstore",
        "//pkg/server/heapprofiler",
        "//pkg/server/serverpb",
        "//pkg/server/status",
        "//pkg/server/status/statuspb",
        "//pkg/server/telemetry",
        "//pkg/settings",
        "//pkg/settings/cluster",
        "//pkg/sql",
        "//pkg/sql/catalog/catconstants",
        "//pkg/sql/catalog/descpb",
        "//pkg/sql/catalog/tabledesc",
        "//pkg/sql/doctor",
        "//pkg/sql/execinfrapb",
        "//pkg/sql/lex",
        "//pkg/sql/lexbase:lex",
        "//pkg/sql/parser",
        "//pkg/sql/pgwire/pgcode",
        "//pkg/sql/pgwire/pgerror",
        "//pkg/sql/protoreflect",
        "//pkg/sql/row",
        "//pkg/sql/sem/builtins",
        "//pkg/sql/sem/tree",
        "//pkg/sql/sessiondatapb",
        "//pkg/sqlmigrations",
        "//pkg/storage",
        "//pkg/storage/cloud",
        "//pkg/storage/cloudimpl",
        "//pkg/storage/enginepb",
        "//pkg/ts/tspb",
        "//pkg/util",
        "//pkg/util/cgroups",
        "//pkg/util/contextutil",
        "//pkg/util/encoding",
        "//pkg/util/encoding/csv",
        "//pkg/util/envutil",
        "//pkg/util/flagutil",
        "//pkg/util/grpcutil",
        "//pkg/util/hlc",
        "//pkg/util/humanizeutil",
        "//pkg/util/iterutil",
        "//pkg/util/keysutil",
        "//pkg/util/log",
        "//pkg/util/log/channel",
        "//pkg/util/log/logconfig",
        "//pkg/util/log/logcrash",
        "//pkg/util/log/logflags",
        "//pkg/util/log/logpb",
        "//pkg/util/log/severity",
        "//pkg/util/netutil",
        "//pkg/util/protoutil",
        "//pkg/util/randutil",
        "//pkg/util/retry",
        "//pkg/util/sdnotify",
        "//pkg/util/stop",
        "//pkg/util/syncutil",
        "//pkg/util/sysutil",
        "//pkg/util/timeutil",
        "//pkg/util/tracing",
        "//pkg/util/uuid",
        "//pkg/util/version",
        "//pkg/workload",
        "//pkg/workload/bank",
        "//pkg/workload/bulkingest",
        "//pkg/workload/cli",
        "//pkg/workload/examples",
        "//pkg/workload/histogram",
        "//pkg/workload/kv",
        "//pkg/workload/movr",
        "//pkg/workload/tpcc",
        "//pkg/workload/tpch",
        "//pkg/workload/workloadsql",
        "//pkg/workload/ycsb",
        "//vendor/github.com/benesch/cgosymbolizer",
        "//vendor/github.com/cockroachdb/apd/v2:apd",
        "//vendor/github.com/cockroachdb/cockroach-go/crdb",
        "//vendor/github.com/cockroachdb/errors",
        "//vendor/github.com/cockroachdb/errors/oserror",
        "//vendor/github.com/cockroachdb/pebble",
        "//vendor/github.com/cockroachdb/pebble/tool",
        "//vendor/github.com/cockroachdb/redact",
        "//vendor/github.com/dustin/go-humanize",
        "//vendor/github.com/elastic/gosigar",
        "//vendor/github.com/gogo/protobuf/jsonpb",
        "//vendor/github.com/knz/go-libedit",
        "//vendor/github.com/kr/pretty",
        "//vendor/github.com/lib/pq",
        "//vendor/github.com/lib/pq/auth/kerberos",
        "//vendor/github.com/mattn/go-isatty",
        "//vendor/github.com/olekukonko/tablewriter",
        "//vendor/github.com/spf13/cobra",
        "//vendor/github.com/spf13/cobra/doc",
        "//vendor/github.com/spf13/pflag",
        "//vendor/go.etcd.io/etcd/raft/v3/raftpb",
        "//vendor/golang.org/x/sync/errgroup",
        "//vendor/golang.org/x/time/rate",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/status",
        "//vendor/gopkg.in/yaml.v2:yaml_v2",
    ] + select({
        "@io_bazel_rules_go//go/platform:aix": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:android": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:illumos": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:js": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:nacl": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:plan9": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "cli_test",
    srcs = [
        "cli_debug_test.go",
        "cli_test.go",
        "debug_check_store_test.go",
        "debug_merge_logs_test.go",
        "debug_test.go",
        "decode_test.go",
        "demo_locality_test.go",
        "demo_test.go",
        "doctor_test.go",
        "error_test.go",
        "flags_test.go",
        "haproxy_test.go",
        "import_test.go",
        "log_flags_test.go",
        "main_test.go",
        "nodelocal_test.go",
        "sql_test.go",
        "sql_util_test.go",
        "start_test.go",
        "statement_diag_test.go",
        "userfiletable_test.go",
        "zip_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":cli"],
    deps = [
        "//pkg/base",
        "//pkg/build",
        "//pkg/cli/cliflags",
        "//pkg/cli/exit",
        "//pkg/gossip",
        "//pkg/gossip/resolver",
        "//pkg/jobs/jobspb",
        "//pkg/keys",
        "//pkg/kv",
        "//pkg/kv/kvserver",
        "//pkg/kv/kvserver/liveness/livenesspb",
        "//pkg/kv/kvserver/stateloader",
        "//pkg/roachpb",
        "//pkg/rpc",
        "//pkg/security",
        "//pkg/security/securitytest",
        "//pkg/server",
        "//pkg/server/serverpb",
        "//pkg/server/status",
        "//pkg/server/status/statuspb",
        "//pkg/sql",
        "//pkg/sql/catalog/descpb",
        "//pkg/sql/lex",
        "//pkg/sql/parser",
        "//pkg/sql/pgwire/pgcode",
        "//pkg/sql/pgwire/pgerror",
        "//pkg/sql/protoreflect",
        "//pkg/sql/sem/tree",
        "//pkg/storage",
        "//pkg/testutils",
        "//pkg/testutils/buildutil",
        "//pkg/testutils/serverutils",
        "//pkg/testutils/skip",
        "//pkg/testutils/sqlutils",
        "//pkg/testutils/testcluster",
        "//pkg/util",
        "//pkg/util/leaktest",
        "//pkg/util/log",
        "//pkg/util/log/channel",
        "//pkg/util/log/logconfig",
        "//pkg/util/log/severity",
        "//pkg/util/protoutil",
        "//pkg/util/stop",
        "//pkg/util/timeutil",
        "//pkg/workload/examples",
        "//vendor/github.com/cockroachdb/datadriven",
        "//vendor/github.com/cockroachdb/errors",
        "//vendor/github.com/cockroachdb/pebble",
        "//vendor/github.com/lib/pq",
        "//vendor/github.com/spf13/cobra",
        "//vendor/github.com/spf13/pflag",
        "//vendor/github.com/stretchr/testify/assert",
        "//vendor/github.com/stretchr/testify/require",
    ],
)
