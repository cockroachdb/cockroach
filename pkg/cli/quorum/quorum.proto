// Copyright 2021 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

syntax = "proto3";
package cockroach.quorum;
// TODO(oleg): sort out package and directory naming here
option go_package = "quorum";

import "roachpb/api.proto";
import "roachpb/metadata.proto";
import "gogoproto/gogo.proto";

// Info about range replica
message LocalRangeInfo {
  int32 node_id = 1 [(gogoproto.customname) = "NodeID",
    (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.NodeID"];
  int32 store_id = 2 [(gogoproto.customname) = "StoreID",
    (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.StoreID"];
  roachpb.RangeDescriptor desc = 3 [(gogoproto.nullable) = false];
  uint64 raft_applied_index = 4;
  uint64 raft_committed_index = 5;
  bool has_uncommitted_descriptors = 6;
}

// Planned changes to be applied to replica
message ReplicaUpdate {
  int32 node_id = 1 [(gogoproto.customname) = "NodeID",
    (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.NodeID",
    (gogoproto.moretags) = "yaml:\"NodeID\""];
  int32 store_id = 2 [(gogoproto.customname) = "StoreID",
    (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.StoreID",
    (gogoproto.moretags) = "yaml:\"StoreID\""];
  int64 range_id = 3 [(gogoproto.customname) = "RangeID",
    (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.RangeID",
    (gogoproto.moretags) = "yaml:\"RangeID\""];
  bytes start_key = 4 [(gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.RKey",
    (gogoproto.moretags) = "yaml:\"StartKey\""];
  roachpb.ReplicaDescriptor new_replica = 5 [(gogoproto.moretags) = "yaml:\"NewReplica\""];
  int32 next_replica_id = 6 [(gogoproto.customname) = "NextReplicaID",
    (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.ReplicaID",
    (gogoproto.moretags) = "yaml:\"NextReplicaID\""];
}
