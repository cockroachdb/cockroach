// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: geo/geo.proto

package geo

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// TODO(#geo): this turned out to be a bad idea, as now everything depends on geo
// (for protobuf gen) and geo may be yuuuuuge
type SpatialDataType int32

const (
	SpatialDataType_Unset              SpatialDataType = 0
	SpatialDataType_Point              SpatialDataType = 1
	SpatialDataType_Curve              SpatialDataType = 2
	SpatialDataType_LineString         SpatialDataType = 3
	SpatialDataType_Surface            SpatialDataType = 4
	SpatialDataType_Polygon            SpatialDataType = 5
	SpatialDataType_GeometryCollection SpatialDataType = 6
	SpatialDataType_MultiSurface       SpatialDataType = 7
	SpatialDataType_MultiPolygon       SpatialDataType = 8
	SpatialDataType_MultiCurve         SpatialDataType = 9
	SpatialDataType_MultiLineString    SpatialDataType = 10
	SpatialDataType_MultiPoint         SpatialDataType = 11
	SpatialDataType_Geometry           SpatialDataType = 100
)

var SpatialDataType_name = map[int32]string{
	0:   "Unset",
	1:   "Point",
	2:   "Curve",
	3:   "LineString",
	4:   "Surface",
	5:   "Polygon",
	6:   "GeometryCollection",
	7:   "MultiSurface",
	8:   "MultiPolygon",
	9:   "MultiCurve",
	10:  "MultiLineString",
	11:  "MultiPoint",
	100: "Geometry",
}
var SpatialDataType_value = map[string]int32{
	"Unset":              0,
	"Point":              1,
	"Curve":              2,
	"LineString":         3,
	"Surface":            4,
	"Polygon":            5,
	"GeometryCollection": 6,
	"MultiSurface":       7,
	"MultiPolygon":       8,
	"MultiCurve":         9,
	"MultiLineString":    10,
	"MultiPoint":         11,
	"Geometry":           100,
}

func (x SpatialDataType) String() string {
	return proto.EnumName(SpatialDataType_name, int32(x))
}
func (SpatialDataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_geo_1e1e0655c492a647, []int{0}
}

func init() {
	proto.RegisterEnum("cockroach.geo.SpatialDataType", SpatialDataType_name, SpatialDataType_value)
}

func init() { proto.RegisterFile("geo/geo.proto", fileDescriptor_geo_1e1e0655c492a647) }

var fileDescriptor_geo_1e1e0655c492a647 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0x63, 0x4a, 0xff, 0x6e, 0x5b, 0x6a, 0x19, 0xc4, 0xc0, 0xe0, 0x8d, 0x85, 0xa1, 0x1d,
	0x78, 0x03, 0x8a, 0xc4, 0x02, 0x52, 0xa5, 0xc0, 0xc2, 0x66, 0xc2, 0xc5, 0x58, 0x18, 0xdf, 0xc8,
	0x38, 0x48, 0x79, 0x0b, 0x1e, 0xab, 0x63, 0xc7, 0x4a, 0x2c, 0x90, 0xbc, 0x08, 0x72, 0xa2, 0x54,
	0x6c, 0xe7, 0x1c, 0x9f, 0xa3, 0xcf, 0xba, 0x30, 0xd3, 0x48, 0x4b, 0x8d, 0xb4, 0xc8, 0x3d, 0x05,
	0x12, 0xb3, 0x8c, 0xb2, 0x37, 0x4f, 0x2a, 0x7b, 0x5d, 0x68, 0xa4, 0xb3, 0x13, 0x4d, 0x9a, 0x9a,
	0x97, 0x65, 0x54, 0x6d, 0xe9, 0xe2, 0x9b, 0xc1, 0x3c, 0xcd, 0x55, 0x30, 0xca, 0x5e, 0xab, 0xa0,
	0xee, 0xcb, 0x1c, 0xc5, 0x18, 0xfa, 0x0f, 0xee, 0x03, 0x03, 0x4f, 0xa2, 0x5c, 0x93, 0x71, 0x81,
	0xb3, 0x28, 0x57, 0x85, 0xff, 0x44, 0x7e, 0x20, 0x8e, 0x00, 0x6e, 0x8d, 0xc3, 0x34, 0x78, 0xe3,
	0x34, 0xef, 0x89, 0x09, 0x0c, 0xd3, 0xc2, 0xbf, 0xa8, 0x0c, 0xf9, 0x61, 0x34, 0x6b, 0xb2, 0xa5,
	0x26, 0xc7, 0xfb, 0xe2, 0x14, 0xc4, 0x0d, 0xd2, 0x3b, 0x06, 0x5f, 0xae, 0xc8, 0x5a, 0xcc, 0x82,
	0x21, 0xc7, 0x07, 0x82, 0xc3, 0xf4, 0xae, 0xb0, 0xc1, 0x74, 0xb3, 0xe1, 0x3e, 0xe9, 0xb6, 0xa3,
	0x48, 0x69, 0x92, 0x96, 0x3a, 0x16, 0xc7, 0x30, 0x6f, 0xfc, 0x3f, 0x34, 0xec, 0x4b, 0xed, 0x2f,
	0x27, 0x62, 0x0a, 0xa3, 0x0e, 0xc8, 0x9f, 0xaf, 0xce, 0x37, 0xbf, 0x32, 0xd9, 0x54, 0x92, 0x6d,
	0x2b, 0xc9, 0x76, 0x95, 0x64, 0x3f, 0x95, 0x64, 0x5f, 0xb5, 0x4c, 0xb6, 0xb5, 0x4c, 0x76, 0xb5,
	0x4c, 0x1e, 0x7b, 0x1a, 0xe9, 0x69, 0xd0, 0xdc, 0xe2, 0xf2, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xec,
	0x22, 0x08, 0xe2, 0x41, 0x01, 0x00, 0x00,
}
