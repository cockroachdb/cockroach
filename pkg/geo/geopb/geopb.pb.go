// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: geo/geopb/geopb.proto

package geopb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Shape is the type of a spatial shape. Each of these corresponds to a
// different representation and serialization format. For example, a Point is a
// pair of float64s (or more than that for geometries with Z or N), a LineString
// is an ordered series of Points, etc.
type Shape int32

const (
	Shape_Unset           Shape = 0
	Shape_Point           Shape = 1
	Shape_LineString      Shape = 2
	Shape_Polygon         Shape = 3
	Shape_MultiPoint      Shape = 4
	Shape_MultiLineString Shape = 5
	Shape_MultiPolygon    Shape = 6
	// Geometry can contain any type.
	Shape_Geometry Shape = 7
	// GeometryCollection can contain any multi* type.
	Shape_GeometryCollection Shape = 8
)

var Shape_name = map[int32]string{
	0: "Unset",
	1: "Point",
	2: "LineString",
	3: "Polygon",
	4: "MultiPoint",
	5: "MultiLineString",
	6: "MultiPolygon",
	7: "Geometry",
	8: "GeometryCollection",
}
var Shape_value = map[string]int32{
	"Unset":              0,
	"Point":              1,
	"LineString":         2,
	"Polygon":            3,
	"MultiPoint":         4,
	"MultiLineString":    5,
	"MultiPolygon":       6,
	"Geometry":           7,
	"GeometryCollection": 8,
}

func (x Shape) String() string {
	return proto.EnumName(Shape_name, int32(x))
}
func (Shape) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_geopb_f6b0056574ab753d, []int{0}
}

func init() {
	proto.RegisterEnum("cockroach.geopb.Shape", Shape_name, Shape_value)
}

func init() { proto.RegisterFile("geo/geopb/geopb.proto", fileDescriptor_geopb_f6b0056574ab753d) }

var fileDescriptor_geopb_f6b0056574ab753d = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0x4f, 0xcd, 0xd7,
	0x4f, 0x4f, 0xcd, 0x2f, 0x48, 0x82, 0x90, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xfc, 0xc9,
	0xf9, 0xc9, 0xd9, 0x45, 0xf9, 0x89, 0xc9, 0x19, 0x7a, 0x60, 0x61, 0xad, 0xe9, 0x8c, 0x5c, 0xac,
	0xc1, 0x19, 0x89, 0x05, 0xa9, 0x42, 0x9c, 0x5c, 0xac, 0xa1, 0x79, 0xc5, 0xa9, 0x25, 0x02, 0x0c,
	0x20, 0x66, 0x40, 0x7e, 0x66, 0x5e, 0x89, 0x00, 0xa3, 0x10, 0x1f, 0x17, 0x97, 0x4f, 0x66, 0x5e,
	0x6a, 0x70, 0x49, 0x51, 0x66, 0x5e, 0xba, 0x00, 0x93, 0x10, 0x37, 0x17, 0x7b, 0x40, 0x7e, 0x4e,
	0x65, 0x7a, 0x7e, 0x9e, 0x00, 0x33, 0x48, 0xd2, 0xb7, 0x34, 0xa7, 0x24, 0x13, 0xa2, 0x98, 0x45,
	0x48, 0x98, 0x8b, 0x1f, 0xcc, 0x47, 0xd2, 0xc1, 0x2a, 0x24, 0xc0, 0xc5, 0x03, 0x55, 0x04, 0xd1,
	0xc6, 0x26, 0xc4, 0xc3, 0xc5, 0xe1, 0x9e, 0x9a, 0x9f, 0x9b, 0x5a, 0x52, 0x54, 0x29, 0xc0, 0x2e,
	0x24, 0xc6, 0x25, 0x04, 0xe3, 0x39, 0xe7, 0xe7, 0xe4, 0xa4, 0x26, 0x97, 0x64, 0xe6, 0xe7, 0x09,
	0x70, 0x38, 0xa9, 0x9f, 0x78, 0x28, 0xc7, 0x70, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c,
	0x37, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c, 0xc3, 0x85, 0xc7, 0x72,
	0x0c, 0x37, 0x1e, 0xcb, 0x31, 0x44, 0xb1, 0x82, 0xbd, 0x90, 0xc4, 0x06, 0xf6, 0x9a, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x15, 0xf5, 0x4b, 0x5c, 0xf3, 0x00, 0x00, 0x00,
}
