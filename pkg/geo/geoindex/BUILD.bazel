load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "geoindex",
    srcs = [
        "geoindex.go",
        "s2_geography_index.go",
        "s2_geometry_index.go",
    ],
    embed = [":geoindex_go_proto"],
    importpath = "github.com/cockroachdb/cockroach/pkg/geo/geoindex",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/geo",
        "//pkg/geo/geogfn",
        "//pkg/geo/geomfn",
        "//pkg/geo/geopb",
        "//pkg/geo/geoprojbase",
        "//pkg/geo/geos",
        "//vendor/github.com/cockroachdb/errors",
        "//vendor/github.com/golang/geo/r3",
        "//vendor/github.com/golang/geo/s1",
        "//vendor/github.com/golang/geo/s2",
        "//vendor/github.com/twpayne/go-geom",
    ],
)

go_test(
    name = "geoindex_test",
    srcs = [
        "s2_geography_index_test.go",
        "s2_geometry_index_test.go",
        "utils_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":geoindex"],
    deps = [
        "//pkg/geo",
        "//pkg/geo/geogfn",
        "//pkg/geo/geopb",
        "//pkg/geo/geoprojbase",
        "//pkg/geo/geos",
        "//pkg/util/leaktest",
        "//vendor/github.com/cockroachdb/datadriven",
        "//vendor/github.com/golang/geo/s2",
        "//vendor/github.com/stretchr/testify/require",
    ],
)

proto_library(
    name = "geoindex_proto",
    srcs = ["config.proto"],
    strip_import_prefix = "/pkg",
    visibility = ["//visibility:public"],
    deps = ["//vendor/github.com/gogo/protobuf/gogoproto:gogo_proto"],
)

go_proto_library(
    name = "geoindex_go_proto",
    compilers = ["//pkg/cmd/protoc-gen-gogoroach:protoc-gen-gogoroach_compiler"],
    importpath = "github.com/cockroachdb/cockroach/pkg/geo/geoindex",
    proto = ":geoindex_proto",
    visibility = ["//visibility:public"],
    deps = ["//vendor/github.com/gogo/protobuf/gogoproto"],
)
