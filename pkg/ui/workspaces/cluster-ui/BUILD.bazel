load("@npm//webpack-cli:index.bzl", webpack = "webpack_cli")
load("@build_bazel_rules_nodejs//:index.bzl", "js_library")
load("@npm//@bazel/typescript:index.bzl", "ts_project")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")

# TODO (koorosh): keeping the list of deps up to date is a candidate to be
# autogenerated in scope of `dev generate bazel`.
#
# Do not include following packages:
# "@npm//@cockroachlabs/crdb-protobuf-client",
DEPENDENCIES = [
    "@npm//@bazel/typescript",
    "@npm//@babel/cli",
    "@npm//@babel/core",
    "@npm//@babel/plugin-proposal-class-properties",
    "@npm//@babel/plugin-proposal-object-rest-spread",
    "@npm//@babel/plugin-transform-modules-commonjs",
    "@npm//@babel/plugin-transform-runtime",
    "@npm//@babel/preset-env",
    "@npm//@babel/preset-react",
    "@npm//@babel/preset-typescript",
    "@npm//@cockroachlabs/eslint-config",
    "@npm//@cockroachlabs/icons",
    "@npm//@cockroachlabs/ui-components",
    "@npm//@cockroachlabs/design-tokens",
    "@npm//@popperjs/core",
    "@npm//@reduxjs/toolkit",
    "@npm//@storybook/addon-actions",
    "@npm//@storybook/addon-links",
    "@npm//@storybook/addons",
    "@npm//@storybook/react",
    "@npm//@types/chai",
    "@npm//@types/classnames",
    "@npm//@types/d3",
    "@npm//@types/d3-array",
    "@npm//@types/d3-format",
    "@npm//@types/d3-scale",
    "@npm//@types/enzyme",
    "@npm//@types/jest",
    "@npm//@types/lodash",
    "@npm//@types/long",
    "@npm//@types/node",
    "@npm//@types/react",
    "@npm//@types/react-dom",
    "@npm//@types/react-helmet",
    "@npm//@types/react-redux",
    "@npm//@types/react-router",
    "@npm//@types/react-router-dom",
    "@npm//@types/react-select",
    "@npm//@types/redux-saga",
    "@npm//@types/reselect",
    "@npm//@types/sinon",
    "@npm//@typescript-eslint/eslint-plugin",
    "@npm//@typescript-eslint/parser",
    "@npm//antd",
    "@npm//astroturf",
    "@npm//babel-jest",
    "@npm//babel-loader",
    "@npm//babel-plugin-import",
    "@npm//babel-polyfill",
    "@npm//babel-preset-react-app",
    "@npm//chai",
    "@npm//classnames",
    "@npm//connected-react-router",
    "@npm//d3-array",
    "@npm//d3-format",
    "@npm//d3-scale",
    "@npm//enzyme",
    "@npm//enzyme-adapter-react-16",
    "@npm//eslint",
    "@npm//eslint-config-prettier",
    "@npm//eslint-plugin-prettier",
    "@npm//eslint-plugin-react",
    "@npm//eslint-plugin-react-hooks",
    "@npm//fetch-mock",
    "@npm//file-loader",
    "@npm//highlight.js",
    "@npm//http-proxy-middleware",
    "@npm//identity-obj-proxy",
    "@npm//jest",
    "@npm//jest-environment-enzyme",
    "@npm//jest-enzyme",
    "@npm//jest-fetch-mock",
    "@npm//jest-runner-eslint",
    "@npm//less",
    "@npm//less-loader",
    "@npm//long",
    "@npm//moment-locales-webpack-plugin",
    "@npm//npm-run-all",
    "@npm//prettier",
    "@npm//protobufjs",
    "@npm//react",
    "@npm//react-dom",
    "@npm//react-helmet",
    "@npm//react-popper",
    "@npm//react-redux",
    "@npm//react-select",
    "@npm//react-test-renderer",
    "@npm//redux",
    "@npm//redux-saga",
    "@npm//redux-saga-test-plan",
    "@npm//reselect",
    "@npm//sass",
    "@npm//sass-loader",
    "@npm//sinon",
    "@npm//source-map-loader",
    "@npm//style-loader",
    "@npm//ts-jest",
    "@npm//typescript",
    "@npm//url-loader",
    "@npm//webpack",
    "@npm//webpack-cli",
    "@npm//webpackbar",
]

ts_project(
    name = "ts_project",
    srcs = glob(
        ["src/**"],
        exclude = [
            "src/**/*.stories.tsx",
            "src/**/*.spec.tsx",
            "src/**/*.spec.ts",
        ],
    ),
    declaration = True,
    emit_declaration_only = True,
    out_dir = "dist/types",
    root_dir = "src",
    tsconfig = "tsconfig.json",
    deps = [
        "//pkg/ui/workspaces/db-console/src/js:crdb-protobuf-client",
        "@npm//@babel/parser",
        "@npm//@babel/types",
        "@npm//@cockroachlabs/icons",
        "@npm//@cockroachlabs/ui-components",
        "@npm//@reduxjs/toolkit",
        "@npm//@types",
        "@npm//antd",
        "@npm//classnames",
        "@npm//connected-react-router",
        "@npm//moment",
        "@npm//protobufjs",
        "@npm//redux",
        "@npm//redux-saga",
        "@npm//redux-saga-test-plan",
        "@npm//reselect",
    ],
)

webpack(
    name = "webpack",
    outs = [
        "dist/js/main.js",
        # TODO (koorosh): webpack outputs `main.js.map` file as well but it's ignored for now
        # due to limited understanding how to preserve project structure and include more than
        # single file as output.
    ],
    args = [
        "$(execpath src/index.ts)",
        "--config",
        "$(execpath webpack.config.js)",
        "--env.is_bazel_build",
        "--mode",
        "production",
        "-o $@",
        "--env.output=$@",
    ],
    data = glob([
        "src/**",
    ]) + [
        ".babelrc",
        "tsconfig.json",
        "webpack.config.js",
        "//pkg/ui/workspaces/db-console/src/js:crdb-protobuf-client",
    ] + DEPENDENCIES,
)

js_library(
    name = "cluster-ui",
    package_name = "@cockroachlabs/cluster-ui",
    srcs = [
        "package.json",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":ts_project",
        ":webpack",
    ],
)

nodejs_binary(
    name = "eslint",
    data = [
        ".eslintignore",
        ".eslintrc.json",
        "src",
        "@npm//eslint",
    ],
    entry_point = "@npm//:node_modules/eslint/bin/eslint.js",
    templated_args = [
        "--ext .ts",
        "--ext .js",
        "--ext .tsx",
        "--ignore-path",
        "$$(rlocation $(rootpath .eslintignore))",
        "-c",
        "$$(rlocation $(rootpath .eslintrc.json))",
        "--format=codeframe",
        "$$(rlocation $(rootpath src))",
    ],
)
