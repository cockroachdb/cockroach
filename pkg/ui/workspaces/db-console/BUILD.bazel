load("@npm//webpack-cli:index.bzl", webpack = "webpack_cli")
load("@npm//karma:index.bzl", "karma_test")
load("@npm//stylint:index.bzl", "stylint_test")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_test")
load("@npm//typescript:index.bzl", "tsc_test")

# TODO (koorosh): keeping the list of deps up to date is a candidate to be
# autogenerated in scope of `dev generate bazel`.
#
# do not include following dependencies:
# - @npm//@cockroachlabs/cluster-ui
# - @npm//@cockroachlabs/crdb-protobuf-client
# - @npm//@types/react-select
# - @npm//react-select
# - @npm//typescript (provided by the tsc_test rule above)
DEV_DEPENDENCIES = [
    "@npm//@babel/core",
    "@npm//@babel/preset-env",
    "@npm//@babel/preset-react",
    "@npm//@cockroachlabs/eslint-config",
    "@npm//@storybook/react",
    "@npm//@testing-library/react",
    "@npm//@testing-library/user-event",
    "@npm//@types/analytics-node",
    "@npm//@types/assert",
    "@npm//@types/bytebuffer",
    "@npm//@types/chai",
    "@npm//@types/classnames",
    "@npm//@types/combokeys",
    "@npm//@types/d3",
    "@npm//@types/d3-dispatch",
    "@npm//@types/d3-drag",
    "@npm//@types/d3-timer",
    "@npm//@types/enzyme",
    "@npm//@types/enzyme-adapter-react-16",
    "@npm//@types/fetch-mock",
    "@npm//@types/highlight.js",
    "@npm//@types/lodash",
    "@npm//@types/mocha",
    "@npm//@types/node",
    "@npm//@types/nvd3",
    "@npm//@types/prop-types",
    "@npm//@types/react",
    "@npm//@types/react-copy-to-clipboard",
    "@npm//@types/react-dom",
    "@npm//@types/react-helmet",
    "@npm//@types/react-paginate",
    "@npm//@types/react-redux",
    "@npm//@types/react-router-dom",
    "@npm//@types/redux",
    "@npm//@types/redux-saga",
    "@npm//@types/redux-thunk",
    "@npm//@types/sinon",
    "@npm//@types/storybook__react",
    "@npm//@typescript-eslint/eslint-plugin",
    "@npm//@typescript-eslint/parser",
    "@npm//babel-loader",
    "@npm//babel-plugin-import",
    "@npm//bytebuffer",
    "@npm//cache-loader",
    "@npm//chai",
    "@npm//chalk",
    "@npm//copy-webpack-plugin",
    "@npm//css-loader",
    "@npm//d3",
    "@npm//d3-geo-projection",
    "@npm//enzyme",
    "@npm//enzyme-adapter-react-16",
    "@npm//escodegen",
    "@npm//eslint",
    "@npm//eslint-plugin-prettier",
    "@npm//eslint-plugin-react",
    "@npm//eslint-plugin-react-hooks",
    "@npm//espree",
    "@npm//estraverse",
    "@npm//express",
    "@npm//fetch-mock",
    "@npm//file-loader",
    "@npm//fork-ts-checker-webpack-plugin",
    "@npm//glob",
    "@npm//html-webpack-template",
    "@npm//http-proxy-middleware",
    "@npm//jsdoc",
    "@npm//karma-chai",
    "@npm//karma-chrome-launcher",
    "@npm//karma-mocha",
    "@npm//karma-mocha-reporter",
    "@npm//karma-sinon",
    "@npm//karma-sourcemap-loader",
    "@npm//karma-webpack",
    "@npm//minimist",
    "@npm//mocha",
    "@npm//nib",
    "@npm//prettier",
    "@npm//prop-types",
    "@npm//protobufjs",
    "@npm//redux-saga-test-plan",
    "@npm//rimraf",
    "@npm//semver",
    "@npm//sinon",
    "@npm//source-map-loader",
    "@npm//string-replace-webpack-plugin",
    "@npm//style-loader",
    "@npm//stylint",
    "@npm//stylus",
    "@npm//stylus-loader",
    "@npm//thread-loader",
    "@npm//tmp",
    "@npm//topojson",
    "@npm//ts-loader",
    "@npm//uglify-js",
    "@npm//uplot",
    "@npm//url-loader",
    "@npm//us-atlas",
    "@npm//webpack",
    "@npm//webpack-cli",
    "@npm//webpack-dev-server",
    "@npm//webpack-visualizer-plugin",
    "@npm//webpackbar",
    "@npm//world-atlas",
]

DEPENDENCIES = [
    "@npm//@cockroachlabs/icons",
    "@npm//@cockroachlabs/design-tokens",
    "@npm//analytics-node",
    "@npm//antd",
    "@npm//babel-polyfill",
    "@npm//classnames",
    "@npm//combokeys",
    "@npm//connected-react-router",
    "@npm//create-react-context",
    "@npm//highlight.js",
    "@npm//lodash",
    "@npm//long",
    "@npm//list.js",
    "@npm//mini-create-react-context",
    "@npm//moment",
    "@npm//nvd3",
    "@npm//popper.js",
    "@npm//raw-loader",
    "@npm//rc-calendar",
    "@npm//rc-form",
    "@npm//rc-progress",
    "@npm//react",
    "@npm//react-copy-to-clipboard",
    "@npm//react-dom",
    "@npm//react-helmet",
    "@npm//react-motion",
    "@npm//react-paginate",
    "@npm//react-redux",
    "@npm//react-router-dom",
    "@npm//redux",
    "@npm//redux-saga",
    "@npm//redux-thunk",
    "@npm//reselect",
    "@npm//whatwg-fetch",
] + DEV_DEPENDENCIES

WEBPACK_DATA_COMMON = [
    ".babelrc",
    ".eslintrc.json",
    ".stylintrc",
    "assets",
    "favicon.ico",
    "fonts",
    "src",
    "styl",
    "tsconfig.json",
    "webpack.app.js",
    "//pkg/ui/workspaces/cluster-ui:cluster-ui",
    "//pkg/ui/workspaces/db-console/src/js:crdb-protobuf-client",
]

WEBPACK_DATA_OSS = WEBPACK_DATA_COMMON + DEPENDENCIES

WEBPACK_DATA_CCL = WEBPACK_DATA_COMMON + [
    "//pkg/ui/workspaces/db-console/ccl/src/js:crdb-protobuf-client-ccl",
    "ccl",
] + DEPENDENCIES

webpack(
    name = "db-console-ccl",
    args = [
        "--config $(execpath webpack.app.js)",
        "--env.dist=ccl",
        "--mode production",
        "--env.output=$(RULEDIR)/db-console-ccl",
    ],
    data = WEBPACK_DATA_CCL + [":node_modules"],
    output_dir = True,
    visibility = ["//visibility:public"],
)

webpack(
    name = "db-console-oss",
    args = [
        "--config $(execpath webpack.app.js)",
        "--env.dist=oss",
        "--mode production",
        "--env.output=$(RULEDIR)/db-console-oss",
    ],
    data = WEBPACK_DATA_OSS + [":node_modules"],
    output_dir = True,
    visibility = ["//visibility:public"],
)

filegroup(
    name = "node_modules",
    srcs = glob(
        include = [
            "node_modules/**",
        ],
    ),
)

stylint_test(
    name = "stylint",
    args = [
        "-c $(execpath .stylintrc)",
        "$(execpath styl)",
    ],
    data = [
        ".stylintrc",
        "fonts",
        "src",
        "styl",
    ] + [":node_modules"],
)

nodejs_test(
    name = "eslint",
    data = [
        ".eslintrc.json",
        "ccl",
        "src",
        "@npm//@cockroachlabs/eslint-config",
        "@npm//@typescript-eslint/eslint-plugin",
        "@npm//@typescript-eslint/parser",
        "@npm//eslint",
        "@npm//eslint-plugin-prettier",
        "@npm//eslint-plugin-react",
        "@npm//eslint-plugin-react-hooks",
        "@npm//prettier",
        "@npm//react",
    ],
    entry_point = "@npm//:node_modules/eslint/bin/eslint.js",
    templated_args = [
        "--ext .ts",
        "--ext .js",
        "--ext .tsx",
        "-c",
        "$$(rlocation $(rootpath .eslintrc.json))",
        "$$(rlocation $(rootpath src))",
        "$$(rlocation $(rootpath ccl))",
    ],
)

test_suite(
    name = "lint",
    tests = [
        ":eslint",
        ":stylint",
    ],
)

SRC_NOT_PROTO_CLIENT = glob(
    ["src/**"],
    exclude = ["protos.*"],
)

CCL_NOT_PROTO_CLIENT = glob(
    ["ccl/**"],
    exclude = ["protos.*"],
)

KARMA_DEPS = [
    ":node_modules",
    ".babelrc",
    ".eslintrc.json",
    ".stylintrc",
    "assets",
    "favicon.ico",
    "fonts",
    "styl",
    "tsconfig.json",
    "webpack.app.js",
    "karma.conf.js",
    "tests-loader.js",
    "//pkg/ui/workspaces/cluster-ui:cluster-ui",
    "//pkg/ui/workspaces/db-console/src/js:crdb-protobuf-client",
    "//pkg/ui/workspaces/db-console/ccl/src/js:crdb-protobuf-client-ccl",
] + SRC_NOT_PROTO_CLIENT + CCL_NOT_PROTO_CLIENT + DEPENDENCIES

karma_test(
    name = "karma",
    data = KARMA_DEPS,
    templated_args = [
        "start",
        "$(execpath karma.conf.js)",
    ],
    visibility = ["//visibility:public"],
)

karma_test(
    name = "karma-watch",
    data = KARMA_DEPS,
    tags = [
        # Reduce test startup times under ibazel by letting the karma process run between file changes
        "ibazel_notify_changes",
    ],
    templated_args = [
        "start",
        "$(execpath karma.conf.js)",
        # Reduce test startup times under ibazel by using the default karma watchers
        "--auto-watch",
        # Don't close the karma server after tests complete
        "--no-single-run",
    ],
    visibility = ["//visibility:public"],
)
