load("@aspect_rules_jest//jest:defs.bzl", "jest_test")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("@npm_db_console//:defs.bzl", "npm_link_all_packages")
load("@npm_db_console//pkg/ui/workspaces/db-console:eslint/package_json.bzl", eslint_bin = "bin")
load("@npm_db_console//pkg/ui/workspaces/db-console:stylint/package_json.bzl", stylint_bin = "bin")
load("@npm_db_console//pkg/ui/workspaces/db-console:typescript/package_json.bzl", typescript_bin = "bin")
load("@npm_db_console//pkg/ui/workspaces/db-console:webpack-cli/package_json.bzl", webpack_bin = "bin")

exports_files(
    [
        "yarn.lock",
    ],
    visibility = ["//visibility:public"],
)

npm_link_all_packages(name = "node_modules")

# TODO (koorosh): keeping the list of deps up to date is a candidate to be
# autogenerated in scope of `dev generate bazel`.
#
# do not include following dependencies:
# - typescript
DEV_DEPENDENCIES = [
    "@babel/core",
    "@babel/parser",
    "@babel/preset-env",
    "@babel/preset-react",
    "@babel/runtime",
    "@babel/plugin-transform-runtime",
    "@babel/types",
    "@cockroachlabs/eslint-config",
    "@protobufjs/aspromise",
    "@protobufjs/base64",
    "@protobufjs/eventemitter",
    "@protobufjs/float",
    "@protobufjs/inquire",
    "@protobufjs/pool",
    "@protobufjs/utf8",
    "@reduxjs/toolkit",
    "@storybook/react",
    "@testing-library/react",
    "@testing-library/user-event",
    "@types/analytics-node",
    "@types/assert",
    "@types/bytebuffer",
    "@types/chai",
    "@types/classnames",
    "@types/combokeys",
    "@types/d3",
    "@types/d3-dispatch",
    "@types/d3-drag",
    "@types/d3-timer",
    "@types/enzyme",
    "@types/enzyme-adapter-react-16",
    "@types/fetch-mock",
    "@types/highlight.js",
    "@types/jest",
    "@types/history",
    "@types/lodash",
    "@types/long",
    "@types/mocha",
    "@types/node",
    "@types/nvd3",
    "@types/prop-types",
    "@types/react",
    "@types/react-copy-to-clipboard",
    "@types/react-dom",
    "@types/react-helmet",
    "@types/react-paginate",
    "@types/react-redux",
    "@types/react-router",
    "@types/react-router-dom",
    "@types/react-select",
    "@types/redux",
    "@types/redux-saga",
    "@types/redux-thunk",
    "@types/sinon",
    "@types/storybook__react",
    "@typescript-eslint/eslint-plugin",
    "@typescript-eslint/parser",
    "babel-loader",
    "babel-plugin-import",
    "babel-runtime",
    "base64-js",
    "buffer",
    "bytebuffer",
    "cache-loader",
    "chai",
    "chalk",
    "copy-webpack-plugin",
    "css-loader",
    "d3",
    "d3-geo-projection",
    "enzyme",
    "enzyme-adapter-react-16",
    "escodegen",
    "eslint",
    "eslint-plugin-prettier",
    "eslint-plugin-react",
    "eslint-plugin-react-hooks",
    "esbuild-loader",
    "espree",
    "estraverse",
    "events",
    "express",
    "fetch-mock",
    "file-loader",
    "fork-ts-checker-webpack-plugin",
    "glob",
    "html-webpack-template",
    "http-proxy-middleware",
    "ieee754",
    "jest",
    "jest-junit",
    "jsdoc",
    "less-loader",
    "minimist",
    "mocha",
    "nib",
    "prettier",
    "prop-types",
    "protobufjs",
    "redux-saga-test-plan",
    "rimraf",
    "semver",
    "sinon",
    "source-map-loader",
    "string-replace-webpack-plugin",
    "moment-timezone-data-webpack-plugin",
    "style-loader",
    "stylint",
    "stylus",
    "stylus-loader",
    "thread-loader",
    "tmp",
    "topojson",
    "ts-loader",
    "uglify-js",
    "uplot",
    "url-loader",
    "us-atlas",
    "webpack",
    "webpack-cli",
    "webpack-dev-server",
    "webpack-visualizer-plugin",
    "webpackbar",
    "world-atlas",
]

DEPENDENCIES = [
    "@ant-design/colors",
    "@ant-design/create-react-context",
    "@ant-design/icons",
    "@ant-design/icons-react",
    "@cockroachlabs/cluster-ui",
    "@cockroachlabs/crdb-protobuf-client",
    "@cockroachlabs/crdb-protobuf-client-ccl",
    "@cockroachlabs/icons",
    "@cockroachlabs/design-tokens",
    "@cockroachlabs/ui-components",
    "@redux-saga/core",
    "@redux-saga/deferred",
    "@redux-saga/delay-p",
    "@redux-saga/is",
    "@redux-saga/symbols",
    "@segment/loosely-validate-event",
    "add-dom-event-listener",
    "analytics-node",
    "antd",
    "array-tree-filter",
    "assert",
    "async-validator",
    "available-typed-arrays",
    "axios",
    "axios-retry",
    "babel-polyfill",
    "call-bind",
    "charenc",
    "classnames",
    "combokeys",
    "component-classes",
    "component-indexof",
    "component-type",
    "connected-react-router",
    "copy-to-clipboard",
    "core-js",
    "create-react-class",
    "create-react-context",
    "crypt",
    "css-animation",
    "define-properties",
    "dom-align",
    "dom-closest",
    "dom-matches",
    "dom-scroll-into-view",
    "draft-js",
    "enquire.js",
    "es6-object-assign",
    "eventlistener",
    "fbjs",
    "for-each",
    "function-bind",
    "get-intrinsic",
    "gopd",
    "gud",
    "has",
    "has-property-descriptors",
    "has-symbols",
    "has-tostringtag",
    "highlight.js",
    "history",
    "hoist-non-react-statics",
    "immutable",
    "inherits",
    "isarray",
    "is-arguments",
    "is-buffer",
    "is-callable",
    "is-generator-function",
    "is-mobile",
    "is-nan",
    "is-retry-allowed",
    "is-typed-array",
    "join-component",
    "json2mq",
    "lodash",
    "lodash.debounce",
    "lodash.isequalwith",
    "lodash.isstring",
    "lodash.throttle",
    "long",
    "list.js",
    "md5",
    "mini-create-react-context",
    "mini-store",
    "moment",
    "moment-timezone",
    "ms",
    "mutationobserver-shim",
    "nvd3",
    "object-assign",
    "object-is",
    "object-keys",
    "omit.js",
    "path-to-regexp",
    "performance-now",
    "popper.js",
    "process",
    "raf",
    "raw-loader",
    "rc-align",
    "rc-animate",
    "rc-calendar",
    "rc-cascader",
    "rc-checkbox",
    "rc-collapse",
    "rc-dialog",
    "rc-drawer",
    "rc-dropdown",
    "rc-editor-core",
    "rc-editor-mention",
    "rc-form",
    "rc-input-number",
    "rc-mentions",
    "rc-menu",
    "rc-notification",
    "rc-pagination",
    "rc-progress",
    "rc-rate",
    "rc-resize-observer",
    "rc-select",
    "rc-slider",
    "rc-steps",
    "rc-switch",
    "rc-table",
    "rc-tabs",
    "rc-time-picker",
    "rc-tooltip",
    "rc-tree",
    "rc-tree-select",
    "rc-trigger",
    "rc-upload",
    "rc-util",
    "react",
    "react-copy-to-clipboard",
    "react-dom",
    "react-fast-compare",
    "react-helmet",
    "react-input-autosize",
    "react-is",
    "react-lazy-load",
    "react-lifecycles-compat",
    "react-motion",
    "react-paginate",
    "react-redux",
    "react-router",
    "react-router-dom",
    "react-select",
    "react-side-effect",
    "react-slick",
    "redux",
    "redux-saga",
    "redux-thunk",
    "regenerator-runtime",
    "remove-trailing-slash",
    "reselect",
    "resize-observer-polyfill",
    "resolve-pathname",
    "rmc-feedback",
    "scheduler",
    "setimmediate",
    "shallowequal",
    "shallow-equal",
    "string-convert",
    "tinycolor2",
    "tiny-invariant",
    "tiny-warning",
    "toggle-selection",
    "ua-parser-js",
    "util",
    "uuid",
    "value-equal",
    "warning",
    "whatwg-fetch",
    "which-typed-array",
] + DEV_DEPENDENCIES

WEBPACK_DATA_COMMON = glob(
    include = [
        "assets/**",
        "fonts/**",
        "src/**",
        "styl/**",
    ],
    exclude = [
        "src/js/**",
        "src/**/*.stories.tsx",
        "src/**/*.spec.tsx",
        "src/**/*.spec.ts",
    ],
)

WEBPACK_SRCS = [
    "babel.config.js",
    ".eslintrc.json",
    ".stylintrc",
    "favicon.ico",
    "tsconfig.json",
    "webpack.config.js",
]

WEBPACK_DATA_OSS = WEBPACK_DATA_COMMON

WEBPACK_DATA_CCL = WEBPACK_DATA_COMMON + glob(["ccl/**"])

ts_project(
    name = "ts_project",
    srcs = WEBPACK_SRCS + WEBPACK_DATA_CCL,
    declaration = True,
    emit_declaration_only = True,
    out_dir = "dist/types",
    source_map = True,
    supports_workers = False,
    tsconfig = "tsconfig.json",
    deps = [":node_modules/" + d for d in DEPENDENCIES],
)

webpack_bin.webpack_cli(
    name = "db-console-ccl",
    srcs = WEBPACK_SRCS + WEBPACK_DATA_CCL + [
        ":node_modules/" + d
        for d in DEPENDENCIES
    ],
    outs = [
        "db-console-ccl/assets/bundle.js",
    ],
    args = [
        "--config webpack.config.js",
        "--env.dist=ccl",
        "--mode production",
        "--env.output=./db-console-ccl",
    ],
    chdir = package_name(),
    env = {
        "NODE_OPTIONS": "--max-old-space-size=5000",
    },
    visibility = ["//visibility:public"],
)

webpack_bin.webpack_cli(
    name = "db-console-oss",
    srcs = WEBPACK_SRCS + WEBPACK_DATA_OSS + [
        ":node_modules/" + d
        for d in DEPENDENCIES
    ],
    outs = [
        "db-console-oss/assets/bundle.js",
    ],
    args = [
        "--config webpack.config.js",
        "--env.dist=oss",
        "--mode production",
        "--env.output=./db-console-oss",
    ],
    chdir = package_name(),
    env = {
        "NODE_OPTIONS": "--max-old-space-size=5000",
    },
    visibility = ["//visibility:public"],
)

stylint_bin.stylint_test(
    name = "stylint",
    args = [
        "-c .stylintrc",
        "styl",
    ],
    chdir = package_name(),
    copy_data_to_bin = False,
    data = [
        ".stylintrc",
        "fonts",
    ] + [":node_modules/" + d for d in DEPENDENCIES] + glob([
        "fonts/**",
        "src/**",
        "styl/**",
    ]),
)

eslint_bin.eslint_test(
    name = "eslint",
    args = [
        "--ext .ts",
        "--ext .js",
        "--ext .tsx",
        "-c",
        ".eslintrc.json",
        "src",
        "ccl",
    ],
    chdir = package_name(),
    copy_data_to_bin = False,
    data = [
        ".eslintrc.json",
        ".prettierignore",
        "prettier.config.js",
    ] + [":node_modules/" + d for d in DEPENDENCIES] + [
        ":node_modules/@cockroachlabs/eslint-plugin-crdb",
        ":node_modules/@typescript-eslint/utils",
        ":node_modules/eslint-config-prettier",
    ] + glob([
        "ccl/**",
        "src/**",
    ]),
)

build_test(
    # NB: Type-checking is done as part of building ts_project.
    name = "typecheck",
    targets = [
        ":ts_project",
    ],
)

test_suite(
    name = "lint",
    tests = [
        ":eslint",
        ":stylint",
        ":typecheck",
    ],
)

SRC_NOT_PROTO_CLIENT = glob(
    ["src/**"],
    exclude = ["protos.*"],
)

CCL_NOT_PROTO_CLIENT = glob(
    ["ccl/**"],
    exclude = ["protos.*"],
)

JEST_DEPS = [":node_modules/" + d for d in DEPENDENCIES] + [
    ".eslintrc.json",
    "babel.config.js",
    "package.json",
    "jest.config.js",
    "tsconfig.json",
    "tsconfig.linting.json",
    ":node_modules/@babel/plugin-proposal-class-properties",
    ":node_modules/@babel/plugin-proposal-object-rest-spread",
    ":node_modules/@babel/plugin-transform-modules-commonjs",
    ":node_modules/identity-obj-proxy",
    ":node_modules/ts-jest",
    ":node_modules/jest-enzyme",
    ":node_modules/jest-canvas-mock",
] + glob([
    "src/**",
    "ccl/**",
])

jest_test(
    name = "jest",
    size = "enormous",
    args = [
        # Increase the JS heap size: https://nodejs.org/docs/latest-v16.x/api/cli.html#--max-old-space-sizesize-in-megabytes
        "--node_options=--max-old-space-size=8192",
        # Prevent a v8-internal leak of compiled bytecode: https://github.com/facebook/jest/issues/11956#issuecomment-1401094780
        "--node_options=--no-compilation-cache",
        # Populate the global.gc() function during JS execution:
        # https://github.com/v8/v8/blob/5fe0aa3bc79c0a9d3ad546b79211f07105f09585/src/flags/flag-definitions.h#L1484-L1487
        "--node_options=--expose-gc",
        # Force jest workers to collect garbage after each suite: https://jestjs.io/docs/27.x/cli#--logheapusage
        "--logHeapUsage",
        "--ci",
    ],
    config = ":jest.config.js",
    data = JEST_DEPS,
    node_modules = ":node_modules",
)
