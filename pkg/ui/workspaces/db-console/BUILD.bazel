load("@npm_db_console//webpack-cli:index.bzl", webpack = "webpack_cli")
load("@npm_db_console//stylint:index.bzl", "stylint_test")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_test")
load("@npm_db_console//eslint:index.bzl", "eslint_test")
load("@npm_db_console//typescript:index.bzl", "tsc_test")
load("@npm_db_console//jest:index.bzl", "jest_test")

exports_files(
    [
        "yarn.lock",
    ],
    visibility = ["//visibility:public"],
)

# TODO (koorosh): keeping the list of deps up to date is a candidate to be
# autogenerated in scope of `dev generate bazel`.
#
# do not include following dependencies:
# - @npm_db_console//@cockroachlabs/cluster-ui
# - @npm_db_console//@cockroachlabs/crdb-protobuf-client
# - @npm_db_console//typescript (provided by the tsc_test rule above)
DEV_DEPENDENCIES = [
    "@npm_db_console//@babel/core",
    "@npm_db_console//@babel/preset-env",
    "@npm_db_console//@babel/preset-react",
    "@npm_db_console//@babel/runtime",
    "@npm_db_console//@babel/plugin-transform-runtime",
    "@npm_db_console//@cockroachlabs/eslint-config",
    "@npm_db_console//@storybook/react",
    "@npm_db_console//@testing-library/react",
    "@npm_db_console//@testing-library/user-event",
    "@npm_db_console//@types/analytics-node",
    "@npm_db_console//@types/assert",
    "@npm_db_console//@types/bytebuffer",
    "@npm_db_console//@types/chai",
    "@npm_db_console//@types/classnames",
    "@npm_db_console//@types/combokeys",
    "@npm_db_console//@types/d3",
    "@npm_db_console//@types/d3-dispatch",
    "@npm_db_console//@types/d3-drag",
    "@npm_db_console//@types/d3-timer",
    "@npm_db_console//@types/enzyme",
    "@npm_db_console//@types/enzyme-adapter-react-16",
    "@npm_db_console//@types/fetch-mock",
    "@npm_db_console//@types/highlight.js",
    "@npm_db_console//@types/lodash",
    "@npm_db_console//@types/mocha",
    "@npm_db_console//@types/node",
    "@npm_db_console//@types/nvd3",
    "@npm_db_console//@types/prop-types",
    "@npm_db_console//@types/react",
    "@npm_db_console//@types/react-copy-to-clipboard",
    "@npm_db_console//@types/react-dom",
    "@npm_db_console//@types/react-helmet",
    "@npm_db_console//@types/react-paginate",
    "@npm_db_console//@types/react-redux",
    "@npm_db_console//@types/react-router-dom",
    "@npm_db_console//@types/react-select",
    "@npm_db_console//@types/redux",
    "@npm_db_console//@types/redux-saga",
    "@npm_db_console//@types/redux-thunk",
    "@npm_db_console//@types/sinon",
    "@npm_db_console//@types/storybook__react",
    "@npm_db_console//@typescript-eslint/eslint-plugin",
    "@npm_db_console//@typescript-eslint/parser",
    "@npm_db_console//babel-loader",
    "@npm_db_console//babel-plugin-import",
    "@npm_db_console//bytebuffer",
    "@npm_db_console//cache-loader",
    "@npm_db_console//chai",
    "@npm_db_console//chalk",
    "@npm_db_console//copy-webpack-plugin",
    "@npm_db_console//css-loader",
    "@npm_db_console//d3",
    "@npm_db_console//d3-geo-projection",
    "@npm_db_console//enzyme",
    "@npm_db_console//enzyme-adapter-react-16",
    "@npm_db_console//escodegen",
    "@npm_db_console//eslint",
    "@npm_db_console//eslint-plugin-prettier",
    "@npm_db_console//eslint-plugin-react",
    "@npm_db_console//eslint-plugin-react-hooks",
    "@npm_db_console//esbuild-loader",
    "@npm_db_console//espree",
    "@npm_db_console//estraverse",
    "@npm_db_console//express",
    "@npm_db_console//fetch-mock",
    "@npm_db_console//file-loader",
    "@npm_db_console//fork-ts-checker-webpack-plugin",
    "@npm_db_console//glob",
    "@npm_db_console//html-webpack-template",
    "@npm_db_console//http-proxy-middleware",
    "@npm_db_console//jsdoc",
    "@npm_db_console//less-loader",
    "@npm_db_console//minimist",
    "@npm_db_console//mocha",
    "@npm_db_console//nib",
    "@npm_db_console//prettier",
    "@npm_db_console//prop-types",
    "@npm_db_console//protobufjs",
    "@npm_db_console//redux-saga-test-plan",
    "@npm_db_console//rimraf",
    "@npm_db_console//semver",
    "@npm_db_console//sinon",
    "@npm_db_console//source-map-loader",
    "@npm_db_console//string-replace-webpack-plugin",
    "@npm_db_console//moment-timezone-data-webpack-plugin",
    "@npm_db_console//style-loader",
    "@npm_db_console//stylint",
    "@npm_db_console//stylus",
    "@npm_db_console//stylus-loader",
    "@npm_db_console//thread-loader",
    "@npm_db_console//tmp",
    "@npm_db_console//topojson",
    "@npm_db_console//ts-loader",
    "@npm_db_console//uglify-js",
    "@npm_db_console//uplot",
    "@npm_db_console//url-loader",
    "@npm_db_console//us-atlas",
    "@npm_db_console//webpack",
    "@npm_db_console//webpack-cli",
    "@npm_db_console//webpack-dev-server",
    "@npm_db_console//webpack-visualizer-plugin",
    "@npm_db_console//webpackbar",
    "@npm_db_console//world-atlas",
]

DEPENDENCIES = [
    "@npm_db_console//@cockroachlabs/icons",
    "@npm_db_console//@cockroachlabs/design-tokens",
    "@npm_db_console//@cockroachlabs/ui-components",
    "@npm_db_console//analytics-node",
    "@npm_db_console//antd",
    "@npm_db_console//babel-polyfill",
    "@npm_db_console//classnames",
    "@npm_db_console//combokeys",
    "@npm_db_console//connected-react-router",
    "@npm_db_console//create-react-context",
    "@npm_db_console//highlight.js",
    "@npm_db_console//lodash",
    "@npm_db_console//long",
    "@npm_db_console//list.js",
    "@npm_db_console//mini-create-react-context",
    "@npm_db_console//moment",
    "@npm_db_console//moment-timezone",
    "@npm_db_console//nvd3",
    "@npm_db_console//popper.js",
    "@npm_db_console//raw-loader",
    "@npm_db_console//rc-calendar",
    "@npm_db_console//rc-form",
    "@npm_db_console//rc-progress",
    "@npm_db_console//react",
    "@npm_db_console//react-copy-to-clipboard",
    "@npm_db_console//react-dom",
    "@npm_db_console//react-helmet",
    "@npm_db_console//react-motion",
    "@npm_db_console//react-paginate",
    "@npm_db_console//react-redux",
    "@npm_db_console//react-router-dom",
    "@npm_db_console//react-select",
    "@npm_db_console//redux",
    "@npm_db_console//redux-saga",
    "@npm_db_console//redux-thunk",
    "@npm_db_console//reselect",
    "@npm_db_console//whatwg-fetch",
] + DEV_DEPENDENCIES

WEBPACK_DATA_COMMON = glob(
    include = [
        "assets/**",
        "fonts/**",
        "src/**",
        "styl/**",
    ],
    exclude = [
        "src/js/**",
        "src/**/*.stories.tsx",
        "src/**/*.spec.tsx",
        "src/**/*.spec.ts",
    ],
) + [
    "babel.config.js",
    ".eslintrc.json",
    ".stylintrc",
    "favicon.ico",
    "tsconfig.json",
    "webpack.config.js",
    "//pkg/ui/workspaces/cluster-ui:cluster-ui",
    "//pkg/ui/workspaces/db-console/src/js:crdb-protobuf-client",
]

WEBPACK_DATA_OSS = WEBPACK_DATA_COMMON + DEPENDENCIES

WEBPACK_DATA_CCL = WEBPACK_DATA_COMMON + [
    "//pkg/ui/workspaces/db-console/ccl/src/js:crdb-protobuf-client-ccl",
    "ccl",
] + DEPENDENCIES

webpack(
    name = "db-console-ccl",
    args = [
        "--config $(execpath webpack.config.js)",
        "--env.dist=ccl",
        "--mode production",
        "--env.output=$(RULEDIR)/db-console-ccl",
    ],
    data = WEBPACK_DATA_CCL,
    env = {
        "NODE_OPTIONS": "--max-old-space-size=5000",
    },
    output_dir = True,
    visibility = ["//visibility:public"],
)

webpack(
    name = "db-console-oss",
    args = [
        "--config $(execpath webpack.config.js)",
        "--env.dist=oss",
        "--mode production",
        "--env.output=$(RULEDIR)/db-console-oss",
    ],
    data = WEBPACK_DATA_OSS,
    env = {
        "NODE_OPTIONS": "--max-old-space-size=5000",
    },
    output_dir = True,
    visibility = ["//visibility:public"],
)

filegroup(
    name = "node_modules",
    srcs = glob(
        include = [
            "node_modules/**",
        ],
    ),
)

stylint_test(
    name = "stylint",
    args = [
        "-c $(execpath .stylintrc)",
        "$(execpath styl)",
    ],
    data = [
        ".stylintrc",
        "fonts",
        "src",
        "styl",
    ] + [":node_modules"],
)

eslint_test(
    name = "eslint",
    data = [
        ".eslintrc.json",
        ".prettierignore",
        "ccl",
        "prettier.config.js",
        "src",
        "//pkg/ui/workspaces/eslint-plugin-crdb",
        "@npm_db_console//@cockroachlabs/eslint-config",
        "@npm_db_console//@typescript-eslint/eslint-plugin",
        "@npm_db_console//@typescript-eslint/parser",
        "@npm_db_console//eslint-plugin-prettier",
        "@npm_db_console//eslint-plugin-react",
        "@npm_db_console//eslint-plugin-react-hooks",
        "@npm_db_console//prettier",
        "@npm_db_console//react",
    ],
    templated_args = [
        "--ext .ts",
        "--ext .js",
        "--ext .tsx",
        "-c",
        "$$(rlocation $(rootpath .eslintrc.json))",
        "$$(rlocation $(rootpath src))",
        "$$(rlocation $(rootpath ccl))",
    ],
)

tsc_test(
    name = "typecheck",
    data = glob(
        [
            "src/**/*.ts",
            "src/**/*.tsx",
            "ccl/src/**/*.ts",
            "ccl/src/**/*.tsx",
        ],
    ) + [
        "tsconfig.json",
        "tsconfig.linting.json",
        "//pkg/ui/workspaces/cluster-ui:cluster-ui",
        "//pkg/ui/workspaces/db-console/src/js:crdb-protobuf-client",
        "//pkg/ui/workspaces/db-console/ccl/src/js:crdb-protobuf-client-ccl",
        "@npm_db_console//@babel/parser",
        "@npm_db_console//@babel/types",
        "@npm_db_console//@cockroachlabs/design-tokens",
        "@npm_db_console//@cockroachlabs/icons",
        "@npm_db_console//@cockroachlabs/ui-components",
        "@npm_db_console//@reduxjs/toolkit",
        "@npm_db_console//@testing-library/react",
        "@npm_db_console//@testing-library/user-event",
        "@npm_db_console//@types",
        "@npm_db_console//antd",
        "@npm_db_console//classnames",
        "@npm_db_console//connected-react-router",
        "@npm_db_console//highlight.js",
        "@npm_db_console//moment",
        "@npm_db_console//moment-timezone",
        "@npm_db_console//protobufjs",
        "@npm_db_console//redux",
        "@npm_db_console//redux-saga",
        "@npm_db_console//redux-saga-test-plan",
        "@npm_db_console//reselect",
        "@npm_db_console//uplot",
    ],
    templated_args = [
        "-p",
        "$(rootpath tsconfig.linting.json)",
    ],
)

test_suite(
    name = "lint",
    tests = [
        ":eslint",
        ":stylint",
        ":typecheck",
    ],
)

SRC_NOT_PROTO_CLIENT = glob(
    ["src/**"],
    exclude = ["protos.*"],
)

CCL_NOT_PROTO_CLIENT = glob(
    ["ccl/**"],
    exclude = ["protos.*"],
)

JEST_DEPS = DEPENDENCIES + [
    ".eslintrc.json",
    "babel.config.js",
    "package.json",
    "jest.config.js",
    "tsconfig.json",
    "tsconfig.linting.json",
    "@npm_db_console//@babel/plugin-proposal-class-properties",
    "@npm_db_console//@babel/plugin-proposal-object-rest-spread",
    "@npm_db_console//@babel/plugin-transform-modules-commonjs",
    "@npm_db_console//@reduxjs/toolkit",
    "@npm_db_console//identity-obj-proxy",
    "@npm_db_console//ts-jest",
    "@npm_db_console//jest-enzyme",
    "@npm_db_console//jest-canvas-mock",
    "//pkg/ui/workspaces/db-console/src/js:crdb-protobuf-client",
    "//pkg/ui/workspaces/db-console/ccl/src/js:crdb-protobuf-client-ccl",
    "//pkg/ui/workspaces/cluster-ui:cluster-ui",
    # A copy of protobufjs from the protobuf client's dependencies is required
    # to avoid "cannot find module protobufjs/minimal" errors when Babel
    # attempts to transpile the protobuf client during testing.
    "@npm_protos//protobufjs",
] + glob([
    "src/**",
    "ccl/**",
])

jest_test(
    name = "jest",
    size = "enormous",
    data = JEST_DEPS,
    templated_args = [
        # Increase the JS heap size: https://nodejs.org/docs/latest-v16.x/api/cli.html#--max-old-space-sizesize-in-megabytes
        "--node_options=--max-old-space-size=8192",
        # Prevent a v8-internal leak of compiled bytecode: https://github.com/facebook/jest/issues/11956#issuecomment-1401094780
        "--node_options=--no-compilation-cache",
        # Populate the global.gc() function during JS execution:
        # https://github.com/v8/v8/blob/5fe0aa3bc79c0a9d3ad546b79211f07105f09585/src/flags/flag-definitions.h#L1484-L1487
        "--node_options=--expose-gc",
        # Force jest workers to collect garbage after each suite: https://jestjs.io/docs/27.x/cli#--logheapusage
        "--logHeapUsage",
        "--maxWorkers=4",
        "--ci",
        "--config",
        "$(rootpath jest.config.js)",
    ],
)
