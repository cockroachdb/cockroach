# a nemesis that decommissions and recommissions a node.
role nemesis
  # --tag is needed because of issue https://github.com/cockroachdb/cockroach/issues/40667
  # unset-unused is needed because of issue https://github.com/cockroachdb/cockroach/issues/40597
  #
  # Note: the config here is slightly wrong, it is dependent on
  # roachprod node ID $CENTER_MAPPING to be also the same as crdb node
  # ID $CENTER_MAPPING. This is not guaranteed by roachprod in the
  # general case. As of this writing, it _happens_ to be the case for
  # those environments managed by roachenv.
  :start_event export HOME=$ROACHPROD_HOME/.. TMPDIR=/tmp; \\
         target_node=$CENTER_MAPPING; \\
		 if test -e odd; then \\
		    target_node=$((target_node+1)); \\
			rm -f odd; \\
		 else \\
		    touch odd; \\
		 fi; \\
		 echo $target_node>target_node; \\
         eval $(unset-unused.sh); \\
         $ROACHPROD run $CLUSTER:1 --tag run -- "./cockroach node decommission $target_node --insecure"
  :end_event export HOME=$ROACHPROD_HOME/.. TMPDIR=/tmp; \\
         eval $(unset-unused.sh); \\
		 target_node=$(cat target_node); \\
         $ROACHPROD run $CLUSTER:1 --tag run -- "./cockroach node recommission $target_node --insecure"

end
title decommissioning and recommissioning nodes

# To ensure that we don't start a test with a decommissioned node, we
# need to add a recommission step at the initialization phase.
role recommissioner
  :recommission_all export HOME=$ROACHPROD_HOME/.. TMPDIR=/tmp; \\
         for ((i=1;i<=$CLUSTER_SIZE;i++)); do \\
		    $ROACHPROD run $CLUSTER:1 --tag run -- "./cockroach node recommission $i --insecure"; \\
		 done
end
cast
  alice plays recommissioner
end
script
  # the y scene is ran at the end of the server start phase.
  scene y entails for alice: recommission_all
end
