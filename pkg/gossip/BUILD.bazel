load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "client.go",
        "doc.go",
        "gossip.go",
        "gossip.pb.go",
        "info.go",
        "infostore.go",
        "keys.go",
        "node_set.go",
        "server.go",
        "status.go",
        "util.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/gossip",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/base:go_default_library",
        "//pkg/config:go_default_library",
        "//pkg/config/zonepb:go_default_library",
        "//pkg/gossip/resolver:go_default_library",
        "//pkg/roachpb:go_default_library",
        "//pkg/rpc:go_default_library",
        "//pkg/rpc/nodedialer:go_default_library",
        "//pkg/util:go_default_library",
        "//pkg/util/errorutil:go_default_library",
        "//pkg/util/grpcutil:go_default_library",
        "//pkg/util/hlc:go_default_library",
        "//pkg/util/log:go_default_library",
        "//pkg/util/metric:go_default_library",
        "//pkg/util/protoutil:go_default_library",
        "//pkg/util/stop:go_default_library",
        "//pkg/util/syncutil:go_default_library",
        "//pkg/util/timeutil:go_default_library",
        "//pkg/util/uuid:go_default_library",
        "//vendor/github.com/cockroachdb/circuitbreaker:go_default_library",
        "//vendor/github.com/cockroachdb/errors:go_default_library",
        "//vendor/github.com/cockroachdb/logtags:go_default_library",
        "//vendor/github.com/cockroachdb/redact:go_default_library",
        "//vendor/github.com/gogo/protobuf/proto:go_default_library",
        "//vendor/github.com/gogo/protobuf/sortkeys:go_default_library",
        "//vendor/google.golang.org/grpc:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "client_test.go",
        "convergence_test.go",
        "gossip_test.go",
        "info_test.go",
        "infostore_test.go",
        "keys_test.go",
        "main_test.go",
        "node_set_test.go",
        "status_test.go",
        "storage_test.go",
        "util_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/base:go_default_library",
        "//pkg/config:go_default_library",
        "//pkg/config/zonepb:go_default_library",
        "//pkg/gossip/resolver:go_default_library",
        "//pkg/gossip/simulation:go_default_library",
        "//pkg/roachpb:go_default_library",
        "//pkg/rpc:go_default_library",
        "//pkg/security:go_default_library",
        "//pkg/security/securitytest:go_default_library",
        "//pkg/testutils:go_default_library",
        "//pkg/testutils/skip:go_default_library",
        "//pkg/util:go_default_library",
        "//pkg/util/hlc:go_default_library",
        "//pkg/util/leaktest:go_default_library",
        "//pkg/util/log:go_default_library",
        "//pkg/util/metric:go_default_library",
        "//pkg/util/netutil:go_default_library",
        "//pkg/util/protoutil:go_default_library",
        "//pkg/util/randutil:go_default_library",
        "//pkg/util/retry:go_default_library",
        "//pkg/util/stop:go_default_library",
        "//pkg/util/syncutil:go_default_library",
        "//pkg/util/timeutil:go_default_library",
        "//pkg/util/tracing:go_default_library",
        "//pkg/util/uuid:go_default_library",
        "//vendor/github.com/cockroachdb/errors:go_default_library",
        "//vendor/github.com/gogo/protobuf/proto:go_default_library",
        "//vendor/google.golang.org/grpc:go_default_library",
    ],
)
