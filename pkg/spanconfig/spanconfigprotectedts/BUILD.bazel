load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "spanconfigptssubscriber",
    srcs = [
        "ptsdecoder.go",
        "ptswatcher.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/spanconfig/spanconfigptssubscriber",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/keys",
        "//pkg/kv/kvclient/rangefeed:with-mocks",
        "//pkg/kv/kvclient/rangefeed/rangefeedbuffer",
        "//pkg/kv/kvserver/protectedts/ptpb",
        "//pkg/roachpb:with-mocks",
        "//pkg/settings/cluster",
        "//pkg/spanconfig",
        "//pkg/sql/catalog",
        "//pkg/sql/catalog/descpb",
        "//pkg/sql/catalog/systemschema",
        "//pkg/sql/row",
        "//pkg/sql/rowenc",
        "//pkg/sql/sem/tree",
        "//pkg/sql/types",
        "//pkg/util/encoding",
        "//pkg/util/hlc",
        "//pkg/util/log",
        "//pkg/util/log/logcrash",
        "//pkg/util/protoutil",
        "//pkg/util/stop",
        "//pkg/util/uuid",
        "@com_github_pkg_errors//:errors",
    ],
)

go_test(
    name = "spanconfigptssubscriber_test",
    srcs = ["ptsdecoder_test.go"],
    deps = [
        ":spanconfigptssubscriber",
        "//pkg/base",
        "//pkg/jobs",
        "//pkg/jobs/jobsprotectedts",
        "//pkg/keys",
        "//pkg/kv",
        "//pkg/kv/kvserver/protectedts/ptpb",
        "//pkg/roachpb:with-mocks",
        "//pkg/spanconfig",
        "//pkg/sql/distsql",
        "//pkg/testutils/testcluster",
        "//pkg/util/leaktest",
        "//pkg/util/uuid",
        "@com_github_stretchr_testify//require",
    ],
)

go_library(
    name = "spanconfigprotectedts",
    srcs = [
        "protectedts.go",
        "protectedtsdecoder.go",
        "protectedtsstore.go",
        "protectedtssubscriber.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/spanconfig/spanconfigprotectedts",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/base",
        "//pkg/keys",
        "//pkg/kv/kvclient/rangefeed:with-mocks",
        "//pkg/kv/kvclient/rangefeed/rangefeedbuffer",
        "//pkg/kv/kvserver/protectedts/ptpb",
        "//pkg/roachpb:with-mocks",
        "//pkg/sql/catalog",
        "//pkg/sql/catalog/descpb",
        "//pkg/sql/catalog/systemschema",
        "//pkg/sql/row",
        "//pkg/sql/rowenc",
        "//pkg/sql/sem/tree",
        "//pkg/sql/types",
        "//pkg/util/encoding",
        "//pkg/util/grpcutil",
        "//pkg/util/hlc",
        "//pkg/util/log",
        "//pkg/util/protoutil",
        "//pkg/util/retry",
        "//pkg/util/stop",
        "//pkg/util/syncutil",
        "//pkg/util/timeutil",
        "//pkg/util/uuid",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_pkg_errors//:errors",
    ],
)

go_test(
    name = "spanconfigprotectedts_test",
    srcs = ["protectedtsdecoder_test.go"],
    deps = [
        ":spanconfigprotectedts",
        "//pkg/base",
        "//pkg/jobs",
        "//pkg/jobs/jobsprotectedts",
        "//pkg/keys",
        "//pkg/kv",
        "//pkg/kv/kvserver/protectedts/ptpb",
        "//pkg/roachpb:with-mocks",
        "//pkg/spanconfig",
        "//pkg/sql/distsql",
        "//pkg/testutils/testcluster",
        "//pkg/util/leaktest",
        "//pkg/util/uuid",
        "@com_github_stretchr_testify//require",
    ],
)
