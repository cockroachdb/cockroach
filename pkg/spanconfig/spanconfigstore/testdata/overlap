# Test operations where the spans overlap with the existing ones.

set span=[b,h) conf=A
----
added [b,h):A


# Check that writing a span with a partial overlap first deletes the existing
# entry and adds three new ones.
set span=[d,f) conf=B
----
deleted [b,h)
added [b,d):A
added [f,h):A
added [d,f):B

overlapping span=[b,h)
----
[b,d):A
[d,f):B
[f,h):A


# Check that writing a span that partially overlaps with multiple existing
# entries deletes all of them, and re-adds the right non-overlapping fragments
# with the right configs.
set span=[c,e) conf=C
----
deleted [b,d)
deleted [d,f)
added [b,c):A
added [e,f):B
added [c,e):C

overlapping span=[b,h)
----
[b,c):A
[c,e):C
[e,f):B
[f,h):A

# Check that when a span being written to entirely envelopes an existing entry,
# that entry is deleted in its entirety.
delete span=[d,g)
----
deleted [c,e)
deleted [e,f)
deleted [f,h)
added [c,d):C
added [g,h):A

overlapping span=[b,h)
----
[b,c):A
[c,d):C
[g,h):A

# Validate that the right split points (span start keys) are surfaced.
needs-split span=[b,h)
----
true

compute-split span=[b,h)
----
key=c

set span=[b,g) conf=A
----
deleted [b,c)
deleted [c,d)
added [b,g):A

overlapping span=[b,h)
----
[b,g):A
[g,h):A

needs-split span=[b,h)
----
true

compute-split span=[b,h)
----
key=g

needs-split span=[h,z)
----
false
