load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "spanconfigsqlwatcher",
    srcs = [
        "event_buffer.go",
        "sql_watcher.go",
        "zones_decoder.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/spanconfig/spanconfigsqlwatcher",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/keys",
        "//pkg/kv/kvclient/rangefeed:with-mocks",
        "//pkg/roachpb:with-mocks",
        "//pkg/settings/cluster",
        "//pkg/spanconfig",
        "//pkg/sql/catalog",
        "//pkg/sql/catalog/descpb",
        "//pkg/sql/catalog/systemschema",
        "//pkg/sql/rowenc",
        "//pkg/sql/sem/tree",
        "//pkg/sql/types",
        "//pkg/util/hlc",
        "//pkg/util/log",
        "//pkg/util/log/logcrash",
        "//pkg/util/stop",
        "//pkg/util/syncutil",
        "@com_github_cockroachdb_errors//:errors",
    ],
)

go_test(
    name = "spanconfigsqlwatcher_test",
    srcs = [
        "event_buffer_test.go",
        "main_test.go",
        "sql_watcher_test.go",
        "zones_decoder_test.go",
    ],
    embed = [":spanconfigsqlwatcher"],
    deps = [
        "//pkg/base",
        "//pkg/config/zonepb",
        "//pkg/jobs",
        "//pkg/keys",
        "//pkg/kv/kvclient/rangefeed:with-mocks",
        "//pkg/security",
        "//pkg/security/securitytest",
        "//pkg/server",
        "//pkg/spanconfig",
        "//pkg/sql/catalog",
        "//pkg/sql/catalog/descpb",
        "//pkg/testutils/serverutils",
        "//pkg/testutils/testcluster",
        "//pkg/util/hlc",
        "//pkg/util/leaktest",
        "//pkg/util/protoutil",
        "@com_github_gogo_protobuf//proto",
        "@com_github_stretchr_testify//require",
    ],
)
