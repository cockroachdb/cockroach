// Copyright 2022 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

syntax = "proto3";
package cockroach.cloud.cloudpb;
option go_package = "github.com/cockroachdb/cockroach/pkg/cloud/cloudpb";

import "gogoproto/gogo.proto";

enum ExternalStorageProvider {
  Unknown = 0;
  nodelocal = 1;
  http = 2;
  s3 = 3;
  gs = 4;
  azure = 5;
  reserved 6;
  userfile = 7;
  null = 8;
  external = 9;
}

enum AzureAuth {
  LEGACY = 0;  // Storage account key
  EXPLICIT = 1;  // App Registration + RBAC
  IMPLICIT = 2;  // Environment Credentials or Managed Service
}

message ExternalStorage {
  ExternalStorageProvider provider = 1;

  message LocalFileConfig {
    string path = 1;
    uint32 node_id = 2 [(gogoproto.customname) = "NodeID",
      (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.NodeID"];
  }
  message Http {
    string baseUri = 1;
  }
  // AssumeRoleProvider contains fields about the role that needs to be assumed
  // in order to access the external storage.
  message AssumeRoleProvider {
    // Role, if non-empty, is the ARN of the AWS Role or the email address of
    // the GCP Service Account that is being assumed.
    string role = 1;
    // ExternalID, if non-empty, is the external ID that must be passed along
    // with the role in order to assume it. Some additional information about
    // the issues that external IDs can address can be found on the AWS docs:
    // https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html
    //
    // Currently only AWS supports external ID, there is an open issue tracker
    // for support in GCP: https://issuetracker.google.com/issues/217037003
    string external_id = 2  [(gogoproto.customname) = "ExternalID"];
  }
  message S3 {
    string bucket = 1;
    string prefix = 2;

    string access_key = 3;
    string secret = 4;
    string temp_token = 5;
    string endpoint = 6;
    string region = 7;
    string auth = 8;
    string server_enc_mode  = 9;
    string server_kms_id = 10  [(gogoproto.customname) = "ServerKMSID"];
    string storage_class = 11;

    // RoleARN if non-empty, is the ARN of the role that should be assumed in
    // order to access this storage.
    // TODO(rui): this field is currently kept for mixed-version state, remove
    // in 23.2 in favor of AssumeRoleProvider.
    string role_arn = 12 [(gogoproto.customname) = "RoleARN"];

    // DelegateRoleARNs are the ARNs of intermediate roles in an assume role
    // chain. These roles will be assumed in the order they appear in the list
    // so that the role specified by RoleARN can be assumed.
    // TODO(rui): this field is currently kept for mixed-version state, remove
    // in 23.2 in favor of DelegateRoleProviders.
    repeated string delegate_role_arns = 13 [(gogoproto.customname) = "DelegateRoleARNs"];

    // AssumeRoleProvider, if the role is non-empty, contains the ARN of the
    // role that should be assumed in order to access this storage, as well as
    // an optional external ID.
    AssumeRoleProvider assume_role_provider = 14 [(gogoproto.nullable) = false];

    // DelegateRoleProviders contain the ARNs of intermediate roles in an assume
    // role chain. These roles will be assumed in the order they appear in the
    // list so that the role specified in AssumeRoleProvider can be assumed.
    repeated AssumeRoleProvider delegate_role_providers = 15 [(gogoproto.nullable) = false];
  }
  message GCS {
    string bucket = 1;
    string prefix = 2;
    string auth = 3;

    // BillingProject if non-empty, is the Google Cloud project to bill for all storage requests.
    // This is required to be set if using a "requestor pays" bucket.
    string billing_project = 4;

    string credentials = 5;

    // AssumeRole if non-empty, is the email of the service account that should
    // be assumed in order to access this storage.
    string assume_role = 6;

    // AssumeRoleDelegates are the intermediate service account email addresses
    // in an assume role chain. These delegates will be assumed in the order
    // they appear in the list so that the service account specified by
    // AssumeRole can be assumed.
    repeated string assume_role_delegates = 8;

    // BearerToken is a temporary bearer token that could be used to access the
    // storage. This token is only used for "specified" auth mode and if
    // Credentials is not supplied. Currently only OAuth 2.0 tokens are
    // supported.
    string bearer_token = 7;

    // Next ID: 9
  }
  message Azure {
    string container = 1;
    string prefix = 2;

    string account_name = 3;
    string account_key = 4;
    string environment = 5;

    string client_id = 6 [(gogoproto.customname) = "ClientID"];
    string client_secret = 7;
    string tenant_id = 8 [(gogoproto.customname) = "TenantID"];

    AzureAuth auth = 9;
  }
  message FileTable {
    // User interacting with the external storage. This is used to check access
    // privileges of the requested user scoped tables.
    // This field is really of type security.SQLUsername. We can't use
    // the type directly however because it would create a circular dependency.
    string user = 1;

    // QualifiedTableName specifies the database.schema.tablename which the
    // FileTableSystem should interact with when servicing reads/writes.
    string qualified_table_name = 2;

    // Path is the filename being read/written to via the FileTableSystem.
    string path = 3;
  }
  // ExternalConnectionConfig is the ExternalStorage configuration for the
  // `external` provider.
  message ExternalConnectionConfig {
    // Name identifies the External Connection object.
    string name = 1;
    // User interacting with the external storage. This is used to check access
    // privileges of the external connection object.
    string user = 2;
    // Path will be appended to the endpoint of the resource represented by the
    // external connection object. It is used to access subdirectories/buckets of
    // the external resource.
    string path = 3;
  }

  LocalFileConfig local_file_config = 2 [(gogoproto.nullable) = false];
  Http HttpPath = 3 [(gogoproto.nullable) = false];
  GCS GoogleCloudConfig = 4;
  S3 S3Config = 5;
  Azure AzureConfig = 6;
  reserved 7;
  FileTable FileTableConfig = 8 [(gogoproto.nullable) = false];
  ExternalConnectionConfig external_connection_config = 9 [(gogoproto.nullable) = false];
}

