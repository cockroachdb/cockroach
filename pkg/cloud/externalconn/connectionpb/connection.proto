// Copyright 2022 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

syntax = "proto3";
package cockroach.cloud.externalconn.connectionpb;
option go_package = "connectionpb";

import "gogoproto/gogo.proto";
import "cloud/cloudpb/external_storage.proto";

enum ConnectionProvider {
  Unknown = 0;
  nodelocal = 1;
  gs_kms = 2;
}

enum ConnectionType {
  option (gogoproto.goproto_enum_prefix) = false;

  UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "TypeUnspecified"];
  STORAGE = 1 [(gogoproto.enumvalue_customname) = "TypeStorage"];
  KMS = 2 [(gogoproto.enumvalue_customname) = "TypeKMS"];
}

message ConnectionDetails {
  ConnectionProvider provider = 1;

  oneof details {
    NodelocalConnectionDetails nodelocal = 2;
    GCSKMSConnectionDetails gcs_kms = 3 [(gogoproto.customname) = "GCSKMS"];
  }
}

message NodelocalConnectionDetails {
  cloudpb.LocalFileConfig cfg = 1 [(gogoproto.nullable) = false];
}

message GCSKMSConnectionDetails {
  string credentials = 1;
  string auth = 2;
  string assume_role = 3;
  repeated string delegate_roles = 4;
  string bearer_token = 5;
  string cmk = 6 [(gogoproto.customname) = "CMK"];
}
