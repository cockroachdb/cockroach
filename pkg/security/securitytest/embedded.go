// Code generated by go-bindata. DO NOT EDIT.
// sources:
// test_certs/ca-client-tenant.crt (1.151kB)
// test_certs/ca-client-tenant.key (1.675kB)
// test_certs/ca.crt (1.151kB)
// test_certs/ca.key (1.679kB)
// test_certs/client-tenant.10.crt (1.257kB)
// test_certs/client-tenant.10.key (1.675kB)
// test_certs/client-tenant.11.crt (1.257kB)
// test_certs/client-tenant.11.key (1.679kB)
// test_certs/client-tenant.20.crt (1.257kB)
// test_certs/client-tenant.20.key (1.675kB)
// test_certs/client.root.crt (1.143kB)
// test_certs/client.root.key (1.675kB)
// test_certs/client.testuser.crt (1.151kB)
// test_certs/client.testuser.key (1.679kB)
// test_certs/client.testuser2.crt (1.151kB)
// test_certs/client.testuser2.key (1.675kB)
// test_certs/node.crt (1.237kB)
// test_certs/node.key (1.679kB)

package securitytest

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _test_certsCaClientTenantCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\xcb\xee\xaa\x48\x10\x87\xf7\x3c\xc5\xec\xc9\x44\x40\x54\x58\xcc\xa2\x9b\x6e\xb0\x45\x1a\x1b\x1b\x04\x76\x88\x82\x72\x11\x11\xe4\xf6\xf4\x93\xff\x39\xc9\x4c\x32\x53\xcb\x2f\xa9\x5f\x2a\x55\x95\xef\xcf\x9f\x82\xd8\x22\xf4\x0f\x03\x7b\x9c\x98\xc4\x00\x1c\xff\xa2\x82\x43\x08\x3a\x70\xc3\x00\xb9\x92\x83\x91\x40\x90\x13\xe6\x66\x9f\x4b\x51\xf4\xa1\x51\x48\x2e\xb0\x90\x42\x37\xd2\x26\x41\x80\xc2\xbc\x6c\x1f\xe5\xd3\xd2\x47\x09\x02\xd6\x99\x00\x81\x8f\xe0\x78\x64\xc4\x20\x42\x01\x63\x36\x1e\x2b\x74\x55\xe8\x27\xad\xf5\x47\xa4\xe4\x93\xc9\x01\x87\x39\x0d\x20\x70\x38\xc2\x74\x88\x94\x7e\xbe\x2a\x66\x91\x18\x10\x31\x0e\xee\xe6\x28\xcd\x82\xc3\xf1\xe8\x20\x7f\x76\xb8\xbf\x71\x10\x4c\xcc\x51\x5a\x7e\x31\xce\xfe\x61\x8e\xd1\x4d\xb8\x00\xec\x77\x58\xc3\x0d\xff\xdf\x30\x21\x41\x38\x70\xa0\x63\x01\xd9\xc7\x60\x72\x1c\xa6\xe8\x45\xb2\x3e\x0c\xd1\x85\x36\x04\x53\xe8\x10\x02\x49\xf1\xdf\xf1\xb1\x09\x80\x6b\x00\xa6\x81\x9f\x1d\x40\x23\xb7\x0d\xc0\x30\x90\x68\x76\x32\xc5\xef\x73\x73\xb3\x06\x5a\xd7\xac\x56\x64\x93\xf1\x70\xf2\x72\x67\x27\x06\xdd\x0e\x8c\xa4\x54\x63\xb9\x57\x8f\xd1\xee\x91\xe0\xf8\xb6\x47\x81\xa0\x0c\xed\x43\x5d\x4d\x45\x66\x27\x07\x0e\x53\xe5\xb9\x90\x25\x96\xe7\x21\xfd\xbe\x0b\x2f\x5c\x5f\xe4\x92\xd3\xa2\xa6\x3b\x4f\x4a\x4f\x95\x1d\xdf\x8a\x63\x7d\xad\xe8\x73\x6b\x78\xe3\x8a\xbc\x93\x50\x40\xfa\xcc\x86\x7b\xaa\xbd\x51\xbd\x73\x13\x8b\x16\x27\x36\x38\x67\xb2\x41\xd3\xa3\x2a\x9c\xb0\x5e\x42\xa9\x9d\xdc\xad\x6b\x2e\x5a\xb4\x85\xd5\xa7\x32\x95\x83\x6c\x5a\x01\x2d\x7b\x5d\x5e\x96\x97\x90\x68\xef\x67\xdd\x06\x7a\x10\x2f\x9a\x68\x4d\xa8\x72\xc4\x83\x1f\x96\xbd\xa7\x97\xf7\xc6\x1d\x5e\xeb\xaa\x4f\x8e\x5d\xdf\x7d\xef\xa7\x06\x54\xe5\x44\x94\xfb\xa3\xd1\xe8\x90\x9a\xe9\x6c\x95\xaa\x2f\x7c\xce\x79\xd3\xaf\x8a\x6e\xd1\xfa\x6b\xcd\xef\x8e\x6d\x4f\x22\x33\xb8\x2e\x3f\xd5\x52\x52\xfd\x1e\x7d\x29\xd4\x9f\x0d\x47\xa7\x5d\x7e\xb9\x89\x57\x34\xc7\x48\xd2\xb2\x61\x1d\x3f\x2d\xd8\xea\x7b\x41\x43\x56\x44\xa5\x21\x10\x71\xdc\x9d\xc3\x73\x15\x2a\x03\x5d\xd7\xb9\x5d\x60\xb8\xba\xeb\x17\x3b\x67\x04\x01\x06\x60\x23\xf9\x23\x5b\x80\xfb\x73\xca\x3d\xd3\x20\xc8\x34\x0c\x81\x63\x08\xe0\xcb\x46\x9c\x47\x28\xf0\x24\x0e\xd8\x7e\x05\x41\x3e\xc2\x1c\xc3\xd5\xcf\x57\x72\x70\xfb\xdd\xa0\x62\x33\x67\xbe\x7c\x95\x45\xbf\xa3\xab\xd3\xd0\x78\x98\xd6\xed\x09\x96\xb2\x10\x95\xaa\xb6\xce\xc8\x88\x58\x74\xb0\x9b\x98\x3c\x86\x94\x02\x86\x8f\x90\x01\x94\xe7\x18\x02\xbc\xb1\xad\x60\xcd\x25\xc4\xf6\xdf\xa8\x6a\xd6\x9f\xe1\xd8\x3c\xd6\xb1\x4a\xb2\xcf\xfd\xd6\x20\xe1\xba\xaa\x7a\xf5\x43\x22\x2d\x5b\x8c\x2a\x11\x93\x3a\xb2\x6f\x2f\xef\xfb\xee\xd3\x8d\x51\x7d\xe3\x9d\x63\xad\x52\x7e\x16\xdb\xc7\x67\xab\x5f\xfd\x43\x6a\x13\xf9\xbd\x8b\x12\x65\x9f\x40\x26\xcb\xf1\x51\x90\x07\x3a\x4b\x61\x70\x3a\x37\xf5\xfa\x13\xcf\x5c\x7c\x6f\x0e\x6e\xda\x99\xea\xd3\xad\x61\x46\xe7\x2b\x6e\x24\xa7\x2f\xe5\x02\x47\x41\x62\x7d\xb5\x70\xeb\xe5\x1f\xbb\x86\xd0\x3d\x42\xea\xfa\x2b\xa1\x7c\x6d\x23\xd2\xe2\x36\x54\xa2\x44\xe9\x68\xba\x0e\xf5\xdb\x2d\xf9\x8a\xd9\x7b\xaf\xe0\x5d\x09\x76\xc7\xb3\xa5\x5c\x2a\xe8\xda\xab\x99\xec\xc9\x4b\x4f\xb7\x1b\x51\x7c\xd5\x0a\xb2\xee\x9c\x89\x17\xa1\x3c\x89\x95\xf4\x0d\xf7\xa3\x5d\x61\xab\x7c\xbd\x1e\xe1\x7a\xe2\xf6\x0c\x5d\xb7\xeb\x4a\x49\x0d\xcf\x33\xf7\x16\xdb\x32\x97\x48\xcb\xea\xfe\xba\x91\xbc\x60\x92\xb2\xee\x79\x06\xc3\x36\x0b\xcf\xa6\xe0\x9e\xb5\x5b\x31\xf6\xbd\x54\xb7\xd1\x1b\x98\x2e\xd8\x93\x36\xa9\xcf\x76\xd1\xf9\xd5\xec\x87\xaa\xd8\xb6\xb4\x98\x86\x67\x61\x80\x0b\x69\x71\x29\x8e\xcb\xed\xd3\xb0\xbf\x84\x5f\x3a\xc1\x14\xfd\x5f\x31\x7f\x07\x00\x00\xff\xff\x7a\x7f\x6a\x93\x7f\x04\x00\x00")

func test_certsCaClientTenantCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantCrt,
		"test_certs/ca-client-tenant.crt",
	)
}

func test_certsCaClientTenantCrt() (*asset, error) {
	bytes, err := test_certsCaClientTenantCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf8, 0x1f, 0x44, 0x5d, 0xbf, 0xbd, 0xa5, 0x2b, 0x22, 0xe8, 0xb2, 0x1a, 0x9e, 0xdc, 0x14, 0xe7, 0x80, 0xaa, 0x52, 0xb6, 0xb5, 0x59, 0xb3, 0xd2, 0xc0, 0x54, 0x6a, 0x9e, 0x7e, 0xb6, 0xeb, 0x33}}
	return a, nil
}

var _test_certsCaClientTenantKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb5\x12\xac\xd8\x02\x85\xe1\x9c\xa7\x38\x39\x75\x0b\x6d\x24\xc4\xdd\x69\x2c\xc3\x1a\xdd\x4d\xe3\xf2\xf4\xb7\x66\x4e\x3a\x2b\x5d\xc9\x97\xfd\xff\xfb\x67\xbc\xa4\x68\xf6\x1f\x3f\xe0\xfe\xb8\xbe\x16\x71\xa1\xf4\xc7\x90\xd2\x7f\x1f\xc8\xd2\x34\x69\x3a\x35\x9e\xe3\x0c\x81\xf3\x24\x0e\xb5\x3f\xae\x0c\xef\xdd\xab\x52\x0e\x1b\x00\x0f\xe0\x98\xec\x85\xc9\xe5\x37\x16\x0d\x47\x2b\xcd\x9d\xda\x40\x66\xd8\x46\x9a\x29\xdd\xe6\x52\x06\x55\xaa\x18\xe1\xc7\xdc\x92\xc8\xd5\x7f\x8c\x5c\x0f\xf9\x12\xef\x1e\xed\xc9\xb0\xfb\x28\xf7\x5f\xef\x27\x44\x8c\x0d\xa1\xdd\x03\x9b\xf6\xd1\xd2\x1d\x8d\xac\xea\x4d\x50\x8c\x76\x47\x09\xfe\x89\x40\xda\x2f\x4f\x44\xf6\xf6\x8e\xba\x64\x7e\x22\xa0\x9d\x5c\xb1\x7b\xd7\x3b\xac\x40\x7b\x89\x57\x3b\xf6\x56\x02\x9e\x04\x9d\x2f\x87\x72\xe4\x87\x49\x29\x7e\x5c\x46\x19\xd7\x31\x59\x89\xec\x61\x63\x21\xec\x79\xbe\x39\xf3\xeb\xc0\x1c\xb1\x51\xf6\x30\xb0\x72\x89\xa3\x05\xeb\xef\x64\xd8\x7c\x76\xa8\x27\xe7\xf8\x12\xe3\x96\x9b\xeb\xb6\xee\xb5\x3b\x71\xe3\x70\x69\x78\xdd\x4e\x8c\x7d\x94\x72\x79\x43\xca\x40\xbe\x97\xa0\x99\x36\xa4\x5f\x1f\x66\x2b\x40\x58\x5b\x86\x71\xc1\x9e\x10\xb2\x58\x47\x0e\x28\xf9\xde\xc4\xdd\xe6\xd9\x6e\x0a\x45\x97\x6e\xe2\x0a\x2e\xc4\x3b\x13\x51\xe6\x73\x10\x59\xa7\x40\xfc\xcc\xaa\x8c\xa8\xa4\x36\x7a\x44\xb0\x94\xad\x41\x12\x8c\x09\x7e\xd8\x04\x68\x8c\x5e\xe2\x91\x9a\x8d\x8d\xc6\xd3\x44\xce\xe3\x78\x6e\xd2\x78\x4e\x45\x3d\x46\xc2\x44\xca\xa2\xf0\x62\x49\x27\xc8\x60\xdb\xb4\xb0\xdc\x05\x38\xf7\xf3\x0d\xdc\x35\x4a\xe0\x75\x6b\x6a\x61\x59\x70\xa5\x95\x3a\xc2\x15\x53\xdc\x50\x76\x8c\x01\xb6\xf4\x5c\x76\x4f\x73\xf4\x1a\xb0\x39\xa5\x7e\x6f\xe9\xf9\x48\x12\x04\xe6\xc0\xe3\xe6\x2d\x1d\x96\x07\x9b\x95\x85\x11\x25\x25\x17\xa8\x64\xdb\xa2\x48\xd4\x2c\xfc\x45\xd2\xa3\xc8\x10\xe8\xe8\x80\xe7\x48\x8d\x1f\xd3\x8a\x00\x55\x4d\xc4\x5d\x68\x86\x25\xc0\x21\x40\x68\x12\x7f\xbd\xf1\x50\x08\x65\xd0\x68\x52\x74\xd2\x14\x95\x7d\x9e\xca\x87\xdc\xcc\xfb\xd5\xed\xd2\x71\x5d\xd9\xb1\x1a\x6f\x3d\x0e\x5e\x07\xfe\x0c\x01\x51\xf3\x97\x92\xa3\x88\x01\xcb\x14\xfc\x85\x6e\x7e\x23\x09\xa4\x5e\x74\x7d\xd6\x10\x43\x20\x9b\x18\xcc\xdb\x3d\x72\x51\x9c\x1a\x0d\xb9\x57\x8b\x6f\xf2\xa3\x00\xc7\x7a\xea\x88\xa6\xf3\x93\xc3\x3e\x73\x7d\xbb\x97\xc2\x4a\x2e\x9a\x33\x59\xa0\xa8\x23\x84\xb3\x78\x47\x5b\x9b\xc0\x11\xd1\xbf\xf5\x2b\xbd\x07\xc3\xd1\x8f\xd4\xde\xf1\xd3\xb0\xa9\xd6\xb2\x61\x24\x62\xb9\xbc\xda\x81\x3c\xed\x7a\x72\xd2\x2f\x8c\x63\xcd\xa3\xd7\x1c\x9e\x7b\x41\xd8\x1b\x8b\x34\x4f\x12\x9a\x54\xe2\xb0\xf1\x99\x9f\x3a\x1d\x4f\x74\x50\xdf\xd5\x90\xb7\xf8\x98\x22\x5a\xa4\x38\xdd\x25\x6c\xac\x6f\xd4\xbd\x62\xe9\x61\x83\xac\x34\x37\xc0\xd2\x6e\x53\x6f\xea\x0d\x99\x4a\xde\x3d\x84\x31\x5e\xcb\xb5\x3a\x9b\xf8\x70\xf4\x64\xbf\xf1\x20\x31\xf7\x69\x37\xc5\x3a\xf2\xb5\xa4\x78\x85\x51\x59\x28\xb8\x3b\x68\x9b\xe8\xc5\x77\xc6\xbc\xf6\x58\xf4\x48\x9d\x29\x9d\x15\x72\x6b\x9e\x4e\x26\xbd\x32\x1a\xf9\x96\x81\x66\xfa\xc1\x9d\x2f\xcd\x77\xf3\x9d\xa0\xb2\xc8\x28\x00\x71\xec\xbe\xdd\x13\xdf\x88\xcf\xaf\x7c\xe0\x6c\x4b\x5b\xd5\x2b\xfe\x8a\xe1\xb8\x9d\x21\xb7\x1a\x42\x66\x19\x7e\x2f\x3c\xbd\x6e\x63\xaf\xa2\xc5\xf7\x39\x60\x72\x4d\x23\x9b\xd5\x58\xdb\x0e\xa7\x00\x22\x8d\xed\xc0\x70\x33\xe9\xec\xac\x0e\x15\xcf\x83\x6a\x9f\x48\x1e\xab\xfd\x4e\x52\x48\xb5\xf1\x8b\xf6\xcc\x72\x88\x40\x6b\xd2\xaa\x50\xad\x1f\xef\x03\x90\x09\x61\x26\x27\xbb\x02\x91\xa8\x28\xa6\x1d\x0d\xdf\x3f\xbd\xf7\x9b\x29\xa9\xdc\x1e\x19\x14\x90\x01\xb9\xd7\x58\xc0\x7f\x56\xe8\x8d\x22\xe2\xec\xa4\x29\x4b\xab\x5a\x2e\xdb\x7b\x9c\xb1\x55\x56\x4e\x71\xff\xf4\x40\xb3\x6b\xdc\x98\xa6\x73\xaf\xfe\x92\xdb\xf2\x1b\xf8\xbf\x98\xbc\xea\xab\xcf\x04\x2b\x54\xe6\x3c\x86\x1a\x70\xbb\xf7\xdd\xcf\xcb\xc5\xf8\x86\xd9\x65\xd8\xf7\xad\x62\x7e\x89\xdc\xb4\x37\x18\x97\x8b\x08\x96\x45\xe9\x02\x16\xbc\x10\x50\x6c\x27\xa1\x85\x5f\x6e\xac\x4e\x35\x96\x2b\xf3\xfd\xd2\x52\x0e\xca\xf4\x52\x14\x86\x56\x01\x35\xa0\x73\xca\x3f\xd2\xef\xb2\xf6\x27\x76\xc9\x03\xad\xde\xfc\xbe\xc3\xb9\x63\x7d\xb8\xe7\xd1\x27\x16\x14\x02\xf2\xe1\xb7\xdf\x4d\xc2\x86\x67\xcd\xbf\x74\xd9\xa6\x15\x92\x07\x86\xfe\x7d\xfb\x67\x48\x3b\x65\xd1\xb2\x39\xad\xe4\x4f\xc2\xfe\x43\xe6\x7a\xc0\x79\xaf\x2e\xce\xce\x5c\xa5\xc2\xda\x90\x48\x07\xc5\x19\xf9\x4c\xac\x79\xc4\x38\x46\xe3\xab\x76\x28\x4f\xc8\xe4\xbc\xad\xb8\x8b\xef\xc2\x19\x3a\x56\x01\x8e\xe9\xf2\xdf\xf4\xaa\x5f\x88\xbb\x4a\x1f\xe2\x3d\x7a\xc9\x6f\x92\xaa\x88\xfa\x39\x3d\x2b\x4e\xed\xe2\x86\x8c\xa8\x2a\x8e\xe9\x97\x6a\x57\x76\x53\x08\x81\x63\xcd\x1f\xc5\xf5\x23\xc6\xb8\x5f\x5d\xb1\xe3\xa5\x95\x4c\x2e\x72\xf0\xbc\x4f\x49\xdf\x0f\xbe\xb1\x19\xfd\x45\x2d\x85\x9e\xaa\x21\x13\x0e\xe5\xa3\xf7\xfb\x7a\xc4\x1f\xcf\xcb\x9d\x03\xfb\xb9\x90\x5a\x3b\xe7\xdb\x33\xf8\x86\x4b\xe0\xac\x0d\xb4\x5c\x4e\x4b\xed\x38\x1e\x8a\x91\xd8\xf3\x67\xeb\x88\x09\x6f\xd8\x2b\x01\xba\x69\x84\xc3\x61\x44\x70\xa1\x50\xa2\xe4\xc4\x73\xbb\xef\xae\x1c\x25\x90\x62\x62\xa6\x40\xf3\x52\xad\x8b\x9f\x53\x16\x03\xf6\x7e\x69\x9c\x58\x50\xeb\xb6\x8f\xbc\xf4\xbb\x51\xc3\xd2\x9a\x14\x79\x6e\x75\xc3\x40\x8d\xce\x2f\xd7\x1e\xb0\x6b\x44\x86\xed\x6b\x29\x66\x3f\x41\xe4\xc5\xfa\xd9\x17\x49\xba\x14\xd3\xd6\x4f\xe1\x1c\x3d\x8d\x84\x60\x78\x54\x0c\x63\x60\xdc\x8f\x50\x9a\x54\xed\x4d\x6c\x2c\x2a\x3f\xa6\xbd\x25\x0a\x69\x6e\xa0\x7f\x93\x22\xd9\xe2\x7f\xa7\xe6\xff\x01\x00\x00\xff\xff\x59\x3c\x2c\x48\x8b\x06\x00\x00")

func test_certsCaClientTenantKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantKey,
		"test_certs/ca-client-tenant.key",
	)
}

func test_certsCaClientTenantKey() (*asset, error) {
	bytes, err := test_certsCaClientTenantKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcc, 0x3d, 0xe0, 0x3f, 0x63, 0xdf, 0xe3, 0x6, 0xea, 0xc1, 0x97, 0x7f, 0x42, 0xde, 0x73, 0x1a, 0xc8, 0xd1, 0x51, 0x95, 0xe5, 0x72, 0x84, 0x5b, 0xe6, 0x94, 0x7a, 0x74, 0x46, 0x26, 0x1b, 0x2c}}
	return a, nil
}

var _test_certsCaCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\x39\xd3\xb2\x4a\x13\x40\x73\x7e\xc5\x97\x5b\x5f\x89\x88\x5b\x38\x1b\x38\xc8\x0c\x0c\x20\x0a\x19\xe0\xc3\x2a\x22\x8b\x20\xfc\xfa\x5b\xef\x13\xbc\xc1\xbd\x1d\x9e\xaa\x3e\xd5\x41\xd7\xf9\xff\x9f\x81\x44\xa7\xfc\x7f\x88\x38\x1e\xd5\x28\x02\x1e\xf9\xa5\x12\xa3\x14\x1b\x25\x42\x20\xdb\x67\x60\xa2\x10\x64\xd4\x01\x66\x4c\x93\xdc\x61\x85\x39\x16\x13\x79\x3e\x08\x1e\x8a\x38\xee\x27\x2c\x02\xe3\xd2\x84\x34\x1f\x13\x0e\x04\x31\xa1\x00\x93\x74\x59\x88\xcb\x20\xd0\xc1\xe6\x4a\x50\xce\x0c\xa1\x9c\xca\x68\x6b\x8c\xc1\x8d\x37\xcc\xb9\x4e\x64\x0a\xb0\x2f\x04\x26\xd3\x17\xc7\x0a\xef\x92\xfa\x94\x07\x4a\x96\x09\x99\x4c\xe7\x3c\xe1\x12\x2b\xc9\x97\x61\xb0\x61\x25\xd9\x58\xf8\xba\xbb\xe5\x09\x67\xcb\x1f\x46\xe4\xbf\xac\x04\x1d\x73\xe8\x44\xc0\xaf\xec\x42\xa6\xe7\x5f\x99\x14\x28\xd9\x57\xf3\x80\x07\x33\xee\x43\xc0\x3c\x4c\xf8\x18\x28\xc3\x1c\x2b\x5a\x19\x21\x88\x85\x87\x10\x70\xe9\xbf\xcf\x87\x50\x00\x9c\x65\xc4\x96\x00\x46\x08\x88\x06\x65\x19\x81\xc0\xd2\x54\xd6\xa5\xe8\x75\x1c\x99\x01\x18\xad\x76\x4c\xff\x51\x79\x9f\x29\x2a\xeb\xd3\x37\xb0\x02\x56\x27\x97\xc8\x3f\x6a\x54\xee\xb7\xed\x23\xc4\xd8\x90\x7c\x36\x28\x3e\x2a\xc3\xfb\x7b\x24\xd1\x0e\x30\xfb\x5c\x44\xa4\xbd\x05\xb7\xe1\xfe\x74\x4b\x55\x99\x83\xfd\xfe\x12\xc4\xb9\xb2\x85\x2f\x3f\x35\xd8\xb1\x0f\xb8\xd2\x52\x3b\x07\x8b\xd3\xbe\xac\x56\xba\x06\xf5\xc7\x86\x59\x5a\x1f\xd3\x7b\xb9\x3f\x7d\x82\x55\xe3\xab\x7c\xe3\x5a\xb3\xc5\x3f\xe6\x82\x71\xd5\xdb\x91\x49\x1f\xfc\xe8\x31\x61\xc8\x91\xe7\x8c\x18\x9c\xf5\xc3\x5e\x57\x29\xa0\x5d\x2e\xf1\x24\x51\xc8\xd5\xdf\xbc\xee\x27\x9e\x38\x60\x8f\xce\xb6\xf2\x13\xb3\xcb\xec\xd6\x61\x73\x63\x4b\x30\x58\xa7\x48\xdd\x6d\xab\x5b\xbd\xcb\x3e\x2e\x37\xcf\x77\x98\x6b\xa7\xd1\xf3\x98\xda\xec\xf3\x8b\xd4\xf6\xa7\x30\x83\x6e\x69\xc2\xd8\x89\xb4\x16\x55\xe2\x60\xf9\xf2\xab\x33\xd3\x4b\x3e\xe0\xc8\x69\x1a\xd2\x15\xab\x67\xf6\x5a\x8b\xfe\x99\xdb\xb5\x5f\x05\xe4\x0b\xe0\xe5\xc7\x92\x43\x0e\x8c\x42\x0a\xc9\xad\xb8\xdf\x4a\xa7\x78\x79\xc3\xb0\x0e\x57\xdd\xe7\xb4\x35\x53\x1d\xe1\xcd\x71\xe9\x2b\x5e\x6d\x8a\x2b\x02\x13\x01\x20\xe2\x1a\x23\x6c\xc2\x59\x80\x7d\x47\xb6\x81\x38\xaf\x21\x10\x58\x02\x99\x59\x31\x48\xff\x3c\xd2\x83\x4c\x04\xae\x27\x41\x19\x08\x20\x48\x8f\x08\x08\x32\x9d\xc5\xef\x82\x05\x61\x40\x34\x08\x6c\xc7\xce\x6f\xb2\xf1\xf9\x59\x69\xfd\xb1\x9f\xbf\xbe\xd4\x61\x39\x53\x0f\xba\xce\x80\xac\x23\xb7\xd5\x5d\x1a\x6f\xb1\x20\x10\x4d\x57\x00\x54\x0a\x81\x80\xda\x5a\xf5\xe2\xdd\xb7\xef\x50\x95\x3f\xe9\xe0\xaa\xcb\x42\x03\xb1\xf2\x8b\x93\xca\x65\xc9\xdb\xb4\x72\x3d\x5e\xfd\xc8\xa3\x86\x40\x7e\xba\xc8\xda\x93\x27\xaa\xfa\x65\x61\xba\x4d\x57\xb8\x19\xdc\xef\x64\x3b\xe6\xd9\x12\x0e\xb0\xaf\xf7\x75\x30\xab\x1b\xdb\xf9\x26\x4e\xd8\x2e\x1a\x3a\x48\xb5\x35\x45\x73\xb5\x3d\x22\xf0\x51\xdd\xf1\x84\xee\xbe\x82\x17\xf5\x9d\x37\x6a\x17\xab\xfb\xb4\x8b\x9f\x20\x21\x56\xf3\x38\x8f\xbd\xde\xc2\xee\x10\xe7\xaf\xa0\x1a\x98\xee\xdc\x4a\x7b\xb8\x10\x4f\x82\xe1\xe3\x1e\x9b\x8e\x58\xcf\x6f\x95\x3f\xb4\xf4\x33\x07\x6f\x67\xff\x0a\x23\x3a\xf6\x5b\xdc\xd4\xda\x62\x84\xaa\x3c\xfc\x68\x5e\xbb\x1a\xe1\x56\xcf\xc6\x79\xef\x2c\x69\x75\x3d\x10\xa5\x49\xe6\x46\x92\x67\x98\xb5\x58\x3d\x40\x3d\xf8\x2c\xfb\xb2\xcf\x7f\xe6\xae\xb2\x92\x4f\x57\x6f\xfb\xec\x7d\xf0\x26\x2d\x0f\x9d\xce\x07\xf7\xed\x6a\x4d\xf4\xb5\xc7\x0d\x17\xd5\x87\xf5\xab\xde\xb8\x65\x19\x6e\x84\x34\x99\x53\x91\x0c\xdf\x42\x0d\x76\xdc\x44\xe3\xf3\xfa\x7a\x94\x27\xac\x01\xaf\x9a\x5f\x46\xea\x17\xc3\x01\x24\x36\x78\x77\x6f\xb5\x5b\x14\x6b\x5d\xea\xcd\x3a\xba\x9f\xc2\xab\xf4\x9b\x13\xc2\xf1\x7f\x13\xf3\x4f\x00\x00\x00\xff\xff\xc7\xdd\x96\x42\x7f\x04\x00\x00")

func test_certsCaCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaCrt,
		"test_certs/ca.crt",
	)
}

func test_certsCaCrt() (*asset, error) {
	bytes, err := test_certsCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x6f, 0xf, 0xce, 0x55, 0xfd, 0x44, 0xd0, 0x1e, 0x1a, 0x33, 0xf0, 0xaf, 0x3a, 0x5a, 0x34, 0xd0, 0x97, 0xfb, 0x9, 0xf9, 0xe, 0x18, 0xc8, 0xb9, 0xb5, 0x7e, 0xfa, 0xe9, 0x19, 0x9d, 0x9f}}
	return a, nil
}

var _test_certsCaKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xa3\x40\x02\x85\xe1\x9c\x53\x4c\x4e\x6d\x09\x61\x04\x04\x13\x34\xde\x08\xd7\xc2\x67\xd8\xc6\x08\x01\x12\xfe\xf4\x5b\x3b\xf1\xbe\xf4\x25\x7f\xf6\xfd\xe7\x7f\x13\x64\x55\xb7\xff\xc0\x17\xf8\xe3\x42\x3d\x04\xbe\xfc\xc7\x94\x93\x7f\x0f\x66\xe9\xba\x3c\x01\x5d\x00\xc0\x14\x81\x27\x03\x3a\x46\xe7\xc2\x99\xf5\xc9\xed\x3d\xd8\x5b\xbf\xdf\x53\x16\x91\xa7\x94\xa3\xf3\xc0\x7b\xc0\xa0\x33\xdd\xa7\x29\xde\x83\xee\x75\x55\xd3\xbd\xc7\x2c\xeb\x1d\x9c\x54\x1a\x98\xf6\xbb\x1a\x38\xf8\xed\xc1\xce\x55\xc6\xf8\x9a\xd2\x26\xbb\x57\xa1\xe9\x76\xb9\xd1\x7d\xc7\xa9\x59\xb5\xbc\x50\xcb\x90\xeb\xaf\xf3\x40\x54\x36\x22\x5c\x96\x6c\x75\xc6\x8a\xc7\x04\xdb\x8c\xe6\x54\x01\xcf\x0f\xbe\x72\xbf\x24\xd3\x3d\x9a\x18\x51\xa1\xce\xea\x34\x49\x6f\x96\xe5\xbc\x76\x7e\xfc\x35\x04\x75\x58\x07\xf8\xc0\xc9\x56\x39\x0b\x14\xf9\x36\xe6\x08\x01\xac\x5d\xe5\xfb\x71\x25\x10\xc6\x51\x59\x13\xf7\x43\x96\x46\xbd\xb8\xa5\xcc\x6f\xff\x1a\x66\x3a\x34\xc9\x65\xb7\x04\x7b\xff\x76\x9f\x0a\x66\xf9\x20\x32\x3a\xf1\x2b\x0b\x55\x8e\x49\xde\xb6\xae\xb6\xc3\x66\x79\x9e\xaf\xfb\x00\x14\xd3\xfa\x29\x8b\x32\x46\xa3\x09\xa5\x1f\x13\xbf\xaa\xdf\xc2\xcd\x2a\x61\x4f\x6a\x8b\x5e\xeb\xf3\x11\x89\x35\x2f\x9e\x91\x8c\xa7\x11\x44\xbe\x0c\xe4\x89\x66\x61\x4f\x60\x60\x30\x7a\x98\x19\x65\x66\xab\x66\xe9\x90\x14\xff\x79\xac\x2c\x55\x2c\x5c\xa2\xbb\xf1\xe5\x9c\x1e\xe9\x47\x86\xa7\x4b\xc0\x03\x02\x18\x75\x01\x08\x6c\xee\x06\xe4\x7c\x80\x88\x92\x22\x13\x61\x8c\xfd\x7e\xdb\x4f\x94\x6d\x26\xb5\xb0\xf6\xf0\x5c\x27\x8b\x79\x8d\xe5\x41\x3c\xd8\x22\x4b\xaa\xc9\x37\xb4\x7e\xe6\x0a\xd4\x25\x1f\xfe\x93\x26\xc2\x36\xcd\xac\x5e\x97\x6c\xf8\xd9\xee\xe6\xa2\x28\x98\xe4\xca\xde\xa6\x7e\x4b\x29\xdc\x52\xef\xa8\xe1\xcd\x00\x53\x95\xef\x9d\x76\x91\x74\x8f\x4b\xd0\xb5\x57\x58\x4f\xf2\xa9\x8a\x21\x14\x9a\x5a\x4d\x29\xb3\xb9\xf0\x96\xf0\x39\x36\xb3\x0f\x9c\xc1\x90\xee\x5a\x27\x7a\x32\x2b\xae\x58\x89\x32\xf1\x75\x92\x8a\x83\xe4\x4f\x39\x92\xdb\x3c\x7a\xc4\x06\xe1\xb6\x02\xaa\xe7\xc6\xb7\xa1\xf4\x71\xd6\xda\x7e\xc2\xe6\x7e\x07\xd4\x47\x7d\xa3\x47\x34\x60\x5c\x21\x95\xe1\x63\x90\xd4\xdf\xad\x1e\x7c\xa9\xa3\xc4\x28\xf6\x3a\x21\x66\xef\x7b\x36\xd4\x05\x6e\x26\x42\x2e\xe8\xf4\x5a\x5d\x16\x1e\x3e\xbb\x2b\x9e\xc4\x95\x3b\x11\xf1\xbd\x9c\x93\x38\x58\x80\xbd\x69\xd9\x9c\x60\x14\x06\x25\x7b\x26\x8b\xcd\x9d\x5c\xac\x83\xd6\x96\xe2\x5e\x6b\xb2\x57\x24\xe8\x3e\xfd\xf8\x06\x87\xe2\xbe\x74\x57\x3b\x75\x77\x2c\x72\xd6\xe4\xa3\xe2\x20\x32\x36\x64\xfa\x1a\xe3\x23\x45\x64\x46\x42\x44\x89\x0c\x98\xc1\x6d\x46\xe3\x3c\x72\x87\x86\x2b\x2f\x08\x43\x73\x86\x95\xc4\x5f\x75\xa6\x6b\x43\x1a\x06\xc9\x70\xa7\xd8\x5e\xdf\x4e\xb3\x7a\x4e\xbf\x2f\xd0\xe4\xf8\xc0\xd0\x63\x86\x15\x72\x94\x5c\x66\x3b\xae\xeb\x0d\x95\xb2\xa2\x6b\x9d\x27\xb7\x85\xe3\xb1\x39\xee\xb0\xbe\x9d\x64\x6b\x92\x63\x88\xea\xa7\xc7\x86\xfb\x4b\x2e\x9a\x85\x14\xfc\x40\xd2\xec\x79\x96\xb1\x29\xa1\xcd\xfb\x29\xa7\x3a\xaf\xd3\x0c\xc5\x3d\x6f\xbd\x38\x95\x6d\x5d\x78\x9e\xcb\xe1\x05\xf0\x9f\xd7\x39\x3f\x64\xc7\xbd\xa5\x33\x7c\x47\x03\xd1\x39\x74\xb8\xdd\xad\x7f\xc5\xf8\xd8\x98\xd8\x65\x26\x41\x28\xe9\x89\x34\x3d\x6c\x66\xce\x8c\x85\xe7\xb8\xf7\xee\xc4\x1e\x92\x94\x72\x46\x87\xee\xbf\x6d\xcd\x83\x56\xac\x35\x4f\x54\x1c\x38\xce\x7d\x72\xc9\xe9\x32\x92\xaa\x4a\x21\xae\x48\xac\xc5\x1f\xcd\x8b\x04\xd3\xfd\x7b\x4f\xdb\xc0\x7d\x4a\x56\xbe\x56\xac\x34\x7e\xa4\x34\x87\x24\x93\xe2\x86\x05\x69\x2e\xb5\x59\x93\xc8\x44\xb0\x79\x9d\x8a\x16\x8a\x09\xf2\xf6\x49\xdc\xc6\xd9\x17\xb1\xe1\x7a\xa4\x29\x19\xd6\xc1\x4b\xeb\x1e\x1f\xd1\x59\xe7\x16\xdc\x51\x5b\xe1\x93\xc7\xc2\x9d\xb2\x86\xa7\x81\x6e\x59\xf1\x2f\xb9\x17\xf9\xe2\xf5\xe1\x06\x69\x27\xba\x27\x62\x82\x9f\x10\x1a\x58\x55\xff\xa4\x7b\xa8\x2c\x6e\xa7\x87\xa3\x7e\xdb\x1e\x39\xd9\x47\xa0\x61\xdd\x1f\x74\x28\xf3\xb9\x84\xbd\xe8\x04\x6e\x90\x5a\xb2\xd1\x19\xb7\x41\xc3\x0d\x3f\x4f\xdf\x24\x45\x50\x8b\x46\x30\x56\x8f\xa1\xa4\x8a\xdf\xcd\xb7\xdf\xc4\xfb\x47\xbf\xf9\x2e\xc1\x2b\x85\x0e\x78\x33\xe4\x22\x7e\xba\x86\x39\x90\x69\xed\x66\x49\x5f\xb9\xe4\x24\x12\x0f\x35\xc6\xf7\xfa\xa1\x39\x4f\x4d\x36\xd2\x05\xd6\x37\xcc\xcc\xe2\x8f\x75\xfb\xfe\x1a\xda\x71\xbf\xc7\x9b\x2d\x55\x07\x45\x13\x27\xa2\x04\xd4\x9f\x0b\xc2\x5d\x7d\xed\x15\xae\x2f\x65\x17\xbf\xf8\xc3\x30\xb9\xc3\x68\xb7\x40\x31\x3d\xf2\x31\xa9\x94\x9a\x60\xd2\xcd\x66\x8f\x86\x2b\x7d\x5b\x65\x81\xea\xab\xfb\xe9\x9c\x6c\x2c\x9f\xc9\x3b\xab\x33\x74\x79\xf5\x93\xbe\x29\xa1\x77\xbe\x27\x57\xed\x18\x24\x94\xf6\xac\xe8\x1d\xc7\xe0\xaa\xb1\xc8\xb9\x38\x61\x35\x99\x9d\x73\x10\x58\xf3\x78\xae\x6f\x82\xfb\x66\xf9\x17\x75\x99\xc2\xc9\x4e\xa1\x05\x2a\xbc\x11\x7c\x3e\x09\x8d\x09\xc9\x3d\x60\x50\xb3\x0a\x04\xfe\xdc\x74\xaf\xdc\xf0\x28\x16\x41\xbb\x21\x8c\x6c\x2d\x89\xf6\x4c\x01\x79\x62\x53\x8b\x1f\xba\xfc\xd6\x29\x34\x56\x2b\x90\xdf\xe3\xa3\x36\x53\xa8\x59\x1d\x1c\x37\x6f\x69\xbc\xa0\x02\xaa\xf2\x35\xb3\x35\xa6\x3b\x54\x40\xa9\x9c\xae\xcb\xc7\xea\x4e\xbc\xc6\xbd\xaf\x38\x52\x95\x6b\x47\x95\x39\xda\x9c\xb7\xb4\x5b\x34\xfe\xb5\x26\x62\x49\x18\x81\xf1\x94\xcc\x1a\x08\x85\x26\x90\xc0\xff\xe4\xb3\x2e\xb9\x61\x4b\xd3\x37\xb8\x9f\x67\x3d\x63\xba\x42\x7e\xf9\x63\xf2\xaa\x26\xd9\x5e\xdd\x05\x81\x60\x7d\x94\xdb\x43\xc2\x55\xee\x1d\xde\x59\x03\xcc\xb3\x18\x35\x2f\x3e\x5b\xdb\x99\xca\x59\xae\x69\xda\xdf\x02\xfe\xfe\xc5\xfe\xb1\x22\xdb\xd2\xff\xe7\xe6\xbf\x01\x00\x00\xff\xff\xb7\x98\x9f\x0b\x8f\x06\x00\x00")

func test_certsCaKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaKey,
		"test_certs/ca.key",
	)
}

func test_certsCaKey() (*asset, error) {
	bytes, err := test_certsCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0x9e, 0x52, 0x6e, 0x63, 0x68, 0x61, 0x52, 0xdd, 0x5c, 0xfb, 0xd7, 0x0, 0x36, 0x54, 0xce, 0x58, 0xe4, 0xc, 0x92, 0x1, 0x81, 0x17, 0x57, 0xc7, 0x16, 0x95, 0x2f, 0x0, 0xe1, 0xf9, 0x3c}}
	return a, nil
}

var _test_certsClientTenant10Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x4b\xaf\xaa\x48\x14\x46\xe7\xfc\x8a\x9e\x93\x0e\x20\xf8\x60\xb8\x0b\x0a\x28\xb0\xd0\xe2\xa1\xc0\x4c\xe4\x00\xf2\xd0\x83\x1e\x28\xe0\xd7\x77\xee\xed\xe4\x4e\xba\xbf\xe1\xca\xce\x9a\xec\x64\xfd\xfd\x6b\x08\xdb\xc4\xff\xcb\xc0\x41\x44\x2c\x62\x40\x84\x7f\x53\x81\x12\x62\x16\xa6\x61\x40\xb7\x54\xc0\x09\x82\x8a\x04\xe0\x3d\x5a\xbf\x12\xfb\x6d\xb9\xbc\x3f\x6e\xa7\x7c\xd9\xaf\xfd\x0b\x57\xdc\x64\xa9\xeb\xbd\x32\x52\x4f\x77\x1f\x18\x3e\x22\x06\x5c\xf0\x56\x1c\x52\x04\x36\x28\x31\x36\x6a\xea\xb2\x8d\xde\xdc\x54\x77\x4a\xaf\xfe\x8b\x06\x31\xc7\x3c\x35\x2f\x8c\x99\x98\xcf\x66\xbe\xf1\xdf\xf7\x5e\xaf\xd3\x4d\x55\x31\x19\x73\xa7\xbe\xfb\x02\x6d\xf0\x4c\x4d\x50\x68\x83\x95\x53\x04\xfc\x5a\xdf\x7d\xda\xa4\x33\x35\x31\xff\xc3\x1a\x58\x69\x40\x38\x86\xdf\x32\x0f\xf3\xee\x8f\x4c\x48\x37\xd5\x8c\x4d\x38\xa1\xca\xbf\x20\xf8\x44\x48\x09\xba\xbc\xb7\xc6\xc2\xa1\xb3\xb1\x82\xfb\x2f\xa7\x11\x34\x98\x53\x42\x10\x69\xc0\x47\x55\x3b\xd4\xed\xc3\xd6\xb9\x8c\x04\x60\xd8\x02\x38\x19\xc0\x0e\xf0\xeb\xc0\xa8\x3c\x03\x18\x86\x81\xc4\x09\x15\x21\xed\xe1\xb3\x6d\x2c\x49\xd1\xb7\x6b\x09\x8e\xf8\x73\x74\xba\x0d\xdd\x65\xb4\xee\x35\x7a\xb0\x82\x54\xe8\xa2\x52\xcd\xf6\xf5\x72\x50\x89\x15\x9e\x65\x51\xe1\x24\x7e\x16\x74\xa6\xdd\x6e\x15\x4f\xdf\xcd\x58\x72\xdb\x8e\x6a\x49\x4e\x54\x6c\xa7\x30\x95\x4b\x9e\xf1\x34\x9f\x2f\xc6\x75\xeb\xb7\x8e\x28\xe0\x30\xef\x11\x3b\xb5\x89\x5f\x9f\x8d\x62\xaf\x01\xea\x82\xb6\x00\xf1\xe0\x06\x67\xcd\x7c\x15\xd6\x3e\x23\xa2\x7d\x2d\xad\x59\x1b\x36\x3f\x8b\xba\x7f\x9c\x50\xfb\x33\x75\xbd\xdf\xee\x90\x26\xbe\x05\x27\x6f\x4b\xff\xae\xb0\xbc\x72\x47\xa0\x8f\x5a\x8b\xea\x62\x40\x64\xa7\xf7\x52\xe5\x3a\xef\x5b\x61\x8d\x47\x12\xb4\x4f\xbe\x91\x6b\x55\x57\x1f\xee\xdc\x3b\xb7\x38\x5e\xb7\xab\x1c\x75\xfb\x5b\x2c\x64\x77\x6d\xd1\xb7\xe2\xc1\x4f\x79\xd0\x88\x97\xbd\x1b\xea\xfb\xe2\xc9\xae\x97\x77\xb0\x4b\x72\x5f\xbf\x7d\xf5\xdd\x3b\x45\xd2\xfd\x73\x7b\x8c\x3c\xe1\xe2\x2d\x8c\x92\x23\x66\x36\xbf\x24\x6b\x91\x73\x81\xe4\xbb\xd0\x40\xf1\x3c\x76\xb9\xa1\xea\xdd\xe9\x8a\x8f\xc5\x82\x43\xfc\x4d\x24\x56\xc2\x44\xb4\x9f\xe4\x93\xc9\xdb\xcf\xea\x9d\xd2\x9c\x11\x13\x18\xa0\x97\x66\x7b\x94\xd8\x0e\x05\xcd\x16\x40\x89\x0b\x93\x63\x24\x71\x86\x81\x13\xeb\x65\x42\xf1\xeb\x75\x4e\x18\x63\xab\x81\x18\x55\xd5\x1b\x55\xd8\x42\xec\x6e\x42\x95\x12\x8f\xa7\x08\xb1\xd8\x01\x8e\xb9\xc3\x53\x53\xb8\x04\x72\x83\x50\xc5\xad\x17\xc4\x4a\xae\x88\xf1\xc7\x97\xce\xd3\x2b\xc0\x7e\x3f\x9c\x51\xab\xa4\xad\x76\x50\x4b\xc2\x7d\x96\x9a\x97\x40\x0e\x90\xa1\xf1\x23\x21\x6e\x6e\xeb\x4d\x7a\x9d\x5f\x42\xae\xfa\x72\x55\xdd\x87\x63\x3f\x4f\xe9\xc6\xfa\xd4\x3c\x90\x00\x00\xd5\x33\xfc\xdf\x10\x05\xd9\x36\xc2\xc1\x0e\x49\xae\x9a\x0c\x23\xc1\xe0\x31\x80\x46\x10\x30\x28\xe5\xcb\xb9\xbe\x6a\xf8\x3c\xf9\x5e\xd5\xd7\x03\x5d\xd5\xc6\x5e\x59\xf9\xd8\xee\xfa\x3a\xf3\xd6\x21\x8d\xe4\x2c\x2d\xea\xb8\x72\x0b\x7d\x7f\xbb\x8e\xf9\xa8\x89\x82\x7e\x78\xdc\x2b\xd1\x2f\x24\x31\x3a\xec\xd4\xea\xb1\x0f\xac\xb8\x7a\x2a\x8a\x1a\xe6\x17\x59\xbc\x81\xbe\xac\xdb\x70\x5b\xc5\x7d\x3d\x97\xab\x31\x5e\xc5\x5a\x7a\x67\xc1\x86\xb1\x66\x00\xaf\xe2\x3b\xc1\x7d\x5d\xba\x77\x93\x7c\x1f\xcb\xdc\xa6\x4a\xbe\x5a\x25\x4a\xe1\x27\xff\xba\x8f\xfe\xdb\xdd\x2f\x49\x41\x15\xcb\x39\xc6\xed\x4f\xf7\xf5\x69\x93\xb3\x94\xc4\xc7\xa9\x9d\x6d\x50\x16\xd6\xca\x61\xf8\x25\xec\x9c\xa7\xc1\x9e\xe7\x04\x83\xbd\xee\xee\xf4\xe0\x9b\x4b\x28\x1d\xdb\x1e\xcb\x86\xbb\x1a\x8b\x75\x6e\xa3\x6d\x33\xd1\x68\x73\x4d\x87\xf3\xae\x2c\x9f\x6f\x85\xbf\xc1\x70\x3d\x7e\x9d\xba\x43\xb2\x15\xd4\xa6\x7e\xee\x0b\xa7\xa6\x8a\xfd\x2a\x32\xb6\x18\x30\x9a\x44\x9a\x2f\x6b\x28\x4f\xd3\xc8\xa5\x29\x5d\x1f\x88\x2f\xf1\x8a\x61\xc2\x43\xb6\xe9\xef\x9e\x7e\x4a\xb4\xb6\xcb\x8d\xab\x9c\x8d\xbd\x50\xf5\xb2\x3f\x2c\xa7\xd1\x78\xa4\x4b\x56\x4e\xca\x30\xfa\x09\x3a\x7d\x9b\xf3\xec\x2d\xcf\x31\xd7\x85\xdf\xe1\xc2\xbe\xf9\xdf\x98\xfd\x13\x00\x00\xff\xff\xb0\x7f\xa5\x12\xe9\x04\x00\x00")

func test_certsClientTenant10CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Crt,
		"test_certs/client-tenant.10.crt",
	)
}

func test_certsClientTenant10Crt() (*asset, error) {
	bytes, err := test_certsClientTenant10CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0x73, 0x21, 0x82, 0x66, 0x92, 0xe1, 0xb4, 0x10, 0x35, 0xa5, 0x20, 0x2e, 0x24, 0x13, 0x67, 0x46, 0x3d, 0xd6, 0xb1, 0x54, 0x81, 0x8c, 0xc6, 0xae, 0x77, 0xd0, 0xb1, 0x24, 0x74, 0x79, 0xc3}}
	return a, nil
}

var _test_certsClientTenant10Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb5\x16\xab\x58\x00\x85\xe1\x9e\xa7\xb8\x3d\x6b\x16\x6e\xe5\xc1\x21\x48\xb0\xc0\xa1\x43\x92\xe0\x04\x97\xa7\x9f\x35\xb7\x9e\xdd\xee\xe6\xef\xbe\x7f\xfe\x9b\xa8\x68\x86\xf3\xc7\x0f\xc0\x9f\xa7\x6f\xbc\x40\xa8\xfc\x79\x28\xf0\xef\x83\xd8\x86\xa1\x8c\x87\x21\x02\xf0\x90\x80\xa7\x80\xc9\x88\x12\x1b\x05\xb0\x07\x0b\xd3\xa8\x18\x21\x30\xf7\x07\xe8\xe8\x6a\xe9\x1d\x69\xb3\xa9\x5d\xf5\xb4\xcd\xab\x3e\xec\xc2\x0f\x95\x72\xd5\x85\xf0\x94\xa1\x06\x4f\x1c\x25\x0e\x23\x1a\x4a\xfb\xb4\x3b\xf6\x46\xdd\x5f\xb3\x7d\x0e\x4d\x0b\x2b\x0c\x4f\x28\x45\x83\x60\xff\x5c\x79\x7a\xc0\xfc\x7c\x49\x31\xe3\xb4\x3a\xaa\x04\x79\x2f\x7a\x6e\x8b\x24\x4e\xf5\x94\x4a\x8e\x06\x62\xe7\xb7\x25\x40\x79\xd3\x7f\xd2\xf2\x58\xaa\x5c\x6a\xa0\x5a\xfc\x51\x4f\x7a\x22\xd7\x8b\xe2\x6a\x57\x6c\xd7\xbd\xeb\x9d\x96\x15\x69\x74\xd6\xf3\xf6\xe3\x14\x84\x87\xe4\x5f\x73\x03\x76\x5d\xd1\x61\x55\x4e\xa2\xc1\x0a\x3d\xf6\x35\xf5\x39\x2b\xd5\xcd\x32\xfc\x76\x38\x48\xbc\xa2\x04\xaa\x36\xcf\x5e\xcf\xa2\xe8\x66\x6e\x3c\xec\xb8\x2c\x4a\x0b\xfa\x12\x18\x94\x47\x1c\x78\xf8\x0d\xfa\xe2\xcc\x40\xe0\xca\xc1\x8b\x5f\xb3\xcf\x26\xb9\x23\x64\xef\xbe\x9b\xa1\x88\x15\x4b\x56\x6f\x47\x72\xa0\x59\x10\x26\x96\xe2\x69\xc7\x2b\xb9\xcb\xfc\x30\x72\x36\x90\xc4\xe8\x44\xb6\x2e\x97\x28\xa1\x73\x63\xc5\x2a\x2f\x25\x50\x7e\x06\xe6\x7d\xc0\x6e\xd0\x6b\xb2\xa4\x38\xb3\xdc\x0f\x17\xe6\x9e\x21\x03\x0f\x88\x60\x34\x44\xa0\xe3\xd4\xcd\x5a\xf9\x53\x59\x5e\x8c\x04\x72\x24\x2e\xc1\xb1\xdf\x82\x36\xb0\xd4\x99\xac\xbe\xa1\x19\x13\xa5\xc4\xde\xb6\xa9\x1f\x90\x11\x41\x37\x59\xd7\x5b\xe5\x54\xf1\xcb\x47\xce\x2f\x87\x91\xa5\x47\x93\x44\x71\x0a\x4d\x0a\x99\xd8\x8e\x0e\xe2\xf5\xc1\xd6\x09\x37\xca\xf3\x3b\x1a\x47\x89\x82\x6a\x36\x15\x3f\xa2\x5f\x56\x35\x75\x47\x31\x30\xa2\xbc\xf5\x98\xa2\x49\x82\xab\xe8\xbb\x47\xa9\x7d\x4a\x6a\x76\x32\xdd\x05\x72\xde\xba\xb6\x89\x10\x6c\xcf\x53\x7c\x9b\x1d\xe3\xbd\xe3\x97\xad\x9e\xea\xc7\x62\x33\xf7\x3d\xab\x0c\x97\x0b\x67\x08\x37\x8c\x10\xb5\xa8\xd3\x03\xdc\xa4\x42\x6e\x23\xeb\xe2\x5b\x7e\xab\x6d\xa4\x20\xda\x91\xef\x13\x39\xcd\xd9\xcb\x05\x97\x8b\xe4\x3d\x33\x27\xd3\xc3\x48\x76\x93\x77\x93\xcc\x46\x25\x9b\xf5\xd7\xec\x45\xc6\xfe\x02\xe6\x8e\x87\x49\x57\xbd\x54\x33\x18\x7f\xe2\x43\xdf\xbd\x0d\x3b\x7d\x9d\x59\x6f\xe4\x7d\x5a\x80\x5b\x9a\x47\x64\x16\xc2\xe6\xcf\xce\x36\xde\xaa\xe6\x16\x77\x8a\xdf\x9b\x33\xc3\x6e\x22\x06\xd7\x97\xb2\xc9\xdf\x1a\xce\x88\x30\xa1\xa5\xf8\x3a\x19\xe4\xda\x31\xc4\x0f\x23\xc5\x24\xd2\xee\x2c\x8a\xfd\x70\xe9\x0b\x15\x40\x56\xb1\x3b\x27\x44\x78\xca\x6a\xdf\xe6\x4c\xac\xb9\xb0\x9c\x1b\x61\x8e\x2e\x98\x1c\xa9\xfa\x31\x7e\x50\x87\x05\xdf\x5d\xc1\x43\xdf\xb4\x0b\x2d\x36\x65\x43\x9e\xb6\x49\x38\xa2\x99\x90\xd4\xf0\x23\xa9\x02\x6b\xf9\x2b\xeb\x3c\xeb\x05\xc5\xb4\xcb\x65\x5a\x63\x68\x26\x1c\xe7\x2e\x9e\x09\x6d\x8e\xa5\xb8\xde\x8e\x17\xbb\x3c\x32\x52\x73\x49\xab\x46\xd1\x09\xe1\xf7\xe6\x24\x93\x16\x12\x93\xd3\x78\xa8\xdc\xbb\x5b\x60\x6a\xee\x3d\xd1\xf4\x10\x33\x4b\x9e\x39\xef\xc0\x52\x18\x49\xee\xbd\x78\x3a\x7f\xca\x37\x4f\x4b\x33\x22\x97\xbf\xc5\x67\xa9\x99\x88\x5e\xe8\x67\x70\x93\x4c\x9d\x1d\xba\x83\x29\x47\xdc\x99\x8f\xc4\xb5\xcf\x63\x29\x22\x5a\x7d\xd6\xa7\x13\x26\x65\x9c\x96\x36\x3f\xb0\x9e\xff\xe6\x28\x77\x79\x9e\xbe\xd4\x8d\x4f\x2c\x81\x2f\xc6\x41\x74\x6e\xb7\xd6\xa5\x2c\x1f\xb5\x87\xf1\xcf\x90\x7a\x10\x4d\xd2\x8b\x76\xcc\x56\x4a\x15\xba\xf9\x39\x26\x25\x2d\xdd\xd6\xd7\x94\xda\x27\x3b\xfb\xe2\x4d\x65\xbb\xd1\x86\x10\x30\x3a\xa1\x64\xc2\x80\xf0\xa1\xc9\x5c\xef\x6f\x8c\x17\x8d\x4e\x6b\x78\xe4\xd1\x45\x7b\x27\x6d\x7c\x45\x1f\x32\x99\x0f\xf2\x91\x12\x73\x0b\x0b\xe9\x0b\x41\xcc\x3b\x7d\x92\xf5\x64\x9e\xf0\x1c\x1d\x97\x2b\x5c\xaf\x83\x47\xf4\xc6\x45\xc5\x98\x72\x23\xf7\x87\x49\x5b\xb4\x33\x4b\xad\x9c\x9f\xa5\xe0\x62\x57\x7e\xd5\x35\x8e\xd1\xef\x63\x33\x5f\x22\xbc\x36\xbc\xd6\x65\x73\x8e\xa1\x50\xfc\xc2\xbc\xb1\xd0\xa0\x7e\xed\x11\xd2\xa2\x90\x87\x25\xcb\x56\x23\xe7\x2c\xcf\x4f\x18\x99\xa3\x90\x6e\x47\xc4\xdc\xdf\x62\xeb\x9c\xdb\xe7\x6a\xc6\x29\xf4\xce\x68\x38\xc8\x9d\xbd\xc1\x69\x04\xd5\xf0\x81\xb3\xee\xa7\xf4\x1c\x6e\x13\x21\xc7\x0c\x3d\x2a\x8e\x38\x50\x39\x95\x07\x7e\xbc\xc4\xd2\x6b\xbc\x87\xf8\x05\x85\xf4\xa4\xd7\x23\xc9\x68\xf4\x64\xe8\x5c\x97\x99\xf2\x81\xaf\x03\xbf\xb3\x56\x55\x53\xc1\x17\x6d\x62\x1c\x7c\x1d\x24\x18\x6e\x3e\x49\x70\xc9\x7b\x92\x55\xc6\x06\xae\x49\xe7\x15\x5b\x9d\xad\x23\xad\x05\xf6\x99\x2c\x72\xd5\x3b\xa9\x4f\x04\x62\xa1\xbf\x3b\xdf\x0e\x70\x3a\xde\x8b\x57\xf4\x92\x3c\xca\xa1\x55\x95\x08\x11\x29\x20\x1a\x02\xa2\xe2\xee\x44\xab\x13\x7f\x78\x70\xa3\x09\x8b\x89\x9c\x13\x6c\xd9\xf1\x78\x9f\xa9\x69\x08\xfd\xb2\x5f\xca\x98\xf8\xce\x64\xe9\xbc\x32\x6a\x4f\xdc\xcd\x1d\xb6\x24\x0c\x47\xc4\x7b\xaa\x2b\x18\x35\x11\x3c\xd8\xaa\x29\x85\xe0\xd1\x6c\x29\x46\x1f\xdc\xea\x47\x0c\xc7\x99\x53\x03\x98\x53\xf1\xcd\x08\x4e\x4e\x9a\x97\xe6\x31\x3b\x07\xe6\xfe\x6c\x5f\x1f\xad\x4b\x11\xed\x0a\xe9\x88\x84\xc2\x25\xfd\xe9\xa6\x31\xa5\xa9\x11\x71\xd5\xa7\x46\x2a\x61\x6c\xb8\x93\x06\xa5\xaa\x2b\x6a\xb6\x48\x2d\x7b\x3e\xa1\x36\xcb\x25\x46\xb8\xe3\x09\x9a\x2a\x7b\x91\x5c\x44\x18\x1f\xc3\x47\x5e\x18\x05\xea\x4c\x8b\x18\xec\xe8\x38\x67\xff\xb6\x12\x05\x6a\xde\x5d\x02\x67\x15\xfa\x65\x7f\x3f\xc2\xd9\xee\x57\xc2\x2c\x5b\xc9\x2c\xde\x9a\x35\x2f\xe1\x85\xfc\x25\x45\x71\xe4\xff\xa7\xe6\xdf\x00\x00\x00\xff\xff\xed\x2f\x27\x72\x8b\x06\x00\x00")

func test_certsClientTenant10KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Key,
		"test_certs/client-tenant.10.key",
	)
}

func test_certsClientTenant10Key() (*asset, error) {
	bytes, err := test_certsClientTenant10KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0x96, 0x2b, 0x6c, 0xa6, 0x2d, 0xf7, 0xb0, 0xf3, 0x29, 0xcd, 0x95, 0x8c, 0x99, 0xd9, 0x1b, 0xa2, 0x27, 0x2d, 0xa8, 0xd0, 0xd1, 0x5e, 0x10, 0xc8, 0xbe, 0xe2, 0x3c, 0x6c, 0x45, 0xc9, 0x5c}}
	return a, nil
}

var _test_certsClientTenant11Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xcb\xce\xb2\x48\x10\x86\xf7\x5c\xc5\xec\xc9\x44\x0e\x8a\xb2\xec\xa6\x1b\x68\xb0\x41\x8e\x0a\x3b\x01\x01\x11\x44\x04\x6d\xe0\xea\x27\xdf\x37\xc9\xbf\x99\x79\x97\x4f\x2a\x6f\x25\x55\xc9\xf3\xf7\x4f\x20\x36\x88\xf3\x97\x86\xfd\x90\xe8\x44\x03\x21\xfe\xa5\x1c\x25\x04\x15\x48\xd3\x40\xbb\x54\x80\x11\x08\x2a\xe2\x03\x2b\x91\x97\xf9\xe5\xb6\xfc\xf4\x34\xad\x80\xcf\x6f\x61\x54\x14\x8c\x21\x2f\xb1\xec\x3e\x25\xf5\x37\x77\x80\x87\x8f\xd0\x03\x8c\xb3\x57\x1c\x50\x08\x0c\x20\x46\x58\xab\xa9\xe5\x49\x6a\x73\x95\xad\x6f\x72\x76\x7a\xea\x47\x0c\xb3\x04\xc5\x9e\x87\x30\x9b\x51\x26\x39\xef\xbc\x53\xeb\x44\xaa\x2a\x4f\xc0\xcc\xac\x73\x87\xa3\x0d\x9e\x29\x02\x22\x6d\xb0\xe8\x86\x80\x9d\xeb\xdc\xa1\x4d\x32\x53\x84\xd9\x1f\xd6\x80\x95\xfa\x84\x61\xf0\x5b\x66\x63\xd6\xfe\x29\xe3\x12\xa9\x9a\x31\x02\x2e\xac\x9c\x18\x82\x31\x84\xa2\xdf\x66\x9d\xfe\x29\x4c\x3a\x6b\x2b\xb0\xfe\xe5\x34\x04\x3f\x8b\x08\x81\xa4\x01\x0e\xac\x1e\x43\xfd\xb8\x1b\x2a\x13\x20\x07\x3c\xac\x03\xe0\x6a\xc0\x3b\x80\x9f\x01\xad\xb2\x35\xe0\x61\xc0\x48\x5c\xc0\x6c\x3d\x17\x69\xcb\xf8\x53\x96\xed\x51\x5f\x14\xb6\xbd\x4f\xb3\x8f\xc3\x3a\xd3\x88\x4c\x32\xa1\x40\x42\x1c\xb4\x0d\x1f\xf7\x34\xd9\x6c\x1b\x0b\x44\x27\x49\xd6\x6b\x06\x17\xf4\xcd\x47\xc9\xf8\xa8\xd7\xb1\x8b\x6f\xfe\xa5\x2d\xc4\xee\x19\xc7\x27\xe1\x61\x87\xd6\x56\xb5\xcd\xd7\xf9\xf6\xa2\xc6\x55\xdd\xde\x38\xdd\x39\xb8\xab\x1c\x21\xcb\xda\x4d\x32\x7f\x92\xdd\x9a\xf5\x4a\x27\xa6\xde\xa9\xed\xbb\x5d\x33\x44\xed\xfd\xfb\x56\xba\xc2\xcb\xbe\x41\x05\xb7\x74\x47\xee\xf3\xd6\x4d\x12\x99\x7f\x2b\xd1\x59\x78\x70\x91\x94\xdb\xb7\x49\x28\xd4\xf0\x3a\xd6\x29\x1f\x3b\xba\xfb\xc5\x88\x8f\xee\xe7\x71\x8b\xd4\xb2\xb1\xd0\xa5\x74\x7b\x67\x0a\x22\x94\xfa\xcf\x4a\xd5\x71\xb8\x39\x78\x81\x9a\xf1\xfc\xab\xdd\x5d\x76\x9c\xcb\x12\xc4\xde\x6d\xf5\x19\xb5\x0b\x45\xc6\x6b\x7f\x74\xfa\x97\x21\xfa\x30\xbe\xeb\xa3\x2b\xd6\xb2\xfb\xbd\xd7\x2f\x57\x3f\x7e\x2e\x31\xb6\x9d\xf4\xb9\x11\x09\x5f\x46\x68\x13\xec\xb3\x2e\x7a\x22\x2e\x9c\xc2\x33\x93\xc7\xcb\x1e\xdd\xaf\x87\xef\xf2\xd4\xdf\xf9\x24\xdd\xc2\x4b\xed\x0a\x63\x1d\x5e\x94\x49\x3b\xbe\xf9\x3b\x2c\x63\x6b\xd2\x4c\x46\x10\xf0\x00\xec\xb7\x86\x4d\x89\x61\x52\xb0\x35\x38\x20\x46\x05\x62\x18\x6e\xd8\xef\xe9\xf5\x1e\x81\xe2\xe7\x75\x66\x10\x61\xbd\x01\x11\xac\xaa\x37\xac\xb0\x0e\xbd\x1c\x81\x2a\x21\x36\x4b\x20\xf4\x22\x13\x30\xcc\x4c\x96\x20\x2e\xf6\x85\x06\xc2\x8a\xe9\x3d\x88\xc4\x4c\xe4\xa3\xd1\xd9\x9c\xbe\xbd\x8f\x9d\x6e\x38\xc1\x87\x98\x3c\xb6\x07\xb9\x24\xcc\xf1\x12\x14\xfb\x82\x0f\xb5\x2d\x3b\x12\x62\x65\x86\xda\x24\xe7\xb9\xe7\x32\xd9\x11\xaa\x2a\x1f\x8e\xdd\xfc\x4d\x24\x7d\xac\x99\xbf\x01\x00\xc0\x7a\x06\xff\x17\x48\x81\x60\x68\xc1\x60\x04\x24\x93\x91\x87\x21\xa7\xb1\x08\x80\x2d\x81\xc0\x03\xe7\x57\x98\xb5\xaa\x32\x4d\x67\xc1\x55\x94\xe1\x22\xce\x03\x35\xce\x69\xd2\xd4\xeb\xd7\x94\x1b\xa5\x00\x85\x1e\x2c\x8b\x64\x19\xb7\x43\x70\x9d\x86\x9d\xa0\x34\x29\x27\x8e\x2f\xf5\x40\x06\xd4\xa2\xa5\x8d\x2a\xcb\xf2\xf5\x2e\x8d\xd6\xa5\x1c\xd6\x15\x94\xaf\xfb\x9a\x4f\xe5\x72\x79\x08\x79\x63\x38\x46\x49\x83\x7d\xa9\x04\x9b\x7d\x10\xeb\x52\xab\x37\x26\x99\x17\xee\x98\x07\xa5\xd0\xd0\xf5\xea\x28\x86\x8b\xb0\x79\x1f\xde\xcb\xfe\x85\x9e\xaf\x61\x49\x96\xbc\xcf\xae\x5d\xf0\xad\x0e\x69\x78\x38\x8f\x52\xfc\xd6\xf7\xe2\xfe\x52\x2a\x6b\xdc\x9d\x79\x1b\x1b\x7c\x4a\xb8\x28\xbb\x84\xdb\x90\x84\x40\x94\x2e\xe0\xc3\x6e\xbe\x0b\xca\xa7\x2e\x58\x8b\xcb\x0b\x9f\x40\x9d\x9b\xaa\x7d\x4a\xa7\xc1\xa0\xc9\x02\xba\x08\x76\xd4\x6b\x48\xfc\xfc\x98\x7c\xdf\x1c\x78\x73\x51\xb8\x61\xa7\x7a\xf7\xe6\x8a\xab\x23\x1f\x1e\x07\xdb\x46\x27\xfd\x59\x01\xeb\x20\x01\xd9\x3f\x8a\x8c\x8e\xe2\x46\x59\xcb\x12\x7e\x54\x77\x6a\x18\x65\xb3\x9a\x96\x2e\x76\x9f\x2d\x1e\xb4\x5b\xfa\x01\x1c\x6f\xa7\x4b\x35\x07\xf8\xf4\x0a\x63\x58\xc4\xeb\xea\xd7\x0b\xb1\x4e\x95\x52\x90\x71\x0c\x9c\x8c\xfb\x15\x17\x76\xd0\x7f\x65\xf6\x4f\x00\x00\x00\xff\xff\x24\x75\xe4\xda\xe9\x04\x00\x00")

func test_certsClientTenant11CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Crt,
		"test_certs/client-tenant.11.crt",
	)
}

func test_certsClientTenant11Crt() (*asset, error) {
	bytes, err := test_certsClientTenant11CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x54, 0xfb, 0x9f, 0x7c, 0xee, 0x84, 0x5e, 0x14, 0x3b, 0x1e, 0xf7, 0xb4, 0x0, 0xb0, 0x91, 0x6a, 0x1e, 0x2, 0xf, 0xc5, 0x68, 0x7f, 0x84, 0xe8, 0x47, 0xf4, 0xd8, 0x4b, 0x86, 0x40, 0x4d, 0x27}}
	return a, nil
}

var _test_certsClientTenant11Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xa3\xd0\x01\x85\xe1\x9e\xa7\xd8\x9e\xf1\x90\x53\xb1\x05\xe1\x92\xae\xc8\x99\x0e\x44\xce\x02\x04\x92\x9e\xde\xe3\xad\x7d\xda\xd3\xfc\xdd\xf7\x9f\xff\x4d\x02\x9a\x61\xff\xf1\x03\xf1\x8f\xeb\x1b\xb1\x18\x82\x3f\x10\x64\xff\x1e\xc4\x32\x0c\xb0\x89\x86\x24\x8a\x50\x16\x3d\x20\xde\x46\x5c\x49\xe5\x2f\xa9\xf2\xe9\x46\xdd\xb2\xe4\x94\xb5\xaa\x20\xe4\xf2\xf2\x6d\xdf\xb3\xae\x45\xba\x71\x2a\x01\xa9\x48\x50\xf3\xc1\x6a\x65\x08\x46\x0f\xa6\x18\xb9\x24\xa5\x76\xb7\xf4\x55\xae\xe7\x41\x6a\x6f\xa1\x38\xe6\xb8\xf6\xd3\xa9\x22\xe6\x25\x8e\x5d\x7c\x84\xa1\x49\x0b\x50\xdf\x92\x7a\xb3\xb4\x42\xa0\x6b\xd5\xe6\x9d\x1f\x15\x29\x88\x69\x32\x27\x85\xba\x94\xd3\xdd\x2b\x3b\x13\xb9\xe7\x4e\xeb\xcc\x0c\xaf\x68\xea\xaf\x9d\x9d\x2b\xaf\xbc\x82\x56\xa2\x2d\xc6\xe8\x3f\xb4\x93\x65\x14\xba\xb3\x51\x82\x8f\x11\xf9\x84\xf5\x89\x57\x88\x10\x16\x47\x97\xa3\xb1\xad\x3a\x17\x50\xd0\xa8\x4f\x0e\x5a\x11\x9a\xc1\x54\xd2\xc6\x59\xed\x33\x88\x94\xdc\x5f\x5a\x41\x05\x21\xc6\x7b\x81\x50\xa2\xe8\x36\x31\x29\xe3\xdc\x99\x72\xef\x53\x8b\xbc\x0f\x39\xb5\x14\x6d\xe3\x1e\xf6\xba\x69\x84\x2f\xc5\xbd\x7a\x38\x44\x47\x39\x57\xdf\x6d\x8e\xfa\x78\xa7\x31\x80\x76\xbe\x60\x84\x81\x36\x91\x82\x05\x5c\x39\x47\x8b\x12\x9e\x61\x72\x53\x47\x8a\x70\x4a\x5f\xf0\xd7\x77\x51\xf7\xe7\x49\xd6\x61\xda\x39\xf8\xd1\x85\x29\x7b\xca\x8f\x1d\xed\xa5\x26\x36\x4f\x59\xbf\x0d\x45\xf4\x44\x49\x5c\x0d\x49\x54\xc5\x87\x71\xea\x17\x9d\xbe\x86\x36\x8a\x24\x84\x6a\xe9\x2d\xa1\xd2\x80\xbf\x9e\x9b\xc5\x54\x36\xc7\x64\x3d\xbd\x74\x86\x81\x82\x5c\x66\xdb\xe4\x9d\xd3\x00\xf7\xc8\x69\x03\x64\x76\x52\x07\xe6\x8f\xbc\x2a\x41\x14\xcf\x0a\xb6\x79\xd5\x0a\x86\xcc\x58\x6a\x59\x67\x6c\x6b\xce\xd1\xeb\xe4\x39\xf2\x35\x3a\x8e\x71\xb9\xe0\xfb\xc2\xde\x1c\x59\xd5\x0e\xf0\xae\x92\x36\xe6\x4e\x6b\x44\xd6\xc5\xad\xb3\x11\xc9\x17\x91\x9c\x5b\x3a\xc3\x22\xbe\x90\x12\x85\xd1\x66\x49\xd8\xd5\x7c\xb5\xd9\x61\xb2\xcb\xe4\x9e\x2b\x53\xa4\xce\x60\x7d\x1d\x22\x38\x38\x8c\x43\x37\x8d\xaa\x38\xb7\x5d\x16\xca\x54\x47\x10\xcf\x2b\x47\x96\xb4\x65\xaa\xef\x63\xa6\x91\x4f\xd8\x82\x6a\xdc\xaf\xb5\xae\x3c\xc7\xab\xd3\x27\xe1\x6d\xd4\x8f\xfa\xe2\xa4\x58\x17\x51\xc3\xf2\x28\x94\x65\xef\xae\x8d\xf2\x1b\x75\x91\xb2\x04\x4f\x6b\x6a\x6e\x10\x97\x52\xba\x28\x0f\x8b\x46\x20\xdb\xb8\xb1\x4f\x73\x6d\xcb\xea\x5d\x2d\x83\xb2\x6b\x2e\x34\x72\xa7\x1b\x6a\xaf\x7e\xa1\x8e\xf8\xb4\x25\xab\x8d\xe0\x6a\x0a\xcf\xbe\x4c\xc6\x41\x4a\x88\x92\xc8\x6e\x54\x98\x5a\xf3\xfb\xba\x91\x31\x98\xc8\xe9\x06\x72\x9b\x01\x91\xdd\x85\xaf\x81\x36\xb5\x47\xaa\xf9\x9d\x13\x63\xd1\xa6\x89\x64\x41\x3b\x2a\xa8\x42\x4e\xab\xca\x47\xc7\x76\x65\x78\x7b\x22\xaf\xe4\x7d\x92\x9d\x01\x8b\x17\x02\xca\x7b\xe7\x4b\xfd\x9c\xa3\xb2\xea\xbc\xe7\xa3\x10\xbc\x94\xca\x63\x30\x38\x84\xa9\xfe\x8c\x60\x31\x75\x54\x5c\xab\x1b\xfd\x3a\x02\xe4\x67\x5b\x46\xfb\xda\xbf\x0c\x90\x5b\xb1\x16\x5c\x95\x84\xac\x0c\xc8\xe0\xa2\xb9\x9a\x1b\x8c\xcd\xc5\xe0\x49\x29\x8b\xac\x7d\x3c\xf4\x7c\xcd\xbb\xc5\x6c\xbd\xe9\x18\x45\x62\x86\x3a\x5f\xc7\x81\xae\xa4\x2a\x9f\x9e\x73\xf3\xfc\x57\x8c\x37\xb6\x8c\x6c\x69\xdc\x1d\x67\xf4\xf6\x87\x57\x4a\xa9\x70\xdf\xdb\x05\x93\x7d\x55\x1d\xab\x22\x84\xa4\x37\x8e\x9a\xb9\x5c\xaa\x40\xf0\x55\xe1\x45\x5c\xdd\x97\x72\x3b\xca\x9f\x4d\x8c\x0f\xad\x97\xcc\x4f\x83\x64\x5a\xd3\x4d\xbb\x30\x18\xb7\x70\xb3\x63\xf6\xd1\x73\xaf\xeb\x3c\xea\x2a\xad\x9a\xc3\x06\x23\xba\x85\x84\x57\xf3\xb8\xfe\x88\xf4\xd5\xae\x51\x3c\xb8\xce\xf7\xc4\x5b\x22\x88\x2d\xf0\xf5\xfa\x12\xe9\xe0\x12\xd9\x3e\x95\x94\xee\x59\x65\xe9\x15\x72\xc2\x77\x61\x54\xbc\xa1\x5f\x01\xdf\xdb\xae\xa6\xf6\x2d\x1f\x7e\xc6\x7f\xc9\xf7\x58\x14\x78\xd3\x9d\x81\xb0\x35\x83\x78\x44\x76\x02\x1f\x08\xb8\xa6\xd5\xa6\xca\x55\x6c\xe6\xb8\x60\xbc\xa4\xf1\x6d\x4c\xe9\xda\xa1\x90\x2a\x97\x55\x5d\x2d\x53\xad\x1c\xfc\xda\x9d\x0d\xfd\x17\xa1\xda\x89\xb5\x80\xc6\xfc\x45\xfa\x65\x1a\xd6\x33\x75\x3f\x48\xf8\xe3\x1e\x27\x23\x3e\xc5\xf3\xe6\x14\xa7\x7d\x18\x7e\x7a\xaa\x3c\xb5\x1c\x6e\xfe\x50\x74\x57\x02\xee\x59\xdd\x1b\x1c\x49\xcf\x7f\x9f\x6f\x6b\x78\xb1\x6c\xbc\x06\x4a\x82\x29\xf0\x5b\x47\xd2\x80\xf8\xcf\x6a\xe0\xcd\x45\x61\x94\xe8\xc5\xba\xdc\xcb\x54\x82\xa7\x1f\x47\x72\x9b\x49\x94\x1e\xbc\xac\xc3\x33\x02\xbe\xb9\x26\x11\xe0\xb8\xef\xee\xe8\xc3\xd6\x7e\x6a\x54\x4b\x0f\x75\x9d\xa9\xce\xcb\x90\x61\xbb\x0d\xbb\xe8\x49\x7a\x7e\x84\x98\x1e\xf3\x06\xa5\x63\xe3\xca\xb3\x30\x4d\xc4\x5c\x46\xc5\x0e\x0a\xaf\x38\xe5\xf7\xf4\xa3\x06\x68\x70\x65\xf5\xd0\xf5\xde\xfe\x66\xa8\x12\xe3\xef\x06\xf4\x88\x38\x9d\x66\x41\x9f\xef\x4a\x4a\xc7\xc4\x1f\x13\xc1\xf7\xa1\x88\xa1\xcb\x53\x96\x5a\xa6\x17\xd4\xe5\xfe\xe2\x65\xcb\x63\x73\x16\xed\x21\xe3\xd0\x8b\xba\x1c\x2f\x59\xc1\x85\x1f\x49\xb1\x04\xeb\x23\x26\x53\x60\xb8\x07\xa5\xd6\x53\x3c\xe7\x93\xa2\xa5\xfe\x0e\x1e\x79\x43\x49\xb0\x8f\x63\x60\xbc\x38\xaa\x59\x15\xb5\x71\xa1\x87\x6e\x2b\x99\x04\xa6\xd8\xfb\x39\x43\x1f\x82\x96\xdc\xdf\x66\x6e\x90\x2a\x7f\x84\xac\x3f\xa1\x46\xe1\xf1\x1f\x92\xfd\xf1\x50\xe2\x59\xcd\x6b\xa5\xbd\xbe\xb6\x1b\xe2\xc4\x19\xee\x3a\x8a\x85\x36\xc0\x54\x4f\xae\x89\xe7\x2e\x5e\x18\xc9\x41\x0d\x33\x00\xbd\x03\x88\x64\xf7\x98\x48\x13\x15\x32\xf4\x8a\x7e\x37\xe3\x53\xbb\x9d\xd7\x1a\xd3\x7a\x1b\x59\x39\xf1\xac\xf2\x53\xeb\x10\x88\x97\x40\xbd\x9f\xcb\x37\x76\xbf\x43\xdf\x67\x96\xf7\xf7\x2f\xf2\x8f\x15\x60\x2b\xff\x9f\x9b\xff\x06\x00\x00\xff\xff\x55\x2d\x95\x21\x8f\x06\x00\x00")

func test_certsClientTenant11KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Key,
		"test_certs/client-tenant.11.key",
	)
}

func test_certsClientTenant11Key() (*asset, error) {
	bytes, err := test_certsClientTenant11KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x93, 0x5a, 0x99, 0xcc, 0x45, 0xbc, 0xa0, 0xb1, 0xd8, 0x86, 0xa5, 0x68, 0xda, 0xbc, 0x22, 0xb3, 0x4b, 0x1c, 0xab, 0x52, 0x64, 0x68, 0xea, 0x16, 0x8e, 0x3f, 0x94, 0xee, 0x7a, 0x13, 0xf5, 0xf6}}
	return a, nil
}

var _test_certsClientTenant20Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xcf\xb2\x82\xb8\x1a\xc4\xf7\x3c\xc5\xdd\x5b\xb7\x40\x14\xc4\xc5\x2c\x12\x12\x02\x62\xc0\xf0\x47\xc4\x1d\x08\x46\x40\x44\x14\x0c\xf2\xf4\x53\xe7\x4c\xd5\xcc\x62\xa6\x97\xbf\xea\xea\xc5\xf7\x75\xf5\xff\x7f\x04\x31\x71\xbc\xff\x99\x38\x88\x1c\xcb\x31\x41\x84\x7f\xa9\x44\x1d\x07\x5d\x66\xd3\x04\xf7\x91\x03\xe1\x40\xc0\x1d\x96\xf5\x6e\x65\x9c\xe5\x7d\xd3\xb4\x61\xc7\xdd\x4f\x3d\x4e\x35\x99\x81\x07\x79\xd3\xdf\x9a\x8a\x6c\x85\x02\x01\x7b\x5b\x00\x81\x97\x44\x03\x47\x60\x90\xa2\x23\x63\x2e\x16\x77\x94\xab\xde\xeb\xd2\x6e\x6f\xa9\xca\x27\x2b\x02\x11\xe4\xde\x11\x02\x1a\x21\xec\x7d\x52\x75\xf8\xe6\xaa\x55\x67\x26\x44\x2c\x02\xa5\x25\x94\xaf\x44\x23\x2c\x28\x8a\xbf\x34\x8a\x35\x8a\xac\xec\x07\x7a\x35\x16\x34\x02\x7f\x33\x8a\xe8\x84\x6b\xc0\xfe\x0a\xeb\x22\x33\xfe\x27\x4c\xca\x10\x66\x14\xac\x09\x58\xc6\xd8\x9c\xa8\x7d\x24\xc7\x31\x4d\x34\xe5\x32\xe3\x3d\x05\xcd\x2f\x07\x13\x35\x69\x0d\x04\xe7\xb8\xa2\x40\x21\x66\xd8\x93\xd0\xc9\x57\x88\x61\x28\x01\x16\x03\xb0\x76\x20\x12\xbf\x06\x17\x74\x0e\x04\x0c\xed\x3a\x68\x78\x0c\xc4\xdb\xb9\x78\xd5\xbd\xc8\x7b\x7a\x76\x13\xec\xaf\xe8\x3d\x66\x9f\xe1\x99\x39\xcf\x73\x45\xb6\xd5\xc0\x25\x5e\xdc\x81\x16\x06\x35\x05\x29\x58\xf3\xef\x38\x65\x57\x3f\xd2\x9e\x85\xae\x2f\xfa\x77\x58\x51\x79\x95\xc8\xaf\x4a\x36\xd6\x4d\x7e\x82\xaf\xee\x8d\xde\x37\x6a\xdf\xbe\x5e\x7b\xbf\xef\x26\x16\x3c\x25\x26\x86\xe0\x74\x3e\x7d\xc5\x70\xf5\xb4\xf7\xb5\x47\xfa\x32\xde\x91\x89\xb8\x5d\x39\xcb\xbe\xb9\x37\x88\x2b\xfc\x73\x7d\x47\xc1\x79\x3e\xa7\xa1\x7f\x8d\xb3\x60\x60\xb3\x7d\x1d\xed\xc3\x2a\x36\x73\xe9\x48\xbc\xda\x9d\xcc\xd6\x89\xfb\x70\x77\x48\xc7\x0f\x19\x55\xdf\xd1\x1f\x0b\xf9\x1d\x28\x4f\x6d\x83\xf2\x36\xdc\xed\xd5\xb9\xf5\x01\x5b\xea\xab\xfa\xb6\x5f\xae\x2e\xe9\xb7\x5b\x9c\x26\x32\x92\xdd\x5e\x52\x45\x55\xf0\xd1\x67\xdd\xe6\xaa\x3b\xe6\xdc\x5d\xb7\x8a\xd5\x24\xae\xbf\xdc\x92\x4e\x51\x72\x91\x82\xe4\xfb\xec\xaf\xc1\x50\xbf\x2f\xeb\xcd\x4e\x01\x68\x6b\x2f\xe3\xf6\xad\xa1\xe3\x34\x0c\x79\x25\xe5\x23\xc5\xb2\xff\x55\x42\xfb\x54\xdd\xe8\xb4\x53\x15\xeb\x86\x37\xd5\x5c\x97\xe9\xb3\x11\x54\x89\x0c\x7f\xf4\x63\x42\xd0\x66\x11\x00\x4e\x21\x00\xa4\xe6\x69\x27\x78\x7a\x11\x88\xa7\x48\x3a\x06\xca\x01\x30\x5b\xfe\x39\x3d\xe0\x09\xa7\x50\xf9\x79\x5d\xb1\x63\x2c\xa1\x90\x11\xd3\x7c\x13\xc0\x62\x0b\x0a\x6a\x42\xce\x5f\x90\x63\x0b\xb2\x0b\x02\x11\xb8\xfe\xf4\x42\xb2\x43\x8a\x09\x02\x09\x87\xd1\xf1\x73\xd2\x42\xb1\x32\x16\x8b\x1b\x66\x6a\xd6\x19\x24\x3a\x56\x51\x3d\x17\x46\x0d\x96\x3f\x66\x3b\xc0\x78\x5f\x83\x37\xe7\xf7\x77\xae\x7a\xb7\x9c\xdc\x3e\xd2\x65\x15\x9a\xf0\xdb\x8d\x39\xd9\xd6\x69\xf2\xb5\xa1\x6d\x00\x00\x88\x8d\xc1\x7f\x09\x0b\xc4\xd2\x9d\xdb\x9d\x9d\xdb\xe7\xe2\x01\x86\xf7\x12\x64\x00\x71\x8e\x21\x40\xdb\xac\x6d\xcd\x6d\xba\xb1\xca\x50\xd7\xf4\x96\x28\xae\xa6\x1e\x96\x73\xb6\x30\x47\xdf\xe6\x0f\xf9\x55\xc5\xf4\x42\x87\xaf\xa7\x6f\x99\xea\x69\xd1\x4b\x3b\xb6\xc6\x45\xf2\x67\xb7\x3c\x94\x65\x3b\x5e\xf5\x3c\x29\x45\xab\x15\xf7\x71\x79\x95\x77\xeb\x2e\xbd\xeb\x7d\x8f\xe5\x06\x7f\x5e\x4d\x0d\xcb\x2b\xca\x64\x76\x37\x03\x84\x54\xe7\xd8\xf7\x7a\xbc\xb8\x5d\xc7\x62\x23\x5d\x0a\x79\x64\x97\xf6\x5b\x9d\x0c\x4f\x07\x59\x93\x9c\x1e\xeb\xf3\x32\xce\x40\x62\x1b\x4d\xd1\xf5\xd6\x50\xf0\x36\x4c\xb3\xdd\x1d\x56\x8e\xca\xdb\xfb\x6d\x88\xf3\x67\x89\x9f\x85\x52\x96\xda\xc3\x96\x0c\x2a\xfb\x73\xd9\x05\x28\x3b\x6c\xad\x65\x54\x9e\x53\x51\x37\xc8\xc4\xa7\x45\xd2\x16\x22\x49\x1f\xd1\x0b\x7b\xca\x1a\xea\x5a\xd1\xc5\x93\xb0\x0a\x1c\x07\x9b\x66\x6c\xa6\x9c\x91\x7d\x3b\xb8\x92\x6e\xed\x92\xcd\x12\xa5\x62\x98\x17\x9d\x38\xb8\xd9\x03\x3e\x0c\x2f\xf1\xcb\x12\xbb\xc2\xef\x27\x7d\xde\x3b\x81\x71\x51\xe5\x17\x48\x58\x7e\x50\x93\xfa\x9d\xac\x9f\x7d\xb3\xd7\x4b\x6c\x16\x87\xbd\x94\x9f\x57\x8f\xc9\xae\xc6\x6f\x0c\xb7\xfb\x0a\x8b\x95\xfe\xbe\x67\x07\xe3\xdd\x68\x43\xe8\x33\xfc\x87\xf4\x3b\x5c\xd8\x43\xff\x1e\xb3\x3f\x03\x00\x00\xff\xff\x0b\x2c\xcf\xe0\xe9\x04\x00\x00")

func test_certsClientTenant20CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Crt,
		"test_certs/client-tenant.20.crt",
	)
}

func test_certsClientTenant20Crt() (*asset, error) {
	bytes, err := test_certsClientTenant20CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaa, 0xc9, 0xdd, 0x4b, 0x61, 0x8f, 0x75, 0x9a, 0xeb, 0x5a, 0xa9, 0xb6, 0x4c, 0xa0, 0xae, 0xac, 0x57, 0xa4, 0x90, 0xb2, 0xed, 0x6e, 0x90, 0x87, 0xec, 0x13, 0xfa, 0x5, 0x75, 0x68, 0xb2, 0x86}}
	return a, nil
}

var _test_certsClientTenant20Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb5\x16\xa3\xec\x02\x85\xe1\x9e\xab\x98\x9e\x75\x16\x6e\xe5\x47\xd0\xe0\x10\xb4\xc3\x5d\x02\x04\xbb\xfa\xb3\x66\xea\x7f\xb7\x6f\xb3\xbb\xe7\x7f\x7f\xc7\x8b\xb2\x6a\xfe\x71\x3d\xf0\xc7\x76\xd5\x00\x7c\xc4\x3f\x9a\x18\xff\x2b\x90\xa1\xaa\xe2\x7c\xaa\x3c\x00\xda\x0b\x38\x22\xb8\x53\x50\x09\x3e\x90\xec\x9c\x48\x49\x7a\x93\xe9\x4e\xf6\x86\x46\xd8\x9f\x77\x20\xea\x4c\x1a\xb6\x5a\x18\x37\x47\xbc\xc6\xaa\x92\x38\x96\xdf\x43\xf1\x03\x64\x60\xa9\xc6\xba\x85\xd3\xd3\xc3\x69\x54\xfe\x8e\xef\x2a\xce\x9d\xcd\x61\x07\x4d\x1e\x88\xf5\x96\xb1\x33\xa5\x75\xc0\xa8\x1f\x9e\xcc\xbb\x64\x49\xbc\xdc\x17\x53\xdf\xd0\xfd\x00\x0f\x20\x76\xd3\xa3\xa7\xcc\x14\xba\x86\xf7\xe0\xe5\x6e\x6e\xfb\x55\x36\xe4\xa9\x5b\x84\x6f\x37\x61\x8c\x29\x07\x0d\x73\x3c\x14\xbb\x09\x93\xfb\xcc\x37\x2e\x82\x69\x1e\x0e\x03\x23\xe6\x76\xf1\xbd\x39\xd0\xd2\x4a\x5a\xdf\x7e\x70\x7d\xbd\xd6\xbd\x6b\xad\x05\x39\x18\xb1\xd0\xca\xf2\xc4\xa9\xbe\xf5\xb8\x8d\xea\x6a\xd1\x2c\x77\x92\xf4\xb8\x82\x90\x8d\xaf\x3d\xb0\xee\xda\xfc\x2d\xea\x14\xeb\x1d\xd4\x6b\x16\x01\xb7\x60\xa3\x15\xa4\xe0\x13\xa9\xed\xf6\xca\xfd\x9a\xa6\xcc\xca\x40\xda\xbe\xe9\x84\x66\x31\xa3\x58\xd6\x5d\x00\x80\xb8\x5c\xf0\x5e\x2d\x07\xcb\xb3\x2c\x24\x47\xa6\xe3\xed\x67\x83\x76\xb1\xc1\xc8\xf9\x63\x78\xc5\xce\xc7\xae\x45\x6e\x24\x31\x6a\x89\x21\x98\x22\x22\xac\xdd\xc0\x37\x35\x8c\xf4\x8e\x2a\x00\x07\xf0\x60\x56\x79\xe0\xbc\xa4\x2c\xdd\x4b\x06\x17\xd5\x81\x70\x06\xa8\xac\xb3\x29\x37\xd6\x14\x56\x7c\x59\x14\x26\xbe\x8e\x07\x0a\xc8\x18\x8f\xde\x1a\xd7\xda\xaf\x11\x27\x50\x5d\x58\x57\x2d\xd8\xf0\x06\x7d\x2a\xbd\x68\xa9\xe9\x70\x75\x37\x34\x10\x45\x78\xb8\x07\x7a\xc1\x1d\x4f\x61\x9e\xc9\xc2\x3f\xd6\x11\x9d\x98\x46\xaf\x11\x78\x42\xd2\x6e\xca\xdd\xfd\xc2\xad\x36\x4e\xb6\xb3\xda\x28\x06\xce\xec\x5e\xbf\xce\xfc\x70\x09\xc5\x16\x9a\x75\xdf\xb8\xfe\xbb\x01\xe4\x4e\xf8\x8b\x3f\x7a\xbc\x7e\xc7\x5a\x94\xf6\xd1\xc1\x6a\x93\xb5\x26\x0d\xd8\x78\xd0\x26\xdd\x14\x39\x1c\xf7\xd6\xb2\xea\x97\xfe\x82\xca\x19\x56\x43\x2d\x0c\xec\x23\x0b\xdd\xa4\x20\x11\xa2\x8d\xd0\x7b\x5e\xec\x6b\x90\x63\x8a\x18\x77\xbc\x17\xa4\xdc\xff\x64\x6c\xd4\xcd\x48\x1d\x93\x1b\x6e\x08\x8d\x07\x56\xf6\x1c\x49\x6b\x7b\x07\x86\xb6\x3d\xd8\xe7\x9c\x19\x79\xe2\x06\xce\x42\x27\xb4\x23\xa1\x51\x3a\xc6\x23\x11\x5c\x39\xca\xb8\x48\xef\x05\x7d\x45\x02\xda\x61\x5a\x87\x6f\xe1\x65\x87\x03\x6c\xdd\xde\x44\xa5\x5e\x13\x15\x4e\xd8\x1b\xf1\x67\xda\x76\x4f\x11\xd0\x08\x0e\x63\x74\xe9\x3a\xd0\x97\x1a\x99\x7c\xd8\x1b\x30\xcb\x3c\xb0\xb8\x65\x4a\x8b\x58\x5c\x64\x81\x69\x7d\x72\x0e\x8b\x45\x31\xd4\xd8\xf8\x74\x98\x76\x3b\xeb\xb0\x51\xda\xc3\xac\x39\x8b\xf4\xed\x17\x8e\x5c\x9b\x3d\x78\x88\x4a\x69\x7a\x9c\x2b\xbb\x5d\x9b\x73\x39\x7f\x4e\x76\xb6\xda\xf4\xf4\x5c\x0d\xcb\x4d\x55\x76\xcf\x89\xe2\xc5\x56\x56\x82\x94\xfc\xf6\x23\x8d\x85\xf2\xd9\x59\xfb\xfb\xf6\xcd\x3e\x54\xba\xdf\xdb\x86\xf4\xbd\x9f\x26\x83\xc6\x5e\x45\x6c\x9e\x4f\x96\x45\x05\xc5\x70\x73\xc4\x1d\x8e\xd0\x00\x03\x24\xde\xce\x63\x20\x1f\x86\xa2\x2b\xf9\x2e\xb1\x18\xc4\xc5\xbf\xf7\x4c\x04\xff\x1e\x9b\x65\x0c\x79\x59\xe6\xa7\x95\x7b\xdb\x16\x07\x1f\x06\xb1\x8d\xf1\x19\xcf\x3c\x46\xea\xb3\x76\x55\xaf\xb3\x00\xba\x4c\x9e\x1b\xeb\x54\xdf\x69\x9b\x07\x1f\xe6\x85\x36\x67\x08\x6d\x9b\xd2\x85\xf6\x94\x8e\x80\xda\x1b\xbe\x2b\x56\xf1\xaf\x6a\x44\xa8\xa5\x0f\xe4\xf7\xc1\xcc\xac\xcd\xd5\x49\x73\x8e\x3e\x98\xe4\x2d\xb1\x88\xf3\xc5\x01\x1e\x58\xfb\xf3\xca\x32\xba\xb6\x17\x67\xa0\x2b\xef\x22\xdb\x3b\xbc\x20\xea\x6b\x8e\x3f\xed\xa3\x78\x6b\xc3\xe9\x7d\x7e\x1e\x63\x17\x88\xa6\xd8\xaa\x95\xe9\xe9\x83\xae\x60\x14\x56\xf3\xd1\x63\x82\x59\x06\xae\xab\x45\x4b\x72\x29\xd1\x7d\x99\x8a\x5d\x4b\x3f\xef\x2c\xa1\x10\x91\x42\xb2\xb3\xa9\x7b\x1c\x29\x41\xb7\x1c\xf4\x79\x44\xf3\x10\x24\x82\xb8\xf4\x86\x56\x8a\x6a\xa8\x6a\x29\xcd\x6c\xe7\xe0\x8a\x7c\xba\xf7\xcf\x0b\xf7\xc2\x25\xa8\x49\xf4\x74\x62\x4a\x72\xa0\x91\xae\xed\x01\x9e\x51\x2a\x97\x7e\x73\x69\x28\xf6\x9e\x98\x37\x0b\x93\x2f\x9d\xab\xaa\xca\xf2\x8a\xf7\x85\xbd\x3f\x64\xf9\x96\x60\x56\xf9\xfe\x3e\x53\xdc\xfd\xbc\x5b\xc5\xd0\x28\x4f\x14\xc9\x38\xa0\x63\x7e\x84\xfa\x31\xe1\x0d\x7e\xce\x8b\x5b\x55\x52\x78\x7b\x41\x27\xbe\xea\x98\x27\x38\x46\xd9\x95\x95\x18\x09\xe1\x8b\x5a\x0d\xb1\x7f\xdf\x34\xf9\x1d\x77\xab\x5c\x23\x19\x87\xdd\x13\xa3\xb5\x03\x72\x06\x4f\x7c\x94\xcf\x61\x04\xea\xa7\xb1\xf5\x2d\xca\x4b\x27\x78\x05\x11\xce\x1c\xc0\x94\xd8\xf5\x4d\x78\x11\x8b\xbe\x65\x18\x8b\x5a\xd1\x63\xfb\xca\xa5\xaa\xc7\x79\x50\x6b\xb1\x8d\xfc\x88\x2b\x48\x23\x2e\x01\xb6\x4a\x94\x67\x2e\x60\x21\x64\x83\xae\xba\x1d\xe0\x78\xc4\x85\x47\xdc\x96\x33\x6f\x9d\x16\x2b\x44\xe3\xbd\x63\xe1\xae\x50\xb4\xff\x5c\x9b\xd3\x68\x8a\xf2\x03\x2c\x8e\x7b\x81\x09\xe1\xbe\x87\xe6\x8e\xc6\xd7\x02\xfb\x09\xb7\xb8\x1c\x9f\xa9\xb9\xd5\xe1\x48\x46\x46\x7a\x31\x7b\x49\x27\xc1\x59\xc7\x71\x91\x1e\x7d\x0d\xf3\x4e\x85\xd2\x4c\xb4\xac\x0b\xd3\xdf\x31\x40\xa5\xe9\x80\x88\xa8\xd1\x87\xdb\xa0\x5e\x15\x9a\x48\x74\xd7\x6a\xb3\xdd\x9d\x91\xc9\xa7\x70\xc5\x9e\x65\xa2\xcb\xa3\x4f\x56\x0f\x25\xe0\x54\xc1\xb5\xa0\x1a\x59\x0f\x45\xac\x48\x79\xca\x96\x9f\x2f\x47\x45\xa0\xa8\xb4\x40\x27\xbd\xee\xf2\x7b\x98\x6a\x26\x9b\x53\xbe\x2c\x6b\x08\x94\x6c\xf0\x9d\x3b\x70\x15\x2f\x2c\x33\x5b\xf7\x42\x99\x1d\x90\xb1\xe0\x9c\x76\xc9\x5c\xe8\x1f\x29\xa2\x29\xfc\x37\x35\xff\x0f\x00\x00\xff\xff\x6b\xa9\x38\xab\x8b\x06\x00\x00")

func test_certsClientTenant20KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Key,
		"test_certs/client-tenant.20.key",
	)
}

func test_certsClientTenant20Key() (*asset, error) {
	bytes, err := test_certsClientTenant20KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x32, 0x41, 0x89, 0x53, 0x46, 0x3b, 0x37, 0x82, 0xee, 0x3f, 0xfb, 0x87, 0x9b, 0x67, 0x6f, 0x80, 0x1b, 0xb7, 0x98, 0x6c, 0x21, 0x13, 0x0, 0x10, 0xe, 0x44, 0xe1, 0x16, 0x5e, 0x23, 0x11, 0x6b}}
	return a, nil
}

var _test_certsClientRootCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\xcb\xce\xb2\x48\x17\x85\xe7\x5c\xc5\x3f\x7f\xf3\x47\xe4\x24\x0e\x77\x51\x05\x96\x58\x48\x21\xa8\x38\x03\xc4\x52\x91\x83\x28\x14\x7a\xf5\x9d\xf7\xeb\xa4\x7b\xd0\x7b\xf8\xac\x64\x25\x3b\x2b\x79\xfe\xff\x7b\x88\x78\x34\xf8\x9f\x43\xa2\x98\xba\xd4\x81\x98\xfc\xa1\x0a\xa3\x14\x53\xec\x38\x20\x6e\x02\x24\x45\x20\x28\x0f\x5d\xd9\x2f\xba\xe2\x27\xb2\xe8\x58\xce\x8f\x4f\x5d\xce\x06\xf4\x85\x00\x89\xea\x79\xad\x6e\xde\x52\xaa\x08\xf8\xcb\x05\x0c\xbd\xc2\x22\x2a\x09\xa4\x78\xcf\xb9\x4f\xe4\x03\xe7\x5a\xd0\x17\xf5\xf2\x9a\x6a\x62\x72\x63\x88\x91\x08\xf6\x08\x58\x8c\x49\x30\xa6\xda\xfb\x93\x6b\xee\x3d\x73\x10\xe6\x31\x94\xae\x54\x3f\x0a\x8b\x89\x64\x38\xf9\xb0\x38\x31\x82\xf8\x91\xfd\xc2\xe0\x4e\x24\x8b\xe1\x1f\xc6\x1c\x36\x91\x3b\xf0\xbf\xcb\xda\xd8\x49\xfe\x2d\x53\x32\x4c\x02\x06\x2f\x0f\xe6\x09\x81\x89\x91\xa2\x5e\x8e\xe7\xdf\x97\x76\x54\x62\x9e\xae\xfd\xf6\x44\xaf\x63\x11\x00\x27\x08\x71\xc0\x42\x90\x10\x7e\x73\xde\x3a\x42\x10\xa4\x40\x00\xab\x1c\x65\x83\x87\x97\x4d\xd3\x1f\x0c\x1f\x3d\x6d\x84\x30\x94\x27\x6b\x77\x89\x78\x79\x3a\x35\x5e\x55\x04\xf8\x91\xc3\x6c\xbd\x0e\x57\x53\xd9\x07\x55\xd0\x3e\xa9\x41\xd7\x41\x7c\x98\x94\x5b\xbd\xb4\x0a\xfb\x3c\x0f\x58\x66\xbc\xbe\x52\xac\xf7\xeb\x59\x56\x0c\xda\x5d\x6b\x97\xfc\x30\xcb\xbb\x62\x7c\x57\xba\x7f\x7f\x5e\x06\x59\x7b\x9b\xed\xd9\xa8\xfb\xaa\x89\x9f\xed\x32\x3f\x45\x1b\x5b\x28\x86\x28\x22\x76\xfa\x2e\x66\xb5\x94\xdd\xcd\x41\x19\x2e\x75\xd7\x5b\x98\x1c\xbc\xf3\xa7\x35\x3d\xb7\x77\xfd\x38\x62\xee\x37\xcf\xfb\xcd\xa1\xd8\x9a\x4e\x15\x8b\x4b\xf9\xbe\x64\xe7\x66\xe7\x9e\xe7\x4a\x5a\x8d\x1d\x8c\xad\x2e\x3c\xdb\xcf\xf5\x87\x07\xb1\x7a\x2b\x6f\x7c\x37\x45\xaa\xb1\x67\xc7\xd4\x4f\x12\x73\x93\x70\x7e\x3b\x6f\x8e\xc6\x18\x7e\x64\xd1\xc6\xdd\x62\xed\xe7\xf0\xdd\xf5\xd8\x9c\x2b\xb7\x78\x23\xd8\x71\xe1\xf3\xbe\x5e\xd9\x96\x63\x9a\xdc\x72\x37\x71\x61\x91\xe3\xe6\xda\x1c\xca\x37\x37\xbf\x81\xb5\x2f\x59\xa8\xc7\xb3\x07\x2a\x5f\xb2\xf4\x76\xba\xb5\x89\x1f\x59\x84\xa1\xdc\xf6\xca\xd3\xa7\xa6\xff\x05\xb3\xb7\x1f\xc3\xd4\xbf\xbb\xa2\x9a\x4e\x4d\xcd\x1c\x90\x04\x20\x0b\x28\x23\xa9\xc4\x22\xc5\xfb\x48\x0d\x81\xaf\x66\x08\x38\x06\x71\x10\x0c\xb1\xdf\xe5\xce\xca\x9a\x73\xc6\xa0\xf5\x1c\xe7\xe5\x01\x4f\x5c\x24\x99\xc3\x90\xfd\x27\xa4\x92\xa7\x0c\x65\xe0\x22\x08\xa3\xf0\x7a\x50\xd7\x43\xf9\xe3\xbe\xec\xd7\x67\xda\xf7\x58\x15\xc6\xc2\xf3\x14\x06\xaa\xe7\xec\x9e\xde\x8e\xe6\x3a\xe6\x04\x39\x32\x01\x30\x28\x02\xee\xdc\x6b\x35\x09\xf7\xe6\x03\xef\x93\x2d\x11\xaa\x28\xa9\x29\xd2\xed\x25\xcc\x54\xe6\xbe\xe4\x65\xab\x5a\x10\x50\x45\xee\xdd\xe6\x7c\x11\x57\x6e\x09\xd3\x64\x2f\xb2\x5f\x77\xd9\xde\xfa\x59\x3d\x6e\xee\xc7\xa3\xa2\xe9\xea\xfc\x70\x27\xc5\x90\x64\x64\xd6\x1c\xda\xda\x5b\x59\xda\x69\x5b\xf4\x60\xdf\x0c\xdd\xbd\x86\xca\x75\x4e\xb0\x8f\x6e\x6c\x3e\x5d\xf2\xd4\x5d\x8c\x76\x86\x93\xe0\x82\x6b\x34\x9b\x7f\x05\xf2\xa7\x3e\x3d\xcd\x56\xfa\x27\x7e\xf1\xbe\x19\xba\x8f\xde\x69\xd6\x57\x7b\x3f\xd6\x43\x08\xd3\xd6\xf0\x5d\xe5\x08\x9b\x2e\xec\x3d\x39\x5e\x16\x33\xda\x31\xe7\xbd\xec\x3c\x7d\x9c\x46\xa6\x32\x67\xa1\x3b\xbc\xc8\x1f\xed\xf1\x18\x7d\xc6\x73\xc5\x69\x6a\x6c\xb5\xd8\x88\xef\xb5\xdf\xcb\xea\xb2\x6b\x9e\x0d\x28\x3f\xc4\xec\xaf\xe2\x89\x42\xc7\x26\xed\xc7\xca\x51\x85\x0c\x1b\x6e\x6e\x62\xb5\x6f\xab\x9c\x57\xd0\x2d\xef\xce\x60\x3e\xf5\x9f\x21\xdb\xba\xea\xbb\xa4\xda\x75\x71\xd0\x16\xd1\xfb\xd2\x0e\xc5\x7b\xa6\xd8\x57\x8d\x7c\x3d\x52\x51\x3c\xce\xa7\x57\xd2\xee\x6a\x35\x1d\x37\x9d\xc7\x1f\x7e\x3b\xda\x6f\x7d\x31\x3a\x36\xf4\x76\x58\x5a\x08\xb7\x2b\x59\x2a\x7f\x34\x42\x02\xfc\x5f\xb5\xfc\x15\x00\x00\xff\xff\xd9\x11\x64\x10\x77\x04\x00\x00")

func test_certsClientRootCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootCrt,
		"test_certs/client.root.crt",
	)
}

func test_certsClientRootCrt() (*asset, error) {
	bytes, err := test_certsClientRootCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.crt", size: 1143, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6, 0xc8, 0xa6, 0x2f, 0x82, 0x68, 0x3c, 0x7, 0xb3, 0x33, 0xd7, 0x61, 0xde, 0x13, 0xca, 0x83, 0xc6, 0xe1, 0x51, 0xec, 0xef, 0x5c, 0x9d, 0x9, 0x96, 0xbd, 0x69, 0x7d, 0x30, 0x2a, 0x5, 0xd1}}
	return a, nil
}

var _test_certsClientRootKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xa3\xcc\x02\x04\xe0\x9c\x53\x6c\xae\x7a\x25\x10\x08\x13\x62\x85\xf7\x0c\x82\x0c\x37\x48\xd8\x01\xe1\x4f\xff\x6a\x37\xfe\x3b\xed\xa4\x93\xae\xef\x7f\x7f\x23\xc8\x2f\xcd\xfe\xe3\x07\xfc\x1f\xd7\xd7\x00\x1f\xca\x7f\x0c\x39\xf9\xd7\x60\x96\xa6\xc9\xe3\xae\x09\x3c\x6f\x88\xbc\x27\xf3\x38\x5f\xfe\x94\x89\x4a\xdc\x47\x55\x2d\x79\x3d\xbe\xe6\x5d\x96\x2d\xe1\x39\x20\x9d\x53\x84\x67\xd7\x17\x99\xbf\xe3\x0e\xf8\x49\x6c\xdb\xb2\x50\xc1\xe8\xdf\xc3\x7b\x7c\xc7\xa6\xae\x5b\xc2\xce\x5f\x46\x4e\xa2\xeb\x20\x23\xfc\x98\xbf\x97\x2b\xf2\x5d\x34\x70\xe8\x64\x32\x37\x6b\x08\x21\xe7\xd6\xee\xbc\x3d\xc2\x62\x72\xd0\x8d\x11\x93\xe4\xf7\x24\xb1\x6f\xb6\x06\xa5\x33\x35\xc4\xd2\xc9\xdb\x29\x7d\x85\x43\x3e\x06\x77\xbb\xe5\x92\xd8\x6b\x9a\x32\xda\x4c\x11\xe5\x5b\xc7\xf3\x29\x69\x34\x6d\x12\xff\x22\x64\xcb\xfb\xdb\x5e\xd6\xdf\x92\xee\x4c\x8b\x19\xbe\x23\x70\x34\xc1\xa1\x47\xa9\x01\x12\x7c\x83\x5b\x2b\xde\x9a\x8a\xcf\x77\xb4\x55\x51\x22\xb8\x81\x4e\xeb\x82\xa9\xa8\xe1\x27\x3a\xca\x1a\xf9\x61\xbb\xf8\x82\xa8\xe3\x0b\xfc\xb2\x77\x53\xc0\xce\x8f\x33\xfc\x5a\xf4\x93\x6c\xe3\xe7\x0e\xb1\x6e\xad\xfc\x01\x7f\x48\x5c\x13\x78\x8d\xe6\xd0\x49\x63\xb4\xd8\xd7\xe8\x17\xeb\xab\x4c\x69\x42\x1a\x2c\x12\x01\x6a\xbf\x97\xee\x2d\x52\xe8\x4b\xc0\xa8\xd4\x84\xe3\xe2\x00\x24\x5b\x02\x45\xaf\xe3\xd8\xb4\xb3\x25\xf5\xdb\x19\x33\xaf\xf5\xd1\x9d\xa1\xd2\x57\xc9\xae\x49\xbc\xc7\x0b\xfc\xa8\x09\xbc\x2a\x54\x32\x3c\x1d\xf7\x3d\x8b\x36\x14\xbe\x58\xe1\x15\x77\x82\xd3\x23\x04\x70\xc3\x7a\xbe\x83\xf2\xcd\x8a\xe7\xa3\x23\x58\x09\x9f\xdf\x2d\x1d\xb1\xed\x62\x34\x68\xd3\xcb\x2b\xa8\x80\x51\x45\xfa\x36\xd7\x09\xec\xaf\x30\xcf\xd0\x56\x15\x11\x06\x3e\xc1\xe7\x6a\x36\xa9\x72\xbc\x2f\xdf\xd1\x07\x1c\x22\x8f\xbb\x0e\xdb\x21\x0e\x7e\xa0\xb8\xfb\x67\xd7\x1d\x6b\x4d\xe4\x4a\x5e\x16\xcf\xc4\x8b\x0d\x4e\x8d\xbf\x29\xb6\x64\x36\x21\xd3\x7f\x3c\x0c\xb6\x66\xf6\xca\x4a\x92\x3e\x4d\x3c\xd1\x09\xdd\x9c\x1a\xc5\xcb\xce\xdf\x55\xf6\x43\xaa\x13\xb8\x77\xad\x41\xd9\xc6\x48\x97\xb7\x28\x35\xef\x2d\x9a\x29\xd6\x71\x7a\x97\x1f\xa7\x99\xa4\xcc\x0c\xab\x85\xd1\x34\x3c\x43\x3f\x96\xc9\x9a\x5b\x83\x9e\xbe\x52\xb5\xea\xad\x94\x3e\x71\x75\xf1\x36\xf3\xe6\x37\xd2\xfd\x10\xb2\xbb\xfa\xc5\xeb\xa1\x80\xb4\xcd\xbd\x1d\x52\x7e\x04\x78\x28\xf1\x5c\xb1\x61\x60\x78\x0f\x7b\x3a\x2c\x21\x12\xaf\x4b\x44\xce\x2a\x98\xad\xcb\xec\xac\x8f\xc8\x2b\xec\xcb\xce\xd8\x68\x18\x78\xaa\x04\xa1\xbb\x10\x50\x39\xac\x27\x2c\x38\x35\x3d\x4f\x64\x74\x49\x07\x4d\x0c\xc8\x4f\xba\x96\x65\xb1\x4e\x64\x1e\x47\x38\x6e\xb0\x50\x99\xdd\x91\x41\x85\xf2\xd4\x14\xf0\xc2\xbd\xd0\xa7\x03\xc6\x41\x4a\x3b\x5b\xf7\x07\xed\x2e\xe4\x35\x92\xd1\x07\xb7\x83\xee\x18\x88\x17\x86\x10\x7d\xc9\x31\x15\x52\x3e\x97\xb1\x8a\xb7\x56\xc9\x9c\x5a\x8d\x5f\x4e\xf8\xa6\x87\xfe\x3c\x46\x6f\x82\xff\x26\x6f\x34\xa0\x67\x25\x92\xc1\xcd\x10\x03\x4b\x6f\xea\x8f\xdd\x04\xdc\x7a\xf3\x26\xec\xd8\x0d\xa7\x39\x8c\xb6\x73\x71\xa7\xd5\x56\x5f\xbc\x52\xbc\x4a\xe3\xa5\x69\x47\xf7\x8e\xcf\xdb\x75\xd9\x13\xdc\x19\x17\x49\x8d\x4f\xd8\x02\x91\xd6\x49\xc6\xfa\xf8\xbf\xc5\x77\x7b\xcd\x31\x6a\x0f\xa1\x32\x4c\x00\x57\xca\x5a\xd6\xe7\xa4\xa7\xc8\xbb\xce\x3d\x8f\x81\x3e\x71\xb2\x59\xcd\xcd\xc9\xde\x0c\x15\x16\x23\xae\x89\x85\x90\x7d\x73\x7f\x92\x12\xaf\x7a\x58\xea\xb4\xa6\xd9\x6f\xc4\xc4\x83\x5e\xba\x81\xce\xe6\x89\x28\x04\x60\xc5\x1c\xee\x31\x4a\x87\x0c\x0d\x36\x0b\xd0\x8d\x37\x5c\x56\x65\xfd\x4d\xfb\x64\xb1\xc8\xd8\x59\x15\xff\xc2\xb7\x35\xbf\xce\x9e\xa7\x4a\xf7\x2d\x78\x98\xaa\xa6\x1d\xfd\xb2\x54\xed\x14\xc4\xb3\x7b\x96\x5b\xff\xf9\x2c\xe2\x5b\xb4\xcd\xca\xca\x98\xda\xb5\xd3\x97\x62\xbf\x59\xb1\x4e\xf8\x0e\xa8\xd0\x38\x67\xb2\x3a\xb7\x55\xfd\x64\x76\x50\xb2\x33\x81\xd5\x51\x74\xe5\xe4\x67\xa7\x6d\x1c\x56\xb0\x1b\xe9\x93\x6a\xe8\x99\xb9\x90\x89\x73\x51\x58\x44\x6d\x74\xcc\xf4\x90\xe7\xad\x60\xad\x7e\x4e\x90\x52\x12\x1d\xbb\x9d\xa6\x69\x03\x06\x22\xc4\x13\xcc\x56\x7f\xf9\xd3\x13\x1a\xe8\x3c\xd7\x38\x36\xb3\x1b\xe2\x0a\xb4\x24\xac\x0e\x2e\x06\xd7\x81\x5c\x58\xb7\xf0\x52\x46\xd8\x34\x73\x3f\x72\xc9\xf1\x41\xa0\x2a\xa9\x76\x6e\xae\xe8\x35\xad\xaf\x18\xab\xc4\x4c\x53\x67\xb8\xf1\xb4\xb5\x94\x11\x48\xe7\xfb\x12\xd7\x9e\x21\xd4\x9e\xa8\x27\x8f\xf8\x52\x8e\x87\x44\x49\xc4\x5e\x13\xed\x2a\x69\xc1\xf6\xd2\x17\x97\x03\x07\x91\xaf\xdf\x26\x7b\x00\x19\xc3\x63\xed\xac\x01\x90\x1f\x94\x8b\x3a\x60\xfa\xc7\xf5\xeb\x02\xcd\x6f\x7b\xd7\x0b\xfd\xbf\x57\x4c\xe5\xf8\x05\x10\xdf\x3b\x9c\xc9\x82\xac\x35\x92\x07\x88\xd1\x8d\x94\x58\xab\x00\x39\xc5\x62\x4c\x57\x57\xda\xf9\x08\xd7\x87\x9b\xf1\xa3\x83\xc7\xa4\xfd\x51\x76\x8a\x61\xdb\xd2\x61\xe8\x53\xed\xc7\xce\xe8\xc5\xed\xea\x5d\xc6\xcf\x44\x9a\x88\xa9\xfb\xf7\xbc\xc0\x3b\x79\x43\x7d\xa5\x97\x3b\xf6\x9c\xe9\x26\xdc\x0d\xa1\x7e\x41\x65\xa1\xef\x94\xa6\xa2\x2c\xef\xcf\x86\xe9\x57\x07\x07\xcf\x9f\x6f\x9a\xd9\x3d\x62\x39\x95\xd9\x2d\x48\xb7\xfc\xf7\x83\x8f\x9f\xa6\x53\x96\xb3\x2d\x0e\x5f\x35\xb0\x05\x5a\x88\x7c\x72\xba\xb6\x94\xa1\x46\xcb\x69\xb2\x1a\x15\x25\x1b\xc8\x8e\x27\x8f\x49\x67\x2e\x79\xbe\x1f\xee\xcd\x60\x0a\x3e\x4e\xd7\xfa\xa4\x6c\x3e\x9f\x35\x2d\xb4\x17\x68\x84\x0f\x95\xad\x30\x61\x63\x3d\x93\x48\x01\x50\x49\xb5\x06\x23\xe7\x93\x05\xb9\x27\x37\x58\xc3\xe3\x0e\xae\x84\xde\x06\xc5\x0d\x7e\x34\x90\xe5\x75\x10\xec\x2b\xfe\x5d\xc0\xc4\xfe\x91\x22\xdb\xd2\x7f\x53\xf3\xff\x00\x00\x00\xff\xff\xbd\x7a\x88\xb4\x8b\x06\x00\x00")

func test_certsClientRootKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootKey,
		"test_certs/client.root.key",
	)
}

func test_certsClientRootKey() (*asset, error) {
	bytes, err := test_certsClientRootKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x36, 0x4d, 0x0, 0x9a, 0x8b, 0xd7, 0x34, 0x9f, 0x50, 0x1b, 0x35, 0xc5, 0xfb, 0x1b, 0x41, 0x2e, 0xbe, 0x33, 0xb1, 0xb4, 0x34, 0x2a, 0x38, 0xa9, 0x60, 0xcd, 0x2, 0xf0, 0xf4, 0x47, 0x89, 0x93}}
	return a, nil
}

var _test_certsClientTestuserCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xbd\x92\xab\xb8\x16\x85\x73\x9e\xe2\xe6\xae\x5b\xc6\xc6\x6e\x4c\x70\x02\x09\x09\x10\x20\x40\x46\xd0\x0d\x99\x01\xf3\x8f\xc1\xd8\x6d\x81\x9f\x7e\xaa\xcf\xa9\x9a\x09\x66\x76\xf8\xad\xaa\x95\xac\x5d\xdf\xff\x7f\x0e\x62\x93\x78\xff\xd3\xf1\x99\x13\x83\xe8\x80\xe3\xdf\x54\xa2\x84\x20\x1b\xe9\x3a\xa8\xd6\x0a\x08\x02\x41\x45\x98\xb7\xa0\x20\x58\x82\xad\x41\xec\x6d\x79\x16\xbd\x6c\x75\xf2\x8c\x80\x07\xab\xee\x5e\x77\x8d\xa9\x09\x19\x02\xf6\x30\x00\x02\xb3\x44\xcf\x44\x60\x90\xa0\x98\x31\x07\x8b\x1e\x65\x7b\x6f\xce\x07\xad\x4e\xf6\xd5\x62\x70\xc0\x61\xe5\xc5\x10\x50\x8e\xb0\xf7\x4a\xf6\xcf\x35\xdb\x1b\xed\x45\x87\x88\x71\x70\x35\x84\xbc\x4a\x94\x63\x41\x51\xb4\x52\x1e\x1d\x29\x82\x97\x1f\xe8\xb5\x58\x50\x0e\xfe\x66\x54\xcf\x17\xdc\x02\xf6\xa7\x6c\xe4\x7a\xf4\x4f\x99\x74\x41\xf8\x4c\xc1\xc9\x04\xbb\x08\x83\x85\x92\xc2\x8c\xdf\x85\x15\xbf\xd3\x2f\x22\xaa\x0a\x37\x14\xc8\xa6\x1e\xde\xcd\x90\x64\x0a\x62\x18\x02\x16\x01\x70\x20\x10\x09\xf0\x93\x3b\x12\x18\x09\x04\x0c\xa5\x57\x5b\xde\xc1\x37\x8d\x8b\x7d\x5d\xd9\x97\x39\x1f\xdf\x2b\x37\x6b\x72\xb2\xbb\x41\x66\xf7\xdb\x74\x54\xe3\xc8\x77\xb3\x30\x1c\x42\x95\xe7\xfb\x99\x24\x20\x9d\xd8\xd4\x48\x0d\x56\x78\x3f\x5c\x93\x14\x27\xf5\xb8\xd6\xcb\x34\x99\xa2\xa8\x9f\x42\x15\xdc\xc9\x56\x8a\xcc\xb6\x1e\x72\x8d\xee\xaa\xb7\x35\xea\xa6\x72\xfb\xe6\xc9\x87\xf3\xb8\x95\x85\xba\x69\x4e\x11\xea\x24\x73\xa6\x5b\x9d\x2b\x6f\xd2\x6b\x77\xeb\x0d\xdb\x4c\xdc\x56\x0e\x37\x7a\x81\x77\xf2\xf6\x9e\x53\x32\x82\xd3\xc9\xb0\x1b\x95\x0c\x47\xf7\x68\x17\x8e\x3c\x4d\xc1\x37\xec\x9a\xe3\x0a\xf7\x76\xf4\x25\xb5\xed\xb7\xab\xca\xfd\xf5\xb5\xdc\x07\xd2\x99\x27\x7a\xea\xc7\x0d\xaa\x1f\xcd\xf3\x15\xc2\xc0\x2f\x0e\x74\xca\x4f\x6f\xc5\x5b\x6f\x69\xff\xa5\x7d\xd0\x70\xb4\x16\x75\x71\x5d\xe3\xa6\xeb\x63\xbd\xed\x25\xc7\x1f\x23\x68\x34\xee\x5b\x9c\x5e\x0e\xfa\x58\x11\x73\x57\x50\xc0\x84\x44\xcb\xd7\xf1\xe5\x6a\x7b\x3a\x3f\xb2\xe2\xf3\x29\x5f\x69\x4e\x6f\x40\x4d\x81\xe2\x5d\xa6\x6f\x07\x9b\xfa\x6c\x70\xbc\x48\x83\xe5\xf9\xf3\x8c\xf3\xe6\xf0\x61\x2e\x46\x94\x10\xd5\xbd\x3c\xf9\xdd\x0d\x86\x2c\x00\x15\x85\x00\x98\x6d\x88\xa0\x49\xc1\xe1\x67\xa9\x02\x09\x0c\xb7\x82\x61\x20\x88\x31\x22\xc0\xa5\x9f\x6d\xad\x30\xc2\x08\x01\x07\x56\xd5\x0c\x2b\x6c\x40\x96\x23\xd0\x82\xf2\x4f\x46\xb1\x89\xc0\x67\x05\x19\x43\x32\x3f\xc4\x4f\x3d\xbb\xbd\xea\x2c\x70\xe9\x23\xbe\x08\x4d\x22\xbe\xbf\xd4\xed\x7f\xbc\x29\xf0\x75\xc0\x30\x18\x5f\x59\xb6\xbe\xf4\xa7\x78\x2b\xdf\xa9\xb2\xf7\x99\xf5\xde\xa0\x6e\xe7\xb7\x43\xe1\xcb\x70\x36\xa4\x4a\x13\x0b\x8c\x2f\xfe\xb2\x43\xe5\xed\x00\xd3\x47\xe3\x25\xed\x14\x3d\x9f\xe1\xf2\x10\xe3\xa0\x22\x95\x7b\x76\x0e\xf6\x11\x08\x08\xef\xcd\xc6\xb6\x4a\xc3\x13\xa5\xe5\x28\xe9\xb5\xd4\x9f\xb2\xa4\xf9\x5d\x9e\x9f\x97\xbb\x6f\x99\xfd\x72\xb4\x65\x76\xcf\x82\xd9\xe8\x36\x79\x72\xde\xcd\x7c\xdd\xdc\x67\x45\x3f\x7f\x66\x49\xc6\xbe\x0e\x9a\x2f\x42\x55\x66\xaf\xc8\x42\x51\xf5\x8a\x2f\x9b\xa2\x53\xa4\x2c\xa5\xc3\x61\x69\x8a\x4d\x49\x57\xd3\x49\x0f\x05\xe8\xc7\x76\x19\x96\x64\x01\x46\xce\xe2\xb3\x3e\x53\xab\x0d\xcf\x77\x2b\xfc\xb2\x37\x3b\xe0\x7e\xf7\x1f\xb6\x30\xe2\xf6\x28\xda\xcf\x83\x48\x74\xe9\x7c\x73\xc6\xea\x28\xec\xfc\x90\x27\xe7\xe3\x76\x59\xdf\xa5\xf1\xb4\x78\xf8\x30\xcb\x4d\xd3\xe8\x13\xf9\x0c\x82\x53\x34\xd0\x67\xd6\xc6\xfd\xb5\x9b\x74\xad\x54\x36\x9e\xbd\xe9\x39\x79\x6d\xd3\xb9\x95\x4e\xf9\xcc\xd2\x71\x70\x79\x92\x74\xfb\x52\xd3\xfa\x22\xaf\xb8\xa5\x5e\x59\xb0\x67\x61\x1d\x1f\xdb\x4d\x33\x67\xfe\xe7\xd7\x1e\x9f\xaf\xba\x7d\x70\x4a\x25\x38\x4e\xec\xd7\x2f\xe9\xb7\x4e\xb0\x87\xfe\xad\x98\xbf\x02\x00\x00\xff\xff\x07\xf7\xe1\xc4\x7f\x04\x00\x00")

func test_certsClientTestuserCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserCrt,
		"test_certs/client.testuser.crt",
	)
}

func test_certsClientTestuserCrt() (*asset, error) {
	bytes, err := test_certsClientTestuserCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6b, 0x59, 0x70, 0x88, 0xeb, 0x1d, 0x32, 0xff, 0x58, 0xd3, 0x91, 0x61, 0xf6, 0x70, 0xa4, 0x55, 0x51, 0xc4, 0x2e, 0xe3, 0xc8, 0xc7, 0xa6, 0xef, 0x8, 0x89, 0x8b, 0x92, 0x65, 0x73, 0xa8, 0xb1}}
	return a, nil
}

var _test_certsClientTestuserKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xab\xc8\x02\x85\xe1\x9c\x55\xdc\x5c\xf5\x4a\x80\x84\x0b\x5e\xd0\xf8\x06\x01\x8d\x15\x90\xe1\x84\x93\xf0\x7e\xf5\x53\x73\xe3\x39\xe9\x49\xfe\xec\xfb\xdf\xbf\xe3\x25\x05\x9a\x7f\x1c\x17\xfc\x41\x0e\x0c\x80\x27\xfd\xd1\xa5\xe8\xef\x83\x19\x10\x4a\x83\x0d\x79\x00\x74\x01\xd8\x12\x20\xc3\x3a\x37\xed\xec\x92\xc3\xbc\x8f\x84\xf7\xf8\xd0\x0d\xb6\x3d\x7a\x17\x09\xb1\xb6\x48\xfa\x40\x17\x05\x11\x88\x35\x89\xb7\x43\xbb\xe2\x0f\x13\x1b\x4f\x05\x28\x89\xaf\x47\x7d\x65\xe2\x54\xdc\xfd\x14\x47\x81\x89\xd1\x67\x49\xe2\xcc\x6a\x94\x66\x16\x2b\x9d\x3f\xb6\x01\x47\xff\x8c\x3b\xe4\x99\x91\x71\xd0\xa0\x5a\x28\xa6\x25\xad\x7a\xd2\xb0\xc7\xa3\xb8\xf7\x9b\x0c\x28\x7e\xbc\xd0\xde\x72\xec\xa9\x7d\x92\x8a\xdd\x23\x92\xd5\xd8\x76\xff\x94\x9d\x63\xe6\x88\xee\x44\x41\x07\x08\xf1\x6e\xb4\x9e\xda\xea\xde\xdc\xd0\x5d\xf4\xc4\x63\x4a\x2c\x86\x6b\x56\xe6\x75\x20\x3f\x9f\x4c\x7d\xe3\xb4\x70\x62\x93\xa1\xd6\xf8\x4d\x44\x5a\x82\xca\x67\x0a\xa7\x14\x2f\xbd\xab\x2b\x44\x3d\x44\x06\x77\x65\x03\x19\x07\xf7\xa2\x91\x46\x9e\x2d\x58\x17\x3b\x8f\x78\x2f\x47\xf8\xa1\xdc\x66\x94\x81\x13\xd5\x2c\x8b\x5e\x67\x79\x9b\x4b\x5c\x60\x4b\xd5\x7e\x0b\xb2\x11\xdc\xd2\xf3\x9e\x37\x3a\xa3\x3c\x82\x29\x57\x1b\x55\xd4\x76\x8b\xb4\xcd\xeb\x3d\xa6\x58\x5d\xf1\xe5\x78\xf8\x87\x11\x57\x97\x37\xd2\x87\x0a\x57\xab\x9a\x9d\x40\x11\xac\x93\x9c\x7c\xba\xbe\xa8\xdf\xb5\x43\x11\xd8\x80\x07\x3d\xe4\x81\x2d\xac\x33\x45\x85\xe0\xfa\x15\x1f\x27\xc6\xb1\x78\x7e\xb6\x20\xa0\xcb\x57\xf6\x83\x6f\xad\x33\xd5\x42\x38\x18\x62\xf0\xe5\xef\x0a\x79\xb0\x3c\x45\x43\xc0\xed\x37\x81\x5e\x3a\x75\x09\xc1\xc9\x6a\xd1\x4d\xcc\x8d\x51\xd0\xaf\x4a\x0f\x74\xf2\x8b\xa1\xd7\x7e\x5b\x7c\x8f\xb9\x2d\x1b\xf7\x2b\x27\x19\x5c\x59\x85\xca\xcd\x29\x2f\x5b\x2d\x88\x81\xbd\xee\xaf\xb9\x18\x68\xbb\x7b\xd2\xc3\xac\x7c\x8b\xf9\x17\x52\x1c\x3f\x0b\x9f\x78\xa5\x8e\x10\xda\x98\x72\xcb\x7c\x94\xf4\x29\x39\x64\xea\x0e\x6f\x7e\x6c\x2e\x7a\x6a\xcf\xef\x3e\x6a\x5e\x6a\x5f\x27\xe9\x26\xe9\x1c\x21\xa5\xe4\xeb\x89\x4f\xf3\xa0\x5f\xe9\x9b\x8b\xd2\x1a\x92\x8e\x6c\xfa\x51\xcd\x62\xe4\xe8\x51\x3a\x95\xd0\xbf\x44\x1d\xd2\x87\x66\xbe\xee\x3e\xd0\xc2\xa3\x67\x2d\xa6\x0a\x6e\x82\xec\xec\x5c\x0e\xd1\xa1\xd5\x89\x5c\xd4\xa6\x35\x4b\xc4\xf9\x88\x84\x20\x19\x66\xe7\x5e\xd0\x0b\x8b\x45\x9b\x84\x8a\xac\xbd\xab\x5c\x6f\x4f\x30\x86\xfd\xf9\xae\x6a\xba\xb6\x71\xb3\xc8\x48\xca\x53\x1b\xbf\x1d\x88\x77\x87\x58\x42\x1c\x76\x7e\x6c\xeb\x93\x8a\xc5\x68\xe5\x21\xff\x45\x3b\xeb\xc8\x58\x92\xfb\x1d\xcc\x7a\x1e\xf4\x0a\x0f\x90\x41\x23\x81\xe0\x6e\xb1\x38\x6f\xbf\xe3\x8c\x2a\xe2\x66\xfc\x60\xb6\x76\x92\x87\xee\xde\xf1\xf4\x5d\x3b\x52\x92\x4c\xb6\x1a\x00\x73\xeb\x63\x73\xf7\x27\x26\x93\x4c\x2b\xea\xbf\x06\xe9\x38\xd1\xd3\xfc\xfa\x3a\x10\x0f\xd4\x0b\x95\x3f\x9f\xb0\x29\xad\x72\x26\xb4\x70\xf7\xdd\x0c\xf6\x3d\x29\x9e\x5a\x76\x7a\x6b\x5a\xdf\xf0\x69\xa5\xea\x84\xb7\x44\x0a\x13\xb4\x30\x7f\x4b\xf6\x3e\xca\x1f\xb8\xe2\x09\x31\x9e\x46\x1c\xe8\xe8\xe8\x85\x85\x56\x8b\x4e\xb3\x9a\xef\x39\x0b\x89\x8c\x0f\xc6\x32\x0b\x6a\x19\x8c\xb0\xfc\x51\xeb\xf6\xb7\xd8\xf2\x5a\x0c\xbe\x7f\x6b\x13\x11\x86\xc7\x0a\x8f\x9e\x67\xe7\xfa\x86\x03\xf0\xc1\xf5\xa0\x53\xf5\x0d\x7e\x50\x4a\x7a\x46\x48\xb1\x91\xc0\x37\xf0\x73\x5a\x21\xa9\x74\x08\xff\x31\x74\xd1\xc4\x73\xe8\x41\x13\x53\x9e\xf2\x2b\xa5\xa0\x50\x11\x65\xa7\x6d\x2e\xd9\xcc\xc8\x14\xba\x1e\x07\x9a\xb7\x7f\x2a\xf2\x23\x95\xd2\x23\x97\xc8\xe1\x88\xb6\xc2\x1c\x6f\x5a\xbe\x64\xbf\x3e\x5b\x60\xbe\xf2\x4c\x4a\x3a\x0f\x2c\x86\x5e\x5b\xc6\x43\x53\x6a\x3b\x2b\x90\x12\x0f\x36\xc5\x52\x1a\xd6\xc8\x90\xce\x86\xfd\xb0\x51\x2e\x3e\x5a\x36\x53\x81\x5e\x01\x2e\xa5\x73\xdd\xa7\x21\x32\x3f\xb0\x84\xe8\xd9\x12\xe2\x5c\x62\x44\x2f\x1b\xbd\x69\x11\xa1\xb6\xa8\xa8\x51\x34\xb6\xfb\xac\xeb\xc5\x6c\x25\x73\x6a\x13\x49\x31\x65\x18\xf9\x8e\xeb\x93\x66\xcd\x35\xe9\x96\x2c\xd1\x7d\x6a\xb9\xf5\x15\xf2\x8d\x9c\x7f\x55\x66\xc2\xe0\x9d\xe1\xb6\x10\x30\xe3\x6c\x7b\x6b\x93\xec\xf6\xbd\x8c\xc7\x43\x48\xda\x6f\x63\x9f\x3e\x7c\xfc\x18\xc9\x59\xd7\x18\x15\x02\xdb\xfc\x82\x47\x2a\x17\xa1\x76\xcb\xf4\xe4\x61\xe4\xcb\xfe\x09\x54\xcc\x71\x78\xbb\xf5\x8a\x6f\xea\xac\x6f\x31\x12\x5c\xa1\x07\xa6\x15\xce\x42\x19\x49\x00\x27\xc0\x40\xbf\xb8\x60\xa3\xfc\x59\xbf\xe5\x09\xa1\x5c\xd7\x33\x51\x22\x53\x3e\xac\x67\xcb\x56\xaf\x55\x60\x30\xb5\xdb\x36\x9a\x6a\x66\xf8\xf2\xa9\x04\x9f\x8c\xc4\xb5\x0c\xf7\x68\xc4\x91\x9c\xb6\xed\x22\xf5\xee\x58\xf2\x29\x4e\x23\x11\x69\x51\xaa\x23\x6e\x8d\x93\xa4\x49\xf2\x76\xaf\xf6\x16\xef\x6d\x80\xed\x38\xa3\xdc\x8c\x9d\x99\x34\x42\x78\x11\x57\x95\x7d\x41\xa9\xae\x2e\xfa\x5d\x5c\xfc\x78\xd2\xb4\xf6\x8d\xb6\xf9\x25\x65\xd2\x29\xb2\x40\x1e\x94\xe5\xbd\x78\x1d\xa7\x48\x5f\xc7\x15\x70\x6a\x1b\x31\x08\x79\xb7\xb3\xa5\xbf\xc9\xb5\x5c\x98\x97\xfd\x69\x2c\xf4\xbd\xb3\xcb\xf7\xc9\xdb\x39\x2f\x9f\x2f\xd1\x2d\x8d\x69\x5d\x71\x9f\x4a\x13\xfb\x2a\xce\xd8\xe0\x2d\xb3\x3c\x49\xe1\x16\x5a\x3d\xe6\x53\x92\x46\xd3\x9d\x13\x38\x56\x20\xd0\x88\x84\x22\x6d\xeb\x11\xdf\x67\x8f\xbe\x99\xd8\x82\x8c\x6d\x98\xbb\x77\xab\x98\x79\x76\x18\x5e\x4e\x27\xc4\xa4\x06\x3d\x95\xef\xba\xe0\x4a\xbe\xa0\xc3\xb4\x8b\x30\x9c\xa1\x42\x0b\x59\xec\xb9\x47\x2e\xca\x46\x5a\x24\xfd\x26\x3f\xc7\x67\x66\xc1\xbb\x25\x2e\x3e\x69\xf7\x67\xb3\xcb\xe6\x82\x57\xed\x9e\x76\x66\x2c\x30\xfe\xff\xb1\xbf\xac\x48\xa6\xf8\xdf\xdc\xfc\x13\x00\x00\xff\xff\xcc\x93\x9c\x35\x8f\x06\x00\x00")

func test_certsClientTestuserKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserKey,
		"test_certs/client.testuser.key",
	)
}

func test_certsClientTestuserKey() (*asset, error) {
	bytes, err := test_certsClientTestuserKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0x46, 0xe9, 0xba, 0x7c, 0xd2, 0x3e, 0x9f, 0x6e, 0x2c, 0x7, 0x9, 0x3f, 0xf0, 0x83, 0x6, 0x16, 0xe2, 0x50, 0x8a, 0x99, 0x3d, 0xb7, 0xc5, 0x38, 0xea, 0x2b, 0x6a, 0x7e, 0xd7, 0x8a, 0x92}}
	return a, nil
}

var _test_certsClientTestuser2Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\x4d\xcf\xb2\x38\x18\x85\xf7\xfc\x8a\xd9\x9b\x89\x80\xa2\xb0\x98\x45\x4b\x5b\x28\xf2\x61\xa5\xa0\xb8\x03\x3f\xaa\x88\x22\x28\x14\xf8\xf5\x93\xe7\x7d\x93\x99\x64\xe6\x5e\x5e\x27\x39\xb9\x93\x93\x5c\x7f\xfe\x1c\xc4\x0e\x0d\xff\xb0\xf1\x8e\x53\x42\x6d\xc0\xf1\x2f\xaa\x04\x94\x22\x8f\xdb\x36\x10\xba\x00\x92\x42\x20\x28\xc3\x9e\xb5\x8c\xf4\x7d\x14\x99\x67\x8f\x8c\x9f\x62\x91\xaf\x84\xe0\x20\x84\xe2\xd1\xdc\x1e\x77\xc7\x92\x2a\x04\xec\x43\x00\x02\xad\x12\xec\xa8\xc4\x20\x43\x29\x63\x1b\x2c\x2b\x54\xe8\x61\x7b\x7a\x5a\xb7\x4c\x17\x03\xe1\x80\x43\x11\xa6\x10\x04\x1c\xe1\xb0\xcf\xf4\xef\x58\xe8\xa4\xcc\x6d\x88\x18\x07\x17\x22\xd5\x51\x09\x38\x96\x01\x4a\xc6\x80\x27\x46\x80\x60\xfe\x03\xc3\x12\xcb\x80\x83\x7f\x58\x60\x8b\x01\x97\x80\xfd\x2e\xab\xb9\x9d\xfc\x5b\xa6\xe4\x08\xc7\x01\x04\x0e\xd0\x12\x0c\x86\xc0\x3b\x3b\xe9\x74\x76\xd3\xe9\x78\xa0\x63\x40\x29\xa4\xe5\x7f\x5f\xc7\x04\x80\xc8\x06\xcc\x04\x3f\xb9\x62\x8b\x8d\x0d\x18\x06\x8d\x5c\x21\x75\x4e\xb4\xea\xdb\x6a\x8b\x33\x55\xbb\x64\x8a\x6e\xc5\xb9\xbc\x76\xf7\xf0\x30\xcb\xf4\x05\xf7\x2e\x3e\x71\xfc\x82\x2e\x71\x31\x0b\xd6\xee\xf3\x79\x6e\x43\xba\x57\x4e\xec\x43\x37\x5d\x34\xbd\xee\x97\xac\x5a\x6f\xb5\xa4\x1a\x24\x1a\xe7\x20\x6e\x97\xbe\xa6\x4d\x6a\x99\x86\x2f\xb1\x76\x87\x31\x55\x53\x71\xe8\x0c\xd5\x74\x3c\xbf\x71\xdf\xe1\x0a\xdd\xb3\xf5\x8c\x2a\xe5\x6e\xdc\x71\x83\xea\x4e\xdf\x1f\x8e\xde\xfd\x35\x1c\x9d\x80\x59\x38\x40\xe8\xba\x6a\xa6\xdc\x1f\xf3\xfd\x57\x65\x91\xe7\xea\xe8\x55\x4f\x73\xc4\x3c\xaf\x29\x60\x13\xd5\xab\xec\x5d\x07\x11\x52\xa2\xc7\x35\xd7\x9b\xc3\xb9\xa8\x8d\xdd\x75\x36\xfb\x7a\x97\x6f\x00\xc0\x28\xef\x67\x83\x57\xdf\x06\x92\x20\xe6\xf0\xaa\x7b\xcb\x12\x70\xa4\x46\x6a\x6c\x68\xa2\x8b\x75\x9d\x72\x8f\xf0\xa6\x38\x29\xcd\xb0\xdb\x19\xdf\xf5\xfc\xbe\x2f\xb0\xb0\x0f\xd7\x53\xa1\x86\xb5\x75\x3a\x7a\xd2\x98\x93\x36\x32\xe5\x60\x4c\x2c\x30\xa2\x58\xb7\x68\xa9\x1b\xc5\x79\x31\xce\xe7\xed\x58\xbd\x88\xf5\x7a\xcf\xc6\x83\x72\x33\xe9\xd9\xb8\x74\xe2\xac\xdd\x32\x55\xf6\xb0\x50\x37\xce\x29\xf1\x35\x6f\xa5\x37\x58\x52\x04\x18\x80\xb5\x2a\xe4\xae\x04\xd1\xcf\x8c\x2e\x33\x21\xb8\x9a\x18\x82\xc0\x86\x39\x90\x0a\x96\x19\x4a\x77\x6a\x05\x81\x94\xb6\xc8\xe8\x46\x66\x10\xb2\xc4\x05\x92\x4a\xf7\x77\x56\x42\x28\x24\xa9\x41\x82\x81\x85\x67\xa4\x60\x4f\x63\xbd\xdc\x4f\xe3\xe4\x93\xfd\x47\xd9\xc6\xa8\xfc\x64\x99\x44\x2c\xf3\x36\xf5\x91\xde\xfa\x53\x08\x18\xf6\x21\x03\x48\x08\x0c\x01\xaa\x56\xdd\x17\x83\xcc\xbb\x23\xf5\xcd\xcd\x68\x5b\xf2\xf9\x0d\x3d\xd4\xe2\xd6\xeb\x70\xf8\x28\x46\xb0\xd6\x7c\xbd\xcc\x3f\xeb\x34\x9f\x67\x8d\x50\x9d\xa6\x09\x8e\xfd\xd5\x7a\x39\x63\x9e\xe9\xf7\x67\x37\xa2\xa6\x9b\x19\x90\x9c\xd4\x1e\xae\xab\x15\x6a\xe4\x3b\xb3\xd2\xe3\x65\xec\x65\x94\x32\xe5\xe2\xbc\xcc\xec\x50\x9f\xda\x84\x60\xf2\x2e\x6b\x4f\x77\x8d\xea\xd5\xd9\xda\xb0\x61\x5e\xff\x71\x65\x2f\xa4\x1f\x72\x7b\x1f\x5a\x89\x91\xc3\xfd\x62\x95\x92\xe3\xeb\x39\x4b\xd2\xc3\x8b\x1f\xc1\x42\xe1\x49\x1e\xe7\xb9\x6e\x5e\x78\x1a\x2f\xae\x75\xaf\xf1\xe9\xea\x56\x6d\xb5\xef\x16\xad\xd3\xa8\xcf\x05\xc9\x4f\x1b\xc7\x7c\xbe\xcf\xbb\x77\x8c\x07\xe3\x4e\xde\xc1\xaa\x79\x4c\xb5\xe9\xdb\x4b\x2a\xdf\xca\xa1\xcb\x2d\xa1\x6b\xa7\xc7\x25\x82\xfb\xdb\x9d\x6c\xe3\x6d\x17\xd9\xa6\xa5\x7b\x27\x77\xa9\xce\xcd\x47\xcf\xf8\xa1\x7d\x32\x1c\x1a\x97\x76\xa2\x8f\xe6\xeb\xdc\xc7\xf5\x40\xfa\x22\x4b\xe3\x99\xe3\x2a\x79\xff\xfc\x1a\xed\x32\x74\x97\xee\xf4\xb4\xbe\x61\xf1\x0e\x3f\xbb\x2d\xf7\xc3\x43\xb5\x35\x27\x30\xe6\xae\xd0\xfd\x32\xce\x44\xb6\x1b\xb4\x81\xe1\xc8\x74\x26\xcf\xa5\x7f\x29\xbf\x74\x82\x43\xf4\x7f\xc5\xfc\x1d\x00\x00\xff\xff\xce\x53\xeb\x76\x7f\x04\x00\x00")

func test_certsClientTestuser2CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Crt,
		"test_certs/client.testuser2.crt",
	)
}

func test_certsClientTestuser2Crt() (*asset, error) {
	bytes, err := test_certsClientTestuser2CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xab, 0xc1, 0xaf, 0x29, 0x10, 0x38, 0x24, 0x40, 0x11, 0x2c, 0xb9, 0x86, 0x4, 0x3, 0x12, 0x92, 0xc0, 0xa0, 0xe7, 0xf2, 0x41, 0xa3, 0x75, 0xd2, 0x85, 0x41, 0x66, 0xab, 0xa2, 0x15, 0x96, 0x33}}
	return a, nil
}

var _test_certsClientTestuser2Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xab\x58\x02\x85\xe1\x9c\x55\xbc\x5c\x35\x85\x47\x10\x4c\x70\x71\x12\x46\x78\x9f\xe1\x3d\xe8\x22\xfc\xea\xbb\xfa\xc5\x7d\xd2\x93\xfc\xd9\xf7\xbf\x7f\xc7\x4b\x2f\xc5\xf8\xe3\xb8\xe0\x8f\xe5\x28\x01\xf0\xa4\x3f\x9a\x14\xff\x7d\x90\x8f\xa2\x48\x73\xad\xf0\x00\x68\x02\xb0\x25\x00\x0f\x46\xc4\x50\x19\x1f\xd6\x05\x27\x0b\x05\xdb\xfc\xdb\x6c\xb2\xa2\xab\xb6\xd6\x88\x1e\x31\x41\x7a\x6a\xa9\xcb\x2f\x3d\x53\x28\x29\x7b\x7c\x9e\xc8\x7b\x1c\x8b\xc5\x50\xc2\xdc\xfe\x29\xda\x66\xde\x53\x5b\xc6\xc3\xd3\xc2\xfd\xe1\x3c\xc4\x0b\x05\xee\x42\xe9\x38\x7e\x63\x5d\x60\x4c\xf5\xf3\x7d\x5e\x01\x16\xd4\xd1\x46\x63\xec\x4b\xd5\xe1\xfb\x8b\x18\x8c\xd8\xc6\xcf\x87\xd2\x39\x97\xe3\xd1\x0a\xf1\xda\xf7\x28\x51\xdb\xe9\x4c\x5e\x1f\x9b\x93\x3e\xa2\x58\x31\xf0\x4e\xf5\x2b\x0d\x57\xcc\x36\xd5\x37\x21\x4e\xf3\x8d\x8a\xb6\xaa\xc2\x8c\x87\x26\x32\x33\xf1\x77\xfe\x98\xa2\xd9\x57\x29\x01\xa3\x22\x9b\x69\xa7\x7a\x3c\x56\xb5\x5c\x3f\x00\x5c\x47\x5b\xd0\xde\xb0\x42\x5e\xfe\xb8\x1e\x5f\x11\x2a\xd5\x01\x4f\xc4\x4c\xcc\xa5\xf1\x7a\x73\x09\x02\x51\x3c\x55\xf6\x60\x96\xc3\xd3\x71\xe8\xf5\x89\xb6\x61\x26\xd5\x42\x54\xe5\x19\x66\xcc\x5c\x9e\xa8\x07\x8d\xca\x8b\xc9\x1e\x27\x7d\xdb\x1f\xda\x74\x09\x4e\xe9\x08\x3a\x2b\xc8\x0b\x45\x97\x6b\x40\x26\x99\x9b\xbe\x8f\x2b\x6a\x58\xa5\xa0\xcb\xad\x2e\xf0\x26\xc6\x8e\x9d\xcf\x30\xed\x95\xfb\x3a\xae\x32\x04\x94\x0e\x45\x04\x36\xe0\xc1\xac\xf0\x40\x72\x8d\x9d\x09\x58\x13\x62\xd3\x96\x6e\x09\x02\xc1\xb8\x7b\x94\x3c\x94\xeb\xf8\xf9\xb2\xf6\xc7\x19\xd3\x81\xac\x66\x0f\x88\xa9\x6f\xf3\xe2\x33\x20\xa4\x8c\x32\x62\x52\x93\x06\x1d\x52\xf8\xe7\x1e\xa0\xc9\x96\xe5\x55\x7c\x27\x2a\x7f\x5c\x2e\xa2\x27\xe1\xeb\xfe\xc5\xde\xa3\xfc\x72\x27\x3d\x5a\xa0\x15\x18\x6f\xea\x3b\xa3\xe8\x29\xac\x81\xa8\xb3\xcb\x72\xca\x87\x1d\x21\xde\x5c\xb9\xff\x1c\xdc\xe0\xf8\xd1\xb1\x09\xb2\xa0\xaa\x0f\x2b\x8c\x88\xd4\x64\x68\x23\x87\xe2\x96\xd7\xdf\xfd\x3c\xa1\x81\xfb\x1c\x8f\x36\x18\x78\x1b\x10\x83\x7b\x66\xf7\xac\xd6\x24\xe4\xb7\x07\xc5\xc8\x98\x56\x9b\x2e\x7a\xc7\x3e\x54\x85\xbf\x51\xe5\x07\x2b\x88\xa4\xbd\x23\x16\xcc\x89\xce\xd3\x1e\x0b\x5d\x33\xbe\x76\x14\x6e\xa2\x0a\x66\x33\xf2\x17\xc8\xe9\xdc\xcc\xbc\xfa\xa6\x3f\xbe\xaf\x2f\x49\x09\x36\x91\xf0\xef\xe4\x28\x2e\x63\xf8\xd9\xf0\x5e\x6a\x13\x29\xef\xf6\x4a\x5d\x51\x11\x5c\xab\x5a\x58\x86\x2b\xb4\xbc\xde\x15\xe9\x7c\x30\x6d\x44\xed\x99\x1c\x37\x6c\xf0\xee\xad\xd0\x72\x6b\x7d\x7d\x06\x3d\xbb\x89\xfc\xc9\x4d\x38\x2e\x12\x98\x44\x0d\x04\x62\xba\x2e\xdd\x80\x5e\xa8\x63\x09\x5c\x5f\x28\xb6\xbf\x0c\x8e\xf2\x5b\x49\xa3\x75\xcd\xdf\x04\xad\xef\xcd\x5b\xea\xf2\x13\xcb\xc7\xce\xbb\xa8\x35\x7e\x2c\x4b\xb4\xa2\x3b\xbb\xe3\x8c\xda\x37\x1c\xa2\x17\xfb\x65\x87\x4a\x4c\x59\xcb\x34\xa5\xe0\x3a\x8b\x10\xdf\xb9\xab\xa7\x8d\xea\xf9\xe4\x08\xd1\x2c\xf8\x66\x88\x21\xfd\x84\x9d\xe4\x3c\xd2\x20\x28\x62\x92\x61\x35\xd8\xb0\xc0\xb4\x0c\xb5\x41\xb2\xd0\x77\x58\x66\x9c\x97\x4a\x37\xdc\xf2\xdd\x94\xb9\x89\x51\xf5\x31\x89\x8d\x96\x2e\x5f\x9e\x13\xc2\x80\x6d\x40\xfa\x40\x9f\x9f\xe2\x35\xd5\xb4\xde\x6e\x75\xae\xb0\x7f\x8b\x09\xc1\xb4\x90\xe5\x54\x9b\xf2\x22\xfd\xf6\xfd\x61\x9f\xbb\xf1\x13\x79\x99\x6f\xd3\x75\xf4\xb1\x81\x4b\x38\x9d\x18\xdc\x6e\xce\x4f\xe0\x98\x47\xdc\xcb\x47\x24\xe0\x90\xf0\xf0\xd0\x1a\x39\xb2\xbd\xc4\xd4\xbe\x90\x66\x91\x2f\xbf\xc4\x6c\xef\xee\x9b\xed\x61\xb3\x97\xe1\x34\xa3\x62\xb0\x93\xc7\xe5\xc1\xf0\x19\x7f\x11\x7b\x0d\xfd\x15\x96\x63\x0a\xea\xee\x1e\x3f\x51\x1b\x8d\x75\xa4\x2a\xcc\x99\xa1\x53\x16\x20\xf8\x8d\x1a\x9c\x07\x19\xf3\x78\x6c\x89\xa4\x55\x7b\x32\x1b\xd4\xfc\x9b\xf6\xc3\x9f\x45\x47\x0b\x6d\x85\xc9\xa0\x88\x09\x75\x0c\x38\xc5\x27\x33\x97\x0e\x4e\x11\x1c\x9a\xc1\xbc\xa2\x35\x2a\x0e\xa4\xfe\xde\xa8\x0c\x9c\x97\xda\x3e\x4d\x1d\xd3\xc6\xcb\xf3\xa6\x20\xa4\xdc\xd3\x76\x72\x59\xcf\xeb\xc4\xd5\xb8\x0f\x3d\x6b\xf2\xe3\x1b\x0e\x47\xc0\x9c\xcf\x74\x00\x37\x90\x07\x99\xe0\x6f\x31\x71\x10\x2e\xd8\x73\xdb\x09\xa4\x0d\xfb\xad\xe4\x37\xeb\x93\xc0\x31\x15\xb9\xb1\xae\xc0\x17\x52\x0b\x8d\x6b\x70\xd6\x03\x9c\xd9\xba\x3c\x74\xfe\x03\xf9\xdc\x18\x72\xf6\x18\xb9\x2f\x66\xd4\xab\xbc\x0f\xc8\xfe\x28\xde\xdc\xd2\x97\x79\xca\x1c\xfe\xe3\xcd\x12\x83\x48\x25\xb6\xc6\xd7\x6f\x0e\x25\x7e\xcc\x74\xba\xf2\x8c\x31\x0b\x93\xb1\x06\xde\x39\x06\xef\xc2\x7d\x1f\xf8\x7e\xe8\xac\x76\x94\x9b\x12\x45\xa2\x1a\xb4\x4e\x5f\x59\x36\xad\x37\xfa\xa5\xb2\xe3\x78\xb9\x78\xd7\x72\x78\xbb\x70\x74\xc8\x47\x89\x71\x91\x16\xbd\xb1\x01\xa0\x5e\x75\xe8\x4d\x00\x5d\x49\xce\x49\xb9\x3d\x4b\xcb\x65\x16\x4a\xc4\x13\xfd\xc1\xff\xb0\xcf\x5e\x58\xc5\x2b\xca\xb8\x5c\x16\xdf\xb5\x65\x6e\x8e\x9f\x08\xd7\x13\x0a\x8e\xd5\xc6\xb5\xf0\x43\x81\x71\xe7\xe0\x55\xf8\x99\xef\xc0\xb0\xb3\x0e\xec\x67\x8a\x09\x91\xcb\xc8\x66\x7b\x27\x98\x5f\xc0\x95\x28\x7e\xe9\x0e\xa3\x5c\x17\x32\x19\x1a\xe3\x34\x8c\x17\x06\x8f\x24\x23\x7d\x95\xbf\x13\xdc\x2a\xaf\xcb\xc7\x4a\x99\x2c\xcf\xaa\x76\xcc\xf3\x17\x79\x95\x6e\x82\x01\xe9\x9c\x81\x99\xc5\x33\xa6\x7c\x8b\x15\x8c\x78\x1b\x33\x15\x73\xe9\x67\x25\x6e\x27\x0a\x5c\x7d\x73\xb8\xb3\xdf\x2c\x3b\x24\x84\x40\x8b\xb5\x7b\xb7\xe9\xa4\xb2\x8d\xc9\xb2\xcf\xd1\x07\x17\x77\x22\x57\x89\x02\x5e\x69\x6c\x7f\xfa\x52\x58\x3c\x57\x24\xee\xdc\xbd\xe3\x0f\x21\x7f\x5a\x4b\x4a\x1e\x2e\xa9\xf9\x21\x79\x6a\x35\x3b\xf5\x6f\xd2\xa9\x16\x57\xf9\x3f\xf2\x97\x14\xc9\x10\xff\x9b\x9a\x7f\x02\x00\x00\xff\xff\xca\x5b\x75\xb8\x8b\x06\x00\x00")

func test_certsClientTestuser2KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Key,
		"test_certs/client.testuser2.key",
	)
}

func test_certsClientTestuser2Key() (*asset, error) {
	bytes, err := test_certsClientTestuser2KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcb, 0xeb, 0xa8, 0x96, 0xd0, 0x53, 0xcd, 0x5d, 0xd2, 0x86, 0x44, 0x93, 0x0, 0x6, 0x8f, 0x7d, 0x65, 0x63, 0xb9, 0x49, 0xd5, 0xe3, 0x5d, 0x6a, 0x16, 0x99, 0xea, 0xf6, 0x9a, 0xee, 0x27, 0xa9}}
	return a, nil
}

var _test_certsNodeCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xb9\xd2\xb3\x3a\x12\x86\x73\xae\x62\xf2\xaf\xa6\x30\xc6\x0b\x04\x13\x48\x48\x06\x61\x0b\x10\xab\x21\x63\x31\x9b\x0d\x18\x83\x11\xf6\xd5\x4f\xfd\x5f\x70\x92\xf3\xbf\xe1\xdb\x5d\x4f\xd2\x5d\xcf\x7f\xff\x04\x62\x9d\x58\xff\xd1\xb0\xeb\x93\x13\xd1\x80\x8f\x7f\x5b\x81\x12\x82\x12\xa4\x69\xe0\xfe\xa9\x00\x27\x10\x54\xc4\x05\x76\xec\x1f\xc2\xd1\x11\xfd\xde\xd1\xa5\x73\xf9\x81\x7d\xcd\x0a\x85\x23\x16\x9b\xe7\x21\x21\xf5\x92\x5b\x80\xe1\x0b\x64\x80\x0b\xe7\x2f\xf6\x28\x04\x3a\x90\x02\xac\xd5\xd4\x64\x5b\xb5\x4d\x65\x73\x89\x23\x6b\xa0\x6e\xc0\x31\x8f\x51\xc8\x18\xc2\x7c\x45\xd9\xd6\x7a\xe5\x9d\x5a\xc7\xdb\xaa\x62\x1b\xcc\x8d\x3a\xb7\x04\xda\xe2\x95\x22\x20\xd1\x16\x4b\x36\x0a\xf6\x51\x9d\x5b\xb4\x8d\x57\x8a\x30\xff\xa7\x6b\x41\x4b\x5d\xc2\x31\xf8\x85\x9d\x31\x7f\xfc\x03\x13\xe2\x6d\xb5\x22\x1f\x5c\x60\x65\x85\x10\x50\x1f\xea\xfb\x25\xd1\x03\x5e\x55\xb8\xa1\x60\xa3\x6b\xde\xa8\x7b\x24\x93\x11\xc3\x10\xb0\x00\x80\x1d\x81\x88\x83\x3f\xf3\x33\x18\x08\x14\x00\x43\x64\xdf\xf1\x93\x97\x28\xc7\x58\x39\x3a\xa9\x1c\x7b\x93\x71\x43\x92\xaf\x8f\xf3\x17\x7c\x86\xd3\xab\xb8\x45\x07\x17\xcd\x5f\xb4\x0f\xea\x56\xbb\xf5\xbd\x4d\xa5\xdb\xb3\xb3\xfa\x48\xfc\x32\xc1\xde\x35\xeb\xf5\xa7\x63\x46\xa6\x9e\x82\xee\x31\x3c\x75\x7f\x31\xc7\x3c\x59\xc7\x8f\xef\xbe\x79\xf8\x04\xf0\x5d\x73\xb1\x7a\xc7\x5d\x13\xb7\x21\xe5\xe5\xd7\x20\xf3\xe1\x2a\x5f\x76\xe2\xb9\x38\x98\xc2\x83\x68\xde\x20\x7f\xd9\x59\x57\x41\x68\x74\xc5\xac\x28\x74\xf7\xda\x85\x5d\x61\xc6\x6f\xbb\xfc\xe9\x9f\x03\x58\xbd\x7b\x91\x3f\x46\xd1\x38\x9e\xe7\x89\x4a\x6f\x8c\x1e\x7c\xa1\x9b\xbc\x7d\xb9\xa9\x70\x56\xf6\x4d\x7c\xa2\x99\x14\x35\x71\xf8\x0c\xe6\x4d\xa2\x83\x87\xb6\x21\x9e\xd6\xaa\x2e\x49\x1e\xe1\x8d\x1b\xa5\xd6\x5d\xa5\xe6\xdd\xc4\xa2\x82\x74\xab\xb7\xd3\xda\x4d\x91\xd1\xda\x03\xf9\x7a\x42\xb9\x25\x76\xa7\x5c\x2f\xb7\x62\x9e\x1f\xdb\x79\x31\x7c\x04\x90\x01\xc6\x18\xd6\x5d\x79\xdd\x39\xd7\xd7\x61\x35\x72\x3e\x7b\x23\x93\x1a\x2d\x39\x5a\xfd\xbd\x60\x40\xde\x6e\xb4\xe0\xae\xad\xc4\x17\x6c\x15\xab\x57\xe0\x1a\xc5\x13\x35\xcd\x30\x25\xe3\x9b\xd0\x8c\x47\x2a\xa8\x28\x04\x40\x6f\xab\x78\xe0\x55\x9c\x73\x54\xc5\x28\x74\x37\x0e\x60\x86\x08\x01\x43\xa0\x8a\x2a\x0a\x37\xba\x00\xa4\xa0\x30\x19\x8b\x28\x64\xba\xa6\x4d\x3a\x60\xc1\x09\x72\x0a\x61\x55\xbd\x60\x85\x4f\x90\xe5\x08\xb4\xa0\xfc\x73\x66\xc3\xa3\x58\x47\x20\xaa\x20\x63\x68\xe3\xef\xc2\x59\xcb\x84\x7e\xa9\x33\xe7\x42\xa7\x30\xe5\x2a\xb1\xed\xb5\x6e\x81\xf4\xbb\xec\x62\x7c\x69\xc1\x54\x55\x8f\x29\xdb\x5a\x75\xa6\xd7\x4b\x2e\x7b\x1a\xfc\x0c\xef\x4c\x57\xdb\x38\xfa\x18\xd0\x50\x80\x00\x80\x6e\x60\xf0\xb7\xe0\xbf\xfd\x3e\xaa\x2a\x0c\xc1\xc5\x21\x51\x27\xdb\xc7\x7b\xe3\x0a\x56\x7d\xc7\x53\xc7\x6e\x49\x11\x2a\xab\xfc\x78\x75\x6b\x4d\xa3\xfe\x7b\xdd\x59\xa2\xba\xd6\x4e\x7e\xf8\x64\xfa\x6d\x5a\xc6\x70\x11\xf3\x40\x8a\x72\x18\x02\xae\x55\xe5\xcd\x37\xcf\x29\xd4\x7b\x51\x30\xa5\xc9\xc8\x66\x4d\x39\xef\xdd\x12\xdd\x5c\xe4\xd7\xe5\x1b\xcb\x27\x39\xd8\xc9\x49\xf9\xf9\xa2\xbd\x1b\x1c\x3e\xad\xe3\x92\x23\xa9\xb7\x05\x0e\x54\xb1\x0f\x4c\x58\xee\x76\x33\x7f\x17\x15\x65\x42\xe3\x74\x53\x3f\x05\x8d\x3e\x14\xef\x41\x01\xcb\x6a\x40\x66\xfa\x20\x62\x77\x32\x6d\xc4\x2f\x91\x6e\x62\xfa\xa3\x8c\xf7\xfe\x32\xc4\xc9\xb6\x4b\xd2\x68\x84\x45\x76\x9c\x86\xbe\x4a\xa2\x88\xa4\xc2\xf1\x60\x8a\x5f\xab\x73\xf3\xc9\x7b\x4d\xf8\x9c\x97\xef\x83\x1d\x77\xb1\xe1\x64\x3a\x96\xf9\xe9\xae\xfc\xc8\x92\x3b\x4b\x88\xc2\x27\xbe\x8c\xcf\x1c\xb5\x8b\xde\x88\x76\x3b\x94\x87\x74\x90\xc8\x2c\x6c\xb1\xdb\x3c\x8f\xfd\xe2\x9c\x3e\x7a\xea\x6c\xcd\x1c\x30\xb5\xfe\x51\x2c\xb0\x5b\x2d\x48\xee\xc5\x24\x8b\xb9\xb4\xdf\x28\x37\xf5\xf1\x85\x8a\xb7\x86\xe9\xbc\x2e\xce\x1b\x5c\xda\xe9\x8b\x44\x53\x14\xd6\xc8\x4b\xc7\xf6\x42\xea\x3e\xfe\x9f\xf0\x2b\x29\x6c\xa1\x7f\x8b\xeb\xff\x01\x00\x00\xff\xff\x13\x3f\x6f\x29\xd5\x04\x00\x00")

func test_certsNodeCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeCrt,
		"test_certs/node.crt",
	)
}

func test_certsNodeCrt() (*asset, error) {
	bytes, err := test_certsNodeCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.crt", size: 1237, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7d, 0x93, 0x9c, 0x67, 0x27, 0xa9, 0xad, 0x74, 0x18, 0xfb, 0xba, 0xea, 0xb8, 0x56, 0xfb, 0x9d, 0x9b, 0x7f, 0x43, 0xa2, 0x17, 0xca, 0x4a, 0xfc, 0xa8, 0x1c, 0x93, 0x34, 0x93, 0x6d, 0x29, 0x7d}}
	return a, nil
}

var _test_certsNodeKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\x37\x12\xab\x5a\x02\x05\x73\x56\xf1\x72\x6a\x4a\x80\x00\x41\x30\xc1\xc5\x7b\x84\x37\x19\x08\xef\xbd\x5b\xfd\xd4\x7f\x93\xfe\x93\x9e\xa4\xab\x93\xfe\xcf\x3f\x63\x78\x51\x36\xfe\xd8\x0e\xf8\xf3\xb5\x65\x1f\xb8\xfc\x1f\x95\x8f\xfe\x3e\x90\x2e\xcb\xfc\x64\xc9\x0c\x00\x2a\x0b\x2c\x1e\xdc\x66\xbc\x32\x5e\x5f\x98\xd8\xd7\x7c\xb0\x0d\xe3\x17\xe6\x5d\xd2\xde\x35\x2f\xbf\x53\x9f\x99\xe4\x1d\x76\x7b\x6b\x7d\x7e\x27\xec\xcb\xd1\x39\x4c\x10\xf1\x34\x46\x38\xc7\x4d\x8c\x1e\x14\xc2\xed\xf2\xea\xbf\xa6\x96\xc1\x5e\xb6\xaf\x4c\x89\x6a\xb7\x9f\x3b\x19\xc4\x5f\xb2\xb6\x48\xba\x0a\x89\x05\xd2\xf1\xf7\xc5\xb5\x5e\x19\x7b\x19\x75\x75\x89\x82\xae\x5b\xcb\x3b\xfa\x86\xbf\xf7\x90\xd7\xb1\x03\xda\xd9\xa0\x10\xb6\x3a\x2c\xc1\x26\x86\xb4\xf8\x72\xa6\x0a\x0b\xf1\xe0\x04\x5a\x33\xbc\x26\x32\x01\xba\x37\x49\xa1\x92\x1c\x17\x7c\x2f\x29\x67\x40\x69\x05\x88\x9f\xf6\x18\x92\x4c\x22\x41\x7d\x98\x51\xcf\xb8\x22\xed\x8f\xbd\x90\xf8\x5a\x26\xda\xa5\x62\x6d\x2c\x5f\x8e\x2f\xcf\x11\x63\x3f\x5c\x99\xf7\x39\x75\x74\xb4\x8c\xfd\xf7\x05\xae\x26\x86\x9e\x7e\xf4\x82\xf2\xc2\x9f\x99\xd5\x91\x81\xae\xb9\xe9\x10\xee\xf7\x90\xa6\x71\xb6\xa4\x17\x72\x9e\xe0\x3a\xd5\x1e\x44\xf1\x80\xc2\x1c\x4a\xc2\xab\xfd\xd6\x35\x6f\x6e\x8d\xa8\xec\xf3\x27\x26\x20\xc9\x03\x06\xbd\x81\x4e\x01\xab\xc3\x3f\x87\xfd\xf5\x4f\xde\x7e\x27\x16\x3e\xce\x9a\x98\x2c\x35\x27\x52\xc2\x61\xc9\x1c\xb0\x00\x03\x46\x99\x01\x16\x8b\x6e\xf6\x57\xbc\xe4\x73\x93\x50\xc4\x81\x88\xce\x98\x24\xb0\xd2\x76\xb3\x56\x70\x94\xdc\x25\x49\x2d\xd8\xe8\x3b\x68\x3f\xbd\x04\x39\x29\xd3\x70\x35\x79\x32\x36\xf8\xb8\x2f\x98\xbd\x1a\xbe\x8f\x38\x0c\xa6\x13\xe2\xd6\xeb\x23\x20\x6b\x08\x5d\x43\x8b\x54\xa1\xdf\x6b\x47\x79\xba\x7e\xcf\x39\xde\x47\x9d\xa3\x44\xfc\x50\x3d\x01\x52\x4d\xdb\x9a\xee\xbd\xc2\x11\xfe\xb6\x4c\x91\xf9\xdd\x3b\x8b\x53\x07\x3f\x16\x68\xd3\x3d\x57\x35\xc4\x13\x14\x6a\x1a\xad\xaa\xd5\xef\xf6\x40\x83\x3e\x73\x1e\xa7\xa8\xa1\x59\xc9\x8b\xc1\xb7\xb6\xb6\x3f\x65\x48\xb4\x5e\x84\x86\x2b\x4e\xc8\x55\x47\x3d\x22\xc0\x5e\x7a\x7b\x4b\x7c\x6a\x62\xc9\x3b\x6b\x05\x68\x1a\x45\xbd\x3a\x0b\xfa\xf2\x46\xb0\xc2\x52\x8c\x50\xd6\xea\x6a\x3c\x10\x12\x92\xcc\xa7\x1b\x33\x47\x7b\xa8\x03\x20\x77\x2d\x37\x2c\x62\x6d\xc7\x6c\xdb\x82\x52\xc0\x0e\xd2\x49\x8a\xcc\xf7\xa0\xae\x84\x4b\xa5\xda\x6e\x25\x3c\xe5\xaa\x20\x44\xb7\xf4\xef\x95\x44\x72\xa6\xce\x88\xbd\x21\xae\x96\x04\xd9\x11\xbe\x91\x02\x0d\xb9\xaa\xff\x2e\x91\xf9\x98\x54\xca\xfa\xa3\xdf\xd9\x7e\xf0\x74\x10\x92\x36\x9f\x02\x91\x19\x30\x8a\x0c\xd0\xdf\xab\x17\x9b\x71\x87\x34\x52\xa6\x5b\x85\xb7\x09\x68\x1a\xbb\x78\x90\xae\xe9\x50\xc3\xac\xfd\x3d\x36\x89\xc9\xd0\x45\xab\xa6\x7d\x51\xeb\x70\x52\x4e\xe8\x75\xbc\x6a\x2c\x7e\x19\x44\x8f\xc6\xe4\xe7\xd0\x06\x18\x05\x14\xb0\xa8\x2e\xa2\x06\x86\x3a\x31\x54\x20\x29\x66\x99\xc6\x93\xed\xe3\xcd\x6f\x94\xb2\x46\x02\x78\xe1\x0c\x92\x2b\x46\x9c\x26\x53\x08\xf1\x62\x34\x64\xa5\x6c\x81\x69\xae\xff\xa6\x68\x3b\x0a\x39\xab\x3d\x31\x40\x9b\xcf\x36\xea\xb8\xb2\xd8\x77\x2f\x9a\x1a\xc7\x1e\x87\xe7\x33\x4d\x14\x63\x87\x9d\x38\xd9\x5f\xe2\xef\xc0\x40\xb1\x1f\x72\xcd\x7e\xa4\xbd\x79\xb4\xed\x21\xb8\x38\xdc\x0e\xf1\x10\xf6\xc8\x87\x7f\xe3\x66\xa2\x19\x2f\xbe\xb8\xa3\xaa\x0b\x02\x8e\x54\x5a\x29\xd4\x25\xe2\x96\x95\x0d\x28\xb0\x0d\x6f\x6e\x7c\x43\x61\x96\x5f\xbe\x05\xc3\xa9\x52\x58\x49\xc4\xc1\x4e\x86\xdc\x02\xe6\x2f\x7d\xdc\xcf\xf4\x05\x22\xd4\xbb\x51\x21\x2b\x56\xbc\x23\xb2\x31\x57\x9f\x63\xf7\xbc\xd5\x23\x70\xc1\xb3\xf7\xab\xe1\x06\x68\xac\xf9\x18\xf8\x7e\x5a\x69\x99\xf8\x7e\x48\xd8\x33\xdc\xad\x37\xeb\x80\x1b\xc2\xe3\x93\xd3\xea\x5d\x8a\x6d\xb4\xee\xd5\x5f\x64\xf5\xc6\x78\xac\x2f\x8a\x44\x81\xa5\x8f\xa2\x2e\xa8\xf3\x83\x1a\x98\x36\x54\x17\x6d\xfb\xd8\xbb\xec\xa9\xae\x56\xb4\xa1\xef\x51\xf3\xd7\x0d\x04\x83\xd5\x8d\xe2\x58\x06\xcc\x97\xaa\x03\xf2\x11\xe6\x98\xf3\x89\x60\x60\x72\x1e\xeb\xc2\x99\x42\xed\x26\x62\xa1\x7e\x89\x7b\x8d\x54\x1e\xed\xe2\x50\x35\x32\xaf\xf8\xbe\x22\x5b\x75\x3e\xef\xe9\x9b\xf3\x55\x33\x3a\xc1\x8a\x71\xa9\x9e\x21\xd8\xf3\x48\x0d\xb6\x74\x42\xa5\x1e\xee\x56\x68\x32\x99\x64\x70\x72\x42\xe8\x8a\x2d\x30\x29\x4f\x67\x5f\x2f\x5c\x20\x88\xaa\x4f\xec\xef\xca\x14\xfe\x6f\xb9\xcd\x8a\x93\x9a\x1a\x17\x38\x8d\x52\x07\x22\x47\x97\xc6\x4a\x73\xc5\x40\xda\x09\xbe\x3f\x7b\x4a\xa5\x90\x00\x1c\x23\x77\x09\x44\xd6\x61\x8d\xc7\x0b\x73\xf3\xa8\xc4\xb7\xb0\x0e\xc1\x9c\xce\xca\x1b\x82\xe2\x55\x25\xcc\x8a\xc6\x7d\xef\x13\x61\x2a\xa2\x95\xba\x8c\x70\xfc\xec\xdc\x4f\xe1\x28\x9a\x35\xe8\x1e\xdf\x42\x51\xf0\x87\x90\xe4\xbf\xe4\x11\xb7\xb9\x08\x1b\x67\xdf\x59\x38\xd8\xfd\xad\x2b\x86\xe8\xfa\xdc\xce\xa5\x5f\xe7\x26\x9d\x45\xa5\xe6\x1e\x78\xd5\x63\xf9\x43\x5c\x1f\x7f\x46\x2e\x7b\xa0\x5c\xb7\xdb\x86\x9d\xff\xb1\x0c\x82\x8f\x91\x94\x4f\x9e\x37\xc9\x6c\xf7\x41\xe2\xfa\x45\x2e\x0d\xda\x36\xac\xa6\xe5\x97\x72\xfe\x42\xb9\x76\x21\xce\xe8\xda\x7d\x43\x07\x49\x8d\xae\x59\x85\x42\xb6\x07\x76\xac\x7c\x16\xfe\xe2\xc4\x89\xb2\xc5\x52\x50\xea\x8a\xbe\x89\x83\x7d\x6b\x3b\x78\x5e\x81\x17\x47\x23\x9f\xe2\xd7\x65\xf0\x32\x1f\xcc\x9f\x2d\xcc\x4c\x52\x92\x77\xf1\xc3\xfb\x18\xe9\x40\xc6\xf7\xd8\x8c\xf2\x80\xd1\xb9\xfe\x79\x5d\xaf\x3f\x67\x48\xde\xd8\x71\xfd\x48\xf8\xea\x69\x1e\x84\xf6\xc5\x45\x25\xab\x46\x61\xfe\xe8\xcd\x87\x76\x14\x1b\x6f\xea\xf5\xbf\xd0\xdf\xac\xf0\x06\xf7\xef\xb9\xf9\x5f\x00\x00\x00\xff\xff\x69\xec\x61\xf7\x8f\x06\x00\x00")

func test_certsNodeKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeKey,
		"test_certs/node.key",
	)
}

func test_certsNodeKey() (*asset, error) {
	bytes, err := test_certsNodeKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0x98, 0x81, 0xd2, 0x3b, 0x14, 0xfd, 0x7d, 0x10, 0xce, 0x18, 0x30, 0x8f, 0x4, 0xe0, 0xca, 0xee, 0xfa, 0x8b, 0xa1, 0xe5, 0x77, 0x35, 0xa2, 0xe3, 0xbb, 0xc8, 0xe6, 0x75, 0x8f, 0x5f, 0xfe}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"test_certs/ca-client-tenant.crt": test_certsCaClientTenantCrt,

	"test_certs/ca-client-tenant.key": test_certsCaClientTenantKey,

	"test_certs/ca.crt": test_certsCaCrt,

	"test_certs/ca.key": test_certsCaKey,

	"test_certs/client-tenant.10.crt": test_certsClientTenant10Crt,

	"test_certs/client-tenant.10.key": test_certsClientTenant10Key,

	"test_certs/client-tenant.11.crt": test_certsClientTenant11Crt,

	"test_certs/client-tenant.11.key": test_certsClientTenant11Key,

	"test_certs/client-tenant.20.crt": test_certsClientTenant20Crt,

	"test_certs/client-tenant.20.key": test_certsClientTenant20Key,

	"test_certs/client.root.crt": test_certsClientRootCrt,

	"test_certs/client.root.key": test_certsClientRootKey,

	"test_certs/client.testuser.crt": test_certsClientTestuserCrt,

	"test_certs/client.testuser.key": test_certsClientTestuserKey,

	"test_certs/client.testuser2.crt": test_certsClientTestuser2Crt,

	"test_certs/client.testuser2.key": test_certsClientTestuser2Key,

	"test_certs/node.crt": test_certsNodeCrt,

	"test_certs/node.key": test_certsNodeKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"test_certs": {nil, map[string]*bintree{
		"ca-client-tenant.crt": {test_certsCaClientTenantCrt, map[string]*bintree{}},
		"ca-client-tenant.key": {test_certsCaClientTenantKey, map[string]*bintree{}},
		"ca.crt":               {test_certsCaCrt, map[string]*bintree{}},
		"ca.key":               {test_certsCaKey, map[string]*bintree{}},
		"client-tenant.10.crt": {test_certsClientTenant10Crt, map[string]*bintree{}},
		"client-tenant.10.key": {test_certsClientTenant10Key, map[string]*bintree{}},
		"client-tenant.11.crt": {test_certsClientTenant11Crt, map[string]*bintree{}},
		"client-tenant.11.key": {test_certsClientTenant11Key, map[string]*bintree{}},
		"client-tenant.20.crt": {test_certsClientTenant20Crt, map[string]*bintree{}},
		"client-tenant.20.key": {test_certsClientTenant20Key, map[string]*bintree{}},
		"client.root.crt":      {test_certsClientRootCrt, map[string]*bintree{}},
		"client.root.key":      {test_certsClientRootKey, map[string]*bintree{}},
		"client.testuser.crt":  {test_certsClientTestuserCrt, map[string]*bintree{}},
		"client.testuser.key":  {test_certsClientTestuserKey, map[string]*bintree{}},
		"client.testuser2.crt": {test_certsClientTestuser2Crt, map[string]*bintree{}},
		"client.testuser2.key": {test_certsClientTestuser2Key, map[string]*bintree{}},
		"node.crt":             {test_certsNodeCrt, map[string]*bintree{}},
		"node.key":             {test_certsNodeKey, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
