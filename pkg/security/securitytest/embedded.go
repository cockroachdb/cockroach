// Code generated by go-bindata. DO NOT EDIT.
// sources:
// pkg/security/securitytest/test_certs/ca-client-tenant.crt (1.151kB)
// pkg/security/securitytest/test_certs/ca-client-tenant.key (1.675kB)
// pkg/security/securitytest/test_certs/ca.crt (1.151kB)
// pkg/security/securitytest/test_certs/ca.key (1.679kB)
// pkg/security/securitytest/test_certs/client-tenant.10.crt (1.257kB)
// pkg/security/securitytest/test_certs/client-tenant.10.key (1.675kB)
// pkg/security/securitytest/test_certs/client-tenant.11.crt (1.257kB)
// pkg/security/securitytest/test_certs/client-tenant.11.key (1.679kB)
// pkg/security/securitytest/test_certs/client-tenant.2.crt (1.257kB)
// pkg/security/securitytest/test_certs/client-tenant.2.key (1.679kB)
// pkg/security/securitytest/test_certs/client-tenant.20.crt (1.257kB)
// pkg/security/securitytest/test_certs/client-tenant.20.key (1.679kB)
// pkg/security/securitytest/test_certs/client.root.crt (1.354kB)
// pkg/security/securitytest/test_certs/client.root.key (1.675kB)
// pkg/security/securitytest/test_certs/client.testuser.crt (1.387kB)
// pkg/security/securitytest/test_certs/client.testuser.key (1.679kB)
// pkg/security/securitytest/test_certs/client.testuser2.crt (1.395kB)
// pkg/security/securitytest/test_certs/client.testuser2.key (1.679kB)
// pkg/security/securitytest/test_certs/node.crt (1.237kB)
// pkg/security/securitytest/test_certs/node.key (1.679kB)
// pkg/security/securitytest/test_certs/tenant-signing.10.crt (465B)
// pkg/security/securitytest/test_certs/tenant-signing.10.key (119B)
// pkg/security/securitytest/test_certs/tenant-signing.11.crt (465B)
// pkg/security/securitytest/test_certs/tenant-signing.11.key (119B)
// pkg/security/securitytest/test_certs/tenant-signing.2.crt (461B)
// pkg/security/securitytest/test_certs/tenant-signing.2.key (119B)
// pkg/security/securitytest/test_certs/tenant-signing.20.crt (465B)
// pkg/security/securitytest/test_certs/tenant-signing.20.key (119B)

package securitytest

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _test_certsCaClientTenantCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\x49\xef\xb2\x48\x10\x87\xef\x7c\x8a\xb9\x9b\x89\xc8\x26\x1c\xe6\xd0\x74\x37\xd8\x22\x4b\x43\x83\xe2\x0d\x15\x1b\x51\xd9\x95\xe5\xd3\x4f\xfe\xef\x9b\xcc\x24\x33\x75\x7c\x92\xfa\xa5\x52\x55\x79\xfe\xfc\x29\x13\xdb\xc4\xfb\x03\xe2\x90\x11\x8b\x40\xc0\xf0\x2f\x2a\xb8\x84\xa0\x3d\x83\x10\x70\x89\x83\x91\x98\x80\x13\x9a\xc9\xc3\x9a\xe3\x67\xb6\xbc\xed\xd3\x84\xee\xea\x77\x2a\x42\x88\x80\x67\xf2\x67\x5b\x3c\x1f\xb6\x31\x8a\x26\xa0\xbd\x05\x10\xe8\x04\x37\x24\x23\x06\x29\x4a\x28\x75\xf0\xf8\x42\x17\xc9\xeb\xae\x6f\xa3\x48\x25\x3e\x59\x0c\x30\x93\x7b\x89\x09\x5c\x86\xb0\xf7\x4d\xa5\x61\xbe\x48\x56\x99\x41\x13\x51\x06\x72\x6b\x14\x67\xc1\x2d\xf1\xe4\xb2\x78\xf2\x10\x98\x3c\xf4\xca\xac\x51\x5c\x7e\xb1\xd2\xfd\x87\xb9\xb0\x9f\x70\x09\xe8\xef\xb0\x9a\xc1\xf8\xdf\x30\x21\x43\x38\x71\x4d\xd7\x06\x9b\x18\x83\xc9\x75\xa9\x64\x94\x99\xbc\xff\xa6\x47\xaf\x26\xd8\x33\x5d\x42\x4c\x52\xfe\x77\x7c\x6c\x01\xe0\x43\x40\x75\xf0\xb3\x03\x13\x72\x07\x02\x8a\x41\xff\x6a\x28\xdf\xe6\xd8\x1a\xb5\xdd\x7e\x01\x47\xc5\x29\x56\xb9\x96\x1f\x29\x8a\x8e\xa7\xe1\x66\x54\xfe\xa6\x7e\x6d\xda\xb4\x87\x51\xc0\x5c\x1a\x03\x1e\x9c\x84\xd0\xa9\x23\x2f\x20\x2c\xe9\xbf\xd1\xb2\xd7\xbe\x70\x72\x83\x28\x69\x33\xfc\x7e\xc8\x1a\x1b\x8f\xd9\x66\x36\x1c\x79\xd7\x5f\x0e\xc3\x6c\xbe\x86\x93\xaa\x25\x9f\xaf\xa6\x16\xa0\x79\xaf\x4b\x23\xe7\xc2\x14\xd7\xd2\xe2\x1e\x8c\x9e\x6c\xf0\xd4\x1a\xb0\x7b\x7e\x45\x2d\xba\xbf\xc9\x6a\x38\x2e\x65\xff\x8a\x7a\x1f\x2c\x62\xdb\x80\xde\xdc\x0e\x75\x72\xea\x02\xfd\x81\xf6\x61\xdd\x3c\x74\x7b\x67\xc4\x47\x01\x28\x87\xde\xb6\xa3\xc7\x9b\x89\x75\x76\xe1\x2b\x96\x89\x77\x7b\x95\x0f\x74\x7b\x9a\x00\xb0\x95\x2f\x79\x2a\x06\x8f\x4a\xbd\x3f\xcb\x36\x5c\x87\x5d\x5d\x89\x61\xc7\xca\xf5\x09\xe3\x64\xd8\x3c\x85\xa9\xa8\xf0\xec\xb9\x45\x6e\x57\x61\x9b\x2e\x75\xd5\x7b\xba\x11\xae\xed\x28\x56\xd5\x66\x43\x3f\xc1\x5d\x12\xab\x47\xb4\xef\x77\x5f\xce\xfc\x47\x46\x9a\x6b\x1f\x3e\xd3\x2a\x0e\x1c\xc5\x21\x97\xb5\x80\x5f\x3b\xff\x5a\xcf\xf9\xb3\x91\xe5\x4e\x1c\x4e\xb2\xcd\xda\xad\x75\xb5\x0f\xaf\xb2\x05\x5a\x93\x88\x23\x41\x80\x02\xb3\x16\xe3\x91\x2e\xc0\xff\x39\xe5\x8e\xea\x26\xb8\xeb\xd8\x04\x2e\x14\xc0\x87\x8e\x98\xa7\x28\x09\x45\x06\xe8\x6e\x6d\x02\x3e\x9a\x1c\x9b\xeb\x9f\xaf\x64\xe0\xf6\xbb\x41\xc1\x16\xa7\xb1\x14\xd7\xc5\xd6\xf9\xf8\xe1\x50\xa0\x6e\xbf\x4b\x69\x36\x8f\x42\x75\xf1\xce\x51\xc5\x47\x44\xd3\xbd\x53\x9f\x49\xf1\xbd\x7a\x80\xe2\x83\x49\x01\xe2\x1c\x9b\x00\xda\xb6\x5b\x2a\x8d\xf4\xc9\xd2\x17\x5b\xf3\xa3\xf2\x76\x49\x5d\xa2\x10\x66\x6e\x2e\x6a\x48\x40\x4e\x11\x04\x95\x71\x86\x79\xe3\x17\x97\x9e\x0d\x20\xd4\x9b\xb3\x76\xbb\xca\x16\x93\xef\x9c\x37\xb5\x56\x04\xb1\x3a\x19\xa2\x69\xec\x55\xd5\xaf\xae\x49\xaa\x74\x22\xdf\x38\xc5\x18\x6d\x3e\xb2\x50\x95\xf5\xd6\x0f\x0a\x40\x6e\xea\xfa\xfd\x6d\xa0\x3f\x1d\x76\xa1\x76\xa7\x96\x7d\x59\xe6\xf3\xec\xd4\xba\x91\x6a\xc5\xcd\x80\xb6\x72\x8b\x2c\x73\x3e\xda\xf9\x5e\x6b\x5c\x44\x94\xc7\xe7\x06\xb5\x45\x18\xe3\x68\x77\x68\x49\x32\xeb\xea\xeb\xa6\xce\x2a\x54\xf3\x61\xc0\x71\x77\x68\x0b\xb2\x0a\x56\xc7\xf2\x46\x0f\x6d\xd2\x39\xbc\x9d\xf2\x61\x78\x6e\xbc\xf7\x69\x35\x8d\x62\x09\x73\xac\xfa\x97\x65\x27\xf8\x59\xc3\x92\xf4\xe2\x1c\x9b\x83\x74\x9a\x65\xef\xbe\x67\x68\x7d\x3a\x49\x24\x7f\x9a\xd9\xba\x1f\xac\xbd\x3b\x76\x2c\xbb\xbf\x7b\x47\xb6\x14\x5c\x61\xfd\x72\xcd\xbf\x63\xd6\x7d\xb2\x44\xde\xe9\x91\x00\x5a\xfd\xfe\xb0\x69\x57\x57\x8f\xaa\x59\xe2\x9d\xe2\xb0\x95\x1f\x70\xe9\x16\x21\x09\x56\xb9\x72\x30\x57\x87\xce\x40\x25\x8a\xb6\xa3\xf4\x1a\x1f\xcf\xcf\xc5\xd8\xea\xfc\x2f\xe1\x97\x4e\xb0\x87\xfe\xaf\x98\xbf\x03\x00\x00\xff\xff\xed\x5a\x27\x66\x7f\x04\x00\x00")

func test_certsCaClientTenantCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantCrt,
		"test_certs/ca-client-tenant.crt",
	)
}

func test_certsCaClientTenantCrt() (*asset, error) {
	bytes, err := test_certsCaClientTenantCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x19, 0x59, 0x6b, 0x0, 0x44, 0x82, 0x11, 0xc7, 0xff, 0xa3, 0x93, 0x79, 0xa8, 0x1d, 0x35, 0xe8, 0xd5, 0xb6, 0x58, 0x5, 0x18, 0x5, 0xf2, 0xda, 0xff, 0xcc, 0x5d, 0x5f, 0xb, 0xb2, 0x59, 0x41}}
	return a, nil
}

var _test_certsCaClientTenantKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xab\x46\x00\x85\xe1\x9e\xa7\xb8\xbd\xc6\x03\x88\x20\x28\x49\x82\x05\x44\xd8\x25\x77\x20\x89\x8c\xc8\xf1\xe9\x3d\xbe\xb5\x4f\x7b\x9a\xbf\xfb\xfe\xf9\x6f\xa2\xa2\x02\xeb\x0f\x44\xc2\x1f\x07\x82\x40\xf0\x94\x3f\x86\x12\xff\x7d\xb0\x17\x00\x4a\xbf\x03\x51\x10\x0c\x49\x70\x15\x61\x6e\x07\xb7\x78\x7c\x95\xe7\xce\x6a\xfa\x25\x84\xb4\x51\xde\xbe\xec\x37\x74\x65\x14\x46\xcb\x87\xff\xd9\x64\xdf\x92\x63\x3c\x4b\xc8\xf1\x5e\xae\x8f\x09\x85\x13\x41\xa3\x47\x96\x03\xbc\x60\xde\xd0\xa5\xb3\x9b\x74\xbc\x1c\x14\x8c\xa9\xd2\x55\x14\xeb\xed\x61\x4a\x9e\xbc\x41\x69\x73\x66\x2e\xa7\xd8\x2e\x11\xc3\x06\xeb\xc6\x32\xa5\x30\x74\x38\x56\xf3\xdf\xe2\xf0\xfb\xfb\xf5\x32\xf9\x19\x90\xca\x31\xf2\xd2\xd4\x6c\x04\x8b\xf2\x0e\xdc\x96\xf0\xaa\xe7\x16\xcd\xb6\x70\x11\xe3\x20\xcc\xe2\x63\xe9\x83\x68\x72\xb8\x4a\xd6\x61\x3f\x54\x9c\x8a\x69\xbc\x1f\x0a\xb4\x39\xab\x2a\xaa\x3a\x8f\xe8\xd3\xac\xb8\x79\x29\x91\xab\xb7\xef\xe2\x3e\xa2\x43\x10\x54\x7a\x03\x0d\xcd\x17\xa8\xe6\xe6\x84\x52\x25\x1c\x4e\xfd\x8f\x80\x93\x57\xe3\x91\xa2\x60\xc1\x42\x36\x47\xf9\x53\x4e\xeb\x55\x7e\xd5\x1f\x1c\xe3\xab\xff\xcd\x16\xc7\x43\x5c\x45\x3e\xc3\x0c\xa4\xbb\x3a\xf9\x9d\xf8\x55\x48\x9f\xb5\xad\xf0\xec\x2a\x05\xc3\x7b\x86\x4d\xfc\xf3\x1d\x83\xc6\x0c\x90\xe1\x4a\xab\xd9\xef\xfe\xfc\x36\x03\x45\x4d\xc4\x12\x51\xaa\x37\x3e\x9e\x6f\xd5\x6c\xeb\x51\x60\x87\x80\xd8\x81\x2c\xb8\x82\x28\xf4\x40\x14\x34\x28\xd7\xec\xb5\x74\xd3\x46\x4a\xbd\xba\x61\x30\x19\x13\x5c\xfa\x65\x23\x8d\x32\x97\x34\x39\x30\x21\xf9\x58\xd1\xf5\x55\x3a\x83\x65\x3f\x1f\x77\x0a\xc9\x9a\xf0\xc5\xde\x91\xd5\x23\xaa\x02\xbf\x58\xc8\xbc\x02\xb4\x00\x7c\x1b\xb7\x3c\x0a\xf3\xa7\x43\x05\x3e\xaf\x75\x84\xea\xde\x9e\xa2\x68\xa3\xce\x99\x4a\xb7\x9c\xb3\xe1\xdb\x68\x93\x5c\x9c\x8f\xfc\xf7\xd8\xb9\x7a\x91\xe2\x44\xd8\xad\x94\x00\xe5\xf9\x71\x13\xc4\xb9\x09\xf7\x1c\x9f\x18\x1f\x27\x1d\x8d\xb3\xd2\xc1\x2c\xc9\x55\xbd\xb7\xe7\x96\xb0\x7d\x99\x9d\x4a\x4b\xd7\xb4\x9f\x56\x47\x32\x76\xc7\xac\xe5\xed\x8f\x59\x5e\x55\x78\x87\xda\x1c\x18\x1c\xf5\x76\xf9\x48\xeb\x45\xbb\xc5\xa6\x4a\x3f\xc9\xf8\xcc\xe7\xdf\x4a\xef\x24\x72\x6c\xdc\xb3\x77\xf9\x00\x06\x07\x8e\x54\x1b\xe9\x27\x09\x62\x56\xba\xa5\xa8\x73\xfc\x2f\xd2\xe8\x42\x36\x57\x81\xd5\xc2\x34\x05\xaa\xa2\x19\x1d\x56\x95\x56\x65\x5f\x54\x1b\x0b\x72\x1b\x9e\xbe\xb1\x7e\x00\x9f\xe4\xb9\xc8\x0d\x65\xbe\x2f\x39\xbd\xe2\xa7\xe2\x2c\x01\xbe\xe9\x1f\xdb\x01\xba\xd9\xa9\x7b\x78\x04\xd4\x5c\x65\x6a\x2a\xf6\xef\x0e\x2b\x94\x74\xb3\x57\x45\x2a\x62\x45\x38\x42\x12\xf2\x16\x52\xc8\x20\xfa\xb0\x12\x52\xd8\x17\x6c\xcd\x71\xdc\xb6\xfe\xca\x5b\x77\x7c\x3f\x8e\x22\x0a\x9c\x4e\xc2\xe9\xed\xb3\x08\xe5\x76\x87\xeb\x13\x7b\xe5\x6b\x8b\xe3\x66\xcc\xa2\x57\x2c\x86\x8c\x93\xb7\xe9\x8d\x81\xf3\xed\x7e\x49\xc7\x80\x56\x28\xf2\xc9\xc1\xf7\x31\xe3\x58\x84\xc7\x7a\xe4\x71\x7b\xee\xc2\xa4\xf5\xd4\x5c\xaa\x5f\x11\xfe\x70\x8c\xeb\x3d\xd9\x9d\xf7\x04\x94\xcf\x8a\x49\x0e\xc8\x53\x6f\xf3\xf9\xc9\x64\xe6\x15\x47\x5e\x10\x3e\xc3\xa3\x32\x20\x34\x90\xbe\xb3\x94\x4c\xb1\x79\x40\x7a\x86\x08\xe6\xbf\xc5\x0c\x01\x4d\x8c\x5e\x27\xe2\xb8\x2b\xc4\x90\xf0\xa4\xcc\x08\x9e\x64\x54\xed\x4d\x96\x03\x44\x2f\x59\x94\x1d\xdf\x6a\x2a\x3c\xf3\x15\xe0\x91\xe1\xe8\xca\x2e\x27\x45\x88\xbe\x74\x96\xc5\x1c\xf0\xd8\x5d\xcd\x4d\x2c\x39\xed\x99\xe7\x19\x2f\x80\xbe\xa6\xe0\x8d\x31\x65\xa7\x5e\xd9\x8f\x72\x8b\xa2\x13\x96\x8d\x4e\x3c\x69\xfc\xed\x08\x5e\x95\x2d\xf5\x67\x10\x75\xfe\x2b\xb5\xcd\x52\xc9\x20\x79\xe9\xcf\x04\x05\x58\xb1\xb9\xbb\xe1\xc3\xca\x20\x40\xdd\x7f\x5d\x57\x23\xa1\x86\xdf\x73\x25\x32\x65\xa8\x48\x6b\x0a\xa0\x05\x78\xab\x91\x8a\x58\x58\x95\x7e\xba\x96\xec\xac\x44\x8d\x4a\x17\x6b\xd6\xb2\xed\xde\x62\xd4\xd3\xf2\xc4\x41\xb1\x57\xf7\x89\x9a\x91\xdd\xac\xdb\xab\xb7\x1f\xf7\x09\xdd\xd0\x4d\x7f\x6c\xd4\x20\x89\xb5\x02\xe6\xd1\x74\x60\x0f\x84\x1d\x2a\xd9\xd3\x3e\x0b\x73\xd2\xf1\x6d\x7e\x64\x8e\x8f\x6d\x5d\xb5\xe0\x5e\x8d\x90\x4f\x56\xf6\x6a\xd4\x9c\x0d\xf1\x90\xa5\xb7\xb9\xa8\x5f\x29\x3e\xbd\xa9\xc7\x38\xb4\xb9\xbd\xd5\xc9\xdc\x2c\xcd\x7e\x36\xdf\x4f\x18\x92\xf4\xb6\x11\x46\x73\xa7\x92\x04\x2b\xbe\x23\xfa\xe1\x75\x54\x80\x2e\x63\x4a\xd3\xf2\x01\x3d\x67\xae\x21\x16\x72\x26\x95\x27\xc9\x73\xb6\xf3\xe6\x7e\xe5\x47\xa3\xae\x27\x3d\x6c\x8d\x7b\x94\x51\xc9\xfd\x60\xce\x4c\xef\x24\x66\x28\xec\xc5\xbe\x0a\xa4\xd3\x80\xab\xee\xd9\x76\xf3\x60\x0d\x82\x61\x50\xaa\x3c\x90\x2b\xf5\x7e\x79\xe9\xf5\x70\xf5\x78\x8a\xb8\x75\x4c\x90\x74\xb3\xe4\x92\x0c\x2e\x63\x45\xce\xb4\x43\x55\x8b\x26\x0d\xb3\x1a\x7d\x58\xda\xb4\x68\xdb\x34\x1c\xb8\xf3\xdb\x2d\xb1\x50\xb5\x87\x44\x0c\x54\x54\xae\x9f\x43\xef\xe9\x1b\xe7\xe4\xba\x7d\x37\xae\x1b\x1f\x38\x6e\xe2\x1b\xd1\x9e\x9a\x3f\xc6\x3f\x7f\x9f\x44\xc6\x54\x93\x84\x42\xaf\x8a\x82\x9e\x9b\xf6\x07\x3a\xd4\xbe\xf1\x66\xbb\xc0\xf5\x00\xf0\x95\x47\x09\x9f\x14\x77\x42\x61\x9a\xb0\xdb\xf6\x28\xe5\xc4\x17\xe0\x82\xb2\xfc\x7c\xd2\xc0\xb9\x78\xdb\x96\x30\xbe\xef\x8e\x86\x1c\x69\xf6\x17\x44\x16\x6a\x6b\xa5\xa8\x95\x21\x0a\xdc\xa7\x47\xa9\x8f\x8a\x41\x07\xc3\x73\x2b\xf9\x2a\xa4\x58\x95\x6e\x56\x62\x75\x99\x59\xb1\xf2\xbb\x2d\xb3\xf8\x66\x2c\x46\x80\x29\x46\x49\x58\xae\x5c\x2f\xdf\x48\x67\x70\x0e\xa8\x05\xcb\xc2\x92\x5c\x77\xfc\xf6\x44\xf7\xeb\x77\x46\x43\xd3\x54\x3c\xa4\x3a\xe8\xae\x79\x38\xaa\x97\xac\x61\x7f\x49\x51\x2c\xf9\xff\xa9\xf9\x37\x00\x00\xff\xff\x70\xbf\x98\x45\x8b\x06\x00\x00")

func test_certsCaClientTenantKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantKey,
		"test_certs/ca-client-tenant.key",
	)
}

func test_certsCaClientTenantKey() (*asset, error) {
	bytes, err := test_certsCaClientTenantKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa8, 0xcb, 0xe1, 0xaf, 0xe3, 0x3d, 0x63, 0x99, 0xb0, 0xaf, 0xf6, 0x3f, 0x15, 0x3e, 0x96, 0x8f, 0x8a, 0x3, 0xed, 0x99, 0xda, 0xe9, 0x92, 0xc3, 0xda, 0xc, 0x65, 0x48, 0xcb, 0xc4, 0xbf, 0xc4}}
	return a, nil
}

var _test_certsCaCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\x39\xd3\xb2\x4a\x13\x40\x73\x7e\xc5\x97\x5b\x5f\xb1\x2f\x86\xb3\x81\x03\xb2\x0c\x20\x82\x99\x80\x0e\xa0\x3e\x88\x0b\x83\xfe\xfa\x5b\xef\x13\xbc\xc1\xbd\x1d\x9e\xaa\x3e\xd5\x41\xd7\xf9\xff\x9f\x81\xc4\xa3\xd1\xff\x10\x49\x73\xea\x52\x04\x72\xf2\x4b\xa5\x90\x52\xec\x0f\x08\x01\x6e\x71\x20\x28\x04\x9c\xa6\x20\x36\x75\x93\x27\x99\x1d\xe0\x8d\x3e\xe5\xaf\x44\xd9\x74\xe7\x17\x11\x98\x55\x7e\x30\x1e\x68\x37\x37\x11\x60\x64\x0b\x19\x10\x52\xf0\x25\x59\x08\x81\x07\xd4\x1d\x41\x5d\xe8\x33\x6d\x3d\x1c\x75\x7f\xae\xf6\xd1\x18\xa6\x3b\x41\x44\x85\x0b\xc6\x30\x11\x0b\xae\xb5\xe8\xd1\xdc\xd6\x5d\xa5\x71\xce\x14\x22\x36\x5d\x13\x49\xe1\x40\x97\x30\x27\x6a\x98\x33\x11\xe6\xcc\xd8\x77\x4d\x14\x7e\xff\x30\xfa\xfd\xcb\x06\xf0\x08\x53\x2a\x08\xf8\x95\x05\x44\x5c\xff\xca\xa4\x4a\xe3\x8b\x9b\x83\x1c\xf2\xa8\x80\x20\xcc\x31\x89\xe6\x4a\x7b\x7d\x6a\xcd\x1d\x8e\x08\x62\x96\x23\x04\x32\xfa\xef\xf3\x21\x64\x00\x73\x4e\x12\x09\x60\x84\x00\x1b\x11\xe7\x04\x82\xf0\x16\xc4\xa6\xa5\x7a\x87\x97\xac\x8f\xf2\xa8\x44\x73\xb4\xbc\x39\x38\xca\x8e\x2f\x17\x7b\xef\x86\xf3\xc2\x79\x59\xab\xec\x0c\x44\x5f\xbe\xef\xe6\x66\xe2\x12\x51\x61\x22\xb7\xb3\xf1\x69\x2b\xaf\x6f\x74\x95\x0d\x47\xa7\xb9\xf5\x7a\x5f\x8d\x3d\x34\xe7\xb4\x96\x79\x2f\x2f\xc5\x40\x97\xf4\x31\xef\x69\x3f\xbe\x5f\x75\x27\x83\xfe\xe7\x61\x1c\xde\x8e\x96\x48\xf1\x65\x9f\xff\x04\x41\xdf\x7f\xc8\xe4\x9e\x7a\xef\x8e\x80\x57\xd1\xa7\x1f\x96\x0c\x56\x65\xa9\x5a\x43\x90\x9f\x89\x3f\xea\x96\x4d\x9f\xe7\x0b\x15\x59\xec\xec\x74\x73\x63\x3e\xd0\x7a\x5e\xf7\xa9\xe4\xbc\x76\xee\x4a\x40\xfb\x7a\x7f\x35\x30\x13\xbe\x5b\x1c\x2e\xec\xea\x25\xef\xae\xf5\x9f\xda\x75\xf0\x37\xc1\xb4\xd7\x66\x78\x30\xda\x0d\x1a\xd7\x22\xdb\x5e\x93\x4b\x31\x0c\x70\x8e\x0f\x63\x6a\xec\x25\x7d\xed\x6b\x1c\x66\x00\x04\x5c\xd6\xe2\xe0\xe7\xeb\x2d\xf6\x47\xbe\x9b\x8b\x11\xae\xd3\x43\xeb\x18\x56\xbf\xd9\x7a\xea\xca\x8a\xc7\x9a\xa7\x4e\x75\x0e\xa6\x62\xcc\x4f\xd7\xa6\x7b\xdb\xef\xfc\xb0\x93\x96\xdd\xf1\x4d\x83\x63\x6f\x6b\x46\xd9\x3f\xbf\xbd\xbd\xa5\xb2\x9a\xd2\x6e\x45\xe3\xd3\x16\x66\x3f\x35\x55\x10\x10\x04\x80\x63\xe4\x86\x24\x14\x98\x57\xb8\x48\x95\x04\xb0\x8d\x0c\x01\xc3\x12\xe0\xdb\x4b\x08\xe9\x9f\x47\x6a\x89\x20\x50\x16\x8c\x86\xa0\x82\xe0\xec\x20\xc0\x88\xd8\xb0\xdf\x85\x18\xc2\x8a\xb8\xa8\x3d\xb9\x36\x18\x1f\xb3\xda\xa4\x61\x8d\x49\x61\x79\x12\x1d\xa7\x52\x7e\x2a\x76\x08\x14\x0f\x65\x93\x97\xd1\x5a\xc7\x8c\x40\x24\x76\x00\x18\x14\x02\x06\x53\x3e\xec\x55\xeb\xfb\xd8\x94\xea\xf1\x34\x7e\x0f\xa0\x18\xab\x25\xad\xd5\xee\xc2\x50\x2f\xb9\x31\x24\xd9\x3d\x5a\x82\x25\xdf\x0d\xdf\xce\x42\xd7\x53\x76\xdd\x36\xb3\x76\x2d\x59\x05\x94\x9b\xa3\x79\xce\xb2\x22\xbb\xe6\xd2\x5c\x44\x93\x94\xca\x32\x9e\x0d\x46\xf0\xd9\x37\xf1\x90\x6f\x5c\xc9\x9b\xc6\xcb\xcb\x3c\x9d\x2c\x37\xb7\x79\x57\x9e\xe5\x5b\x60\x7b\x62\xd0\x1c\x98\xb0\x7a\x5c\xc9\x72\x1e\x27\x6a\xfb\xd3\x5f\x9f\xd8\xc0\x41\x57\xe6\xac\x7c\xbd\x15\x05\xd6\xbb\x62\xba\x0d\x33\x95\x8a\x89\x0c\x76\x0c\x53\xf8\xe4\xd5\xfb\x72\x35\x0f\x4f\x88\xe3\x36\x28\xd6\x67\x4b\x77\x9d\x69\xd6\x84\xd0\xcd\x57\x99\xe4\xed\xe8\x81\x36\xbb\x15\x65\x3e\x9b\x60\xfe\xb9\xd5\x50\x65\xdf\x71\x94\x76\x2e\x38\x51\xb9\x70\x4e\xca\xb7\xb2\x5f\x4f\x11\x9a\x81\x7f\x62\x1f\x54\xc5\x06\x37\xf1\x63\xba\x54\x4e\xf2\x91\x6f\xfd\xdb\xdf\x7e\xd2\x36\x38\xf4\x75\x65\x5a\xac\xbd\x6f\x15\x4d\xab\x33\xce\x24\x43\x21\xb7\xbe\x58\xad\xd0\x18\x2e\x0f\xb4\x56\x90\x9d\x72\x56\x98\x4e\x7a\xda\x5b\x35\x9a\x3e\xe6\x03\x95\xec\xee\x9f\xf1\xf1\xb2\xe8\x91\x78\x58\xce\x2d\x7c\xe6\xea\x4e\xfa\xcd\x09\x89\xf0\x7f\x13\xf3\x4f\x00\x00\x00\xff\xff\xb4\x35\x35\xf2\x7f\x04\x00\x00")

func test_certsCaCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaCrt,
		"test_certs/ca.crt",
	)
}

func test_certsCaCrt() (*asset, error) {
	bytes, err := test_certsCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd6, 0xf4, 0x74, 0xc, 0xe4, 0xfb, 0x45, 0xd2, 0xa4, 0x9, 0xd, 0xf9, 0xcf, 0xfd, 0x8f, 0xc4, 0xed, 0x9c, 0xc4, 0x22, 0x7, 0xf7, 0x34, 0x1b, 0xbb, 0xc1, 0x96, 0x2f, 0x1c, 0x4b, 0xfe, 0x9d}}
	return a, nil
}

var _test_certsCaKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\xd2\x83\xdc\x01\x85\xe1\x9e\x55\xfc\x3d\xe3\x21\xa7\xc2\xc5\x25\x5f\x92\xc8\x12\xea\xc8\x49\x64\x11\xc4\xea\x3d\xfe\xdc\xfa\xb4\xa7\x79\xba\xf7\x5f\xff\x9d\xa8\x68\xd0\xf9\xc7\x0f\xc0\x3f\xae\x0f\x63\x10\x2a\xff\x98\x4a\xf2\xf7\x20\x36\x84\xca\xec\x41\x11\x00\x53\x02\x9e\x02\x7e\xc9\xc4\x8d\x6b\xf4\x1e\x28\xac\xec\xd0\xce\x23\x79\x4a\x63\x81\xb8\x62\xe7\x28\xc4\x49\x9a\x38\xce\xeb\x47\xad\x8c\xc1\xcb\x92\x51\xb2\x63\x8f\x94\x0b\x08\x23\x05\x13\x48\xac\x33\x88\x3a\x35\xee\x2a\x96\x9c\xf5\xfa\xa5\x56\x69\xb4\x2d\xd4\x07\x41\x3d\x50\xc9\xc2\xd4\xa7\xdd\xa9\xda\x2e\x24\xad\xd9\xb2\xc4\xae\xf3\x92\x59\x1e\xcd\xc0\x21\x77\xc2\xb3\xfe\xfb\x91\x4f\x8b\x69\xc1\x60\x8a\x59\x98\xf6\x10\xbc\xeb\xf6\xec\xaf\x02\xa8\x4d\x51\xbd\x16\x7b\x76\x78\x6f\xe8\xaa\x75\x6b\x2f\xd4\xeb\x44\xc8\x5d\x61\xd5\x57\xc3\x66\x91\x18\x42\x1a\xfa\x8f\xf0\x5e\x1c\xd0\xf7\xe7\x40\x9c\xaa\x05\xfa\x38\x1e\x7c\x29\x4a\x50\x56\xc5\x87\x3b\x7d\xda\x7d\xbe\xcc\x59\xca\xab\x63\x83\xe7\x66\x47\x89\x70\x8f\x50\xff\xf9\xb0\x35\x9e\x19\x1a\x44\x6f\xb2\x0a\x1f\x53\xa0\x42\x00\x16\x19\x4b\xe8\xa5\xb2\x33\xfd\xb0\xd0\x71\xd4\xeb\x9b\x50\x3f\xd4\xdd\x2d\x30\xdf\xb2\x17\x37\xb1\xcd\x2e\xea\x57\xc3\x2f\xf3\xb3\x71\xd8\xf8\xa7\x71\x3b\x83\x38\x9f\x50\xf5\x17\xba\x9e\x17\xeb\xc8\x9a\xd2\xbc\x1f\xd6\xb6\x75\x58\xac\xb4\x3a\x5d\x33\xf4\xa6\x9a\xc5\xd6\x79\x50\x06\x1e\x10\xc1\x04\x45\xa0\xec\x28\x81\x0b\xdc\x76\xe6\x45\xec\xa8\x37\xf2\x46\xdd\xbe\x42\x6b\x5e\x53\x17\xcc\x22\xdf\x5e\xbe\xd0\x1e\x73\x8c\x0f\xd7\x26\x69\xa0\xb8\x33\xc0\x23\x57\x9b\xed\x79\x0d\x9b\x34\xce\x3f\xc6\x9c\x6f\x57\x16\xfb\xa1\xe6\xcb\xc0\xeb\xe1\x0b\xb1\x1a\xab\xe5\xfd\x7e\x89\x6b\x83\x3f\x8f\x62\xc7\xd7\x7d\x89\xbf\xdc\x26\x5a\x35\x4f\xae\x8b\x71\x92\xcb\x5a\xb8\xde\xf8\x8c\x2e\x73\xb0\x49\x4e\x9b\x32\x9b\x65\xaf\xf7\x10\x7e\xa0\x26\xe3\x10\xb1\x79\x8c\x3e\x58\x14\x56\x36\xc8\x49\xe5\x16\xeb\x6b\xca\xd7\x1b\x92\xda\xc4\x1f\x54\x2c\x84\xe1\x1a\x1d\x53\x1a\xfe\xe8\xf6\xb9\xb7\xa7\xfe\x01\x4f\xa2\x75\x64\xc0\xa9\xdc\x5b\x60\xc1\xa4\x21\x41\x77\x6a\x5c\xb8\x32\xf8\x8b\x6d\x0e\x77\x22\xb3\xb3\xcf\x06\x46\x6a\xb6\x62\xa8\x50\x52\x1a\xc5\xc9\x4a\xb6\xdb\xd8\xf0\x41\xf9\xe6\x7a\x18\x14\xe6\xd6\x9d\x89\x1e\xbf\x40\x9d\xb4\x72\x3c\x23\x83\x10\x5c\x69\x56\xc4\x36\x47\x44\xcd\xa5\x13\x85\x5d\xfb\xeb\xae\x1e\x53\xb8\xbd\xa3\x07\x0a\x3f\x21\x2d\xa6\x4a\xcf\x59\xa8\x3c\x70\xb1\x0b\xae\x63\xf9\x7c\xa9\xbb\xe5\xdf\xc4\x42\xdf\xb6\x8f\x54\x81\x4b\xac\x66\x24\xd5\x89\x02\x70\xc0\xba\x14\xed\x60\x20\x0b\xc4\xbd\x41\x33\x97\xe5\x5e\xe0\x99\xbf\xda\x13\x6f\x9a\xe4\xc5\x58\x28\xed\x7b\x4d\x16\x0a\x74\x9d\xa2\xfd\x51\x0e\x9d\xfe\x42\x8a\xbb\xac\xde\x61\xea\xd6\xe5\x4a\x0d\xf0\xa5\x76\xb7\xbb\x0c\x54\xec\x0f\x52\xfc\xa8\xa1\x4a\x16\x85\xd9\x19\x56\x3e\xe8\xa1\x7d\xb1\x1d\xdd\x0b\xea\x5d\x35\xdd\x5a\xdc\xe3\xad\x29\x59\x7f\x21\x6e\xb4\x2a\x27\xb4\xa8\xb5\xb6\x95\xe0\x2b\x36\x1e\x7a\xca\x33\xd3\x29\xf8\xf2\x58\xfd\x0c\x15\x8a\x11\x6c\xb0\x45\x63\x3e\xa2\xd5\x8c\xc8\x9d\xbc\xf7\x4a\x2f\xdc\xfe\xc4\x02\xb6\x71\xc8\x37\xcd\xea\x3a\xf0\x09\x96\x16\x61\xfd\x6c\x92\xaf\x72\xa6\x19\x50\x6f\x18\x36\x68\x35\xc5\x93\x1a\xbf\x67\x6a\x17\x30\x75\xfa\xac\x72\x9a\x38\x93\xa4\x91\x26\x27\x4b\x31\xad\x64\x5d\x12\x0a\xc8\xfe\xc6\xd3\x66\x18\x3a\x49\x86\xd6\xba\x7d\x0b\x0c\x2f\xdf\x80\xcd\x9f\x36\x0d\x35\xa9\xdd\x95\xdf\xc0\x1b\xcf\xc0\x21\xcf\x95\x74\xf2\x34\xaf\xee\xa2\x3f\xbe\xbd\xf9\x55\x9b\xf4\xae\xeb\x28\x43\x30\xb5\xc5\xcb\x08\x25\xc1\xb5\xb2\x99\x03\x83\x85\x30\xbe\xd5\xc6\xbf\xc6\x6e\xe5\x33\xa3\x64\xaa\x7b\xf7\x57\x27\xff\x23\xcf\xaa\x9e\x71\xd4\xce\x25\x24\x91\x5f\x82\xfd\x18\x7a\xc2\x46\x60\x23\x30\x3f\xb3\x1d\x3c\x97\x41\x4f\x70\x3e\x9d\xe8\xfc\xb9\x0e\xe9\xf3\xee\x9d\xd2\x13\x91\xde\x17\x71\xa8\x1f\xf9\x32\xc6\x25\xe7\xdb\x1e\xbf\xbf\x91\x24\xa6\xcf\xdf\xce\xe6\x5c\xf0\xb0\x48\x84\x92\x8b\x13\x34\x42\x1f\x6c\x7b\x64\x1b\xb7\x62\x1f\xeb\x70\xef\xb7\x0b\xb3\xc4\x40\xfd\x98\xad\x1a\x0a\x33\xb6\xcb\xb0\x5f\x2f\xaf\xaa\x5f\xc4\x4f\xe0\x57\x8f\x37\x71\x5b\x6b\xee\xcc\xb2\x7e\xc8\x09\x2a\x0a\xc7\xeb\x46\xd0\xac\xb4\x05\x11\x64\xd3\xb7\x84\xed\xca\x1f\xf9\x03\xa8\x30\xd1\x3a\x66\x0b\xe4\x75\x1e\x72\x9a\xde\x66\x91\x65\x9d\xde\x3b\x4b\xb6\x0b\x6c\x75\xfa\xfa\x21\xd2\x4a\xa3\x3e\xa0\xcb\x35\x96\xab\xf0\xa1\x24\xe5\xac\x99\xb2\x8b\x0a\xd9\x33\x37\x7e\x02\x03\x8a\x4f\x9b\x7f\x5e\x4c\x89\x03\xca\xd7\x04\xbb\xea\x79\x23\xac\x5d\xcb\x70\xa6\xe2\x77\xb2\xe8\x88\xd0\x46\x98\xce\xd8\x33\x2f\xbb\xa6\xd9\x46\xf5\x9b\xb3\xca\xc1\xe3\x9f\xf5\xc8\xae\x1a\x28\x2d\x3f\x5b\xe1\x15\x10\x57\x27\x9c\xe9\x96\x85\x67\xa5\xc5\xf3\xc7\x89\x5a\xac\x0c\x94\x47\xa3\xe5\x17\x72\x3a\x37\xc5\x18\xff\x23\xff\x32\xa2\x01\xfa\x5a\x40\xff\xc1\x3f\x98\x46\x35\xb0\xc2\x1c\xe7\x85\x8f\x5e\x4f\xa3\x7c\x7f\x5e\x4d\x62\xe8\x21\xce\x75\x0d\x53\x3a\x03\x49\x97\x86\x28\x72\x88\xd8\x63\x57\x31\x5b\x6d\x98\xa7\x5b\xf7\x38\xeb\xe9\xdd\x77\xf7\x4f\x6f\x02\xe1\xc0\x0a\x16\x95\x31\x69\x3c\x5b\x48\x68\x52\x05\x35\x33\x3f\x7f\x09\xb4\x7f\x76\xf0\x46\x75\x9d\xa9\x73\x55\x90\x10\x83\x0e\xc7\x5d\x78\xf3\x37\x80\x5a\xf0\xa0\x65\x9f\x3f\xb0\x55\xea\x34\xbb\x98\x8b\x47\x68\xf6\x62\x5c\x7d\xa3\xe7\x01\x4a\x62\x8a\xda\xfb\xd7\xa7\x0b\xf7\xe4\xf3\xe8\xdf\xc8\x5f\x56\x14\x47\xfe\xff\xb9\xf9\x4f\x00\x00\x00\xff\xff\xfb\x84\x65\x6a\x8f\x06\x00\x00")

func test_certsCaKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaKey,
		"test_certs/ca.key",
	)
}

func test_certsCaKey() (*asset, error) {
	bytes, err := test_certsCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc3, 0x57, 0xc9, 0xb8, 0xe4, 0x6, 0xe9, 0x7f, 0xc, 0x73, 0x32, 0x9c, 0xe0, 0x1a, 0x5d, 0xf6, 0x83, 0x66, 0x9a, 0x8c, 0x6e, 0x7b, 0x50, 0x2d, 0x8b, 0x92, 0xda, 0xcd, 0x7, 0x83, 0x9, 0xa8}}
	return a, nil
}

var _test_certsClientTenant10Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xbb\xb2\x82\x48\x17\x85\x73\x9e\xe2\xcf\xad\xbf\x0e\x37\x05\x83\x09\x76\x43\x73\x53\x2e\xcd\x55\xc9\x04\xa1\x01\x15\x45\x0e\xd0\xf8\xf4\x53\xe7\x4c\xd5\x4c\x30\xb3\xc2\xaf\x56\xad\x64\xef\xfa\xfe\xff\x13\x84\x4d\xdb\xfb\x9f\x86\xc3\xd8\x36\x6c\x0d\x62\xfc\x4b\x39\xd7\xb6\xf5\xf2\xa3\x69\x70\x9f\x28\x2c\x36\x02\x6a\x13\xd7\x19\x05\x75\x50\x72\x71\x29\x7a\xad\xe1\xe5\xbb\xf8\xfe\x44\x31\x78\x88\xde\x86\xe6\xd6\x9a\xfb\x85\x47\x40\x46\x03\x74\x78\x73\x6e\x68\x2f\x18\xce\x7a\x4a\xc8\x01\x2f\x77\xbd\x10\xbd\x77\xf9\xd8\x37\x67\x91\x32\x23\x86\x18\x51\x2f\x45\xe0\xc6\x3a\xf6\xe6\xb3\xf8\xbd\x16\xa2\xd1\x5d\x34\xa4\x93\x18\x2a\x63\xe1\x57\xce\xed\x30\x73\xe3\x84\x79\x3a\x30\x2f\x46\x97\x1f\xe8\x7d\x30\x73\x3b\xf8\x9b\xb9\xba\xcb\x70\x07\xe4\xaf\xb1\x67\xac\x25\xff\x8c\x71\x17\x1d\x13\x17\x64\x13\x84\x04\x6b\xcc\xb5\x52\x33\x9d\xce\xd9\x96\x2f\x3f\xf8\xe8\xc2\xed\x97\x03\x73\x35\x37\x86\x85\x52\xdc\xba\xc0\x9b\x5a\x34\x98\x91\x5d\x48\x3a\xc1\x88\x03\x92\x00\xc8\x36\xd2\x97\xdf\xc2\x01\x9e\x36\x02\xa2\xf5\xec\x73\xe2\x4b\xa7\x1d\x5f\x1b\x67\x6a\x5e\x9f\xd7\xdb\xcf\x76\x5b\x10\x84\x15\xc7\xe7\x4b\x32\x4e\x56\x85\x07\xf9\xa6\x3e\xb9\xce\x1d\xad\xd5\x7a\x67\xd1\xd9\xc9\xab\xdc\x09\x87\xa9\x2e\xfb\xfa\xc5\xd7\x5f\x21\xad\xab\xc1\x94\x8d\xa3\xa0\x5a\x65\x12\x4c\x99\x18\x38\x79\x73\x92\x1f\x9b\xdc\x4b\xe3\xd8\xdb\x0f\x8f\xdc\xa8\xb9\xcb\xd7\xa7\xcf\xaf\x4e\x6f\xd9\xcb\x36\xbc\xe4\x01\x88\x86\x82\x6f\xf3\x73\x9e\xc5\x2d\x02\xe1\x71\x1d\x94\xf8\xec\x4b\xbb\xce\x95\x19\xa5\x6a\xc9\x7c\x93\x77\xd6\xb4\x66\xf2\x7e\xf3\x2d\x38\x1e\xd7\x77\xbb\x03\xc3\xef\x43\x3d\x4e\x63\x91\x6f\xfa\xad\xc8\x36\xd9\xd8\xcd\xd5\xc9\x09\xec\x23\x84\xcd\x70\x0f\x42\x36\xe2\xbc\x21\x85\xb6\x53\xcd\x3e\xd2\xf6\xfd\xde\x0c\x9a\x37\x32\xf7\xbe\x64\x73\xf9\xc0\x7c\x56\xf6\x62\x35\x96\xb2\x27\xf8\x26\x0a\xcd\x49\xe8\x3c\x95\xe2\xd5\x7f\x29\xf9\x54\xe9\x5b\x51\x39\x76\x4f\xda\x7d\x37\xa2\xa4\x23\x2f\x11\x67\xf7\xa0\x04\x45\x58\xb0\x46\x0a\x7b\xee\x71\xd9\x45\xe4\xbb\x1f\x93\xd6\x20\x4e\x74\x21\x5b\x92\xcb\xc7\xd6\x9e\xaf\x59\xda\x56\x97\x80\x11\x6a\xd4\xf3\xbd\xcd\x0c\x59\xdd\x03\x75\x11\x80\xd9\xd1\xf3\x73\xa1\xe7\x72\xd1\xe9\x59\xe7\xd2\x90\x0f\x80\x58\x5f\x08\x88\x0e\x34\xa3\x2e\xe2\x7f\x4e\x77\x75\x08\xc9\x5c\x44\x4c\x4d\x1b\x4d\x20\x89\x81\x16\x57\x43\x94\xbe\x11\xc5\x06\x22\xa5\x0e\x31\xd4\x3f\x7f\xc1\x59\x91\x8b\x4d\x1d\x32\x8a\xe2\x3c\x6a\xad\x71\x90\xb7\xa6\x88\xfd\xf1\x76\x6d\xd0\xfb\xa8\x5d\x47\xe1\x7e\xa8\x74\x10\x7e\xca\x56\x88\xf1\xb1\x83\x91\xd2\xfb\x58\x88\x5e\x53\x98\xcd\xcc\x95\x52\xa4\xa1\xf5\x39\x15\xe6\xbe\x3b\x67\xab\x85\x2c\x15\x00\x4c\x0b\xc3\x7f\x05\x2f\x3a\x39\x3b\x87\x67\x6e\x37\x73\xe9\x01\xc1\x47\x0e\x11\xd0\x29\xc5\x08\x34\x99\x7e\x8c\xe5\x2b\xf5\x5f\x9e\xbe\x51\xc2\x7c\xb8\xc5\x72\xc4\xef\xf8\x5c\x51\x51\xf8\x76\x4e\xf7\x07\xd3\x95\x2f\xf9\xb6\x46\xc5\xd1\x26\x6a\x7d\x6f\xe7\x34\xea\x3f\xdc\xe5\xb8\xf6\x8a\x32\x2e\xeb\xa6\xde\x75\x9a\x6c\x95\xdb\xaf\x04\x54\x8a\x0b\x3a\x6d\x12\xb3\x2e\xce\xd6\x40\xec\x5a\x7c\xe7\x94\x18\x4b\xe5\xd9\x22\x32\x99\x1d\x9e\x4e\x57\x46\xc2\xbd\x14\x6e\x39\x36\x0e\x5e\x89\x61\xf5\x6b\x29\x5d\x96\x77\x55\x0f\x1b\x54\x7d\x23\x6f\x86\xbd\x18\xc6\xa0\x54\xf3\xc9\x65\xbb\xed\xf0\x79\x48\xf7\xd4\xa0\xdf\x01\x8e\xe3\x4a\xf0\x43\x65\x19\xac\x11\xbd\x32\xee\xa5\xae\x4e\xaf\x8f\xa7\x60\xc7\x5b\xd2\x55\xa5\x92\xa3\x75\xf3\x7e\xee\x1c\x81\x1f\xad\xc8\xc9\x85\xb8\x18\xb4\xc3\xc3\x6e\xcb\xb5\x0d\x92\x67\xe3\xee\xda\xb6\xf5\x7b\x69\x6b\xcc\x81\x1f\x67\x0e\x07\xc2\x60\xf2\x61\xa0\x28\xaf\x5e\x65\x9b\x9d\x4e\xca\x22\x52\x92\xb6\x52\x83\x31\x7f\xf0\x07\x2a\x47\xa4\x7b\x4a\xac\xb1\x53\xd5\x10\x3d\xf1\x30\x1b\xcb\xd3\x28\xb2\xf4\xb1\xb7\xb3\xcc\x0d\x5a\xae\x22\xb5\xcf\xcb\x5a\xe3\x9d\xa6\xa3\x3a\xa9\x8f\xcd\xf0\x92\x2f\x9e\x24\x1d\x93\x01\xe3\xa0\xfc\x83\xfb\x15\x17\xf6\xf4\x7f\xcb\xec\xcf\x00\x00\x00\xff\xff\xf7\xf5\x51\x3c\xe9\x04\x00\x00")

func test_certsClientTenant10CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Crt,
		"test_certs/client-tenant.10.crt",
	)
}

func test_certsClientTenant10Crt() (*asset, error) {
	bytes, err := test_certsClientTenant10CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x17, 0x2c, 0x3c, 0x14, 0xc4, 0xf6, 0xa6, 0x9a, 0xf5, 0x58, 0x1, 0x8c, 0x24, 0xfb, 0x34, 0x62, 0xf9, 0x51, 0x7d, 0x65, 0xd4, 0x17, 0x69, 0x88, 0xd7, 0xd3, 0x77, 0xe, 0x5c, 0xbc, 0x3b, 0xb5}}
	return a, nil
}

var _test_certsClientTenant10Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb5\x16\xa3\xec\x02\x85\xe1\x9e\xab\x98\x9e\x75\x16\x04\x12\xa4\xc4\x2d\xb8\x7e\x74\xb8\x4b\x70\xb8\xfa\xb3\x66\xea\x7f\xb7\xbb\x79\xbb\xe7\x7f\x7f\xc7\x0a\x92\x62\xfc\x71\x5c\xe6\x8f\xe5\x28\x01\xe3\x09\x7f\x34\x01\xfc\x7b\x20\x5d\x51\x84\xe9\x54\x58\x86\xd1\x38\xc6\x16\x98\x99\xca\x5e\xb4\xcc\x81\x45\x2b\x9b\x74\x4a\x32\x22\x79\xfa\x7d\xb7\x8d\x3c\xab\x05\x4c\xea\xbf\xdf\x1a\xaf\xb5\x5d\xb5\x34\xe5\xf9\xb2\x54\x4d\x40\xaf\x6e\xe0\xc2\x68\x70\xfd\x64\x19\x71\x15\x27\x72\x19\x41\x81\x8c\xff\xea\x9d\x75\xe9\x92\xc5\x45\x9e\xec\xb7\xf6\x0e\x41\x00\xab\xc7\xe0\x05\x3e\xfa\x94\xc9\x3c\x38\x11\x76\x50\x1f\x2c\x72\xa1\xf8\xba\x75\xd3\x0f\x07\xef\x34\xea\xe2\x52\xbf\xc4\x97\xa4\x77\xdb\x36\xe2\x31\xd9\x51\x8c\xdf\xe0\xe9\x31\x75\xa0\x58\xb2\xee\xd5\x1b\x97\xf5\x11\x55\x58\xe5\x92\xbb\x5e\xfc\x86\x9b\xd5\xd1\xa0\x7b\x24\xbf\x8b\x84\x95\x33\x9c\xaf\x65\xbf\x28\x24\xde\xdf\xde\xcd\x9d\x02\x48\x66\x0f\xcd\x52\x56\x02\xbe\x74\xee\x07\x3b\xa3\xd5\x11\x23\x4e\xfb\x4e\x4e\xe7\xf0\xb6\x5b\x4a\x56\x6f\x8d\x54\x88\x1e\x17\xd9\xe4\x73\xaf\xae\x7c\x67\xd9\xc0\x53\x2a\xac\xde\xfe\x0a\x2c\x1d\x2b\x38\xdf\xef\x37\xa1\x28\x24\xc8\xb7\xf3\xf4\x02\x63\x79\xb8\xfd\xc1\xd0\x90\x02\x39\x1a\x7f\x86\xbd\xeb\xbe\x31\x44\x8a\x4a\xed\x73\xfe\xd0\x99\xbe\x54\x70\xef\xe6\x8b\x07\x3d\x18\x87\x96\xf2\x15\x36\x22\x3f\xa0\xaf\x0b\xcb\xb2\x15\x9e\xb1\x19\x96\x99\x14\x96\x11\xbf\x9c\x5d\x9d\x82\xd6\xaf\x93\x66\x4c\x1a\xc4\x4f\xf1\x07\x80\xcb\xa9\xdf\xef\x75\xe9\xf8\xad\x47\xd3\x97\xc9\xe5\xa1\x22\x59\xaa\xfa\xf0\xd4\xcc\x7e\xfb\x26\x09\x47\xc6\xf1\xc4\x85\xa4\x50\xbd\x90\xd2\x84\x6b\xb3\x0e\xc7\x13\xff\x91\x48\x28\x9a\xa5\x92\x31\xd5\xa1\x18\xd6\x71\xe4\x0c\xc3\x25\xda\xc2\xc1\xa6\x61\x47\x30\x7d\x84\xd9\x29\x19\xcc\xd3\x6e\x49\x87\x78\x4d\xc0\xcc\xd5\xc6\xb7\x5f\x5a\xa5\x90\xdb\x41\xcd\x03\x37\xb3\x24\x74\x29\x85\x61\x1f\x97\x76\xb6\x45\xf4\xab\x87\x44\x49\xe2\x4a\x99\x3b\xf9\xea\x55\xc6\x5d\x0d\x5f\x3a\x2d\x0d\xa9\x1c\x57\xb6\xb6\xcd\x46\xbd\xf1\xce\xe0\xe5\x83\x36\xd3\x19\x11\x6a\x5c\xc5\x23\x24\xec\x9d\xfd\x4e\xe1\x41\xdc\x74\xcf\xac\x19\x22\xd5\xfd\x7c\x33\xa9\x03\x89\x7e\x09\x4b\xdc\x57\x14\xbc\x8b\x6c\x15\xc3\x17\x52\xed\xb1\x8e\xa2\x52\x46\x59\x62\xbc\xc8\xe2\xa5\xdb\xbc\x41\x23\x90\x46\x64\xc2\x9b\x81\x55\x71\x77\xfb\x7b\x40\x25\x20\xf1\x2d\x8f\xd9\xbc\x9d\x5f\x77\x32\x2f\xdf\x0f\xf0\xb3\xe0\x51\x02\x44\x10\x12\xc2\x5f\x73\xbd\x6a\x5f\x33\x02\xf3\x4d\x1e\xdb\xc7\xa0\xa5\x10\xcd\xf8\xbf\x2c\xf3\xb9\x0a\x08\xcc\xd5\x11\x15\x60\x78\xa0\x0b\xd2\x6d\x68\x68\xb9\xf9\x66\xb8\xd5\x4e\x17\xc1\x23\x86\xe0\xa7\x4a\x25\x94\xf2\x1b\xa8\x12\xb4\x32\xe2\x6e\xfb\xb4\x3b\x02\x0c\x1d\x3a\x16\x81\xc4\x68\x0d\x42\x59\xf6\x50\xe2\xbe\x98\x45\xe5\x2b\x17\x99\x7a\x13\x78\x4b\xa3\x63\xc3\xba\xc6\xeb\x55\x79\x70\x24\x8a\x21\x9c\x83\xde\xc6\x7b\xfe\x78\xd1\xf3\x50\x4d\x8d\x72\x40\x22\x1c\xa2\xee\x03\x6c\xa3\x1d\x84\xe0\x7b\x50\x19\x01\xae\xf3\xf8\x5c\xc5\x04\x6a\x09\x7d\xe7\x43\x6d\x82\x64\xc1\x7d\x2b\x28\x9d\x79\xf2\xfc\xf4\xfe\xf4\x72\x98\xfd\x2b\xc6\xd4\xb4\x80\xae\x82\x3b\xe8\x2a\x96\x79\xfc\x22\x84\xde\xf9\x12\xb8\x33\x13\x2b\x56\x37\x2e\x35\x45\xf0\xfc\x10\xad\x4c\x73\xf2\x47\x23\xd4\xe7\x62\xd3\xb7\xc3\x9d\x22\x53\x09\xa9\x6e\xc9\x16\xcf\xfb\xbf\x11\x72\x68\x22\xc4\xd0\x58\x21\xd2\x86\x61\xcf\xa1\xd1\xef\x79\xed\x70\x0f\x39\x4b\x58\x70\xe2\xfb\x22\xcb\x00\x03\x49\x58\x9a\x68\x4e\x1a\x09\xad\x49\x05\x01\xb6\x9f\x3b\x03\x77\x7d\x53\x62\xdd\x43\x1b\xd0\xb3\x13\x6d\x50\xef\x8d\x60\xe5\xfc\x56\x65\x1e\xff\x91\x7a\x22\xf3\x2f\x74\xeb\x30\xfe\x61\xdf\x74\xa2\x90\x2b\x57\x01\xf6\x8a\x54\xa1\xf6\xc5\x59\x2c\xa8\x86\xac\xd9\xd3\xd7\xd6\x4c\x80\xf0\xc7\x68\x18\x3b\x50\x7b\x34\xc1\xe1\x86\xaa\x91\xcd\x8e\xe9\x66\x71\x5d\x8e\x7e\x22\x86\x8d\xad\x0c\xe7\x89\x63\xf1\xb1\xb5\xf4\x60\x20\x6b\x0e\x00\x3e\xa2\x1a\xaf\x7b\x74\xac\x8b\x61\x18\x08\xe1\xf5\x6d\xfd\xe6\x34\x6d\x1b\x2b\x1d\x77\xbf\x5e\x9b\x6c\xf8\x8a\x26\x69\x9c\x1d\xc3\xec\x87\x0f\xcd\xd7\x7c\x46\x4a\xab\xf6\x33\xd4\xac\xbf\xa9\x2b\xb1\xcc\xd8\x7b\x79\x49\x71\x78\x02\x7b\x40\x37\x69\xe5\x9d\x93\x10\xd8\xc8\x0f\x03\x5b\xbd\x83\x31\x90\x05\x5b\x63\x2b\x9b\xd7\x46\xab\xbe\x16\x6e\x3b\x8e\x4f\xd1\xb8\x8e\xf5\xd1\xe2\xdf\x17\x71\x69\x25\x90\x50\xff\x23\xb9\xdd\x96\xea\x2e\x24\x9e\x7d\x92\x6b\xbf\xe1\x56\x66\xa6\xb3\xfa\xa9\xad\x73\x81\xb0\x80\x19\xa3\x8f\xd0\xf7\x18\x7c\xe6\x48\x4f\x98\x6f\xb4\xef\x58\x33\x70\x5a\xde\xd2\xb8\x6d\xb2\x46\x87\x4d\x75\x32\xa4\x92\x11\xea\x74\x2f\x3e\x58\xa5\x8f\xbb\x17\x53\x62\x49\xb8\x92\xfd\x79\xae\x42\xcd\xf8\x53\xb8\x18\x2b\xc0\xdb\x19\x66\xad\x41\x99\xa5\x0a\xd7\x7f\x65\x2a\x13\xc2\x65\x6c\x99\x4a\x4a\x1e\xe7\x34\xa6\x07\x4d\xfb\x82\x4a\x7f\x93\x19\xa1\xcb\x3f\x86\x45\x4b\x88\x73\xd3\x8f\xfc\x04\x66\x2f\x62\x58\x97\x4a\x23\x52\x35\xeb\xf7\xe0\x3f\xf1\xb7\x52\x71\xc2\xf4\x2f\x41\x8c\xf0\xde\x23\xc6\x77\x3b\xc3\x50\x88\x1a\xb7\x5e\x07\xfb\x1c\x84\xbc\x57\xc1\xa4\x7e\x9c\x9d\xa5\xa5\xd6\xeb\xf1\xd0\xe4\x33\x9a\x67\x81\x65\x8b\xc0\xc2\xb0\xa0\x7b\x16\x17\xf1\x5b\xce\xf8\x48\x70\xda\x17\xd5\x72\xd6\x39\x2b\x50\x64\xd4\x06\x58\x7d\xaf\x0b\x52\x43\xe3\x14\xa7\x1e\x2b\xa0\xdc\xfa\x87\xfe\x98\xf2\x7b\xc0\x55\x96\x45\xc1\x2b\x14\x4a\x59\x70\x42\xc0\x67\x65\x82\x28\x1d\xf4\x8f\x14\xc1\xe0\xff\x9b\x9a\xff\x07\x00\x00\xff\xff\xd0\x27\x6e\x0f\x8b\x06\x00\x00")

func test_certsClientTenant10KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Key,
		"test_certs/client-tenant.10.key",
	)
}

func test_certsClientTenant10Key() (*asset, error) {
	bytes, err := test_certsClientTenant10KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe6, 0x33, 0x33, 0x1f, 0x15, 0xba, 0x6c, 0x67, 0xdf, 0xcc, 0x80, 0xae, 0xad, 0x86, 0xc3, 0xf0, 0x55, 0x2c, 0x10, 0x31, 0xe2, 0x9d, 0xaf, 0xb9, 0xbb, 0x13, 0x2d, 0x84, 0xbe, 0x3d, 0x6a, 0xa1}}
	return a, nil
}

var _test_certsClientTenant11Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xbb\xd2\xb2\x4a\x1a\x85\x73\xae\x62\x72\x6b\x4a\xc4\xc3\x27\xc1\x04\x7d\xa2\x41\x68\xa0\xa5\x01\x31\xe3\xa0\x8d\x28\x22\x22\x27\xaf\x7e\xea\xfb\xa7\x6a\x76\xb0\xf7\x0a\x9f\x5a\xb5\x92\xf7\xad\xe7\xdf\xbf\x81\x84\x5a\xee\xbf\x10\x39\x0a\xcb\xb0\x10\x10\xe4\x0f\x55\x98\x65\xe1\xfc\x8b\x10\x78\xf4\x12\x8c\x16\x04\xd2\xe2\xfe\xe9\x13\x3d\xbf\x6e\x7d\x2c\xae\x4b\x16\xde\xca\x64\x41\xbd\x75\x05\x5c\x28\xef\x6d\x79\xbf\x51\x7d\x54\x21\xe0\x9d\x01\x30\x78\x2b\xec\x68\x8d\x04\x24\x38\xe2\xdc\x26\xe3\x03\x67\x9a\xfb\xce\x6b\xbd\x4c\x34\x39\x19\x02\x08\x28\xdd\x08\x02\x26\x30\x71\x87\x44\xfb\xcc\x99\x66\x54\x29\x82\x98\x0b\x70\x31\x46\x75\x56\x58\x45\x26\x26\xc2\xc9\xc5\x60\x72\x05\x4c\x7f\xa1\xfb\x25\x13\xab\xc0\xff\x19\xc3\x6c\x22\x15\xe0\xff\x1b\x6b\x04\x0a\xff\x1a\x53\x52\x4c\x38\x03\x1b\x0a\x56\x21\x41\x13\x33\x23\x1a\xf5\x49\xbc\x55\xf3\x2f\x71\x18\xb8\xff\xe1\x60\x62\x88\x09\x32\x4a\x49\x6e\x0c\xa8\x14\x05\x2d\x0d\xac\x6c\x8d\x39\x81\x0a\xe0\x21\x00\x1b\x0b\xe2\x11\xfc\x16\x6c\xd0\x58\x10\x70\xa4\x13\x7c\xd8\x87\xa2\xe5\x85\x41\x3b\x2b\xb8\x77\xe2\xba\x2a\x32\x27\x7a\x0f\xfe\x83\x79\x46\x60\xc7\x22\xa9\xa6\xb1\x5d\x2b\x5b\xaf\x4c\xa7\x40\xbd\x5a\xb7\x16\xe0\x0b\xeb\xa3\xd0\xdb\x6c\x38\xdb\x5f\x48\x79\x64\xdd\xd5\x27\xdb\x55\x1c\xd7\xc4\x5c\x5e\x23\x4f\x63\xfb\x1d\x8f\x4f\x02\x14\x61\xe2\xcd\xf1\xad\xb5\x9c\x4c\x11\xd3\xa1\xbe\xec\xc3\xc7\xde\xb2\xbc\x09\xa3\xc0\xb0\x79\x5b\x90\xfe\xf0\xe0\xd1\x21\xf8\x04\x5b\xf4\x35\xe7\x6f\x3a\xbb\x99\x96\x9a\x11\x5d\x77\xfe\xe1\xe2\x6c\x96\xee\x6d\x95\x35\x43\x39\x2f\x47\x05\xcd\xe7\xfb\x71\x42\x31\xa1\x7e\xba\x48\x7e\xfc\x8f\xa0\x13\xd6\x24\x59\x08\x73\x48\x33\x9f\x38\xf5\xfb\x53\xa1\xe9\xe8\xe2\xdd\x31\xfd\xe6\xe2\xfc\xce\xe3\xfb\xc2\xd6\x5b\xbb\xee\xf6\x10\x85\xca\xa0\x79\x65\x8d\x9c\x80\x37\xe3\xea\x68\xfb\x7d\x7f\x3b\xb7\xc3\xc1\xb3\x83\x8b\x89\x69\xb4\xe1\xba\x7e\x70\x6a\x8c\x50\xb9\xbb\xe5\x13\xb7\xdf\xdb\xed\xc3\xd9\xea\xee\x30\x8d\x51\xf3\xca\x9f\xbe\xa2\xfa\xe7\x75\xbf\xe9\x47\x55\xcd\x02\xda\xb2\x0a\x69\x8b\x30\x38\x27\xae\xaa\xe7\x5d\xd3\x34\xc7\x69\x0f\x1d\x61\xfe\x64\x57\x2b\xf8\x00\xc9\x20\x00\xb4\x92\x49\x33\xca\x24\x1f\xb1\x4c\xb0\x12\x1d\x55\x1f\x70\x73\x09\x01\xc7\x40\xc6\x92\x41\xf5\xf7\x74\xc5\x81\xf3\x98\x41\x4e\x11\xea\x28\xe0\xa1\x01\x47\x86\xa0\x94\x6f\x28\x89\x01\x79\x8e\x81\x00\xd7\xdf\xbf\x50\xcc\x80\x11\x8a\x41\x2c\xa1\x38\x07\x37\xb3\x6b\x37\x5b\xaa\x11\xaf\xbb\x17\x25\x7c\x3b\xa8\xe8\x56\x0f\xfb\x82\xc1\xea\xb7\x6c\x1e\x09\x71\x2a\xd0\x49\xf9\xe8\x32\xcd\x2d\x33\x5a\x0e\x4a\xbe\x0e\x10\x9c\x9b\x3e\xa3\x7a\x95\xc4\xb3\x09\xcd\x3d\x00\x80\x9a\x04\xfc\x53\xc8\x88\x79\x72\xb0\x9b\xb3\x55\x0e\xb9\x0b\x38\x71\x14\xc8\x01\x96\x92\x40\x40\x7d\xb4\x38\x9d\x1e\x55\x98\xa9\x5a\xbf\x42\x4d\x3d\x3a\xaf\x75\x9b\x47\xdb\xb1\xee\x85\xc5\x86\x43\xca\xa7\xd5\x8e\x3f\xd1\x6e\x2c\xd2\x2f\xe2\xf6\x0d\x7d\xca\x67\xaa\x38\xa1\x53\xab\x5d\xdf\xa5\x9f\x2b\x7c\x06\xc8\x7d\xee\xb2\x85\x71\x2c\x57\xcf\xb3\xf8\x5a\x31\xfa\xce\x9f\x3a\x29\x63\x47\x93\x8b\xc7\xec\x3e\x56\x7b\xd9\x0d\x53\xa0\x35\xb2\xf7\x23\xdf\xbb\x3e\x17\x8a\xae\x4d\x3b\x76\x6d\xdf\xa4\x38\x77\xeb\x72\xda\xbd\x92\x1f\x46\x4e\x8b\xc5\x14\x80\x4b\xa5\x9d\x5e\x65\x45\x6e\x46\xed\x95\xaf\x70\x53\xf7\xaf\x0f\x3d\x69\xb0\x5d\xad\xd9\x1b\xd9\x94\x6d\xbe\xc4\x55\x12\xef\x8c\x33\x8f\x0a\xbc\x5d\x13\x37\xe9\x57\xe6\xae\xd3\x4f\xe3\x93\x64\xf7\xf6\x6e\x3c\x53\x22\xf8\x1e\xcd\x37\xd3\xac\x7a\x36\x08\x33\x2a\xe9\xc5\x2f\x5e\xe9\x44\x8d\x6f\xe0\xc0\xeb\xee\xa5\xa8\x51\xa3\xf5\xd3\x75\x19\xe8\xb4\x11\xb3\x95\x24\x83\xba\xc1\xab\xc5\xae\xd5\xde\x97\x57\xaa\x17\x1f\x50\xfe\x9c\xd6\x97\xd3\xed\x18\x37\xc3\x53\xd2\xf8\x7c\xdf\xfc\x8c\xd5\x60\x87\xb4\x24\x99\x18\x15\x53\x9f\x66\xa9\x93\xea\x67\xaf\x91\xa2\x6e\x71\x03\x8b\x97\x03\xc4\x21\x5d\x9f\x96\xce\x39\xff\x8f\xf2\x47\x5c\xc4\xc5\x7f\x97\xd9\x7f\x03\x00\x00\xff\xff\x7b\xd1\xb9\x11\xe9\x04\x00\x00")

func test_certsClientTenant11CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Crt,
		"test_certs/client-tenant.11.crt",
	)
}

func test_certsClientTenant11Crt() (*asset, error) {
	bytes, err := test_certsClientTenant11CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0x9e, 0x5d, 0xe3, 0x3c, 0x4d, 0x27, 0x96, 0x1c, 0x9d, 0x28, 0x4b, 0x4, 0x7c, 0x75, 0x56, 0xa2, 0xaa, 0x10, 0x8d, 0xf7, 0x1f, 0xb6, 0xa7, 0x7e, 0x50, 0x2b, 0xa, 0x26, 0x1c, 0xf4, 0x5}}
	return a, nil
}

var _test_certsClientTenant11Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xa3\x40\x02\x85\xe1\x9c\x53\x4c\x4e\x6d\x09\x27\x4c\x30\x41\x37\x34\x08\x2f\x3c\x22\x43\x18\xe1\xbd\x84\x39\xfd\xd6\x4e\xbc\x2f\x7d\xc9\x9f\x7d\xff\xf9\xdf\x20\x52\x54\xeb\x8f\xeb\x81\x3f\x4f\x57\x0d\x81\x8f\xfe\xe8\xe8\xf5\xef\xc1\x4c\x55\x45\x13\x50\x21\x00\xba\x08\x1c\x04\x7e\x2e\x38\x4b\x19\xb1\xed\xc3\x75\x17\x11\x4d\x06\xa2\x85\x38\x3a\xc9\x94\xbb\xee\xbe\x54\x05\x75\xd7\x52\x2a\x9f\xe9\x1b\xee\x8f\xd1\x1a\x6c\xd8\xe3\x54\xe7\x0f\xa0\x1b\xa3\x0b\xa5\xaf\x8d\xa4\xe7\xa3\x52\x03\xdf\x78\x5c\x87\x9d\x87\xdd\x54\xc1\x1b\x4d\xfa\x5b\xf3\xb4\x5b\xb9\x23\xf6\x47\xa8\x48\x6b\x37\xce\xb5\x48\x11\xbc\x97\x0c\x3f\x19\xd3\x4a\x51\x94\x56\x67\x6f\x2b\xaf\xd5\x07\xd7\xa8\x93\x40\xf6\x82\x25\xf8\x3a\xeb\xc1\xaf\xd4\xda\x44\x42\x5f\x91\xee\xc6\x49\x67\x5c\xe3\xcf\xeb\xb5\x45\xac\xc1\x64\x3f\x1e\xac\x7d\x82\x32\x07\xeb\x2a\xd8\x50\xbf\xde\xbe\xb8\xe0\x58\x1d\x61\x84\xcf\xf6\xe0\xa8\xfe\x3a\xc4\xfb\xcc\xbd\xf6\x35\xf0\x1d\xbc\x8d\x56\x1a\x51\x29\x2d\x4f\xcf\xfa\x97\xd6\xd3\xf2\x04\x4e\x67\x08\xcd\x98\x7c\x6a\x8c\x68\x75\xd3\x0a\xbc\x86\x5b\xc6\x3e\x5d\x4e\xbf\x6e\x87\x6a\x3f\xba\x02\x3d\x4b\xcf\xbb\x7f\xf6\xcf\x58\x8c\x83\x19\x88\x33\x5e\x24\x1e\x5e\xfa\x6f\x3e\x93\x53\x3d\xd6\x2e\x41\xa2\x72\xee\x6b\x60\xab\x65\x29\x44\x35\x37\xea\xbe\xfd\x3a\xd4\x47\x52\xfe\x8c\x0d\x5d\xd7\x51\x56\x02\x8f\x38\x70\x8a\x3e\xd1\xe2\xa8\x12\x70\x00\x04\xa3\x0a\x81\x23\xa2\x7e\xa6\xbe\x0e\x34\x60\xba\x38\x24\x26\x3c\x1c\x36\xb6\x91\x85\xf3\xd9\x62\x70\xc3\x49\xbd\x0b\xc8\x26\xc7\xf6\xbe\xe7\x14\x77\xaf\xc1\xfe\xce\x66\xf9\xc9\x46\x8f\x3a\xff\x39\x85\xd6\xf0\x34\x53\x76\xaf\xe8\x8a\xf3\x5a\x3c\x0e\x94\x63\x5d\x39\xb5\xef\xe9\x22\xbb\x0e\xf7\xfc\xe1\x33\x37\x5e\x45\xdd\xe4\xa0\x71\xbf\xfd\x01\x25\x96\x1c\x66\xba\xb6\x64\xa7\x55\xaf\xb9\xa3\x36\x58\x71\xc3\xd6\x0e\x15\x2b\x48\x17\xb1\x6b\xa8\xc4\x31\x73\xc0\x75\x85\xbf\x97\xab\x31\x82\x77\x94\x75\x85\xf5\xea\xdd\x8a\xa4\x12\x85\xc8\x81\x0e\x6e\xa9\x7a\xfa\xe2\x47\x37\x0b\xdf\x8d\x13\x44\x1b\xd2\xd7\x4b\x3b\xd9\x0f\xfa\x57\xd0\x96\x3f\x2e\xc0\xd0\xb6\x11\xd6\x37\x21\xac\xab\x94\x0d\xb3\x00\x61\x27\x9a\x8d\x1c\x20\xf2\xe2\x54\xb6\xa5\x7e\x4b\xf9\xc3\x05\x74\x5c\x3c\x27\x72\x2c\xe1\x27\x73\x25\x15\xcc\xcc\xc8\x4b\x36\xc0\x8d\xce\x17\xcc\x8a\xea\x80\xa1\xf3\x1e\xaf\x34\x04\xcd\x36\x81\x92\xa2\xdb\xcf\xf8\x76\xd1\xca\xd1\xed\xec\xc7\x52\x33\x6d\xf6\x61\x13\xdf\xca\x69\xf9\x2e\x13\x7d\x2b\xa7\xbb\xc0\x66\x67\xa7\xed\xf5\x87\x4b\xb1\x0f\x2e\x93\x33\xb2\x21\x18\x15\x08\x2c\x3f\x51\x3d\x65\xda\x98\xbe\x80\xd9\xa6\x08\x03\xe0\x1f\xd5\x9b\xe1\x6f\x1e\x69\x69\x0b\x6c\xee\xf6\xc0\x84\x3e\xe3\x46\xf0\xd4\x1d\xf9\x6d\x99\xe1\x89\xd1\xcb\x26\x36\x51\xb0\x27\x95\xfc\xd5\xea\x3b\x3f\xc2\x5e\x02\x2c\xb8\x7f\x1d\x89\xef\xb2\x9f\x7b\x53\x2b\x52\xb7\x38\x42\x0e\x6f\x3d\x79\xe8\x40\xbc\x69\x28\x21\x51\x4c\x38\x16\x31\x92\x1f\x03\xd3\x68\x69\x62\xb8\xa2\x01\x16\x65\xa6\xe7\x3d\x4e\xd8\x6f\xef\x43\xfd\x86\x10\xf7\x34\x22\xe4\xca\xdf\xd3\xe4\x5b\x75\x99\x9a\xae\x87\xd5\x42\x2a\x6f\x02\xc5\xf8\xe3\xf8\x57\x6c\x5b\x2d\x36\xca\x30\xa7\xcc\xb5\x2d\x48\xa1\xb4\x68\x3d\x93\xc9\xad\x23\x0c\xf1\x8c\x27\x45\x7c\xd8\x69\x8f\xc4\x0e\x86\xa0\x0b\x0b\x3e\xd1\x9e\x11\x9a\x0d\xe3\x45\xe0\x82\xe5\x95\xfe\x6b\xe2\x10\x72\x30\xc5\xdc\x1f\x97\xf0\x0e\x4c\xf7\x55\x4b\x7a\x24\xf6\x65\x60\x7c\x4a\x9f\x92\x49\xcd\x65\x55\x9e\x36\x57\x02\xc6\x61\x23\xad\x8a\x7d\x7e\xa6\x02\x98\x3a\xab\x1f\x7d\xec\x70\x6d\x73\x3c\xbf\x9f\x08\x0b\x15\xfc\x14\x27\x3d\xb4\x1e\x40\x0c\x57\x11\xc2\xf0\x12\x6d\x56\xaf\x5d\x66\xd8\xb9\x7b\x5d\x2f\x70\x7c\x4b\xb2\x26\x80\x51\x01\x8f\x27\x53\x37\x92\xe6\x42\xeb\xfd\xea\x7c\x63\x8e\xf4\x6e\xc0\x56\x61\x2b\x13\xd6\xf0\xcd\x91\x74\x55\xf9\xd2\xaf\x2c\xfb\x6d\xe0\xce\x90\x11\x49\x41\x6e\x65\xd8\x74\x35\xe5\x97\x20\x68\xdc\x39\x7a\xe6\x5b\x92\x60\xea\x57\xd6\x49\xdf\x12\x79\x8e\x6a\x27\xc4\x02\x27\xc8\xf2\x63\x9c\xa3\x4b\x8a\xf3\x67\x3a\xeb\xc5\x42\xbe\x78\x61\x5a\x2b\xda\x36\xea\x0b\x3f\xc8\x6f\x3b\xc2\x1f\x7f\xbb\xc4\x36\xb6\xc5\x1c\xd2\x54\x50\x78\x04\xf7\x7e\x88\xb8\x34\xd3\x08\x73\x34\x56\x09\x83\x35\xbd\x3a\x11\x8f\xeb\x62\x3e\xac\x8d\x5a\x21\x12\x3f\x2f\x04\x06\x2d\x31\x37\x62\x55\x99\x60\x59\x51\xcb\x91\x61\x4e\xbc\x83\xc7\x9a\xbe\x0d\xeb\xc1\xc0\xa2\x79\x11\xdd\x85\x11\xf7\x40\x42\x9c\xd6\x2a\x5c\xf4\x9c\x9f\xdb\xc2\xaf\x41\xb7\xd8\x4c\x71\x23\x04\xce\x66\xe6\x56\x37\xf7\x3d\x4a\xa2\xaa\xe4\x13\x7b\x3f\x8d\x22\xaf\x26\xb5\x7d\xcb\x5b\x51\xd4\xd5\xb4\x53\x07\x46\xe0\xf7\x62\x64\x6d\xdb\x2c\xbb\x24\x55\x59\x49\x60\xe8\x56\x88\x9d\x6c\xff\x8e\x5f\x94\xc0\x82\xb7\xec\x1b\x0b\x03\x43\x71\xb9\xc6\x1c\xdb\x3e\xab\x7f\x3d\xee\x45\x29\x5f\xd4\x5e\x9e\x08\x37\xec\x2b\x69\xab\x2c\xb4\xe2\xe7\x05\xfc\x89\x61\xc9\xe1\x0e\x5a\xe0\xa9\xaf\x77\xe1\x2f\x90\xd7\x87\x76\x6f\xa7\x75\xee\x76\x26\xf2\xc9\xf6\x9e\xd3\x3c\x3e\xab\x84\x69\x24\x57\xb4\x22\xa6\xd6\x33\xec\xfa\xde\x07\x2a\x49\xe4\x3a\x6f\xd7\xd5\xc8\x86\x33\x56\x6a\xeb\xb3\x6c\x3a\x2b\x0a\xb2\x78\xb6\x93\xa4\x42\x51\xec\xf4\xdb\xae\xe2\xee\xa4\xfa\xe7\xe5\x7d\x97\x74\xf6\x4b\x95\xb8\xe7\x4b\x1a\x62\x19\xc8\x04\x49\x15\xaf\x1e\x7f\xd8\x26\xdd\x11\xa3\xde\x16\x47\x0e\xda\xf1\x36\xbe\xe7\xd8\xf7\x15\x42\x4e\x37\x5d\x3d\x03\x63\x95\xe4\xd8\x39\x42\xfb\xe8\x54\xf0\xf7\x2f\xf6\x8f\x15\x64\x49\xff\x9f\x9b\xff\x06\x00\x00\xff\xff\xc6\x16\x2d\x8a\x8f\x06\x00\x00")

func test_certsClientTenant11KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Key,
		"test_certs/client-tenant.11.key",
	)
}

func test_certsClientTenant11Key() (*asset, error) {
	bytes, err := test_certsClientTenant11KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc1, 0xc6, 0x3b, 0x4f, 0xe0, 0xe5, 0x85, 0xc7, 0x55, 0xc9, 0xbb, 0x77, 0x43, 0x11, 0xbc, 0xcd, 0x8, 0xf2, 0x97, 0x9b, 0x3b, 0x48, 0xf8, 0xc1, 0xa0, 0x12, 0xf5, 0x0, 0xb5, 0xee, 0x41, 0x5c}}
	return a, nil
}

var _test_certsClientTenant2Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x4b\xaf\xb2\x4e\x1a\xc4\xf7\x7c\x8a\xd9\x9b\xc9\x41\xbc\xc1\xe2\x5d\x3c\xdd\x34\xd0\x6a\xe3\x69\x6e\xda\xec\x10\xe4\x26\x8a\xdc\x04\xfc\xf4\x93\x73\x26\x99\x59\xfc\xdf\x5a\xfe\xf2\xa4\x92\x27\x95\xaa\x7f\xff\x08\x11\x93\xda\xff\xc2\xc4\xf1\xa8\x41\x31\x78\xe4\x97\x4a\x8c\x52\x3d\x2e\x31\x86\xaa\xc9\x60\xa4\x08\x32\xca\xd3\x6a\x3d\xd6\x78\xf1\x1a\xf6\x6b\x7f\x5b\x8d\x3b\x4b\x79\x35\xbd\x07\x36\xca\xee\x4d\x7e\x2f\x4c\x6d\x94\x11\xf0\xce\x00\x1d\x5a\x89\x39\x74\x24\x20\xf4\x80\xf3\x03\x19\x2b\xfd\xaa\xd8\x6d\xfc\xd0\x72\xa1\x64\x93\xe1\x81\x87\x32\x3b\x40\xc0\x3c\x9d\xd8\x6f\xa1\xf4\xf3\x55\x31\xca\x08\x23\x9d\x7b\x70\x33\x46\x79\x96\x58\x49\x26\xe6\xf9\x93\xad\xc3\x64\xeb\x55\xf4\x03\xed\x0f\x99\x58\x09\xff\x63\x4c\xa7\x13\x29\x81\xff\xd7\xac\xf6\xb0\xff\x7f\x33\x29\xd2\x09\x67\xb0\x36\x61\xe9\x13\x3c\x31\x2b\x30\x83\x41\x9c\x37\x72\xfc\x21\x07\x06\xd9\x2f\x87\x89\x21\xf6\xf3\xa6\x4b\x47\x9d\x8b\xfd\xa1\x0e\x69\xfe\x8e\x6d\xe0\x04\x49\x88\x83\x9e\x65\xe4\x1b\x74\x8c\x81\xd7\x38\xcb\x08\x82\xa3\x56\x62\xd9\x5e\x04\x61\x6f\x19\x39\x39\x75\x44\x6b\x40\x69\xf8\x97\xbc\x51\xb7\xbd\x38\x57\xa7\xc5\xba\x9d\x1b\x79\x1b\x36\x54\x72\x1d\xb2\x0c\x3a\x99\xc7\x91\xfc\x1c\x0b\xed\xde\xcc\x4f\x77\xca\x9b\x65\x60\x9b\x4a\x0a\xd5\xc3\x20\x61\xa4\x9d\x6f\xab\x0a\xce\xf4\xba\x18\x56\x93\x73\x1c\xd2\xa3\xa5\x0a\xdf\xbb\xda\x7b\xb9\x93\xe6\x80\x47\xdd\xb2\xc0\x2c\x58\xf7\x4a\xed\xa6\x27\x7e\x95\x2f\x45\x8d\x51\xb5\xf1\xcb\x97\xae\x86\x6f\xf5\x5c\x9f\xdc\x56\x4e\x8f\xdd\x6d\xa0\xac\x0d\x65\xeb\x85\xc6\x21\x76\xde\xdf\x61\xfb\xbd\x97\x9a\x65\xdf\x2b\x4b\xbb\x6c\x41\x8f\xc2\xe7\x23\x3d\xa8\x77\xfc\x6d\xd0\xb5\x2c\x62\xf2\x59\x6d\x8d\x9d\xd7\x64\xa9\xa3\x45\xc8\x1a\xea\x3a\xa7\x7d\x2f\x96\x7d\xb7\xd6\x16\x02\x33\x91\x40\x31\x4a\x17\xaf\x6e\xc2\xb2\x29\xab\xab\x9e\x38\xef\x5c\x53\xd4\x6d\x72\x25\x27\x98\x83\xbd\xda\xa4\xbc\xe2\xb6\x5d\x4d\xe2\xec\x1b\xbd\x4c\x70\x1a\x7c\xb5\xc4\xfb\x72\x6a\x4c\xae\xd1\x45\x33\x9a\xcd\x53\x6a\x8a\x59\xac\x58\xc7\xd8\x9d\xb6\xfc\xe8\xe6\xed\xed\xf9\x79\x3f\x94\xdb\x72\xf2\xf2\x9b\xaa\xc8\x59\x7f\x7c\xc9\x3b\x6b\x89\x34\x86\x61\x24\x00\xd1\x09\x15\x25\x46\xf9\x07\x4e\x3f\xb1\x4a\x16\x57\x11\xa4\x2a\x41\xc0\x30\x8a\x60\xb4\xb8\xd0\x03\x47\xae\x10\x12\xa3\x01\x82\x1e\x46\x81\x10\xf7\x2d\x18\xa9\x89\x71\x67\x02\xf7\x0d\x34\x32\xc4\x90\xfa\x13\x71\x22\xd1\x91\x0b\x86\x22\x30\xec\xea\x40\x6f\x73\x5b\xde\xaf\x82\x6f\x67\x47\x21\x66\xd7\xed\x95\xcf\xd9\x7f\xad\x99\xee\xff\x1e\x13\xce\x07\x86\x67\x8c\xcf\xd3\x5b\x28\x46\x17\x99\xda\x47\x4a\x28\xb5\x0e\xc5\xa6\xbb\x2a\x76\x7e\xa5\x31\x49\x47\x00\x10\x31\x87\xbf\xe9\x2f\x7d\x90\x00\x4e\x18\x38\x81\x78\x46\x7c\xe9\xdd\x9b\x22\xd5\x71\xfa\xe5\x5e\x94\xdd\x3c\x66\x6e\xa2\xcc\x9f\x54\x54\xbd\xa9\xb5\xce\x77\x7a\x5a\x1e\x70\x37\xb7\xc3\xe6\x72\x5a\xa7\x5f\x3e\x17\x7b\xb5\x93\x86\x2d\x62\xeb\x7a\x78\xd0\x79\xcf\xdc\x8c\x24\x76\x17\xee\x12\xfc\x7e\xd8\x97\x2c\xae\x16\x23\x6f\x3f\x24\x55\xf2\xb5\xf3\x9e\x4e\xc6\x6b\xab\x59\xb0\xf5\xf1\x6b\x73\xbf\xd4\xd1\xda\xd2\xb6\x8b\x8f\xf4\xcc\xc2\x04\x45\xed\x5d\x75\x5f\xc7\xd9\xc7\xcf\x24\xe9\x76\x53\x54\x4f\xab\x46\x5f\x66\xf7\x90\x2e\xe2\x59\xbc\x83\xf9\x82\x7b\x68\x94\xb4\xdd\xf4\xe1\xa4\x6e\xe5\xd7\x21\x0e\xd3\xdb\x67\xbe\x55\x92\xad\x0e\xde\x88\x3d\xb6\xe0\xbb\x3c\x56\x78\x5a\x0b\x54\xe0\xbb\x51\x4f\x8b\x2c\x1e\x8f\xf6\x53\x0b\x90\xba\x98\xa6\xb7\xbf\x58\xc5\xe5\xad\xc0\xb3\x33\x6f\xe0\xa8\x02\x73\xfd\xd0\x92\x8f\xa6\x34\x3b\xe2\xc6\x33\xd5\xb1\xee\x85\x96\xc0\xe6\x71\xb5\x0e\x14\x74\xe3\xf0\xbd\x9f\xd2\x8c\x9f\x3b\xf3\xbd\xb9\x65\x1b\xa7\xc2\xe8\xb2\x4c\xd8\xa2\x9a\x56\xaa\xb8\xa4\xb2\x1b\x38\xf9\xca\x0c\x2d\x45\x5a\x75\xe6\xa6\xde\xd5\x6c\xa5\x0c\x5e\x2a\x4f\x3e\xc8\xee\xab\x1a\x46\x4d\x5c\x76\xac\xc8\xfe\xfc\x91\x7e\x87\x8b\xd8\xfa\x3f\xc7\xec\x3f\x01\x00\x00\xff\xff\xa6\x54\x07\x35\xe9\x04\x00\x00")

func test_certsClientTenant2CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant2Crt,
		"test_certs/client-tenant.2.crt",
	)
}

func test_certsClientTenant2Crt() (*asset, error) {
	bytes, err := test_certsClientTenant2CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.2.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x77, 0xa0, 0x3f, 0x6e, 0xc9, 0x77, 0x5e, 0x55, 0x70, 0x61, 0xd7, 0xb, 0x1a, 0x98, 0x79, 0x99, 0x21, 0x64, 0x4b, 0x55, 0x56, 0x8e, 0x54, 0x7c, 0x6e, 0xd7, 0xb6, 0x64, 0xa0, 0x7d, 0xa5, 0x10}}
	return a, nil
}

var _test_certsClientTenant2Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xa3\xd0\x01\x85\xe1\x9e\xa7\xd8\x5e\xe3\x21\x49\x5c\x28\xb6\x00\x04\x88\x1c\x2f\xa9\x23\x07\x91\x41\xa4\xa7\xf7\x78\x6b\x9f\xf6\x34\x7f\xf7\xfd\xe7\x7f\xe3\x04\x49\x36\xfe\x38\x2e\xfb\xc7\x72\x64\x9f\xf5\x84\x3f\xaa\x10\xfd\x7b\x10\x5d\x96\x85\x89\x95\x39\x96\x55\x79\xd6\x16\xd8\x9d\xd0\x35\x9b\x7c\xf9\x3d\x96\x05\x82\x4d\x1d\x1e\x31\xbe\x93\xe9\x8d\x7a\xc3\x3d\xe3\x75\x02\x01\x68\x76\x75\xf1\xa6\x7e\xac\x15\xc1\xf3\x03\xe4\x76\xb8\x73\x71\x4b\x5e\x23\xdc\x45\xcd\x35\x49\x5a\x7c\x88\xa5\x31\xcd\x07\x11\x74\xba\x05\x8f\x41\x01\xb9\xa8\xde\x29\x50\x8a\xc2\xef\x45\xaf\xe5\x59\x3b\xc6\x8a\x0d\xee\xad\xf8\xdc\x7c\x23\x81\x2c\x9f\x61\x43\x26\xb5\x42\xbf\xb8\xdd\x29\xd4\x4a\x96\xc2\xce\x35\xbf\xd6\xd9\xa3\x67\x52\xbd\xd4\xdd\xa1\x7f\x27\xf5\xac\xae\x6d\xb0\x8b\xef\x87\x7f\x9d\x12\xcd\xf4\x2b\xdd\x2f\x01\x41\xa6\x08\x24\xcc\x95\x35\xa6\xbe\x88\xe9\xe5\xb2\x65\x1a\xb6\xad\x53\x1f\x9e\x55\x8e\xe1\x66\xce\x1c\xf3\xc1\x47\xa1\xa0\x9a\x46\x68\x08\xbc\x0d\x88\xbb\x25\x5f\x95\x7c\xd6\x18\xaf\x71\xb9\xd9\x4c\x3d\x62\xce\xa6\xbf\x1a\xb8\xf4\xf8\x90\xe9\x3d\xe1\xab\xfd\x7c\x2b\x70\xb8\x26\x86\xf7\x59\x8c\x08\xc5\x3a\xb6\x03\xd2\xb6\x15\x26\x7c\xac\x8e\xc5\x48\x95\xec\x6c\x53\x89\x05\x4b\x5f\xcc\x9a\xd2\x66\xc8\x75\x1c\x97\xdd\x6c\xec\xa6\x4a\x1b\x55\x9a\x8f\x34\x06\xa1\x68\x8a\xe0\x4e\x5d\x1e\xfb\x0d\xde\x5a\xc2\x0f\x76\xc8\x6f\xd6\x66\x39\x76\x94\x39\xd6\xe6\xf9\x29\xaf\xec\xaf\x65\xa4\xf9\x2c\x0e\xc8\xf2\x14\x65\xd1\x72\xa1\xa0\x6d\x91\x78\x8c\x47\x4a\x84\x63\x8c\x35\x59\xa9\xe5\x6d\x20\xf6\xd1\x06\xd4\x3b\x2f\xb8\x37\x53\x8e\x43\xcc\xd3\x80\x06\xf5\xda\x9e\x3c\x77\x7c\xb4\x10\x50\xdf\x1b\xa9\x4b\x16\xab\xaf\xf5\x3a\xc0\x7c\x7b\x46\x38\x45\x72\x95\xd0\x22\xf7\xd3\x17\x62\x63\x72\xe0\x90\x0e\x27\xb2\x70\x25\x64\x5f\xff\x26\x31\xe4\x43\x71\xf1\xda\x5e\x31\xdb\x39\x5e\xc0\x21\x46\x48\xea\x57\x90\x2d\x41\x6f\x3c\x2e\x1e\x27\x5a\xe1\x49\x9c\x97\xf4\x19\x28\x85\x7b\xfb\x0c\xc4\xa2\x05\x8f\xfd\xc4\x02\xa3\x29\x54\x03\x26\x3a\xcb\x5e\x6d\x1d\xbd\x57\xa4\xc5\xa3\xb7\xbe\x3e\x7a\x24\xbb\xb2\x9f\x2c\x24\x4a\x1f\x71\xcd\x80\x32\x22\xf7\x0b\xc2\x92\x7c\x53\x04\xfd\xe1\x1a\x23\xca\x89\x19\x4b\xf8\x63\x6f\xc8\x6c\x5e\x37\xc9\x00\x7a\x66\x72\x83\xc8\xa5\xc7\x76\x58\xca\xa4\x86\x08\x10\x54\x4b\xd7\x54\x2e\x94\xf2\xd7\x2a\x49\xbe\xb6\x54\x9a\xa0\xbe\x3c\xfd\x3d\xea\xaf\xa1\x27\x9a\x3d\x14\x5c\x72\xfe\x62\x62\x80\x75\x54\xd7\xd4\x35\xd1\x46\xb2\x56\xc6\xe7\xaa\x35\x25\xda\x21\x8d\x68\x37\x60\x8c\x6a\x76\x94\x38\xd6\x7c\xdb\x87\x4b\x2a\xf5\xa3\xfc\x5a\xed\x23\xc1\x2b\xe6\xe7\x1d\xe2\xf1\xdd\x54\xa2\x26\xc4\x36\xbd\x2c\xef\xdb\xa7\x94\xdc\xaf\x23\x9b\xf8\x81\xb4\x29\x0a\x12\x36\xee\x0c\xe1\xa5\x88\xba\x5f\x0b\x4c\x0d\x22\x0b\xa0\x3d\xd1\xa8\x94\x67\xd0\xb6\xa1\xdd\x5d\xf0\x64\xd7\x32\x02\x96\x51\x2c\x09\x0d\x9d\x5f\xb7\x46\xf0\x22\xaf\xb7\x68\x87\x43\x1b\x7c\x91\xba\xd8\xe4\x06\xe7\xe8\x8a\x35\x4a\xda\xe4\x7e\x9d\x4f\x32\x1a\xa5\x9e\xf6\xd6\xf6\xe4\xc8\x10\xe8\xf3\x7e\x28\x4a\x06\x99\x0d\x83\x0f\x01\x3e\xb0\x9e\x0e\x88\xcc\x4e\xff\x15\x1b\xc3\x8e\x98\x8f\x9d\x98\x2e\xa9\xc5\x65\xba\x5f\x4f\x51\xea\x58\x13\x48\x25\x85\x63\xc3\x34\x95\x91\x7b\xde\x4d\x8b\xf6\x2d\x20\x22\x9f\x73\xa9\xd7\x89\x89\x0a\x5a\x85\x28\x7e\x36\x3b\x7f\x26\x43\x7c\x21\x65\x9f\x99\x3c\xf7\x5b\xe1\x9e\x96\xe2\x26\xfb\xa7\x7a\xfa\x55\xe7\x5a\x83\xdf\x14\x7e\xd3\xcc\x58\xd7\x6a\xae\xb5\xc4\xb8\x6c\x26\xfa\x01\x29\x5e\x26\x0a\x34\x87\xc5\x65\x82\x1f\x5b\xdc\x2f\xc4\xa1\x6b\x59\x48\x6f\x6f\xdb\xe3\x93\x3f\x68\x3e\x95\x3f\xe9\x66\x2c\xd4\xc3\x22\x13\x26\x89\x2a\xe3\xca\xee\xb7\x91\x4c\xff\x92\xe5\xe3\xa9\xb2\xd0\xa5\x52\x7c\xc5\xa6\x84\x83\x9f\x31\x44\xe2\xb3\x70\x2f\x8c\x7f\x2d\x28\xe0\xf5\xda\xa4\xe2\x6e\x58\xf5\xc8\xa0\x7d\x69\x22\x95\x6a\xa3\x6e\xec\x4b\xca\x69\x24\x11\x65\x7f\x82\x6d\x49\x4d\x58\xbb\xb7\xf9\xd0\x3a\x95\x85\x32\x35\xed\x48\x70\xd4\xb9\x37\xcb\x67\x2f\x41\xf0\xc8\x51\xd8\x6c\xfa\xa3\xd4\xb5\x3d\xf3\xbf\x0e\x56\xa1\x9a\x5a\xec\x97\x81\x2b\x95\xa8\x57\x92\x70\xac\x63\x5a\x74\x46\x19\xb8\x36\x7b\x10\x85\x90\xce\x0e\xf2\xad\xe7\xab\xd0\xcb\x6b\x27\xe3\x4d\xca\x2f\x62\x69\xa5\x7b\xfc\xe5\x2f\x76\x94\x58\xdd\xb1\x1f\x90\x50\xc5\xdf\x4e\x9d\x86\x51\x6a\x4e\x4e\x10\x72\x72\x13\xea\xe2\xbf\x4e\x2e\xf0\x96\xbc\x7b\x21\xfc\xe5\x66\xb4\x9d\x32\x61\xc0\xa1\x9a\xdd\x03\x07\xff\xbc\x52\x4e\x3f\x40\xd5\x07\xf1\x7d\xa6\xbd\xbd\xb3\x54\xaa\xf2\xba\xe2\x7e\x78\x5e\xcb\x88\x95\x4a\xd0\xf6\xd9\x15\xed\x1c\x58\xf3\xe9\x20\xbd\xfa\x0b\x75\x03\xdc\x0d\xfa\x6b\x18\x9a\xc9\x68\x80\xfa\xe5\xdb\xe9\x86\x42\x60\x6e\x3a\xff\x60\x8d\x55\x61\xcb\x89\x7e\xb4\xc5\x2d\xd2\x3d\x65\xf3\xa2\x3c\xb8\x1b\xf0\x68\x6d\xb6\x0f\x12\x20\x61\xda\xbb\xe9\xeb\xcb\x57\x11\x07\xe0\x5c\x0e\x51\xcb\x8c\x01\x30\xe8\x49\x22\x72\x86\x6d\xb5\xaa\x29\x06\xe2\xa1\x32\xca\x2e\x68\x5a\xa8\x08\x96\x26\xe6\x30\xbf\x59\x26\x66\xb3\x00\xf2\x33\x72\x6a\x49\x9f\xbd\xfb\xda\xee\x4f\x3b\x7e\x5a\x6a\xa1\x91\xcc\xc2\x7a\xb9\x5e\x67\x55\xfb\xf6\x4c\x18\x76\xcc\x99\x1a\x5e\x58\x36\x1a\xef\x7f\x82\xe4\x3a\xb4\xe6\x63\x63\x1f\x4e\x93\xb5\xaf\x69\x21\xdb\x4d\xd1\x69\xd8\x91\x5b\x43\xd7\x20\x35\xe3\xae\x82\xf2\xa2\x30\xdf\x12\x44\xa8\xec\x43\x69\xa3\x46\x34\x64\xfd\xb7\x6f\xe2\xed\xf8\x92\x70\x97\xf6\xf1\xe4\xf8\xfb\x17\xf9\xc7\x8a\x60\xbc\xff\x3f\x37\xff\x0d\x00\x00\xff\xff\x10\xc5\xed\x86\x8f\x06\x00\x00")

func test_certsClientTenant2KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant2Key,
		"test_certs/client-tenant.2.key",
	)
}

func test_certsClientTenant2Key() (*asset, error) {
	bytes, err := test_certsClientTenant2KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.2.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdf, 0xf9, 0x77, 0x8f, 0xbb, 0x17, 0x2d, 0x6a, 0x6c, 0x9d, 0xab, 0xc8, 0xce, 0xb9, 0x5e, 0xa, 0x9b, 0x3d, 0x39, 0x98, 0xb1, 0xb1, 0x26, 0xf7, 0x97, 0xfe, 0x10, 0x43, 0xa0, 0xda, 0xf2, 0x97}}
	return a, nil
}

var _test_certsClientTenant20Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x4d\xef\xaa\x38\x18\x47\xf7\x7c\x8a\xd9\xff\x33\x41\xde\x44\x96\x6d\x29\x50\xb0\x48\x11\x54\xd8\x01\x6a\x11\x10\x11\xc5\x82\x9f\x7e\x72\xef\x24\x77\x33\xf3\x5b\x9e\x3c\x39\x9b\x27\x39\x7f\xff\x1a\xc4\x2e\x09\xff\x42\x38\x4e\x88\x43\x10\x48\xf0\x6f\x2a\x51\x42\xec\xb3\x8d\x10\xe8\x16\x0e\x04\x81\x80\x93\x18\xd0\x93\x68\xae\xd6\xe9\x4c\x8c\x34\xee\x0c\x31\xdb\xd9\xa6\x8b\x80\xb0\x59\xe6\x07\x8f\x9c\xd4\x9f\x2a\x04\x0c\x6f\x21\x03\x42\x0a\xbe\x78\x4f\x21\x70\x81\x92\x62\x54\x53\x9f\xa9\x56\x53\x68\xfe\x27\x3b\x86\x0f\x1a\xa7\x02\x8b\xcc\x3e\x30\x66\x63\x31\xdb\xa5\x1a\x8e\xd5\xdd\xaa\x33\x95\x73\xb6\xc2\xc2\xab\xab\x50\xa2\x0d\x99\x69\x82\x15\x9a\x30\x41\x93\x74\x3e\xd6\x55\x48\x9b\x6a\xa6\x09\x11\x7f\x58\x03\xbe\x34\x26\x02\x83\xdf\xb2\x00\x8b\xee\x8f\x4c\xca\x54\x3e\x63\x1b\xec\x20\x0f\x0f\x10\xbc\x12\xa8\xc4\x5d\x79\x77\xa6\xb3\x47\x67\xf4\x05\xfe\xbf\x9c\x26\xa0\x21\x82\x12\x02\x49\x03\x42\xc8\xdb\x67\xdd\xde\x5c\x4b\xac\xa0\x04\x18\x76\x00\xd8\x21\xc0\x36\xe0\xd7\x01\xe2\x01\x02\x0c\x83\x2f\xe4\x65\xf9\xe9\x8f\xdb\xab\x9f\xb3\xd7\xee\xfd\x73\x3f\xe2\x4f\x11\x05\x41\xbd\x84\xeb\x45\xa1\xda\xd2\xcf\x9f\x2d\xae\x25\x31\xe9\x6f\x84\xf0\xc1\x9a\x9e\xc4\x3a\x5e\x69\x1e\x2a\x7d\xab\xeb\x93\x65\x56\xf2\x4e\x64\xfc\x7d\x5e\x7e\xce\xaf\x25\xfa\xe0\x23\x08\xbe\x57\xdf\xf4\x6d\xab\x4f\x4f\x9f\xe2\x80\xfa\xdb\xab\x3b\x4b\xf6\x4f\xd2\x46\x7d\x36\xc9\xba\x7a\x10\x89\x00\x3f\xc8\x08\x4a\xb0\xae\x73\xfb\xf9\xc8\x4b\x7e\xf1\x9d\xe4\x6c\xc1\xbc\x50\x3e\x7a\xa1\x94\xf9\xcf\xd2\x80\x29\x39\x31\xb6\x1c\xf4\xc1\xd7\xb5\xb5\x74\xe7\x25\x70\x93\x8e\x26\xf0\xe9\x45\xbb\xd5\xd7\xd5\xef\xa9\x81\x42\x95\x65\x41\x1c\xbc\xf3\x40\xcf\x59\x9a\x94\x7d\x04\x5f\x4f\xe3\x6a\xb6\xbb\xef\x5e\x59\x34\xae\x35\x28\x1a\xdc\x61\x4e\x4c\x29\xea\x8a\x44\xae\xfb\x30\xd8\x55\xd5\x74\xd3\xa2\xc3\x09\x4d\xc6\x85\x7e\x4c\x6e\xc2\xd2\x18\xc6\x21\x12\xd1\x95\xc9\x77\xbf\xba\xad\xf7\xae\xc5\x0f\x8e\xad\xac\x87\x57\xf4\xad\x92\xbc\x5e\xcc\xb7\xb4\xcb\xfc\xcb\xb9\x37\xfd\x28\x72\xc2\xb0\x56\xb0\x2b\x46\x2e\xab\xb3\x60\xe3\x9b\x74\x14\xe5\x6d\x96\x1f\xc1\x66\xd7\x78\x8e\xbc\x0e\x19\xb1\x01\x03\xf0\xa1\xbb\x01\x25\xae\x47\x81\xee\x4a\x40\x49\xcf\xb6\xc0\x50\x16\x0c\x03\x41\x9c\x87\x0d\xce\xbf\x5e\xe7\xed\x53\xec\x34\x20\x85\x9c\x8f\x90\x63\x07\xb2\xca\x06\x3c\x23\x81\xc8\x20\x64\xa9\x07\x04\x16\x9e\xc8\x6c\xe9\x10\xaf\x1a\x08\xb9\x70\x1e\x20\x55\xd3\x47\x6d\x06\xd3\x2e\x7e\xd7\xf6\xe8\x7b\x19\x2b\x16\xd1\x97\x61\xbe\xef\xb9\x08\x59\x66\x1f\xe2\x55\x0c\x91\x2e\xb6\x84\xf8\xa5\x6b\x35\xd9\x71\x7e\x48\xa5\x16\xae\x38\xaf\x9e\xdb\xfb\xfc\xc9\x54\xe7\x55\x8b\x58\x06\x00\xc0\x7a\x06\xff\x37\x48\xc1\xca\x45\xfb\xa7\xbb\x27\xa5\x66\x33\x0c\x25\x24\x52\x00\x74\x02\x01\x43\x91\x35\x76\xba\xe6\x6e\x8d\xa0\x91\x37\x9f\xd7\xbb\x52\x9a\x15\xab\xde\xe6\xd0\xb6\x87\x92\x1d\xdd\xe1\x98\xc4\xbe\x9c\x3e\x73\xe3\x16\x1e\x72\x61\x4e\xe3\xb0\x59\x49\xed\x2b\xdf\xae\x9e\xf3\xea\xda\xef\xcf\xd6\xa5\xd4\x76\x9b\x35\x97\x7d\xe2\xb1\x64\x1c\xe2\xfb\x4b\x09\x3a\xf5\x76\x1d\xc5\x36\xd1\xae\xc6\x86\xee\xa8\xbd\x35\x85\x76\x45\xce\xc3\x48\x16\xc7\x6c\x3c\x89\x2e\xe0\xb4\xe4\xce\x4b\x4e\x7f\x7c\xc0\x87\xcd\xf3\xb2\x21\xde\x18\xf7\xef\x78\x1f\x2c\xd3\x9a\xf7\xcf\xcb\x4d\x1d\xd6\x8b\x79\x89\x0a\x50\x3e\xad\x21\x55\x83\x75\xd4\x81\xc7\xd4\x15\x66\x50\x87\x52\x16\xdc\x88\x56\xa8\xb9\xdb\x79\x63\xa1\xa7\xcb\x3d\x6a\xab\xc9\xec\x53\xab\xa9\xda\xd4\xb4\x1e\x5a\x77\x3f\x94\xa7\xde\xee\x67\xb5\x53\x27\xd8\x4e\x28\xdd\x27\xf9\x27\xba\xa1\x3d\x5f\x43\x24\x4b\x6d\xe3\xff\xf0\x13\x7d\xa0\xf7\xd0\xf1\xeb\xd7\x6f\xcd\xc4\xf8\x04\x6f\x6f\x72\xaa\x58\x09\xdd\x7e\xec\xc7\xa3\xaf\x1c\xb1\x3c\x58\xfa\x3e\xdf\x6c\x53\x11\x64\xea\xd2\xe9\xd9\xb5\x58\xd2\x67\x49\xa5\x15\xbe\x6a\x9b\xdc\xf8\x7e\xfb\x58\x8f\xda\x02\xed\x0b\xe3\x02\x89\xa1\xc0\x3a\x0f\x96\x36\xd8\x4a\xbf\xc3\x85\x43\xfb\xbf\x31\xfb\x27\x00\x00\xff\xff\x50\x80\xf6\x79\xe9\x04\x00\x00")

func test_certsClientTenant20CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Crt,
		"test_certs/client-tenant.20.crt",
	)
}

func test_certsClientTenant20Crt() (*asset, error) {
	bytes, err := test_certsClientTenant20CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x4a, 0xf3, 0x85, 0xd, 0x87, 0x35, 0x3c, 0xc9, 0xd, 0xe, 0x98, 0x1c, 0x77, 0xb7, 0x53, 0x6b, 0xbd, 0x85, 0x42, 0x11, 0x19, 0x2c, 0xa5, 0xce, 0xc4, 0xc6, 0x1c, 0x6f, 0x29, 0xfa, 0xb0}}
	return a, nil
}

var _test_certsClientTenant20Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xa5\xd2\xec\x60\xa2\x85\x61\x9f\xab\xd8\xbe\xeb\x54\xa0\x83\xe2\x88\x2f\xcc\xcc\x2e\xd0\x9d\xa4\xc3\x0c\x57\x3f\x35\xbf\x9e\x65\x97\x79\xdc\xfb\x7f\xff\x1d\x2b\x48\x8a\xf9\xcf\xf5\xc0\x3f\xdb\x55\x42\xe0\x0b\xff\x34\x21\xf9\x7b\x20\x43\x51\x84\xc9\x51\x58\x00\x34\x0e\x38\x02\x78\xd8\x2a\xcf\x8f\x21\xd2\xbf\x6a\xea\xac\xd6\xf6\xea\x23\xe1\xc8\x6c\x4d\xab\x6f\x93\xbc\x51\xe3\x7d\x0f\xd7\xa1\x0b\xf5\xb9\xe3\x1b\xc7\x09\x21\xc4\xec\xb3\xc2\x44\x5f\x23\x35\xd1\xa1\xc5\xf1\x9d\xa1\x0a\xd8\x3a\x93\x6a\x2b\xef\x57\xb9\xde\xf6\x21\x44\x40\x7b\xbe\x2a\xa5\xf2\xcc\x10\xc4\x47\x16\x72\x43\xb3\x76\x25\xff\xf2\x5b\x7b\x48\x76\x08\xc6\xb1\xf0\xf4\x4f\xf0\xe2\x08\x2d\x07\x64\x9d\xf2\xf3\x98\xe6\xd5\x47\x15\xfd\x92\x61\xd3\x0c\x3d\xf0\x0c\xcd\xd3\xd7\xfd\x03\xbb\x1f\x3b\xce\x1d\xe2\x93\x8a\xbf\xc9\xbe\xca\x81\xe4\x77\x06\xe4\xb3\xb3\x6c\x5b\xc8\x23\xe1\x7d\x40\x70\x26\xe6\x24\x9a\xab\x6d\xa9\x86\xa7\x4e\xe0\xe7\x83\xcd\xae\x33\xf1\xa5\x5a\xeb\xf1\xd0\xfb\x5d\xbd\x7f\x9c\x3d\x49\xd3\xe5\x53\x76\x97\xf9\x70\x3d\x98\x90\x66\x15\xc5\xde\xbc\xed\x30\xe6\x76\xe2\x63\x1c\x54\x45\xb1\x39\x31\x2d\x93\x7d\xda\x5f\x07\xee\xd5\xa2\x21\x3d\x89\xa9\x42\x91\x47\xc9\x69\xb5\x9f\xc2\x4f\xeb\x9b\xda\xac\x44\xfd\x94\x03\xa5\x42\xb6\x2d\x9a\x66\x8d\x0a\xd2\xb9\x54\x30\x76\x9d\xce\xb2\x29\x9d\xc1\xa5\x6d\x92\x46\x80\xb6\x7e\xb2\x08\x93\xa6\xa3\xf0\xc0\x01\x2c\x18\x15\x16\xc8\xae\x66\x70\x25\xda\xe1\xca\xdc\x8f\xd8\x07\xd2\x53\x4c\x64\x17\x13\xae\xab\xbd\x9d\x12\xae\x96\x7c\xf9\x2d\x76\xee\x32\x06\xb4\x35\x1e\xb8\xf0\xb0\x48\x86\x95\xcb\x7c\x30\x58\x0d\xaa\xee\x57\x2a\x56\x28\x71\xce\x52\x91\x47\x21\xc4\xea\x0f\x2a\xa4\x25\x31\xcf\x70\xe2\xbb\x42\xa3\xba\x22\x98\xb9\x3d\x47\x9f\xd5\xd6\x83\x48\xd6\x78\xbc\x7f\xdb\xde\x0f\xfb\xa6\x58\xcf\x52\x6e\x10\x4f\x6b\x45\x22\x58\x79\xb6\x7b\x99\x10\x1c\xeb\x60\x28\xe4\xde\xa2\x68\x0b\x6d\x98\xd9\x88\x3d\x1e\x6a\xc3\x14\xd1\xa0\x23\xf0\x98\x71\x55\x6f\xbe\xb2\x04\xa9\x86\xe8\x9a\xe2\xf6\x16\xc7\x18\x67\xf5\x20\x37\x70\xcd\xb4\x63\x37\x5b\x2e\xa7\x8b\xe1\x14\x52\x34\x8d\xc2\xc3\x0f\x93\x89\x9a\x6c\x94\xad\x2e\x77\x92\x97\x52\x97\xeb\xfb\xcf\x67\xac\xbf\x48\xd7\x1b\x2c\xde\x65\x02\x89\xfa\x49\x34\xd7\xbf\x1b\xc3\xee\x85\xcb\x6d\xc6\xc4\x3a\x38\xee\x04\x08\x7e\x70\x41\xfa\x29\x4a\x92\x51\x9b\x85\x2d\xb3\xac\x59\x67\x5d\x44\x6f\x83\xbd\x44\x4f\xe4\xf3\xb7\x23\x49\x69\x7d\x4b\x1d\x76\xa6\x6a\xb1\x2e\xfe\x46\xc5\x07\x4a\x9b\x26\x6d\xf5\x56\x19\x1f\x90\xb6\x1c\x9e\x96\xb5\x5c\x95\x08\x80\xa4\x45\x85\x68\x1a\x24\xe2\x3e\x68\xdc\x7b\x8d\x1c\xb6\x2d\x41\x1e\x00\xe6\xa5\x78\xc5\x6b\x9f\x66\xa3\x13\x7b\xa3\x0a\x8b\x81\x7e\xa3\x45\x41\x2d\xa2\x2f\xc4\x30\xf9\x67\x76\x31\x22\x1a\xc7\x35\x33\x37\x32\x1f\xb6\xb3\x19\x4c\x3d\x99\x94\x3b\x05\xf8\xe8\xfb\xce\xc1\x04\xa0\x7a\x02\x75\x22\xd6\x8b\x97\xb9\x5c\x67\x2e\x23\x39\xa5\xf4\x9d\x70\x26\x80\x9c\x94\x74\xed\x3e\x26\x77\x67\xea\x9f\x7e\x37\x61\xa5\x31\x16\xa2\x9c\xe0\x42\xfe\x1d\x0b\xca\x5c\x02\x88\x74\xb9\x63\x27\x13\x86\x87\x9b\x82\x0f\x2a\xc5\xbf\xeb\xfa\x27\x7e\xa7\x94\x05\x35\xcb\xac\x97\x8d\x17\xaf\x03\x6c\x6f\xcc\x56\xfe\x8c\xbb\xa9\xe2\x74\x92\x4e\x6f\x8c\x5f\x3a\xc5\x9f\x76\x45\x1e\x70\x8b\xa0\xa3\x9b\xd0\x77\x6b\xb1\x01\xb6\x10\xa6\x25\xb9\x9a\x54\xa5\xee\x08\xb1\xa0\x53\xb0\x88\xd1\x91\xa5\x0e\xb0\xfc\x0c\x31\x6d\xfa\xdd\x62\xef\x3a\xad\xa9\x39\x80\xc6\x64\x1f\x3f\xd6\xd9\xc7\x13\x29\x92\x15\x64\x7c\x7d\x97\x25\xc3\x08\x99\x56\xa4\xd9\x5f\x06\x02\x86\xe4\x9b\xf8\xc0\xb7\xc3\xe9\xcb\xde\xbb\x97\x1c\xb3\x2e\xde\x69\x78\xde\x8a\x61\x38\xbb\x52\xb4\x5c\xe0\x45\x78\x07\xfd\x47\x3e\xb2\xc4\xa2\xa6\xf2\x80\xf9\x09\xb5\xb9\x21\x86\x49\xbb\x87\xbe\x7c\xf1\x0a\x49\xd9\x0c\x6f\xfa\x87\xae\x64\xa1\x1e\xfe\xa5\xcb\x18\x3d\x51\x61\xcd\x1b\x52\x39\x94\xb2\x4e\x89\xcc\x4a\x32\x4d\xee\xd8\x94\xf9\x0c\xda\x27\x2d\x24\x62\xdd\x65\xa5\x26\xbc\x1c\x62\x0e\x1a\x09\xbd\xf8\xb2\x3d\xf4\x8b\x53\xa3\x59\xf5\xdf\xc7\x67\xc9\xaa\x9f\x63\x1f\xd4\x66\x9a\xc7\xc0\xad\x2f\xae\x09\xd4\x9a\xf9\x3c\x60\x8e\xb8\x03\x54\x06\x5b\x0a\x4f\x10\xd2\xdc\xfc\x85\x8c\x18\x14\x69\x3b\xb5\x0c\xf7\x30\xb5\xc7\xa6\xfb\x8b\x2e\x07\x4c\xf8\x23\x23\xd4\x6f\xdb\xdc\x02\xb3\x2c\x5c\xa9\x27\x24\x71\xa6\x7d\x9b\xcb\xd7\xb6\x4b\x3e\x11\xe8\x8d\x92\xed\x5a\x0e\x61\xbb\x3a\xac\xcc\x88\xeb\xd4\x78\x9b\xdb\x17\x24\xe8\xe1\xbc\xf5\xcf\xb2\xaf\x0e\x01\xc3\x68\x7a\x97\x62\x41\x46\xc8\x1a\x58\xbd\x29\x76\x44\xbe\xab\x27\x3c\x13\x6f\x94\xac\x46\x5e\xc2\xec\x15\x7a\x1b\x74\x24\xf7\x06\xc8\xc7\xd2\xd1\x23\x0f\xab\xa8\x6f\x5e\xfc\x9e\x25\xa0\x3d\xe6\x2a\x2e\xbb\xfa\xd4\x84\x68\x69\xf0\x7e\x0e\x52\xb9\xae\x5e\xd0\x33\x81\x8e\xae\x08\xf3\x78\xc5\x7d\xd3\x1f\xa8\xa2\x52\xf5\x6d\x22\x7f\xe4\x5f\x0d\xc4\xcb\x89\x58\x7b\x2c\x51\x94\x2f\xd5\x47\x11\xbc\x89\xb6\x5e\x23\xab\x83\x5a\xe1\xe8\xcd\x2f\xfd\xc8\x7d\xd9\xa7\x1d\xbd\xb0\xa4\xf9\x20\x6a\x15\x41\x80\x11\xee\xdf\x6f\x7d\xc9\x35\xf5\x6a\xee\x3d\x40\xc8\xf6\x32\x23\x33\xe6\x4a\xac\x73\x22\xb4\x75\x98\xcd\x7c\x21\xd4\xaa\x7f\xfc\x16\x99\x78\x41\x76\xb9\xdb\x3f\x83\x4f\xe4\x60\x22\xf6\x1d\x0f\xe8\xd6\x4d\xda\xf4\x76\xf9\xea\x53\xee\x6d\xba\xdb\x11\xd3\xa3\x83\xae\xbb\xb3\xf1\x19\x41\xc6\x8b\x63\x2c\xa5\xed\xb1\x20\xe9\x5d\x16\xdf\xcb\xc7\xf5\x9b\x93\xb2\x8b\xff\x87\xfe\xb2\x22\x98\xfc\xff\xce\xcd\x7f\x02\x00\x00\xff\xff\xe1\x23\x20\x7a\x8f\x06\x00\x00")

func test_certsClientTenant20KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Key,
		"test_certs/client-tenant.20.key",
	)
}

func test_certsClientTenant20Key() (*asset, error) {
	bytes, err := test_certsClientTenant20KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6f, 0xe4, 0xf5, 0xa0, 0xd5, 0x99, 0xe8, 0x2c, 0x44, 0x17, 0xf7, 0xe5, 0x9c, 0x53, 0xbe, 0x28, 0x3e, 0xbe, 0xc7, 0x88, 0xd6, 0x9c, 0x13, 0x78, 0xc3, 0x77, 0x49, 0x93, 0xaa, 0x57, 0x91, 0x6f}}
	return a, nil
}

var _test_certsClientRootCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xb9\xb2\xb3\x4a\x12\x84\x7d\x9e\x62\x7c\xc5\x84\x40\x48\x48\x18\x63\xf4\x06\x34\xd0\x48\xcd\x2a\xf0\xd8\xc4\x22\xf1\x6b\xa7\x81\xa7\x9f\x38\xc7\xb8\x31\x31\xf7\x96\x99\x95\x91\xe5\x7c\x95\xff\xfe\x19\x48\x4c\xea\xfd\x0b\x11\x3f\xa4\x06\x45\x20\x24\xbf\xaa\xc4\x28\xc5\xdf\x05\x21\xf0\x3c\x36\x40\x50\x08\x1a\xea\x03\xfb\x59\x30\xd8\xac\xac\xf7\xa5\xb9\xe7\xbe\xf1\x05\x57\x6b\xb5\x67\x02\xf3\xd4\x76\xee\x19\x6d\xc7\xd2\x03\x9c\xb8\x90\x03\x21\x39\x0b\x09\x18\x04\x26\x50\x22\x82\x5a\x66\xf3\x8d\xde\xe7\xaa\x3d\xa6\x89\x77\x67\x7e\x24\x88\x48\x71\xcc\x39\x26\x62\xc2\xc5\xc6\x7b\x95\x83\xde\xa6\x9b\xa6\xe1\x32\x11\x56\x5b\x7a\x12\xeb\xe9\xc4\x42\xa2\xb0\x90\x0b\x16\xf2\x6d\xd2\x96\x1e\xeb\xcb\x89\x85\x54\xfc\xa5\xf5\xa0\x67\x3e\x15\x04\xfc\x86\x39\x44\xdc\xfe\x0a\x93\xd2\x4d\x33\xe1\x10\xb8\xb0\xf1\x62\x08\x58\x08\x2d\x7b\x2c\x54\x2e\x9a\x86\x74\x0c\xc8\x26\x0a\x9e\x66\x40\x0b\x15\x73\x02\x01\x8f\x00\xd8\x52\x88\x05\xf8\xd9\x3b\xe0\x4e\xa1\x04\x38\x3e\x85\x93\x0d\x4f\xc6\xd5\x78\xdf\x0e\xd4\xd3\xf8\x23\x4a\xe1\x95\xec\x5f\x97\x7c\xdf\x5e\x36\x96\x0d\x32\xfb\x4b\xcb\x68\x7f\xf6\x2e\x3e\x53\xf8\x87\x1d\xb4\x61\x4a\x9c\x26\x42\x70\x3e\x49\x3b\x11\x6a\x07\x11\x77\xef\x25\x58\xb7\xe0\x54\xde\xc1\xcd\xb4\x7c\x24\xf4\x34\xb8\x4e\x9e\xed\xbe\xef\xc1\xc2\x77\x0f\xad\x22\x32\x3a\x81\xcf\xf7\x39\xa6\x43\x06\x1e\x1b\x59\x3b\x2b\x18\x82\x5c\x9a\xbd\x6c\x30\x6a\x9e\x65\x76\x70\x3d\x7a\x6e\xdc\x3e\x8d\xf7\xea\xd2\xd6\xb7\x59\x57\x26\x10\x7f\xfa\xeb\xd0\x2f\xd7\x61\xff\x2e\xb7\x75\x12\x39\xd9\x4a\x59\x6f\xbb\x7a\x47\x54\x57\x79\x3d\x83\xab\x23\xf5\x4e\xf3\xd5\x92\x7a\xb3\x9e\xbe\x49\x85\x66\xf7\xde\x8a\x55\x58\x7e\x55\x1e\xe8\xb7\x4b\xdc\x6c\xd0\x43\x77\xcc\x5b\xd0\xbd\x33\x03\x65\xa1\x29\xb7\xf2\xb2\xda\x96\x11\x3a\x85\xc6\x80\xa8\x36\x48\x50\x51\xae\xfa\x6e\x03\x65\x2b\x05\x61\x95\x1c\x64\xac\x36\xf1\xa4\xf8\x4c\x58\x9a\xe3\x1c\x21\xad\xa2\xdd\xd2\x80\x74\x72\x76\x0e\x82\xd0\xb5\xd5\xd5\xa3\x78\xb6\x65\x5d\xe4\x02\xe4\xdd\x57\x42\xab\x62\x3c\x2d\x5d\x15\x5a\xc8\x52\x89\xb8\x3c\xb9\xf7\xd9\x2c\xcf\x11\x34\x0c\x02\x60\xf6\x4d\x4d\x44\x53\x6d\x05\x6e\x52\x1c\xfb\xf2\x09\x70\x6b\x0d\x01\xc7\xa0\x49\x1a\x06\x99\x29\x01\x25\xaa\x6c\xce\x19\x03\x77\x13\xa1\xb7\x09\x78\x64\x40\xc1\x10\x83\x87\x1f\xb8\x2a\x2a\x78\xca\x60\x0e\x0c\x54\xd5\xc6\x1e\xdc\x5f\xa3\x52\xfa\xac\xc0\x24\xd6\x4c\x7a\x7f\x9e\xa5\xf5\x5b\xde\x33\x6a\xc6\x3f\x1c\x58\x3e\x21\x4d\x2a\x8b\x26\x7d\x9a\x66\xe2\xcd\x99\x49\x35\x77\xd6\xe5\x2c\xd9\xb5\xc5\x1f\x3e\xb2\x40\x57\xca\x4d\x3c\xbb\xea\x0f\x2b\xc1\xaf\x47\xfa\x9b\xa9\xfb\x3f\xd3\xf0\x0f\x41\x21\x18\xab\xb3\x77\x2b\x3b\x7d\x96\x8a\x8d\x2e\xb7\xed\xa3\x2f\x07\xbf\x3b\x76\x87\xb1\x32\xe3\x6f\x9a\xec\x64\x77\x21\x93\xab\xc6\x4b\x76\xa6\x63\x39\xe8\x63\x45\xd3\x3c\x55\xed\x6b\xda\xdf\x47\x57\xf5\x6f\xc5\x60\x7c\x2b\x74\x98\x25\x86\xfe\xf7\x22\xff\xa7\x8f\xc3\x4d\x43\x20\x80\x4c\xa7\xa9\x0b\x86\xd7\x07\xd5\x46\x3c\x8a\xde\xf7\xd3\x67\xf6\x92\xde\xa9\xf2\x1d\xc8\xc2\x6b\xeb\x76\x92\xa3\xfa\x75\x59\x2f\xaf\x49\xa5\xeb\x92\x67\xf8\x9b\xd5\x1b\xcb\x22\xe5\x5c\x20\xe2\xf4\x78\x15\x64\x37\x5b\x59\x6b\x9f\x0f\xaa\x74\xec\x59\xdb\xdd\xf1\x52\x49\xd4\x1c\xf2\xae\x7b\x51\xfb\xbb\xd7\xd4\x28\x6a\x32\x32\x77\xee\xba\x3a\x62\x05\xef\x31\x46\x87\x59\xdc\xb2\x5e\xbc\xdf\x67\x54\x95\x67\x63\xd6\xf6\xf5\x7c\xe5\xf9\x17\xd6\x45\x6e\x9f\x77\x77\x45\x62\xd3\xdd\x1f\x8a\x38\x9f\x43\x3a\x95\xaf\xc5\xf3\xd6\x55\xb4\xeb\xca\x0e\xe7\xdc\x35\xfc\x52\xfd\x40\xb7\x36\xb3\x20\x3c\x13\x1c\xe7\x67\x01\x9c\xcb\x12\x91\x89\x1c\xb1\xde\xed\xce\x1a\x27\xd2\x1e\xc7\xc7\xeb\x9f\x5d\x92\x7b\x58\x1b\x03\x72\xc4\x6d\xd1\x0f\xd6\xd3\x88\x1e\xc3\x1c\xbb\xdd\x39\x9b\x45\xac\xb5\x89\xa7\x85\x67\xf9\x31\x8c\xda\x76\xf6\x03\xaf\x14\xb7\xf2\xc2\x7c\x3a\x4e\x6f\x69\x05\xfc\xf9\x0a\x2c\xf2\x38\x81\xe6\xed\x26\xdb\xfd\x05\xd5\x7f\x5c\xc5\x3e\x6d\x75\xe5\xc2\x86\x07\x26\x23\x91\xc1\x0a\xb5\xab\xe4\x76\x7a\xad\x5e\x11\xdc\xc5\x17\x75\x59\xfc\x7c\xbd\x2d\xed\xe6\x3f\xd2\x6f\x33\x12\x0f\xff\xbd\x2d\xff\x1b\x00\x00\xff\xff\xf2\x6c\xd7\xf7\x4a\x05\x00\x00")

func test_certsClientRootCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootCrt,
		"test_certs/client.root.crt",
	)
}

func test_certsClientRootCrt() (*asset, error) {
	bytes, err := test_certsClientRootCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.crt", size: 1354, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0xd6, 0x9b, 0xda, 0x2, 0xde, 0x9e, 0x1c, 0x7f, 0x72, 0xcf, 0xd7, 0x69, 0x79, 0xaf, 0x21, 0xc, 0x3f, 0xd5, 0x1d, 0x51, 0x5b, 0xd4, 0x5e, 0x5e, 0xd2, 0x95, 0x34, 0x6c, 0x83, 0xd7, 0x6c}}
	return a, nil
}

var _test_certsClientRootKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x0e\xa3\xea\x16\x86\xe1\x9e\xab\x98\x1e\x1d\x91\xc1\x94\xbf\xc9\x39\x63\xa0\x23\x83\xc9\xd9\x70\xf5\x47\x33\xf5\x5e\xed\x6a\x1e\x7d\xcd\xfb\xbf\xbf\xf7\x16\x24\xc5\xfc\xe3\x7a\xe0\x8f\xed\x2a\x21\xf0\x85\x3f\x9a\x10\xff\xfb\x40\x86\xa2\x08\xd3\xa5\xbc\x01\xd0\x38\xe0\x08\xe0\x41\x5f\x9e\xe3\xff\x92\x77\xa6\x56\x1c\x5f\x76\x5a\x28\x81\xe4\x6d\xd1\x04\x7e\x90\x11\xdb\xdc\x8e\xe4\x65\xad\x2c\x5a\xd8\x13\xa1\xbe\x19\xe8\x90\x6f\x5b\xf3\x16\xb6\x93\x08\xea\xfc\x0b\xe7\x02\x7c\x1a\x62\xbc\x1a\xe8\x49\x3a\x3c\xa1\x01\xd5\x6d\x50\x67\xb3\x3f\xc2\x6c\xf8\x9e\xc7\x68\xc2\x86\x5a\x69\x39\xba\x26\xf8\x5e\x7a\xb6\xac\x38\xa4\x0e\x8e\x56\xec\x56\xcf\x3a\x97\x23\x6d\xdf\x4f\xd2\x44\x9d\xf4\xf1\x82\x99\xff\x7a\x58\x9c\x36\x99\x3d\x92\xd1\x9c\x9f\x45\xee\x88\x59\x4c\xa9\xd3\x8b\x52\x0f\x46\xb6\xe4\xbe\xe7\x86\x6a\xaf\x20\x58\x19\x0f\xd7\xbc\xd9\x94\xee\x66\x6e\xba\x27\xfd\xe8\xc7\xfd\x7c\x65\xfd\xe8\x6c\x2d\xad\xe4\x76\x47\xe8\x3b\x2a\x9c\x49\x84\xc5\x66\xbd\x54\x5e\x33\x07\xd3\x2a\xb9\xce\x10\xfc\x76\xa5\x30\x20\xe4\x90\x45\xf0\x45\x7f\x49\xdd\x5a\x73\x5d\x14\x89\x5d\x16\x75\xf1\xc6\x81\x40\x84\xa7\x09\x58\x52\xcc\x8b\xc0\x37\xde\x70\xdb\x7e\x6b\x4f\x0e\xad\x9c\x04\x92\xe1\x1d\x5e\x5d\x3b\xde\x5d\x20\xd0\xf2\xa1\xa7\x48\x1e\xf0\x0d\x48\xd3\x5a\x9f\x03\xf3\xbc\xc8\x31\xf8\x5d\x0d\xfb\x33\x64\xba\xe3\xb3\x62\xa3\xd7\x4b\xe1\x81\x03\xde\x60\xfa\x3b\x36\x1d\x04\xc0\x8c\x2b\x2e\xe1\xd3\x06\x57\x20\x8c\x1f\x88\x65\xe1\x2b\xb5\x6f\x34\xa9\x69\xb2\x8a\x0c\xa9\xa7\x98\xfb\x39\xc9\x74\x8e\x6a\xec\x15\xe3\x45\xb9\x41\x79\x94\x4b\x40\xf5\x1a\x98\xb7\xf2\xe9\x5b\x9a\x5a\xfc\x8a\x2a\xb9\xcf\xce\x42\x5b\xde\x8b\x2d\xb0\xa9\x97\xf0\x5a\x74\xc9\x26\x0b\x87\x5e\x92\x28\x72\x8d\x1a\xe3\xf5\x3c\xed\xd7\xd0\x66\xf0\xdb\xd3\x0c\xc4\xdb\xf0\x58\x88\x0f\xc3\xd4\x75\xd3\x03\x21\x56\xa9\x1e\xaa\xe9\x10\xd7\x87\x60\xb9\x91\xe7\x41\x86\xd1\x95\x29\xf4\x25\x64\x05\xd1\xc0\xa5\xac\xca\xfe\xb6\xb5\x75\x7e\x89\xed\x07\x9e\x2d\xa0\xd2\x53\x94\xe6\x2a\xcb\x17\xf0\x4a\xde\xb6\xbd\xed\xda\x37\xe0\x12\x08\x3d\x79\x58\xdd\xb1\x3b\x20\x30\xf1\xa1\xaa\xa1\xda\x05\x6b\xe3\x39\xfd\x76\xbf\xbb\x75\xf3\x1b\x8c\xa9\x94\xdc\xe7\x26\x9b\xa3\x53\xbf\xd0\x0a\x5a\x31\xb2\x2c\x0e\x7c\xde\x64\xcd\xe4\xe2\x0a\xb4\xb0\x15\x81\xd8\xde\x46\x33\xee\x5c\xfc\x92\x1a\x11\xb9\x5e\x61\x4a\xca\xfe\xbd\x82\x81\x03\xbc\x67\xea\xcd\x93\xfc\x02\x02\x3d\xb1\x99\x7c\xa8\xa1\x31\x00\x3f\x36\xf9\xeb\x8a\x17\x8e\x42\x0c\x68\xc6\xd7\x78\x42\x3a\xae\x8e\x05\xc0\xb4\x5f\x11\x30\xdd\xe3\x72\xcc\x63\x07\xf7\x25\xd1\xa1\x1e\xe9\x91\x16\x0f\x5c\xe8\x1e\x4c\x6e\xda\xc9\x9d\xf9\xbd\x4a\xf3\x31\x71\xdc\x05\x3b\xa5\x3e\x0e\x51\xa5\x31\x2d\x52\x72\x4b\x89\xbe\x5b\x0f\x85\xc6\x5a\x2a\xe7\xe2\xc8\x2b\xa3\xfa\x74\x4d\xcb\x7e\x52\xbc\x51\x3c\x79\xae\x4c\x60\x59\x0d\x6b\xc0\xae\xaf\x5c\xc2\xcc\xe8\x71\xaa\x84\xbe\x92\x40\x22\x5a\x8d\xae\xd9\x97\x5d\x29\xc6\x9c\x96\xa6\x6f\xa0\x5a\x07\x1b\xbb\x00\xd0\x7e\xf9\x19\xa8\x5c\x45\xc6\x85\xc8\xad\x8a\x1d\x15\x18\x35\xfc\x38\xd1\xfb\x41\xdb\xfe\x89\x89\x3d\xdd\xa1\xd4\x4d\xfc\x6b\xa0\x37\xbc\x8c\x0e\x53\xe0\xfb\xcf\xbd\xbe\x4d\xb5\x98\x55\xfb\x65\x19\x52\xf0\x73\xe8\x49\x1e\xbf\x21\x8f\x45\xf9\x4f\x25\xb9\x13\xf5\x8d\x98\x6b\x43\x0a\x8e\xa5\xe3\xc8\xa8\x00\xca\xf1\xcc\x77\x7a\x64\x1d\xac\x89\x9e\x84\xc1\x3c\xc9\x0a\xe5\x3b\xee\x3e\x16\x3e\xb9\x91\xcb\x76\x0b\xe6\x73\xb3\xcb\xfe\x50\x63\x30\xb3\x33\xc2\xaa\x9c\x13\x62\x41\xe9\x07\x7e\x7d\x1c\x85\x0e\xf1\xb0\xd5\x10\xdd\xaf\x17\x22\x27\x17\x38\x6e\x1c\xc8\xd3\x0b\xed\x96\xae\x75\xed\x68\x38\xc3\xbc\x36\x5b\xcf\x6a\xf4\x1f\x79\xe5\xd8\xf7\x16\x62\xf8\xe0\xe7\xd7\xe0\x18\x1f\x1c\x44\x0c\x34\xcb\xf8\x1d\x6f\x63\x11\x3f\xbd\x97\xc1\x00\x43\x26\x42\xfb\x61\x54\xd6\x69\xa4\x55\x2b\x78\xca\x31\x4c\xa9\x89\x6a\xcc\x20\xef\x4b\x7e\x19\xc9\xae\x33\xbf\xdc\x32\x02\x8c\xf2\xfd\x5f\x4a\xcf\x90\x8b\xaf\xc3\xab\x34\xa7\xab\x98\x3d\xff\x28\xac\x34\x78\xf1\x5f\x5f\x37\x4c\x1a\x59\x92\x90\x6c\x84\x62\xec\x0a\xfd\xd6\x3d\x47\x88\xe1\xb5\x9e\xa8\xaa\x2b\x64\xdc\x23\xbc\xbc\x07\x5c\x3b\xea\x10\x33\x15\xe6\x14\x3b\x9d\x11\xbd\xf6\x22\x3d\x32\x29\x51\x2f\x58\xfd\x4b\x06\x4d\xcb\x9e\xab\x05\x36\x84\x45\xb0\xa4\xe5\x09\x91\x01\x79\xa6\x4a\x5a\xd8\x7d\xf1\x91\x69\x3f\xcb\x4a\x08\x3b\xa4\x29\x43\xc3\xc7\x30\xbd\x39\xdf\x2c\x20\xa7\xce\xfb\x66\x9e\xc3\xc7\x56\xc7\x88\x82\xe0\xa2\x6e\x3b\xe4\x48\x68\x84\x31\x53\x4c\x6a\x8b\x76\xfd\xb7\xab\xb0\x24\x74\xb8\x43\x6e\x5c\xf3\x62\x76\xa8\x65\xdf\xb8\x05\x9b\xf7\x88\x9e\xa5\xe3\xdc\x92\xb5\x05\x35\x50\x93\xc6\x24\x58\x31\x66\xdf\x27\x28\x0f\x3a\x8c\xe4\x64\x32\xb6\xfa\x18\xc6\xf7\x7b\x1f\x5c\xd5\x6b\xcb\x12\x2d\xe1\x54\xe7\x64\x68\x22\xe3\xb4\x74\xb4\x77\x2d\x7b\x81\x93\x7b\x91\x81\x49\x88\x28\xbd\x96\x9d\xbc\x87\x50\xca\x7f\x23\x3f\x39\x66\xb7\xee\xb2\xc9\x8e\x51\x10\xa4\x24\x72\xb7\xaf\x08\x4b\x23\x05\xa7\x1e\x9c\xaa\x21\x9b\xd1\xca\xa7\x9b\xdc\x5c\x13\xab\x8d\xb1\x35\x54\x39\xa3\x28\xd0\x30\xea\xf9\xc9\x12\xe3\x1b\xc9\x2a\x1a\x51\x5f\xc9\x8d\xa6\x9e\x84\x63\xa7\x7e\xa5\xcb\x1a\xfb\x16\xe1\x1d\x91\x49\x55\x75\xa1\xca\x75\xad\x17\xd5\x05\x39\x85\x7d\x5a\xe2\xdc\x0a\xb9\x3f\x7f\x39\xad\xe1\xc4\xe7\xa2\x11\x2a\x64\xad\xa7\x34\xb1\x2a\xbb\x24\x82\x0d\x3d\xfa\xb9\x05\x47\x83\xfe\x25\x45\x30\xf9\xff\x4e\xcd\xff\x03\x00\x00\xff\xff\xa8\xf8\x70\x4a\x8b\x06\x00\x00")

func test_certsClientRootKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootKey,
		"test_certs/client.root.key",
	)
}

func test_certsClientRootKey() (*asset, error) {
	bytes, err := test_certsClientRootKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc9, 0x95, 0xe8, 0xdc, 0xdd, 0xe1, 0xe, 0x6a, 0xac, 0xc, 0xf0, 0xe5, 0x8a, 0x3b, 0x33, 0xd1, 0x0, 0x58, 0x44, 0x28, 0x93, 0xd1, 0xf6, 0xd0, 0xbc, 0xfc, 0xd4, 0xc, 0xa9, 0xce, 0x6, 0xc2}}
	return a, nil
}

var _test_certsClientTestuserCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xc9\xae\xa3\x3e\x1a\xc5\xf7\x3c\x45\xef\xaf\x5a\x61\xc8\xc4\xa2\x16\x9e\x00\x27\xd8\xc1\x84\x31\xbb\x00\x81\x40\x08\x90\x84\x30\xe4\xe9\x5b\xf7\x96\xba\x5b\x7f\x55\x79\x65\x1f\x4b\x3f\x7d\xd2\x39\xdf\xf9\xf7\xf7\x81\xc4\xa4\xfc\x5f\x88\xb8\x1e\x35\x28\x02\x1e\xf9\x51\x25\x46\x29\x96\x2b\x84\xc0\xf3\x51\x80\x91\x42\x50\x50\x11\xef\x98\xab\x3d\x72\xd5\x8f\xec\x7b\x95\x5a\x74\x32\xdc\xa4\xad\x00\x87\xc5\xed\x71\xbd\x95\xa6\x3e\xca\x10\x88\x97\x01\x30\x78\x4a\xcc\xa5\x23\x01\x31\x0e\x84\xd8\x93\xb1\xc6\x89\xca\x9f\xe9\x5d\xbf\xc6\x6a\x31\x19\x1e\xf0\x60\xc1\x03\x08\x98\x87\x09\x1f\x62\xb5\x9f\x13\xd5\xa8\xce\x08\x62\xe1\x81\x8b\x31\xca\xb3\xc4\x2a\x32\x31\xcf\x9f\x38\x06\x13\xc7\xf5\xf9\x5b\xe4\x1f\x32\xb1\x0a\xfc\x4f\x63\x28\x9d\x48\x05\xc4\x6f\x58\xeb\x21\xff\xff\x30\xe9\x8c\x89\xcb\xc0\xd6\x04\x8a\x4f\xc0\xc4\x68\x66\x06\x9f\xcc\x0a\x3e\xa7\x88\x8e\x45\x41\x4a\x06\x64\x13\x1d\x1f\xe6\x91\x26\x1a\x16\x04\x02\xe1\x03\xb0\xa4\x10\x8f\xe0\xfb\x7f\x2f\x81\x96\x42\x20\xd0\x47\x7f\x14\xf9\xe4\x68\x3b\x87\x0e\xdb\xb3\xb6\xdd\x3d\xb9\x3e\xf8\x1c\xcf\x5c\x74\xdb\xfc\x96\xda\xbc\xbc\x82\x59\xef\x1c\x4d\x2f\xcb\x09\x8a\xd4\x69\x88\x52\xbf\xba\xbb\xb4\xef\x51\xff\x8c\xec\xe6\xf0\x3c\xab\x30\xac\xbd\xd5\x2c\x40\xaa\x1a\x11\x37\x8e\xd1\xab\xa8\x61\xc7\x95\xe1\x31\x29\xc3\xbd\x78\x9b\x0a\x58\x06\x97\x1d\xd1\x1e\xd3\x1a\x58\xd1\x62\x7d\xd3\xe3\xbd\xd4\x84\xe3\xab\x0e\xdd\x35\xd6\xcf\xc2\x1f\x0b\xaf\x1d\x11\xe3\xbb\x93\xd1\xbc\x79\x77\x3d\x61\x98\x7e\x86\xfd\xdb\x0b\xbe\x12\x5e\x2a\xc9\xcb\x41\x69\x09\x4c\xdd\x8f\xb3\xa5\x89\xe3\x75\x54\x6f\x25\xf9\xa2\x53\x3c\xef\xdd\x47\xfb\x58\xf0\x8f\x31\x9f\x96\x2f\x3a\x0f\xcb\x1e\xab\x1a\x1f\x7c\x61\xd2\xc2\x40\xb8\xc2\x76\x7c\xca\xd2\xb2\xf7\x35\x5b\xef\x1f\xee\x9e\x1c\x2d\x87\x4c\xf9\x99\x57\x52\x14\x88\x5a\xf6\xd8\x1a\x5e\xc3\x76\x7c\x0f\x6d\x4e\x9e\x3a\xab\x30\x6d\xa1\x66\xbb\x99\xd6\x08\xd4\xdd\x46\x6d\xe6\xba\x9d\x6f\xa6\x9d\x60\x0e\xb1\xfd\xdd\x8b\x97\x95\x66\x4c\x1c\xfa\x67\x69\xba\x2d\xee\xbd\x26\x57\xab\xd8\xf0\x2c\x4b\xff\x5a\x37\xe3\x53\x91\xed\x83\x7c\x7c\xe6\xa0\x60\x10\x00\xb3\x2a\x72\x7f\x2c\x72\x3a\xe2\x22\xc6\x81\x2b\x3b\x40\x58\x0b\x08\x04\x06\x45\x58\x48\x0c\xb2\x6f\x0b\xb3\x9d\x10\x8c\x81\xd6\x44\xe8\x65\x02\xe1\x1b\x70\x64\x88\xc1\x1f\x7b\x33\x3a\x8a\x98\xc1\x33\x30\x50\x76\x31\x36\xa0\x7d\x0e\x4a\xea\xb2\x04\x93\x60\x6d\x4a\xb4\x7d\x44\x8b\x97\xbc\x61\xd4\xec\xbe\x83\x62\xb9\x84\x14\x67\x32\x16\xa7\xb5\x69\x85\x7c\x3e\x99\x74\x6d\xcf\xba\x7c\x0a\x57\xd7\xa4\x11\x03\x3b\xea\x4a\xaa\x06\xb3\xad\xb9\x75\xaa\xb9\x8a\xf4\xfd\xb8\x5e\x95\x2a\xbd\xbb\xe5\xa1\xdc\x0e\x99\x19\xbc\xe3\x70\x25\xdb\x1f\x3a\x64\x11\xaf\xd3\x52\x97\x4f\x11\x97\x7f\xee\x6d\x7c\x89\xb5\xdd\x2d\xae\xda\xe1\x1b\x90\xdc\x8d\xb7\x94\xa1\xed\xc4\xd0\x3f\xa9\xbf\xa1\xab\xbf\x40\xc9\x64\x6b\x3f\x29\x1d\xfe\x9b\x58\xe9\x14\xed\x4d\xeb\xfe\x97\x51\x2b\xf0\xe7\x04\x7f\xd9\x48\x09\x80\x03\x02\x82\x00\x74\xec\xf8\x16\x23\x35\x97\x8f\xab\xb8\x32\xbe\xe6\xd3\xb3\xab\x0c\x67\xe5\x54\x42\x0f\x1c\x17\x44\x22\xcc\x93\x9b\xbe\x19\xae\xa1\x4a\xe5\xf3\x11\x0b\x0f\xfa\x9f\x85\x2f\x3d\x9b\x28\x2b\xac\xad\x0c\x35\x3b\xb5\xaf\xd6\xa1\xbe\x38\x97\x44\x75\xba\xc4\xaa\xbd\x69\xab\xb0\xd3\xf4\xee\xca\xe4\x08\x74\x39\x50\xb2\x73\x22\x97\x84\x69\x1d\xb2\x36\x21\xec\xd3\xc1\xb8\x97\x52\xbe\x3d\x7e\xcd\x6f\x0a\x95\xe0\xec\xdb\xb9\xb6\x34\x64\xf2\x65\x9e\x95\x4d\xa6\x44\xaf\x26\x36\x98\xba\x5a\x69\x65\xdd\xcb\x60\x23\xb7\x59\xdc\x9a\x8d\x6f\x95\x8e\xf3\x6c\x72\xc5\x8f\x95\x12\x5f\xa5\x5b\xd2\x93\x8b\xa9\xb5\x66\xa6\x5f\x0e\x3d\x6c\x6f\x61\xfd\x89\xec\x59\x49\x36\x17\x79\x51\x8e\x51\x48\xb7\xef\x44\x07\xb2\xec\x6e\xd0\xb2\x3f\xc6\xbc\x6e\x5e\x91\x3e\x57\x45\x1e\x7e\x02\xd0\xdf\x25\xf5\xd0\xc9\xd6\x12\x79\x43\xc9\xd6\x4d\x1e\xb7\xf5\x22\x11\xfd\x6d\x68\xd4\x70\xe8\xec\x2a\x75\xf1\x32\xde\x87\xd5\x3c\x38\x82\x6e\x60\x96\x54\xb6\xf6\x2e\x90\x08\x4f\x37\x35\x3a\x7c\xea\xfd\x5b\xfa\x7a\xe9\x34\xf0\xd0\xfa\xab\x8e\x2d\xa3\x70\x8a\x0f\xdc\x05\xab\xbc\xde\xc4\x8b\x57\xb0\x29\x7e\xfd\x92\x7e\xaa\x93\x70\xfc\x67\x9d\xfe\x27\x00\x00\xff\xff\xc4\x38\x75\x73\x6b\x05\x00\x00")

func test_certsClientTestuserCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserCrt,
		"test_certs/client.testuser.crt",
	)
}

func test_certsClientTestuserCrt() (*asset, error) {
	bytes, err := test_certsClientTestuserCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.crt", size: 1387, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x64, 0x43, 0xde, 0x16, 0x7d, 0xc, 0x30, 0x6c, 0x24, 0xc2, 0x6c, 0x11, 0x26, 0x7d, 0x95, 0x12, 0x56, 0x54, 0x39, 0x6, 0xe, 0x35, 0x4e, 0xf1, 0x58, 0xe0, 0xe8, 0xca, 0x61, 0x87, 0xe7, 0x48}}
	return a, nil
}

var _test_certsClientTestuserKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xa3\xd0\x01\x85\xe1\x9e\xa7\xd8\x9e\xf1\x90\x44\x2a\xb6\x00\x2e\x42\x44\x11\x74\x09\xea\xc8\x49\xe4\xcc\xd3\x7b\xbc\xb5\x4f\x7b\x9a\xbf\xfb\xfe\xf3\xbf\x89\xb2\xa2\x5a\x7f\x5c\x4f\xf8\x63\xbb\xaa\x2f\x7c\xe4\x3f\xba\x1c\xfd\x7b\x10\x53\x55\xe5\x51\x50\x45\x41\xd0\x25\xc1\x91\x85\x05\x8b\x87\x17\xf7\xe1\xaf\xcf\x65\x60\xca\x8a\x49\xf1\x5d\x24\x04\x70\xb8\x06\xea\xc5\x8b\x7e\x49\x77\x34\x38\xe6\x1e\x7f\x78\x2c\x1a\x16\x07\x22\x2f\x40\x9f\xd6\x37\xd1\xbf\xf5\xec\xcc\x31\x71\xd1\xf7\x44\xae\xa5\x3f\x42\x34\x6d\x85\x97\x55\xf9\xb7\x0b\x7f\xac\xaa\x39\xf1\x27\x4b\x98\x25\x4b\xe8\xc1\xa8\x56\xe7\xfd\x0c\x6b\xd7\x62\x96\x1c\x29\x45\x02\x43\x47\x3b\x90\x46\x62\x31\x34\xbf\xcd\x4b\x2c\x68\x9f\xa6\x2a\x33\xa6\xd0\x00\x2f\x70\xbf\x6c\x13\x47\x81\x73\x84\x26\x7b\xcd\x2d\x51\x74\x77\xb4\x06\x2c\x38\x7a\xb5\x14\x77\x5f\x41\x5e\xb9\x58\x92\xef\x1f\x5d\x58\xaf\xdd\x13\xb8\xba\x8d\x27\x7d\xbf\xd3\x33\xed\x72\x43\x32\x67\xd4\x70\xf8\xf5\x4e\x08\x59\xac\x55\xd1\x29\x1f\xc7\x45\x2a\x61\xa8\xce\xbe\x75\x61\x49\xdc\x7a\x15\x22\x57\xf7\x69\x86\x64\x13\x11\x04\xd4\x32\xf9\x7e\x97\x91\x3f\x99\xc6\xcc\xbc\x4e\x1d\xfb\xa8\xc7\xa5\x0b\xd9\x85\x87\x19\x8d\x0b\xd3\xd7\xb4\xb8\xa6\xf0\x28\x94\xf3\x20\x00\xa7\x44\x48\x09\x40\xa2\x81\x3f\xd3\x8f\xe3\x2b\xcb\xd7\xa6\xe7\x8c\x57\xd1\x40\x84\xe7\x89\x15\xdb\xc8\xe9\x7c\x26\xdd\xab\x3c\x51\x87\x0a\x04\x47\x10\x85\x41\x15\x05\x69\x50\x50\x52\x0b\xf9\x4c\xda\x34\x91\x3d\x11\x82\x3d\xaa\x55\xac\x2a\xb6\xe9\x2f\xfd\xa4\xc4\x8d\x7b\x57\x95\xb7\xc8\xcb\x73\x28\xb9\x07\xd9\x27\x1b\x9b\x0d\xad\x14\xb7\x24\x56\x8f\x99\x49\x97\x14\x40\x47\x90\x00\x6e\x51\x83\x88\x05\x2c\xe2\x38\xeb\xb3\x90\xb1\x16\x3f\x62\xaf\xdc\xca\xc0\x72\xae\x52\xc6\x16\xe3\x30\x34\x81\xdb\x40\xe7\xbe\x0e\x9c\xa6\x2c\x18\xba\x66\x53\x77\xde\x2c\x2d\x0d\xb3\xa0\xa5\xd2\x08\x99\xcb\x9b\xbd\x86\xc4\xb5\x9e\x6b\xd1\xc6\x3c\x07\xb9\xe3\xdc\x89\x3e\x04\xbf\xf1\x05\xaf\xe6\x7b\xdd\x52\x8b\x4c\x00\x66\xe1\xab\x93\x96\x01\xfa\x99\x9f\x59\x5b\x48\x5d\x53\xb0\x36\x9a\x1c\x43\xb7\xc3\x7e\x44\x91\x5a\x26\x4e\xc1\x2f\xbd\x64\xa9\x23\xd8\x01\x76\xcd\xd3\xe2\xbe\xda\xdf\xcf\x17\x8c\x6e\xba\xa1\x60\xe4\xe2\x1a\x0d\x19\x65\x48\xbf\xc2\xd2\x98\xca\xe6\x1d\x0d\x9a\x99\x56\xe1\xb1\x51\x3f\x4d\x64\x8d\xe7\x70\x6d\xcf\x2b\x34\x77\x09\xc3\x66\x77\xb8\xcc\x4b\x16\x39\x86\x22\xc0\x13\x25\x54\x5a\x26\x38\x7d\x19\xfc\x37\x39\xa8\x14\x17\x5c\x70\x9e\xc4\x0f\x21\xe5\x4e\xe6\xee\xa9\xd2\x0f\x2a\x02\xbf\xb9\xfe\x6a\x5a\xa9\x8c\x64\x81\x86\x8a\xe9\x71\x9a\xb7\x29\x14\x3f\x1b\xd3\x45\x1e\x6d\x64\xe9\x6d\x33\xa6\x0d\x5c\x56\x82\x64\x96\x87\xca\xf4\xcf\x7d\x08\xea\xc4\xad\xd5\xf5\x55\xb3\x31\x82\xc1\x01\xbf\xfd\xb7\x6f\xa7\xb0\x6c\xd2\xe7\x00\x1d\x14\x34\xc4\xea\xe0\x37\xf4\x5c\xbe\x96\xae\x8f\x3d\x01\x0c\xee\xe5\x64\xae\x3f\x88\xeb\x1e\x10\xf3\x60\x5b\x85\xcb\xf5\x5b\x80\x71\x37\x32\x9f\x33\x01\x9c\x42\xa7\x9a\x9f\x1b\x3c\xd3\xd7\x83\x5f\x35\xe5\x33\x07\x1c\x95\x8e\x9c\x3d\x96\xfb\x0b\xdf\x92\xc9\xe7\x83\x11\x5f\xac\xac\xdd\x69\xe0\x13\xe9\x86\xff\x2b\xbe\x6c\x68\x22\x12\x89\x31\xfe\xda\x8b\x43\xad\xf0\x37\x75\xe4\x5f\x2f\x03\xb6\xf5\x3c\x7e\x0c\xed\x8a\x86\xcc\x26\x83\xfa\xab\xd0\x08\x1c\x7a\x76\xe8\x51\xb0\xe0\x5d\x53\xba\xbb\x99\x7f\x23\xfa\xb2\x7e\x4a\x8e\x5c\xaf\x6d\x98\x48\xa3\x70\xe3\xa6\x02\x8f\x63\x58\x9f\x87\x2a\x0d\x05\x99\x8f\xce\x97\xc3\xdd\xc5\x36\x1c\x57\xc9\xb9\x5f\x96\x2c\x6c\x32\x3e\x70\x6f\x7d\x9a\x9b\xf9\xee\xa5\xac\x99\x1e\x11\x0c\x91\x45\x50\xd2\x4e\x34\xc1\x54\x6a\x67\x48\xb2\x41\x66\xb9\x39\x4a\x2f\xf6\x05\xed\x82\xbc\xcc\xe7\x4b\x2d\xdd\x90\x5a\xfe\x25\xf7\xcd\x60\x7b\xfd\xd8\x60\xf0\xbb\xec\xf3\x98\xfe\x6e\x01\x43\x56\xad\x51\xcd\xc4\x8e\x3b\xbf\x2e\xa7\x81\x1e\xdf\xef\xf0\x24\x52\x68\xd2\xf9\xec\x74\xb6\x9b\xe1\x4f\x2b\xc0\x2a\xb4\xe2\x42\xc1\xcc\xb8\x1e\xa7\x43\x02\xeb\x1f\x0a\x49\x1c\xec\x17\x3b\x0f\x0c\x19\x31\x3a\xed\xa3\x64\x5e\x1e\xb4\xc1\x33\x68\x1b\x38\x8c\x26\x5b\xe9\x9a\xd0\x1b\xa0\xe5\xf8\xbd\xfa\x07\x31\x7e\xea\xb9\xa3\xbd\xcf\x21\x7e\x5c\x03\xaa\xec\xe1\x3f\x74\xca\xa5\xcf\x51\x14\x26\xa4\x45\x71\x0f\x6c\xbb\x26\x19\x4f\xf7\xa8\x6a\xa8\x7d\x48\xc1\x69\x65\xa9\x8c\x04\xfa\xfb\x60\x72\x27\xed\x1c\x9b\x1d\xb4\x8c\x3a\x24\xad\x56\xe4\x21\xc9\x63\x6f\x0f\xed\xbb\x37\x64\x3f\x10\x09\xe4\x42\x83\x6d\x09\x70\x05\x1b\x48\x6f\xdf\x42\x39\x82\x66\xf8\x08\xe4\xb2\xa0\xfd\x6d\xb0\xca\xf9\xda\x38\x74\x2e\x27\xb6\xeb\xb2\x48\x9a\xa4\x1a\x58\x47\x62\x94\x41\xb5\x2a\x89\x06\x45\xbf\x40\x8c\xf4\x1e\x6e\x5d\x22\xce\x6c\xb5\x03\x07\x23\x04\x82\x8d\x2c\xf3\xfd\x6b\xa9\x31\x53\x98\xc6\xfa\xf9\xd5\xcb\x32\x78\xdd\x7a\x6a\x47\x19\x16\x7b\x11\xb3\x8f\xcf\xf4\xd8\xf6\x93\x0a\xde\x5d\x80\x22\xdf\xe4\x88\xb6\x43\x17\x4b\x07\x88\x0a\x05\x5a\x81\xc3\xca\xda\xc2\x9d\x91\x59\xa1\x95\xfe\xf4\x41\x62\x20\x57\x0e\xb0\xef\x47\xa3\x1b\xf1\x17\x1d\x24\xa8\xad\x95\x31\x80\xd7\xb2\x64\x0e\x86\xb0\x03\xf9\x2a\x16\x8a\xd5\xd4\xb8\xc6\x96\xdd\xcb\xe2\x43\xde\x4e\x30\x71\x54\x83\xf2\xde\x8d\x41\xac\xc6\xcb\x4d\xc4\x52\xb7\x5b\x46\x47\xfa\xb0\x86\xca\x60\x05\xd1\xdd\x1f\x5e\x48\x31\x94\x41\xbe\xeb\x59\xa0\xe6\x39\xc3\x16\x54\xe3\x3d\xb3\x06\x9c\x97\xf3\x7b\x9f\xd8\x77\x22\x66\x03\x0c\xdf\x5f\x65\x33\xeb\x68\x94\xe3\x76\x94\x6a\x59\x6d\x90\x9c\x23\xe1\xef\x5f\xe4\x1f\x2b\xb2\x05\xfe\x3f\x37\xff\x0d\x00\x00\xff\xff\xc1\xe4\xab\xc1\x8f\x06\x00\x00")

func test_certsClientTestuserKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserKey,
		"test_certs/client.testuser.key",
	)
}

func test_certsClientTestuserKey() (*asset, error) {
	bytes, err := test_certsClientTestuserKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x22, 0x82, 0x55, 0x3b, 0x90, 0x6d, 0x25, 0xb5, 0x75, 0x4f, 0xb9, 0xe6, 0x7f, 0x34, 0xf1, 0x50, 0x31, 0xbd, 0x5c, 0xb5, 0xf7, 0xfa, 0x97, 0x2d, 0x61, 0x10, 0xa9, 0xd, 0xcc, 0xae, 0xa0, 0x12}}
	return a, nil
}

var _test_certsClientTestuser2Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x94\x49\xcf\xa3\x38\x1f\xc4\xef\x7c\x8a\xf7\x1e\xbd\x82\x10\x12\xe0\xd0\x07\x1b\x1b\x30\x04\x12\xf6\xc0\x2d\x6c\x06\xc2\x92\x95\xed\xd3\x8f\x9e\xa7\xa5\xee\xd1\xcc\x48\xed\x93\x5d\xff\x9f\x4a\x96\x5c\xae\xff\x7f\x2d\x88\x35\x62\xff\x4f\xc1\xae\x4f\x54\xa2\x00\x1f\x7f\xab\x8c\x45\x08\xe2\x91\xa2\x80\x97\x42\xc1\x44\x20\xa0\xc4\x81\x54\x43\xa8\xe2\x47\xeb\xd2\x9b\xcf\xeb\x9a\xd3\x34\xdc\x9f\x11\xb0\x21\xbd\x3d\xaa\x5b\xad\xc9\x13\x07\x81\xf3\x52\x01\x02\x4f\xc6\x72\xc9\x84\x41\x8c\x42\xc7\x31\xf1\xd4\xa2\x94\xb7\x9f\x59\x27\x57\x31\x4f\x67\xd5\x07\x3e\xa4\x76\x08\x81\xe5\x23\x6c\x8f\x31\xff\x5e\x52\x5e\x6d\xae\x0a\x44\x8e\x0f\x0a\x75\xe2\x16\xc6\x6a\xf0\x6c\xf9\xc1\x6c\x23\x30\xdb\xa8\xbd\x7e\x89\xf6\x8a\x67\xab\x01\xbf\x34\x4b\xa1\x33\x6e\x80\xf3\xd3\x6c\xf0\x95\xe0\xb7\x19\x73\x45\xd8\xb3\x20\xd0\xc0\x36\xc0\x60\xb6\x8c\x5c\x0b\xd7\x5c\x0f\xd7\xe4\x42\x16\x8b\x10\x48\x9a\x7f\x5e\x1d\xab\x00\x9c\x14\xe0\x48\xe0\x6b\xce\x28\xd4\x54\x80\x83\xc1\xf2\x08\x9e\x5d\x2e\x75\x46\xe6\x6d\x14\x5d\x62\xab\xfe\x53\x1c\x5a\x9c\xf0\x62\xbf\x55\x33\x02\x41\x38\x8b\xf9\x25\xeb\xcf\x6d\xb2\x79\x6b\xa4\x52\xcd\xfb\x59\x6d\x94\x0b\xc3\xbd\xfa\x9e\xdd\xf4\xec\xc9\x14\xb7\x75\xe8\x44\xf0\x16\xb7\x2f\x72\x0e\x2c\x3b\xfd\x44\x40\xff\xbc\xae\x34\x95\xec\xfd\xbb\x7a\x1e\x4f\xa3\x4e\xa2\x71\x75\xef\x67\xf5\xa0\xc9\xbb\x28\x31\x37\x43\xcf\x94\x2d\x4b\x4b\x3b\x39\x45\x6d\x76\x76\x91\x4e\xab\x49\xdb\x81\xbb\x2b\x60\x35\xed\xf4\x7c\xf1\x64\x51\x2c\x43\xb3\x47\xaf\x30\x0b\xa7\xa4\xf4\x84\x20\xe8\x4f\x01\xe5\x69\x11\x4a\xac\xc3\xd5\x0c\xf6\xcc\xb7\x73\xdf\x58\xd3\xb6\x2d\xc4\x48\x3c\xdf\xe0\x9a\x26\xae\x66\x5d\x79\x6e\x7e\x08\x93\x7d\x2c\xab\xab\x38\x1f\xf3\xbd\x7f\xbd\xba\xd4\xe5\x86\xce\x65\xe7\x69\xf3\xb8\xa0\x10\x0f\xa0\x20\x8c\x93\x2c\xe0\xb8\x1f\xcc\x5c\x0f\x48\x6d\xb4\x3e\xcf\x9b\xc0\xa0\xa0\x36\x83\x8d\x21\xa3\xad\x06\x8e\x29\xcc\x0e\xd4\x53\xaf\x86\xf0\xc8\xa7\x69\x2a\x09\x99\xd6\x85\xf8\x51\x48\x3a\x54\x59\x4c\xbb\x71\xe5\xe6\x25\x2b\xaf\x86\xaf\x2c\x6a\xc0\xdd\x2b\x9e\x34\xdf\xd8\x46\xf4\x74\x3c\x4e\x04\x01\x07\xc0\x41\xd0\x0f\x16\xd1\x77\x16\x10\xbe\x5e\x2b\x47\x13\x86\xec\xe4\x60\x30\x11\x95\x19\xd0\xcf\xb0\xe8\x5e\x80\x11\x02\x26\xa4\xf4\x09\x29\x56\xa1\x93\x21\xd0\x80\xf2\xe7\xcc\xc2\x1a\x02\x11\x85\x4e\x7f\xa9\x8a\xc9\x34\x45\xf9\x82\x7d\x6d\x9a\xd5\x82\xa9\x6a\xd3\x6c\x59\xd1\x3e\xad\x0a\x7c\xd2\x18\x85\x2e\xe7\x42\xa2\x75\x16\xd1\x9a\xaa\xda\x37\x59\xe7\xd6\xa7\x5a\x1a\x73\x2d\xfc\xc4\xd1\x9e\x3b\xae\x78\xcc\x2f\x76\x9b\xd5\x32\x97\x5c\x6c\x8e\xf9\x3e\x34\xa6\xa6\x77\xf6\x92\x68\xe4\x70\x5c\x64\x2e\x89\xf6\x55\xda\x3b\xa3\x55\xcb\xdb\x8c\x0f\x97\xe3\xce\x6d\xb3\x9d\xfb\xbd\xb7\x86\xb8\x8c\x77\xc6\x2d\x6e\x86\xf1\x4b\x67\xd2\x4e\xfd\xe4\x8a\x34\x5b\xca\x9f\xe1\x5f\xac\xf7\x9b\x65\xfe\x00\x2f\xff\x69\xfc\xb7\x78\x33\xbf\xbe\xe6\x77\xbe\x31\x78\x17\xfb\xd3\xe3\x10\x8e\xca\xea\xaf\xdd\x75\xd3\xe9\x74\x54\x9e\x32\xf9\x90\x76\xbd\x1f\x07\x4e\x9d\x69\xaa\x6d\x3e\x37\x47\x92\xe7\x4c\x14\xa5\x81\x71\x29\x1e\x2b\xb5\x4c\x78\xa9\xbf\x0e\x45\x29\x47\x9d\x50\xc4\xfa\x5b\xf0\xdc\xe1\x2c\x1c\x2a\x37\xdd\x0a\x7c\x51\xdc\xdf\x76\xb4\xd1\x46\x55\xdf\x4b\x8a\x5e\x24\xc3\x8d\xbf\xdd\xde\xc1\x84\xbd\x98\x79\x76\xa7\xfa\xd4\xa4\x4f\x61\x4c\x37\xe6\xd2\x27\xfd\x5e\x8e\x7d\xee\x72\x2f\xcc\xf4\xbe\xd0\xb7\xf5\xd1\x63\x5e\x4c\xe4\x59\xe2\x7c\xa5\x7e\xe6\x25\x88\xb4\x55\x4f\xda\x4e\xab\x33\x38\x8c\x8f\x85\xa9\xd6\x59\x2d\xc4\x3b\x17\xb1\x8d\xd2\x05\x75\x75\x31\xe4\x7c\xa4\x39\x22\xf2\xc7\x98\x04\x8f\x95\xfa\x50\x3b\xef\x6f\x5c\xee\xb1\x09\xe8\xc3\xec\x68\xcf\x3a\x7b\x9f\x8d\xb3\x01\xce\xe2\xfb\xb3\x65\x4a\xaf\xac\x33\xf4\xca\xa7\x40\xba\x88\x56\xc7\x25\x34\xb1\xe1\xe3\x7c\x8c\xac\x75\x92\xed\x17\x7b\xbb\xfa\x9f\x22\x3d\x2c\xb1\x0d\xed\x70\xbd\xed\xa8\x91\xc0\x73\xd4\xcf\xf9\xbe\x84\xf5\xeb\xc5\x32\xf2\x86\xab\xed\xed\x3c\xcf\x3d\x4d\x0e\xdb\x80\x3d\x08\x7c\x3a\x1b\xd9\x61\xd3\x08\xe9\x12\x7e\xbc\x08\xfa\x0d\xa2\x3f\x7e\x30\xdf\x15\x8a\x6d\xf4\xef\x5a\xfd\x2b\x00\x00\xff\xff\x94\x8a\x0f\x8d\x73\x05\x00\x00")

func test_certsClientTestuser2CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Crt,
		"test_certs/client.testuser2.crt",
	)
}

func test_certsClientTestuser2Crt() (*asset, error) {
	bytes, err := test_certsClientTestuser2CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.crt", size: 1395, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0x64, 0xc2, 0x2c, 0xb0, 0x57, 0xde, 0x5c, 0x8d, 0xa0, 0x7f, 0x44, 0x43, 0x56, 0x22, 0x9f, 0x5a, 0x56, 0xf7, 0x81, 0xb2, 0x2f, 0x41, 0xa, 0x0, 0xa4, 0x91, 0xd5, 0x89, 0x7b, 0xe2, 0xa3}}
	return a, nil
}

var _test_certsClientTestuser2Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\xd2\x83\xda\x15\x86\xe1\x9e\xab\x38\x3d\xe3\x01\x24\x62\xe1\x82\xcc\xd6\x26\x23\x10\xd0\x91\x11\x39\x89\x74\xf5\x1e\xff\x6e\xbd\xda\xd5\x3c\xc5\x37\xf3\xfe\xeb\xbf\x27\xc8\x2a\x30\xff\x71\x3d\xfe\x1f\xdb\x05\x01\xff\x96\xff\x81\x72\xf4\xf7\x41\x0c\x00\xe4\xc9\x01\x02\xcf\x43\x91\x77\x64\xfe\x9a\xfd\xa5\xcf\xd9\xfe\x95\x79\xa8\xa8\xb1\x58\x3d\xfc\x0a\xba\x93\xe3\x07\x33\x10\x4a\x06\x04\x3e\x38\x99\x3c\xcc\x06\xbb\x8b\xd1\x4d\x05\x35\xa2\xc0\xc9\x56\x1a\x31\xc4\xd7\x61\xc0\xd0\x01\xb3\x20\x43\x7c\x03\xe7\x23\xb4\x51\xb7\x02\xdb\x37\xcc\xf4\xf7\xe1\xb5\xdf\x9a\x54\x29\x6b\x52\x5b\xbd\xe8\xd6\xae\x81\xcf\x7e\xbb\x93\xad\xd0\x2a\xc2\x3d\x3f\x31\x44\xc7\xa1\xec\xb0\xaa\x34\x63\xeb\xd3\x65\xb6\x2b\x69\x55\x7d\xa8\x4f\x7e\x72\x49\x59\x49\x7b\x2d\xbf\x3c\x8e\x61\xca\x00\x0e\xd2\x1a\x64\xc1\x11\x97\x1e\xe9\xfb\x83\xe5\x57\x0f\xa4\x2a\x02\x16\x73\xf0\xaf\xec\xc1\xcd\x99\x50\xe3\x20\xba\x82\xf9\x30\x76\x2b\xdc\x69\xec\xaa\x46\xf2\xc0\xcf\x99\x3c\x4c\xbd\xac\x13\xe6\xd4\x73\xea\x9d\x24\x6e\xe5\xe2\x63\xef\x62\xe7\x81\xce\x48\x28\x05\xf2\xc8\x17\xc0\x89\x2f\x5e\xa7\x46\x98\x6b\x3e\xf8\xbe\xba\xf7\xe3\x01\xf9\x57\xc5\x7f\xa1\x8f\xbe\x38\x89\x50\x79\x3d\x15\x32\xba\xf2\x94\xe4\x45\xce\xf9\x71\x1c\x25\x00\xc7\x7d\x01\xe4\xfd\x09\x40\x2f\xd5\x46\x87\xba\x5c\xb3\x72\xe2\xda\x3c\x6a\xa3\x7a\x09\xcf\x35\x3a\xd4\xf7\x8b\xf8\x54\x96\xae\x1f\x40\xe2\x1d\x5e\xe0\x47\x20\xf0\xd2\xf4\xa2\x5a\x94\xf3\xee\x46\x62\x52\x05\x45\x78\xf8\xd6\x6d\x69\x97\x95\x86\x05\x0b\xae\xba\xf4\x4d\xa6\xd8\xbe\xa6\x57\xa9\x53\x89\x34\xe3\xfd\x1d\xc4\x15\xed\x2c\x1f\x41\xf8\xfd\xfc\x92\x8c\xd8\x53\xd3\x2f\xd3\x71\x49\x15\x94\x85\x14\x22\xea\xb4\x6c\x27\x6a\x78\xeb\xdd\x1c\x84\x2b\xb6\xbf\x26\x5e\xbe\xbd\xe6\x03\xfc\x2e\x22\x52\xf7\xc9\xbc\x28\x1c\x0b\xd3\x2f\x92\x6a\x6c\xfa\x04\x0c\x80\x14\x51\x71\x7e\x17\xda\x25\xf6\xc8\x25\xa4\x25\x55\x6d\xf9\x6c\x69\x59\xd2\x8c\x1e\x1e\x13\xa1\x6f\xa1\xa0\xf0\xd0\x5e\x4d\x91\x84\x5d\x7c\x0a\x83\x24\x8c\xbb\x7a\x50\x39\x23\xf4\x13\x29\x0e\x9a\xfd\x95\x4e\x61\xcb\x32\x99\x04\xfe\x8e\x00\xc0\x04\x47\x3c\x4d\xb2\xf3\xd8\xbb\x9d\x1b\x4c\x25\x31\xc7\xed\x16\x27\x96\x79\xb9\x6c\x13\x65\x96\xea\xdb\x1f\x5e\x80\x19\x99\x14\xda\x8b\x03\x3f\xb6\x73\xc1\x6b\x4d\xa2\x6b\xda\xaa\x83\x41\x16\xdd\x1f\xcd\x84\x6a\x67\x62\xcd\xbb\x61\x5c\x7b\x63\xfa\x5a\xeb\x54\xd5\x79\xfb\x20\x7b\x18\x6f\xb5\x6f\x76\x5a\x06\x9f\xe6\xf4\x7e\xe9\x4d\xe2\x5a\xd8\xb3\xf7\x5f\x64\xb0\x70\x0b\x1d\xd8\x03\xf2\xa4\x17\x4b\xd5\x64\xb1\x8a\x64\x9e\x9d\xb3\xaf\x45\x85\x98\xaf\x67\x9e\x68\x50\x11\xf6\xe3\x97\x4d\x3a\x21\xb1\xc0\x6d\x72\xcb\xc6\x7b\xdd\x11\xfd\xd4\x84\x7d\x30\x05\xfd\xa2\x4c\xa9\x8f\x01\xe2\x61\x3d\x83\x55\xb9\x2e\xf6\x14\x21\x4f\x7b\x40\x0b\xcb\xaa\xfd\x14\x98\xcb\xc3\x88\x16\x8c\x50\xb2\x6c\xbf\xe6\x87\xbb\xc7\xa2\xc1\x80\xda\x93\x3f\x50\x26\xfa\xeb\xb4\xd8\x8a\x29\xd4\xc9\x47\xd2\x9a\x57\x22\x16\xf7\x9b\xb2\xf7\xd4\x6d\x56\xe1\xe2\x72\x4a\x11\x2a\x3f\x40\x7c\x61\xc9\x86\xbb\x28\x2d\x25\x48\x53\x81\xdf\xa9\x76\xc4\x63\xec\xd3\x0d\x12\xd6\xfe\x89\x89\x6c\xde\x10\xb7\x3c\xcd\xc8\x78\x96\xc3\x5e\xba\x9a\x5a\x98\xe9\x34\xcf\x1b\xd5\x67\x14\xb8\x80\x3e\xbe\x9d\xe8\xe5\x64\xd4\xab\x65\xf2\x4a\x81\xf6\x2f\xfe\x2a\xfd\x0d\xf5\x9b\x46\x5b\x9f\xd1\x57\x4d\xc1\x10\x8c\xbd\x83\x0a\xaf\x70\xe5\x43\x72\xb0\x6f\x39\x3d\x8d\xf1\xf2\x83\x66\x30\xd0\xd7\xa5\x51\xf6\xf1\x61\xe3\x84\x9c\x06\xba\xc4\x2b\xfd\x86\xde\x84\xaa\x86\x75\xb7\xd1\xdf\x0c\x18\x37\xaf\xe6\x08\xba\xed\x83\xcc\x81\x66\xda\x82\x62\xb5\x49\xa6\xbe\xa0\xf4\xb6\xca\x6c\x2b\xac\xc4\x79\x06\x78\x5c\x55\x47\xd3\x67\x7f\xe4\xd9\xba\xea\x4c\x1e\x5a\x49\x78\xf7\x95\xb7\x74\x8f\x6c\x50\x90\xf1\xfc\x3d\xb4\x52\x0e\xc8\x54\x0a\xdb\x80\x28\xcf\xac\x79\xdf\xd8\xc0\x36\xa7\x8d\x8f\x56\xdf\xfc\x0e\x11\x04\x77\x6d\x34\x01\x0d\x8c\xca\xa1\xef\x12\x1e\x5a\xcf\x81\x21\x3f\x1e\x6f\x50\x7f\x11\xdb\xc0\x84\x44\x15\x65\xd5\xdb\xab\xf4\x31\x86\x39\xa6\x07\x1c\x21\x4a\x6b\x0e\xd3\x40\x94\x4e\xa2\x22\x6a\xe3\x96\x29\xae\xbc\x2a\xa3\x52\x4b\xe5\xb3\x0b\xa2\xf9\x91\x69\xfe\xa9\x00\x2b\xdf\x90\x78\x82\x6d\x18\x7a\x6d\x20\xbc\xbf\x72\x7c\xc4\x3e\xdb\xb5\x4c\xfb\xbf\x5d\x2c\xa7\x3b\xdd\xb5\x67\xad\x49\x34\x24\x89\xc6\x9e\xec\xb1\xe1\xa6\xb3\x12\xfd\x5c\xb9\x0c\xec\x7b\x5a\x63\x91\x1e\x5b\xf6\xa9\x7f\xfc\x8a\x26\x8b\x6c\x35\x69\x64\x3f\x86\xc1\x07\xaa\x64\x72\x2d\xdb\x10\x64\xe3\xb3\x23\x66\x6f\x9b\x21\x37\x53\x2d\xc0\x92\x51\xd4\x29\x77\xaf\x36\xca\x54\x13\xbd\xf6\xbf\x88\x96\xc4\x87\x48\x71\xbf\x80\x43\x25\x82\x64\x9f\x6f\xb6\xf2\x4d\xf3\x11\x97\x9d\x29\xb0\x54\x31\xa4\x53\x2a\xcd\xb2\x26\x68\x2f\x45\x56\x21\xa0\xf1\x54\x63\x48\x5b\x01\xbd\xe2\xcc\xc6\x2e\xec\x88\xa3\x14\xd1\x20\xfa\x7f\xe4\x2a\xef\xc2\xb9\x66\x98\xf9\x9e\x51\x75\x51\x81\x80\x6f\x17\xdb\x99\x96\xc9\x3c\xdb\x81\xca\x13\xdc\x89\xe6\x3a\xe3\x82\xa1\xf0\xa5\xc4\xca\x81\x8c\x0f\x33\x12\xcb\x8d\x09\x0f\xee\x22\xbd\x2b\x49\x62\x7c\xc2\xb5\x76\xa7\x85\xf0\xcc\x29\x23\x1a\xed\x1f\x8a\x5b\xdd\xf7\x68\xfa\xde\xd4\xca\x10\x24\xaa\xc0\xa6\xaa\x6e\xaa\x2d\x97\xcc\x2e\xcf\xd8\xbf\x16\x59\xaf\x89\xe2\xf6\xaf\x3a\x4d\x6a\x96\xd8\x29\x6f\x9d\xd1\xf8\x24\x0b\x3f\xcb\xca\xfb\xf9\x95\x4a\x9c\x81\x6f\x0d\x8c\xbe\x00\x27\xe6\xac\x67\xda\xb8\xc1\x33\xf2\xdb\x7f\x23\x7f\x59\x91\x4d\xe9\xff\xe7\xe6\x3f\x01\x00\x00\xff\xff\xb7\xd1\x2b\xc2\x8f\x06\x00\x00")

func test_certsClientTestuser2KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Key,
		"test_certs/client.testuser2.key",
	)
}

func test_certsClientTestuser2Key() (*asset, error) {
	bytes, err := test_certsClientTestuser2KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x21, 0x22, 0xfa, 0xd1, 0x59, 0x70, 0x90, 0x1c, 0x19, 0xa0, 0x61, 0x19, 0x8d, 0xf4, 0x51, 0xd8, 0x58, 0x72, 0x12, 0x24, 0x8e, 0xc0, 0x22, 0x44, 0xf0, 0xbc, 0xe1, 0x7, 0x28, 0x47, 0x2b, 0x6}}
	return a, nil
}

var _test_certsNodeCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x4b\xd3\xaa\x38\x17\x85\xe7\xfc\x8a\x6f\x6e\x7d\xa5\xe0\x95\xc1\x19\xec\x84\x04\xa3\x06\x09\x02\x1a\x67\x28\x10\x2e\xde\x41\x6e\xbf\xbe\xeb\x3d\x5d\xd5\x3d\xe8\xb3\x86\x4f\xed\x5a\x93\xb5\xeb\xf9\xff\x4f\x10\xb1\x99\xf3\x3f\x4c\x3c\x9f\x51\x86\xc1\x27\xbf\xa9\xc6\x19\xb3\xe4\x80\x31\x94\x5f\x05\x2d\x43\xa0\x98\x70\x37\x27\x75\x6e\xe9\x3d\xbe\x33\x37\x0e\x6e\x7a\x9c\x99\x24\xf3\xc1\x41\xaa\x7c\x67\x65\x6e\x9b\xed\x04\x81\xa8\x28\x58\xf0\xd1\xb8\xc7\x5a\x02\xd2\x0a\x85\xd8\x92\xf6\x66\x5d\x0c\xe7\x73\xbd\x9b\x99\x34\x54\x47\x7d\xf0\x91\x72\x42\x04\xdc\xb7\x88\xd3\x48\xa3\xee\x2f\x06\x2d\x22\x8c\x2c\xe1\x43\x42\xdb\x49\xaf\xf1\x82\x74\xdc\x0f\x3a\xc7\x82\xce\xb1\xb2\xe8\x07\x3a\x03\xe9\x78\x01\xff\x30\x8e\x79\x47\x0a\x10\x7f\x97\x3d\x7d\x1c\xfc\x5b\xa6\x45\x16\x71\x38\x54\x36\xe8\x01\x81\x8e\x93\xcb\xdd\x2c\xcf\x3e\xc6\x70\x60\xad\x25\xe4\x66\xfb\x3c\xb3\xac\xb9\x3a\x20\x08\x42\x02\x2c\xa5\x88\x0b\x16\xc6\x20\x9e\x58\x29\x82\x34\xd8\x49\xd7\x3b\x35\xc1\xf7\x72\x48\xe0\xaa\x7b\x68\xba\x6d\xfb\x2d\x79\xb9\xdb\xc3\x77\x41\x0d\xe3\x10\x74\xb1\xa3\x8f\x07\xd7\xcd\x37\x35\x25\x03\xdb\x1b\x39\x79\x42\x86\x27\x61\x16\xd9\x71\xa7\xe5\x54\x78\x82\xa9\xbe\x4e\x18\x90\x50\xf4\x7c\x99\x9e\x37\x63\x5d\xed\xe2\x63\x77\xc9\x3e\x36\x4a\xf8\xde\x49\x71\x90\x45\x57\xd2\x76\xb5\xd9\x94\xdc\xb3\xc7\x22\x69\xee\x0a\x95\xb2\x09\x35\x3d\xf2\xd3\x79\xe9\x0a\xd5\xcd\x17\x5f\x71\x4f\x3b\xcf\xa3\x6a\xb0\x51\xb1\x1e\x8f\xe5\x72\x72\xee\x46\x61\xdb\x36\xab\xcc\xdd\xd7\xfa\x79\x92\x30\x7f\xae\xc2\xfb\x60\x7f\xdd\xc6\x7b\x2b\xb5\x39\x69\xde\x3b\xef\x3f\xe6\x51\x1e\xec\xb1\xbe\x4d\xa8\x6c\x13\x99\x9f\xec\x4b\x5b\x8c\x1a\x86\x17\x6c\x85\xf6\xf9\xa3\x10\x31\x5f\x6f\x1c\x4c\xfd\xae\x49\xa2\x73\xe4\x4f\x66\x6b\x5f\x3f\xca\x1e\xe4\x42\x7b\x95\xe4\xeb\x95\xfc\x4c\x65\x6e\x7b\x48\x67\x97\x35\xec\x56\xa6\x1f\x3a\x59\x52\x2e\xe9\x78\xf9\x96\x87\xd1\x50\x10\xa7\x82\xca\x73\xae\xb7\x4b\xdd\x8e\x03\x64\x8a\x63\x7f\xd6\x95\xb1\x70\x9f\xda\xf9\x4b\x57\x74\xdc\xee\x5e\xf3\x55\xf9\x39\x5a\x1b\xee\x4d\x37\xb6\x75\xc5\xd0\x12\x80\x68\x8f\xf2\x02\xa3\x6c\x80\xfd\xcf\x84\x6b\xb1\x42\x90\xae\x08\x02\x8e\x51\x04\xed\x5a\x48\x4b\x0b\xbd\xc9\x0d\x21\xd9\x52\x90\x6c\xdb\x4a\x84\x44\xb0\x86\x96\xd8\x18\x57\x36\x88\x80\xa2\x96\x63\x8e\x56\x3f\x33\xc7\xac\x15\x92\xa3\x08\x28\x8e\x13\xba\x84\xe7\xa7\xd1\xaf\x9a\xc7\x2f\x16\x09\x17\x36\x7b\xbe\x4f\xe3\x6a\xb2\xe4\x56\xf0\xfb\x98\x08\xf1\xe5\xb8\xc7\xf8\xd8\x35\xd2\xa0\x55\x64\x9b\x43\xcc\xd8\x7a\x9b\xcf\xab\x8b\xe1\x64\x17\x76\x25\x69\x0b\xa0\x81\xbc\x0a\xf8\x53\xfe\xf4\xfb\xb0\xc7\x20\x08\x7c\xf3\xcd\x28\x7e\x98\xd5\x62\x92\x74\xda\xd4\x04\x92\x6e\x96\xfe\xec\xe8\x87\xa3\x7e\xd5\x19\x9f\xf2\xad\x5a\x73\x46\xcf\x89\x4e\x5f\x82\x0d\x74\x77\x2c\xee\x96\x5b\xaf\xd9\xa3\x61\x77\x52\xeb\x23\x7f\x1e\x2f\xeb\x51\x31\xf2\x92\x63\x7c\xd5\xd4\xa4\xf8\xde\xaa\xee\x54\xcd\xef\x8f\x95\x51\xbd\xf6\xf1\xab\xc8\xa3\xc7\x75\x6c\xae\x63\x87\x67\x2a\xf8\xd8\xd5\x30\xda\xfb\xb1\xb5\x32\x69\x33\x7a\x1f\xb7\xb7\x0b\x61\x69\x9d\x6c\x2e\x9b\x60\xf2\x78\x6b\x52\x0f\x12\x0b\x05\x75\x56\x9e\x3d\x73\x4a\x9a\xaf\xa7\x58\xd6\x33\x3f\xb8\xcd\x5f\x48\x85\xa6\x7f\xc5\xf5\xd4\x0a\x97\xce\x78\x6e\xeb\xf9\x31\x4c\x1d\x9f\xae\xcc\xd9\xf7\xa4\xf3\x3a\x65\x8e\xa1\x6d\xa7\xea\x35\x72\xfa\x16\x1f\xd8\xec\x3e\x6b\xb2\x98\x9d\xca\xf7\x7e\xe2\xee\x3b\xe2\x27\xf5\x8d\x8f\x63\x7b\xfb\x90\x32\xda\x56\x46\x38\xfd\x84\xc6\x4b\x66\x87\xe5\x3d\xdd\x59\xaf\x8a\x3c\x46\x27\xae\x15\xcb\xac\xff\xd0\x1e\xcd\x6a\x9b\x7e\x74\xa3\x30\xbc\xc3\x5b\x46\x59\x57\x88\xf0\xb6\x62\xc6\xe7\x1e\x15\xd0\x40\x31\x5d\x0e\x06\xfe\x0a\x7f\x08\x13\x9c\x2e\x70\xa5\xe2\xcf\xb5\x4e\x73\x23\xd5\x42\x37\x72\x70\xb9\xdc\xd9\xf0\xeb\x97\xf6\x5b\x52\xc4\xb1\xfe\x2b\xae\xbf\x02\x00\x00\xff\xff\x08\xe5\x7c\x31\xd5\x04\x00\x00")

func test_certsNodeCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeCrt,
		"test_certs/node.crt",
	)
}

func test_certsNodeCrt() (*asset, error) {
	bytes, err := test_certsNodeCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.crt", size: 1237, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x37, 0x1e, 0xf5, 0xc7, 0x13, 0xa3, 0x2, 0xa1, 0xd4, 0x15, 0x32, 0x83, 0x1a, 0xc4, 0x87, 0xce, 0x56, 0xab, 0xe2, 0x61, 0xee, 0x77, 0x54, 0x17, 0x21, 0x34, 0xbe, 0x36, 0x8e, 0x55, 0xd6, 0x42}}
	return a, nil
}

var _test_certsNodeKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xa7\x12\xa4\x50\x02\x85\x61\xcf\x53\x8c\xa7\xb6\xc8\x0d\x88\x11\x84\x4b\xce\x19\x1c\xd0\x4d\xce\xa1\x1b\x78\xfa\xad\x1d\xbd\xc7\x1e\xf3\xbb\xef\x3f\xff\x1b\x0f\x64\xd5\xfa\xe3\xf9\xdc\x1f\xc7\x53\x23\x2e\x00\x7f\x74\x90\xfe\x7b\x20\x53\x55\xc1\xc2\xa9\x3c\xc7\xe9\x02\xe7\x02\xee\xa8\x59\xe9\xc3\xfa\xd4\xa1\x91\xfc\x13\x01\xa5\xdc\x44\x75\xf6\x7b\x66\xd1\xe9\x39\x29\x32\x2d\x90\x50\x22\x41\x4c\x06\x56\x47\x34\x0c\xcc\x1a\xa2\x73\xd5\xaf\x05\x60\x78\xb1\x34\x67\x84\xac\x46\xbc\xc4\xb5\xa2\x8e\x91\x35\xe7\x45\xa2\xfa\x1c\x6c\x3f\x21\x31\x77\x60\x85\x74\xca\x7b\x2a\x91\x3f\x12\x63\x34\x5f\x5a\x7e\x81\x28\x13\x38\x0c\xb9\x17\x28\x58\xfe\x05\xe7\x9c\xec\xb5\x6c\x12\x2d\x16\x32\xba\xac\x20\x2a\xd3\x4a\x09\x19\x22\x49\x20\x16\xcd\x54\x36\x2b\x84\xed\xbe\xde\xa4\x50\x89\x28\x20\x37\x60\x5e\x44\x34\x79\x64\xe3\x40\x23\x1f\x17\x66\x4e\xc2\xac\xbc\x0a\xdc\xf0\x96\x57\x43\xff\x62\x59\xa3\x16\x48\xb8\x90\x51\xc7\x53\xad\x56\x66\x5f\xc1\x79\x31\xb5\x31\x77\x3f\xf0\xd2\x3f\x16\x8f\xfe\xca\x1e\x55\x23\x47\x66\x29\x68\x19\x16\x27\xa8\xdf\x4e\x94\x75\x2a\xdf\xad\xa3\xeb\x53\xb2\x7b\xf5\x51\xab\x66\x40\x09\x9b\xbd\xe4\xbe\x0f\x66\x85\xb8\xf4\x0a\xf6\x04\x39\x97\xc6\xa0\x6d\xd3\xc5\x7f\xc2\x05\xb0\x3b\x3a\x09\x48\x64\x5d\x05\xe3\x0b\x6d\x8a\xc5\x62\x86\x9b\x91\x4c\x7e\x09\xc2\x9d\xd3\x74\xfb\x47\x6a\xf6\x97\x52\xf6\xa9\xf5\x53\x45\xce\xe5\x78\x6e\x56\x79\x4e\xb1\x1f\xe9\xf0\xdc\x0c\x6d\xf4\xa1\x69\x63\x48\xbd\xf3\x84\xd7\xc6\x93\x16\x5d\x32\x62\xe4\x4f\xca\xdc\x25\x62\x03\x90\x6e\xa4\xe9\x84\x81\x67\x0f\xf4\x5a\xbd\x87\x66\x59\x7a\x93\xc3\x5e\x0d\x72\x6b\xd8\x0b\x10\x03\x0b\x0c\x4f\xe8\x54\x12\xba\x83\xb7\x1b\xfa\xfa\xf6\x7a\x87\xbc\x39\x74\xd5\xa7\xf4\x14\x6b\xa5\xfc\xc5\x91\xd0\x0e\xe0\x88\xb7\x7c\xf0\x71\x27\xd1\x82\xdc\x95\x44\xe8\x04\x0c\xad\xb1\xac\x87\xc9\x66\x3c\xb6\x50\xcd\x71\xc8\x26\xaa\xa2\x0d\x06\x04\x46\xf6\x59\x4d\x07\xb8\x79\x3b\x8d\x3e\xed\x39\x83\xa3\xeb\x70\x3c\x4c\x7f\xd4\xfb\xde\x12\xe5\xbd\x71\xf5\x3e\xa5\xb2\x92\x46\xf2\xb4\x90\xd9\xc5\xd2\x19\x38\x75\x00\x19\x6a\x4f\x35\x17\x6b\x0e\x68\x56\xc4\xef\xe4\x6b\x3c\xe9\x37\xdc\x52\x55\x1a\x02\xab\x3b\x82\x1b\xee\xf6\x35\x88\x4a\xdc\xbc\x56\xba\x79\xbe\x4b\x6c\x9a\x99\x26\x8c\xd4\xcf\xbf\x34\xc0\x35\x1a\x04\xe2\xd7\x15\xcd\x6c\x70\x6a\x94\xdf\x3d\x30\xae\x9b\x8b\x92\x3d\xdc\xdc\x6a\xcb\xb4\x99\xb7\x7c\x70\x9d\xac\x5c\x0e\xfc\xad\x59\xc6\x67\x11\xc5\x2c\x7a\x96\x35\x6e\x2b\x58\x50\x4a\x26\x83\x18\x42\x04\x29\x79\x8a\x5e\xa8\x53\xc0\x5d\xb1\x51\x94\x9e\x59\xfb\xf7\x7c\x17\x44\x4e\x4a\x2d\xb5\x4d\xad\x1b\xe6\xcb\x2d\xeb\xe3\xd9\xb7\x3f\xf0\x28\xe3\x79\xd3\xae\xff\x80\xa3\x59\xdb\x81\x19\x20\x64\x29\xb7\xe7\xb3\xf0\xa9\x43\x58\x1a\xc6\xf8\xf8\x4b\xfa\x0a\x1b\xb1\x9c\x1c\xf2\x11\x91\xda\xf3\x25\x49\x27\xbc\xb8\x41\x54\x7a\x89\x7f\x67\x17\xac\xef\xdf\xe0\xb6\xd4\x22\xae\xaf\xad\xeb\x3c\x48\x2a\x8c\x1d\xa9\xf1\xef\xf9\x75\x9a\x76\x5b\xe8\x9b\x24\x26\x18\xdd\x34\x72\xac\x5f\x37\x62\xbb\x26\x1f\x65\x70\xd8\xda\xf9\x38\x69\x2c\x73\x48\x0a\x5a\x51\x1f\xdf\xfc\x57\x4c\xf3\xac\x0d\xc9\xaa\x6a\x1a\x4b\x28\x75\xbf\xfa\xb9\xc0\xfa\xb9\x3d\xdf\xd7\x46\x33\x27\xf6\x48\x2c\xec\x1b\xf5\x7c\x24\x66\xdf\x86\xe6\xd3\xd9\xa6\x31\x71\x7a\xb1\x80\xf9\x09\x15\x4d\x93\x09\xf1\x34\xc2\x17\xa2\xae\x48\x28\xb7\x73\x8f\x6f\x1a\x7e\x9a\xa7\xaa\xb4\xbd\xc0\x6d\xd2\x68\xa5\x42\xdb\x4f\x07\x8e\xa8\xfd\xf7\xb2\x0a\xa4\x30\x90\xf7\x1b\x30\xd5\xbb\x49\xb0\xcd\x09\x57\x3d\x92\x83\xeb\x28\x36\xc8\x9b\x8d\x6a\x27\x4f\x35\xd5\xce\x7c\xb7\x05\xc1\x47\xa6\x08\xe3\xc5\x0a\x93\xcd\xe4\xfe\x06\xc0\x6f\x8d\xc4\x62\x51\xa1\x4e\xf9\x54\xbf\x34\xbb\xa8\xf2\x9d\x50\x97\x13\xa5\xe8\x16\xce\x22\x00\x6d\x72\x98\xbb\x8d\x2f\xc2\x43\xd8\xe5\xbd\x23\xb9\xb6\xa6\xf5\xbe\x12\x5a\xf7\xe1\x50\xb4\x47\xf0\xc3\x59\x7f\x3d\x9f\x96\x65\x8b\xf5\x0c\xc1\xfa\xce\x17\xe6\x7d\x6c\xdf\xe9\x5c\x12\x7e\x7f\x4f\x28\xa7\x25\x04\xb0\xf7\xd2\x95\x7e\x8e\x6a\x09\x82\x77\xe5\x70\xde\x2a\xef\xc2\xba\x18\x71\x13\xaf\xa6\x98\x4d\x35\xf3\x4a\xb7\x3d\xfc\xd2\x14\x65\x74\xc6\xb4\xe2\x70\xec\xdb\xa3\x91\xe9\xf9\x03\xc4\x97\xbe\x49\xe0\xa9\x2d\x4e\xa5\x4f\xce\x6c\xb1\xd2\x02\xc5\xba\x3a\x5f\xbb\xa2\x1e\xf2\x5e\x23\xc4\x7e\xba\x7b\x41\x65\xbd\xe9\x43\x14\x72\x1a\x94\x69\x41\x72\xbe\x4b\xe5\x5a\x89\x38\x30\x80\x08\x25\x5e\x7a\x8f\x5e\xe7\x24\x42\xd1\xb8\x0d\x16\xdb\xf4\xa6\x4a\xb4\x3b\x4f\x15\x13\xbb\x58\x69\xea\x30\x17\xdf\x34\xee\xf7\xa9\x88\x96\xbb\xbf\x8f\x4c\xcd\x99\xf4\x21\x26\x31\x3b\x70\xb5\x86\x10\xbe\x70\xe4\x86\x1b\x2f\x73\x69\xf6\x0d\xa7\xac\x0b\x8f\xdd\x30\x35\xce\x6b\x37\x93\x13\xfe\x18\xef\xf5\x57\x5f\xed\xc2\xd6\x03\x29\x36\x11\x6e\xe5\xb8\x0f\xa8\x37\x78\x0d\x45\xd7\xd5\x2c\x06\x8d\xcd\xab\xaa\xfe\x25\x0b\x71\xe5\xe5\xc9\x54\xa3\x52\x3b\xc7\x4a\xee\x20\xe6\x67\xd9\x52\x6d\x08\x49\x29\x11\xef\x67\xb2\xe8\xf2\x18\x73\x94\x40\x13\xad\xa7\x25\xd2\xa4\xaa\xa3\x47\x3a\x68\x52\x9d\x5f\x5f\x3f\x72\x89\x6a\x45\x75\x61\xa1\xbc\xc8\x21\xb8\xa3\x8a\x70\x57\xfe\x63\xf2\xd2\x7e\x37\x64\x03\x82\x52\x3a\x18\xd8\x88\x73\x63\x2c\x01\xc5\xe5\x24\x73\x96\x51\x5f\xee\xc3\x04\xfd\x3a\x7a\x09\x3e\x9f\x38\xe7\x8d\x24\xad\xab\x9f\x91\x00\x98\xaa\x6c\x58\x21\x5e\xb3\x91\x21\x74\x34\x39\xf8\xac\xa7\x74\x32\x61\xd7\x7a\xca\xb3\xba\xc0\xd3\xe4\xfe\xfd\x0b\xfd\x63\x05\x58\xe2\xff\xe7\xe6\xbf\x01\x00\x00\xff\xff\x89\x3a\x32\x12\x8f\x06\x00\x00")

func test_certsNodeKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeKey,
		"test_certs/node.key",
	)
}

func test_certsNodeKey() (*asset, error) {
	bytes, err := test_certsNodeKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xec, 0x4e, 0xa1, 0x64, 0xe2, 0xee, 0xd1, 0xd8, 0xa8, 0x97, 0xa8, 0x6f, 0xeb, 0xf3, 0x29, 0xd6, 0x0, 0xd5, 0x5b, 0x29, 0x11, 0xbe, 0xe3, 0xd3, 0x85, 0x1, 0xcc, 0xec, 0x29, 0xff, 0xf0, 0x2d}}
	return a, nil
}

var _test_certsTenantSigning10Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\xcb\x92\x9a\x40\x14\xc6\xf1\x3d\x4f\x91\xfd\x54\x6a\x84\xc1\x44\x17\x59\x9c\xbe\xa0\x2d\x76\x4f\xc0\x06\xa4\x77\xdc\xd2\x0c\xb6\x28\x19\x19\x1a\x9f\x3e\xe5\x54\x25\x9b\x9c\xe5\x6f\x75\xea\xfb\x7f\x7d\x1c\xa2\x1b\x26\xbe\x60\x1a\x4b\x16\x30\x0c\x92\x7e\xaa\xc3\x19\x43\x61\x87\xd1\x4b\x01\x04\x34\xc5\xa0\x29\xe2\x90\x6c\x60\xbe\x99\x8a\xc0\xc8\x0f\xd3\x14\xea\x9c\xa4\x51\x44\xe8\x2c\x12\x95\x2d\xdb\xb2\x8f\x34\x97\xa0\xd3\xcd\xfa\xb7\xa3\x32\x5f\x27\x9e\xe9\xcb\xb3\x19\xd5\x8c\x88\x3a\xee\x16\x45\xa6\xae\xb9\x17\x2c\x94\x84\x26\x98\x16\x33\xef\xa8\xe5\x32\xb1\x82\x80\x15\x12\x15\x0f\x13\x77\x6a\x79\x07\xd6\xf9\x8b\x1c\xfb\x76\x4f\x60\x40\x5a\xa4\x08\xb8\x64\x6e\x6c\xca\x73\x30\xd6\x18\x2c\xc7\x28\x29\xbd\x9b\x29\xdf\x90\x2c\xb2\x7a\x2c\xb2\x65\xcf\xa8\x30\x55\x1f\x5f\x1d\x75\x36\x5d\x7e\x8c\x0d\xc7\x97\x09\x45\x39\x09\xbd\x74\x82\x99\xc2\xe9\xe3\xed\x69\x5e\x17\xd9\xda\x5c\xe6\xf5\xf2\xe5\x16\x56\xe2\x9b\xcf\x18\xa9\x87\xe1\xe7\x3e\xbf\x8f\x34\x1a\xbb\x31\xa0\x5b\x27\xcd\x8b\x8e\x11\x68\x38\xf8\x1b\x70\x93\x9a\x4c\x14\x3d\x4f\x11\x85\x89\x6d\x35\x01\xfe\xf8\x68\x1b\x73\x04\xbf\x56\x14\x3a\x80\x7f\xfb\x80\x40\x80\x82\x57\x27\x24\x4a\xef\xf5\x3b\xf3\xd3\xb8\xf5\xfb\xe0\x9a\x5d\xdb\x83\xbb\x13\x15\xdc\x0e\x66\x21\x2b\xaf\x6c\xbe\x8f\x07\x7d\x77\xfd\xbe\xcc\x3f\x9e\xbc\xd6\xbd\xbf\xaf\xaa\xc1\xad\xa0\x38\x9e\x2e\xe7\x86\x38\x72\xb5\xca\xdb\x67\x35\x60\xdb\xd4\xee\xeb\x4e\x54\xd1\xe9\x87\xf3\x19\x88\x0a\xf2\x7f\xb4\x3f\x01\x00\x00\xff\xff\x31\xac\x52\xce\xd1\x01\x00\x00")

func test_certsTenantSigning10CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning10Crt,
		"test_certs/tenant-signing.10.crt",
	)
}

func test_certsTenantSigning10Crt() (*asset, error) {
	bytes, err := test_certsTenantSigning10CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.10.crt", size: 465, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0xf1, 0x2b, 0x7, 0xa6, 0x5b, 0xb1, 0xe4, 0x13, 0x15, 0xa2, 0x2c, 0x82, 0x76, 0x89, 0xb, 0x36, 0xef, 0x55, 0xd4, 0xaa, 0x7d, 0x62, 0x21, 0xfa, 0xfb, 0x4, 0xa3, 0x80, 0xd2, 0xd, 0x4a}}
	return a, nil
}

var _test_certsTenantSigning10Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x05\x01\x27\x57\x77\x4f\x3f\x85\x80\x20\xcf\x30\xc7\x10\x57\x05\x6f\xd7\x48\xb0\x28\x97\xaf\xb3\x89\xb3\x63\xa0\x63\xb9\x53\x60\xa4\x8b\xb7\x51\x58\xb9\x93\xb3\xa7\xab\xa7\xab\x93\x41\x71\x71\x92\x41\xb8\x57\x45\x90\x45\x6e\x8a\x53\xb8\x49\x66\xb0\x63\x41\xa1\x51\x45\x70\x95\xb3\x7e\x91\x85\x9f\xb7\xa9\xb9\xa9\xbe\x87\x7b\x46\xb1\xab\x51\x09\x17\xd8\x18\x57\x3f\x17\x4c\xa3\x01\x01\x00\x00\xff\xff\xac\xac\x22\x49\x77\x00\x00\x00")

func test_certsTenantSigning10KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning10Key,
		"test_certs/tenant-signing.10.key",
	)
}

func test_certsTenantSigning10Key() (*asset, error) {
	bytes, err := test_certsTenantSigning10KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.10.key", size: 119, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf8, 0xa8, 0x50, 0x1f, 0xe8, 0xf1, 0x43, 0x4b, 0x8d, 0xb0, 0xb5, 0xfc, 0x7, 0x55, 0x4e, 0xce, 0x2c, 0xc2, 0x64, 0xd2, 0x5a, 0x93, 0xd0, 0x18, 0x36, 0xf7, 0x6, 0x8b, 0x4a, 0x8a, 0xdc, 0x86}}
	return a, nil
}

var _test_certsTenantSigning11Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\xbb\x92\x9b\x30\x14\xc6\xf1\x9e\xa7\x48\x9f\xc9\x98\xc5\xac\x77\x29\x52\x1c\x5d\xc0\x5a\x2c\x65\xc0\x02\x16\x3a\x6e\x91\xad\x60\x07\x73\x19\x81\x9f\x3e\x63\xcf\x24\x4d\x4e\xf9\xab\xce\x7c\xff\x6f\x8f\x43\x34\x60\xe2\x0b\xa6\xb1\x64\x3e\xc3\x20\xe9\x53\x2d\xce\x18\x0a\x35\x46\xdb\x12\x08\x28\x8a\x41\x51\xc4\x21\x09\x60\x9d\xba\x9a\xc0\xcc\x8f\xc6\x84\x2a\x27\x69\x14\x11\xba\x8a\xa4\xc8\x5e\x4f\xd5\x35\x52\x5c\x52\x95\x06\xde\x60\x15\x99\xab\x12\xa7\xbb\x56\x97\x6e\x2e\x56\x44\x8a\xcf\x0f\xbb\xcc\x8a\x3e\x77\x7c\xbb\x90\xd0\xfa\xc6\x5e\xb9\xa6\x0b\x97\xc9\x22\x08\x2c\x42\xa2\xf2\x61\xe2\x4e\x17\xae\x61\xb1\xfe\x22\xc7\xee\x72\x20\x70\x43\x4a\xa4\x08\xb8\x64\x2f\x71\x57\x5d\xfc\xb9\xc1\xb0\xf0\x23\x4a\x2a\x67\xea\xaa\x33\x92\x65\xd6\xcc\x65\xf6\x7a\x65\x54\x74\xf5\x35\xee\xad\xe2\xd2\xe9\xfc\x33\xee\x38\xfe\x6d\x50\x94\x93\xd0\x49\x0d\xac\x14\x2e\x93\xb9\x6d\x77\x87\x00\x0f\x7b\xef\x78\xda\x55\x5b\x1f\xc7\x8e\x4a\x7a\xfc\x0b\x95\xee\x64\x07\xf1\xf9\xe3\xfd\x56\xa4\x93\xa5\xab\x59\x33\x02\x2d\x07\x37\x80\x97\xa4\x21\x86\xa2\x8d\x89\x28\x18\xb6\x57\x04\xf8\xe3\xa3\x7d\xcc\x11\xfc\x7c\xa7\xa0\x01\xfe\xed\x03\x02\x01\xfa\x51\x5b\xac\x76\x37\xe3\x89\xe6\x77\x1c\xd4\x87\x11\x1f\xe5\x30\x84\x63\x7c\xb8\x8f\x2b\x46\x7d\xeb\x95\x78\x7c\xeb\x00\x2b\x61\xf2\xac\xaa\xe5\x57\xbd\x84\x8d\x77\xd7\x9b\x73\x12\xbf\xb5\xf6\x9c\x4f\xd6\xee\xdc\xeb\x32\xf1\x54\xbb\x55\x43\xbd\x34\x37\x3b\xb2\xbf\x5b\xcf\x40\x54\x90\xff\xa3\xfd\x09\x00\x00\xff\xff\xdc\x7f\x51\x50\xd1\x01\x00\x00")

func test_certsTenantSigning11CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning11Crt,
		"test_certs/tenant-signing.11.crt",
	)
}

func test_certsTenantSigning11Crt() (*asset, error) {
	bytes, err := test_certsTenantSigning11CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.11.crt", size: 465, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5a, 0x50, 0x3b, 0xb1, 0x16, 0x4a, 0x9a, 0xfc, 0xb9, 0x48, 0x1, 0x7d, 0xb5, 0x65, 0x57, 0x11, 0xbb, 0x4f, 0x18, 0xf6, 0x8f, 0x60, 0xd6, 0xea, 0xc6, 0xa4, 0xff, 0xe8, 0x5e, 0x7, 0x4a, 0xc3}}
	return a, nil
}

var _test_certsTenantSigning11Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x05\x01\x27\x57\x77\x4f\x3f\x85\x80\x20\xcf\x30\xc7\x10\x57\x05\x6f\xd7\x48\xb0\x28\x97\xaf\xb3\x89\xb3\x63\xa0\x63\xb9\x53\x60\xa4\x8b\xb7\x51\x58\xb9\x93\xb3\xa7\xab\xa7\xbb\x6f\x54\x86\x63\x58\x5e\x62\x44\x58\x90\x5b\x40\x70\x40\xa0\x91\x8f\x73\x56\x52\x56\x7a\x9a\xa7\x6f\xba\x77\x9a\x7f\x49\x85\xa5\x69\xa6\x6f\x6a\x9a\x93\xb9\xa5\x91\x1b\x17\xd8\x18\x57\x3f\x17\x4c\xa3\x01\x01\x00\x00\xff\xff\x68\xac\xd9\xc3\x77\x00\x00\x00")

func test_certsTenantSigning11KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning11Key,
		"test_certs/tenant-signing.11.key",
	)
}

func test_certsTenantSigning11Key() (*asset, error) {
	bytes, err := test_certsTenantSigning11KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.11.key", size: 119, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x5f, 0x5b, 0xbb, 0xba, 0xab, 0x40, 0xef, 0x57, 0x2d, 0x32, 0x6d, 0xc0, 0x21, 0xea, 0xfb, 0x77, 0x1, 0x8d, 0xe4, 0x8a, 0xe2, 0x1b, 0xa1, 0x9e, 0x87, 0x70, 0x84, 0x7f, 0x6b, 0x32, 0xf5}}
	return a, nil
}

var _test_certsTenantSigning2Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\xbd\x92\x9b\x30\x14\x86\xe1\x9e\xab\x48\x9f\xc9\x98\xc5\x26\xf1\x96\x47\x48\x60\xe1\x08\xaf\xb0\x24\x04\x1d\x38\x31\xc6\x16\xe0\xdf\x08\xed\xd5\x67\xbc\x93\x49\xb3\xa7\x3b\x4f\xf5\xcd\xbc\xdf\x9e\x87\x48\x42\xb3\x2f\x11\xc9\x05\x8d\x69\x04\x82\x7c\xa8\xc7\x28\x45\x6b\x1c\xa1\xe0\x3b\x60\x68\x49\x04\x2d\x41\x0c\x64\x02\xee\x6e\x76\x18\xee\x6c\x7b\xb3\x6b\x5e\x62\xc5\x39\x26\x2e\x95\x55\x11\x1e\x9a\x81\xb7\xac\x43\xb2\x09\xee\xc6\x6b\x3a\x24\xea\xe2\xd7\xa3\x2e\xc2\x81\x92\xcc\xec\x86\xfc\x5c\xf5\xe6\x58\xea\xdc\x30\xb4\xd0\x58\x50\xc7\x04\x99\x32\x41\x7c\x86\x89\xbf\x51\xe3\xd3\xe6\x4c\x10\xf7\xfc\xbd\x7f\x68\x7f\x0a\x72\x65\xd1\x29\x81\x17\x49\x60\x62\x9d\x4a\xd4\xa3\x2c\x42\x9f\x62\xda\xaa\xe4\xf5\x5a\x15\x8b\x56\x06\x66\x68\x7a\xf3\xa8\x1c\xc2\x95\x4e\xfd\xba\xa8\xce\x5e\x19\xc4\x7e\x25\xe0\xf2\x7f\x36\xb0\x03\xa4\x7b\x6d\xd1\xfa\x65\x97\x1d\xa6\xfc\x9a\xcd\xc6\x47\x9d\x5f\xba\xa2\xd5\x5d\x9c\xdc\x64\xfd\xf6\xbb\x6f\x50\xd7\xbf\xcf\x48\x6a\x7f\x78\xa3\x03\xbb\x3a\xc2\x06\xb5\x99\x5a\xf1\x25\x82\xfd\x92\x20\x60\x11\x5a\x80\xc5\x50\x62\x95\xfb\x02\xf8\x6a\x86\x80\x5a\xc0\x10\xa3\x96\x5d\x2b\x0d\x98\x73\x90\xa7\xc0\x8e\x9e\x39\xf2\xd3\x5b\x22\xb6\x99\x83\x61\x68\x96\xb7\xee\x68\x43\x99\x16\x67\xac\xc3\xcd\x26\x59\xbf\x5b\x27\xa6\x5b\xbe\x9f\x8f\xee\xcf\x59\x05\x75\x38\xd7\x17\x15\x4f\x7d\x4e\x15\x2b\x17\x5f\x99\xf5\xf8\xd6\xec\x6b\xcd\xfb\x72\x87\x65\xf0\x7a\x22\xde\x47\x1c\x92\xe1\xcf\xc1\xfe\x06\x00\x00\xff\xff\xa9\x03\x75\x7b\xcd\x01\x00\x00")

func test_certsTenantSigning2CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning2Crt,
		"test_certs/tenant-signing.2.crt",
	)
}

func test_certsTenantSigning2Crt() (*asset, error) {
	bytes, err := test_certsTenantSigning2CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.2.crt", size: 461, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb1, 0xf4, 0x1c, 0x43, 0xd6, 0x1e, 0xdc, 0xdd, 0xd4, 0x6f, 0x4f, 0xd0, 0xf8, 0x77, 0xac, 0xb5, 0x72, 0xee, 0xa0, 0xed, 0xf5, 0xa9, 0x6b, 0x41, 0x83, 0x2, 0xb1, 0x57, 0x4a, 0x76, 0x74, 0x6d}}
	return a, nil
}

var _test_certsTenantSigning2Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x05\x01\x27\x57\x77\x4f\x3f\x85\x80\x20\xcf\x30\xc7\x10\x57\x05\x6f\xd7\x48\xb0\x28\x97\xaf\xb3\x89\xb3\x63\xa0\x63\xb9\x53\x60\xa4\x8b\xb7\x51\x58\xb9\x93\xb3\xa7\xab\xa7\xab\x53\xa9\x93\x85\x6f\x80\x4f\x96\x49\x48\xb2\xa1\x41\x44\x6a\x49\x52\x4e\x64\x66\xa2\xa9\x8f\x63\x89\x73\x76\x98\x53\xb9\x69\x40\x71\x48\x52\xb9\xb3\x9f\x5b\x7a\x7a\x24\x17\xd8\x18\x57\x3f\x17\x4c\xa3\x01\x01\x00\x00\xff\xff\x97\x89\xdc\x5c\x77\x00\x00\x00")

func test_certsTenantSigning2KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning2Key,
		"test_certs/tenant-signing.2.key",
	)
}

func test_certsTenantSigning2Key() (*asset, error) {
	bytes, err := test_certsTenantSigning2KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.2.key", size: 119, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x13, 0x31, 0xb8, 0x67, 0xe5, 0xa3, 0x4f, 0xf9, 0xf, 0xf4, 0xf3, 0xc9, 0x68, 0x60, 0xea, 0xe0, 0x59, 0x8f, 0x64, 0x9d, 0x69, 0x59, 0x2b, 0x8, 0xf9, 0x6d, 0xdc, 0x0, 0x60, 0xf8, 0xe5, 0x11}}
	return a, nil
}

var _test_certsTenantSigning20Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xbb\x92\x9b\x30\x18\x85\x7b\x9e\x22\x7d\x26\x13\x60\xf1\xad\x48\xf1\xeb\x02\x2b\x3b\x92\x0d\x16\x06\xd4\x81\x21\x5c\x0c\xf8\x92\x65\x25\xf6\xe9\x33\xde\x99\xa4\xc9\xe9\xce\x57\x9d\x39\xdf\xb7\x67\x10\x0d\x98\xf8\x82\x69\x24\x99\xcf\x30\x48\xfa\x49\x2d\xce\x18\xda\x75\x18\xbd\xe4\x40\xa0\xa6\x18\x6a\x8a\x38\xc4\x01\xcc\x6f\xfd\x99\xc0\xc4\x8f\x5a\xef\xea\x8c\x9c\xc2\x90\xd0\x59\xc4\x2a\x59\x34\xc5\x18\xd6\xbc\x83\xfa\x14\x6c\x1e\x96\x4a\xbc\x3a\x76\xfb\xb1\x18\xfa\x49\xcd\x88\xa8\x74\x6b\xe7\x89\xba\x65\xae\x6f\x2b\x09\x95\xaf\xed\x99\x77\xd4\x70\x19\x1b\x41\xc0\x08\xe9\xe7\x4f\x26\x3e\xa8\xe1\x1d\x18\xeb\x2f\xe4\xd8\x33\x3f\x09\xdc\x51\x2d\x4e\x08\xb8\x64\x4e\xd4\x17\x83\x3f\x95\x18\x66\x8e\x51\x5c\xb8\x6f\x7d\xd1\x22\x99\x27\xe5\x94\x27\x8b\x91\x51\xd1\x9f\xc7\xe8\x66\xa9\xa1\xef\xb2\x34\xea\x39\xbe\x6a\x14\x66\x64\xe7\x9e\x34\xcc\x14\x9c\xfb\xe5\x96\xaf\xf6\xd2\xac\xc3\x4b\xa2\x2e\x66\x88\x9a\x7b\xa8\x5f\x38\x6b\x84\xf9\xfd\xbe\x3d\x56\x5e\xbb\xb9\x76\x4d\x61\xa5\xce\xd4\x31\x02\x15\x07\x2f\x00\x27\x2e\x89\xa6\xe8\xbb\x0e\x29\x68\xf6\x5a\x13\xe0\xcf\x45\xaf\x11\x47\xf0\x6b\x4d\xa1\x03\xf8\xf7\x0f\x08\x04\xac\xfc\x6a\xc5\xeb\x0f\x05\x45\x89\x1f\x78\x3f\xec\xa4\x67\xdf\x28\x56\x87\xc1\x3d\xb2\xb6\x5d\xe9\x97\x44\x8d\xfb\xc9\x69\x8e\xab\xaa\xed\x32\xb7\x12\x59\x70\x2d\x9e\xed\xea\xec\x73\xbd\x4c\x1f\x66\x69\x8d\xef\x72\x33\x5e\x0e\xdb\xc5\xf2\xa1\xd2\xc3\x79\x0a\xb4\xfd\xc3\xfa\x14\x44\x05\xf9\x5f\xda\x9f\x00\x00\x00\xff\xff\x7f\xb0\x4b\xcd\xd1\x01\x00\x00")

func test_certsTenantSigning20CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning20Crt,
		"test_certs/tenant-signing.20.crt",
	)
}

func test_certsTenantSigning20Crt() (*asset, error) {
	bytes, err := test_certsTenantSigning20CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.20.crt", size: 465, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x39, 0x84, 0x66, 0x9c, 0xe8, 0xaf, 0x81, 0x60, 0x65, 0x57, 0x27, 0x2a, 0xe6, 0x83, 0xb, 0x92, 0x88, 0x43, 0x6c, 0x35, 0x83, 0x7c, 0xa8, 0xba, 0x5f, 0x90, 0xd5, 0xcd, 0x7a, 0x47, 0x3d, 0x86}}
	return a, nil
}

var _test_certsTenantSigning20Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x05\x01\x27\x57\x77\x4f\x3f\x85\x80\x20\xcf\x30\xc7\x10\x57\x05\x6f\xd7\x48\xb0\x28\x97\xaf\xb3\x89\xb3\x63\xa0\x63\xb9\x53\x60\xa4\x8b\xb7\x51\x58\xb9\x93\xb3\xa7\xab\xa7\xb7\xa7\x45\x91\xa7\x91\xbf\x6b\x49\x90\x53\x51\x7a\x69\x91\xb9\x61\x72\x65\x51\x56\x64\x6e\x85\xb1\xbe\x47\x68\x72\x94\xa1\x87\xa1\x93\x77\x65\x51\x5a\x52\x7a\x62\x48\x06\x17\xd8\x18\x57\x3f\x17\x4c\xa3\x01\x01\x00\x00\xff\xff\xb7\x13\x01\x7f\x77\x00\x00\x00")

func test_certsTenantSigning20KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning20Key,
		"test_certs/tenant-signing.20.key",
	)
}

func test_certsTenantSigning20Key() (*asset, error) {
	bytes, err := test_certsTenantSigning20KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.20.key", size: 119, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb4, 0x48, 0x8c, 0xd5, 0xc5, 0xfc, 0x40, 0x26, 0xfb, 0x31, 0xf2, 0x72, 0x85, 0xac, 0x4f, 0xdd, 0x8d, 0xc4, 0xb4, 0xf, 0x83, 0x4a, 0xe3, 0x36, 0x33, 0x35, 0x56, 0x59, 0x5c, 0x6b, 0x16, 0x8f}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"test_certs/ca-client-tenant.crt": test_certsCaClientTenantCrt,

	"test_certs/ca-client-tenant.key": test_certsCaClientTenantKey,

	"test_certs/ca.crt": test_certsCaCrt,

	"test_certs/ca.key": test_certsCaKey,

	"test_certs/client-tenant.10.crt": test_certsClientTenant10Crt,

	"test_certs/client-tenant.10.key": test_certsClientTenant10Key,

	"test_certs/client-tenant.11.crt": test_certsClientTenant11Crt,

	"test_certs/client-tenant.11.key": test_certsClientTenant11Key,

	"test_certs/client-tenant.2.crt": test_certsClientTenant2Crt,

	"test_certs/client-tenant.2.key": test_certsClientTenant2Key,

	"test_certs/client-tenant.20.crt": test_certsClientTenant20Crt,

	"test_certs/client-tenant.20.key": test_certsClientTenant20Key,

	"test_certs/client.root.crt": test_certsClientRootCrt,

	"test_certs/client.root.key": test_certsClientRootKey,

	"test_certs/client.testuser.crt": test_certsClientTestuserCrt,

	"test_certs/client.testuser.key": test_certsClientTestuserKey,

	"test_certs/client.testuser2.crt": test_certsClientTestuser2Crt,

	"test_certs/client.testuser2.key": test_certsClientTestuser2Key,

	"test_certs/node.crt": test_certsNodeCrt,

	"test_certs/node.key": test_certsNodeKey,

	"test_certs/tenant-signing.10.crt": test_certsTenantSigning10Crt,

	"test_certs/tenant-signing.10.key": test_certsTenantSigning10Key,

	"test_certs/tenant-signing.11.crt": test_certsTenantSigning11Crt,

	"test_certs/tenant-signing.11.key": test_certsTenantSigning11Key,

	"test_certs/tenant-signing.2.crt": test_certsTenantSigning2Crt,

	"test_certs/tenant-signing.2.key": test_certsTenantSigning2Key,

	"test_certs/tenant-signing.20.crt": test_certsTenantSigning20Crt,

	"test_certs/tenant-signing.20.key": test_certsTenantSigning20Key,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"test_certs": &bintree{nil, map[string]*bintree{
		"ca-client-tenant.crt":  &bintree{test_certsCaClientTenantCrt, map[string]*bintree{}},
		"ca-client-tenant.key":  &bintree{test_certsCaClientTenantKey, map[string]*bintree{}},
		"ca.crt":                &bintree{test_certsCaCrt, map[string]*bintree{}},
		"ca.key":                &bintree{test_certsCaKey, map[string]*bintree{}},
		"client-tenant.10.crt":  &bintree{test_certsClientTenant10Crt, map[string]*bintree{}},
		"client-tenant.10.key":  &bintree{test_certsClientTenant10Key, map[string]*bintree{}},
		"client-tenant.11.crt":  &bintree{test_certsClientTenant11Crt, map[string]*bintree{}},
		"client-tenant.11.key":  &bintree{test_certsClientTenant11Key, map[string]*bintree{}},
		"client-tenant.2.crt":   &bintree{test_certsClientTenant2Crt, map[string]*bintree{}},
		"client-tenant.2.key":   &bintree{test_certsClientTenant2Key, map[string]*bintree{}},
		"client-tenant.20.crt":  &bintree{test_certsClientTenant20Crt, map[string]*bintree{}},
		"client-tenant.20.key":  &bintree{test_certsClientTenant20Key, map[string]*bintree{}},
		"client.root.crt":       &bintree{test_certsClientRootCrt, map[string]*bintree{}},
		"client.root.key":       &bintree{test_certsClientRootKey, map[string]*bintree{}},
		"client.testuser.crt":   &bintree{test_certsClientTestuserCrt, map[string]*bintree{}},
		"client.testuser.key":   &bintree{test_certsClientTestuserKey, map[string]*bintree{}},
		"client.testuser2.crt":  &bintree{test_certsClientTestuser2Crt, map[string]*bintree{}},
		"client.testuser2.key":  &bintree{test_certsClientTestuser2Key, map[string]*bintree{}},
		"node.crt":              &bintree{test_certsNodeCrt, map[string]*bintree{}},
		"node.key":              &bintree{test_certsNodeKey, map[string]*bintree{}},
		"tenant-signing.10.crt": &bintree{test_certsTenantSigning10Crt, map[string]*bintree{}},
		"tenant-signing.10.key": &bintree{test_certsTenantSigning10Key, map[string]*bintree{}},
		"tenant-signing.11.crt": &bintree{test_certsTenantSigning11Crt, map[string]*bintree{}},
		"tenant-signing.11.key": &bintree{test_certsTenantSigning11Key, map[string]*bintree{}},
		"tenant-signing.2.crt":  &bintree{test_certsTenantSigning2Crt, map[string]*bintree{}},
		"tenant-signing.2.key":  &bintree{test_certsTenantSigning2Key, map[string]*bintree{}},
		"tenant-signing.20.crt": &bintree{test_certsTenantSigning20Crt, map[string]*bintree{}},
		"tenant-signing.20.key": &bintree{test_certsTenantSigning20Key, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
