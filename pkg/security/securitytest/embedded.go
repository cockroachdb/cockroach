// Code generated by go-bindata. DO NOT EDIT.
// sources:
// test_certs/ca-client-tenant.crt (1.111kB)
// test_certs/ca-client-tenant.key (1.675kB)
// test_certs/ca.crt (1.111kB)
// test_certs/ca.key (1.679kB)
// test_certs/client-tenant.10.crt (1.099kB)
// test_certs/client-tenant.10.key (1.679kB)
// test_certs/client-tenant.11.crt (1.099kB)
// test_certs/client-tenant.11.key (1.675kB)
// test_certs/client-tenant.20.crt (1.099kB)
// test_certs/client-tenant.20.key (1.679kB)
// test_certs/client.root.crt (1.099kB)
// test_certs/client.root.key (1.679kB)
// test_certs/client.testuser.crt (1.107kB)
// test_certs/client.testuser.key (1.679kB)
// test_certs/client.testuser2.crt (1.107kB)
// test_certs/client.testuser2.key (1.679kB)
// test_certs/node.crt (1.188kB)
// test_certs/node.key (1.679kB)

package securitytest

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _test_certsCaClientTenantCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xbb\xd2\xb2\xc8\x1a\x85\x73\xae\x62\xe7\xd6\x2e\x39\x2a\x04\x13\x34\x4d\x23\x8d\x34\xda\xc8\x41\xc8\x00\xb5\x11\x04\x14\x91\x46\xae\x7e\xea\xfb\x82\x3f\x98\x99\x37\x7c\x82\x55\x6f\xd5\x5a\xf5\xfc\xff\xe7\x4c\xb4\xc3\xfe\xff\x20\x0a\x42\x6c\x63\x08\x42\xf4\x4b\x05\x82\xb1\x65\x2e\x10\x82\xeb\x8a\x01\x8e\x4d\xc0\x70\x00\x7c\x8f\x0f\xb7\x31\x9b\xb5\x28\x3b\xe8\x79\xc2\x96\x35\xfd\xa2\x92\x5b\x34\x75\xf7\x7d\x86\xab\xa9\xf4\x01\x45\x9e\x49\x01\x17\xf6\x0b\x3a\x11\x13\xec\x80\x14\x21\x58\x11\x97\xca\x46\x9d\x2b\xee\x94\x26\x7e\x4f\x82\x88\x23\x9e\x5a\x31\xa5\x16\xe2\xb3\x55\xc8\xfe\x50\xb6\x46\x95\xca\x8c\x51\x11\x71\xa7\x2a\x7d\x81\xd4\x80\xfb\x0b\x92\x48\x88\x44\xbf\xc6\x4a\x52\x95\x3e\x59\x7e\x18\x16\xff\xb0\x1a\x0c\x24\xc0\x1c\x81\xdf\xb0\x3d\xe2\x8f\x3f\x61\x42\x2a\xb3\xd9\x0e\x41\x68\x32\x3f\x36\x01\x09\x2d\xe4\x4f\xa9\x3c\x7e\x0b\xd9\xae\x73\x68\x5a\x34\x84\x10\x9c\xf0\x3f\xdf\x37\x4d\x0a\x2c\xc6\xd0\x51\x00\x16\x84\x80\xf6\x90\x31\x64\x82\xc3\x45\xd4\x88\xdd\xd7\x88\xe4\xe5\xa7\x2b\x72\x56\xee\x34\x14\x46\xe9\x03\x3e\xaf\x2f\xc4\xcd\xbe\x2b\xfa\x0c\x32\x60\x8b\xa0\x1e\xb3\xd6\x7e\xa6\x44\x78\x4e\xb7\x55\x68\x64\xc4\x53\xc5\x66\x77\xbd\xbc\x4f\x43\x56\x76\x70\xa3\xc6\x9f\x3c\x53\x3f\xee\x6d\xd9\x74\xa6\x33\xf8\x77\x5b\xa4\x51\x35\x27\x4b\xa7\xb6\x48\xad\xdd\x8d\xb4\x4e\xdb\x25\xd8\xf5\x42\xdf\xe8\xb8\x5c\x78\x1f\x2b\xc5\x2e\x52\x95\xcd\xe9\xe1\x2d\xd5\x6a\xd2\x51\x30\x93\x96\x0e\x6e\xb5\xec\x53\x63\xe7\x35\x05\x8f\x95\x87\xd7\xe0\xed\x98\x8f\x99\x91\x68\xf3\xd5\xac\x4c\x71\x99\x05\x11\x3f\x9d\x07\x14\xd1\xc9\xda\x38\x92\x5e\xee\x8d\xe1\x01\xe1\x7c\x6e\xc7\x83\xdb\x4a\x61\xd6\x4d\x13\xf9\x36\xfc\xb2\x7d\xf2\x70\x21\xd1\xb1\x7c\x12\x19\xe6\x51\x6b\x1c\x55\xed\xd5\x9b\xeb\x46\x30\xeb\x5a\x43\xd7\x8b\x65\x83\xbc\x19\xb7\xab\x82\xdf\x6d\x4f\xd9\x4a\x6a\x6c\xb5\xb7\xb3\x33\xbd\xb7\xf3\xfd\xac\xb1\xc0\xb8\x89\xef\xf1\x16\x27\xcb\x51\xfb\x3e\x3a\xbd\x51\xb9\x32\x21\x8e\xb2\x41\xd8\x76\x9b\xda\x8f\x99\xa6\x5c\xf5\xaf\x4a\x53\x06\x96\xb9\xdc\x47\xd5\x03\xde\x3f\x1a\xdc\x7b\xd5\xcb\xd0\x21\xe0\x08\x80\x9c\xb4\x04\x52\x6e\xb1\xd4\x8a\x03\xf1\x08\xa8\xb3\x36\x01\xb5\x04\xc0\xbc\x86\x98\xf8\x67\x48\x17\xc4\x91\xb9\xe6\x14\x13\x90\x9a\xe0\xa6\x43\x40\xd1\x7f\xad\xcf\xfa\x6d\x8c\x9c\x4f\x3a\x9f\x47\xa1\x89\xaf\x9b\x3b\x89\xdf\xc5\xb7\x90\xdd\xa4\x3c\x34\xca\x12\xe6\x78\xdf\xf2\xa0\x96\x2f\x56\xd9\xf4\xe5\x8b\xbe\xe5\x79\x6e\x5f\xbd\xb7\xaa\x26\x59\x64\x66\x13\x1d\xd7\xc5\xfc\x9e\xb3\xf1\xf0\x44\x82\xd6\xb9\x77\xda\xef\x5e\xc8\x98\x5f\x38\x46\x16\xf8\x88\xc7\x4e\xdd\xf5\x76\xfb\x72\x0e\xe3\x18\xcd\xee\x59\x71\xef\xe7\xf3\xf5\xb0\x03\xb5\xd2\x25\x70\x0e\xd3\x82\x18\xd4\x1b\x75\x17\x7a\xf5\x49\xf0\xd7\x7b\xa9\xe7\x05\x06\x2e\x77\x25\x35\xc7\x99\xbc\xae\x56\x99\xe2\xbc\x4f\xc9\xd3\x18\x36\x70\x2a\xa5\x28\xc1\x5a\x7c\xf6\x67\x5c\x52\xa8\x5e\xa5\xa9\x2a\xf0\x1d\x4e\x9d\xec\x48\x1a\x91\x04\xa7\xb3\x56\x1f\xef\xb2\x75\xe2\x35\x78\xb4\x41\x40\x07\xab\x05\x43\x51\xb1\x43\x02\xf4\x95\x7d\x3c\x67\x77\xfd\x73\xb8\xe6\x41\x9a\xe9\x97\xa9\x9f\x2b\x79\x3c\xb6\xe1\x0e\x06\x54\x42\xb7\x49\x05\xc2\x3d\x77\xbc\xfc\x60\xc9\x44\x4f\xe8\xf9\x6c\x80\xeb\xea\xe1\xa0\x7a\xf0\xa4\x36\x5a\xf7\xda\x3b\x52\xfd\x47\x31\xe9\xf9\xf4\x2d\xc6\xdb\xc6\xd8\xf2\x23\xd3\xf6\xb3\x7d\xf3\x98\x7a\xe7\x93\xbb\x55\x84\x18\xb2\x77\x76\x49\xbf\xea\xf4\x86\x41\x45\xff\x12\x7e\x35\x81\x7c\xeb\xdf\xea\xf8\x3b\x00\x00\xff\xff\x0e\x3c\xe8\x66\x57\x04\x00\x00")

func test_certsCaClientTenantCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantCrt,
		"test_certs/ca-client-tenant.crt",
	)
}

func test_certsCaClientTenantCrt() (*asset, error) {
	bytes, err := test_certsCaClientTenantCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.crt", size: 1111, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x81, 0x5d, 0xb4, 0x56, 0xf7, 0xbc, 0xb, 0x72, 0x8c, 0xb6, 0x84, 0xec, 0x5e, 0x0, 0x40, 0xbe, 0xe2, 0x97, 0xf3, 0xf8, 0x95, 0xdd, 0x41, 0xfd, 0xa8, 0x62, 0x6e, 0x75, 0x18, 0x9, 0x8c, 0x1f}}
	return a, nil
}

var _test_certsCaClientTenantKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xa3\x5a\x02\x85\xe1\x9c\x55\x74\x4e\x4d\x09\x2b\x20\xbc\x78\x2f\x2e\x46\x98\x4c\x78\xef\x84\x11\xac\x7e\xaa\x3b\x7e\x27\x3d\xc9\x9f\x7d\xff\xfb\x3b\x5e\x52\x34\xfb\x8f\xeb\x81\x3f\x8e\xab\xbd\x81\x2f\xfd\x31\xa4\xf8\xdf\x83\x58\x9a\x26\x4d\xa7\xc6\x03\x60\x08\x00\x4a\x80\x26\xfd\xee\x0c\x1b\x0b\xfe\xe6\xeb\x99\x6f\x0b\x7f\xa6\x9d\x6b\xbb\x4d\x60\xf4\xcf\xc9\x07\x4a\x93\xef\x75\x67\x00\x10\x41\xe1\x85\x0f\x71\x88\xf4\xd5\x35\x70\x0f\xda\xc1\xbb\xf3\x68\x3d\x98\xd0\xc4\xcf\xd8\xfa\x2b\x33\xd7\x3a\xa4\xe7\xb1\xa1\xfa\x87\xb3\x64\x52\xf1\x25\xb4\xc8\xe5\x3d\x55\x4e\x5f\x65\x13\xfb\x8d\x35\xae\x11\xd7\xa4\x36\x22\x7d\x9a\xc6\x3f\xeb\xdb\x11\xea\x28\xff\x26\x7e\x5b\xce\x46\x70\xbc\xd4\xe7\xe3\x74\x55\xe9\x4a\x84\xef\xa0\x5a\x73\x8b\xc5\xbb\x7b\xf0\x51\x11\xec\xb0\xdd\xf1\x05\x1f\xf1\x74\x94\x29\x45\x52\x11\xdf\x51\x61\xd3\x15\x81\x09\x5d\xcd\x99\xca\xe8\x77\xae\xc4\x1e\x68\xa6\x5c\x7c\x30\x6a\x48\xdf\xf6\x50\xa0\xec\x6d\xf8\x3c\xb9\x8f\xbc\x63\xfd\x20\x77\x75\x77\xac\xcf\x5e\x8a\x3d\xda\x61\xa9\x10\x15\x85\xca\xcb\xe9\x5c\x1a\xb3\x02\x7e\xf1\xc8\x83\x3e\x04\x2d\x38\xca\x23\xaa\x83\x57\xc2\x65\x05\x7a\x1f\x8a\x5e\x0e\xbc\x8a\x3f\xbc\x0b\xe7\xde\xa9\xf5\x18\x8d\xb0\xbc\xfc\x56\x2c\x58\x1f\x20\xee\x70\xec\xe5\x62\xe1\xa1\x38\xe6\xcc\x6d\xd6\x7c\x03\x44\x47\x3e\x67\x4f\x09\x0c\x83\xe9\xb4\x69\x57\x56\xf2\xd4\x44\x00\x01\x0f\x26\x8d\x07\x4a\xe7\xc6\xfe\x53\x60\xdc\xce\x15\xe6\x60\x41\x8c\xab\xaf\xb3\x58\xed\x1d\x12\x1a\x21\xf6\xb1\x4a\x6d\xcb\xc4\x86\x78\xe1\xf2\xd6\x56\xa4\x23\x09\x40\xa0\xe3\x64\xc2\xd9\xe4\x04\x6a\x42\x16\x15\x79\xc0\x64\x57\xb9\x56\x16\x5c\x29\x55\x01\xb2\xc6\x0e\x3f\x4f\x98\x77\xd2\x26\xba\xb5\x98\x99\xaa\xcc\x58\x04\x09\xc7\x56\x4d\xe7\x5e\x22\x8c\xa5\xb5\x26\xc4\x13\x83\xec\x66\x9b\x76\x16\xcb\xfa\x58\x9d\x73\xc3\x43\xd5\x4d\x9a\xd9\xec\x10\x65\xc6\x20\xba\xba\xa4\x3b\x75\x6f\x3c\xac\x1c\x66\xc2\xb5\x7a\xb3\x6a\x41\x45\x71\xba\xc8\x85\x87\x2e\x3b\x62\x3c\x5e\xd6\xd7\x7c\x4c\xac\x3a\x7c\xb8\x24\x7d\x6a\x61\x7f\x09\xf1\x13\xa4\xfd\x13\x49\xb4\x2e\xaa\x3d\x5b\xf3\xbe\xbf\x81\x78\x28\x52\x55\x17\x46\x99\x7d\x2e\x9a\xe0\xe2\x5f\x9a\xca\x1b\xa0\xba\x09\x53\x28\x99\xe2\xad\xa7\x50\x3e\xd9\x25\x57\x6c\xd2\x0e\xf3\xa9\xfe\x61\x8a\xe9\x20\xd0\xa9\x78\x1c\xea\xe5\x78\x94\xe8\x24\xe7\x84\x2d\x89\xed\x8c\xf1\x2d\x3b\x19\x45\xb2\xb7\xe6\x3d\x06\x5e\x74\x8a\xd5\x93\x7e\x43\xbc\xb3\xcb\xc1\x2b\x64\xb2\x59\x46\xa7\xba\xc9\xd7\x7d\x17\x08\x0d\x6d\x39\x24\x24\xa1\x8a\x25\xf0\x54\xd0\x32\x0e\xbe\x83\x1e\x25\xd1\x6d\x94\xd9\xef\x23\x67\x41\x40\x81\xe5\xe0\x58\x45\xf6\xb5\x24\xb9\xb1\x47\x93\x90\xf9\x59\x47\xf8\x55\x8f\x56\xb4\x0e\xc8\x50\x05\xb7\x26\xb2\x9b\x39\x0d\xe9\x2b\x9f\xa1\x75\xe7\x18\xaa\x6a\x61\xda\x1f\x2b\x15\x73\xf7\x5c\xa2\x45\xd8\x2f\x85\x55\x4b\xbf\x22\x55\xa4\x2c\xdd\xa9\x4d\x74\x74\x60\x30\x5f\xdd\x0c\x55\xe4\xfd\x7b\x2a\xfb\x03\x1b\x55\xa5\x5f\x8c\x66\xa6\x9d\xa7\x11\xdd\x96\x80\x2a\xce\x1b\x14\xaf\xa2\x27\x6f\xac\x18\x29\x94\x42\x75\xb9\x88\x12\x82\xd6\xa4\x92\xb4\xfd\xec\x5f\xf1\x63\x3f\x3e\x88\xd3\x3e\x4f\xc3\x0a\x61\x5a\xd0\xdf\x6b\x7e\xd0\x6e\xb3\x79\xa1\xb5\x70\xb1\xcb\x55\xe9\x00\x99\x7a\x30\x65\x13\x0f\xeb\x3c\x10\x6a\x73\x5b\xbe\xeb\xc2\x3e\xb3\xeb\x4d\xfa\x45\x46\x2a\xaa\x05\x90\xe9\xee\x57\x6d\xf6\xce\x8f\xd5\xb5\xf9\x87\xa2\x02\xba\x92\x21\xcd\x66\x68\x13\x7a\x42\x8c\x32\x85\x95\x44\x6f\xd5\x3c\x09\xc2\x29\x33\xac\x04\x71\x20\x81\x0f\x63\x67\xad\xd5\xc8\x3f\x37\x25\x90\x9d\x28\x5a\xaf\x2c\x53\x96\xa4\x5d\x18\x35\xa8\x76\x89\xe7\xda\x57\xdf\xe7\xa2\xd1\xcb\xf0\xc8\x65\x26\x17\xa5\xb9\x13\xaa\x18\xc0\x03\x9b\x96\x7a\x54\x4a\x33\x54\x2e\xe5\xa6\x16\xee\xe2\x6a\x64\x96\xd8\x0e\x1c\x35\x0b\xa4\x47\x2c\x8d\x92\x55\x6f\x01\x38\xf4\x6c\x9c\x49\x34\x62\x7e\x81\x90\x3e\x64\x5a\xc6\x21\x25\x09\x54\x0d\x8e\x23\x7e\xdb\x57\xf8\xad\x95\x63\x2d\x8e\x10\x5d\x25\x0d\x29\xb6\x1f\x0b\x6a\x8e\x24\x40\x6f\xb4\xa1\xea\x0c\xa0\x65\xa9\x3d\x79\x2d\xd2\x11\x65\x81\x3f\x6b\xa0\xfc\x99\xb4\x6e\xe2\xac\x07\x0b\xdf\x24\x5d\x8b\x74\xac\xd7\xc9\x97\xf2\x2c\x10\x1c\x89\x23\xdf\x14\xdd\x14\xf2\x18\x22\x68\xf1\x3d\x1b\x4e\x0c\x9b\xa0\x22\x34\xf8\x0a\x0a\xfc\x59\x90\x1f\xfe\x16\x65\x4a\xd0\x0f\x38\x0b\x0e\x7d\x43\x2b\x9c\xd7\x80\x8e\xa3\xd0\x71\xe5\xf9\xa0\xf0\x19\x11\xef\xc2\x5e\xa8\x01\xc5\x25\x95\x74\xa7\xb1\xcf\x1d\xda\xaa\x25\xa3\x56\x73\x8b\xe8\x99\x2f\x15\x76\x8c\x1c\x28\xd5\xe8\xf4\xe6\x3b\x76\x1c\x96\x82\x0a\xc6\x39\x51\x06\x86\x01\xad\x5a\xcd\x44\x1e\x8e\x02\x29\xee\x6e\x49\x2a\x5f\x38\xba\x2c\x0c\x2f\xcb\x96\xdb\xdb\x08\xbd\x24\x7e\xb1\x97\x5e\xf9\x94\x2b\x09\x0c\xd8\xd6\xb5\xd4\xb6\xb9\xbc\x8d\x8d\x18\xf2\x7c\xd7\xab\xe3\xce\x7a\x30\x20\x5f\x71\xfd\x3e\xff\x26\x8b\xf2\x0a\x1f\xfe\x0f\xca\x4a\xea\xd2\xcc\x8b\x42\x17\x39\xb6\x96\x6c\xa3\xba\x21\xda\x33\x02\xf7\x52\xb6\xa0\xa4\xbe\x3f\x39\xae\x3a\xe6\x43\xf3\x76\x3d\x27\xb9\x1a\x19\x4a\xdc\x0c\x5b\x06\xa0\x4c\x95\x5e\xfc\x1a\xdf\x6f\x39\xf1\xb2\xdf\x67\x4b\xa4\x7a\xe3\xbe\x11\x13\x43\x8a\x2e\x2e\xb3\xe4\x5b\x1d\xd6\xf6\x68\xc4\x26\x74\xb7\x4f\x7a\xc3\x0a\xfa\x6c\x57\x21\xd9\x07\x9b\xe5\xbd\xd3\xbb\xd8\xd5\x8f\xf1\x03\x58\x48\xa0\x9d\x9f\xdd\x23\x63\x67\xe2\x35\x15\xc9\xc7\x40\x2b\x7f\x21\xd2\x4b\x7c\xab\xb1\x8b\x8f\x4e\x6c\x20\xff\x48\x91\x6c\xf1\xbf\xa9\xf9\x7f\x00\x00\x00\xff\xff\x7e\x18\xa1\x88\x8b\x06\x00\x00")

func test_certsCaClientTenantKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantKey,
		"test_certs/ca-client-tenant.key",
	)
}

func test_certsCaClientTenantKey() (*asset, error) {
	bytes, err := test_certsCaClientTenantKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0xce, 0xc1, 0x5b, 0xc0, 0xe9, 0xe5, 0x28, 0x17, 0x7d, 0x7d, 0x6f, 0x5d, 0xff, 0x1c, 0x14, 0x11, 0xf5, 0x68, 0x98, 0x3, 0xbe, 0x8b, 0x1a, 0xd2, 0xe8, 0x7d, 0x56, 0xa6, 0x5a, 0x97, 0x78}}
	return a, nil
}

var _test_certsCaCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x3b\xd3\xb2\x3a\x1b\x85\x7b\x7e\xc5\xd7\x3b\xdf\xc8\x41\x51\x8a\x5d\x84\x24\x60\xc4\x00\xe1\x68\xe8\x10\x14\x44\x11\x91\x43\xd4\x5f\xbf\xe7\x79\x8a\xb7\xd8\x7b\xdf\xe5\x55\xac\xb9\x67\xd6\x9a\xeb\xff\x3f\x67\x62\x9b\xb8\xff\x83\x38\x88\x88\x45\x20\x88\xf0\x2f\x95\x28\x21\xc8\xfc\x42\x08\xce\x8b\x0a\x08\x62\x82\x8a\x04\xc0\xe9\x1f\x5b\x79\xf5\xbe\x40\x5b\x83\xfd\xfa\x28\x78\x17\x84\x57\x2e\x10\xe3\x7b\xa7\xcb\x48\x3d\x17\x2e\x60\xf8\x60\x32\x20\x24\xe7\x8b\x43\x6a\x02\x1b\x28\x31\x86\x35\xdd\x33\xd5\x68\x72\x6d\x3f\xf3\xd4\xed\x68\x10\x0b\x2c\x38\x4a\x18\x43\x58\xbc\xd1\x49\x75\x5f\x45\x6b\xd4\x5c\xad\x2a\x26\x63\xb1\xab\x0b\x57\xa2\x0d\x10\xee\x17\x2b\x34\xc2\xb2\xdb\x10\x35\xad\x0b\x97\x7e\x7f\x18\x91\xff\xb0\x06\xbc\x68\x40\x04\x06\xbf\x61\x0e\x16\xf7\x3f\x61\x12\x57\xab\xb7\x15\x81\xc8\xac\xdc\xc4\x04\x34\x42\xd8\x9d\xb9\x3a\x7e\x4e\xaa\xd5\xe4\xd0\x44\x2c\x82\x10\x84\xe4\x9f\xef\x9b\x26\x03\xa8\xaa\xb0\x2f\x01\x04\x21\x60\x1d\xac\x2a\x6c\x82\x43\x64\xda\xeb\xf2\x33\x3b\xe1\xbd\xd4\x12\x7e\x51\xa7\xe3\x59\xb1\xf8\x3d\x2b\x13\x9d\xe7\x14\x6b\x4a\xf3\x29\x84\x92\x19\x23\x93\x91\xbd\x37\x60\x40\xa5\x8a\x74\x1e\x4f\x97\xfb\xde\x58\x2d\x05\x81\xed\x12\xf6\x77\x73\xab\xc9\xa4\x3a\x3c\xfc\x5b\x9e\x84\xd5\x62\xbb\xd6\xe2\x3b\x53\x7c\xed\x0c\x4c\xfb\x99\xd6\xf1\x4c\x56\xde\x63\x72\x12\xd5\xa3\x5f\x49\x4e\x9e\x6b\xdd\x2b\x0d\x2b\x01\x0e\xb0\xd8\x66\xab\xc7\xe4\x66\x7a\xf6\x07\x1c\x67\xc5\x2d\x71\x53\xe3\xed\x5b\xbe\x7e\xab\x9b\x9c\xa7\x9f\x43\xf6\x8a\x66\xeb\xf6\x24\x27\x72\xd7\x95\xae\x42\x48\x52\xc3\x40\x9f\x4b\x79\x32\x9c\x66\xf8\x5c\xe6\xf5\x79\xda\x14\x79\x28\xdb\xdb\xfd\x71\xb7\xe7\xee\x66\x1b\xcc\x59\xe6\xac\x16\xe7\x31\x58\xf4\x9d\x57\x95\x3e\x7e\x65\xcd\x86\x6c\x86\xf1\x80\x4e\x46\x24\x15\xaf\xa6\x58\x25\xcd\x1a\x19\x27\xfb\x29\x5f\xae\x7b\xcd\x1b\xa8\xa9\xcd\x4a\xeb\x1d\x66\xc0\x3c\x35\xe9\x09\x75\x08\x15\xbb\x2f\x0e\x0e\xaa\xc6\x0a\x75\xb4\x2f\xf1\x3e\x6f\xd5\xfe\xb9\x19\x62\x29\xdb\x3f\x88\x23\x9f\x2e\x07\x74\xac\xfd\xb0\xcc\x45\xc5\x7d\xe1\x3c\x19\x7d\x3f\x4d\xa5\x5b\xf3\x23\xa1\x10\x08\x0c\x40\x4e\x5b\x0a\x99\x40\x15\x47\x49\x20\xfb\x80\xed\x96\x26\x60\x48\x02\xd5\xe1\x46\x4d\xf2\x33\xa4\x12\x0b\x6c\x2e\x05\x23\x14\x70\x13\x5c\xb6\x10\x30\xfc\x5f\xeb\x43\xbf\x8d\xc1\xfa\xe1\x04\x17\x55\xca\xd7\xc9\xb9\x4b\x9b\xf8\x1d\x16\x3e\xbc\x83\x5d\x39\xd1\xdc\x30\x5e\xc6\x71\x86\xd3\xfa\x6a\x04\x41\x84\x2f\x78\x41\x6c\x6f\x1b\x4f\x83\x08\xf3\xe6\xa4\x4d\xd1\x73\x72\x57\x63\x38\xa8\xb2\x61\x4a\xd9\x2b\xfd\x0e\xb7\x9c\x28\x85\x95\xa5\xb5\x4b\x87\xfb\xf0\x65\x53\x37\xc6\x56\x51\x7d\x9f\xbd\xf5\x82\xd6\x1a\xd3\x6b\xe7\x3e\xc3\x24\x1f\x47\x90\xa4\x84\x0f\x57\xbe\x75\xfc\x98\x4e\x31\xf7\x24\x23\xb8\x79\x5e\xd9\x9f\xa9\xe6\xbf\x5a\x3e\x24\x81\x76\xbb\x16\xe5\x21\xf2\x68\x72\x5a\xb6\x29\x7d\xe3\xf4\x45\xc5\x09\x1a\xba\xee\x8f\xe5\xf1\x64\x5a\xc8\x1d\x2c\x6f\x77\x14\x74\x34\x57\xfa\x55\xda\xab\xbc\xde\xa4\xf6\xae\x81\x9e\xf0\xfa\xd6\xf5\xee\xd9\x32\x60\xb7\xf0\xdb\xf3\x4e\x57\x76\x7b\x05\xdd\x0b\x79\xf2\x36\x83\xfe\xd0\xb6\x71\xb9\xf0\xb5\x72\xed\x18\xde\xa3\xaf\xe5\xb0\x4d\xaf\x0f\xe9\x73\x7d\x66\x87\x5d\x66\x90\xb8\x81\xe7\xf6\xfa\x4a\x3e\x63\x07\x8d\x4e\xf7\x8b\xb7\x3d\x5d\x6a\x5d\x7f\x60\xac\xf5\xf6\xf2\xb0\xbe\xb1\x39\xba\x7c\xf8\xe0\xa7\x8b\x6a\xa9\x9c\xb8\xb3\x41\xad\x52\x4b\x9d\xa7\x74\xe3\xee\x83\x32\xd1\xa6\x8b\x0f\xfe\x4b\xfa\xd5\x04\x76\xd1\xbf\xd5\xf1\x77\x00\x00\x00\xff\xff\xc7\x8d\x17\x64\x57\x04\x00\x00")

func test_certsCaCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaCrt,
		"test_certs/ca.crt",
	)
}

func test_certsCaCrt() (*asset, error) {
	bytes, err := test_certsCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.crt", size: 1111, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2f, 0xf8, 0x38, 0x56, 0xdd, 0x66, 0x3c, 0xfc, 0x1, 0x66, 0x5b, 0x2e, 0xb0, 0xca, 0x73, 0x47, 0x73, 0xd0, 0x63, 0x6, 0x18, 0x58, 0xa7, 0x9, 0x4a, 0xe1, 0x17, 0xb1, 0x54, 0xe, 0x3d, 0x82}}
	return a, nil
}

var _test_certsCaKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\xb7\x12\xab\x4a\x02\x44\x73\xbe\xe2\xe6\xaa\x2d\x06\x0f\xc1\x0b\x06\x2b\x84\xf7\x82\x4c\x20\x40\x38\x61\xc5\x00\x5f\xbf\xf5\xee\xa6\xdb\x69\x27\x5d\x1d\x9c\xf3\x9f\x7f\x23\x2a\x9a\x6e\xff\xf1\x03\xf8\xc7\xf5\xf5\x18\x86\xca\x1f\x43\x49\xff\x36\x98\xa5\xeb\xca\x04\x75\x11\x42\x43\x82\x9e\x02\x37\x4b\xc9\x7b\xca\xe0\x27\x23\xa6\xde\xf1\x07\x7f\x31\x6f\x2e\x8a\x9b\xb8\x27\x9e\xd3\x67\x44\x61\x95\xb8\x8f\x4b\x8e\xbf\x24\x21\x7b\x56\xfa\x05\xd8\x43\x39\x61\x53\x33\x9f\x9c\x1f\x16\xaa\xc5\x61\x6d\xe4\xbc\x31\x47\xf7\xab\xf2\x1a\xf8\x2b\x6e\xfe\x14\x1b\x32\x77\x7d\xdf\x41\x2c\x47\xf8\x9b\x86\xca\xab\x7f\xa9\x01\xdf\xd6\x6c\x49\x4f\xcf\x14\xa3\x2f\xd7\x4f\xbe\xdf\x91\xa1\x40\x1c\xc1\x11\xc6\xf2\x7e\x4d\x5e\xe3\x29\x74\xae\x8b\x25\x1e\x11\x20\x70\x94\xf0\xba\x07\xa6\x23\x85\xfe\x94\xeb\xdb\xb0\x39\x7c\x12\x74\x9f\xb5\x79\x2e\x49\x83\x41\xcb\xcd\x1e\xf7\x59\xa0\x02\x0e\xcc\xce\xf5\xb8\xe1\x3d\xcb\x6d\xc7\x64\x7a\x39\xea\x8b\xa2\xaf\xa9\xfd\xd0\x84\xbe\x5b\x5a\x86\x25\xee\xec\x5c\xb3\x22\xe0\x83\x6d\x70\xd7\xf6\x77\x82\xd5\xc6\x76\xc2\x3e\x7f\xf6\xf5\x49\xdc\xce\x25\xd6\xd7\xd7\xbf\xe9\xdf\x82\x45\xe8\x5e\xe2\x49\x4a\xff\x78\x11\x72\x59\x32\xd6\x68\xac\x2f\x58\x59\xbe\xb2\xe7\x6f\xf1\x7a\x81\x4c\xf0\xfa\x39\x7f\xcd\x5f\xec\x77\xf8\xdd\x50\xd4\x8b\xbf\xf1\xab\x5d\x2a\xc2\x83\x58\x24\xb1\xc6\xe1\xdc\xc3\x4b\xeb\xee\x49\xdb\x7f\x8a\x1a\xe9\x32\xf4\xa0\x08\x47\x5d\x84\x9e\x54\x48\x2b\xa9\xcb\xe2\x01\xd1\x85\x24\xac\xb1\x5b\xb7\xd1\x34\x25\x02\xe9\x28\x3c\x5a\xf6\x4d\xb5\x5f\x32\x9f\xf1\x24\x28\x95\xde\x9f\xc8\xf2\x6d\x86\x6f\x62\xb7\xa2\xb3\x4a\x7f\x8b\xb8\x91\xf7\x21\x89\x0f\x1d\xfe\x66\xed\x6b\x95\x75\x89\xfd\xe8\xf0\x37\xcb\x6d\x31\x81\xbc\x47\xf9\x2c\x8b\x4f\xc7\xf0\x9e\xa6\xe7\x71\xdc\x73\x54\x93\x27\x63\xe4\x5b\x9c\x6b\x99\xb3\x0b\x0e\x7a\x78\xcd\x50\xdc\x68\x56\x3d\x27\x99\x14\x5f\xd2\xe1\x8d\x18\xb8\x55\x19\x3a\xd1\xe0\x91\x96\xfc\xb8\x80\x4e\x78\xe1\x99\x8b\x0b\x6b\x08\xca\x87\x4e\x7a\x89\x72\x27\x4f\xcd\x54\x52\x2a\x63\x7a\x90\x97\x27\x41\xb5\x14\x1e\xa9\xaa\xab\x3d\x28\x27\x68\x66\xcc\x4f\x47\x3f\x6a\x5e\x65\x8d\xc8\x45\xdd\xa9\x58\x2a\x51\x2a\x5b\xcc\xf6\x5e\x5f\x74\x37\xf7\x86\x2c\x12\xfb\x6d\x5e\x01\xac\x59\xa5\x03\xea\x93\x94\x42\x55\xd7\x11\x3d\x46\x09\xff\x7d\xdf\x67\xec\x19\x05\x7b\xb6\x8e\xc5\x86\x8f\xe3\x00\x6d\xc0\x8c\x43\x8f\xa4\xd4\xf9\xc1\x3e\x48\xaa\x16\x78\x85\xee\xd4\xe3\xaf\xbd\x23\x7d\x83\x64\xe4\x3b\xe3\x2d\xc8\xac\x47\xaa\xed\x9f\x4d\x97\x4d\x1e\x53\x59\x31\x43\xde\xc4\xc0\x51\x13\xa1\xcd\x32\x85\x9c\x83\xcc\xbc\xb1\xc8\xa1\x3d\xd5\xe5\x7b\xc5\x11\x1b\x72\x72\x3d\x36\x91\xcd\x68\x09\x0a\x3a\x03\x44\x65\x2a\x79\xf3\x61\xdc\xf2\xb7\x01\x6c\xfe\xf5\x9c\xd9\xe6\xd7\x50\x1c\x16\xef\xb8\x1c\xe7\x0e\x5e\x7a\xd5\x9d\xda\x80\xd2\xe4\x43\x67\x88\x9f\xa7\xbe\x3a\x6b\x72\x72\x59\x53\xa5\xd3\x6a\x4e\x9f\xf2\xd8\x8f\x32\xbb\x26\xff\x2a\x5b\x2c\x35\x4b\xc0\x32\xcb\x06\x4c\x27\xd7\x5b\x3c\x2f\x9a\x0c\x04\xf9\xd0\xa7\xa4\x7f\xf1\x72\x16\x2b\x52\x25\x84\x45\xca\x1b\xb3\x52\x5d\x08\xb4\xa2\x79\xde\xa4\x41\x23\xfe\x2e\xb6\x70\x09\xcb\x05\x46\x08\x65\xe5\x88\x64\x92\x03\x49\x2d\x13\x7d\x12\x84\xcd\x72\xda\x9b\xec\x7f\x5d\xce\xd3\xf3\xe2\xc3\xbd\xf5\xd7\x32\xc6\x88\x34\x3b\x1f\xff\x94\xde\xd1\x11\x9a\x51\x29\xe1\x29\x9c\x08\x1b\x81\xc8\xbb\x31\xf5\x33\xc9\x4e\x3a\xf7\x92\x4a\xba\xfd\x11\x08\xf7\xa3\xb4\x3a\xb7\xda\xfd\x14\x70\x2e\x7e\x43\x71\x18\xac\xec\xa2\x55\xb1\xb9\x04\x20\x2a\x17\xfc\xc1\xdc\x71\x98\xa3\xb3\xc3\xbe\xc2\xd0\xb2\xb6\x85\x88\xe8\x65\x01\xbc\xff\x00\x87\x96\x98\x24\xd0\xb2\x3b\xda\xc2\x52\xf2\x7d\x50\x26\x4c\xfa\x79\xfe\xef\xe4\x74\x12\x09\x0e\xfa\x97\x97\x0a\x6d\x70\xa5\x10\xcc\x58\x5e\x5d\x1d\xef\x8e\x79\x31\x5d\x87\xef\x37\x7a\x9f\x04\xa5\xb9\x86\xac\x7c\xd6\x48\x99\xdb\xca\xf0\xce\x60\x9b\xc4\x5b\xd4\xdd\x3e\x89\x74\x78\xb9\x25\x3e\x85\x03\xaf\x9a\xeb\xfd\x16\x55\x1c\x62\x8b\xc1\xd0\x68\xc9\x13\x97\xb4\x6b\x03\xf6\x7c\x81\x5c\x50\x57\x91\xdb\x52\xc3\x09\x3e\x9d\x75\x21\x9a\x74\xa4\xa9\x33\x65\xee\xd9\xdf\x26\xd1\x64\x22\x2b\x1a\xf6\x8f\xeb\xd3\x44\x1a\x8a\x36\xe6\xd9\xad\x24\xd0\x0b\x27\x66\x6c\x83\x34\xa4\xc7\x81\x6c\x6e\x0c\x15\xc3\x51\x83\x4f\xd5\xb9\xb3\x84\xc3\xb9\xaa\x72\x90\x14\xe1\xee\x25\x99\x7c\xbb\x0f\xeb\xaa\x8e\x1b\x3d\xa2\xc4\x62\x72\x09\x9b\x1c\xc7\x54\x94\x32\x34\xf7\xbb\x79\x7f\x3b\xaa\x46\xee\x89\x20\xd6\x3f\x9d\xa8\xd7\x4b\xd5\x9b\x5b\xaf\x70\x8c\x9c\x4e\x0a\x45\x3a\x6e\x20\xbc\xe4\x70\x0f\x93\x32\x64\x42\x45\x64\xa7\xc9\x69\x30\xda\xc9\x57\x7a\xba\x08\x33\x9d\x43\x76\x7a\x18\xd7\xa5\xdd\xe6\x9f\xff\x68\x10\x22\xc2\x24\x32\x6d\xad\xd5\xc8\xc5\xee\x08\xd8\x67\x49\xfd\x94\x54\x60\xcf\x76\x96\x86\xf3\x6b\x1b\x33\xb5\x5c\xb0\x24\x55\xfc\x58\xe8\xa4\x3a\x15\xbf\x55\xba\x7b\xe0\x25\xe3\x85\xc0\xf4\xd9\xf4\x03\x65\xcf\xee\xdd\x2e\x7b\x17\xa4\xa3\x74\x34\x70\xf6\x4b\xfc\x14\x98\xf3\xd3\x6e\x36\xcd\x76\x5f\x7c\x32\x29\x30\xb1\xc9\xf9\x0e\x87\xb8\x7b\x1f\xce\x4b\xa3\xdd\x54\xf7\x48\xa7\x1a\x96\x26\x2d\xb3\xb2\xcc\xac\x17\xf9\x14\x52\x3c\x3e\x6c\x15\x0d\xf3\x49\x4f\xab\x3b\x8c\x6c\xa3\x6f\xd9\x66\x65\x04\x1b\xbb\x98\x7e\x93\x35\xc1\xaa\x32\xfe\xa8\x69\x62\x54\x1c\x83\x5e\x19\x90\x0c\x71\xaa\x94\x13\x8b\x03\x2a\x27\x73\x7e\xbd\xda\x52\x86\xc7\xe6\x11\xfd\xb3\xf9\x17\x65\xe8\x9f\x7f\xb0\xbf\x5a\x51\x6c\xf9\xff\xeb\xe6\xbf\x01\x00\x00\xff\xff\xfa\xa5\xff\x68\x8f\x06\x00\x00")

func test_certsCaKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaKey,
		"test_certs/ca.key",
	)
}

func test_certsCaKey() (*asset, error) {
	bytes, err := test_certsCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0xc2, 0xd, 0x68, 0x49, 0x30, 0xa8, 0xa3, 0x3c, 0xf1, 0x29, 0xdf, 0x8d, 0x86, 0x0, 0x7b, 0xe1, 0xc0, 0xf, 0x25, 0x28, 0x4f, 0xfc, 0xed, 0x5b, 0x18, 0x36, 0x60, 0x8e, 0x2a, 0x79, 0x79}}
	return a, nil
}

var _test_certsClientTenant10Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x3b\xd3\xaa\x48\x17\x85\x73\x7e\xc5\x97\x5b\x5f\x71\xf3\x1a\x9c\x60\x37\xdd\x20\x42\x37\xb6\x34\xa2\x66\x88\x08\x82\x28\xa0\x5c\x7f\xfd\xd4\x79\x4f\xd5\x4c\x30\xb3\xc3\x67\x57\xad\x64\xad\x7a\xfe\xff\xfb\x10\xb1\x6c\xf6\x3f\x83\x1c\x84\x6d\xda\x06\x08\xf2\x43\x25\x6a\xdb\x86\x2c\x0c\x03\x92\x30\x85\xde\x46\x90\xda\x9c\x55\xde\x71\xa0\xf2\x5d\xce\xe6\x55\x97\x04\x8b\x7c\xb0\x1f\xa9\x00\x86\xd2\xa2\xce\x8a\x87\xb5\xe9\x15\x04\xfc\x63\x02\x86\x46\xa2\x07\xbb\x27\x70\xc6\x47\xce\x1d\xd2\x3f\xf1\x55\x63\x4d\x5c\x6e\xb2\xb3\x96\x0e\xa6\x00\x81\x52\x76\x44\x40\x05\x26\xac\x3b\x6b\xdf\xf1\xaa\x99\x79\x64\x20\xcc\x05\x24\x66\xaf\x8c\x12\xc5\xa0\x53\x11\x0c\x54\x70\x8d\xe6\xb7\xe8\x37\x64\x02\x74\x9a\xc3\xdf\x8c\x1a\x64\x20\x39\xf0\x3f\x61\x6f\x61\x04\xff\x84\x49\x11\x26\x2e\x85\xc2\x02\x35\x20\x30\x50\x83\x0a\xe8\xd3\x94\x3c\x28\x28\x96\xe1\xd7\x96\x6f\x5f\x75\xcc\x09\x02\x1e\x00\xcc\x6d\x84\xfb\x9f\xbf\x03\x6f\x1b\x01\xc7\x7b\xe9\xbb\x1b\xca\x21\xf4\xba\x6e\x2a\x23\x4d\xa3\xa2\x8c\x33\xf3\xe8\x16\x6e\xad\xb0\xc5\x43\x3e\xf4\x74\xc5\x92\x90\x2f\xbe\xf2\xb4\x64\x8e\xa2\x06\xd8\x16\xea\x7a\xfd\xdc\x6b\xaf\x94\x86\x81\xde\x4b\xe1\xbd\x73\x4c\xfa\x70\x5f\x32\xdc\xcc\xe3\xa6\xf8\x10\xe5\xa4\x6f\x6c\x7f\x17\x5f\xf0\xa5\x34\x52\xe6\x91\x17\xbe\x85\xba\xb6\xba\x4c\xe1\x69\x7e\xb9\xac\x83\xdb\xb4\xc4\x7d\xec\xe6\xcd\xd4\x5a\x77\x69\x79\x22\x2d\x5b\xa3\xcc\x2d\x3a\x03\xe5\x45\x64\x45\x51\x3a\xc7\x4d\xbf\x1c\xcd\xd3\x90\x6c\x26\xda\x56\xd7\xe8\xba\x1f\x94\x43\x7f\x7f\xf9\x88\x60\xa1\x29\xcf\x2b\xe3\x33\xe7\xe3\x06\xed\x7d\x27\xa9\x61\x11\x3c\x2f\x75\x25\xbb\x75\x72\xaf\xd3\x6d\x7d\x3b\x56\xa7\x0e\xca\x58\xd9\x58\x8f\xfc\x3d\xf6\x9e\xd0\xda\xcd\xb8\xab\x57\xa3\xea\xb3\x85\x77\x38\x34\xef\x34\xbe\xe8\x96\xa9\xca\xe1\x74\xaa\xa5\x04\x76\xb9\xb6\x72\x9f\xfa\x60\x31\xea\x34\xe7\xb7\x5a\xaa\xb5\xfb\x3c\x36\xde\xe6\xf2\x38\xbd\x7d\xcb\x9b\x92\xb8\xd2\xf7\x87\x7d\xeb\xf8\x91\x55\x21\xb3\x74\x1f\xe7\xbd\x67\x59\xf4\x75\xb2\xdc\x44\x7a\x55\x82\x2d\xd3\x51\xfe\x1a\xfb\xb9\xc1\x95\x2e\x4b\xda\x3d\xa4\x14\x01\x58\xf9\x6e\x82\x27\x85\xf9\xef\x86\x6e\xb8\x27\x48\xee\x39\x81\xde\x36\xdf\xf8\xcf\x3e\xb6\x7e\x40\x24\x8c\xc1\x41\x69\xda\xa0\x94\x98\x88\xc7\x18\xf2\xff\x58\x1c\x78\x06\x70\x02\x47\xb5\xfb\x34\x7a\x31\x57\xe3\x6e\x3d\x1f\x63\x8f\x7f\x4f\xad\x64\x26\xfd\x31\x94\x7d\x52\x32\x56\xb5\xc6\xfa\x51\x97\x1b\x6d\x5c\xbb\x33\xee\xe6\x6f\x43\x89\x2a\xab\x9c\x66\x8f\xb3\x8e\x93\xb7\xca\x75\x7d\xab\x86\xd7\xb4\x27\x16\x3e\x5e\xba\xa4\xba\xb1\x10\x4b\xd4\x2e\x86\x73\x3b\xd7\xec\xd3\xfd\x9a\x0c\xd3\x2d\x1a\xb7\x10\x5f\x4b\xc7\x8c\x67\xb3\x4c\xa8\xab\xfb\x81\x24\xd5\x61\x65\x6c\xe3\x3e\x18\x84\x63\x64\x1a\x97\x03\x7e\x28\x67\xd5\x2d\xcb\xad\xb5\x2f\xc9\x2c\x53\x9b\x28\xc0\x47\xf4\x5d\x1a\x7b\xd9\xc9\xb5\xad\x76\xda\x19\x26\x19\x9d\x14\x7d\x14\x1f\x16\x8e\xb8\x34\xe9\xab\x6a\x09\xd1\x94\xa5\xbd\x6a\xa0\xcc\x7b\x0d\x9c\xe5\xb0\x23\xcf\x39\x96\x2e\xc8\x7e\x08\xe4\x88\xbc\x1a\x67\x53\x54\xa7\xcc\x3f\x7a\xc1\xe6\x59\x28\xdf\xb9\x19\x2c\x5e\x34\xb6\xdc\x9b\x77\x77\xec\x9b\xd3\xc5\x43\x8b\x42\x4d\xdb\xb5\x43\xc8\x07\xfe\xda\x14\x41\x5b\x0e\x52\xad\x9b\x8e\x08\xf5\xe2\x29\x40\xde\x0e\x27\x3b\xca\xc8\x1d\xf4\x61\xb7\x4b\x7c\xf4\x75\x53\xf3\xb3\x60\x03\xf4\x1f\xcc\x92\xdd\x50\x9f\x35\x27\x9b\x3b\x75\x7f\xd1\x60\xc1\x1d\xc7\x5b\xad\xb6\x92\xdf\xff\xfa\x25\xfd\xa8\x81\x30\xfc\x6f\x5d\xfc\x15\x00\x00\xff\xff\x08\x5e\x50\x2f\x4b\x04\x00\x00")

func test_certsClientTenant10CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Crt,
		"test_certs/client-tenant.10.crt",
	)
}

func test_certsClientTenant10Crt() (*asset, error) {
	bytes, err := test_certsClientTenant10CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.crt", size: 1099, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xec, 0x74, 0x11, 0xb3, 0xc6, 0xf4, 0x85, 0x1b, 0xe0, 0x4a, 0x4d, 0xe4, 0xab, 0xd0, 0x47, 0xa2, 0x27, 0xe5, 0x79, 0xb1, 0x14, 0x80, 0x3f, 0xe5, 0x3c, 0xe, 0x38, 0x90, 0x5f, 0xa7, 0x3f, 0x36}}
	return a, nil
}

var _test_certsClientTenant10Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\x37\x12\xab\x5a\x02\x05\x73\x56\xf1\x72\x6a\x4a\x08\x4f\xf0\x83\x8b\x77\xc2\xfb\x0c\xef\x84\x47\xb8\xd5\x4f\xfd\x37\xe9\x9c\xf4\x24\x5d\x9d\xf4\x7f\xfe\x1d\x2b\x48\x8a\xf1\xc7\x71\xc1\x1f\xcb\x51\x02\xe0\x09\x7f\x34\x21\xfe\xfb\x40\x1f\x45\x11\x66\xa0\xb0\x00\x68\x1c\xb0\x05\xf0\x50\x6e\x9e\x6c\x41\xb7\x52\x34\x31\xec\x7b\x27\x10\xa3\xe2\x04\x2e\xc1\x91\x3b\x5f\xc6\x07\x92\xf3\xe6\x13\x7d\x7b\x33\xab\x68\xb8\x73\x77\x03\x0a\xc0\x2d\x30\x95\xa5\x7a\xcc\x8c\xf3\xe2\xd7\xa0\xc5\x91\xba\x1b\x4f\x69\x89\xd7\x29\x3b\x41\x95\xe8\xac\x21\x32\x2f\x57\x68\x23\xc9\x46\x93\x7a\xe2\xbd\x46\x3d\xb1\x60\x67\x7e\x68\xfe\xfe\xc2\x90\x14\x56\xa2\x9c\xc3\x35\x2d\x73\x38\x49\x53\xcd\x08\x7f\x2f\xbd\xab\x40\xec\x12\xfa\x59\xc7\x84\xd4\x0c\xc3\x64\x02\x92\x36\xb7\x26\xa0\xa3\x23\x7f\xf4\x25\x44\x87\x87\x2e\x84\x5c\x26\x90\x1a\x72\x00\xc2\xec\x6a\xf8\xf8\x56\xbb\x72\x6f\x7d\xbc\x8b\x60\x16\xd5\x30\x5d\xaa\x9b\x1c\x47\x72\x62\xc9\x31\x48\x03\xea\x54\x47\xc3\x72\xa6\x89\xfc\x6c\x7c\xcf\xac\x47\xde\xa6\x3f\x7a\xf7\xbb\x12\xf2\x7a\x3f\x25\x15\x59\x2a\xae\xa6\xa8\xde\xdb\x9b\x1c\x6b\x2e\x66\x7e\x37\x51\xd0\x4e\xe7\x71\x0b\xaa\x19\xc9\x9e\xb6\x44\x90\x3e\x47\x18\x7f\x49\xa1\xe9\x36\x6c\xd4\x8a\x07\xf1\xa8\xb6\x1f\x1a\x68\xb1\x9d\xa4\xc5\x07\xfe\x69\x9a\x4e\x7d\x5f\x2d\x36\x93\xfe\x53\x4e\x9f\x83\xb2\x3b\x18\xf4\x86\x8e\x47\x6b\x77\x2a\x3c\xb0\x01\x0b\x26\x85\x05\x42\xe0\x03\xfd\xaa\x61\xc9\x5e\x78\x03\x81\xa1\xf6\x71\xf0\xc5\xd9\x3d\xed\x7e\x7c\x6a\x92\xe8\x5e\xd8\x5f\x4e\xdf\xd6\xcb\xbd\x07\xaf\xa6\x22\xb7\x3b\xba\x4e\xc6\xac\x87\x75\x8e\xd6\xa5\x89\xdb\x25\x91\x3e\x1b\x60\xa9\x72\x11\x48\x1b\xcd\x21\x89\x9c\x76\x69\x26\x90\x94\xc9\x70\x74\x37\xc3\x3c\x3a\x27\xee\xbb\x39\x37\xbb\x8b\x39\x90\xdd\xa6\x83\xcd\x71\x92\x3d\xe4\x27\x9a\xdd\xba\x9a\x04\x58\x2c\xaf\xd4\xdb\xf8\xfc\x7e\x5e\x69\x82\x42\x3d\xb2\x30\xf4\xb5\x3b\xa3\xb5\x66\xbe\x91\x99\x1e\x81\xb2\x5c\x4b\x86\xf0\x62\xf7\x88\x32\x22\x16\x75\xbd\x56\x45\x11\xa4\xd4\x3e\x51\xdb\x6e\xe5\xc6\xd0\x99\x9f\x2b\xf0\x7e\x50\x8a\xb5\xd7\x43\xf1\x1a\x37\xa0\x9b\xd7\xaa\xb7\xce\x9b\xff\xa0\x7c\x8e\xb0\x54\x26\x89\x72\x1e\xf1\x11\xb8\x0b\x3f\x2f\xf1\x69\x73\x49\xda\xb7\xdd\x1d\x27\xd9\x90\x5c\x3c\xd3\xa0\xfd\xeb\xd3\x2a\xa1\x12\x97\x10\x67\xcf\x59\x51\xbf\x89\x1a\x34\xec\xa1\xe6\xbe\x1c\x11\xc6\xf4\xbb\x3f\x7c\x76\x13\xc4\x6d\x12\xe2\x22\x8b\x07\x76\x72\x3c\xb7\x63\x7d\x2e\x0d\x32\xfd\x55\x48\xc2\x39\xf5\x77\xd6\x8a\xbd\xb9\x43\x08\xa1\xab\xcd\x26\x70\x75\x2c\x00\xa4\xef\x1a\x7c\x13\x62\xfe\x19\x24\xa1\x25\x25\x19\x76\x68\xad\x71\xa5\x42\xf3\xc7\xaa\xd7\x6d\x31\xe6\x8b\xe3\x55\xa5\x11\x93\x39\xc5\x9e\x46\xfb\x56\xa4\x50\xc9\x9f\x98\x19\x78\xa3\x3d\xd7\x74\x1f\x94\xa5\x77\x4f\x40\xd1\x99\x15\x99\x9e\x67\xad\x61\xb6\xf6\xb4\x9f\x89\x94\xcd\xcd\xbb\x5d\x5e\x98\xee\x7e\xec\xee\x06\xb0\xe1\xc5\x06\xbd\xd5\xa9\x0c\x74\x4c\x78\x50\x74\x56\x50\xc9\xeb\x9b\xf9\x38\x84\x4b\xfd\xae\x9b\x3a\xdb\x7c\xdc\x13\xa1\x25\xe0\x7a\xc6\x94\x68\x7d\xed\x74\x00\x33\x1e\x2e\x1f\x95\x5a\xc7\x78\xf9\x3f\xe2\x97\x71\x1e\x10\xbc\xaf\x5d\x9c\xc6\xcf\x33\x47\x22\x8c\x47\xbe\x6f\x3e\x6d\x4d\x08\x64\x73\x8c\x45\x8f\xc9\x61\xba\x44\xa5\x12\xa6\xf2\xe8\x6f\x1f\x85\xb7\x65\x05\xa0\x7d\xfe\xd4\x31\xd5\x33\x98\xe8\xbe\xdf\x90\x31\xf1\x68\x6d\xf5\x65\x75\x78\x1c\xc7\xe4\x96\xa8\x85\x5d\xc6\xae\x48\x2e\xf0\x5f\x77\x96\x03\xe9\x29\x10\xa4\x58\x09\x67\xb8\x3c\xe1\xe4\xfc\x97\xe3\xa1\xeb\x80\xee\x71\x61\xea\xd8\x19\xb1\x50\x06\xce\xcf\xef\xcd\xda\x33\xe1\x61\x02\x3c\x9f\x36\x60\x0c\x1f\x60\x25\xda\x25\xf3\xeb\xd8\x44\xd1\x72\x9d\x10\xa5\xff\x22\xef\x9c\xfe\x65\xeb\xa2\x98\x4a\x7f\x92\xb2\x7e\x05\xa3\xaf\x43\x95\x70\x93\x44\xc4\xe0\xcc\xb0\xad\x2b\x03\xc4\xb9\x8c\xab\x62\x3a\x5b\x3b\xae\xed\xc7\x44\xb1\x2c\x98\x01\x90\xaa\x8a\x21\x0b\x9d\x46\x24\xbc\x99\x71\x4c\x66\x12\x12\x6e\xe4\xdf\xed\x5b\x01\xa4\x93\xbe\x3c\x37\xc9\x1b\xc5\x9a\x5e\xbf\xfd\x0f\x50\x71\x65\x1f\x95\x36\xa8\x30\xf5\x33\x6b\x88\x7e\x4b\x3b\xf3\xf3\x7e\x3e\x1d\x18\xe3\x25\x78\xf7\x23\x19\x11\x9f\xe5\x6f\x94\xce\x31\x6f\xaf\x21\x78\xf8\xaa\x85\xdd\x53\xd6\x6e\xb0\x24\xf5\x19\xec\xa8\x09\x7a\xe9\x5f\xcb\x40\x26\x8c\x57\xfb\x3d\x28\xd3\x21\x81\x96\xd9\x69\xe4\xa6\xac\x61\x8d\x15\x85\xe1\x99\x6b\xc2\x24\x4d\xa7\x6b\x01\xbd\xa2\xdf\x88\x20\x43\xde\xc7\x02\x91\x72\xc9\x74\xd3\x36\xdd\xa9\x98\x36\xed\x0e\x4a\x6c\xf3\xf8\x7a\xb4\x9b\x64\xed\x64\x9e\x48\xe0\x71\x2c\x9c\x4c\xc1\xfc\x55\xa3\x04\x20\xe8\xd7\x12\x1d\x05\x42\x9f\x2b\x4f\x8d\x72\x4d\xdd\x39\xbc\xf0\xaa\x32\x36\xc2\xdf\xa9\x23\x82\x01\xf7\xc2\x28\x50\xeb\x61\x5d\x87\xe6\x4f\x5f\xe9\xa7\x24\x84\x47\x41\x1e\x11\xdf\xc5\x78\x38\x8a\xfa\xeb\x52\xde\x00\x91\xaa\x49\xa8\xb6\xc6\xd6\x36\xe7\x25\xe7\xbc\x54\xed\xe4\x49\x62\x63\xd1\xd5\x97\x6d\xed\x8f\x90\xc5\xf4\x47\xbf\x69\xb2\x7c\x33\x69\x7a\xde\x38\xd7\x79\x8a\x90\x04\xb7\xc1\xba\x30\x66\x17\x14\x74\x14\x6e\x75\xf5\x38\xec\x3d\xb9\x29\xe5\x5f\x10\x71\x70\x68\x97\x6f\x72\xb9\x14\x66\x94\x3d\x39\x54\xa8\x61\x54\x1e\x2c\xc9\x51\x25\xe9\x24\xed\x46\x3d\x6d\xe1\x4e\x35\x6c\x5e\xd7\x55\x4d\x03\x74\xa4\x5d\xe1\x68\x97\x52\xe2\x15\x31\x19\xbd\xaa\x5b\x4d\xf1\xd1\x3e\x30\x73\x0b\xa1\xee\xdf\x26\x35\x1a\x23\xad\xb5\x59\x46\xc4\x5b\x59\xa2\x47\xe3\x2c\xf1\x0f\xfc\xf3\x0f\xf4\x37\x2b\x82\xc1\xff\xff\xdc\xfc\x37\x00\x00\xff\xff\xaf\xbf\x82\x6f\x8f\x06\x00\x00")

func test_certsClientTenant10KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Key,
		"test_certs/client-tenant.10.key",
	)
}

func test_certsClientTenant10Key() (*asset, error) {
	bytes, err := test_certsClientTenant10KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0x51, 0x8, 0x9b, 0x10, 0x4f, 0xee, 0xda, 0x9d, 0xf4, 0xba, 0x55, 0x7f, 0xbe, 0x2c, 0x8c, 0xe0, 0xab, 0x9f, 0xf2, 0xde, 0x59, 0xa6, 0x49, 0xbb, 0xf9, 0x8c, 0x68, 0xc3, 0x96, 0xb1, 0xf4}}
	return a, nil
}

var _test_certsClientTenant11Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x3b\xd3\xaa\x48\x17\x85\x73\x7e\xc5\x97\x53\x5f\x89\x80\x02\xc1\x09\x76\x43\x03\x8d\x34\xd8\xdc\x14\x33\xb9\x08\x82\x82\x17\x04\xe4\xd7\x4f\xbd\xe7\x54\xcd\x04\x33\x3b\x7c\x76\xd5\x4a\xd6\xaa\xe7\xff\x3f\x87\xb0\x45\xbc\xff\xe9\x38\x88\x88\x49\x74\x88\xf0\x6f\xca\x51\x42\xf4\x55\xa4\xeb\x50\x1e\x2a\x98\x08\x82\x8a\xb0\x8c\x3c\x2c\x50\xd5\x9d\x76\x2e\x7c\x79\x70\x47\x2a\x15\x42\xd4\x80\x87\xaa\xf6\x59\xb7\x57\x4b\x9b\x04\x04\xec\x6d\x82\x01\x2f\x8e\x06\x64\xc2\x90\x1a\x09\x63\x3b\x3c\xdd\x8c\x4c\xf4\x5e\xf9\x5d\xab\x53\xb1\x9a\xcd\x08\x22\x54\x79\x09\x02\x1a\x19\xd8\x1b\x53\x71\xf8\x66\xa2\xd9\x9c\x75\x64\xb0\x08\x4a\x73\x12\xbe\x1c\x35\x40\xa2\x51\x3c\xd3\x88\x89\xb4\xa9\xcf\x3f\xd0\x8b\x40\xa2\x0d\xfc\xcd\xa8\x8e\x67\xdc\x00\xfb\x13\xd6\x47\x7a\xfc\x4f\x18\x77\x36\xb0\x4b\xa1\xb5\x60\x1d\x63\x98\xa9\x4e\x23\x3c\x55\x15\xbe\x52\x10\x2c\x3d\x7c\x5a\x21\xc9\x24\x83\x61\x04\x2c\x06\x90\x09\x32\x26\xf8\xf9\xef\xa0\x27\x08\x98\xd1\x71\x56\xe4\x2d\xaa\xf0\x79\xb6\x7a\x08\xdb\xf7\x6e\x5b\x97\xa3\x3f\xfa\xb9\x33\x8c\xf7\x57\xe7\x1e\x27\x3c\xf8\xfb\xee\x71\xd1\x5e\xea\xda\x68\xb6\xf5\xe3\x9e\x58\x2c\x4f\x2e\x81\x76\x39\xa9\xfb\xf7\xd7\xe3\xa6\x57\xa7\xe8\xbd\x5d\x97\x7b\x55\x43\xa5\x24\x8d\xd3\x7e\xde\xb7\x8b\x05\x3c\x2e\x90\xea\xec\xa4\x3c\x29\xb3\xd5\x4a\xd2\x67\xb6\xb5\xc7\x0a\xa7\x7e\xcd\x6f\xc5\x7b\xfe\xd1\xc4\xa8\xb9\x0e\x33\x77\xf3\xb2\xb7\xa2\x24\x7d\xef\x7e\xe7\x62\x45\x60\xab\x8e\x2c\x80\xbc\x7f\x64\xf9\x79\xae\x71\xf5\x3d\xdc\x34\x34\x6f\xe7\xda\xeb\xfd\xd6\xce\xa9\x3e\xe2\x65\x5d\x31\xd7\xf7\x93\xf2\xfd\xa5\x32\xa7\xc6\x7c\x63\xda\x6b\xcb\x2a\x8f\xb1\x10\xc8\xc5\x70\xa8\x54\xc5\xcf\x0c\xc7\xd1\x15\x3d\x94\xe5\xf6\x64\xbf\x7c\xd2\x0b\xd3\xd0\x83\xd4\xa4\xdb\x0c\x6a\xe9\x5a\x5f\x1a\xa5\x90\xb7\x9b\xb4\xae\xb9\x5b\x6e\x11\xc7\x89\x4a\x88\x03\x2c\x48\xfc\xd0\x69\xa9\x3d\x52\xfb\xa2\x76\x2d\x69\x33\x7c\xd8\xb0\x71\xad\xea\xb1\xe4\x88\xe1\x47\xe5\xb3\x52\x83\xcf\xb3\xb1\x16\x4f\x5a\x4f\xe4\xe1\x1c\x4c\xce\xed\xdc\xca\x55\xa3\x7a\x50\x98\x38\x3c\x87\xe9\x14\x04\x7b\xa8\x28\x02\xb0\x1a\x67\x81\x1b\x05\xf9\xa7\xa1\xc2\x98\x30\x5a\x4d\x0c\xc3\x44\xcc\xde\xf8\xb3\x0f\x3b\x8c\x31\x67\x18\xb0\x43\x55\xf5\x42\x15\x36\x11\xcb\x0d\xf8\xaf\xc5\x81\xaf\x03\xc3\x70\x5a\x54\xad\x0c\xf8\xec\xf6\x4c\x58\xd8\x9d\x11\x5b\xe7\x15\x57\x78\xc8\xf5\x44\xd9\xf2\x5b\xd4\x4b\x1f\x2c\x57\x9f\xe3\x09\xab\x10\xcc\x7c\x77\xf4\x68\x1f\x0a\xeb\x8d\x92\x6e\x48\x66\x8b\xce\xe6\x4c\x41\xec\x6e\x48\x7a\x5f\xad\x78\x15\x57\xa1\xed\x7e\x7d\x4e\x5a\x2d\xd5\xea\x74\x15\x85\x96\xb7\xea\xfd\x21\x2d\x28\xbf\x7b\xf9\x6a\x96\xcd\x8a\xfc\x48\x1e\xb0\x3c\x6d\xe4\xc2\x02\xba\xc2\xbb\x83\x10\xae\x6d\x76\x3d\xc1\x17\x66\xec\x20\xcb\x97\xca\x90\x3b\x8d\xc8\x1e\x3e\x8d\x35\xe7\xa5\x65\xb4\xe9\xe9\x62\x2d\x5e\x31\x59\x7b\x9b\xe4\x9b\x17\x32\x8c\x33\x7f\xb7\x17\xcd\xb6\x57\x02\xe2\x87\x58\x2c\xee\xb7\xa5\xe2\x3f\xda\x60\x1f\x9d\x5d\xcf\x97\x0f\xee\x95\x1e\x4c\xbe\x2c\x8e\xc3\x4e\x57\x93\xb3\x31\x34\xc2\x22\x67\x97\x86\x26\x49\x17\x2b\xc7\xe7\x49\x9b\xd0\xe5\xc2\xd2\x94\xf5\xd9\x3e\x3c\x47\xab\xfb\x23\xb5\x83\x79\xba\xef\x67\x2d\xdc\x92\x61\xe6\x5c\xd0\x87\x53\x71\x03\x46\x5a\x45\x53\xa4\xcc\xbf\x98\xae\x1e\xed\xc8\x10\x90\x43\x34\x4f\x87\x83\x60\xe5\x05\x20\xf5\xc3\x96\xc0\x7c\x01\x22\xe5\xe0\x9e\x97\xc7\x3e\x7e\x7b\xdd\x5a\x0b\x7d\xee\x00\xbf\x7e\x71\xbf\xd5\x80\x3d\xe3\xdf\xba\xf8\x2b\x00\x00\xff\xff\xb0\x47\xb6\xf9\x4b\x04\x00\x00")

func test_certsClientTenant11CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Crt,
		"test_certs/client-tenant.11.crt",
	)
}

func test_certsClientTenant11Crt() (*asset, error) {
	bytes, err := test_certsClientTenant11CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.crt", size: 1099, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6, 0x84, 0xc7, 0x2c, 0x14, 0xd3, 0x12, 0x42, 0xfa, 0x2b, 0xee, 0xb, 0x62, 0x1b, 0x10, 0x4f, 0x55, 0x11, 0x73, 0x3f, 0xf1, 0x4a, 0xba, 0x18, 0xc5, 0x68, 0x57, 0xf3, 0x47, 0xd2, 0x20, 0xe4}}
	return a, nil
}

var _test_certsClientTenant11Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xab\xe8\x02\x03\xe0\x9e\xa7\x38\x3d\x73\x07\x30\xb9\x24\x83\xc9\x3f\x99\x8e\x60\xa2\xc9\x26\x3e\xfd\x9d\x3d\xdb\xae\x5a\x35\x1a\x35\xdf\xff\xfe\x09\x2f\x29\x9a\xf5\x07\x78\xdc\x1f\x07\x68\x21\xe7\x4b\x7f\x74\x29\xf9\xdb\x40\xa6\xa6\x49\xd3\xa9\xf1\x1c\xa7\x0b\x9c\x2b\x71\xe4\xd5\x3f\x05\x62\x19\xcb\xcc\xf5\xb5\xbd\x0a\xfb\x14\xaf\xcf\xfa\x8c\x42\x9e\x93\x0b\x79\x63\x0c\x6f\xf8\x1d\x49\xc5\x48\x86\x58\x2e\x01\x4f\x50\x96\x7e\x41\xaf\xca\x31\x5a\xc5\xaf\x4a\xa4\xcd\xae\xd0\x49\xf8\x5c\x78\x22\xee\x10\xc7\x8d\x7f\x2c\xcd\x88\x8c\x4f\x9a\x57\xed\x34\xaa\x5b\x09\xde\x0f\x97\xe3\x01\x41\xd8\x73\x0b\xec\x86\x26\x20\x5e\x11\xa7\x6a\xff\xcd\xa3\x71\x94\x3d\x41\xac\x45\xea\x47\xb4\x0d\x63\x99\x2e\x30\x5b\x5c\xdd\x9c\x7d\x18\xa8\xe4\xaa\xba\x1e\xe1\xca\x96\x00\xcd\xfc\xce\x95\x5b\x7c\xb6\xc4\xcf\xc4\x99\xc7\x21\x91\x5b\x2f\x93\x4d\x24\xe1\xe9\xbe\xf1\x6a\x76\xb6\x23\x3b\xd3\x05\x58\xd0\x8c\x5f\xcc\x92\x3e\x6a\x1e\x4e\x8e\xfd\x0c\xe7\xed\xb9\xfb\xd9\xef\xf6\x5b\x01\xd4\xd3\xea\x96\x69\x64\x9c\x45\xbc\x20\x7b\x38\xb5\x92\x98\x62\x02\xc6\x3f\xf6\x1e\x69\x49\x1a\xf3\xad\xe0\x05\x78\x2d\x4b\xc0\xb2\x90\x35\x45\x22\x9e\x7e\x78\x1c\x79\x93\xc2\x5b\xb9\xe4\x3d\x30\xd8\x8a\xfb\x5a\x77\xd9\xaf\x87\x33\x40\xf8\xe1\x1a\xcb\x74\x6d\x4f\xc9\x16\x82\xee\x85\x8d\x47\xde\x84\x80\x48\x44\xfe\x41\xad\x35\x5b\x0b\x25\x08\xfc\x53\x13\x39\x97\xe3\xb9\x49\xe3\x39\x01\xe6\xe3\xf5\x1d\x9b\x20\x83\xef\x4d\xc3\xa0\x9a\xd7\xe2\x5f\xa2\x2c\x12\x06\x0c\xca\xcc\x61\x1f\xae\x67\x76\xb6\x8e\x74\x62\xaa\x9f\xfa\xb6\xd9\x0c\x46\x4a\xdd\x2f\x66\x56\x6c\xe2\x7d\x5c\xab\x5d\xfa\x82\x6f\x8c\x6e\x07\xa9\xd4\xbe\xbc\x40\xef\x45\x1c\x39\xb4\x41\xdf\x8d\x6b\x7f\xf8\xba\x9a\x44\x49\x9c\x33\xba\x97\xaf\x09\x74\x4e\xfe\x9d\x7f\x09\xf2\x4d\x76\x7e\x00\x2e\x22\xb4\xd8\x42\x4b\x96\xc9\x46\x32\x92\x7a\x1b\x83\x13\x68\x0e\xed\xa7\x8d\x95\x80\xa3\x28\x1a\x77\x82\xc3\xb3\xb9\xb5\xcc\x56\xc4\xeb\xa6\x7a\xcf\x2b\x5a\xf5\x0e\xcf\x3a\x05\xd7\x39\xb2\x2d\xa2\x05\x32\xff\x3a\x31\x39\x1c\x0e\x9d\x23\x4c\x48\xaa\x99\x66\x42\x3b\xed\x15\xed\x72\x23\x6f\x8f\xdf\x19\x76\x8e\x5e\xcc\x7e\xf2\x9e\xca\x63\x5f\x84\x6a\x5e\x3e\xed\x7e\xc5\x6e\xdf\xd2\x75\x93\x3b\xb4\x08\x3e\xe5\x45\xa0\xde\x54\x1f\xf1\x9a\xa4\x8c\x7b\xd8\x31\xe4\x00\x98\x7f\x2d\x35\xba\xa3\x62\x9e\x38\x8f\xe9\x56\x71\x2e\xcd\xd7\xed\x57\xda\x79\x75\xf2\xa3\xad\x5d\x2c\x32\x3f\x8d\xc6\x11\xa5\x56\xd1\x88\x05\xca\xb8\xc8\xb7\x2b\x13\xb5\xeb\xc9\xb6\x0c\xbd\xa3\x27\xdb\x39\x49\xa8\x13\x89\x83\x35\x21\x30\x6d\x39\x63\x97\x44\x39\x13\xee\xe6\x78\x49\xae\xc8\x11\x65\xb4\x04\xce\x71\xa3\x69\x26\xf3\x25\x5a\x58\x07\xe3\xea\xee\x8e\x7c\x9e\x85\x1e\x0e\xdd\xc9\x35\x5d\x30\x9f\xb1\x77\xc9\x9e\xa0\x9e\xad\xe9\x75\x8e\xbf\xcf\xe7\xc1\x94\xb9\xce\x50\xbe\xe9\xc3\xbc\xdf\x2c\xa1\x6f\xdb\x79\x58\x9d\x30\xff\x81\x40\x3f\x8e\x77\x39\x68\x72\x8e\x14\x35\xb4\x5e\xee\x36\xb5\x35\x1c\xc0\xdc\xaf\xca\x11\xa7\x6d\x7b\x58\xbe\xab\x0d\x65\x03\x34\xf8\x2a\x57\x83\x62\x21\xd5\x8e\x13\x8b\xd6\x17\x52\xcf\x44\xca\x0e\xd5\x09\x33\x7f\x17\xd3\x8d\x76\x43\x0a\x33\x72\x97\x3e\x6e\xd7\x6a\x4f\xc1\xfb\x63\x98\x27\xad\x0f\x66\x22\xae\xc4\x9e\x59\xcb\x6f\xcc\x15\xe4\x6b\xe2\x01\x38\xd7\x13\x1b\x7d\x21\xeb\x4c\xd5\x0f\xb7\x82\xf9\xc6\x66\x86\x20\x37\x09\xa9\x65\xcf\xef\x3d\xe9\xa6\x7d\xd9\xb0\x63\xb7\x8b\xcb\xf5\x2c\x99\x54\xeb\x2e\xe6\x63\xd9\x27\xe3\x1b\x60\x26\xd7\xcc\x95\x0a\x69\xb8\x1a\xca\x1c\x7a\x9a\xa6\x2a\x7e\x95\x2c\x0e\xfb\x59\x5d\x41\xbb\xdd\x4d\xee\xde\x38\x79\xf7\xf2\x94\x86\x47\x6e\xe3\x28\x3c\xd6\x40\x88\xe1\xaa\xfd\x75\x56\xa8\x80\x5f\xb1\xec\xdf\x93\x9f\x9c\x3f\x60\xe7\x75\x14\x98\xcf\xa6\xb3\x94\xa3\x25\x29\x41\xac\xf5\x09\x62\x63\x6e\x42\xf2\x4d\x36\xb5\x45\x66\xb4\x50\x8c\x78\x72\x82\x45\x93\x67\xf8\xb0\x56\x95\x6b\xa5\x95\x5d\x1f\xce\xb1\xd5\x10\x68\x91\x11\x3e\x7a\x5b\x8a\x65\xbf\xe5\x37\xe0\x5d\x68\x32\xfa\x4d\x02\x02\x65\x13\x77\x72\xf5\xf3\x69\x66\x73\xfb\xd1\x87\x6d\xf8\x64\xe6\x9c\x52\x6d\xe4\xb6\x3e\xe1\x3d\x54\xd4\xe6\xca\x69\x60\x60\xae\x01\x69\x0d\x21\xb2\xb0\x6c\xf5\xc4\x3f\x16\x72\xb4\xc2\xbd\x04\x6e\x6a\x8f\xa4\x51\xee\x43\xfc\xd4\xda\x6d\x96\x81\x50\x27\x7c\xbf\xe2\x56\x7e\x3d\xf4\xb6\x16\x81\x40\xc8\x99\xcd\x5f\x83\xce\xc6\x21\x32\xf8\xa5\x8f\x7d\xd4\xf4\x78\xb4\x10\xca\xc3\xef\x4f\xfb\xf9\xb3\x82\x4c\xcc\x9d\xe9\x62\xfa\xa8\x48\xa2\xaa\x0d\x7d\x84\x74\x20\xa8\x43\xb4\xaa\x65\x3c\xd8\x53\x5e\x27\x5d\x2c\xc1\x8b\x70\x6e\xf4\x16\xa7\x56\x33\xbc\x8f\xc8\x3a\x6c\xc8\x56\x42\x8a\x93\x58\xc9\x58\x42\x1d\x5f\x45\x0f\x88\x40\xf3\x6c\x58\xfd\xbd\xc8\x01\xc7\x7d\x5f\xe9\xa3\xa9\x1b\x14\xd0\x02\xea\x76\x83\x29\xc5\x7a\x85\x51\xe8\xcf\xeb\xaa\x7b\xa0\xad\x0f\x03\x5d\x27\x13\x68\xae\xce\xd7\x0a\x1b\x4d\xf2\xb4\xa5\x63\x66\x01\xb5\x3c\x5c\xb4\xa4\x8e\xe8\xc8\x66\x47\x25\xc4\x60\x0d\x89\x67\x59\x7d\x6c\xec\xc2\x17\xd8\x58\x31\x2a\x7b\x06\xef\xaa\xe6\x27\x43\x1b\xe8\x05\x59\x00\x6e\x23\xac\xa5\x1d\x5c\x81\x7a\x2e\x34\x7e\x6b\xcf\x37\xc6\x27\x8a\x90\xb8\x57\x5a\x70\xc9\x0e\x50\xd1\x7b\xac\x5b\x1e\xd3\x92\x1f\x91\x8e\x4a\x9c\xe1\x8a\xbd\xb2\xde\x37\xc8\xe3\x0e\x57\x44\x74\xc7\xa2\x48\xdf\x20\x08\x7f\xb1\x30\x11\x4f\x83\x97\xfb\x03\xd3\xd5\x06\x79\xa4\x2f\x6c\xe3\x26\x0a\xe0\x36\x49\x9f\x2b\xba\xa0\xa4\x0d\xfa\x4b\x8a\x64\x89\xff\x4d\xcd\xff\x03\x00\x00\xff\xff\x84\x59\xec\x0d\x8b\x06\x00\x00")

func test_certsClientTenant11KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Key,
		"test_certs/client-tenant.11.key",
	)
}

func test_certsClientTenant11Key() (*asset, error) {
	bytes, err := test_certsClientTenant11KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x93, 0x7f, 0x8c, 0x76, 0x4e, 0x6, 0x31, 0x1f, 0xdf, 0xc5, 0x1, 0x59, 0x4e, 0x2c, 0x9, 0xf5, 0x2b, 0x14, 0xa1, 0x77, 0x9e, 0x5, 0xa7, 0xa1, 0x85, 0x40, 0xe3, 0xbe, 0xc, 0xea, 0x64, 0xc2}}
	return a, nil
}

var _test_certsClientTenant20Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xb9\x8e\xb3\x48\x1b\x85\x73\xae\xe2\xcf\xad\x5f\x6d\x16\xb3\x04\x13\x54\x41\x61\x8a\xcd\x2e\xc0\x18\xc8\xd8\xcc\x6a\x36\x63\xca\xcd\xd5\x8f\xba\x47\xfa\x92\x99\x37\x3c\xaf\x74\x92\xf3\xe8\xf9\xff\xcf\x41\x74\xc6\xee\xff\x54\xe4\x05\x58\xc7\x2a\x08\xd0\x6f\xca\x38\x18\xab\x5f\xad\xaa\x82\x32\xad\x00\xc5\x10\x54\xd8\x03\x97\xf2\xbb\x52\xe1\x54\x9a\x25\xae\xa3\xd0\x5c\xec\x5d\x72\x42\x4a\x35\x12\x9b\xd6\x98\xe0\x7a\xcb\x5d\x40\x90\x0d\x09\xa0\x8c\xb5\x23\xdf\x81\xe0\x0c\xd8\x1b\x52\x6b\xc7\x24\x9c\xd2\xa6\xbc\xb9\xc5\x77\x77\x74\xbc\x1b\x45\x34\xd6\x42\x42\x34\x44\x3f\x5a\xc6\xb9\x4b\xfe\x54\xea\x98\xab\x2a\x72\x44\xd4\xa8\x73\x97\x71\x5a\x40\xdd\x1d\xb1\x4e\x80\x8e\x6e\x8b\x85\x7b\x9d\xbb\x4e\x7b\xa3\xee\x8e\xe9\x9f\xac\x05\xb5\xe3\x61\x8a\xc0\x6f\x99\x85\x68\xff\xa7\x8c\x89\xb9\xea\xa3\xee\xc0\x84\x95\x1b\x42\xe0\x04\xa0\xc5\xd4\xc1\x18\xe2\x16\xb8\xb0\xea\xe6\xba\x6b\xce\x0a\x3d\x42\x40\x90\x0e\xc0\x45\x05\x44\x06\x3f\x7f\xb5\xb2\x54\x40\x10\x60\xbe\x0f\xc5\x0c\xcf\x21\xdd\xe6\x68\x12\x9b\xaf\xc6\x6b\x94\x34\xbf\x42\xe9\x2d\xad\x8f\x8d\x85\x84\xae\xde\xf5\xd5\xe6\x8b\x3f\x66\xd7\x3a\xce\x3e\xf7\x09\xb6\x05\xfe\x7e\xf5\xb9\x6e\xc7\xe1\x83\x63\x0a\xa9\x2f\x42\xef\x5b\xa6\x77\x1e\xea\xc5\x33\x10\xc5\x52\x8f\xad\xd8\x54\x53\x6f\x37\x95\x3e\x3c\xbb\x15\x26\x82\x38\x97\xea\x85\xbe\x97\x0b\x95\x93\xe1\x3d\xe4\xb7\x44\x72\x7b\x12\xbc\x2d\x9e\x39\xf6\xb6\xec\xae\xc2\xb2\x27\x51\xf9\xc6\xcd\x25\xd7\xb6\x02\x3f\x9c\x67\xb9\xc2\xe2\x6a\x60\x5c\xe2\x8c\x3b\xed\xbc\xac\x1b\x96\x11\x8d\xb6\xe1\xa4\x52\x55\xd5\x5d\x9e\x9d\x0a\x65\x31\x6b\x9b\x01\x2f\x7f\x62\x4f\x41\x13\xc4\x42\xee\xea\xd6\x45\xc6\x62\x4f\xaf\x2c\x36\xf6\xc7\x0b\x99\x7b\x37\x87\xe2\x5d\x1a\x6f\x6b\xd0\xbd\x4e\x92\x3d\x17\x9b\x95\x99\x9f\x4d\xbc\x1b\xda\xd4\x27\xec\xfc\x62\x6c\xc9\xc8\xf3\xd3\xa8\x64\x87\xa6\x31\x85\x64\xb0\x5f\x9b\xe1\x77\x33\x1e\x9e\xb5\xfc\x1c\xf8\x15\x3e\x3c\xf9\xd8\xcd\xdc\xe7\x0b\x2c\xb5\x0c\xf5\x3d\x5e\x22\x2b\xeb\x0c\x92\x5a\xb3\xb9\xbb\x11\x23\x71\xc2\x10\xaa\xbb\xa3\x23\x83\x3a\xc6\x80\xaf\xfe\x51\x75\x09\xd6\x00\x01\x70\xfc\xce\xa9\x19\x80\xcb\xcf\x42\x06\x91\x21\x78\xc8\x08\x02\x47\x85\x29\xf8\x87\x0f\xef\xd8\x33\x10\x50\xaa\x56\x31\xb6\x68\x0c\x21\xb9\x19\x80\xe2\xff\x22\x4e\xab\x2a\x04\x81\xce\x77\x47\x4f\xea\xae\xe9\xa9\x28\xb5\xa6\x68\xc8\xd6\x33\x95\x29\xa7\xed\xc3\x3c\x9b\x89\xbf\x3b\x39\x6f\x67\x1f\x45\xc3\x6c\xa2\xbf\x66\xc3\x54\x1c\xb0\x3b\x35\x66\x7b\x31\xb4\x68\x31\xc9\x8a\x23\x71\x3f\x80\x9f\xb3\x75\x6e\xf8\xb0\xf1\x8b\xdd\x62\x94\x6d\xb6\xae\x16\x95\x05\x69\xa9\xd7\x6e\x14\x40\x90\x3c\x51\x79\x45\xbc\xa7\x57\xb7\x67\x70\x4e\x6d\x3a\x69\x23\xdc\xd8\xc3\x65\x63\x53\x8f\xde\xca\xc3\xa1\x47\x5a\x54\x9c\x96\x29\x9a\xfc\x0f\x13\xe0\x8a\x4f\x15\x67\x5e\xb3\x4d\x1c\x3d\x6f\x59\x95\xf6\x64\xc6\x96\x7e\x8c\xd4\x46\x9e\x5e\x2b\x77\x80\xfa\xee\x3d\x9b\x9b\xd8\x0c\x64\x78\x5b\x4d\x1e\x1a\x7e\x8a\x03\x4d\x22\xd1\xca\x96\x17\x26\xe4\xab\xe9\x10\x35\x26\x65\xbb\x24\xae\x2e\x2c\xc2\x37\x7e\x0c\x94\xe1\xc4\xbd\x93\xaf\xab\x61\xef\xa2\x9d\x37\xe5\xdc\x6f\x77\x08\xd4\xcc\x27\xec\x9c\x76\x5e\x1e\xbd\x60\x52\xed\xf9\x50\x69\x8c\xfb\x34\xc7\xe1\xa1\x35\xb6\xd7\xbd\x85\x5d\x8f\xbd\x11\x2c\xdb\x2c\x68\xdf\xc3\x70\x76\x85\x99\x7b\x7f\xf9\xc1\xf5\x6e\x7f\x75\xe5\xe1\x80\x09\x59\x68\xba\x89\xb7\xd9\x92\xfd\x8a\x9e\x72\x6b\xb2\x99\x37\x2f\xfc\xc5\xfc\xaa\x01\xb9\xda\xbf\x75\xf1\x77\x00\x00\x00\xff\xff\xda\x43\x4a\x1d\x4b\x04\x00\x00")

func test_certsClientTenant20CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Crt,
		"test_certs/client-tenant.20.crt",
	)
}

func test_certsClientTenant20Crt() (*asset, error) {
	bytes, err := test_certsClientTenant20CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.crt", size: 1099, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x55, 0x98, 0xec, 0x91, 0x25, 0xfc, 0x1f, 0xd3, 0xe1, 0x11, 0xf6, 0x9e, 0xcc, 0xa4, 0x7a, 0xb9, 0xc6, 0x34, 0x51, 0xde, 0x29, 0x6a, 0xaa, 0xe9, 0x34, 0x2e, 0x3e, 0x7f, 0xfc, 0x59, 0xb5, 0x7d}}
	return a, nil
}

var _test_certsClientTenant20Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xab\x5a\x16\x85\xe1\x9c\x51\xdc\x5c\xd5\x25\x04\x48\x40\xd0\x01\x9e\x03\x12\xde\x67\x1c\xbc\xf7\x76\xf4\x5d\xef\x76\xfa\x76\xba\x93\xaf\x56\xf2\xff\xe7\x9f\x63\x05\x09\x68\x7f\x2c\x9b\xf9\x63\x58\xc0\x63\x1c\xe1\x8f\x2a\x84\x7f\x3f\xc8\x0f\x00\x61\x34\x01\xcb\x30\x2a\xc7\x98\x02\x73\x3d\xd2\x89\x95\xbc\x63\x9f\x82\xf1\x53\x3d\x2b\xab\xa2\xe3\xc4\x60\xc9\x8d\x5c\xf3\xfd\xc5\x9a\xc7\x6a\x19\x4b\x9d\xcc\xf6\x00\x8d\x32\x84\x27\xe2\x8f\x6c\x9d\x82\x6b\x69\x13\xf1\x1b\x7a\x39\x96\x92\x6d\xea\x59\x17\x75\xf8\x38\x2b\xa6\x9d\xf3\xf9\x64\x62\xa8\x86\x0a\x17\x5b\xb7\x42\xb7\x9e\xa4\x15\xc0\x24\x3e\x53\xc6\xe9\xc7\x36\xeb\x07\x42\x45\xfd\xd6\x27\x6e\x44\x6a\xad\xe9\x6c\x2a\x8e\xb6\x5f\x4a\x5b\x89\xf9\x8e\x82\x6c\x03\x95\x9e\xf0\x7b\x0a\xf2\x5f\x97\xad\x6c\x6a\xc8\x00\x64\x00\x62\xef\x1b\xa7\x44\x59\x95\x83\xe1\x2b\x23\xbf\x98\x2c\x8a\xb2\x49\xe0\x3b\xa5\x67\xa5\xfc\x32\x8b\x3d\xbe\xde\x4e\xe5\x84\x44\xa2\x89\xaa\x4e\x81\x4f\x7b\x18\x2f\x20\xdf\xf9\x22\x28\x77\x33\x79\x1f\x9f\x1c\xdc\xd5\x69\x96\x37\xf9\x9d\x52\x64\x57\xa1\x72\xee\x1f\x5f\xe6\xc7\x36\x7a\x4d\xcb\x97\x94\x93\xe4\x3d\xd0\xf0\x51\x55\x0a\x11\xf5\xdf\x65\x97\xed\x66\x02\x7d\x57\x52\x5d\x8f\xaf\x6c\x6e\x51\x68\x33\x61\xe7\x93\x99\x4b\x8a\x15\x91\x3b\x9c\x03\x15\x36\xb2\x19\xab\x93\x72\x6b\x01\x89\x11\xbd\xc7\xdd\x3f\x51\x90\x8f\x9f\xdc\x03\xc3\x46\x39\xcd\x04\x3c\x63\x32\x2c\x33\x00\x96\x31\x39\x42\xe6\x6a\x9d\xf6\xdd\xcf\x4d\xc4\x0a\x02\xbd\xe6\x9b\x4a\x6c\xe6\xd0\xc1\x3b\x86\xba\x5c\xb2\x71\xc8\xaa\x03\x6d\x43\x61\x53\x56\xa9\xb1\xe5\xc4\x60\x8b\x18\xb7\xf7\x3e\x4b\x5a\x54\xa0\x6d\x32\x88\xe2\xc6\xf0\xe9\x28\x48\xed\x96\x46\x1e\xdc\xd4\x33\x5d\x9d\xca\xd3\xdb\x8d\xc2\xcc\x7c\x28\xf7\x72\xfe\xb6\x08\x4a\x68\x49\xbd\x9e\x2f\x56\x15\x44\x2f\xa6\x37\x16\xf7\x1a\x2d\x29\x93\xa1\xde\xa5\xba\xf2\xe7\xcb\xee\x7c\xd6\xc8\x01\x92\x85\x37\x84\x02\xa0\x04\x31\xbb\xbd\x23\x06\x9b\xa2\x7c\xb3\xb4\x2f\xa0\x50\x92\x8d\xf8\x2a\x95\xc7\x35\xf1\xe6\xf3\x28\x97\x55\xc9\x9e\x62\x90\x61\x5a\x25\x15\xc0\x78\xbb\xcb\x4c\x27\xa9\x86\xdc\x47\x61\x11\x7d\x9f\xa2\x11\x84\x61\x34\x2e\x3a\x7d\x2e\x8f\x78\x1e\x52\xe2\x62\x0a\xea\xa5\x1b\x45\x4a\x93\x6f\x1d\x0e\x19\x11\x8a\xab\xe6\x69\x8e\x27\x49\x78\x56\x59\x1c\x9b\xeb\x5c\x35\x23\x9a\x74\x62\xce\xfa\x7d\x37\xe6\xd7\x5d\xba\xb8\xdc\x0d\xe6\xcd\x36\x92\x20\x13\xba\x8b\xd5\xdc\x1c\x51\xac\x75\x16\xba\x10\xa0\x8a\x25\x65\xb5\xdb\x0a\x93\xfe\xf8\xca\x18\x48\xd5\xad\xa6\xca\x0c\x61\xf9\x8a\x29\xf7\xa2\x64\x06\x89\x65\x74\xce\x28\x14\x0a\xdb\xcb\xa8\x95\x84\x15\x66\x62\xec\x0a\xfc\xea\xc4\x05\x2e\xdf\xc5\xdc\x9e\x4d\x13\x19\xa5\x90\x32\x92\xb4\x70\xd1\xde\x41\xe0\x39\x48\x10\x24\x0c\xc9\xe6\x9c\x1c\x73\x8f\x67\x80\x8a\x25\x1b\x6c\xb4\xf2\x10\xf0\x68\x0f\xe9\x87\xa5\x9b\x2b\x37\x9e\xd7\x28\x30\xf1\x93\xb7\x4a\x06\xda\xc5\x66\x3d\xc1\x15\x49\x56\x1b\x58\xba\xef\x21\xcf\x24\x19\x4a\xe7\x80\xb5\x7e\x8e\x24\x95\x68\xb1\xe1\xf9\x85\xc1\xe7\x63\xe5\xb7\xbc\x83\x42\x26\x5f\x09\xee\x19\x1a\xe6\xf2\xe0\xbd\x61\x67\xbd\xbe\x85\x79\x54\xac\xff\x17\x97\x37\x52\xf7\x68\x80\x46\x9f\x1c\x95\x70\xf4\x6d\xb2\xa1\x7e\xde\x4e\xe8\x5b\x5b\x47\x43\xcf\xc1\xde\xc1\x69\xf7\x6e\xf9\xb4\xc5\x9b\x9b\x8f\x54\xae\x5f\xe2\x94\xb7\x9b\xf1\x8d\xa7\xa2\xdb\x7e\x85\x57\x21\xc0\x2f\xee\x5c\x74\xa3\x78\x5d\x99\x15\xfb\x2e\x16\x6d\x3c\x87\xb6\x22\xe5\x30\x04\xf1\x98\x1c\xa3\xfe\x0e\x19\x8f\xbf\xc9\xb8\xdf\x08\xbe\x8f\x93\x69\x46\x93\xe0\x3a\x06\x0d\xa7\xc4\xe8\x18\x11\x7f\x38\xac\xd2\xa4\x28\x31\xc0\xa5\x12\x97\x6e\x57\x9b\x0b\x71\x5c\x2e\xd9\xc4\xea\xb3\x57\x39\xae\xab\x16\xcc\xa4\xc6\xbf\x64\x40\x80\xb5\x0a\x1e\x7c\xe1\x09\x1a\xef\x7b\x97\xbf\x45\x48\x71\xce\x3c\x47\x7b\x75\x89\x69\xa2\xda\x48\x31\x03\x8d\xb7\xcb\xb0\xb8\xc1\x5d\x73\x5a\xb0\x9b\x57\xeb\xb3\x18\x77\xac\x5b\x9a\xbe\xee\x27\xbe\x5b\x0a\x34\xdc\xac\x6e\x0b\x6c\x6f\x7a\x79\x07\xe2\xcf\x23\x11\x0b\xb7\x0c\xf7\x6e\xc0\xfd\x3d\x6e\x57\xf2\xea\xf0\xb8\x82\x68\x57\xd3\xb6\x71\xbe\xb6\x77\xaa\x2c\xe5\x9b\x06\x57\xc3\x6a\x02\x26\x57\xf5\x1e\x67\xf0\xb8\xe7\x01\x9c\xf8\x37\x46\xf0\x66\x48\x38\xd6\x7e\xf8\x6d\xf6\xa8\x97\x5f\x36\xf5\x74\xfe\xd9\x6d\xeb\x2f\x59\x11\x51\x05\x96\x86\x2c\xfc\xba\x07\x69\x57\x51\x8b\xb5\x18\x47\x53\x49\x9a\xe3\xc5\x38\xf9\xaf\x4c\xf1\x10\x91\x94\x55\x45\xbb\xd0\x06\x28\xd1\xb3\xcf\x5b\xdc\x3e\x87\xaa\xca\x9a\x67\xbf\xc5\x46\xc1\x5d\xfe\x33\x19\x55\x09\x3a\x67\xaa\x62\x2d\x3a\xfa\x6e\x92\xaf\x4d\x90\x63\x69\x83\xbf\x7a\xc1\x53\x10\xa1\x5c\xb1\x92\xb7\xdc\x7d\x0b\x6e\x52\x6f\xba\xc5\x33\x63\xf5\xfd\x22\x47\x0d\xaf\xbf\xda\xc7\xc0\x73\xc0\xa2\x00\x2c\x74\x22\xf3\x51\xa6\xfb\x54\x63\x39\xf3\x2c\x35\x9e\xb5\x33\xb8\xf2\x38\x90\x06\x3a\xa1\xff\x88\xff\x59\x99\xe1\xdb\x4f\xdb\x91\x50\x81\xb9\x94\x70\x9b\xb3\x9b\x5d\xa2\xb1\xf2\x6e\xfb\xe4\x6b\x22\x32\xcb\x5f\x38\xf9\x23\x9b\x90\xcb\x08\x86\xa0\x1c\x5a\x92\x66\x3b\x40\xf2\x7a\x3b\x96\x84\x02\x0b\xf7\x13\x4c\xcf\xec\x36\x31\x89\x76\x01\x0e\xe4\x35\xef\xd0\xb8\x67\xb7\x14\x3f\x17\x8b\x5f\xee\x38\x08\xdb\x86\x0e\xc4\xa5\x1e\xa5\xc9\xa2\xf4\x43\x99\x9e\x7e\x3f\x22\xc0\x62\xc6\xa1\x7b\xda\x01\x5d\x76\x86\x6d\x82\x4f\x40\xcd\xe0\xec\x25\x61\x50\x0d\x53\xef\xd7\x7a\x2f\xb4\x55\x99\xb9\xd7\x6f\xdf\xbf\xa7\xb1\xcf\xb1\xda\x40\x48\xfd\x17\xf9\x9b\x15\x41\xe3\xff\x3d\x37\xff\x0b\x00\x00\xff\xff\x93\x6c\xcb\x15\x8f\x06\x00\x00")

func test_certsClientTenant20KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Key,
		"test_certs/client-tenant.20.key",
	)
}

func test_certsClientTenant20Key() (*asset, error) {
	bytes, err := test_certsClientTenant20KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa0, 0xde, 0x89, 0x71, 0x2f, 0x2f, 0xf4, 0xaf, 0xb6, 0xa8, 0xdc, 0x4e, 0x9, 0x18, 0x21, 0xa, 0x56, 0x45, 0xb, 0x12, 0x91, 0xf7, 0xf4, 0x42, 0xce, 0xe7, 0x9, 0xa, 0x28, 0x47, 0x9d, 0x71}}
	return a, nil
}

var _test_certsClientRootCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\xcb\xae\xba\xc8\x1a\x47\xe7\x3c\xc5\x99\x9b\x13\xb9\x23\xc3\xba\x81\x80\x05\x14\x1b\x41\x9d\x01\x6a\x21\xca\x45\x51\x4a\x78\xfa\xce\xfe\x77\xd2\x3d\xe8\x6f\xb8\xbe\x64\x4d\x7e\xc9\xfa\xff\xef\x41\xe2\x7a\xe1\xff\x10\x49\x52\xcf\xf1\x10\x48\xc9\x1f\x2a\x51\xcf\x43\xeb\x05\x21\x70\xb9\x70\x20\x3c\x08\xb8\xc7\x0a\x4b\x27\xbe\x2a\xce\xa7\x26\xc4\x38\x3e\x8c\xc1\xc9\x89\xdc\x14\x84\x90\xdf\x9f\xf5\xfd\xe6\xda\x42\x86\x80\x8d\x0e\xc0\xe0\x25\xd1\xc4\x13\x04\x1c\x71\xc6\x58\x40\xc4\x03\x97\x6a\xf8\xaa\x5a\xbb\x3e\xaa\xfc\xeb\xa4\x20\x85\x3c\xcc\x20\xa0\x29\x26\xe1\x74\x54\xdf\x73\xa9\x3a\x4d\x81\x20\x66\x29\xb8\x38\x42\x9e\x25\x8a\x81\x46\xd3\xfd\x97\xa6\x4c\xa5\xcd\xb9\xf8\x85\x61\x0a\x34\xda\x80\x7f\x18\x45\xf4\x4b\x1a\xc0\xfe\x96\xf5\x29\xda\xff\x2b\x93\x0a\x4c\x42\x0a\x46\x17\x28\x7b\x02\xbe\x94\x54\xad\x3d\x9d\x31\x42\xe0\xc7\x13\x98\x1d\xfd\xa0\x3f\x79\xf5\x54\x85\x80\x11\x08\x19\xc0\x9c\x93\x18\xfc\xfe\x59\x8f\x38\x27\x50\x02\xd1\x4e\x80\xe8\xfd\x9c\x4c\x40\xcd\xe4\xf9\xea\x8e\x9f\xde\x5b\xed\xd9\x4e\xf7\x6b\x23\x5c\xaa\xe4\x74\xaf\x23\x2b\xfa\x7c\xf2\x15\x3c\x7f\xac\x28\x68\xf7\x78\xf6\x73\xf7\x79\xad\x78\x1f\x99\x8a\x74\x17\x03\x7e\x26\x71\xba\xe0\xa0\xde\x44\xd6\x19\x50\x34\x58\x50\x3d\xb4\x0a\x6c\x0f\xa1\x78\x0d\xa3\xe2\xdc\x1a\x5a\xf3\xc2\xfb\x9e\x59\x06\x49\x9c\x2a\x07\x33\x36\xd6\x8f\x1b\x6a\xee\xdf\x5a\x32\x22\x5f\x49\x5a\xfa\xf0\x17\x38\xed\xaa\x61\x18\xde\xb5\x26\x7f\x62\xa7\x52\xb3\xcd\xe8\x99\xe6\x16\x09\xd9\xd2\x5b\xbb\xd5\x5d\xd7\xad\xad\xee\x15\x95\x96\x6a\x4c\xe2\x91\xdd\x8f\x46\xb0\x00\xa9\x79\x6f\x1c\x5e\x5e\xde\x79\xcd\x6f\xb5\xfa\xe5\x53\x18\x5c\x33\xcf\x70\x9a\xae\xe7\xc3\xc9\x9a\xf6\x26\x3a\xe3\xb4\xb4\xd7\x4d\xd7\xf2\xfb\x35\x05\xdd\x6d\x80\x56\xb3\x9c\x37\x6c\x33\xae\xaf\x89\x94\x5f\x8d\x6d\x6b\x3e\xb4\xc4\x7c\x84\xd7\xfd\xe5\x9e\xe3\xac\x1b\xd7\x77\x98\x07\xae\x18\xa0\xf0\x62\x9f\xd8\xef\xa1\x24\x90\xcc\xa7\x75\xfb\xf5\xc6\x6e\x25\x1e\x58\x5f\x08\x31\x37\xdd\xb7\xea\xa4\xe7\xa2\x9f\xdf\x1f\x6c\x67\xd8\x7b\x79\x57\x1a\x45\xfc\xfa\xa3\xd0\x0a\x01\x41\x00\x28\x68\x47\xd1\x5e\x60\x7e\xc4\x59\x22\xc7\x80\x6d\xd7\x10\x30\x0c\x78\xce\x29\xa4\xbf\xcb\x9d\x25\x9f\x31\x4a\x41\xef\x22\x34\xba\x80\xed\x1d\x28\x28\xa2\x40\x76\xd1\xcf\xd3\xfd\xf1\x4a\x0d\x33\x02\x91\xd8\x03\xa0\x7b\x10\x30\x60\xea\x68\x35\x1e\x40\x9b\xbf\xfa\x4d\xb8\x33\xc7\x5a\x1a\x6c\x79\xdc\x1d\xd6\xbe\xb5\xda\x8d\x56\xf1\x95\xf1\xe5\x67\x0a\x86\x21\x24\x95\x89\x3d\x83\x5c\x27\xeb\x20\x9f\x9e\x65\xc1\xe3\xb5\x02\xe1\xab\xb3\x9d\xb7\x68\x52\xac\xba\xe2\x40\x9e\xab\xb5\x21\xe9\x7a\x54\xc6\x9f\xf6\x96\x8b\xbd\xf1\x2e\x9e\x3a\x3c\x79\xa4\x9b\xf2\x83\xb2\xf9\x1e\x0f\x19\xdc\xcc\x83\x19\x74\x21\x5b\xe2\xb2\xf7\x93\x13\x3a\xdb\xce\xb9\xd3\x95\xf0\x13\x26\xda\xa6\x9f\x83\x45\x2a\xb7\x47\xe7\x6b\x94\xc9\x0c\x14\x37\xb6\x14\x74\xc5\xcd\xb1\xbd\x3f\x8f\xc2\xf2\x5f\x95\xf5\x73\x7b\x90\xc6\xdf\x76\x87\x26\xb0\xda\x9f\x6a\xe6\x9f\x4a\xb3\x35\xce\x19\x5a\x8b\xc4\xb8\xe8\x7a\x25\x69\x2e\x59\x8e\xe4\x3e\xe6\x6e\x5f\xac\x7d\x39\xdb\x96\x18\x6b\xd3\xac\x9e\xcc\x9b\xbf\xeb\x1b\xb5\xbd\x55\x97\x22\xbe\x68\x1f\x99\xda\xab\x46\x53\x43\x65\x29\x47\x56\x6c\x8b\x54\x11\xdd\x27\xef\x24\xd5\x7f\x60\x2e\x5f\x65\xa5\xda\xf6\x38\x7e\xd2\xc6\x6b\x23\x43\x29\xe6\xfb\x27\x4a\x87\x7c\x95\xcd\x64\x46\x4e\x50\x67\x51\x74\xab\xe6\xce\xc0\xfe\x30\x2e\x9d\xde\x0e\x95\x35\xdd\xfa\x64\xd7\x48\x37\x5b\x7b\x48\x7f\xd2\x40\x42\xfc\xdf\x5c\xfc\x15\x00\x00\xff\xff\x8b\x90\xea\x5c\x4b\x04\x00\x00")

func test_certsClientRootCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootCrt,
		"test_certs/client.root.crt",
	)
}

func test_certsClientRootCrt() (*asset, error) {
	bytes, err := test_certsClientRootCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.crt", size: 1099, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2f, 0x50, 0x65, 0xc9, 0xf3, 0x7d, 0x96, 0xb4, 0xe0, 0x64, 0x6f, 0xb0, 0xc, 0x78, 0x4c, 0x41, 0xb3, 0xe2, 0x24, 0xc1, 0xa7, 0x20, 0x86, 0xa4, 0xce, 0x74, 0x54, 0x81, 0x7b, 0x38, 0xf2, 0xfd}}
	return a, nil
}

var _test_certsClientRootKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\x37\x12\xab\x5a\x02\x05\x73\x56\xf1\x72\x6a\x4a\x80\xb0\xc1\x0f\x30\x17\x8f\x84\x77\x19\x08\xb8\x08\xef\x84\x5b\xfd\xd4\x7f\x93\xce\x49\x4f\xd2\xd5\x49\xff\xe7\xdf\x09\x40\xd1\x5e\x7f\x5c\x8f\xff\x63\xbb\x5a\xc8\xfb\xe0\x8f\x01\x92\xbf\x0f\x62\x69\x1a\x98\x78\x4d\xe0\x79\x43\xe4\x1d\xc0\x93\x3b\xcf\xd3\xc4\xfc\x18\xf9\x7b\x52\xe6\x5f\xf1\xa5\x61\x43\xb9\xfc\x0e\x7b\xb5\x7d\xbe\x4e\xb9\xf7\x00\xb3\xd2\x34\x95\x93\x32\xc1\xac\xe4\x8c\xa4\x8e\xad\x75\x49\x36\x71\x97\x08\x99\x25\xf2\xc5\xf6\x3d\x01\xce\xb6\xac\x59\x3d\x98\x0d\xe3\x0f\x63\x58\xd5\xb4\xcc\x03\x25\xfd\x3c\xc5\x5f\x7f\x07\x91\x61\x5d\x8a\x30\x36\x32\x2e\x04\xc0\x41\x38\x3b\xac\xc6\xc7\x80\x46\x9a\xf1\xf6\x15\xb5\x25\x87\x50\x49\xae\x60\xb0\x14\x76\xbb\xfa\xbe\x27\xd4\xca\x23\xd9\xf0\x4e\xe3\xeb\x68\x96\xf1\x63\x4a\xfe\xfe\xcd\x89\x1c\x26\x49\xa6\xfe\xca\x15\xa1\xf6\x3d\xef\x1f\x62\x18\xb9\x4d\xbb\x58\xe2\xfb\x79\x44\xc2\x46\xe3\x99\x22\x1a\x6a\xae\x88\x2c\x36\x71\x41\xd3\x46\xef\xf2\x2b\x76\xc3\x8f\xf3\x47\x1d\x7b\xbd\xf6\x27\xfa\x2e\x33\xd1\xe5\x2c\x11\x29\x8d\x56\xfd\xd9\xaf\xe7\x29\x5d\x37\xc7\xc9\xe9\xa3\x2d\xf3\x39\x2e\xd4\x39\xc0\x39\x97\x76\x93\x57\x54\xde\xa8\x23\x27\x63\x2e\xb6\x2a\x0f\xd9\xd6\x27\x88\x6e\x75\x80\xaf\x0f\x68\x0e\xbe\x17\x52\x31\x62\x60\x37\x96\xe3\x2f\x57\x25\x5f\xe5\x62\xd7\x04\x41\xda\x78\x60\x7d\xd7\x9a\x3d\x48\x5a\xe0\xcc\xe0\x3c\x34\x89\x77\x78\x81\x1f\x35\x81\x07\x09\x4e\x6e\xe6\xc5\x70\x14\x1c\xc5\x27\x86\x58\x63\xdc\xff\x70\xe7\x61\xe5\xef\xe3\x51\x28\x83\xa0\xcb\xd5\xb5\xde\xda\x50\x52\xf8\x4c\x8e\xbf\x6e\xfd\x9c\xb4\xda\xd0\xc5\xeb\x15\x7c\xec\x78\x6a\xf0\x9a\x1a\x06\x35\x66\x7d\x30\x01\x37\x0a\x91\x71\x1c\x28\x51\x81\x76\x42\x0f\xa4\x13\xcf\xd6\xb6\xce\x52\x1c\xe8\x6c\x81\x9b\x33\xd9\x10\x02\xf5\x00\xf5\xd7\xef\xd0\xf7\x9a\x3d\xaa\x8c\x61\xc5\xb1\x0e\x67\x29\x60\xd3\xa8\x14\xf7\xc6\x91\x11\x88\x62\x9b\xe0\x93\x19\xa7\xdf\xaf\xf2\xd0\xb7\xac\x56\x6f\x7b\x69\xe6\x53\x8f\xf5\xba\xc3\xb8\xf2\x1e\x43\xe6\x72\xd9\xf1\x02\x1f\xdf\x92\x59\xb4\x2f\xc3\x71\xf9\x66\xc2\xd7\xc5\x30\x02\x1a\x48\x97\x43\xc0\xfa\x11\x29\x4a\xdb\x30\x88\xcd\x69\x32\x78\x32\x6e\x22\xf9\xdc\x21\x03\x51\xba\x2a\x17\xfd\x95\x94\xc2\x6b\x18\xe8\x7d\xdd\x2c\x34\xeb\x68\xe1\x20\x45\xb0\x62\x00\xa2\xde\x89\x21\xae\x62\x3c\x4c\x62\x58\x96\xf3\x43\x9b\xab\x40\xb9\xfd\xd0\x0d\x89\x2e\xb4\xa2\x41\x56\x8a\x55\x97\xa3\xa6\xcf\x96\xce\x7c\x09\x5f\x22\x8c\x3b\xdd\x4a\xaa\x19\xf9\x14\x8d\xef\xcf\x1b\xd6\xed\x03\xc1\xad\x53\x64\x46\x20\xc2\x04\xf0\xcc\x59\xe3\x31\xc1\xc2\x38\x19\x3c\xaf\xf7\x86\x87\xb1\x48\x14\xdc\xb0\x86\xa8\x20\x69\xc4\xd8\x93\x7e\x96\x55\x94\xf2\x0a\x53\x57\x7d\xdb\x67\x89\xb5\xc7\x08\x95\x51\x40\x79\xc8\x0a\x1d\x3b\x85\xde\x4e\x25\xba\x9f\x07\xab\x50\x58\xa2\x5b\xf3\xcb\x93\x8f\x22\x48\x4c\x7c\x71\x70\xfb\x95\xb6\xba\xb6\x43\xbc\xd6\x78\x07\x4b\x95\x39\xe6\x2a\x05\x65\x20\xa2\x99\x5e\x4c\xe8\x7a\xb5\x4d\xf6\xa6\x28\xee\x16\x79\xde\x38\xc8\xe5\xf2\x7c\xac\x58\x7d\x19\xe3\xfb\xfd\xe4\x0f\x29\x70\x45\x78\xd1\xd2\xd1\x61\x9c\xdf\x5a\xaa\xfa\xf9\x4b\xcc\xee\x1b\x87\x38\x09\xf8\x8e\xab\x02\xe6\x2d\xb3\xe8\xd8\x6a\x0b\x87\x40\xcf\x46\xe1\x3e\xe6\x34\xe9\xed\xca\x86\xe0\x24\x9b\xf3\x8a\x6c\xf0\x7e\x6e\xa4\xe1\xf5\xce\x16\x97\x85\x24\x88\x26\xb6\xe4\x57\x41\x23\x4b\xa1\x56\x52\x10\xf4\x6e\xd8\xa0\x60\xe9\x64\x8a\xec\xa4\xb6\xc7\xd2\x04\x7d\x55\xa9\xd5\x42\x74\xea\x59\xee\x34\xba\x08\x5d\x31\xd5\x9f\xa2\xfc\xca\x1b\x39\xe5\xba\xfd\x7d\x1f\x26\x24\x0c\xc4\x0d\x6f\x93\x79\xe6\x44\xdd\x4c\xad\x20\x26\xd3\x2c\x3d\x18\xbe\x0a\x2a\x77\x51\xe6\x1f\xd7\x4e\xa6\xff\x65\xcd\xe6\x5f\xc9\x02\x1b\xeb\xee\x11\xde\x7e\xf4\xe9\xe5\x58\xd3\xed\x8a\x95\x0d\x80\xdc\x91\x68\x86\x9b\x47\x09\x7a\x5b\x3f\xaf\xf8\x7b\x70\x1e\xe8\xa6\xa1\xa9\x86\x00\x67\x39\xe0\xd8\xdd\x59\xde\xf2\x17\x15\x1c\x0e\x24\xf8\xec\x93\x9f\x91\x3d\xcd\xfc\x9e\xf4\x5a\xed\xfb\xc0\x42\x94\x79\xe1\x7e\x5f\x32\xda\xd7\x5b\xc5\xd3\x21\xd8\x77\x88\x09\x85\xb2\xb8\x0f\x4c\x4b\x7a\xae\x6e\x49\x42\x5d\xe5\x65\x2c\xd4\x26\xb2\xaf\x54\xb0\x19\xe8\x13\x65\xd2\x06\x1d\x46\x4a\xef\x5c\x44\xb8\xac\x08\x82\x36\xf6\x06\xf9\x30\xea\xe6\xfb\x2c\xa4\x9b\xff\x38\x86\x00\x1d\xb1\xe4\xc0\xb7\x9a\x26\x9b\xe6\x6e\xde\xe4\xe6\xae\x7c\x9f\x31\x05\x43\xf9\xd4\x0d\xe6\x4a\x6d\xe1\xbd\x17\xec\x8a\x8c\x23\x39\x5c\x9e\xc1\x98\x28\x31\x0f\x0d\x4a\x93\x8e\x62\xde\x4d\xac\xff\x16\x16\x78\x58\xda\x29\xd9\x2f\xcb\x3e\x1f\xb6\xd1\x6b\x61\x8b\x5d\x62\xd4\xdc\x80\x75\x8e\x43\x0d\xfb\xb0\x02\x5a\x8c\xdc\x73\x00\x89\x97\x14\xf9\x70\xf9\xcc\xbc\xfe\x8a\xa6\x71\xc2\xe1\x50\x79\x3b\x0e\xdb\xbb\x55\x92\xe0\x07\x7c\x2c\x62\x6f\xf6\xd0\xcc\xcd\x52\x87\x7b\xfb\x2c\xcf\xd2\xcf\x97\x7b\x81\x1a\xe4\x91\xbc\xd7\xda\xf5\x7f\xc8\x07\x6b\x75\xae\x97\x49\xcf\xa9\x39\xf0\xc5\x8d\x42\xec\xf5\xeb\x09\x31\x0d\x49\x1c\x1b\xc2\xfb\x53\x86\xe8\x7b\x39\xe0\x6e\x73\x77\xe7\x88\xd9\x80\x52\xed\x91\x20\x16\x79\xd7\xa9\xa5\xf8\x69\x7b\x95\x11\x8f\x7f\x6b\xde\x4f\x14\xa7\x10\xa3\xe1\x60\x4f\x77\x8b\xa1\x7a\x2d\xbf\x0e\x94\x7c\x22\x03\x51\xa2\x98\xbc\xfd\x74\xae\x77\xb5\x8e\xaf\x30\xaa\xcc\x33\x08\xf9\xeb\x7f\xd8\xbd\xa6\x94\x33\xb7\x12\x7d\x2b\xdb\x55\x6c\xc6\x4d\xf1\x9e\x9a\xc8\x01\x0c\x42\x97\x2f\x69\x03\x90\x97\xe7\x2d\x31\xde\xc6\xb6\x3c\xa3\x6f\xc8\xff\xf3\x0f\xf2\x37\x2b\xe0\x25\xfd\xff\xdc\xfc\x37\x00\x00\xff\xff\xa2\x6b\x10\xd7\x8f\x06\x00\x00")

func test_certsClientRootKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootKey,
		"test_certs/client.root.key",
	)
}

func test_certsClientRootKey() (*asset, error) {
	bytes, err := test_certsClientRootKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0x2f, 0x2d, 0x62, 0xd5, 0xd3, 0x2e, 0xf2, 0x7a, 0x72, 0x39, 0x8, 0x25, 0x9b, 0xbf, 0x37, 0xad, 0x66, 0x3c, 0x98, 0x8e, 0x9, 0xa7, 0x2c, 0x23, 0x28, 0x2, 0x93, 0x1a, 0x38, 0x59, 0xbe}}
	return a, nil
}

var _test_certsClientTestuserCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xbb\xae\xab\x46\x18\x85\x7b\x9e\x22\x3d\x8a\xc0\x80\x01\x17\xa7\x98\x61\x06\x18\x73\x31\x98\xe1\x62\x3a\x73\x35\x78\x63\xb6\xb1\x61\x30\x4f\x1f\xed\x13\x29\x29\x92\xbf\xfc\x7e\x69\x35\x6b\xe9\xfb\xf3\xe7\x20\xb6\x88\xff\x87\x81\xcf\x94\x98\xc4\x00\x14\xff\xa6\x9c\x47\x08\x02\x9b\x61\x80\x7a\x6e\x01\x23\x10\xb4\x24\x4c\x4d\x31\x55\xe8\x79\xe0\x63\x71\x09\xaf\xe9\xcb\x3a\xeb\xe5\x84\x80\x0f\xdb\xfb\xf3\x76\xef\xac\x03\x13\x21\x08\x5f\x26\x40\x60\xe2\xbc\x33\x61\x18\x5c\x50\x12\x86\x0e\x66\x5f\xa8\x90\xfc\xa9\x1c\x0e\xb7\x8b\xd4\xae\x26\x05\x14\xb6\x7e\x02\x81\x47\x11\xf6\x97\x8b\xf4\xfe\x14\x92\xd9\x5f\x0d\x88\x42\x0a\x6a\x93\x89\x1f\xce\x43\x40\xf6\x68\xbc\x7a\x34\x94\xbc\xbe\xba\xfe\x40\x9f\x02\xd9\xeb\xc1\x3f\xcc\x33\xca\x15\xf7\x20\xfc\x3b\x6c\xa4\x46\xfc\x6f\x18\x77\x45\xf8\xec\x01\xdd\x02\xbb\x18\x83\xd5\x23\x95\x95\x6c\x95\x9d\x6c\x79\x46\x58\xdb\xe2\xce\x03\xa2\x65\x44\x4f\x2b\x22\x85\x8c\x42\x0c\x41\x18\x03\xa0\x10\x88\x18\xf8\xf9\x3b\x1c\x18\x09\x04\x21\xa2\xa7\xa6\xf5\xaa\x47\xd0\xdf\x55\x5e\xce\x82\x5e\x79\xe4\xa4\x8a\xef\x0e\x0c\x93\x79\xba\x6f\x2f\x45\x6f\x78\xa9\x88\xd5\x93\xab\xf2\x64\xd5\x75\x3f\x0a\xb4\x16\x55\x4c\xe7\x02\x51\x3b\x6d\x5a\xb9\x35\xd7\xc5\x1b\x8d\x0b\x32\x1d\x74\xf4\x6f\x42\x2f\x6c\xf3\x75\xa8\x93\xfb\xe1\x76\x54\xa1\xea\x63\xef\xdd\x67\x6f\x89\x57\x49\xd0\x3c\x34\xcc\xf2\x0f\x75\xc4\xcd\x18\x33\xce\xad\xe7\x58\x80\x03\xe5\x35\xb4\x66\x6b\x5c\xcd\xe1\x7e\x37\x3f\xc5\xd4\x5d\x23\x94\x67\x93\xa3\xf0\xf8\xf0\x58\x5e\xfa\xf8\x98\xec\xd5\xd9\x0d\x41\x29\x6b\xd5\xd6\xa6\x32\xd0\x9e\x7d\x7c\x42\x1c\x96\x79\x25\x31\xd9\x5b\xfd\x24\xbb\xea\x68\xe2\xca\xf8\xe4\xcb\x78\x99\x48\xde\x0d\xd1\x94\xe9\xb1\xbd\x6d\x9f\xdd\x72\xe2\x07\xa9\x5e\x0c\x82\x79\x26\xd6\xa2\xe1\x6b\x53\x99\x88\x42\x75\x4c\xb8\xec\x29\xb0\x6c\x40\xea\xc9\xce\xce\xf2\x55\x18\xc5\x48\x51\xf8\x67\x0a\xa3\x61\x45\xee\xf1\x03\x2e\x8f\x80\x92\xae\x4d\xdc\xd0\xae\x0a\x3d\xfe\x7a\x7b\x66\xb9\x64\x0e\xd1\x8b\x9b\xad\x05\xd8\xe6\x26\x6d\x73\xc4\xd3\xeb\xaa\x40\xea\x96\x9d\x35\xe3\x91\x45\xaa\x4e\x53\x61\x3d\xed\x41\xeb\x41\x00\xac\xfe\xb8\x81\x2f\x0f\x28\x3f\x4d\x55\x88\x61\x28\xb0\x10\x03\x46\xcc\x11\x01\xca\xfd\x74\x6b\x47\x31\x46\x08\x38\xb0\x6d\x27\xd8\x62\x13\x86\x25\x02\xfd\xff\x2c\x0f\x9c\x0c\x10\x62\xe0\x25\xd1\x6d\x09\xb6\x75\xa6\x8f\x8a\x7b\x07\xf5\x7d\x90\xcb\x50\x9c\x7d\xdb\x2d\xd4\x2a\x86\xcc\x50\xe8\x4b\x4c\x50\xaa\x8a\x4b\x49\xca\xa9\x6e\xd2\x2e\x78\x25\x87\xec\x68\xb4\xfb\x41\x71\x77\xc0\x8e\x27\x19\xc5\xec\x8a\xed\xb3\xc6\xdd\x0e\xec\xbb\x70\xbc\xf0\x9a\xd2\x0f\xb6\x95\xbb\x2a\x3d\xdc\xc3\xf2\x12\xe3\x76\x69\xb2\x69\xcc\xa5\x7c\x57\x76\x0f\x8d\xb7\xab\xf1\xf8\xf5\x96\xcf\xce\x19\x36\x4b\xcb\x04\xe7\xb2\xd7\xd4\xfd\x98\x72\x7b\x81\x84\xf3\x26\xe6\xb4\x16\x2b\xde\x1e\x17\x29\x75\x37\x1c\xa4\x59\x90\xb1\x2d\x08\x3e\x03\x9f\x46\xb4\x5a\x8b\x78\xdd\xca\x4b\xd4\x1b\xb6\x53\x40\xdf\x1e\x0d\xcb\x58\xba\xc9\xe9\xbe\x2b\xee\xfb\xd1\x0c\x13\xb3\xcc\x16\x0b\xeb\xdb\x95\x17\x09\xdf\xf9\x3b\xe9\xf2\xb4\xb9\x8d\xb9\x55\xbc\x88\x89\x5b\x01\x6d\xbc\xb0\xd6\xc7\xf2\xde\x3e\x2f\x1f\x64\x0d\x69\x8e\x32\x37\x18\xba\xd2\xdb\x73\x5a\x1d\x1b\xd6\x4b\x08\x67\xf5\xeb\x33\xed\x9e\x5b\x35\x07\x45\x2c\x8d\x1d\xfd\xb2\xd9\xdb\x78\x4b\x28\x72\xaa\xf5\x7b\x18\x6b\x19\x1c\xf6\x53\xd4\x34\x8b\xe2\x6b\xe4\xd9\xe8\x5d\x4c\x70\x63\xaf\xdc\x96\x7b\x6a\xd5\xec\x9f\x03\xfb\xf5\x8b\xfb\xad\x08\xec\xa3\xff\x6a\xe3\xaf\x00\x00\x00\xff\xff\x2e\x58\x15\x82\x53\x04\x00\x00")

func test_certsClientTestuserCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserCrt,
		"test_certs/client.testuser.crt",
	)
}

func test_certsClientTestuserCrt() (*asset, error) {
	bytes, err := test_certsClientTestuserCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.crt", size: 1107, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x63, 0xf0, 0xcc, 0x2b, 0xdd, 0x9e, 0x5b, 0xac, 0x6c, 0x1c, 0x39, 0xab, 0x85, 0x82, 0x48, 0xbd, 0x17, 0x48, 0xf7, 0xd7, 0xc1, 0x3c, 0x45, 0xa1, 0xdb, 0xf0, 0xff, 0xe7, 0xaa, 0x73, 0x1e, 0xcf}}
	return a, nil
}

var _test_certsClientTestuserKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xa7\x12\xac\x5a\x02\x85\x61\xcf\x53\x1c\x4f\x4d\xd1\x64\x10\x57\xb0\xc9\xa9\xc9\xd1\x35\x34\x39\x34\x39\x3d\xfd\xd4\x3d\x63\x67\xd9\x65\x3e\xf7\xff\xe7\xdf\x01\x51\x56\xdf\x7f\x5c\x8f\xfb\x63\xbb\x6a\xc8\xf9\xe2\x1f\x5d\x4c\xfe\x3e\x90\xa9\xaa\xe2\xc4\xa9\x80\xe3\x74\x9e\x73\x44\xee\xf5\x8c\x84\xa0\xa4\x0f\x41\x5a\xc7\x86\x3e\x04\xac\x61\x9e\x12\x6a\x7c\x15\x48\xd9\x4c\x9a\xb4\x65\x2b\xc8\x36\xa0\x56\xdb\xc0\x47\x63\x96\x36\x24\x04\x2d\x4c\x70\x78\x6e\x0b\xac\xf5\xac\x30\x6e\xe2\xd8\xf2\xe8\xdc\xc0\x5d\x5e\x75\xfb\x49\x49\x20\x0c\x3d\x4c\x63\x9f\xda\x89\x57\x54\x45\xeb\x0a\x46\x82\xd2\xdf\x63\x6f\x04\x9c\x84\x2f\x13\x92\xf3\xee\xde\xcc\x73\x96\x6e\x7c\xe9\xed\x33\xed\x90\xfd\x64\x42\x26\x54\xb2\xce\xfa\x66\xf3\x26\x35\x4c\x50\x61\x21\x75\xef\x76\x6d\xa7\x34\x6d\xeb\x1a\x75\x31\xde\x96\xb6\xf8\x1b\xc6\x73\x02\x92\xb6\xd3\xa2\x7e\xa8\x50\x5d\x6f\x64\x97\xdc\xdc\x28\xd6\xfe\x1b\x7b\xae\xab\x38\xeb\x90\x51\xb2\x7e\xcb\xc9\xd4\xcd\x28\x22\x01\x86\x61\xb6\xec\x39\xa6\x6d\x5c\xce\x06\xd8\xeb\x5b\xd9\xb8\x16\x2a\x28\x5c\xfa\xda\xb8\x17\x86\xd4\xc1\x48\x64\x05\xb7\x35\xfa\xfa\x62\x07\xf5\x16\x77\xcb\x9e\xfb\x2a\x98\x56\xe7\xbe\xf3\x4a\xd6\x9e\xd7\xad\xfe\x24\xef\x05\xf0\x08\x91\xb4\xcc\x07\xb1\x81\xde\x50\x63\xcb\x84\x0b\x3f\x17\xa0\x60\xe6\xde\x84\x45\xde\xb9\xe0\xc6\xd5\x7a\xa9\x75\x53\xdc\x0f\x11\x3d\x18\x7f\x77\x54\x81\x73\x38\xc0\xfd\x54\xc0\x49\x89\x5c\xee\x13\xf3\x25\x6b\x87\x5d\x1a\x11\xe2\xcb\xa4\x54\xc6\x9f\x3a\x26\x6f\x13\xaf\x0e\x7f\x66\x6c\x2c\x7f\xc9\x21\x69\xb1\xdb\xd4\x3f\xd9\x40\x3c\x54\xaf\xaf\xfd\x50\x5a\x42\xe3\xaa\x59\xae\x93\x2b\x16\xa8\x70\x74\x3d\x89\xb8\xc1\x08\x74\xf5\xcc\x85\xbc\xa5\x45\xaf\x9e\x36\x3c\x03\x0f\x04\xd2\x6c\x23\x67\x83\x74\x46\x8e\x29\x13\x78\x13\xe2\x0a\x5f\x1e\x6b\xe4\x1b\x47\xc7\x35\xc7\x00\xbc\xc4\x2d\x99\xa3\x8e\x68\x47\x48\xf8\x0b\x81\x1f\xab\xc5\x28\x59\xd9\x97\xe4\x0c\xac\x5b\x12\xdd\xcd\x75\xf0\x07\xf3\x04\xaf\xa6\xa8\xb4\x11\x68\x3f\xd1\x0e\x37\x80\x6b\x85\x0b\xba\x1f\x56\xc9\xe1\xdd\xdd\x74\x46\xa6\x42\xd5\x7c\x8c\x1b\x6a\xbf\xa9\xbf\x82\xe4\xf4\xb4\xd8\x34\xfd\x71\xfd\xa2\xba\xcb\xed\x34\x5d\xa7\x1a\x1e\xeb\x4b\x80\xe5\x6e\x52\xc0\xec\x86\x20\x6a\x5b\x6f\x56\x3f\xc8\x4b\x44\xc2\x4a\xae\xc4\x33\x3b\xcd\x9a\x00\x69\x07\x17\x62\xfa\xe2\xfa\x2e\x4a\x9d\xe5\xa3\xf2\xa1\x45\x6c\xdf\x2c\xca\xab\x36\x4c\x87\x29\xff\x2c\x8a\xed\x9d\xa6\xb1\x7e\x0d\xc9\xc2\x9d\x1f\x97\xb0\xf7\xf4\x3d\x63\xb3\x42\xab\x72\xcd\x30\x88\x33\xb8\xd7\x64\x88\x7c\x95\x88\x1c\x7e\x57\x15\x98\x52\x91\x3e\x89\x34\x36\xf8\x48\x9d\x8e\x0f\x62\x84\x6e\xf7\xb9\x1e\x79\x7e\xb1\x4c\xe5\x50\xf9\xf1\x98\xa8\x9d\xe7\x5d\x58\xac\xe2\x5a\xa5\x50\x20\xda\x31\x9f\x26\xf3\x80\x27\x20\x2f\x96\x33\xd8\x3e\xdd\x87\x6f\xf2\x72\xa6\x2c\x4b\x9a\x0e\x50\x73\x5b\x1f\x03\xe3\x53\xf5\xf3\x38\xf1\x9f\xab\x9c\x47\x01\xc4\xfc\xe6\xd4\x39\x12\x2d\x2e\xe4\x06\xc8\x1e\x34\x66\xe0\x86\x47\xdd\xe5\x44\xad\x0e\x46\x29\x23\xe2\x11\x3f\x7c\x6c\x47\x33\x97\x2b\xae\xb6\x23\x4c\x36\xbc\xfc\xd7\x9b\x6d\x3b\x2d\x2a\x1b\xbd\x0c\xfe\x8a\x99\x1e\x24\xd0\xd0\xd6\xc7\x13\xc9\xd5\xa1\xbb\x4c\xc5\xe5\x95\xe3\x2f\x24\x3b\x0d\x7c\xc0\x28\xc3\x45\x7a\x4e\xbd\x3a\x93\xfc\x65\x13\x41\xff\x19\x21\xa0\x74\x01\xe4\x42\xa3\x52\xf1\x50\x04\x7c\x48\x07\x2a\x84\x4f\x32\xd3\xa9\xbb\x8f\xa5\xdc\x0b\x74\x28\x2f\xa0\x9a\x96\xcc\x6e\x13\x08\x38\x92\x93\xb0\x97\xd8\x41\x3d\xa5\xc5\x4a\x99\x29\x2b\x56\xb7\x83\x31\xbc\x28\xb7\x04\x8d\xb4\xcc\x1b\xee\xee\x08\x02\x0c\xc0\x3a\x60\xa3\xe3\xab\x2e\x74\xf0\x33\x92\x1d\xf1\xd8\xe2\x47\x7a\x35\xa2\xf8\x3d\xd3\x32\x47\xab\x86\xc2\xff\xc8\xeb\xa6\x1f\xe3\x53\x4c\x2b\xbd\xb6\x63\xce\x1d\xc8\x33\xda\xd0\xec\x3b\x76\x30\x28\xfe\x76\x1f\x45\x61\x19\x5d\x4d\xe9\x32\x9d\x62\x34\x9c\x57\xcc\x32\x5f\x62\xad\x4f\xbf\xb0\xef\xcd\x22\xec\x59\xdc\xe6\x99\x6f\x1f\x76\x21\x93\xd3\x9f\xb7\xb7\x7b\x0e\x90\x21\x38\x45\xb2\x37\x96\x5a\x96\x2a\xf7\x16\x8d\xd2\x72\xf4\xa2\xbb\xf4\xf3\x29\x12\xa9\xd5\x8f\x03\xe1\x4d\x81\x9d\x84\xc9\x13\xef\x8f\x7c\x6e\x61\x55\x96\xfa\xc8\xd9\xd5\xf2\xda\xb3\xc4\x7a\x94\x1d\x12\x74\xd6\xd7\x77\xa0\xcb\xd5\x60\x95\x63\xca\xf7\xfa\x2a\x7c\xc5\x7f\xc9\x20\x78\x05\xc6\x1d\xe9\xd9\x44\x78\x24\x1c\x7d\x82\x79\x47\x6d\x9f\x8b\xf0\x70\x64\x08\x6a\x7f\x9a\xdf\x4d\x1e\x34\x14\x48\x1f\x7e\x85\x73\x5e\x63\xdf\x63\x30\xf6\x0a\x56\xa7\x43\x33\x98\x56\x89\x66\x45\xaf\xda\x9e\xab\x74\xc9\x42\x18\x92\x65\xf3\x0c\x83\x24\xf1\xb8\xfd\x34\xdd\xef\xce\x3e\x30\xc1\x50\x60\x32\x04\xaf\x79\xe2\x11\x2b\x7c\x90\xfb\x41\x7c\x88\x06\xc9\x1c\x84\xc2\x84\xbc\x2b\x31\xac\xc1\x81\xba\xf4\xa3\x8b\x58\xb3\xab\xce\xc5\x3d\xe7\xeb\xdc\x8c\xc8\xd5\x4a\x79\x1a\x5e\xa4\xd3\xab\x7e\x07\x61\x54\xdd\xae\x8e\x0e\x2a\x47\x08\x4d\xa6\xbe\xaa\x0b\x1b\x93\xa0\x8a\xae\x3e\xe6\x8b\xc8\x0c\xc0\xab\xc5\x96\x85\xed\x97\xf8\x66\x8b\x6f\x1f\x3e\x46\x3f\xba\x5f\x39\x44\x0c\xf4\xf9\x09\x13\x0d\xc1\xb8\x55\xa0\x25\xfd\xc6\x3e\xf3\x62\x30\xd6\x9b\x40\x4e\x6b\x47\xb5\x89\xf2\xc1\xac\xfa\xcf\xc3\xdf\x59\x1e\x12\x9e\xf0\x2e\x3e\xeb\x92\x94\xdd\x1b\x88\x52\x84\x96\x23\x7c\xbe\x08\x64\x88\x3d\x68\x51\xea\xe5\x26\xa8\xfc\x77\xca\x9b\xbb\x78\x4b\xff\xab\x3a\x60\xa8\x28\xcf\xac\x5a\x44\xb7\x17\xd5\x04\x96\x01\x58\x33\x3c\x26\x7d\xf8\xd6\x77\x97\x49\x9c\x7a\xfe\xf3\x0f\xf4\x37\x2b\xe2\x5b\xf8\xff\xb9\xf9\x6f\x00\x00\x00\xff\xff\x92\x4c\x21\xfe\x8f\x06\x00\x00")

func test_certsClientTestuserKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserKey,
		"test_certs/client.testuser.key",
	)
}

func test_certsClientTestuserKey() (*asset, error) {
	bytes, err := test_certsClientTestuserKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x65, 0x7f, 0xef, 0xdb, 0xc7, 0x5e, 0x5c, 0xeb, 0x9a, 0x3a, 0xc8, 0x94, 0x4f, 0xb3, 0xf1, 0x64, 0xcb, 0x89, 0x3, 0x52, 0x22, 0x6, 0xf2, 0xc6, 0x8b, 0x38, 0xed, 0x31, 0x20, 0xb8, 0xdc, 0xc0}}
	return a, nil
}

var _test_certsClientTestuser2Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\x39\xd3\xb2\x4a\x13\x40\x73\x7e\xc5\x97\x3f\xf5\x95\x80\x2b\xe1\x6c\x22\xc2\x20\xc3\x32\x80\x19\xa0\x80\xa0\xb2\x08\x0c\xf8\xeb\x6f\x3d\x6f\xf0\x06\xf7\x76\xd2\x55\x27\x38\xd5\x41\xd7\xf9\xff\xef\x40\xa2\x1b\xf6\xff\x10\x71\x7d\xe3\x68\x20\xe0\x93\x3f\x54\xa2\x86\x81\xa1\x8f\x10\xb8\xab\x05\x10\x06\x04\x85\xe1\x02\xba\xe2\xb3\xca\x6e\xf4\x72\xa9\x54\x05\x99\x79\x36\x3f\x3f\x4b\x2d\x30\x8b\xcf\x66\x73\x35\xca\x29\xb3\x01\x23\x16\x64\x40\x48\xe6\x97\x78\x14\x02\x1d\x28\x01\x41\x25\x3d\x33\x55\xab\x92\xf5\x79\x8a\x43\xbb\xa1\x6e\x20\x88\x88\x31\x67\x0c\x13\x31\xe3\x54\xb5\xfb\xec\xa5\x95\xb1\x5a\x14\x4c\x26\xe2\x54\x66\xb6\x44\x2b\x20\x2e\x18\xc8\xd4\xcf\x94\xdf\x1d\x96\x99\x4d\xab\xe0\x97\x6d\xff\xb2\x0a\x34\xd4\x35\x04\x01\x7f\x64\x26\x11\xcf\xbf\x32\x29\x56\x8b\x99\x54\x80\xc1\xc2\xe6\x10\x50\x1f\x45\xee\x33\x5b\xbb\x4a\xa6\xf2\x85\x56\x08\x01\xcf\xf8\xf7\xe9\x10\x32\x80\x8b\x82\x38\x00\x23\x24\x01\xd6\xa0\xa2\x20\x10\xd0\x5b\x6a\x46\xc3\xa2\xdc\xed\xcf\xe1\x55\x9d\x20\x18\x00\xca\xf7\xfb\x17\x47\x2d\x6e\x5f\xbb\xd1\x99\x3a\x8b\xf7\x2a\x0f\x7d\x39\xb0\x96\x26\xb0\x72\x7b\x5e\x7d\x32\x29\xc2\x64\xf2\xdf\x25\xa7\xc7\x72\x59\x34\x1a\x55\xa7\x15\x58\x6d\xb3\x3c\x41\x0b\xf1\x93\xa3\xb2\x7c\xcf\x45\xe2\xd2\x2e\x68\x91\x35\x37\x01\x3b\x0e\xde\x41\x14\x6c\xc5\x77\x3b\xe5\x9c\x89\x83\xa4\xfe\x78\x1b\x3b\xa0\x83\x91\x77\xe3\x57\xb9\x80\x29\xdd\xf8\x7d\xb6\x69\x3a\x63\x76\x0f\x4e\x27\xeb\xee\xea\xd2\x3d\x03\x73\x22\xc3\xf0\x13\xf1\x29\xed\xdf\x04\x99\x5f\xe5\xdc\xcc\xd3\x61\x89\x26\x09\xa7\x39\x8d\x3f\xd0\xca\x93\xeb\x38\x82\xbe\x5b\xb0\x47\xa7\xc5\x81\x93\xa5\x7c\xdc\xce\x0b\xdd\xd3\x2e\x8c\x7c\xd9\x26\xcb\x76\xca\xb6\xdd\x21\xd7\xdc\xbd\x5f\xa2\x03\xfa\x69\x46\xdf\xdd\xdc\xa4\xf7\x76\x35\x2e\x37\xcd\x3b\xe7\x2e\x5d\x1f\xbf\x07\x08\x1e\x5d\x32\x16\x62\x7a\xdb\x8f\x19\xfe\xe4\x18\x27\xf5\xd6\xe6\xfb\x4a\x53\x23\xac\x73\xa5\x58\x4d\x45\x3d\x0f\xe1\x73\xdb\x31\x5b\x0e\x43\xa9\x77\xbb\xab\x6e\x17\x48\x3f\x2a\xcc\xd2\xd0\x49\x77\xd3\xef\xe0\xc0\x56\x8e\xbe\xb6\x1a\x10\x04\x04\x01\x20\xa1\x6f\x8a\x02\x81\x8b\x18\x73\x57\x76\x00\x3b\xad\x20\x60\x18\x14\x61\x21\x51\x48\x7f\x9f\xe8\x76\x66\x8c\x52\xd0\xe8\x08\x7d\x74\xc0\x82\x23\x14\x14\x51\x20\xeb\xc8\xeb\x74\xcf\x48\xd7\x98\x11\x88\x44\x00\xc0\xc6\x80\x80\xa1\x20\x79\x95\xdd\x17\xb1\x5a\x22\x4b\x7b\x19\x9b\x41\xf8\xef\xa4\xaf\x1a\x8b\x61\xd8\x17\xcf\x55\x77\x37\x9d\x43\xf5\x3e\x9a\xf7\xd5\x89\xb7\xf7\x80\x38\x4e\xc2\xe5\xf9\xd4\x3e\x14\xf5\x95\x68\x36\x68\xbd\xfb\xfa\xa1\x97\x97\x50\x1a\xd2\x4d\xbe\x7d\x6d\xfc\xb0\x96\xfb\x3a\x6a\x2b\xce\x97\x17\x60\xda\x85\xa1\x73\xba\xd7\x05\x69\xdf\x5d\x68\xb9\x37\x19\xa6\x5b\xb1\x7c\x30\x1f\x76\x5e\xbc\x9e\xd3\x26\x51\x9b\x45\x3e\x67\x9a\xb4\x4b\x3e\xe6\xd6\xa2\x0f\xec\xba\x3b\x2e\x4a\x44\xc7\x63\x8d\x9c\xf0\x78\xe5\xd7\xd0\x7e\x35\xdc\xc4\x8f\xa7\x50\xee\xce\xee\x33\x3e\xd7\xe5\xee\x52\xe3\x3a\x6e\x87\xf8\x16\x31\xbb\xaa\x56\x81\x2d\xb5\x19\xff\xee\xb4\xc0\xbb\x65\x22\x5b\x43\xd7\x0b\x70\x2c\x3f\xa3\xbb\xed\xb4\xc3\xc7\xf8\x79\x85\xf5\xfa\x59\xcc\x4f\xf3\x71\xfb\xd1\xb5\x59\x75\x8c\x65\xa0\xf7\xba\xbc\xdf\xf6\x15\xf4\xca\x51\x93\x25\xba\x58\x2f\x3f\x53\xd3\xf9\x36\xe4\xbb\x0f\xef\x21\xff\x6e\x8b\x31\x06\x8a\xde\xb6\xb8\x68\x1e\xf0\xd4\xe2\xf7\x75\x69\x29\x0e\x49\x4e\x0e\xdf\xb4\xbf\x9e\x9c\x2b\xb8\xf6\x46\x4d\xa6\xcb\xa6\x93\x9c\xb8\x11\x5a\xb5\xe6\x51\xab\x39\xd2\x9f\x44\x10\x1b\xff\x37\x1b\xff\x04\x00\x00\xff\xff\x12\x20\x4b\xcc\x53\x04\x00\x00")

func test_certsClientTestuser2CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Crt,
		"test_certs/client.testuser2.crt",
	)
}

func test_certsClientTestuser2Crt() (*asset, error) {
	bytes, err := test_certsClientTestuser2CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.crt", size: 1107, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0x9f, 0x93, 0x8, 0x2a, 0xe3, 0x91, 0x2d, 0xe7, 0x11, 0xd6, 0xb7, 0x7c, 0x29, 0xd, 0xae, 0x67, 0xbe, 0xe, 0xac, 0x2, 0xc6, 0x21, 0xdf, 0x58, 0x29, 0x39, 0x8c, 0xf8, 0xb7, 0x43, 0xe2}}
	return a, nil
}

var _test_certsClientTestuser2Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xab\x4a\x16\x85\xe1\x9c\xa7\xb8\x39\x35\x85\x77\xc1\x04\x0d\x34\xc2\x43\x23\x7c\x86\x10\x08\x04\x08\x84\xf0\x4f\x3f\x75\xee\x49\x67\xa7\x3b\xf9\x6a\x25\xff\x7f\xfe\x9c\x0c\x6f\x86\xfb\x4f\x70\x07\xff\xf8\x81\x11\x83\x10\xfe\x63\xc1\xec\xdf\x0f\xe6\x18\x06\x9c\x90\x21\x03\x60\x29\x00\x41\x70\x50\xbf\xa9\x62\xec\x98\xa5\xaf\xb3\x70\x4a\xa8\x90\xc0\x24\xb6\x35\x8f\xac\xce\x1b\x1e\x5f\x16\xc7\xc7\x25\xd9\xf2\x38\xf7\x03\xb4\x59\x0d\xc2\x16\x91\xd1\xf1\xe3\x28\x9d\xbb\xe4\x55\x5a\xb4\x27\xba\x6d\x93\x47\xe5\xd4\xa2\x4a\xf4\x87\x34\xda\x46\xe0\x8e\x69\x6a\x3b\x83\x3c\xc1\x73\xba\x77\xc6\x76\x6b\x02\x90\x50\xf6\xa5\xc8\xaa\x94\x62\xf3\x1c\xf5\x97\x7a\x3d\x38\xfb\x45\xa1\x93\x6c\xf0\xaf\xe0\x47\xac\x22\x6d\x8d\xb7\x5c\x6d\x3b\xbe\x35\x7d\xc7\x67\x94\xeb\x22\xff\x8d\xd1\x57\xbc\xd3\x0c\xf7\x4c\xa4\x75\x2d\x91\x31\xfb\xd1\x80\xbd\x6f\xc4\x65\x56\xa2\xbb\x88\x47\xbb\xc3\x45\x9a\x06\x9e\x55\xd6\xd9\x70\x8d\x93\x30\xc4\x9b\xb8\x25\xc7\x6d\x32\x73\x58\x4f\xf9\xd3\x47\x64\x68\x0f\xd2\x35\xcc\x07\x41\xe9\x8b\x07\xed\xdd\xc6\xf8\x96\x73\xf5\x86\xae\x3f\xb8\x60\x32\x94\xd1\x4b\xf0\x2a\x53\x7f\x87\x8a\x35\x7d\x79\x55\xc1\x4b\xda\x86\x3a\x27\x3a\xee\x37\xec\xa8\x74\xf5\x99\xbc\x74\xf2\x34\x51\x71\x5c\x09\x6f\x54\x91\x62\xc3\x04\x98\x20\x2f\x96\xdb\xd4\x65\x34\x30\xb2\x34\x06\x1b\x69\x94\xb9\xb6\x79\xa4\x78\xfb\x04\xb5\xc3\xe4\x08\x19\x2a\x40\x40\x06\xa3\x21\x03\xa4\x02\x5d\xe5\xf0\xec\x3c\x76\x01\x46\x07\xc6\x47\x62\x13\xc3\xcc\xdd\xd0\x4d\x59\xb4\xca\xe8\x69\x8b\x57\x74\xd3\x9a\x51\x52\xff\xe6\x93\x01\xbe\x0c\x0c\x60\xaf\xfa\xfa\x74\xc8\xf1\x1c\x45\xaa\xbc\x3f\x83\xe4\x17\xb0\xec\x59\x4e\xe5\x03\x8b\x05\x9a\x65\x8d\x91\xe7\xdc\x95\x1f\xef\x3e\xd8\x28\xb8\x45\xaa\xb3\x55\xb1\xc2\x40\x7a\xc9\xa2\x0f\xcb\xfd\x76\xcd\x98\x77\xf8\x6b\x1d\xf7\x92\x71\xb4\xec\x4d\x72\xe9\x74\xc6\x09\xe6\xa3\xc0\x14\x8a\xcb\xa3\xf1\x66\x72\x8b\x31\x87\xfc\xa7\x36\xf1\xc6\xf2\x15\xed\x65\xba\xf0\x77\xa3\xfd\x3e\x70\xfa\x50\xb7\x9b\xe1\x43\x1b\x07\x99\xdb\xf4\x81\xba\x36\x70\x3e\x85\x18\x6f\xc0\x60\xfb\x04\xcb\xeb\x44\x1e\x5a\x13\xbf\x21\xba\xbd\xd4\x8b\x48\x77\x0f\x0e\xfd\x76\xb2\x62\xff\x74\x59\x73\xee\x33\x3a\x48\x93\x8f\xcb\xd0\xde\x4f\xf4\xbd\xf1\x9c\x7f\x61\x7f\x2a\xdc\x57\xbe\x18\x6f\x06\x2c\x76\xf2\xee\x6d\x55\xa1\xde\x53\x73\x21\xd9\x59\x72\xb5\x5b\xc2\x8b\x11\x91\xd8\x5d\xa1\xa9\xca\xdd\xda\xb9\x81\x58\x5f\x52\xd1\x90\x1b\xac\x35\x56\x6f\x0a\xab\x1f\xad\xe2\x78\x27\x05\x04\x7c\x82\x65\xd7\x22\xf7\xeb\x9f\x85\x6f\x32\xf0\x75\x70\x2c\xa3\xd2\xad\x17\x0b\xe3\xe5\x57\x29\x15\x3f\x73\xad\x6a\x6f\x37\xda\x6e\xdf\x4c\xb0\x59\x78\xed\x19\xba\xea\xf8\x4e\xa6\xb7\x2a\xaa\x1e\x36\xa6\xd5\xd9\xd0\x3e\x19\x6e\xb4\x0b\x9a\xf3\x7f\x8a\x5b\xbe\xe1\xc1\x16\x8b\xeb\xe8\x1d\x25\x5b\xd9\xc5\x73\x30\xf0\xb9\xb8\x3c\x08\x10\x6b\x76\x78\x19\x3e\x4f\x5e\x59\xb9\x21\x84\xe3\x6a\xf4\xc2\x70\x7c\xca\x90\x88\x8f\xe5\x52\x2e\x99\xa6\x88\x7d\xf0\xce\xbc\xf1\xed\xf4\x9a\x6c\x93\xf4\x3c\x2c\xf8\xdd\x1a\xf7\x4b\x7f\x85\x8a\xb7\xef\x64\x3f\x21\x49\x02\x7e\xf2\x57\xec\x3a\x05\xb6\x2f\x43\x7c\x1d\x21\x1e\x4e\x6e\xea\xab\x16\xab\x7c\x5c\x49\x64\xdc\x58\x8d\x9f\xf6\xa4\xe4\x8c\xea\xab\x2a\x8f\x6b\x56\xde\x51\x6f\x55\x15\xf8\xca\xae\xbc\x3a\x6b\x10\xb0\x7d\x56\xe0\xe4\x19\x33\xed\x5a\x96\x2f\x01\xee\x5c\xbc\xdc\xfb\xcd\x64\xca\x43\x8d\x78\xad\xea\x74\x69\x58\x41\xbc\x3c\xd2\xbe\x2b\xc4\xf8\x5c\x2c\xc2\xb0\xc8\x57\x16\x49\x84\xcc\xba\x5a\x93\xa5\x63\x42\xbc\x1d\x84\xc9\x13\x1b\x0d\x7a\x9e\x2f\x2e\x47\x95\x8f\xb5\xed\xcd\x54\x02\x12\xaf\xbd\xaa\x38\x71\xf6\xa5\xcc\xb5\x61\xa7\xa0\xff\x97\xec\xf4\xa7\x22\x42\xcb\x03\x2f\x25\xa8\x82\x62\xd2\xae\x01\xfb\xf9\xd2\x05\x2c\xd8\xa7\x1c\x45\xf8\x02\x75\xbe\xd2\xc1\x3b\x7b\x83\x2a\xb3\x84\xbf\xb7\x69\xb6\xeb\x63\xf2\xd8\x9e\x5f\x2a\xb2\xe6\xf2\x26\x80\x6b\x0e\x98\xd8\xf4\xda\xd9\xa6\x9d\xfd\x6d\x75\x18\x77\x0c\xcf\xa6\x78\xed\x1c\xf1\x7c\x7b\x83\x72\x66\x50\x38\xbe\x77\x03\xea\x7a\xc8\xdc\x85\x66\xda\x4a\x75\xdd\x44\x8b\xe0\x1d\x7d\xe4\x45\xe7\x01\xe2\xe9\xf7\x62\x47\xaf\x5e\x88\x40\xa0\x70\x1e\xa3\xee\x24\x97\xb9\x8d\xe0\x57\x83\xf5\xd0\x3f\xb8\x3a\x14\x57\x77\x77\xfe\x92\x8d\x58\x15\xb9\xe4\xe5\x79\xd9\x4c\xa9\x05\xf3\x20\xc9\x3e\xc9\xbd\x0f\xb8\xc2\xba\xd3\x1a\xa6\x90\x2e\x07\x2b\x57\xfb\xa1\xe0\x5a\xe3\x74\x1b\x32\x2f\xe1\x3b\xf1\x66\x46\x25\xdc\x5b\xfc\xd1\xdf\x87\xad\xb5\xbf\x5a\xc4\x53\x42\x81\xea\x80\x8a\xbc\xb3\xde\xa3\x7b\x49\x22\xaf\x11\x36\x82\xc0\xa3\xdc\x00\xbb\xc2\x1c\xf0\x73\xbd\x6e\xf9\xe7\x9b\x93\x8d\x2f\x92\x76\x2b\x17\xc5\x68\x6f\x17\xc1\xac\xb0\x8f\x9c\x57\xfb\x82\x57\xe2\x9b\x7e\x4b\xab\x31\x93\x21\x0a\xaf\x64\x21\x2e\xc3\xc7\xb1\xf1\x38\xc0\x62\xbc\xa3\x25\xd0\xfd\x21\x83\xd0\xb7\xa4\x50\x33\xa4\x8d\x4d\x1d\x17\x2c\xe1\xba\x7c\xde\x46\xec\x9d\x81\x1f\xd2\x55\x8b\xca\xb9\x87\x80\x9b\x32\x61\xe9\x5b\x3a\xfe\x4a\xdd\x72\x58\x2e\xf6\x36\xb9\x9e\x9b\xf8\x42\x6a\xe4\x3e\x73\x1e\x15\xd1\x28\x35\x51\x51\xe6\xd9\x56\xc2\xa7\xbb\x8f\x03\x4d\x6c\x81\x02\xae\x65\x69\x23\xf6\x33\xa1\x17\xda\x91\x18\x69\x1f\x69\x93\x4f\x9e\xf8\x25\x18\xd5\xec\xe5\xfd\xc8\x7c\x13\x36\xad\xed\x84\xa9\x97\xee\x93\x62\x33\x21\xfb\xea\xe4\xd2\x8d\x1d\xa6\x21\x50\xe2\xc6\xdd\x4d\xfd\xb0\xfb\x02\xd4\x27\xb9\x34\x08\x64\xff\xc5\xfe\xcd\x0a\x74\xd5\xff\x9f\x9b\xff\x05\x00\x00\xff\xff\xc2\xe5\x76\x0d\x8f\x06\x00\x00")

func test_certsClientTestuser2KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Key,
		"test_certs/client.testuser2.key",
	)
}

func test_certsClientTestuser2Key() (*asset, error) {
	bytes, err := test_certsClientTestuser2KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3e, 0xb3, 0xbe, 0x9a, 0xcd, 0x6c, 0x3a, 0x71, 0x8d, 0x22, 0xd0, 0xbf, 0xee, 0xa2, 0x12, 0xcf, 0xb2, 0x73, 0x4b, 0x52, 0xee, 0x4f, 0xe9, 0xfc, 0xd8, 0xe2, 0xf3, 0x87, 0x73, 0x2d, 0x7, 0x8}}
	return a, nil
}

var _test_certsNodeCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x39\xd3\xb2\x48\x14\x85\x73\x7e\xc5\xe4\xd6\x94\x08\xca\x12\xde\x86\x06\x1a\x05\xd9\x11\x32\x16\xd9\x14\x45\x41\x1a\xfc\xf5\x53\xef\x1b\x7c\xc1\xcc\x9c\xf0\xdc\xaa\x93\xdc\xa7\x9e\xbf\x7f\x82\xb0\x4e\xec\xbf\x14\xec\x05\x44\x23\x0a\x04\xf8\xb7\x65\x2c\x42\x54\x37\x50\x14\x68\xfb\x1a\x28\x41\x50\x13\x0f\x2c\x73\x73\x76\x96\x9b\x19\x0b\x6e\x50\x3d\xd6\x60\xd4\xef\xaa\xf3\xa4\xaa\x9b\x98\xc7\x67\x4a\x9a\xb9\xb0\xc1\xc5\x27\xe4\x02\x65\x8e\x5f\xec\x5b\x08\x74\xd8\x85\x58\x69\x2c\xd3\xe5\xe4\x2e\xe3\xcd\x39\x89\xed\xa7\xe5\x85\x14\xd3\x44\x8d\x5c\x57\xc5\x74\x51\x73\xce\x7e\x17\xbd\xdc\x24\x5c\x5d\xbb\x2c\xa6\x46\x53\xd8\x8c\xd5\x01\xb5\xbf\x78\x67\x05\x98\xb5\x3b\xc2\xc5\x4d\x61\x5b\x5d\x48\xed\x2f\xa1\x7f\xba\x0e\x3a\xcb\x23\x14\xc3\xef\xd8\x11\xd3\xfb\x9f\x31\x26\xe1\xea\x45\x0d\xe0\x84\x6a\x3b\x42\x60\x05\x48\x3f\xcc\xa9\x1e\xd2\xba\xc6\xad\x05\xac\xae\xf8\x2f\xdd\x27\x39\xaf\xba\x18\x81\x1b\x02\xec\x09\x52\x29\xfc\xdc\x8f\xf0\x24\x88\x01\x57\xcd\x23\x12\x05\x9b\x78\xb3\x7d\x27\x9d\xa7\xbf\xc9\xf0\xfd\x3a\xe5\x86\xa4\x69\x13\x5e\x8f\xbb\xc5\x7c\xfa\x0d\x5a\x4d\xb0\x6f\x0f\x99\x0d\x23\x76\x9f\xb2\x8e\x11\xd7\xe3\x00\x5e\x11\x13\xe6\xaa\x3d\x8d\xe6\x1b\x76\x57\x09\xfb\x5d\x3e\x19\xad\xc0\xa9\xb9\x18\x5e\xbb\x60\x6b\x5d\xd6\xab\x68\xeb\xae\xb3\xe9\x11\x05\x51\x15\x25\x28\x77\xa7\x5e\x9e\xc3\xc9\xe6\x85\xf0\x0c\x13\xd9\xb7\x8c\x65\x86\xb3\x82\x8d\x6a\x10\x22\x32\x7f\x36\x93\xb3\x54\x72\x9a\xbc\xbf\x1a\x12\xfb\x4f\x56\xe6\x43\xbd\x96\xfc\x83\x7e\x02\xdd\x12\x16\xf6\x7a\x49\x5d\xfe\x2d\x35\x6b\x10\xdf\x50\x9a\x48\x51\xcb\x74\x2b\x17\xcb\xa7\x86\x38\x5c\x8a\xaa\x47\x60\xc9\xf4\x2c\xac\x2f\x77\x71\x4e\xd2\xba\x68\xfc\xdc\xd8\x3b\x32\x3b\x67\x36\x2a\xc8\xa3\xcc\x6e\x07\x6e\x58\x3b\x4e\x58\x83\xaf\x93\xb5\xf2\x39\x3b\x30\x3e\xd7\x95\x08\x76\x59\x53\x77\x7b\xe3\x56\xbd\xde\x2c\xc9\xa4\xa0\xea\xfb\xcb\x23\xaa\xca\xd3\x90\xd3\xf3\x04\x5a\xba\xb5\x3e\x92\x90\x8c\x9b\x62\x4b\xb8\xcc\xdc\x64\x83\x2f\x54\xa4\x34\xeb\x0f\xd3\x82\x70\x6d\x33\x51\xbc\xd2\xa8\x3c\xa7\x75\x4b\x84\x49\xdc\xbd\x93\x1d\xd4\x16\x02\xd0\xbb\x4c\x45\xbd\x05\xfb\x1f\x4e\x4a\x95\x62\xb4\xa5\x2e\x06\x4a\xb4\xa7\x0a\xe5\xcf\xe7\x18\xc3\x0f\xb1\xd6\x41\x88\xea\xfa\x8d\x6a\xac\x21\xb7\x50\xc1\x4d\xc8\x91\x26\x08\xb9\xa1\x01\x94\x50\xdb\x4d\xd4\xc8\x63\x3d\xa4\xec\xe9\x89\x10\x33\xd7\xe5\x2e\x89\x97\x67\xce\xdb\x2c\x53\xd7\xc5\xeb\xd4\x2f\x73\xc2\x69\x63\x43\xbd\x2d\x00\xa0\x66\x81\xff\x0b\xfa\x37\x17\x0a\x0d\x81\xf9\x01\x03\x5c\x58\x37\xd9\xf6\x96\x9f\xbb\x0c\x1f\xca\xa9\x21\xf0\x49\xd2\x73\x38\x7e\x96\x5d\x31\x43\xba\x2c\x61\x9f\x7b\xdb\xef\x6a\xd8\x4a\x26\x1f\xb5\xd3\x71\xf7\x72\xae\x6c\xf3\x40\x66\xc6\x18\xa5\xe2\xeb\xc5\xc7\x9c\xec\x48\x93\x39\x36\xf6\x86\x3d\x4f\xe7\x68\x6a\x95\xbc\x12\x8d\x94\xaf\x34\xd3\xe0\x83\xe1\xde\xa5\x6f\xf6\xb9\xfd\x56\xa3\xb7\xbd\xc7\x19\x97\x45\xfe\x3e\x74\x3f\xd1\x8b\x91\x0f\x5e\x38\x7c\xd9\xd3\xcb\xd8\x7c\xe8\xd1\xb6\x6a\xbe\xf8\x86\x08\x49\xcf\xb6\xba\x29\x1c\xf8\xf1\x6c\xe0\xb2\x98\xeb\xb1\x19\xce\xfe\x9e\x55\x1a\x3c\x0a\x7c\x18\x2f\x10\x8b\x49\x8b\xef\x7b\x66\xc5\x52\x12\xbf\xc2\xf1\xee\x8a\xbc\xb6\x9f\x6e\x2f\x7a\x3b\xb7\xe5\xb0\xd7\x95\x65\xff\x42\x07\x63\x44\xa8\x4c\x55\x4e\xf2\xe7\xcf\xf1\x76\x3d\xae\xb8\x99\xd3\xb1\xbb\x5d\xba\x97\x70\x37\x05\x3e\x62\x7a\xd9\x6c\x25\xb9\x97\xb5\x44\x92\xf5\xde\xb4\x35\x56\x4c\x8b\xc3\x55\x5c\x61\x9a\xf9\xbc\xbf\xc8\x47\x27\x1a\xa6\x55\x51\x90\xa0\x89\x9b\xd6\x6f\xb7\x8d\x94\x89\xf2\xf9\x19\xbf\xbd\xf5\x7d\x69\x98\xd1\x37\x5e\xa1\x83\x23\xb6\x55\x61\x77\x1d\x9d\xea\x42\x11\x9f\x4d\x06\x5f\xf0\x1d\xf3\xeb\x1c\x6c\xab\xff\xf5\xd0\x3f\x01\x00\x00\xff\xff\xe4\xb9\xb8\xac\xa4\x04\x00\x00")

func test_certsNodeCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeCrt,
		"test_certs/node.crt",
	)
}

func test_certsNodeCrt() (*asset, error) {
	bytes, err := test_certsNodeCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.crt", size: 1188, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3c, 0x2b, 0xe, 0x1e, 0xf, 0xc8, 0x11, 0x9, 0x8b, 0xe8, 0x3a, 0xdf, 0xf6, 0x7e, 0xea, 0xc0, 0x56, 0x2e, 0xca, 0x5f, 0xac, 0xc2, 0x8b, 0x97, 0xb8, 0x1f, 0xbb, 0xf1, 0x6c, 0x6d, 0x11, 0x90}}
	return a, nil
}

var _test_certsNodeKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xa3\xd0\x01\x85\xe1\x9e\xa7\xd8\x9e\xf1\x90\x44\x2a\xb6\xb8\xe4\x0b\x88\x1c\xd5\x89\x28\xb2\xc8\x88\xa7\xf7\x78\x6b\x9f\xf6\x34\x7f\xf7\xfd\xe7\x7f\x13\x64\x15\x5a\x7f\x3c\x1f\xfc\x71\x3c\x18\x81\x40\xfe\x63\xc8\xe9\xbf\x07\x79\x42\x28\x7f\x01\x14\x00\x30\x44\xe0\xca\x80\x24\x7c\x25\xc4\xfa\xe3\x60\x48\x88\x7b\xf3\xcf\xc8\xb9\x9b\xaa\x1a\x35\x4e\x23\xad\xd9\x72\xff\x2d\x4f\x6e\xde\xb8\xd2\x4b\xc7\x0a\x45\x29\x6c\x44\x2d\xa4\x8b\x98\x4c\xc3\x95\x13\xa5\xd1\x3e\x6f\xe1\x91\x13\x90\x3a\x04\x79\x22\x59\xef\xb1\x6f\x35\x89\x12\xda\x84\x63\xb7\xc2\x8d\xfb\xed\x75\x12\xf6\xad\x73\x60\x9f\x28\x06\xb4\xc2\xa7\x0f\x24\x23\xcc\xa0\x40\x7b\xa9\x36\x7d\x1b\xb6\x62\x64\x9e\x1f\x81\x62\xca\xde\x37\xd9\x63\x09\xb8\x04\x8b\x63\x83\xbb\xdc\x92\x5e\x86\x31\x66\xd2\xe7\x58\xd0\x9c\xd9\x5d\xad\xbd\x16\x5a\x4f\x86\x16\xc2\x60\x30\xef\x88\x2f\x88\x63\x47\x49\x27\x6e\xeb\x0f\xff\xe1\x4b\xfc\xe0\x26\x34\x7e\x3b\xb9\xb4\xaf\x73\xf7\x0c\x7e\xd8\x73\xf5\x0a\xf6\x11\x14\xbe\x79\xdf\x9b\x92\x88\x3a\x15\x7f\xed\x62\xce\x91\x89\xdf\xd7\x8e\xbb\xc9\xe9\x08\x86\x3d\xdc\x26\xca\x75\xad\x78\x4a\x21\x2a\xd0\x1a\x33\xf3\xa2\x7a\xc8\x14\xfd\xed\x69\x22\xa1\x7c\x26\xe6\xa4\xc5\x15\xe2\xea\x36\x0f\x7b\x30\x9d\xd1\xf9\x59\xc8\xd0\x54\xc3\x1c\xee\xe3\x4f\xf3\x53\x73\xaa\xed\x71\x1a\x76\x94\x5a\x95\x24\x18\x52\xd8\xd8\x4b\xc9\xbf\x49\xcb\x85\x12\x70\x81\x00\x26\x28\x00\x57\x1c\x73\x5c\x0e\x86\x39\xf6\xda\xa5\x29\x10\xc1\x28\x0f\xbb\x24\xf2\x9c\x69\xd4\x47\x1b\xb1\x0b\x9b\xfc\x30\x42\xb2\x00\x5a\x62\x9e\x34\xfe\x7a\x53\xfe\x48\x33\x90\xdf\xce\x67\x20\x68\x8a\x92\x6b\xdb\x37\x72\xdc\x52\xfd\xd2\xd9\xb2\x3d\x47\x68\xfb\x54\x74\x01\x07\x9f\x48\xd4\x84\xa7\xc9\x2f\xe7\xd3\x57\x79\xd3\xc7\x3b\x66\x50\xfb\x6b\x74\xe8\x0d\x75\xe8\x55\xdf\x27\x9d\x26\x0b\x54\x15\xac\xe2\xc4\xb0\xb1\x41\xbb\x9a\x4d\x6d\x93\x40\x8e\xfd\x2e\xa9\x8e\x89\x3d\x9b\xb7\xd7\x5c\x3e\x1c\xad\xa2\x72\xf2\x8c\x26\xfb\xa5\xe4\xa9\x29\x01\x1e\x13\xe7\x2f\x98\xda\x63\x9f\xde\xf0\x57\x49\x34\x65\x45\x06\x80\xa6\x51\x87\xbe\x90\x69\x08\x7b\xad\x59\x3c\x6a\xf2\xb5\x3d\xd5\xd1\x55\xdd\xfe\x33\xfc\x68\x66\xca\xe4\x29\x4a\x28\x27\xa2\xaa\xf6\x77\xa0\xc3\xfb\x21\x79\x58\x01\x47\xba\x90\xd4\xd4\x34\xf6\xf4\x99\x8a\x31\xe9\x94\xa3\x88\xbc\x33\xcf\xa7\xcf\x62\xdb\x7b\x58\xc1\x1d\xf4\x61\xb8\xde\x7e\x6b\xc1\x18\x27\xc2\x58\xf1\xcf\x38\x6a\x29\x33\x60\xa6\xcb\x1b\x52\xc7\xd2\xe6\xb7\xba\xcf\xb8\xc0\xfe\x1e\xe9\x97\xdd\x9c\xa0\x44\x12\x5e\x16\xae\xd2\xec\xc1\xa4\x0a\xc0\x3a\xa4\xc4\x52\x98\xb2\x57\xed\x7d\xa0\xb4\xc8\x8c\x27\x93\x23\xcf\x6d\x28\x2f\xab\x1d\xb3\xd4\x30\x72\xfe\xf5\x55\x92\x8c\x12\xa8\xcd\x7f\x70\xda\x93\x47\x14\x5d\xdd\x74\xc6\xa7\x0d\xe5\xb6\x0f\xdf\x25\xac\x6a\x7e\xb6\xba\x99\x44\x4f\x5d\x1d\xa0\xeb\x8a\x23\x21\xcb\x84\x66\x46\x18\xef\x25\xa9\x85\xca\x4b\x04\xcf\xda\x59\x12\xba\x6e\x2f\x20\x6c\x88\x8a\x13\x3f\x2b\x64\xe2\x77\x10\xce\x43\xc0\xe6\x24\x0f\x6c\xc7\x3b\x9b\x17\xef\x5f\xfa\x9d\x71\x9f\x9e\xdc\xa3\x13\x3b\xd5\xbe\x3b\x6b\x4c\x0f\x2e\xc8\x19\x5e\xcc\x05\xff\x8a\x1d\x1e\x45\x1e\xef\xd6\x0f\x2b\xc5\xe7\xeb\xcf\x23\x1c\x17\x4a\x02\x81\xac\x26\x42\x61\xba\xfe\x53\x07\xac\x90\x3d\xdb\x43\xa2\xc0\x8b\xc3\xbb\x7a\xb4\x5e\x3b\x41\x13\x83\xb2\x15\x00\x7f\x91\xd6\x76\x89\x6f\x44\x7d\x3f\x1e\x5d\x6d\xf3\xa2\x76\x2f\xdf\xce\x76\xa9\x25\xb1\x1d\x37\x77\xfa\xb2\x9b\xb0\xee\x2c\xca\xa0\x9c\xa3\x8a\xa6\x47\x3a\x9d\x6a\xbb\x2a\x8e\x7c\xb8\x21\x0b\x9f\x2e\x74\x57\x85\x2f\x1a\x24\xf5\x37\xce\xe3\xb4\x22\x61\x1f\xe6\xc4\xed\x1e\x7e\xd3\xbf\x2c\x52\x16\x71\x59\x0e\x63\xd5\x7f\x16\xd1\x93\x78\xf8\x4e\xfe\x25\xeb\xbc\x76\xbc\xf5\x21\x3b\xfa\xfe\x8a\x55\x69\x65\x93\x01\x31\x75\x34\xef\xac\xba\x64\x9d\xd9\x78\x76\xee\xac\xfc\x1a\x22\xaa\x6a\x9b\xc6\x98\x0d\x93\x5a\x9d\xd3\xe6\x28\xcc\xf5\x01\xba\xb9\x04\xcd\x8d\xfe\xbc\xa1\xcd\xab\xae\xfe\xa9\x3a\xda\x7f\x0d\x36\x62\xad\xa7\x49\xff\x02\xa5\x71\xd3\xf4\x75\x2c\x92\x98\xb9\x37\xe0\x8e\x25\xb7\x35\x68\x0c\x5b\x38\x7b\x32\x87\x67\x8f\x8a\x6d\x3a\x75\x3d\x6d\x88\x0a\x4d\x82\x46\x8b\x4a\x7b\x46\xe2\x32\xd2\x8c\xb0\x5d\x8d\x71\x00\x5e\xb6\x58\x76\x4b\x4b\xa6\x78\x08\xcd\x94\xc5\x5e\x60\x52\x81\x4f\x37\xc0\xec\xf5\x6e\x18\x35\xd0\xc8\xab\xfe\x85\x2f\x26\xb4\x8d\xf3\x21\x45\x42\xc5\x8c\x77\x11\xa6\x14\xc2\x58\xc0\x94\x7b\x79\x09\xf3\xc0\xac\xcf\xe5\x87\x9f\x8d\x8c\xd3\x89\x64\x72\xe3\xa7\xa3\x25\x9c\x6d\x99\xfa\x88\x3f\xbb\x96\x82\x5a\x58\xaa\x60\x7c\xf5\xb7\xfe\x7b\xef\xaf\x64\xf0\x47\x2d\x70\x11\x11\xe5\xdb\x58\x79\x0e\x06\xda\x30\x32\x29\x7d\xe6\x9c\xb7\x83\x04\xaf\xdb\x6c\x61\xf4\xbd\x2f\x78\x8b\xed\x1f\x2a\x5a\x5e\x14\xb1\x9a\xc3\xb5\xba\xd4\xf2\x62\x68\x70\xe4\xaf\x34\x4d\xf3\x74\x44\x66\x65\x1c\x06\x74\x15\xeb\x14\x64\x72\xfe\x01\xf0\x86\xf1\x92\x1b\x9a\x20\x68\xe4\x9d\x13\xf7\x14\x1d\xcd\xdd\x85\x24\x2e\x86\x35\xaa\xf7\x02\x28\xb2\xef\x9a\x4a\x68\xf8\xa6\x72\xd0\xc6\x0b\x32\xfb\xe4\x51\x57\x1c\x9f\xa6\x3e\x80\xcc\x1e\xc7\x80\x91\x1b\x83\x30\xb2\x94\xb2\xb8\x44\x18\x84\xb8\xc8\x3e\x7e\x45\x76\x35\x75\xac\xd3\x32\x36\x63\x29\x7c\x23\xf3\xda\x9e\xd7\x21\xe4\xa5\x8f\xd8\x2c\x7a\x7d\x03\xda\xee\x92\x8a\xed\x9e\x19\xc6\x66\xf5\xed\xb0\xe8\xb5\x1b\xb1\x47\xf7\x31\x6b\x9d\x5f\x61\xfa\xa9\xa5\x2b\xd2\x8b\x50\xed\xf6\x00\xfc\x52\xaa\xff\xfe\x45\xfe\xb1\x22\x5b\xd2\xff\xe7\xe6\xbf\x01\x00\x00\xff\xff\xb3\x98\xbb\x7a\x8f\x06\x00\x00")

func test_certsNodeKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeKey,
		"test_certs/node.key",
	)
}

func test_certsNodeKey() (*asset, error) {
	bytes, err := test_certsNodeKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0x19, 0xb3, 0x1a, 0x6a, 0x5b, 0xd3, 0xab, 0xfd, 0x79, 0x7e, 0x50, 0xc1, 0xf5, 0xe8, 0xd4, 0x5f, 0xe0, 0xbb, 0xb7, 0x88, 0x7c, 0x6c, 0x86, 0x3c, 0xec, 0x62, 0x11, 0x7f, 0x1d, 0x9d, 0xfd}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"test_certs/ca-client-tenant.crt": test_certsCaClientTenantCrt,

	"test_certs/ca-client-tenant.key": test_certsCaClientTenantKey,

	"test_certs/ca.crt": test_certsCaCrt,

	"test_certs/ca.key": test_certsCaKey,

	"test_certs/client-tenant.10.crt": test_certsClientTenant10Crt,

	"test_certs/client-tenant.10.key": test_certsClientTenant10Key,

	"test_certs/client-tenant.11.crt": test_certsClientTenant11Crt,

	"test_certs/client-tenant.11.key": test_certsClientTenant11Key,

	"test_certs/client-tenant.20.crt": test_certsClientTenant20Crt,

	"test_certs/client-tenant.20.key": test_certsClientTenant20Key,

	"test_certs/client.root.crt": test_certsClientRootCrt,

	"test_certs/client.root.key": test_certsClientRootKey,

	"test_certs/client.testuser.crt": test_certsClientTestuserCrt,

	"test_certs/client.testuser.key": test_certsClientTestuserKey,

	"test_certs/client.testuser2.crt": test_certsClientTestuser2Crt,

	"test_certs/client.testuser2.key": test_certsClientTestuser2Key,

	"test_certs/node.crt": test_certsNodeCrt,

	"test_certs/node.key": test_certsNodeKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"test_certs": {nil, map[string]*bintree{
		"ca-client-tenant.crt": {test_certsCaClientTenantCrt, map[string]*bintree{}},
		"ca-client-tenant.key": {test_certsCaClientTenantKey, map[string]*bintree{}},
		"ca.crt":               {test_certsCaCrt, map[string]*bintree{}},
		"ca.key":               {test_certsCaKey, map[string]*bintree{}},
		"client-tenant.10.crt": {test_certsClientTenant10Crt, map[string]*bintree{}},
		"client-tenant.10.key": {test_certsClientTenant10Key, map[string]*bintree{}},
		"client-tenant.11.crt": {test_certsClientTenant11Crt, map[string]*bintree{}},
		"client-tenant.11.key": {test_certsClientTenant11Key, map[string]*bintree{}},
		"client-tenant.20.crt": {test_certsClientTenant20Crt, map[string]*bintree{}},
		"client-tenant.20.key": {test_certsClientTenant20Key, map[string]*bintree{}},
		"client.root.crt":      {test_certsClientRootCrt, map[string]*bintree{}},
		"client.root.key":      {test_certsClientRootKey, map[string]*bintree{}},
		"client.testuser.crt":  {test_certsClientTestuserCrt, map[string]*bintree{}},
		"client.testuser.key":  {test_certsClientTestuserKey, map[string]*bintree{}},
		"client.testuser2.crt": {test_certsClientTestuser2Crt, map[string]*bintree{}},
		"client.testuser2.key": {test_certsClientTestuser2Key, map[string]*bintree{}},
		"node.crt":             {test_certsNodeCrt, map[string]*bintree{}},
		"node.key":             {test_certsNodeKey, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
