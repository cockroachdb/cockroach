// Code generated by go-bindata. DO NOT EDIT.
// sources:
// test_certs/ca.crt (1.111kB)
// test_certs/ca.key (1.675kB)
// test_certs/client.root.crt (1.103kB)
// test_certs/client.root.key (1.675kB)
// test_certs/client.testuser.crt (1.107kB)
// test_certs/client.testuser.key (1.679kB)
// test_certs/client.testuser2.crt (1.107kB)
// test_certs/client.testuser2.key (1.679kB)
// test_certs/node.crt (1.188kB)
// test_certs/node.key (1.679kB)
// test_certs/mt/ca-client-tenant.crt (1.111kB)
// test_certs/mt/ca-client-tenant.key (1.679kB)
// test_certs/mt/ca-server-tenant.crt (1.111kB)
// test_certs/mt/ca-server-tenant.key (1.675kB)
// test_certs/mt/client-tenant.123456789.crt (1.107kB)
// test_certs/mt/client-tenant.123456789.key (1.679kB)
// test_certs/mt/server-tenant.crt (1.155kB)
// test_certs/mt/server-tenant.key (1.675kB)

package securitytest

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _test_certsCaCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xb9\xb2\xb3\xb8\x16\x85\x73\x9e\xe2\xe6\xd4\x2d\x33\x79\x20\xe8\x40\x02\x19\x0b\x2c\x40\x20\x1b\x43\xc6\x64\x01\x36\xc6\x78\x40\xc6\x4f\xdf\x75\x4e\xf0\x07\xdd\xbd\xc3\x2f\x58\xb5\xab\xd6\xaa\xef\xff\x3f\x07\x91\x83\xfd\xff\x59\x28\x62\x78\x8b\x2d\xc0\xd0\x2f\x95\x08\xc6\x36\xfc\x5a\x16\xa8\x65\x0e\x04\x86\x80\xe3\x08\x04\xeb\x98\xe3\xea\x7b\x88\x36\x71\x18\x35\xc5\x6a\x38\x29\x89\xae\x08\x9b\xa6\xae\x37\x64\xb8\x99\x4a\x1f\x50\xb4\x87\x14\x08\xc9\xfb\xa2\x98\x40\xe0\x00\xf5\x80\xac\x86\xb8\x54\x33\xbb\x5c\x77\xa7\x34\xf1\x07\x12\x1d\x04\x12\xa9\x7d\xa4\xd4\x46\xe2\x63\x17\x9a\xff\x28\x7b\xb3\x49\x35\xce\xa9\x82\xc4\xae\x29\x7d\x89\x74\x40\xf8\x5f\x3c\x13\x96\x8a\xc0\x26\x9f\xa4\x29\x7d\xf2\xfd\x61\xe4\xf3\x87\x75\xe0\x41\x22\x2c\x10\xf8\x0d\xf3\x90\xb8\xfe\x09\x93\x52\x8d\x7f\xb6\x0c\x30\xc8\xfd\x23\x04\x84\xd9\xc8\x9f\x52\xed\x35\x17\xda\xb6\xcb\x2d\x68\x53\x66\x59\x20\xc6\xff\x7c\x1f\x42\x0a\x6c\xce\x51\x28\x01\xdb\xb2\x00\x1d\x2c\xce\x11\x04\xa4\xe5\x8a\x18\x33\x55\x29\xdf\xc1\xec\xd1\x7d\x0e\xbf\xea\x26\x5e\x5e\xb7\xea\x64\xb5\x1f\x57\x73\x9f\xeb\x3d\x71\x2f\xb9\xc9\x9e\x70\x1b\xb2\x11\xd6\x57\xe9\xbc\x9e\x4c\x4e\x74\x6d\x09\x4b\xb3\x2a\x66\xb9\x1c\x2e\x29\x7f\x9c\x7d\x0f\x78\x21\xec\x83\x50\x14\xd3\x2a\x56\x92\xa3\xa2\x18\x9f\x1d\xcd\x76\x21\x0e\x72\x5f\x31\x4e\xdf\x26\x6b\x37\x66\x9b\x4b\xba\x7a\x7a\x6b\xc7\x68\x91\x9d\x69\xd5\xad\xfa\xb6\xda\x9a\x6f\x23\xde\x1b\xa4\x3a\xc1\x4a\x76\x9d\x4d\x95\xd5\x5a\x5f\xa5\xf6\x12\x36\xf7\xe1\x91\x7c\x9e\x27\xd3\xa5\xaa\x4e\x6f\xb7\xb3\x52\xf5\xae\x74\x2d\xda\xe2\x35\xe6\x4c\x09\x7c\x2d\x9c\xef\xf4\xf0\x59\xc4\x9b\xee\xc2\x8b\xc8\x6e\xc3\x64\xa3\xa4\x08\x31\x52\x1a\xa1\xfc\x98\x91\xe3\xa5\xdb\x49\x7d\x05\x97\xc3\x5c\x65\x0c\xbb\x8f\x7b\xf3\x96\xf4\x78\xbf\x2f\xef\x23\xb8\xfb\x5a\x05\xd7\x85\x12\x3d\x77\x76\xb6\x1a\xab\x37\x10\x7a\x45\x8e\x64\x08\xa9\xf7\x1a\x1b\x18\x14\x66\x14\xb4\xfd\xfa\xb2\xc0\xd5\x83\x31\x9c\x73\xe5\x1d\xef\x06\x55\x72\x64\x1c\x5d\x5d\xc7\xf1\xb6\xab\xa2\xba\x9f\x02\xf8\x78\x5d\x66\x6d\x08\x74\x81\x4e\x4d\x58\xaa\xbe\x53\x5a\x40\x20\x00\x72\xd2\x13\x8b\x0a\x9b\xa7\xf6\x31\x52\x42\x40\x77\x0b\x08\xa8\x2d\x01\xbe\xbf\x10\x88\x7f\x86\x54\x21\x81\xe0\x42\x50\x4c\x40\x0a\xc1\x79\x63\x01\x8a\xfe\x6b\x7d\xf6\x6f\x63\xf6\x60\xd5\x54\x30\xc9\x05\xe9\x42\x56\xc7\x57\xb6\x84\x28\xf9\x30\xb5\x5c\x95\xfd\x52\x53\xf5\x7d\xb2\xf4\xcb\xf6\x90\xf1\x63\x52\xe6\x61\xdd\x6f\x57\x24\x57\x0f\x3a\x9d\x96\x11\x40\xaf\xd3\x3a\x6a\xd6\x5a\xc4\xaa\x58\xfa\x9e\x56\x4f\xcb\x16\xaa\x61\x0d\xe3\xf6\xa1\x4d\xc7\x36\x30\xe5\x0e\x3a\x75\x97\x5f\x41\x14\x0e\xcf\xc1\xda\x75\x5e\xa0\xfa\x72\x14\x18\x43\x5b\x78\xc0\xaa\x23\x54\x06\xcf\xf9\x5a\xc5\x9d\xe3\x4a\xbd\xba\xd3\x56\x95\x99\x70\x52\xbf\xaf\xf1\x38\xea\x76\x7b\x1b\xf7\x38\x78\x29\xe0\x12\x9e\x9d\xea\xee\x47\x16\xec\xe9\x58\xa9\xeb\x77\x9f\x74\x5c\x6b\xd5\x60\x3e\x3d\x96\x22\x1d\x30\xb8\x24\xb5\x64\x04\x1d\x2b\x0e\xee\x7e\x47\x7b\x97\x6d\xb5\x97\x2c\x64\xbf\x1e\xfc\x3a\x8b\xd3\xf5\xdd\xe8\xf7\x26\x9b\xee\xeb\x7a\xc7\x8c\xe2\x16\xd5\xdf\x29\x5c\xd4\x27\x33\xc2\x85\x32\x25\xce\x61\x2a\xef\xb3\x64\xde\x04\xaf\x0b\xf7\x72\x0e\xb4\xc5\x1b\xe5\x4f\x53\x2e\x97\xe7\x6b\xbf\x7e\x24\x7e\xa1\x59\xfa\xec\x08\x8f\xf5\xb3\xb9\xa9\x6b\xc0\x60\x99\x6d\x56\xcb\x2a\x4a\x8d\xe7\xe6\xec\xe0\xf6\x69\x70\x5b\xd2\xdb\x6f\x66\x58\xcb\x64\x78\x1d\xe5\xa3\xff\xfc\x4b\xfa\xd5\x04\xf2\xed\x7f\xab\xe3\xef\x00\x00\x00\xff\xff\xd8\x12\x8f\x74\x57\x04\x00\x00")

func test_certsCaCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaCrt,
		"test_certs/ca.crt",
	)
}

func test_certsCaCrt() (*asset, error) {
	bytes, err := test_certsCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.crt", size: 1111, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf2, 0xbf, 0x7e, 0x1d, 0x7b, 0x4b, 0x69, 0xed, 0x31, 0xb8, 0xda, 0x9a, 0x13, 0x9e, 0x58, 0xd3, 0x7f, 0x3a, 0xf1, 0xb3, 0xa2, 0x2f, 0x8d, 0x3d, 0xc0, 0xa2, 0x95, 0x27, 0x1a, 0x99, 0xc7, 0xa2}}
	return a, nil
}

var _test_certsCaKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\x37\x12\xa3\x50\x02\x05\x73\x4e\x31\xb9\x6a\x0b\x23\x6c\xf8\x81\x2f\x40\x78\x84\xcf\x00\xe1\x41\x78\x7b\xfa\xad\x99\x4d\xf7\xa5\x2f\xe9\xea\xa4\xff\xf3\x77\x3c\x94\x14\xe3\x8f\xf3\x01\x7f\x2c\x47\xf1\x81\x0b\xff\xa8\x30\xfa\xf7\x20\xba\xa2\xc0\xe1\x50\x78\x00\x54\x01\xd8\x10\x5c\xaa\xe8\x0a\xe3\x2f\x74\x2e\x92\x51\x46\xb0\x0e\xb2\x15\x9e\x5a\xef\x85\x01\xab\x6a\xf0\x17\xf5\xf7\xb2\x1c\xbd\x33\xe3\xe6\x01\x3d\xce\x1c\x90\x17\xed\xa3\x1b\x4a\x80\xbb\x48\xdb\xd7\x8d\xe3\xbb\x46\x5d\xb5\x53\x0b\x2b\x8b\x0d\x60\x60\xa5\x88\x44\xf9\x0d\x1d\x35\x27\x0e\x5d\xb7\x81\x5f\xbe\xcd\xd8\x92\x1a\x9e\x6e\x55\x98\xaf\x5e\xbb\x11\xe2\x3d\x17\x7e\xce\xc4\xbe\xcc\x75\x1c\x4f\x58\x53\xf2\xc6\x42\x82\xa9\x94\xbd\x3c\xf1\xec\xf5\x24\xdb\xf4\xc4\x3b\x26\x89\xf1\xd2\x6a\x25\xa9\xaf\xd7\x54\x3a\x0b\xac\x13\xc3\xaf\x90\x7f\x51\x07\x21\xa2\xde\xdf\xde\x1b\x31\x8e\x96\x4d\x3e\x23\x54\xed\x78\x57\xe6\xb4\xcb\xfc\xf0\x2b\x34\x15\x2e\xbd\x9d\xd2\x76\xf4\xf3\x2e\x51\x7a\x57\xec\x68\x2c\x03\x34\xc0\x68\xc7\x7d\xe3\x9d\x5e\xf6\x1b\xd2\x4b\xcc\x57\x59\xd6\xab\x1f\x84\xf6\x19\x63\xf2\xba\x3b\xd2\x91\x19\xbf\x69\x24\x48\x51\xfc\x62\xa7\x77\x95\x1c\x98\x88\x09\x42\x6a\xc7\x21\xad\xa6\x9b\xcb\x56\xc4\x6a\xe8\xd5\x24\x7e\x28\x05\xc9\x1b\x2f\x25\x2b\xc9\x6b\xa3\x68\x08\xc7\x95\xe8\x32\x52\xda\x08\x57\x4b\x4a\xa6\x00\x4e\x0e\xb9\xdb\xc3\xe2\x43\x11\x81\x0d\x78\x30\x28\x3c\x90\xea\xd9\x58\xd8\x4d\x88\xdb\x4b\xeb\x7e\x26\xf2\x94\x18\x36\x32\xde\x49\x4e\x58\x7b\x11\x80\x7b\x1b\xdd\xf1\x49\x78\x45\x68\x51\x5c\x43\x55\x83\xfe\x49\x39\xe1\x2b\xd3\x94\xb2\x58\x67\xd7\xe3\x0d\x3b\x8a\x5d\xfc\xc8\x17\x6b\x77\x9c\xf8\x35\x20\xea\x42\x96\xc5\x6a\xd4\xc6\xd0\xb0\x9a\x7c\x32\xab\x5d\xc0\x42\x4e\x0e\xf5\xe6\xb5\xdb\x91\x2f\x02\x68\x7d\x96\x58\x58\x86\xa3\x31\xc0\x1a\x31\x25\xb4\xf3\xf4\x34\x7b\x3c\x63\x29\x86\x2f\x14\x99\x8c\xf9\x1b\xf7\xa5\xf5\xeb\xed\xcf\xab\xf9\xe4\x5a\x68\x31\x33\xa6\xe0\xc4\x4f\x0e\x64\x59\x82\xf4\x6c\x70\xd8\x08\xb6\xd1\x37\x32\x45\xc8\xb7\x69\x4b\x79\x73\xa0\xa7\xe0\xa8\x1a\xd2\xf7\xdf\xc8\x20\x7c\x74\x31\x9b\x6b\x1c\x6c\x59\x3e\x59\x4e\x2a\xf8\x0a\xc6\x3d\xb4\x29\x0d\x2f\x6f\x85\x1c\xcb\x6a\x4f\x2a\x8f\x48\xdd\xa5\x76\xc6\xdb\x57\xd8\xd0\x22\xfe\x66\x4c\x3d\x63\xf7\x26\x73\x20\x12\xe2\x5f\x32\xd1\x6b\xa1\xa8\x71\x55\xc2\xe6\x77\x7e\x65\x2f\x73\x92\xcc\x74\xba\xc5\xbc\x6a\xab\xdd\x2d\xaa\x99\x14\xf9\xe0\xd2\x8b\x77\x51\x90\xa2\x4c\x1a\x22\xbe\xff\x66\xad\xb4\xf9\xa8\xdc\x90\xf5\xa3\x84\x84\x09\x85\x32\x82\x80\x85\xf2\x4d\xb9\x17\xf5\xde\xf5\x04\x1f\x1e\xed\xaa\xcc\xce\x95\x95\x4b\xee\xb7\x9b\x62\xc2\xcd\xf7\x15\x73\x19\x18\xfe\x2c\xeb\xaa\x78\x61\xcf\xaa\xcf\x4d\xa4\x5b\x07\xf5\x77\x6d\xc3\xa2\x77\x1c\xf3\xd2\x30\x27\xe2\xf4\xe2\x4c\xcf\x71\x72\x4e\x55\x8c\xa3\x72\x3d\x66\xf5\x10\xd3\xe1\xa5\xf6\x1f\x7b\xf7\x9d\x9d\xb1\xde\x18\xdb\xc5\xe2\x22\x67\xce\xed\x22\x56\xa5\xce\xda\xf2\x7d\xfc\x32\x55\x8c\x38\x62\x6c\x80\x3b\xff\x40\xf2\x74\x24\x89\x16\xd4\xcc\xf7\xc8\x31\xaa\x28\x5b\xed\x92\x88\x4c\x79\x69\xe3\x46\x26\x50\x99\xff\x11\xe3\x59\x54\x23\x86\x16\x5f\x09\x4b\x61\x34\x9a\x0e\x76\x14\x30\x75\x62\x07\x19\x94\x97\x2f\x31\xe0\x56\xb6\xb2\xcf\x98\x02\xca\x58\xe1\xb0\xd1\xc4\xf6\xb1\xe0\x02\x29\x15\x98\xd5\x0b\x53\x48\x04\x34\x71\x62\x88\xb9\x45\x77\x62\xf4\xa2\x49\xd8\x70\x33\x0e\x1a\x95\x89\x88\xdd\x14\x60\x4a\xce\x62\x4e\x75\xe7\x4a\x42\xb4\x97\xd0\x27\xdd\xa1\xf0\x09\x76\x61\x30\xf5\x18\x7e\x26\xad\x63\xe6\x36\xc2\x29\x45\xa8\x97\xfb\xd2\x41\xf8\xa8\x27\x17\x87\x52\x90\x60\x50\xaa\x15\x81\x25\xf6\xa5\xf5\xe6\x7c\x85\x8a\x26\xcb\x32\x95\xfd\x43\xee\x83\x58\x38\xef\x54\xd0\x2d\x80\xba\xc3\xb7\x4c\x9b\x10\x22\x8e\x1e\xe4\x16\x7b\xc1\x07\xfe\xd2\x4c\x90\x1c\x25\xdd\xa9\x31\x35\xbb\x8a\x52\x7b\xe2\xd5\xc8\x4d\x2e\x55\xf3\x90\x71\x53\xa6\xb2\x2b\xbb\xec\x1e\x3b\x6e\xc4\x27\x8e\x65\x08\x13\x77\x49\x20\x62\x98\x9d\xe4\x4f\xd3\xd9\x3c\x72\x3c\x15\x22\x02\x4c\xef\x7e\x0b\x29\x46\xf3\x0a\xd7\x78\xbf\x7a\x74\xcd\xe0\xcf\x0f\x92\xb9\xc9\x7f\x9d\x5c\x98\xcc\x67\xfb\xc1\xa7\xd5\x3b\x34\xb3\x89\x26\xcf\x23\x49\xdc\xcb\x5f\xb3\x65\x69\x23\x67\xe3\xc9\x72\xcf\xdf\x92\x12\xec\x5f\xcb\x3c\x07\x69\xbc\x7b\x0a\x4f\x36\xe6\x54\xd4\x73\x27\xca\x26\x99\xe6\x56\xd9\xc8\x09\x86\xfc\x90\x3f\xa5\xf7\xb2\x2b\x64\xd9\xe7\xaa\x3c\x1c\xaf\x18\xe0\xf5\xfe\x7e\xfb\xd2\x71\x54\x01\x68\x8b\xd9\x02\xd2\xd1\x1e\xca\x35\xcb\xc5\x52\x9e\xcf\xa6\x17\x48\xe6\x3d\x7e\xa6\x23\x7c\xa6\x6d\xd4\x6e\x6f\x2f\xaf\x9d\x32\x40\xde\xce\x14\x27\x6e\xb6\x8a\xe1\xd3\x05\x51\x75\x00\xf7\x98\x80\x46\xb2\x9f\xbe\x42\xfd\x7c\xa7\x43\x5a\xc3\x94\x9b\x20\xdd\x2b\x0c\xef\x6b\xf9\xf4\xaa\xa3\x47\x3f\x53\x6f\xb1\x2a\xd4\x6a\xef\x44\x42\x54\x4f\xce\x43\xe5\x4b\xde\x1c\x9b\xef\x67\x5a\x18\xc8\xac\x06\x6b\xab\x42\xa5\x1c\x5e\x55\x90\x5d\xd0\x95\xbb\x8a\xba\xb4\xd7\xe3\x80\xf2\x80\xf2\xfc\x9c\x44\xff\xf8\x50\xaf\xcb\x18\x09\x03\x09\xc1\xa0\xd9\x77\xef\x73\x67\x20\xdb\x7e\xb5\x31\x84\x7b\x61\xd3\x58\x0f\x6f\xa2\x08\x0e\xce\x0f\x35\x6f\xc1\xd6\x57\x7b\xe3\xcc\xa0\xc0\x4a\xd6\x5d\xcc\xb5\xa4\xba\x9b\x1b\x6b\xb9\x6d\x1c\x20\xd2\xa6\xa8\x9d\x6e\xec\x09\xc4\xe7\xe7\xfa\xfd\xa2\x27\x45\x65\x4d\x99\xf7\xb7\xb3\x54\x95\xd1\xa7\x3d\x35\x9f\x67\x2e\xce\x28\xa6\x93\xe5\x43\x27\x1c\x16\x20\xff\x92\x02\x0d\xf1\xff\xa7\xe6\xbf\x01\x00\x00\xff\xff\x98\x57\x00\xaa\x8b\x06\x00\x00")

func test_certsCaKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaKey,
		"test_certs/ca.key",
	)
}

func test_certsCaKey() (*asset, error) {
	bytes, err := test_certsCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x66, 0xe2, 0xff, 0x59, 0xc, 0xa6, 0x43, 0x8a, 0x9, 0x51, 0x69, 0x97, 0x78, 0x9d, 0x3a, 0x2e, 0xac, 0xc1, 0x35, 0x1a, 0xe5, 0x62, 0xd1, 0xcc, 0xe6, 0xef, 0x9c, 0x4d, 0x53, 0x5a, 0x3b, 0x19}}
	return a, nil
}

var _test_certsClientRootCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\x3b\xb3\xb2\x3a\x14\x40\x7b\x7e\xc5\xed\x9d\x3b\x82\xa8\x60\xf1\x15\x09\x89\x18\x34\x40\xe4\x71\x84\x8e\x97\xe1\x8d\x8f\x83\x01\x7e\xfd\x9d\x73\x8a\xaf\xb9\xbb\x5c\x7b\x66\x35\x7b\xcf\xfa\xf7\x67\x20\x36\x89\xfd\x8f\x81\xaf\x3e\x39\x12\x03\xf8\xf8\x97\x4a\x94\x10\x04\x90\x61\x80\xa2\xe2\x40\x10\x08\x38\xb9\x82\x73\x7f\xb8\x0e\x9a\x1d\x97\xe6\x7c\x59\x7f\x96\x95\xe3\x99\xe3\xc0\x05\x62\x91\x75\x1e\x62\x52\x7e\x32\x1b\x30\x7c\x81\x0c\x08\xe9\xbc\x60\x8f\x42\x60\x02\x25\xc0\x46\x49\x2d\xb6\x39\xd4\x89\x6a\x7d\xa2\x2f\x7b\xa0\xd7\x40\x60\x11\xa1\x90\x31\x84\xc5\x84\xd2\x8d\xfd\xca\xba\x43\x19\x6d\x38\x67\x32\x16\xa7\x32\xb3\x25\x5a\x03\x61\x2f\x64\xa6\x7e\x24\x1c\x44\xa7\xaf\x32\xb3\x69\x1d\xfc\x30\xf5\x2f\xab\x41\x4d\xaf\x44\x60\xf0\x2b\x3b\x63\xd1\xfe\x95\x49\xd1\x86\x4f\xc8\x07\x17\xc8\xed\x10\x02\xea\xc3\x93\xf5\x49\x55\x26\x38\xc7\x15\x05\xb2\x69\x78\x4f\xd3\x23\xa9\x8a\x18\x86\x80\x05\x00\x6c\x09\x44\x02\xfc\xec\xcf\x60\x20\x50\x02\xcc\x28\x5f\xfd\x7c\x68\x02\xf6\xf1\x4e\xa5\xa0\xac\x58\xb2\x0d\x68\x26\x11\xc2\xf4\xfe\xb0\xd3\x6f\xad\x7b\xd9\xde\xbc\xc9\x27\xe8\x77\x72\x58\xcb\x59\xbc\x72\x3a\x2d\xb8\x00\x27\xb8\x27\x99\xf4\x3e\xc4\x91\x5a\x61\x43\xc9\x64\x3d\x2c\xb4\x83\xf2\x6e\x85\x4d\xf4\x37\x6b\xd2\xb3\x69\xdc\x47\x27\x69\x7a\x6e\xf9\xee\x75\x4f\x2e\xe4\x8d\x0b\x53\x29\x97\x55\x9a\x47\x69\x80\x2f\xcd\xd8\x10\x89\xb0\xe3\xfe\xa1\xed\xe7\x7d\x65\x45\xaa\x6e\x7f\xbc\xa3\xab\x4c\xc2\x0c\xdb\x5c\x8f\x92\xc9\x75\xfb\xd6\x1b\x95\x49\xde\xad\x9f\xcf\x85\x1b\x1d\x7a\xfb\x5e\x09\x81\x6a\x44\xc7\x38\x8d\x7d\x42\x25\x8d\x5e\x74\x93\xa8\x3b\x38\x16\xb0\xd3\xd1\xae\x4f\xbc\xad\xf9\x5c\xa6\xee\xb4\xa7\xbe\x47\xdd\x20\xdd\x3c\x8e\xb4\x00\xad\x5b\x46\xf7\x16\x39\xf2\xe0\x20\x99\xc6\x24\x63\xd6\xb8\x6e\x34\x2a\x39\xee\x5c\xdf\x1f\x69\xfa\xf8\x12\x7e\x07\xcc\xf8\xb2\xae\xbc\x52\x7b\x47\x9b\x8b\xc5\x4f\x8f\x60\x54\xdb\xef\x69\x5d\xf6\x55\x9b\xc9\x33\x75\xfc\xb3\xa1\xc8\xda\xe8\x92\x75\xcc\x9f\x72\x72\xd7\x1b\x49\x78\xdf\x8f\x7c\x1d\x19\x7e\x9f\xcb\xe5\x46\xaf\x9a\x67\x1f\xd5\x07\xfd\x0a\x38\x85\x00\x98\xb5\xb5\x80\x96\x82\xed\xcf\x9f\xe4\x48\x60\xb8\x16\x0c\x03\x41\x8e\x03\x02\xfe\xcf\xe5\xa4\x93\x17\x60\x84\xc0\x19\x72\xfe\x82\x1c\x1f\x21\xcb\x10\xa8\x81\x0d\x79\xf3\x2c\x9b\xca\x3c\x08\x19\x02\xf6\x3e\x02\xe0\x18\x80\x61\x70\x9c\x55\xc5\x8e\x07\xc5\x0c\x63\xb4\xc2\x6b\x5d\xda\xf5\xe7\x6d\xde\x39\x6d\xbe\x4a\x52\xcd\xd7\xbe\x10\x49\x8c\x62\x57\x7d\x78\x5a\x8e\x6e\x36\xc4\x86\x1e\x6c\xaf\xbd\xbe\xce\xb6\x03\xfb\x4c\xca\x9c\xf5\x43\x9d\x3e\x53\xd4\xd3\xba\x5a\xb5\xdb\x45\x0a\x5f\x7b\xbb\xe2\xca\x7d\x37\x8f\x72\x27\xdb\x43\xbd\x3b\xe7\xab\xcb\x58\x77\x49\x7f\x28\x7d\x7a\x7a\xef\x4e\xe4\xde\xb8\xb3\x1d\x0d\xc6\x4d\x0d\xf7\x6e\x75\x0b\xef\xe1\x6a\xd4\xd3\xf3\xfc\xe6\x8a\x23\x61\x39\x59\x67\xf9\xf1\x34\x38\xe5\x34\x70\xb3\x50\xbe\xa1\x0c\x59\xa1\x28\xa6\x26\x50\x3b\xae\xf0\x79\x4b\xa3\x69\xbb\x5a\x77\xbb\x55\xac\x3b\x4e\x6d\xb9\xfb\x9e\xb7\xed\x41\xfb\x32\xdf\xe2\x51\x48\x7d\xc2\x6f\x8b\x72\x5b\xc1\x43\xb1\xc3\x2c\x9a\xbb\x2b\x9c\xf3\xe0\x94\xa7\xa5\x6a\x4d\xf4\xf2\xa4\x6e\xef\xcd\x7e\xb8\xc1\xb7\x50\xcc\x97\xe1\xf3\x84\x46\xbd\x8f\x3c\x9b\xc5\x5b\xb5\x2b\x35\x59\x52\xc5\x71\x98\x39\xae\x16\xc5\xb6\xee\x37\xa8\xeb\x0b\x4a\x70\xef\xe0\xd7\x30\xef\x93\xda\x4e\x77\x96\x6b\x65\xc3\x4d\xfe\x1e\xcb\xd0\x18\xc3\x59\x89\xb6\x37\x7b\x47\x15\x77\x10\xe4\xaa\x15\xa3\x54\x3e\x8e\xb0\x62\x7f\xfe\x48\xbf\x79\xc0\x36\xfa\x7f\x32\xfe\x0b\x00\x00\xff\xff\x85\x0f\x1b\x5d\x4f\x04\x00\x00")

func test_certsClientRootCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootCrt,
		"test_certs/client.root.crt",
	)
}

func test_certsClientRootCrt() (*asset, error) {
	bytes, err := test_certsClientRootCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.crt", size: 1103, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2f, 0xa9, 0xaf, 0xc0, 0x1, 0x1d, 0x53, 0xd2, 0x11, 0x14, 0x4a, 0x35, 0x4, 0x43, 0x27, 0x6e, 0xd7, 0x7c, 0xea, 0xd9, 0x17, 0xca, 0x25, 0xe, 0x65, 0xbf, 0x42, 0x5d, 0xa0, 0xa2, 0xaa, 0x84}}
	return a, nil
}

var _test_certsClientRootKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\x37\x12\xa3\x50\x02\x05\x73\x4e\x31\xb9\x6a\x0b\xef\x82\x0d\x30\x5f\xf0\xb1\xc2\x83\x32\x01\x02\x84\xf7\xee\xf4\x5b\x33\xf1\xbe\xf4\x25\x5d\x9d\xf4\x7f\xfe\x4e\x04\x0a\xb4\xfe\xb8\x9e\xf0\xe7\xe5\xc2\x50\xf0\xc1\x1f\x1d\x24\xff\x1e\xc4\x84\x10\x0c\x25\x14\x05\x41\x97\x04\x07\x08\xc3\x87\xe6\xf6\xf7\x13\x18\x58\x45\x65\x32\x50\x17\xd2\x2a\x35\x33\x7b\x3a\x11\xc9\xf8\x11\xfb\xa5\xa7\x3b\x58\xd6\x3e\x73\x02\x7a\x7d\x26\xbc\x8a\x28\x45\x3d\x6e\xb8\x74\xc8\xad\x4a\xf4\xc6\x2b\x8a\x2c\xaa\x12\xd6\xd8\x7a\x3d\xe3\x0d\xcd\x53\x2d\x93\xbd\x97\x01\x34\xe5\xaa\xca\x9e\xad\xbb\x51\xa3\xa4\xe0\xc6\xbe\x3f\xe9\x32\x44\xb5\x5a\x13\x24\x43\x3b\x32\x52\x70\x51\xa2\x8d\x51\x92\x80\xf8\x9d\xbe\x8f\x65\x1b\x7e\x91\x85\xca\x29\x56\xf9\x7c\x96\x89\xed\x3b\x2e\x14\x65\xf1\x6f\x9a\x0e\xe6\x35\xcb\xed\x82\x99\x16\x4a\x18\x4b\x16\x60\xc8\xe0\x38\xd6\xd1\x89\x51\x44\x04\x97\x6c\xdf\x12\x2a\xfe\xac\x87\x93\xf6\xe5\x7b\x17\x1e\x6f\xa2\xd9\xc4\x69\xe1\xde\xd5\xa3\x06\x58\x2d\xe3\x0a\x3f\xb9\xbe\x5a\x6a\x3e\x15\xa9\xb4\x73\xaf\xba\x8c\x94\xbc\xac\x78\x2a\x90\xd2\x9d\xb6\x6f\xb9\xe6\x06\x92\x89\x08\x26\x5c\x00\x5d\x8a\x9d\x87\x52\xcd\xf0\x65\x15\xeb\x77\x25\x22\x13\x1a\x2b\x9d\x66\x05\xf5\xa6\xc6\xd8\x32\x6b\xb9\xb9\xca\x35\x47\x6c\xb6\xbe\x5e\x44\xa2\xaf\x4a\x8f\x6a\x26\x98\x3f\x71\x41\x08\x0d\x4d\xe6\x30\xdf\xe1\xa8\x8f\x04\x44\x0b\xe0\x40\x59\x70\x04\x51\x18\xfe\xca\x86\xf2\x83\x2f\x73\x4d\xc5\x89\x8f\xa5\xe2\x88\x3d\xb8\x6f\x63\xbd\xba\x72\x78\xca\xfe\xfc\x93\xde\xad\x41\x12\xe3\x8c\x19\xad\xfd\x78\x52\x87\xee\xd4\xdf\x7e\x62\x47\x19\xd4\xac\x91\x9b\xbf\x30\x08\x7b\xc1\xb9\xb2\x88\xf6\xb1\x24\xf0\xf2\x0e\xe1\x4e\x75\x11\x73\xb9\x4b\x47\x9c\x8b\xde\x4b\x38\x6d\xdc\x02\x7f\xac\x1a\x5a\xbe\xb3\xba\x5d\xfa\x60\x5a\x3b\x9f\xec\xa9\x71\x20\x60\x73\xff\xa9\x6a\x52\x4a\x19\x1b\xe5\xc4\x7c\x06\x17\xdd\x47\x12\x4c\x72\x54\x6a\xdf\x70\x9c\x6a\x6b\xda\x9b\x04\x06\x3e\xa2\x26\x9e\x6f\xde\x20\x05\x74\x4a\xcd\x5f\x3f\xe7\x2d\xe7\x73\xd0\x5a\x1e\xfb\x87\x7b\xad\x30\x59\x25\x22\xe5\xf3\x7a\xd5\x6e\x42\x45\x8a\xf3\x0e\x7b\xe2\xe4\x23\xf7\x7b\xc8\xcf\x82\xbb\x4c\xc9\x78\xa9\x35\x27\xba\x46\x50\x5f\xf6\xba\x98\xaa\x8a\x4b\x43\x9d\xba\xaf\xc6\x17\xc3\x0f\x76\xc6\xdf\x09\x58\x21\x5a\xc1\x21\x27\x89\x00\xe1\x7c\x70\x2e\xd6\x24\xdd\x9e\xd7\xd4\x94\xcf\x8d\xde\xe9\x32\x9b\xef\x05\x3f\x0b\x77\x43\xee\x6c\x37\xb8\x72\x84\xb3\x8b\x39\x34\x8e\x85\xc1\x82\xed\xb1\x6c\xfc\x81\xb7\x52\xf4\x45\x27\xab\x46\xaa\xad\x0f\x3b\x26\x90\xca\x04\x08\xf7\x63\x24\xce\x8f\x1a\x96\x8f\x7d\x78\xf1\xc9\x15\x06\xa2\x48\x6c\xe2\x62\x1e\xf2\x43\x76\xd9\x50\x41\xb5\x8f\x38\xd9\xcf\x9b\xfb\x4c\x98\x97\xac\xe1\x76\x11\x08\x28\xf1\x62\x17\x96\xd5\x8b\x3b\x5f\xd8\x6e\x9b\x9b\x8a\xb9\x98\x9f\x77\x83\xd9\x19\x7f\x77\x12\x3c\x4a\xc2\x88\xda\xf3\x3d\xbc\x70\x06\x87\x11\xd6\x25\xe2\xee\x47\x55\x76\xd5\xca\xd4\x64\x26\x22\x9f\x6f\xdf\xa8\x43\x1c\xc3\x5e\xd5\xb1\xe6\x29\x20\x54\xef\xc0\x0d\x85\x5d\xc0\x4b\x2c\xba\xb2\x09\xba\x4a\x6c\xe5\x01\x98\xae\xfa\xb3\xcc\xda\x48\x0e\xac\xe1\xb2\x7f\xc4\xe7\xa9\xa3\x08\xea\x7f\x6f\x3f\x57\x39\x58\xa0\xc5\xaa\x7e\xf7\x7d\x77\x54\x48\xd4\x86\x47\x75\x95\x5f\xfa\xb1\x20\xe0\x38\x9c\x15\xae\x77\x4b\x9b\x2c\x0e\x85\xf9\x9d\x74\xe9\x7b\xf7\x3d\x4a\x17\x93\x0c\x00\x99\x97\x59\x9f\x3e\x98\x15\x59\x7a\xe4\x17\xc5\x8d\x01\x3c\xfe\x78\x3a\xbc\x31\x5a\xd7\xbe\x24\xed\xb4\x3e\xab\x4f\x6a\x48\xa3\x85\xcf\xdd\x0a\xc9\x46\xd8\xbe\xe6\x37\xba\xee\xea\x41\xce\xbc\x83\x80\x24\x1a\x2b\x8a\xb5\xbe\xe4\xc3\xc4\x2f\x06\xa6\x8d\x0a\xa7\x33\x85\x68\x51\x29\xcf\xfc\x39\x0f\x71\x23\xb8\xdd\x5f\x64\x81\xa7\xd7\x5f\x7b\x4f\x32\xfb\xfa\xb6\x2f\x42\x26\x31\xc0\x45\x2a\xd2\xbf\xba\x37\x9e\xf7\x56\x5f\x57\xcd\xf2\x59\x0c\x74\xb7\x05\xc1\xa6\xa6\x6a\x5b\xe1\x5d\x02\xd5\xd8\x9c\x91\x02\x83\x9c\xfe\x52\x9b\x92\xb4\xdc\xd0\x9e\x54\xbd\x5d\x1e\x60\x73\x47\xe0\xb3\x1b\x11\xb7\xf4\x93\x76\x9a\x49\x60\x18\x88\x56\xb7\xec\x1f\x14\xd6\x9f\x8b\xfe\x6e\x9e\xe8\x61\xe5\x5f\x77\xe0\xad\x68\xc2\x5d\xcc\x39\x6c\xa3\x47\x49\x23\x94\xf5\x73\xd0\x6a\xea\x4a\x2d\x46\x3b\x73\x64\x0c\xde\x32\x76\x19\xa0\xbb\x36\x57\x71\x36\x68\x08\x54\x1a\x38\xba\x58\xca\x68\xf4\x21\xa6\x43\x2f\xbe\x5e\xbb\xa2\x87\x9b\x7a\x62\xed\xc0\x58\x3e\x8d\xfb\x46\xf1\xd3\xf0\xe4\x7d\x57\xb4\x1d\x61\xdb\x72\xc4\xb7\x61\xac\xac\x99\x99\xd7\x9b\x0e\x2b\xfc\xa0\xdc\xb2\xe9\xe7\x19\x8f\xc9\xc5\x22\x2d\x9e\xcb\x0f\x93\x3b\xf5\xb7\xf9\x74\x56\xd4\xc9\xa4\x5c\xef\xa1\x03\x9c\x0c\x1e\x2e\x99\x21\xc1\xc0\x56\xee\xc2\x05\x41\xb9\x5e\xf3\x4f\xca\x95\xed\xfb\x65\x0f\xa5\x1e\x65\x4d\xe3\xb1\xa5\xd7\x3f\x54\x77\x3a\x94\x95\x38\xbe\x20\xe3\x82\xa9\x28\x11\xe0\x5e\xbc\x10\xf6\x0d\x35\x6e\xe6\x88\x08\x4d\xe4\x0a\x83\x22\x44\x76\x46\xd3\x4a\x13\xfd\xe2\x87\x7c\x47\xe8\x30\xb9\x5b\x18\x66\x16\x11\x2b\x21\xb7\x43\xad\xdb\xe6\xba\xc3\xf6\x38\xbf\xa8\x30\x61\x79\x8c\x0b\x36\x5d\x38\xb0\xa2\x43\x42\x05\x0f\x9d\xa7\xc9\xc4\x9a\x1d\x7c\xf2\x58\x62\x2c\x05\xb0\x4b\xd9\x2e\xfd\xa7\x68\xbb\x52\x8b\xe0\xb5\x31\xbc\xb8\x25\x40\x2b\x7b\x3c\x54\xe7\xf7\x38\x84\xc5\x21\x8f\x95\xa2\xb3\x52\x1f\x22\x6a\xa1\x2d\xdc\xe8\x8e\x01\xda\x06\x89\x6d\xff\xf2\x6c\xf0\xf0\x9c\xc9\x1a\x72\x02\xe1\x9a\x4b\x7e\x5a\x3c\x5f\x01\xe0\x2a\xc6\xe9\xb2\x74\xd3\x1c\x40\xfd\x17\xf9\x97\x14\x60\xc9\xff\x3f\x35\xff\x0b\x00\x00\xff\xff\x9f\x7f\x76\xd4\x8b\x06\x00\x00")

func test_certsClientRootKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootKey,
		"test_certs/client.root.key",
	)
}

func test_certsClientRootKey() (*asset, error) {
	bytes, err := test_certsClientRootKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc9, 0x0, 0xb6, 0x10, 0xea, 0xfe, 0x4c, 0x5d, 0xac, 0x52, 0xa, 0x97, 0xf1, 0x3a, 0xf9, 0x27, 0xf8, 0x5f, 0x5b, 0x36, 0xde, 0x7c, 0xe2, 0xee, 0x99, 0x73, 0xf4, 0xa3, 0xb2, 0x6d, 0x94, 0x96}}
	return a, nil
}

var _test_certsClientTestuserCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xb9\xd2\xb2\x48\x18\x85\x73\xae\x62\x72\x6a\x4a\x16\x51\x09\x26\xe8\x66\x91\x06\x1b\x68\x16\x01\x33\x44\xed\x06\x59\xdc\xa0\x85\xab\x9f\xfa\xbe\xe0\x4f\x66\xde\xf0\x79\xab\x4e\x72\x4e\x3d\x7f\xff\x1c\xb4\xf6\xc8\xff\xcb\xb0\xa2\x04\xd9\xc8\x00\x89\xf5\x4b\x05\x8c\x90\x09\x4d\xc3\x00\xd7\x99\x02\x8e\x20\xa0\x28\x02\x81\xe9\x68\x8d\xdd\xa7\x9a\xa2\x5d\x82\xb3\xe2\x6e\x4e\xac\x0b\x25\x6e\x92\xc2\xf5\x86\x13\x62\x53\xe5\x03\x62\x1d\x20\x01\x5c\xf0\x16\x2b\xc6\x10\xec\x81\x9c\x5a\x06\xc3\x2e\x51\xf4\xa6\x54\xdd\xa9\xc8\xfc\x01\x47\x29\xb7\x78\x61\x1e\x09\x31\x2d\xfe\x35\xcf\x8a\xff\xaa\x3a\x9d\x15\x0a\xa5\x44\xb2\xb8\xc3\x2a\x5f\xc0\x0d\xe0\xfe\x82\x66\x9c\x14\x3c\x30\xf1\x9c\xb1\xca\xc7\x4d\xfa\xc3\xd4\x3f\xac\x01\x3d\x8e\x10\xb7\xc0\x6f\x98\x67\xf1\xf6\x4f\x98\x50\x28\xf4\x6b\x25\x20\x84\xd4\x3f\x42\x80\x13\xc3\x89\xda\x4a\x8d\xe4\x4a\x39\xce\x18\x21\x88\x1a\xe0\x43\x7a\x7f\xb2\x7b\xbd\xd7\xb9\x04\x01\xb1\x6c\x00\x02\x03\x90\x1d\xf8\xf9\x0b\x06\xf5\x0c\x40\x2c\x30\x79\x97\x8f\xbc\x1a\x7a\xe3\x1d\x59\x64\xd5\x9c\xc7\x33\x4a\x93\x6a\x1c\x4e\xe5\xcb\x1a\xa6\x25\x74\xa3\x6a\xc5\xb2\x6e\x98\xf3\x0f\xdd\xdb\xb9\x7f\x31\xd6\xef\x27\xa7\x5c\xd8\x91\xf5\xbe\x7f\x69\x75\xd3\x94\x09\x63\xef\xf6\xd4\xd2\x62\x94\x5f\x93\x06\xf2\x27\x75\xd2\xe2\xea\xdd\xe7\xde\x61\x79\xa6\x21\x50\xc7\xf4\x2e\x1e\x17\xcd\xe9\x70\x1d\x8c\xa3\xae\x4f\x51\x29\x28\xd0\x9b\xaa\xf7\x35\xfc\x76\xf3\x9a\xd6\xba\x91\x90\xb4\xa1\xce\x27\x6e\x65\x6d\x7b\xca\xbe\xda\xf6\x25\x6b\x2b\x13\x8f\xa6\xf8\x78\x7f\x2a\x7d\xd5\x68\x43\x7d\x9b\x90\xe4\xfa\xf2\xa8\x68\xf2\x47\x50\xfd\x84\x15\x7a\x8a\xab\xe7\x55\x3c\x88\xe5\x62\x3b\x6e\x8b\xa1\xbc\xd6\x83\xa3\x63\x37\x2c\xdb\x58\xef\xd8\x93\x2a\xae\xaa\xc5\x6e\xbe\x42\xa8\x26\x6b\xf5\x1c\x4a\xfc\x81\x3d\x8b\xde\x07\x2c\x94\xe1\xc5\xd0\x22\x1d\x74\xe1\x62\x68\xfd\xb4\x7b\x7d\x02\x20\xe7\x3d\x10\x0d\xf8\xac\xd1\x79\x5b\xab\xaf\x62\x63\x7f\x9b\x88\x35\x74\xf7\x3e\x78\xf6\x42\x5e\x4f\xb3\x39\xe1\xf5\x47\x1e\x65\x79\x11\x38\xe1\x3a\x96\x7b\x97\xdd\x7d\x44\xe3\x86\x6c\x7a\x8c\xd4\xcc\x2c\xbb\xeb\x5c\x48\x1c\x99\x80\x00\x38\xcc\x15\x77\x13\x10\xfc\x34\xe5\x90\x1d\x04\xb7\x9d\x05\x01\x36\x60\x09\xb8\xf0\x3b\x94\x48\x6a\x21\xe0\xdc\xa0\x05\xf2\x78\x01\x21\x49\x1d\xc0\xd1\xff\x2d\xcf\xa4\xd4\x82\xe0\x70\x47\x6c\x43\x3e\x83\x79\x79\x0a\xe9\xc3\x94\x0f\xc7\x9d\x93\xfa\x11\xed\xa4\x89\x72\xba\xdd\x9d\x27\x52\x9e\xc1\x96\x69\xda\xe9\xfe\xa8\xf5\xe1\xd1\xbe\xf3\xba\xdb\xde\x42\x96\xdd\xb4\xac\x29\x6e\xee\xc9\x5b\x56\x46\x96\x6a\x69\x22\x18\x8f\xce\xcd\xf5\x71\x0e\x6f\xb7\xa0\xdc\x98\xc3\x03\x2a\x65\x8f\x57\x99\x64\x75\x8b\x6f\xf4\x43\x1c\x33\x2a\xa6\x43\x28\xe7\xdd\x03\x3d\xc4\x62\xeb\x3a\x15\x56\x98\x4a\x7a\x37\x0c\x23\x12\x09\x52\xfc\xed\x03\x6f\x69\x4f\xf4\xaa\x7a\xdb\xde\x76\x92\x60\x5e\x90\x14\x0e\x6f\xf0\x65\xe5\xf9\x76\x5a\x9c\x75\xfc\x38\x6a\x76\x37\x7e\xd9\x14\x86\xd1\xf7\x35\xae\xf2\xf5\xcb\x3e\x88\x99\x98\xf7\x54\xd8\x85\xd1\x3a\x6a\xe7\xda\x84\x49\xab\xdc\x58\xfc\x9c\x55\xf2\x3d\x1c\x35\x7a\x84\x9a\x72\xd8\xd7\x4e\xe3\x1d\xd6\x87\xcc\x06\x59\x39\x46\x49\x6e\x47\x9d\xbe\x5a\x05\x8a\xb6\x1b\x3c\x19\xb7\x81\x27\xa8\x31\x7a\xa2\x29\xfc\xbc\x9d\xeb\x76\x7f\x59\x0c\x66\x5f\xb7\xe2\x25\xea\xd0\xad\x0e\xf2\x80\x1b\x67\x6d\x72\x12\x71\xb6\x2f\xdb\x58\x57\x44\xf8\x72\x9b\xa5\x83\x50\x31\x64\xa4\x58\xcf\x0e\xee\x85\xeb\x34\x0d\x67\x20\xc2\x6e\x29\xfe\x11\x7e\x15\x61\xf9\xe6\x7f\xb5\xf1\x6f\x00\x00\x00\xff\xff\x87\xed\x45\xb6\x53\x04\x00\x00")

func test_certsClientTestuserCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserCrt,
		"test_certs/client.testuser.crt",
	)
}

func test_certsClientTestuserCrt() (*asset, error) {
	bytes, err := test_certsClientTestuserCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.crt", size: 1107, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8a, 0x6f, 0xa4, 0xfc, 0x3, 0xfb, 0x3f, 0x42, 0x68, 0x9d, 0x88, 0x7b, 0xe7, 0x36, 0x56, 0xe, 0x78, 0xc6, 0x62, 0xb2, 0xa0, 0xce, 0xf, 0xa6, 0xf1, 0x38, 0x4a, 0xb0, 0x45, 0x46, 0xc4, 0x31}}
	return a, nil
}

var _test_certsClientTestuserKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x0e\xab\xd8\x16\xc6\xf1\x9e\xa7\x38\x3d\xba\x82\x6d\x82\xa1\x98\x62\x93\xb3\x01\x93\x3b\x92\x89\x06\x4c\x86\xa7\xbf\x9a\x53\xcf\x6a\x57\xf3\x2b\x3e\xe9\xff\xbf\x7f\x8f\x13\x65\xd5\xfa\xe3\xbe\xe1\x1f\xdb\x55\x03\xe8\x89\x7f\x74\x31\xfe\xfb\x41\x4c\x55\x15\x27\xa8\x72\x10\xea\x3c\x74\x44\xb8\xeb\xc5\x0a\xb0\x71\xe0\x17\x57\x74\xb0\x36\xdb\x32\xd5\xf7\xf2\x6d\x4c\xd2\x59\x1c\xf7\xdb\xd6\xdc\x1c\xab\xc3\xef\x78\x45\x6b\x25\x4b\x91\x85\x14\x3c\xb9\xfc\x8e\xea\x60\x1c\x52\x1e\x66\xaa\x69\xdb\xd4\xab\xeb\xa5\x4f\xfa\x2a\xde\xc0\xbc\x53\x30\xfa\x55\x8a\x1f\x97\x7a\x77\x0d\x4a\x1d\x85\x94\x0a\x9b\x77\xd5\xa1\xc1\x4d\x29\x5f\xb3\x41\x5e\xdb\xc6\xb2\xbb\x9b\x3e\x38\x7d\xcf\x97\xd2\x3e\xbf\x17\x59\x35\x2c\xef\x39\x7e\x5b\x29\xeb\xbb\x07\xd4\x33\x09\x4f\xea\x39\x03\x0a\x13\xcc\x4d\x40\xa7\x65\xcd\x59\xac\xa5\xc6\xe6\xb3\xab\x38\xa2\x59\x60\x7b\x50\x60\x25\x2c\xaf\x8e\x59\xdf\xcc\x7f\x25\x6a\xa0\xe9\x2d\x29\x5a\x6f\x72\x80\x64\x5f\x81\x22\xb5\x75\x48\x8b\xcb\x5b\xc7\xf3\x83\x20\x62\xe6\x2a\x39\x8e\xf0\x48\x22\xb3\xf1\x03\x99\x4c\x5d\xac\xba\xd1\x4c\xed\x82\xa7\x5c\x16\x7e\xed\x9b\xa7\x86\x9d\x99\xd7\x17\x04\xd1\x00\x51\x9e\xfb\x35\x6a\xf6\x6c\x88\x39\xa6\xa5\xb3\x75\xeb\xb6\x62\x16\x43\x97\x6e\x67\xfe\x09\x6d\x82\x98\xe4\x0a\x36\x00\xee\xc3\x39\x58\x13\x0c\x5a\xdd\x59\x6a\xf5\x6e\x1d\x7a\x30\x55\x22\x14\xd2\x6f\x79\xc5\xf8\xa1\x0a\xd0\x81\x1c\x1c\x55\x0e\x72\xa2\x94\xb4\xfa\x33\x6a\xdd\xa9\xdc\x2c\x03\x91\x19\xa8\xc6\x0d\x1d\xae\x5f\xa2\x00\xc4\xc8\x69\xf8\x3a\xa6\x93\x22\x31\xcf\xb0\x11\x9c\x4b\xe2\x03\x89\x30\x1c\xda\x8a\x53\xff\xa5\xa1\x2d\x5c\x66\x19\x97\x5f\x52\x36\xd1\xf9\xe9\xa4\x0a\x8b\x80\x48\xf4\x43\x4a\x0c\x3e\xe4\xf5\xcc\x40\xea\x1c\x4e\xc7\x71\x1d\x48\x96\xcd\x75\x70\xde\x47\xb7\xd1\x18\x33\x9e\x72\xc8\x67\xd0\x8b\xad\xf4\x61\xaa\xcf\xa2\xf8\x61\x32\x63\x0d\x80\xfb\x8e\x21\x93\x92\x4b\x77\x37\x65\x91\x20\x60\x5a\x54\x2c\xc7\x1c\xff\x28\x82\x34\x28\x1a\xe0\x7c\xb9\x32\xbe\x92\xde\x21\xa6\x88\xd7\x36\x17\x5e\x6e\xf3\x93\x95\xcb\x47\xbb\x27\xe6\xa8\xd5\x5b\x4f\x10\xc8\xa3\xac\xe4\x46\x31\x45\xf1\x41\x79\x1e\x7c\xd2\xea\x1d\xbd\x8d\xe3\xad\xf4\xa2\x8f\xbe\xbf\x78\x56\xe0\x47\xfa\xb6\x73\x14\xd0\xfd\x04\xb1\x4d\xc0\xe6\xa6\xa3\x35\x4d\x2e\xb4\x88\x39\x61\x44\x20\xe7\xd9\xe6\x5a\x1d\x5c\xfd\xea\x92\xb4\x97\x15\x32\x8f\xee\x66\x93\x7c\x8e\xc5\x67\x63\xd3\x7c\x50\xc3\xa6\xbc\xc6\x0b\x25\x89\x67\xfb\x62\x44\x23\x0c\x5a\xbd\x8f\xf6\x45\x17\x6f\x34\xe7\xf7\x15\xe1\xb8\x61\x43\x61\xc7\x57\xb1\x08\x9f\x99\x39\xec\x1c\xb9\x3e\x69\x74\x98\x3f\xc4\x10\xd0\x2d\x87\xcd\x70\xdf\x81\x19\xb6\xde\x2f\x7f\x3c\xd5\x9c\xf9\xb2\xfd\x7d\x4e\x3d\x6a\x91\x5b\x40\x12\x11\x72\x47\x5d\x1b\x1d\x96\xb4\x0c\xe0\x65\x83\x1e\x94\xae\xd2\x38\x1c\xbf\x60\xa5\x6f\xe2\x1d\xdb\xb1\x28\xab\xa5\x26\xee\x13\x47\xb9\xb2\x4a\x44\x87\xb4\xd0\x4b\x2e\x3a\x3a\xb2\x9b\x95\x99\xb3\x23\x85\xa6\x61\x85\x4a\x53\xa3\x65\xb5\xbe\xe2\x10\x09\xef\x50\x8f\x51\xa8\xd4\xf9\x96\x03\x2b\xfd\x32\xe5\x23\x5e\x31\x77\xd3\xc6\x8a\x2c\x18\x49\x0c\x36\xa3\xbf\x32\xfc\xaf\xf8\xba\x1e\x15\xe2\x85\x52\xaf\x16\x44\xe9\xb8\x2f\x29\xbe\x71\xd4\x96\x04\x98\x0e\x45\xc6\x05\x73\x93\x9f\xac\x30\xb7\x93\xfb\x40\x01\x6c\xc4\x5c\x17\xc2\xbb\x3b\xa4\x59\xf7\xa7\x86\x9e\x7a\x66\x0d\x5e\x4a\x85\xb8\x34\x5e\x67\xfc\x24\x9d\x44\x60\x80\xc2\xce\x8c\x30\x5f\xbc\x5f\x9f\xf1\x1b\x49\xb6\xc5\xaa\xa2\x96\x48\xb5\x14\xf8\x7e\xe2\xd9\x34\x64\xe2\x33\xf5\x7a\x5f\x0d\xe0\x0d\x28\x89\xbe\x42\xc0\x21\xe9\xc4\x75\x61\x94\x57\x2e\x3f\xb3\xf9\x62\x2e\x82\x91\x4c\x83\xcc\x18\x79\x74\xa3\x98\x8a\x0b\xa4\xdd\xad\x59\xce\xfc\x25\x4f\x6e\xbd\xda\xf9\x9b\x49\xde\x42\x0e\x8e\xe0\x6b\x8b\x81\x87\xf8\xba\x74\x3c\x14\xeb\xe5\x53\x56\xef\x06\xa9\xb4\x8c\x52\xca\x36\x2d\x5c\x4c\x7f\x7c\x5a\xed\x29\x24\xcf\xf8\x8a\x34\x2b\x26\xd2\x37\x1b\x31\xa5\x40\x39\xb7\x0f\x47\x49\x08\xcb\xfc\x77\x4d\x0a\x02\x98\xce\x2f\x0c\xdc\xaf\x1d\x58\x97\xe4\xcd\x31\x55\xdd\x16\xca\x4b\x28\x2b\x82\x0e\x2e\xfd\x1b\x01\x75\x75\x86\x66\x76\x29\xec\x87\x42\xeb\x70\x92\x4c\x58\xb9\x3c\x90\x9a\x4d\xfa\xc6\xd2\x84\x7c\xac\x7e\x24\x44\xbb\x69\x0a\xc3\x8a\xd2\x2a\x22\x5a\x20\xca\x87\xff\x97\x7c\x76\x59\x9e\xbd\x8b\x86\xe8\x08\xfa\x0b\x58\xa9\x31\x72\xa2\xb1\x6f\xc0\x7f\x44\x32\xeb\xc1\xa0\x73\xdf\x10\x19\xb6\xb3\xc1\x7a\xa1\x7f\xba\x95\x5c\x81\x4d\xf2\x1d\x4d\x65\xa9\x81\xc9\xe4\xcf\x5a\xbd\x4f\x96\xdb\x43\xea\xc9\xb7\xe2\x06\x43\x83\x14\x4e\x21\x91\x4b\x5b\x4d\xdf\x8c\x2e\xfe\x12\xac\x8d\x24\x24\xd2\x8f\xb3\xe7\xfb\x8b\x20\xbb\x08\xbb\x5f\x3f\xbf\x57\x2c\xf9\x7a\xa6\x46\x78\x47\xe5\xa2\xc7\xa1\x30\xc5\x0c\x13\x73\xce\xe1\x73\x72\xac\x48\xec\xa9\x30\xeb\x4f\x88\x8a\xca\x4f\xaa\xcc\x33\x90\x87\x70\x7b\x9e\xf6\xef\x94\xb9\xda\xdb\x67\x3c\x6e\x7f\x6e\xd8\x26\xc3\x6d\xed\xbf\x94\xf2\x99\xe0\x7a\xdd\x78\x97\xed\xe1\x6d\xf4\x64\x82\x69\x12\x97\x44\xf6\x79\xb8\x3d\xd8\xd0\x6a\x96\x14\xc4\xb3\x67\x5f\x6e\x80\x4f\x3e\xae\x5a\x60\x03\x37\x5b\x44\x6d\x81\xf9\x1b\x0f\x1c\x8c\x22\x26\xbb\xbe\xca\x1a\x94\x2a\xe9\x94\xf3\x09\xf8\xe4\x96\x44\x49\x3b\xb6\xcf\x9e\x37\xc4\x7b\x03\x93\x82\x78\x9c\x3f\xa6\x96\x9e\x04\x49\x62\xb1\xc9\x87\x78\x6f\xc9\x2f\x2b\xb5\x1b\xe2\x09\x08\xbf\x87\xc5\xd4\xd0\xcf\x5b\xbd\xa3\xac\xb9\x14\x1e\x70\x58\x1b\xa3\x8b\xe1\x3f\xff\x20\x7f\xb3\x22\x5a\xc2\x7f\xe7\xe6\xff\x01\x00\x00\xff\xff\x11\x72\x9a\x9e\x8f\x06\x00\x00")

func test_certsClientTestuserKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserKey,
		"test_certs/client.testuser.key",
	)
}

func test_certsClientTestuserKey() (*asset, error) {
	bytes, err := test_certsClientTestuserKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x59, 0xad, 0x57, 0x1b, 0x7a, 0xa4, 0x59, 0x61, 0xb1, 0x12, 0xe8, 0xf7, 0xbd, 0xc6, 0x2c, 0xac, 0xdc, 0xe6, 0x7e, 0x3e, 0x9e, 0x62, 0x69, 0xfd, 0xb6, 0xdb, 0xbf, 0x4a, 0xe3, 0x8, 0x7f, 0x9a}}
	return a, nil
}

var _test_certsClientTestuser2Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd4\x49\xaf\xb2\x48\x14\x06\xe0\x3d\xbf\xa2\xf7\xa4\xa3\x70\x51\x71\xd1\x8b\x9a\xd0\x02\x0b\x2c\xe6\x62\x07\xc8\x20\x32\x88\x57\x45\xf8\xf5\x9d\xfb\x75\xd2\x9d\xf4\x77\x96\xcf\x49\xde\x9c\xe4\x24\xef\x9f\x3f\x03\xc9\x81\xda\x7f\x20\xe2\xfa\xd4\xa0\x08\xf8\xe4\x97\x4a\x8c\x52\x0c\x31\x42\xa0\x98\x2b\x30\x51\x08\x2a\xca\xd9\x75\x5f\x8b\xcf\xf7\xfb\x4e\xc7\x36\xcb\x52\x8c\x66\x63\xbd\x5d\x80\x0d\xab\xdb\x58\xdf\xae\x87\xfd\xb4\x86\x80\x7f\x1b\x00\x83\x87\xc4\x5c\x3a\x11\x20\x70\xc8\xb9\x45\xa6\x16\x67\xaa\xfd\xc8\xbb\x7d\x2d\xd4\xea\x63\xf8\xc0\x87\x95\x1d\x42\xc0\x7c\x4c\xec\xb7\x50\x9f\x73\xa6\x1a\x4d\x8a\x20\xe6\x3e\x28\x8c\x69\x3d\x4b\x0c\x83\x2f\xd6\xd0\x8f\xdd\x00\x8d\x2d\x66\xfa\x83\xb6\xff\x63\xf9\xbf\xc6\x50\xf5\x21\x0d\xe0\xff\x84\x0d\x3e\x0a\xfe\x0b\x93\x52\x4c\x3c\x06\xc1\x01\x28\x01\x01\x1f\x66\x5e\x0e\xe1\x72\x39\x86\x4b\x12\xd3\x99\x51\x0a\x69\xf3\xff\xd3\x89\x01\x80\x83\x00\xd7\xc1\xcf\x5e\x42\x95\x85\x00\x27\xe0\xe9\xbf\x2b\x99\x1d\xba\xd0\x89\x51\xc7\xbf\xf3\x70\xf5\xb9\x42\x6b\xf9\xb4\x2a\x02\xcc\x8d\x0d\x77\xed\x78\x7b\xab\x59\xcb\xdc\xc9\xaf\xf1\x7d\xeb\x34\x54\x86\x2f\xd5\x90\xdc\x3e\x57\xbb\x58\xf4\x4e\xcf\x36\x82\xd4\x05\x2b\xfa\xca\x54\x31\x5a\xde\xbb\x6d\x5d\x1e\xda\x8b\x7d\xee\x9d\x5d\xd0\x54\x7c\x27\xa2\x53\x71\x4a\xc6\x03\x6a\xc2\xe6\x1d\x56\x7a\xb6\x94\xb7\x41\x12\x0c\x17\xe3\xea\xbb\x94\x37\xcf\xe5\x51\xf0\x0e\x7a\x5f\xb1\x17\xfa\x0f\x14\x29\x91\x9d\x72\xd5\xf6\x4e\x47\xda\x1c\x33\x65\x4c\x4c\x30\xe7\xc2\xd2\xc6\xe0\x73\x91\x17\xf0\xca\x86\x36\x31\x4c\x09\x9c\x15\x25\x98\xf2\x48\xee\x22\xa8\x6c\xb2\xbc\x54\x45\xb0\x7a\x8c\xe2\x95\xad\xf6\x68\xdb\x9e\xf3\x60\x09\x15\xf9\x84\x62\x63\x17\x2c\x5a\x90\xad\x90\xa9\x6e\xd3\x61\xe2\xee\xa8\xbe\xad\xc8\x92\xce\xba\x9a\xd1\x94\x9d\x9a\x74\x5b\x85\x61\xbf\xe7\x6a\x36\xc4\x0f\x70\xef\x5a\xa7\x4b\x35\x7c\xd5\x76\xea\xed\x66\xaf\x36\xc7\xfd\x6b\x6d\x79\x83\x1b\xef\xbb\x15\x7a\x05\xf2\xed\x05\x5e\xe7\x0d\x1b\xa4\xcb\x57\x63\x6a\xbd\xaf\x2a\x07\x6d\x45\xfa\x4c\xf5\x1c\xf1\x38\x92\x12\xee\x7c\xe1\x43\x4e\x31\xe0\x00\x0e\x73\x3e\x99\x3e\x70\x7e\xde\x78\xe4\x3a\x04\xa5\x4e\x20\x60\x08\xa6\x60\x92\xc8\x24\x70\xe8\xae\x5b\x08\xa6\x09\x55\x82\x5a\x93\x80\x90\x07\x47\x30\xd1\x09\x73\x61\x5a\x43\x42\xeb\x77\x6e\x03\x4e\x4e\x90\x03\x5c\x55\x04\x02\x1c\xde\x19\x22\x07\xdf\xbc\xcd\x12\xaf\xd3\x10\x95\x72\xbd\x68\x4d\xaf\x65\xd7\x72\xbb\x73\x2e\xed\xc6\x24\xe3\x25\x5a\xb5\xb2\xe9\x5a\x7d\xb1\xbd\x4c\xca\x74\x6d\x34\x9a\x9c\xfb\x2c\xe1\xd7\xcc\x4e\x15\xcb\xcb\xd9\x62\x65\x6b\x4f\x2a\x52\x76\x44\x22\xd9\xcf\x45\xd1\x3b\xc5\x6e\x5e\x67\x59\x52\xdd\x03\xc7\x97\x3d\xab\xcb\x46\xd9\x03\xe7\x2c\x85\xed\x0a\x56\x45\x34\xe8\xd5\x52\x3f\xc3\xb2\xc1\x9a\xbe\xe4\xa6\xa6\x9c\xba\xad\x54\x3f\x1f\x96\x83\xb7\x16\xb9\x87\x5f\xd7\x26\x3c\x51\xa1\x47\xdf\x6a\xe2\x1d\x5e\x10\xdb\xef\xc6\x69\xc0\x59\xd0\x06\xf6\x9e\xe8\xa6\xc0\x82\x76\x19\xa7\x49\x06\xf9\xc6\x96\x2b\xd1\x19\xce\x28\x81\xf9\x45\xc1\xa2\xe3\xf5\x57\x44\x2f\xce\xde\x36\xa6\x93\xdb\xd7\xf7\x7b\xbb\xd6\xdf\x1f\x3d\x5d\xe7\x79\xaf\x91\x4c\x29\xce\x43\x1c\x94\xf1\x70\x54\xf7\xe0\x1e\x21\xf7\x2b\x56\xaa\x0b\x56\x2b\x22\xe5\xbd\x35\x0f\x39\xb7\xac\x2b\x78\xdd\xeb\xab\xb3\xc4\x69\xa2\x2d\xe2\xa8\xc3\x47\x14\x46\x8d\xb9\xe3\x79\x5d\x9a\x94\xdf\xdd\xc8\xb5\x1a\x96\x86\xda\x88\x43\xb4\x38\x91\x2f\x0c\x76\x7b\x3e\xa4\xf2\xd5\x1c\xc2\xfe\xb4\x5a\xb5\xd5\x5f\xd2\xaf\x8a\x20\x36\xfe\xbd\x36\xfe\x0e\x00\x00\xff\xff\x24\xe9\x31\x91\x53\x04\x00\x00")

func test_certsClientTestuser2CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Crt,
		"test_certs/client.testuser2.crt",
	)
}

func test_certsClientTestuser2Crt() (*asset, error) {
	bytes, err := test_certsClientTestuser2CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.crt", size: 1107, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6, 0x5d, 0x52, 0x2c, 0x3e, 0x31, 0xd3, 0x52, 0xfd, 0x7f, 0x7e, 0x41, 0xf2, 0x8b, 0x23, 0x8b, 0xe9, 0x8d, 0xa0, 0xc7, 0x68, 0xa3, 0x4, 0xe, 0x1e, 0x15, 0xf9, 0xcb, 0xac, 0x71, 0x9b, 0x84}}
	return a, nil
}

var _test_certsClientTestuser2Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x0e\xab\x6a\x16\x86\xe1\x9e\xab\xd8\x3d\x1a\x11\x0c\x18\x8a\x53\xfc\x04\x93\x73\xa6\x23\x99\x9c\x4d\xbc\xfa\xd1\xd9\xd3\xce\x6a\x57\xf3\x14\x9f\xf4\xfe\xe7\xdf\x63\x05\x51\x36\xfe\x38\x2e\xf8\x63\x39\x72\x00\x3c\xe1\x8f\x2a\xc4\x7f\x3f\x90\x2e\xcb\xc2\x0c\x64\x16\x00\x95\x03\xb6\x00\x7e\xde\x51\xc1\xba\x38\x04\x66\xc4\x0d\xf6\x96\x07\xc8\xd5\xb0\xea\x73\xf5\x38\x07\x74\x27\xfa\x38\xa8\xe9\x32\x6a\x8b\xc2\xb6\x99\x37\xd1\x4c\x41\x66\x2b\xc3\xec\x8e\x7f\x9c\x31\xc7\x87\x28\x1e\xcd\x51\x27\x63\xa1\x2e\xf5\x72\xac\x14\x9c\xe7\x9e\xe3\x4d\xd5\x5f\xb1\x2f\x0c\x6b\x34\xdf\x7e\x5b\xd9\xef\x38\xd4\x4a\x2d\x59\x44\xae\x0d\xda\x03\x0a\x2a\x3a\x7b\xbe\xdd\x14\xeb\x7c\xb9\x20\xdb\x17\x26\x7f\xcf\x5a\xda\x03\xeb\xbe\x22\x37\xf0\x56\x2e\xc4\x42\x23\xb5\x71\xc3\xd5\x24\xb9\x95\x32\x6c\x49\x14\x70\xe7\xb1\x4a\x2c\xfe\x55\xc0\x0f\x04\xf6\x6c\xea\x93\x8f\x02\x2c\x0c\xf3\xcf\x3c\x84\x87\x90\xc5\xc8\x2c\xff\xe2\xb1\x8f\xac\x4b\xbc\x67\x08\xc3\x51\xbd\x95\xfb\x4f\x80\xc1\x1a\x17\x7d\xde\xfe\x43\xf8\x19\xc2\x29\x38\x95\x4e\x27\x64\x3b\x0b\x7e\xa8\xa1\x6a\xd1\x78\x26\xa7\xba\xd6\xa6\x54\x15\x04\x23\x63\xe3\xd9\x14\xad\x60\x1e\x7a\x73\x48\x09\xbe\x21\xde\x78\xd7\x19\x08\x29\x31\x3b\xaa\xba\x93\x13\x31\x03\xc2\xed\x3e\x0c\x75\x3b\xd8\x2d\x52\x9f\x8a\x57\xab\x10\xa3\x87\x63\x22\x81\x08\x63\x86\xbb\x66\xbc\x4a\xc2\x97\x7d\x7b\xb1\xc7\xda\x32\x0f\x6c\xc0\x82\x49\x66\x81\xf8\xd3\xe4\xdf\xcc\xf9\x67\x38\xbf\xa5\x58\x87\x7a\x13\x0c\x32\x15\x94\x70\x76\xf1\x47\xc7\x3b\x20\xf3\x49\xc6\x33\x2e\x09\xa7\xe2\x9b\xe6\x68\x57\x4f\x9c\xa8\x0f\x8a\x69\xbf\xbe\x67\x78\x71\x48\xc9\xf6\x87\x4e\xa7\x8b\xf9\xe9\xe9\x57\x40\x43\xa3\x54\x1b\x6d\x19\x74\x85\xfb\xae\x04\x53\x71\x3c\x9a\xea\xb9\x4e\x6e\x5b\xf2\x89\x60\xfc\xe3\x70\x72\xbd\xe6\xf8\xee\x0e\xe1\x29\xc6\x27\x76\xca\x6f\xbb\x69\x4c\x6a\xb8\xda\x52\xf8\x5d\x9a\x06\xc1\x5d\xf4\xfd\x02\xcc\xba\x42\x2b\x79\xaa\x26\x29\xcb\xe3\x10\x80\xeb\x3f\xb1\x51\xb5\x69\x7c\x0b\x4f\x3e\x2f\x03\x83\x08\x88\xcd\x30\x66\xd5\x08\x2e\xed\x2d\x0f\xc7\xbf\x1c\xbc\x04\xd8\xe8\x43\xb7\x69\x6e\xbb\x11\x2d\x75\x94\xd4\x1d\x7d\x2b\xc3\x19\xcc\x41\x29\xe6\x1f\x44\x19\x95\x46\x45\xbe\xcd\x00\x97\x72\xa8\x35\x71\xe0\x4a\x77\xb4\xd7\x89\x5f\xf0\x0e\x8f\x33\xce\x20\x3a\xd9\x3d\x42\xf2\x0d\xee\x55\x35\x3c\x54\x55\x8b\x2a\xd5\x95\x43\xb1\xec\x9d\xca\x7b\x0d\x93\xb2\x1a\xf8\xe6\xf9\xdb\x40\xb8\x18\x83\xf4\xe1\xad\x9b\xac\x17\xf7\x50\xec\x59\xe3\x32\x38\x43\xd9\x11\x25\x2b\x88\xc5\x2a\x8a\x30\x05\xae\x8a\x05\xf0\x0a\x25\xa6\xd8\x2c\xd0\x8d\xbb\x3c\xf1\x54\x19\x52\x27\x27\xc9\x78\xc2\xa3\xec\xa7\x20\xa6\x1f\xbc\x72\x98\xb5\xf1\x9b\xda\xf2\x11\xfd\x12\x5c\x91\x81\x25\xc8\x9c\x0f\xda\xcf\x34\xb1\x2f\x01\xa6\x02\x6c\x4f\xf2\xe6\x44\xb7\xc4\xee\x0e\xc7\x45\x98\x5f\xae\x12\x5e\x51\x16\xab\x37\xb4\x5d\x32\xbf\xb4\x8a\xb2\x48\x90\xa8\x54\xb3\xda\xe1\xaa\x7b\x64\x09\xf1\x25\xba\x23\x8b\x69\xe9\x47\x42\x7d\xc4\x43\xc9\x44\x7e\xd5\xc1\x01\xb7\x88\x9d\xd9\xef\x7b\xf8\x49\xfc\x79\xd4\x4d\x19\x36\x9c\xbe\x34\xe3\xe8\x9d\x78\x28\x75\xe8\x5f\x31\x9a\xa8\x04\xc4\x61\x0d\xae\x32\xe0\x35\x93\x92\xea\x6e\x49\xd0\x69\xf0\x6f\xcd\x7f\x97\x1f\x47\x38\xcb\x3d\x4c\xaa\xc1\xeb\xf2\xee\xe5\x85\xb2\x3f\x8e\x64\xb8\x64\x24\xe9\xcd\xea\x73\x6e\x6d\xf2\x75\x75\xae\x10\x0e\xf2\xbe\xc8\x24\xe3\x57\x01\x0a\x97\xa9\xab\x6c\x03\xab\xfc\x1e\x77\x58\x52\x9c\x50\x8c\xf2\x63\x17\x02\xc3\x00\xde\xee\x39\x94\x12\xf0\x8c\xd9\x06\xe1\x78\xc9\x4c\x3f\xb7\xaf\xc6\x73\x30\xc8\x7f\x14\x2e\x98\x91\x30\xc0\xaa\xe4\xa9\x79\x6b\x5d\xd8\x49\x32\x56\x49\x76\xe6\x6f\x68\x0d\xaf\xd7\xc8\x47\x3e\xd9\xfd\x25\x1f\xc3\x75\x78\x0e\xaa\xcb\x88\x25\xb6\x29\x62\x49\xb7\xe1\x40\x63\x1a\x95\x73\x6f\xee\x99\xdb\xa4\x19\x77\x65\xe5\xa0\x5b\xa7\xbb\xaa\x41\x57\xcb\x16\x36\x70\xce\xc7\x3c\xf5\x3c\x56\xf4\x6b\xdc\x24\x74\x37\xbd\x3e\x0b\xe3\x36\xcb\x3c\xfa\x66\x55\xfe\xe7\x41\x8d\xfe\xa3\xeb\xb6\x96\x85\xe7\x72\x53\x7d\xf6\x50\x32\x42\x92\x64\xab\x97\x79\x4e\x96\xf5\xb5\x9f\xae\x35\x66\x52\x9b\xa1\x20\x49\x69\xe4\xe5\x01\x7e\x36\xba\x4d\x81\x73\xf3\xf6\x3f\xf7\xa1\x42\xa9\x6b\xe8\x9b\x95\xfb\xd2\x34\x4d\x8c\x1a\x96\xb3\x8f\x86\xc5\xeb\x7f\xbb\x58\xb8\x8c\xc0\x4c\xc9\xe1\xfc\x04\x21\xfc\xe3\x7c\xb3\xa4\x08\x87\x81\xdb\x86\x5f\x1c\xf9\xcc\x93\xb0\x8b\x03\xe4\x37\x38\xa1\xca\x2d\xf9\xfe\x12\x1d\x4e\x33\x7a\xc6\x3e\x0b\xe5\xb3\xad\x54\xdc\x69\x7c\x1f\x36\xf1\xbd\x13\xaa\xc0\x64\xd1\xae\x44\x0d\x3d\xcd\x7b\x2f\xb5\x24\x7c\x66\x84\xa0\xa4\xef\xbc\x8d\xd0\x32\xcf\x77\x0f\xcc\x55\xcc\x95\x17\x69\xdf\x55\x84\xfd\xd8\x07\x99\xaf\x93\x3b\x36\x3d\x56\x8d\x53\xfb\xa9\xcf\x99\x54\xad\xea\xbc\x51\x60\x14\x12\x53\x0b\x9b\x2b\x93\x06\x47\xe6\xc4\x4c\xbf\x21\x41\x29\xe7\x35\xff\x97\x0c\x82\xba\xda\x12\x94\xa2\x77\xbc\x34\x09\xb0\xf7\x3b\x91\x70\x64\x77\x85\x71\x90\x85\x95\xf1\xc6\x83\xbb\x7a\xb5\x61\xc8\xef\x46\x3a\xc0\x72\x9c\x0b\x49\x92\x05\x10\xcf\x16\x26\x3e\x89\x00\x36\x50\xec\x84\x59\x59\xf4\x2c\xaa\xe6\xc5\x75\xf2\x13\x2d\xfd\x1e\x06\xd0\x75\xa7\x40\xb5\x3e\xa3\xc1\x51\x53\x5d\x78\x9b\x42\x13\x2d\xb9\xad\x60\x7c\xe4\x55\x56\x0d\xcd\x8a\xff\x9d\x72\xe6\x7a\x87\x63\x99\x17\x33\x2d\xf1\x4a\x6a\x6e\x15\x9e\x8d\x71\x12\xc3\x79\x41\xd3\x8d\x39\x83\x43\xef\x35\xbe\xca\x5a\xdb\x66\x53\xf2\xc9\xce\x7f\xfe\x81\xfe\x66\x45\x30\xf8\xff\x9f\x9b\xff\x06\x00\x00\xff\xff\x3f\xfd\x30\xca\x8f\x06\x00\x00")

func test_certsClientTestuser2KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Key,
		"test_certs/client.testuser2.key",
	)
}

func test_certsClientTestuser2Key() (*asset, error) {
	bytes, err := test_certsClientTestuser2KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x90, 0xd7, 0x9, 0x37, 0x9b, 0x4b, 0x84, 0xd7, 0x9b, 0x46, 0xe4, 0x65, 0x80, 0xd2, 0xab, 0x8a, 0xf0, 0x8e, 0xc3, 0xa6, 0x9c, 0x9, 0xb3, 0x40, 0x7f, 0xe8, 0x61, 0x46, 0x65, 0xc0, 0xc, 0xbd}}
	return a, nil
}

var _test_certsNodeCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xcb\xee\xba\x56\x14\x85\xe7\x3c\x45\xe7\xa4\x11\xe1\x87\xc8\xa0\x83\x7d\x2e\xdc\xf4\x00\x07\x41\x84\x19\x37\x8f\xe2\x05\x01\x15\xf5\xe9\x1b\xff\x4d\xda\xa4\xed\x1e\x7e\x83\x95\xec\xac\x2f\xeb\xf7\xef\x21\x6a\xbb\xfe\x6f\x98\x46\xb1\x6b\xb9\x18\x62\xfa\x8b\x4a\xcc\x75\x09\x27\x18\xc3\xf1\x28\x60\x72\x11\x08\x97\x7b\x81\x31\x0d\x5e\xaa\x1c\x8b\x28\xee\x6d\x91\x44\x84\x56\xcb\x0f\xf8\x48\x9c\xfa\xc3\xe9\x68\x9b\x93\x82\x80\x8f\x16\x10\x18\x24\x16\xb9\x13\x85\x8c\x6c\x39\x5f\xd1\xe9\x4c\x4a\xd5\x1f\xaa\x8b\x79\xc8\x54\xf1\xb2\x62\x88\x91\xf0\xb7\x08\x58\x4c\xa8\xff\xcc\xd4\xfb\xbb\x54\xad\xb6\xc0\x88\xf0\x18\x1a\x6b\x52\xde\x12\x23\xa0\xb1\xd6\x7d\xf9\x2d\xfc\xb0\x8f\x55\x7c\xa1\x1f\x7f\x59\xf5\x37\x63\x98\xbd\x68\x0b\xfc\xaf\xb0\x2e\xc6\xc9\x3f\x61\x52\x41\xa8\xcf\x60\xb4\x61\x9e\x50\x78\x31\x5a\x5e\xcc\x53\x1e\x63\x0c\x1b\x77\x22\x3c\xf3\x56\x5d\xee\x1e\x9e\x95\x0f\x9c\x22\xc4\x81\x08\x41\x43\xf8\xbe\xcc\x3b\x2c\x04\x45\x12\xb0\x40\x3d\xd5\xbb\xc5\x25\x06\xfd\xb1\x7d\xeb\x34\x42\xfa\x14\xda\xda\x7b\xc5\xeb\x3b\x86\x9f\xfa\x65\xc6\x93\xb7\xfa\x31\x76\xfb\x76\x6e\x36\xe8\x9d\x2d\xd9\xcf\xcd\x79\xed\xab\x66\x52\xc7\x26\x91\x76\xaa\x48\x1e\xce\xb5\x58\xb8\xae\x31\x7b\x2d\x7e\xa8\x1e\xa2\x48\xd7\xa3\x97\x5e\xc5\x67\xae\x1a\x2c\x97\x93\xb7\x90\x3d\xb9\x08\x15\x99\x5e\xc4\x15\x71\xb0\x82\x79\x78\x52\x1b\xe7\xe8\x76\x5c\x1a\xf2\x63\x9d\xd4\xc7\x03\x16\xfe\x62\x97\x68\x89\x7a\x08\xf6\x0b\x8c\x62\xd6\x10\x8c\xb3\xa6\x7b\xb2\xf9\x43\x28\xd1\x90\xa4\x77\x83\x95\x9b\xe3\x35\x74\xce\x41\x32\x28\xae\x3c\x87\x99\x5a\xde\x25\xf7\x18\xac\x8f\x8e\x19\x91\xa5\x55\x75\x95\xed\xeb\xac\x10\x2f\x8a\x34\x3a\x2b\xe6\x43\xbf\xee\x13\x1c\x22\x66\x1c\xb7\x25\x99\xdf\x66\xdd\xa5\x4d\x6f\x7d\xc5\xa6\x20\x50\xbd\x4c\x9e\x45\x63\x2f\xa1\xf3\xcb\x55\x56\x72\xb6\x8d\x93\xc7\x85\xcb\x7d\xf1\xe1\xcb\x29\x1a\x66\xde\xed\xcd\x15\x7f\xf8\xb4\xb6\xbf\x24\x9c\x3e\xb6\x03\x3c\x2f\x41\xa3\x23\x2f\xd7\x5c\x5f\xb1\x7b\xe5\xf3\x42\xef\x77\x25\x4d\x72\x3a\x78\xc3\x2c\x9d\x54\x73\x61\x9a\x96\xa3\x8e\xeb\xd3\x35\x5b\x62\x98\x28\x40\xe1\x77\xcc\xce\x26\x22\x32\xb2\x8d\x94\x10\xb8\x33\x43\xc0\x09\x88\x54\x30\xa4\x7c\x9b\xab\x25\x8f\xf3\x94\x21\x6e\x63\x3c\xda\xc0\x13\x0b\x4d\x0c\x21\x21\x06\x24\xa8\x85\x78\x45\xa0\x85\xf9\xb7\x7f\x27\xa2\x74\xdd\xc2\x28\xc4\x79\x2c\x55\xff\x50\xda\x87\x67\xa5\x6d\xb0\x84\xde\xdd\xa3\xb4\xcd\x36\x4b\xdf\x0e\x72\x96\x00\x60\x3b\x14\xfe\xef\xe8\xbf\xbd\x58\x7f\xbd\x90\xbe\x32\x80\x13\x79\x6c\x17\x28\xe5\x79\xb5\xbc\xad\x0c\x3f\x8d\x26\x35\xb0\x9a\xa7\xb5\xd6\x75\x8d\xe4\x71\xbb\x9e\xca\xf1\xcc\x59\xb8\x43\xb3\xc5\x32\x8b\x6e\xf1\x66\x96\xd3\x56\xeb\xa3\x54\x97\xba\xe1\x16\x54\xad\x16\x7c\x9e\xd7\x5e\x6f\x2c\x6a\x73\x77\x57\xa4\xcb\x1f\x6d\x33\x3c\xcf\x38\xbf\x16\xe7\x73\xe8\xe7\x53\x23\x4f\xa7\x5c\x44\x85\x10\x03\x40\xb4\x50\xe1\x3e\xbd\xe7\x24\xb4\x4d\x49\x57\x3e\xf5\xf9\x7a\x8a\xe2\xc0\x43\xbe\xf1\x3c\xcc\xf4\x3a\x1a\x9f\x7a\x5d\x94\x3b\x67\xdb\x5e\x9d\x61\x2c\xf6\x57\x47\x3b\x5d\xe7\x9a\x91\x3e\xfc\xcb\x7a\x9f\x6f\x37\x38\xee\xef\x7a\xbd\xe2\x49\x86\xa5\x80\xd4\xae\xf3\x94\x03\x71\xba\xc0\x86\xa6\xeb\x4c\x09\xa6\x66\x23\x76\x71\x75\xd7\x41\x96\xf7\xc1\xe8\xac\xef\x99\xf7\x59\x38\xcb\x79\x53\x71\x7f\xb7\xd5\x83\xeb\xde\x75\x51\x9b\xe5\x3f\xf2\x67\x92\x90\xaf\x0f\x74\xff\xf8\x8c\xc3\xe9\xdc\x2c\x66\xb8\xde\x28\x5d\x6f\x2c\xfc\x43\x2c\xc2\xbe\x8b\x76\x91\x61\x86\xdb\xc3\xfd\xbe\x7e\x9e\x60\xbc\xec\xd6\xa5\x6d\x68\xc5\xe2\xda\x7c\xba\xc1\xf0\xc8\xf6\x21\x8d\x43\x33\x52\x53\x34\x78\x53\x1d\x09\x13\x41\x7d\x68\x83\xbc\x33\x2b\xaf\x52\xfe\x90\x7e\x6d\x0e\xf5\xc9\x7f\x77\xe8\xcf\x00\x00\x00\xff\xff\x68\x37\xc3\x41\xa4\x04\x00\x00")

func test_certsNodeCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeCrt,
		"test_certs/node.crt",
	)
}

func test_certsNodeCrt() (*asset, error) {
	bytes, err := test_certsNodeCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.crt", size: 1188, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf5, 0x83, 0x83, 0x2a, 0x1f, 0xe5, 0xbe, 0x4f, 0xcc, 0x75, 0x53, 0xfd, 0x1c, 0xfb, 0x70, 0x37, 0x18, 0xf0, 0x91, 0xa4, 0x71, 0xd4, 0x5e, 0x29, 0xcf, 0x5d, 0x32, 0x6b, 0x43, 0xed, 0x93, 0x6f}}
	return a, nil
}

var _test_certsNodeKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\xb9\x12\x6c\xea\x02\x46\x73\x4f\xb1\x73\x75\xcb\xdc\x08\x4e\x80\x5f\xf3\xd3\xb4\x99\x96\xd1\xda\x3c\xcf\x3c\xfd\xad\xb3\xe3\xf3\xa5\x5f\xb2\x6a\x25\xeb\x7f\xff\x4e\x94\x15\x68\xfe\x71\x5c\xe1\x8f\xe5\xc0\x40\xf0\xe4\x3f\xba\xfc\xf9\xfb\x20\x06\x84\xf2\x28\x40\x51\x10\x74\x49\xb0\x65\xe1\x60\x13\x87\xc8\xa7\xd8\x00\x1d\x13\xbd\x1a\x47\x56\x7b\x81\x4b\x73\x38\x8a\x24\x0e\x41\x49\xa9\x84\x25\x34\x73\xbd\x66\xa8\x15\x11\xb4\xaa\x21\xf5\x71\x57\x4d\xfe\xe4\x4f\x16\x24\x27\xe3\xe4\x89\xe8\xd2\xbf\x6c\x1e\x8a\x7a\xc7\xd4\xb9\xf0\x1a\xee\xa9\xf6\xad\xaa\xb6\xe7\x3b\x00\xe9\x72\xf6\x8c\xa7\x03\xba\x67\x06\xcc\xa3\xdd\x44\xfa\x22\x4f\x41\xf0\x59\x1f\xf5\x62\xfa\x07\xab\x52\x5a\x3b\x8d\x70\x48\x5d\xd6\x05\x6a\xcc\xbc\xcc\x4b\x64\x06\x1b\xe0\xd3\x38\x69\x03\x6a\xe5\xa3\xe2\xee\xf0\x01\x1c\x65\x75\x12\x6a\x39\x57\x5d\xff\x22\xdc\xcf\x67\xdc\xdd\xae\x59\x1f\x60\xf1\x86\x57\x90\xde\x60\x4e\xc8\xd6\x11\x5c\xe5\xf1\xa1\x9a\x73\x02\xb2\xad\x7e\x3d\x7e\x0e\xb7\x61\x1b\x6d\xc8\xc9\xf7\xa6\x05\x8b\x15\xf6\x68\x95\x98\x09\xd2\x8d\xc7\x2d\xd0\xec\xa7\xad\x59\x5e\xb9\x06\x25\x92\x6b\x7b\x66\xca\xc0\x74\x1f\x31\x78\x8c\xb3\x09\x6e\x51\xd9\xb9\xae\xd7\x80\x4d\xee\x6f\xe3\x43\x1d\xa6\xe0\x32\xe1\x22\xa1\x1f\x86\x6d\x64\xa4\xed\xbf\x05\x65\x27\xb3\x67\xc9\xea\x4b\xbb\x01\x93\x2c\xdd\xce\xa7\x20\xa5\x66\x0a\xf7\xf3\xe4\xd8\xdc\xac\x3e\x20\x10\x6c\x41\x14\x06\x28\x0a\x62\xf3\xed\x57\x14\x25\x4c\xc3\x70\x6c\xe2\x44\xe6\x0f\xf6\xe9\xa9\xa1\xf9\xb0\xcd\xad\xf4\x8f\x94\x96\x7c\x40\xdb\xd7\x95\xb2\x54\x14\xf9\x21\x1c\x74\x3c\x35\x5c\x23\x39\x5a\xd5\x05\xbd\x18\xb9\xcf\x29\xce\x8a\x4f\x33\x44\x13\x97\x14\xfa\x86\x48\x5f\x5c\xe9\x96\x57\x33\x85\xe2\x00\xb3\xd7\x66\xee\xaf\xd7\x83\x09\x0c\x22\x3b\xe5\x3d\x9c\x57\x39\xed\x58\xcb\xb2\x27\x6d\x4e\x38\x0c\x7c\x25\x66\x35\x3d\x53\xd6\x84\x9c\x7e\x2e\xbb\xf5\xf1\x91\x7e\x9c\x0e\xd1\xc4\x20\x6b\x95\xd7\xed\x15\x2c\x15\x46\x49\xed\xad\xcf\xd7\x4f\x7c\xc6\x24\x99\x96\xf4\x99\xad\x1f\xd6\xad\x57\x97\x3b\x89\xed\xfd\x25\x5a\x57\xf3\x13\x25\x96\xc6\xcc\x56\x85\x0b\xd1\x46\xa1\xcd\xdc\x82\xc3\xe4\xfb\xb0\xad\xfb\xfe\x69\x93\xf1\x39\x5b\xd0\x86\xd3\xc0\x3d\x99\xe3\xaa\xd8\x4f\xf4\x36\x99\x47\xc2\xcb\x3f\x87\x30\x8e\x29\x48\x67\x5c\x3e\xf0\xad\xbf\xa9\x17\xa6\x20\x24\xa0\x1a\xd2\xd4\x9e\xe1\x56\x98\xe9\x06\xf9\x3d\xac\x0c\x3a\xd7\x47\x6e\xca\x51\xbf\xcb\xb9\xb1\x78\x17\x55\x7b\xef\x33\xd0\x59\x1c\x6f\xef\x24\x70\x67\x6e\x93\x13\x59\x6e\x58\x0b\x54\x2a\x82\x9b\x1f\x23\xd2\x64\xa9\xf8\xc8\xc2\x09\xd2\x51\x09\x02\xbc\x6c\xe5\xdd\x7c\x5c\xa4\xb8\xbd\x99\x24\x65\x68\xb3\x5a\x71\x1a\x7f\x6d\x70\x93\x86\xe2\x51\xe2\xf6\x70\xdd\x56\x9f\xdd\xad\x22\x67\x08\xf7\x6b\x2b\x2c\xce\x73\x3c\xf2\xab\x5b\x85\xe7\x6d\x82\xc2\xff\xe5\xa4\x47\xfe\x6a\xd3\x5d\x27\xc5\x67\x02\xed\x6d\x86\x17\x7a\xea\xd1\x72\xb8\xc9\x67\xec\x19\x6a\xc6\xdc\xf2\x59\x6f\xea\xf4\x46\x04\x8d\x0e\xa5\xb7\xa9\x61\x0e\x5c\x8f\x45\xba\xd1\x71\x0b\xbb\x43\xe2\x98\xf8\xb0\x35\x25\xe6\xab\x27\x9f\x6a\xf6\xcf\xe3\x97\x39\x83\x41\x7d\x8b\xe9\x08\x3f\xd7\xf7\x2f\x31\x46\x54\x26\xf2\x28\xd2\x67\x83\xa1\x7e\xbb\x74\xec\x69\xa6\x6b\x1e\xa6\xd7\xb4\x13\x92\xc2\x0e\x61\xaf\xdc\x17\x7b\x01\xbd\xc5\x2d\xfa\x2a\x03\x39\xb9\xde\x0b\x3f\x63\x4b\x47\xf8\xb8\x7e\x5a\xbe\xb8\x76\x35\x12\x2f\x3e\x8f\xda\x53\x90\x6b\xfa\xcc\x5f\x8a\x1a\xd9\x24\xc0\xe4\x77\x34\x29\xfc\xd1\xeb\xcb\x42\x02\xdf\x78\x06\x03\x64\xb2\xda\xbb\x3b\x60\x5e\x0f\x08\x06\x5c\x0b\x81\x70\x72\xb8\x85\x0a\x48\x0b\x32\xa9\x37\xfc\x5f\x17\xc2\x10\xe5\xb4\x47\x48\x44\x2b\xb5\x5c\x03\x6b\xb1\xd9\x54\xfc\x9c\xb7\x96\x44\x38\xd1\xfc\x45\x6e\x50\x32\x14\xc3\x4b\x38\xea\x94\x5e\x2e\x94\xd9\x24\x8a\x47\xf2\xde\x05\x8f\x65\x79\xe7\xec\x1e\x03\x52\xbc\x2a\x2a\xa7\x88\xa9\xc4\xc4\xe6\x54\xbc\x62\xe4\x1f\x05\x60\xab\x38\xbd\xf7\x2c\xa8\x48\x14\x42\x85\x31\xa6\x90\x8a\x22\x88\x9d\x66\xd6\xad\x0c\xb2\xdb\xce\xf4\x9b\x87\x77\x67\x07\x21\xaa\xac\x82\xdd\x99\x58\xae\x1c\x6d\x99\x82\xa2\x1e\x7f\x6f\x2e\xfa\xf0\x27\xdc\x72\x95\x0a\x5d\x55\x61\x37\x21\x0d\x9e\x5f\xf7\xa2\x2d\x87\xb7\x27\x00\x04\x84\xfc\x5c\x6e\x95\x9a\x0e\x1d\xc8\xca\x0b\x5b\x84\xd6\xb7\x4a\xc9\xfd\xd7\xb2\x20\xf4\x63\x56\xd6\x56\xd5\xef\x8d\x85\x89\x49\xf9\xe4\xf7\x4d\x29\x83\x73\x0e\xb9\xfc\x70\xf0\xd2\x38\xd6\x79\x40\x44\x86\x08\xcd\x11\x17\x1e\x50\x33\x30\x40\x2f\xaf\xd3\x97\x29\xca\x7f\x71\x69\xf0\x43\x37\x78\x76\xd3\xab\x23\x97\x84\x96\x93\xaf\xaa\x51\xc9\xdc\x8b\x18\x24\x7f\x7e\xe9\xa9\xfb\x94\x85\x56\x8a\x64\x1d\xc1\xc9\x5c\x1a\xed\x68\x3f\x0f\xb8\xc6\xd5\x3b\xee\x38\x81\xb7\xa9\x90\x6c\x50\xa9\xa3\x97\x36\x2c\xa4\x94\x69\xec\x15\x1d\xe3\xd9\xa9\xdd\xf6\xeb\xc7\xcd\x45\xf6\xfd\xb6\x1a\x6f\x52\x42\x1c\xdd\x04\x93\xad\x8b\x85\x2d\x09\xac\x53\xaa\x07\x7c\x10\xe3\xe0\x38\xf0\xe1\x90\x51\x4c\x4b\x4e\xdc\x90\x5e\x09\xbf\x67\xdc\x06\x1d\xeb\x97\xfa\x4f\xc2\x28\xd1\x3f\x6c\x0a\x8a\xf7\x60\x26\x08\x1e\x4a\x87\xbc\xf8\xf7\x2b\x24\xbc\x2c\xda\x75\xe7\x2a\x50\xc7\xe3\x7e\xdf\xa6\x48\x74\xd1\x27\xdd\x27\x3f\xbc\x22\x80\xd7\xed\xf6\xca\xcf\x53\x78\x90\xaf\xd6\x39\x24\xe9\x3b\xfa\xfd\x2d\x9e\x32\x32\xe7\x51\x1f\x92\xdb\x74\x0b\xd7\xd3\x20\xb4\x3a\x0a\x4b\x37\xbd\xbe\x1e\xcc\xa9\x2e\xe5\xbb\xc0\x6a\x16\xf8\xd8\x12\xf4\x89\xa2\x83\x13\xbf\x82\x95\x76\x18\xbe\xf8\xe7\x1f\xe4\x6f\x56\x64\x13\xfc\x77\x6e\xfe\x1f\x00\x00\xff\xff\x00\x39\x0e\x8a\x8f\x06\x00\x00")

func test_certsNodeKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeKey,
		"test_certs/node.key",
	)
}

func test_certsNodeKey() (*asset, error) {
	bytes, err := test_certsNodeKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6f, 0xa4, 0xd0, 0xe3, 0xff, 0xb8, 0xb6, 0x55, 0x1, 0xb8, 0xb1, 0x9b, 0xe9, 0x67, 0xdb, 0x77, 0xee, 0x91, 0x4d, 0x38, 0xe0, 0x28, 0xbc, 0xbe, 0x5d, 0xbb, 0x9a, 0xad, 0x9d, 0xcf, 0x3a, 0x8a}}
	return a, nil
}

var _test_certsMtCaClientTenantCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xbb\xb2\xb2\x48\x1b\x85\x73\xae\xe2\xcf\xa9\xbf\x70\xe3\x06\x21\x98\xa0\x69\x1a\xe4\xd0\x40\x23\x07\x31\x03\xc4\x46\x10\x39\x88\x36\x70\xf5\x53\x7b\x07\x5f\x30\x33\x6f\xf8\x04\xab\xde\xaa\xb5\xea\xf9\xff\xcf\x69\xc8\xb4\xbc\xff\x41\x14\x46\x96\x61\x41\x10\xa1\x5f\xca\x61\xcb\xd2\xb5\x0d\x42\x50\xf1\x14\x30\x4b\x03\xd4\x0a\x81\x0f\x23\x8f\x57\x2a\xf1\xd8\xef\x94\x41\xe2\x1b\xf8\x95\xca\x62\xcb\x74\x92\xd9\x4e\x7f\xb1\xea\x4f\xe9\x01\x82\x5c\x8d\x00\xc6\x39\x1b\x3a\x61\x0d\x98\xe0\x2b\x46\xb0\xc6\x36\x11\xd5\x26\xdf\xdb\x9f\x2c\xf5\x7a\x1c\xc6\x0c\xb1\x4c\x4f\x08\xd1\x11\x5b\xf4\x42\xf4\xa6\xb2\x53\xeb\x4c\xa4\x94\xec\x10\x3b\xd6\xa5\xc7\xe1\x06\x30\x6f\xb3\x56\x1c\x65\xcc\xd7\xf1\x9a\xd6\xa5\x87\xb7\x1f\x86\x97\x3f\xac\x01\x13\x0e\x2d\x86\xc0\x6f\x98\x83\xd8\xe3\x4f\x18\x97\x89\x74\x31\x22\x10\x69\xd4\x4b\x34\x80\x23\x1d\x79\x9f\x4c\x9c\xd7\x42\x34\x9a\x1c\x6a\x3a\x89\x20\x04\x27\xeb\x9f\xef\x6b\x1a\x01\x3a\xa5\x28\xe0\x80\x0e\x21\x20\x3d\xa4\x14\x69\xc0\x1d\x37\xde\x4e\x13\x61\xe8\xf3\xa2\x1b\x65\xe1\xfa\x4d\x23\x93\x79\xd3\x45\x59\x4d\x85\x55\xef\x77\xd9\x2f\xfb\x3a\x7f\xb7\xa3\x5e\xa8\xd3\xc6\x68\x49\xb9\x5b\x14\x87\xf7\x78\x5a\xce\x82\x77\x43\xda\xe5\xe0\x1e\xcf\x70\x93\xfd\x17\xcf\x0f\xaa\x78\xa8\x50\x50\xac\xb2\x59\x9a\x87\xd1\x4c\xdb\x8e\x2a\xc3\x36\x2e\xdb\xfc\xca\x3d\x9f\xac\x3b\x23\xf2\x03\x6e\x89\x32\xf9\xa3\x4a\x8d\xd5\x77\x1b\x4f\xa6\x31\x58\x8c\xd3\x45\x7f\xaa\xc3\xbd\x10\xc8\x7c\xfa\x66\x80\x00\x41\xf2\xf3\x4e\x3a\xaa\xdd\x24\x90\xf9\x59\x88\xf8\xe0\x61\x82\xee\xc5\xa4\xdc\x65\xce\xf5\x02\xac\xcd\xc1\xe3\x5d\xb9\x15\x9f\x7f\x21\xec\xa3\xc3\x39\xff\x52\x66\xb8\xd5\x4a\xdc\xed\x77\x5b\x67\x27\xb4\x97\x84\xdb\xdc\xc5\x75\xe1\x1c\xea\x11\xbf\x3d\x06\x52\x77\x9f\x02\x53\x5a\xb9\xa1\x32\x49\x1d\x3d\x05\x44\x9a\xcf\xf1\x72\xb5\x8d\xb3\x7c\x4d\xe7\x5b\xed\xfa\xcf\xac\x22\x07\xc9\xc9\xa0\x4b\xd3\x54\x5c\xa2\x3a\x1c\x78\xe9\xd3\x56\xf3\x93\x67\xf2\x23\xf7\xae\x62\x6f\xf2\x37\xee\xae\x0a\xe5\xfe\xd2\xbb\xb2\xb6\x8d\xc7\x76\x57\x5f\x9c\x95\x48\xe2\x56\x91\x4d\x78\x81\x37\xca\x49\xf3\x82\x80\x21\x00\x72\xdc\x61\x48\x98\x4e\x33\x3d\x09\x77\x01\x20\x47\x41\x03\x44\xe7\x00\x75\x5b\xac\x59\x3f\x43\xba\x22\x86\x34\x81\x11\x0b\x83\x4c\x03\x37\x05\x02\x82\xfe\x6b\x7d\xfa\x6f\x63\xa6\x61\x0e\xa2\x64\x73\xa8\xce\x14\x19\x47\xce\xb9\xe5\x8f\x65\x30\x0d\x9f\x3a\x59\xb4\xf5\xcb\x2f\x5e\x25\x6d\xf3\xcb\x46\x57\x33\x99\x9d\xe4\xbb\x38\xd8\xf1\xf5\x30\x9e\x5f\x9d\xd5\x0b\x78\x96\x3c\x19\x42\x12\xb6\x12\x47\xcd\x22\x6b\xef\xcf\x76\x0a\xe5\x84\x18\x1f\x50\xdc\xe0\x93\xb1\x7b\xf5\x08\x4f\xf8\x93\xca\xe7\x0a\xb4\x71\xc1\x2c\x63\xe9\xf7\xea\x35\xb5\x31\x1c\x97\xa7\xd0\x45\xea\x2d\x6c\x72\xa6\xbe\x1c\xae\xc1\xbe\x20\xc2\xa1\x71\xd8\x91\x57\xfc\xe0\x20\xf6\xd0\x91\x4d\x76\x7d\xfb\x59\xb0\x77\xb6\xbe\x7e\xb2\x79\x2f\x3e\xa6\x9e\x9d\xad\x6e\xfa\xfe\x3e\x57\x8b\xa0\x3f\xd3\x4d\xc1\xfc\x51\xb5\x5b\x8f\xe3\x57\x51\x30\xdd\xd7\x4c\x6c\x54\x0a\xc1\x68\x21\xc3\x09\x83\x47\x5c\xfb\x96\x6d\x27\x2e\x2f\x6d\x6f\xa1\xe7\xe1\xbc\xd2\x4b\x23\xc7\x30\x3e\x0e\x79\x32\xc4\xf7\x52\xc3\x6a\x9b\x4a\x32\xc6\x1c\x3c\x0b\xf6\x90\x4c\xec\x29\x3f\xba\xaa\xd3\x8b\x62\xfb\xc4\x97\xe9\x34\x76\x28\x85\x4d\x1c\x1a\x48\x92\x9d\x86\x7e\xe0\x3e\x3d\x1d\x72\xc9\x0e\x6d\x76\xea\x76\x49\x44\xce\xa8\xbf\xb4\x99\xd1\x71\xd4\xa6\xad\x52\x17\x84\x7f\xbc\xac\x5b\xa2\xfc\xc5\xfd\x6a\x02\x79\xfa\xbf\xd5\xf1\x77\x00\x00\x00\xff\xff\x94\xf8\x8d\x02\x57\x04\x00\x00")

func test_certsMtCaClientTenantCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsMtCaClientTenantCrt,
		"test_certs/mt/ca-client-tenant.crt",
	)
}

func test_certsMtCaClientTenantCrt() (*asset, error) {
	bytes, err := test_certsMtCaClientTenantCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/mt/ca-client-tenant.crt", size: 1111, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x65, 0xbf, 0x0, 0xde, 0xe5, 0x48, 0x76, 0x89, 0x6a, 0x8f, 0xde, 0x14, 0x6d, 0xe, 0x8, 0xd9, 0xac, 0x52, 0x9c, 0x41, 0xf2, 0x87, 0x2c, 0xc5, 0x54, 0xf5, 0xd1, 0x0, 0x7, 0xe1, 0xe0, 0xc7}}
	return a, nil
}

var _test_certsMtCaClientTenantKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\xb7\x12\xa3\x40\x02\x05\x73\xbe\x62\x73\xea\x0a\x84\x13\x04\x17\x0c\x23\xcc\x00\x03\xc2\x48\x08\x32\x10\x4e\x78\x90\xb0\x5f\x7f\xb5\x1b\xdf\x4b\x5f\xd2\xd5\x49\xff\xe7\xef\x64\x45\x43\xf6\x1f\xcf\x07\x7f\xee\x1e\x7a\x82\x40\xf9\x63\x2a\xd1\xbf\x87\xc0\x08\x29\xa3\x8b\x64\x00\x4c\x08\x5c\x05\x2c\xf3\x9d\x6b\xe3\x17\xd9\x55\xe3\x92\xcc\xb3\xc4\x7e\x64\x9c\x02\xe6\xd7\x9f\x28\x3d\x65\x41\xe0\x8f\x5a\xcf\xd5\x49\xf0\x07\x7b\x65\xd6\x3b\x24\xe4\x43\x96\x6c\x4f\x33\xfc\x55\x2d\xc4\x8b\xe8\xaa\xfd\xf7\x9b\xbd\xad\xfb\x20\x9c\x57\xa1\x67\xd3\x1f\xe7\x4a\xab\x35\xc4\x5b\xba\x0c\x71\xe2\x27\xb7\xa3\x77\x66\xdd\x61\xf6\x81\xe6\x6f\x96\xfb\x24\x30\x47\xa9\x76\x3d\x51\x6c\x87\x3f\x9f\xf4\xce\xc3\x65\xa0\x94\xa7\xd1\x38\x05\xd3\x19\xab\x04\x2f\x56\x0d\x64\x70\xa3\x1a\x7e\x4a\x9b\x82\x49\x56\x09\x32\xd9\x1a\x9d\x5f\x7a\x07\xbe\xb1\xac\xc4\x61\x0d\x5f\x5a\xdc\x34\x9a\x0c\x79\xee\x77\xe5\xe7\x87\xbb\x71\xc1\x2f\x9b\x5f\x07\x6d\x39\xfa\xee\xa7\x45\xe0\x44\x6d\x08\xeb\x5e\x22\x99\xd8\x57\xbf\xf3\xa2\x0d\x07\xc7\x02\x39\x5a\xb3\x08\x10\x69\x6f\xb6\x5c\x0c\x55\xa7\x10\x3d\xe8\x88\x59\x4b\x37\xcf\x62\xbc\x24\x17\x52\xf9\x0a\x59\xc5\xdf\xd6\x66\x2c\xd1\x22\xc7\x69\xaa\x3a\xaa\xd6\x5f\x3b\xd2\x13\x98\xe2\x7a\x9b\x9e\xc3\x85\x4d\x4a\x22\xe5\x49\x8b\x95\xce\xac\x2b\xd7\x41\x77\x86\x3c\xf0\xd5\x66\x36\x6e\x7d\x6a\xf3\xb7\x3b\xb9\x41\xce\x1b\xa1\xb3\xa1\x1b\x70\x81\x0c\x06\x24\x03\x17\x1a\xae\x8d\xfb\x1a\xef\x8e\x2a\xf2\x90\x68\x5a\x9c\xbd\xa4\xef\xb2\x68\x0e\xd4\x81\x6a\xa4\xab\x7e\xdc\x00\xe3\x2a\xe5\x7c\x3f\x06\xc1\xa8\xbc\x5c\x3f\xae\x64\x69\xfe\x70\xd7\x80\x5e\x3c\x1f\xd7\x33\xa6\x56\x14\xce\xec\x46\xcf\x4e\x4d\x7c\x11\x94\x60\x4e\x36\x52\x2c\xea\x87\x26\x2b\xb4\xbd\xbd\x25\x7e\xab\xed\x00\xf9\xf2\x89\x40\x21\xa6\x47\x40\x96\x83\x8d\xc7\x6e\xbd\x7a\x59\x10\xec\x7b\x8c\xb5\xb0\xba\xf0\x92\x75\x89\x33\x22\xfe\x1d\xfa\xc4\x45\xed\xc4\x20\xf6\x9a\x0e\x79\x5e\xfb\x5b\x81\xb7\x50\xe8\x86\xb8\x7e\x0e\x82\xad\xda\x02\xaf\x3c\x9b\xfe\x63\xd0\x52\xd4\x2f\x91\xf8\x11\xf7\xf8\xfa\x79\xd7\xbb\x06\x02\x90\x13\xaf\x8c\x93\xc7\x70\xc5\x6c\xda\x15\x9e\xaa\x7b\x96\x99\x58\x2e\x7e\xe4\xac\x97\xe2\xb4\xf1\x12\x9c\x08\xb6\x55\x89\x2d\x20\x6d\x88\x7e\x51\x74\x9b\x76\x35\xcf\x35\xb6\x53\x8a\x68\x41\x53\x46\xf4\xf3\xba\xec\x5b\x84\xc7\xb7\xf0\x1e\x2e\x34\x52\xf1\xa2\x9a\x77\x99\x3a\xbf\x0f\x5e\x07\x7c\x33\x8b\x91\xab\xe3\xd7\x87\xdb\x68\xb5\x50\x68\xec\x05\x75\x79\xaf\xcf\xe8\x8c\xdf\xb4\xb0\x2c\x09\x21\x78\xe3\x15\x17\xfc\x0e\x06\x4d\x06\xd8\xcc\x55\xeb\xc5\x4c\xb0\xb2\x45\x3c\x0b\x3e\x0e\xd5\x78\x49\xb8\xae\x68\x9c\xe3\x45\x2d\x54\x67\x06\x29\xff\xc2\xaf\xeb\xce\x18\x5e\x3a\xf3\xec\xe3\x4d\xa4\x1b\xf3\x71\xb2\xcf\xbd\x9a\x91\xf3\x6b\x9e\x2a\xb4\x7c\xcb\x85\xc8\x7f\x1e\xe8\x18\xf1\xa4\xdb\xd6\xd9\x53\xfb\x43\x89\x95\x8c\x12\xbb\x14\xa6\xa5\xf1\x3c\x97\xed\xd9\x69\xae\xfa\x3a\xa0\x4f\x80\xc4\x92\xab\x47\x07\x6b\xf4\x50\xcf\x99\x8b\x42\x9a\xd7\xaa\xcb\x8d\x96\xfa\x82\x65\xd4\x93\x4a\xf7\x74\xdc\x4d\xfe\xc8\xda\xfb\x8f\x31\xa9\x8a\x12\xb8\x90\xea\xf5\xf1\x1f\xf1\x3d\x0c\x09\x66\xe8\x2e\x43\xcd\xec\xb7\x50\x92\x18\x6a\x72\xa9\xe8\x40\x10\x91\xec\xf1\x88\x47\x31\x68\xbc\x65\x6c\x42\x23\x37\xc6\x5f\xd7\x69\xcd\xc2\xca\x8d\x22\x7a\x88\x7d\x52\x3a\x68\x19\x65\x9a\x59\xe2\xfa\x3a\xf6\xc8\xcf\xc5\xb7\x6d\xc8\x93\xd2\x99\xad\xe3\xc4\x58\x2f\xc7\x77\xf7\x10\x3d\x6b\xfa\x18\x53\x1c\x40\xd6\xda\x83\x48\x9e\xa8\x95\xca\xa7\x0c\x15\x2d\xbb\x2e\x7e\xf1\xe2\x43\xa9\xa6\x08\xb3\x0b\xef\xf5\xb5\x62\xee\xc5\x93\xac\x84\x53\x66\x45\xaf\xd0\x77\x8d\x8b\x0c\xc7\x19\xe9\x61\x1b\x8d\x48\x71\xcf\xcf\xed\x1f\x32\x2a\x1f\xdb\xe6\xdb\xe6\x9d\xf9\x4d\x05\x77\x9e\xc9\xe7\x45\x44\xa4\x1a\x6a\xee\xd2\x79\xca\xc9\x07\x3f\xff\x3d\xde\x0f\x54\xde\xfc\x0e\x5d\x45\xe4\xcf\x23\xd5\x2b\x76\xea\x58\xed\x2f\x6f\x21\x9e\x56\x4f\x68\x73\xb8\xe1\xd4\xaa\xdc\x8a\x25\xd3\x90\x0d\x08\x7e\xb4\x9b\xc8\x96\x5c\x4f\x42\x89\x40\x5a\x65\xf6\x65\x62\x5b\x5b\x7e\x5d\xf1\x5a\x2c\x7e\xbe\xf4\x58\x39\xf0\x5b\xe3\x69\xd0\x51\x9f\xdf\x63\x11\xb1\xd2\xb2\x29\xaf\x30\xdb\x4b\x5a\x1b\x5c\x12\x3f\xb4\x50\x94\x40\x52\x32\x0b\x72\xdc\x9a\x55\xb4\x65\xe1\x32\xf5\x7f\x2d\x03\x9f\x5c\xcd\x85\x21\x57\x0b\x7e\x6b\x0e\xe6\x4d\x1a\x33\xb6\xac\x7f\xf8\xc0\xf6\x4b\xa4\x55\xec\xb5\x82\x1e\x01\x96\x31\xe6\xa4\x8f\x1f\x08\x0f\xa7\x5f\x3b\x6b\x3f\xc2\xca\x36\x18\x53\x78\xea\x29\xe4\x72\xb9\xbf\x08\x5d\xdd\x44\x2b\x1c\x6f\x46\x17\x9b\x32\x6b\x8e\xd3\xe5\x35\x27\x63\xdf\xac\x76\x85\x7d\x62\xbc\xca\xef\x2a\x2d\x53\x14\xae\xc7\xc3\x96\x4a\x46\xad\x4e\x46\x2e\xf3\x7b\x20\xdb\x8e\xe1\x1a\x11\xed\x1e\x5e\x01\xfa\xf3\x72\x83\xa1\xa9\x6b\x33\x3d\xa2\x19\x31\xac\x15\x26\x91\x6f\xe3\x81\x38\x9b\x3c\x55\x94\x06\x96\x91\x02\xbe\x8b\xc3\x43\xe1\x92\x84\x4d\x52\xe4\x6d\xbb\xce\xa2\x5d\x06\xfa\x77\x9c\x2a\xe7\xec\xde\x9f\x32\xb2\xdb\xa5\xb5\x0a\x15\x24\xee\xf4\x86\x28\x50\x5e\x9e\x46\xf0\xdc\xd9\xdf\xb4\xe3\x81\xec\xe3\x9d\xf5\x5f\xd2\x47\x15\x0c\xa0\xb8\x3a\x55\x39\xb7\x97\xde\xc0\x71\xd0\xd9\xd9\x2a\x5b\xb9\x47\xfb\xdf\xe2\xd9\xe2\x19\x15\xf2\x59\xfb\x5a\x31\xcc\xfd\xea\x12\xdd\xdc\x67\xac\x5a\x7f\xc6\xab\x9b\xf0\xa0\xe5\xe9\x26\xd3\x95\x52\x48\x66\xd1\xd6\xfc\x9a\xcd\x12\xc0\xf5\xeb\x37\xf3\xc2\x76\xbc\x19\x7c\xe3\xde\x3f\x8a\xfb\x78\x7e\xff\x4b\xfc\xcb\x8a\x62\xdf\xfe\x7f\x6e\xfe\x17\x00\x00\xff\xff\x95\x02\xbc\xa1\x8f\x06\x00\x00")

func test_certsMtCaClientTenantKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsMtCaClientTenantKey,
		"test_certs/mt/ca-client-tenant.key",
	)
}

func test_certsMtCaClientTenantKey() (*asset, error) {
	bytes, err := test_certsMtCaClientTenantKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/mt/ca-client-tenant.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaa, 0x9e, 0xd, 0x12, 0x10, 0x60, 0xf5, 0x5a, 0xc, 0xa2, 0x70, 0xd, 0xdd, 0x43, 0xf7, 0x8b, 0x43, 0x16, 0xb6, 0xe3, 0x3b, 0x75, 0x9d, 0x6b, 0x85, 0xba, 0x69, 0x63, 0xde, 0x2b, 0xd3, 0x7c}}
	return a, nil
}

var _test_certsMtCaServerTenantCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xcb\x0e\xa2\x48\x18\x85\xf7\x3c\xc5\xec\xc9\x04\x41\x11\x59\xcc\xa2\x28\x0a\x04\xac\x82\x52\x2e\x96\x3b\x41\x2e\x72\x11\x81\xd6\x02\x9e\x7e\xd2\x3d\x49\x2f\x66\xe6\x5f\x7e\x8b\x93\x3f\x39\x27\xdf\x9f\x3f\xcf\x40\xb6\x43\xfe\x80\xe8\x1c\x3a\x96\x03\x41\x88\x7e\x51\x01\x3b\x8e\x69\xac\x10\x82\x5c\x2c\x01\x77\x0c\x50\x3a\x67\x10\x9c\x0b\x25\x6e\x2a\xf6\xf1\xd5\x38\x39\x1e\x25\x7a\xdc\x23\xa3\xe1\x26\x65\xae\xd7\xdf\x9c\xea\x9b\x11\x40\xd1\xc9\xa0\x80\x0b\xde\x8a\x2e\xd8\x00\x36\x90\x23\x04\x2b\xec\x52\x45\xaf\xef\x5b\xf7\xcb\x12\xd2\xe3\x73\xc4\x11\x67\x66\x4c\xa9\x89\xf8\x6c\xa6\x0a\x19\xb3\x4e\xaf\x98\x52\x96\x74\x83\xf8\xb1\xca\x88\x80\x6b\xc0\xc9\xea\x2c\x38\x64\xdc\x37\xf1\x9a\x54\x19\xc1\xeb\x4f\x86\xe7\xdf\xac\x06\x23\x3e\x3b\x1c\x81\x5f\x61\x1e\xe2\xed\xef\x30\x81\x29\xe5\x6c\x85\x20\x34\x4a\x12\x1b\x00\x87\x26\x22\x5f\xa6\xfc\x58\x52\xc5\xaa\xef\xd0\x30\x69\x08\x21\xb8\x38\xff\x7e\xdf\x30\x28\x30\xcb\x12\x05\x02\x30\x21\x04\xb4\x87\x65\x89\x0c\x80\xdf\xe0\x7b\x60\x75\xa2\xe7\xd3\x2b\xbc\x46\xf7\x3d\x93\xc6\x63\x61\xac\xcd\x9c\x81\x7d\xf2\x02\xca\xd2\xb5\xe3\x9d\x85\x01\x7b\x28\x6a\xc5\xfa\x41\x25\x02\xed\x2e\x09\x8a\x4e\xba\x5e\xef\x5f\x7a\x34\xc4\xa9\x53\xcc\x19\xfd\x3e\x0b\x73\x60\xf3\xed\x60\x7b\xab\xb7\x00\x57\x17\x95\xb3\x8b\x69\x6f\x1f\xfa\xba\x3b\xcc\x87\xad\xa3\x05\x37\x53\x0b\xc5\x4e\x80\xad\x04\xee\xa9\x3b\xc8\xb6\x84\xa0\x42\xb4\x06\x76\xba\xdd\xec\xe3\x8b\x17\x04\x92\xf8\xe9\x64\xf1\xee\x17\xe3\xba\xfe\x88\x29\x38\x91\x2d\xd7\xd4\xea\x6a\xb7\x45\xb5\x7f\x72\x59\x7a\x9e\x52\xe1\xea\x69\x59\x77\x8a\x03\x37\x55\xc7\x7c\x7a\x5d\xcf\x93\xb6\x3c\x68\x12\x85\xd2\x74\x9a\xdb\x26\x04\xb9\xda\xde\x56\xf6\x91\xd8\x47\x53\x5d\x9a\xf5\x37\x1c\xa4\xaf\x7c\xca\xc6\xa7\x7e\x6b\x2c\x4d\x98\xbb\x8a\xc4\xda\x54\x58\x96\xf6\xf1\xdc\xea\x22\x02\xf9\xe6\xaf\x7d\xbf\xc0\x00\x64\xbd\x4a\x07\xe5\x72\x34\xbb\x8d\xf8\x5c\x0a\x85\x47\x65\x79\xdd\xf3\xf8\x6a\x14\xef\x75\x01\xc3\x3b\xa1\x8e\xa0\xd6\xd0\x7f\xa4\x45\xcd\xbe\xf2\xee\x2d\x19\xac\x4f\x2e\x07\xbc\x9b\x3f\xe2\x32\x15\xe4\xfd\xbe\x18\xdd\x01\x02\x8e\x00\xb8\xe3\x0e\x43\xca\xcd\x92\x99\xf1\x79\x13\x00\x7a\x94\x0c\x40\x4d\x01\x94\xa7\x06\x1b\xce\xcf\x21\x3d\x10\x47\x86\xc4\xa9\x83\x01\x33\x40\x71\x80\x80\xa2\xff\x5b\x9f\xf9\x4f\x63\x76\x58\x07\xdc\x14\x26\x1a\xa9\x39\xc3\xcc\x68\xac\xf4\x0e\xde\xcf\x9b\x3a\x92\x5b\xb6\x09\xdc\xeb\x82\x2a\x03\x57\x61\x2a\xda\x71\xb8\x1e\xc5\xfd\x5b\x7c\x07\xce\xb5\x76\x51\x34\x1c\xd5\xed\x29\x1b\x83\xd0\x3d\x58\x42\x93\xc8\xb8\x95\xe5\x42\x06\xab\xed\x9f\xad\x25\x9f\xad\xe5\x7e\x2f\x1e\x41\xc3\x8e\x9b\x24\x83\x25\x0f\xfb\x26\x7d\x76\x4a\x0e\xd7\xbe\xb2\x36\xc3\x49\xcc\xfd\xda\x6e\x9f\xfe\x50\x35\x5b\x7d\x2b\x78\x6c\x7e\x56\x99\xdc\x7b\xfe\xf7\xa8\x5f\x81\x3e\x6b\x15\x39\x5e\xbe\xd1\xae\x7b\x48\xa1\x06\x7e\x30\x69\xbf\xd9\x8e\x60\x0a\x93\x38\xd7\xbb\x4d\x57\x12\x5b\xdf\x4c\xd2\x46\xac\xd6\xfb\xc7\x0f\xb8\xe0\x9f\x71\xa4\xa7\xf3\xe0\x2b\x5b\x0f\x5c\xb8\xa7\xe5\x9a\xca\x71\x2a\x9f\x67\x67\xde\x8c\x2f\x4e\xea\x7e\xb8\x7e\x4b\x73\x71\x55\xcf\x80\xb8\xed\xe0\xe8\xdb\xbe\xc5\x49\xfc\x56\xe5\x85\x44\x02\x17\x79\xd2\xec\x74\x40\xdb\x5d\x45\x3c\x47\x35\x97\x36\x7e\x58\xbb\xe4\xa0\x24\x77\x78\x42\xb9\x1f\x13\xb3\x1a\x9b\xe1\xb6\x5d\x48\xf4\x60\xe9\x69\x3b\x7c\xda\xcb\xa0\x5c\xa2\x07\x32\x9d\x7d\x21\x4c\xd7\xfa\x40\xe2\xcf\xeb\xfc\x89\xa2\xab\x3f\xfd\x25\xfc\xd2\x04\x22\xe6\x7f\xd5\xf1\x77\x00\x00\x00\xff\xff\x9a\x2e\xfc\x8a\x57\x04\x00\x00")

func test_certsMtCaServerTenantCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsMtCaServerTenantCrt,
		"test_certs/mt/ca-server-tenant.crt",
	)
}

func test_certsMtCaServerTenantCrt() (*asset, error) {
	bytes, err := test_certsMtCaServerTenantCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/mt/ca-server-tenant.crt", size: 1111, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd, 0x66, 0xa8, 0x73, 0x78, 0x31, 0xf5, 0xd4, 0xe, 0x6b, 0x4e, 0x7, 0xcc, 0xff, 0xb0, 0x97, 0x6, 0x1b, 0x28, 0x45, 0xd, 0xca, 0xff, 0x9b, 0x7d, 0x25, 0xf6, 0xb8, 0xde, 0xfc, 0x0, 0xba}}
	return a, nil
}

var _test_certsMtCaServerTenantKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xa3\x40\x02\x04\xd0\x9c\xaf\xd8\x9c\xba\x82\x11\xc2\x05\x17\xcc\x60\x07\xef\x05\xca\x30\x12\xc2\x0a\x09\xaf\xaf\xbf\xda\x8d\xaf\xd3\x4e\xba\x3a\x79\xff\xf9\x1b\xa4\x68\xd8\xf9\x13\x84\xf0\x8f\x17\xe0\x04\x46\xca\x1f\x53\xc9\xfe\x35\x84\x8d\xb1\xf2\xae\x31\x82\xd0\x94\xa0\xaf\xc0\xb3\x93\xa8\xa3\x71\x0a\xc0\x9d\x95\x53\x05\xdf\xa9\x25\xe7\x4a\xd0\xdd\x48\xdd\xe5\x29\x2f\xe5\xc2\xcc\x6f\xcb\xf4\xb2\xc5\x17\x53\x0c\x6a\xd3\x10\xdf\x0e\x48\x77\x23\x0b\xfc\x8d\xb9\x78\x9f\x27\x08\xa7\x64\x7e\x51\xea\x21\x91\x86\xe0\x4e\xad\x3a\xee\xd9\xd7\xfe\x62\x38\x32\xfc\x5d\xe9\x0e\xa9\x2e\xce\xc6\x2d\x7e\xfa\xaf\x6c\x67\xb1\xf3\x16\xc2\xe3\x32\x33\x15\xd0\x34\x0f\xdf\xb8\x10\x7c\x2b\x63\x56\xdf\x2c\xe8\x3c\x9a\x12\xfc\x16\x28\x8a\xe3\x8a\x94\x7d\xb3\xe4\xe6\xb9\x20\x81\x70\x66\x9e\xf2\x36\xa8\x65\x9e\x90\xfa\xc7\x92\x53\x92\xc0\xcb\x52\x7e\x97\x33\x5b\x62\xa1\xdf\x86\x85\x3b\xab\x4a\xfb\x6d\x06\x40\xf7\xc0\x23\xf7\x4d\xbb\x05\x36\xe2\x87\x64\x74\x1a\x5e\x6c\xf8\xad\xeb\xd1\xf9\xea\x76\x71\xad\xb8\xe3\x5c\x2d\x30\x10\x7e\xba\x69\xb9\x02\xd2\xf5\x10\xe2\x74\xbd\xbe\x07\xd5\xba\xca\x49\xc7\xbb\x4d\x8b\xb1\x80\xce\xb6\x97\xbe\x77\x5c\xba\x45\xc4\x59\x06\x55\xa0\x50\x42\xcf\x2f\x4a\x4a\x95\x1c\x3d\x2c\x7d\x7a\xe2\x0e\xdb\xc1\xc6\x2c\x58\x48\xa7\xa1\xd2\x66\x14\xd4\xe6\x75\xb7\xf6\x5f\xab\xf1\xbc\x79\x08\x97\xa1\xc7\x5a\xb1\x63\x19\xfa\x10\xc1\x37\x46\x50\x5f\xf4\x4f\x0f\xfc\xb9\x59\x97\x10\x4f\x1a\xe1\x30\x2e\xf3\x7c\x31\x3d\x0e\x13\xc5\x71\xdb\x8e\x04\xec\x93\x36\xa8\x15\x5d\x1d\xe4\x57\xb5\xbc\xac\x40\x9c\x94\x01\x3d\x98\x2c\xb1\x5c\xf3\x66\xa2\x6f\x62\xf0\xfd\xdd\x5b\xc7\x7c\x34\x82\x8d\x90\x30\x5b\x49\xd1\x70\x29\x54\xd9\x02\x0f\xae\x8b\xcf\x21\x4d\x55\xde\x32\x5e\xd6\xcd\x89\xb0\x79\x30\xf6\xaf\xa2\xd5\x58\x57\xbb\x31\x5f\xbd\x20\xc3\xab\x80\x86\x33\x1f\xde\x60\x3a\x69\x7f\x20\x5e\x05\x1d\xc9\x9f\x86\x51\x4d\x17\x51\x69\x2a\xfa\xc9\xf6\xa1\x18\xf8\xb2\xb8\x89\x9c\xbd\xfa\x34\x1d\x4d\x22\x95\xa7\x1b\x89\x93\xe7\x3c\x95\x2d\xbc\x39\xa7\xa9\x8e\x16\xd8\xed\x93\x8e\xf8\x86\x78\x9a\xd1\x87\xd5\x45\x11\xdc\xdc\x57\xe5\xbf\x15\x85\xf4\x42\x98\xc4\x9a\xf2\xac\x0d\xfb\x73\x71\x1e\xa6\x33\x99\xdd\xc5\x7d\xdd\x6a\x18\xf0\xcb\x4f\x1c\x2c\x5a\xdc\xf2\xf4\x14\xbf\xed\xc2\xfa\x35\x41\x1d\xea\xfe\x72\x0e\x3a\x7b\x99\xc9\x1b\x1b\x55\x52\xaa\xa1\x75\xde\x12\x4c\x81\x97\x47\x8a\xbc\xe5\x2d\x1e\x55\xc4\x3b\xfd\x4e\x92\x0f\xce\x2d\x6e\x69\x9f\x1d\xee\xe2\xf4\x61\x54\x3f\xf2\x02\x88\xd9\x54\xdd\x84\x56\xa4\x3a\x53\x20\x28\xda\x47\xad\x5a\xa6\xae\xd5\x42\x21\xb7\x6a\xe0\x66\xfe\x31\xa3\xc1\x17\xe7\xf6\x02\xeb\xcf\xbe\x40\x70\xb7\x5d\x8e\xa7\x6b\xde\x01\xe6\xa4\xc0\x49\x22\x10\xc3\x08\x9b\x9e\xdb\x3b\xf8\xe9\x50\x6f\x0b\xe4\xf8\x4a\xc8\x0a\x76\xa0\x1a\xf3\xd3\xea\xd5\xbd\x94\xdd\x44\x3d\x6c\x1e\x7c\x50\xc4\x54\xab\x71\xd6\x66\x78\x87\xf3\x21\x64\x6a\xbd\x68\x3d\x11\x92\xe6\x63\xce\x5a\x3a\xa3\x87\x65\x9f\x7c\x74\xf1\xd5\x3e\x61\x85\x2b\xab\xce\x15\xb0\x3c\x3b\xa8\x1b\xc6\xa3\xe7\x73\xb8\xb0\xf3\xed\x98\xb1\x1a\xd6\x88\x7d\x0b\xff\x16\x0b\x9d\xed\x13\x60\xcc\x27\x51\x4e\x1a\x79\x2b\x8d\x84\xd1\x1d\xa6\x6a\xf9\xcd\xee\xc4\x11\x7e\xac\xb4\x10\xe2\x6e\xdc\x06\x3d\x6e\x5b\xf5\x2a\x74\xdb\x57\x08\x99\x27\x12\xc8\x56\xff\xa5\xad\x18\xda\x77\xc0\x10\xc5\xaf\x9e\xcf\x9e\xcd\x45\xb4\xe8\x49\x49\xff\xbc\xc6\x64\x41\x3b\x9c\x53\x58\xc2\x6f\x1f\xdf\x0d\x5d\x92\xe5\x6e\xac\x6f\x57\x27\x15\x28\xf7\xb3\xda\x12\x0c\x13\x20\x3a\x66\xec\x92\xf2\xc6\x13\xf7\x92\x9e\x9f\x54\xa8\x63\xee\xa0\x0d\xca\x96\xe9\x48\x74\xee\x45\x2a\x7f\x6e\x53\x11\xd0\x39\x3b\x55\xc5\x4a\x37\x7f\x4f\x86\x8d\xd8\xc3\xf1\x24\x9d\x5b\xa4\x5a\xa4\x1e\x55\xb5\xbd\xe7\x07\xd1\xda\xcc\x22\x94\xec\x10\x0a\x0f\x1e\x3a\xb9\xe5\xf6\x17\xd1\x0f\xcd\xcb\x11\xa6\x00\xce\x4d\x5c\x9e\xbc\x84\x2b\xae\xc0\x5b\xa2\xa3\x94\xd5\x8e\xf5\x80\xe2\x87\x37\xa5\x31\xd5\x98\xcc\xef\x08\x7a\xcf\x17\x20\x93\xd5\x22\x93\x0e\xbe\x2d\xdc\xa7\xef\xe6\xc7\xdd\x98\x0e\x12\x77\xdc\xad\x0d\x51\xb3\x06\xdb\xad\x50\x43\x7a\x31\xfb\x81\x31\x85\xb3\x41\x42\xad\x14\x5d\x8b\x4c\x4d\x77\x7b\x22\x8a\x2f\xf4\x95\xaa\xdc\x3b\xf5\xa3\xc0\x50\x32\xea\xdc\xd7\xbf\xdd\x44\xb5\x9e\x4a\xe2\x53\xcc\x8d\xa4\x9b\xa2\x47\xc6\xa5\x49\x59\x65\x55\x7a\xda\x76\xf0\x94\xba\x53\xf8\x5e\x76\xb1\x3e\x34\x95\x18\x3e\xca\x38\xd4\xbe\xbd\x90\x7c\x47\x1b\x99\xcc\xe4\x87\x20\xa6\x4a\x05\xcc\x84\x7f\xad\xd0\x2f\x6e\xa0\x1a\xfa\x02\x8f\x82\x38\x57\x5e\x2f\x05\xaf\x9b\x5a\xe8\xd3\x12\x23\x76\x95\x63\xf2\x24\x82\xd4\xa0\x26\xbb\x61\xdc\xe5\x87\x2e\xfa\x15\x46\xc1\x56\xb6\x3b\x0d\xf0\x9a\x83\x35\x1b\x9c\x83\x95\xd3\xdb\xf5\x12\xae\x25\xd5\x37\x72\x83\x7e\x8f\xb3\x86\x17\x75\xe2\xbe\x7c\x4f\x46\xac\x43\x28\x31\x7c\xc1\xb7\x06\x23\xa0\xaf\xae\x25\x85\xe5\x29\xa4\xbc\x97\xc7\xd5\x4f\x5c\x3a\x86\x31\xb2\xb8\xc7\xf9\x7b\xd8\x62\x31\xe3\xa8\x0c\x31\xbf\xb2\x02\x9d\xdb\xd3\xf3\xbd\xae\x16\x7e\xe7\x88\x54\x1f\x19\x58\x8b\x96\xb6\x16\xa4\xa0\x7b\x39\x4b\x2d\x0f\xfb\x59\xe3\x78\x07\x3f\xd1\x3e\x72\x1f\x5f\x7d\x71\x64\xea\x5e\xff\x6e\x99\xaa\xb4\x4e\x5b\x1b\x32\xba\x0f\xe2\x74\xe0\x56\x49\x53\x62\xd8\x01\xc7\x3f\x78\xc0\xd1\x56\xac\x89\x9e\x32\x64\xb6\x1a\x78\x33\xfd\xb9\x68\x26\xad\xb3\x8d\xf1\xf5\x8d\x55\xd1\x94\x07\x2c\x82\x10\xc1\xe3\xd9\x0b\xff\x25\xfe\x91\xa2\x38\xf2\xff\xa7\xe6\x7f\x01\x00\x00\xff\xff\xf8\xa5\xbe\x1e\x8b\x06\x00\x00")

func test_certsMtCaServerTenantKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsMtCaServerTenantKey,
		"test_certs/mt/ca-server-tenant.key",
	)
}

func test_certsMtCaServerTenantKey() (*asset, error) {
	bytes, err := test_certsMtCaServerTenantKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/mt/ca-server-tenant.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8f, 0xe0, 0x14, 0x78, 0x78, 0x4b, 0xcd, 0x3, 0x43, 0x8f, 0xeb, 0x22, 0xff, 0x4e, 0x42, 0x20, 0x7, 0xa1, 0x6f, 0xa9, 0xe, 0xa8, 0xe5, 0xfa, 0x66, 0xa8, 0xb3, 0xbf, 0x70, 0x6, 0xbe, 0x94}}
	return a, nil
}

var _test_certsMtClientTenant123456789Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\x3b\xd3\xb2\x3a\x17\x40\x7b\x7e\xc5\xd7\x3b\xdf\x88\xa0\x22\x65\x12\xc2\x3d\x81\x70\x15\x3b\x05\x0d\x72\x7d\x50\x34\xca\xaf\x3f\xf3\xbc\xc5\x5b\x9c\xb3\xcb\x55\xac\xd9\x7b\x66\xcf\xfa\xff\xef\x40\x6c\x39\xf4\x7f\x08\x47\x89\x63\x3a\x08\x24\xf8\x0f\x95\x88\xe3\x18\x30\x41\x08\x5c\x15\x0e\x84\x03\x01\x77\x22\x40\x45\x7b\x3d\x87\x93\xa9\x1f\x2f\x1d\xd3\x7e\xfc\x75\xde\xed\xcd\x54\x18\xac\x70\xbd\xf1\xe4\xd4\xef\x92\x02\x86\x7d\xc8\x80\x90\xbc\x05\xc7\x04\x02\x0b\x6c\x52\x8c\x6a\xe2\x32\x45\x6f\xce\xaa\xfb\x2e\x72\x3a\x92\x28\x15\x58\x14\x46\xc6\x98\x81\xc5\xc7\xb8\x28\xf4\x51\xf6\x7a\x5d\x28\x9c\x33\x19\x0b\xbb\x2e\xa9\x44\x1a\x20\xe8\xe2\x7c\x49\x52\x88\xc0\x20\x4b\x5e\x97\x94\x34\xe9\x2f\x53\xff\xb2\x06\x8c\x24\x72\x04\x06\x7f\x64\x1e\x16\xdd\x5f\x99\x54\x28\xfc\x83\x1b\xc0\x20\xa7\x19\x04\x24\x41\x09\xfe\x92\x85\x6d\x68\x53\x6e\x83\xdf\xd3\x62\xe7\xdf\xab\x43\xc8\x80\xc1\x39\x0e\x81\x81\x90\x04\xd8\x88\x38\xc7\x10\x10\x18\xdd\x79\x20\x1f\xab\xd2\x82\xdd\xda\xd0\x86\xcd\x03\x74\xc7\xc3\x57\xb6\xc4\xd9\xdf\x4d\xba\x97\x6c\xe4\xfd\x79\xd6\x7c\x62\x9d\x4d\xdf\x59\xb4\xc2\x57\x86\xde\x94\x26\xc3\xee\xf2\x95\xd9\x35\xfd\xc3\x7f\xf7\xc3\x83\x9b\x51\x10\x4e\x3b\x7b\x6e\xf7\x2e\x29\xe2\xdd\x35\xbe\x1a\xd6\x3a\xe1\x6f\x26\xf7\xab\xa0\x81\x3f\x63\x6c\xea\x4d\xf3\x73\xcb\xe6\x63\xb3\xca\x88\xb4\x3b\x1d\x9c\xdc\xf6\xa0\xd1\x5c\xbf\xab\x5d\x79\x44\x8d\xf5\xbd\x76\x15\xea\x3b\x53\xe3\x99\x7a\x8c\x91\x3c\xdc\xe9\x0b\x35\xd4\x1a\x9e\xc2\x9a\x14\xd3\x8a\xd4\x62\x0d\xe4\xad\xb1\xc0\xe7\x96\x4a\x3b\xe5\xba\x31\x43\xf7\xd1\xe4\x95\x71\xac\xcb\x1c\x38\xb7\x87\xda\x1e\x7c\x52\x98\x7a\x7d\x6c\x54\xcc\xa6\xf5\xe5\x1e\xf5\xc9\x2b\x5e\xe6\xf2\x41\x8b\xbe\x96\x4f\xf6\xa8\xf3\xfc\xee\x7e\x94\x68\x2f\xd1\xa8\x06\x37\x5a\x05\x19\xfc\x98\x6c\xba\x3d\x94\xd6\x8f\x59\xbb\x73\x75\x95\xcd\xb3\x73\x29\xf1\x87\xbe\x91\xce\x13\x14\x7f\xb7\x77\x77\x5e\x70\x52\xf4\xc7\x57\x38\x75\xde\x93\x9a\x6d\x75\x93\xda\xa1\xe4\xde\x30\xec\xc3\x00\x96\x8f\x97\x55\xc3\xea\x5d\xcf\x34\xa8\xa7\x05\x02\xa6\x13\x04\x04\x06\xe0\x4c\x06\x82\x52\x61\xf0\xc2\xc8\x22\x39\x04\xcc\x5e\x43\xc0\x0c\xc0\x73\x2e\x11\x48\x7e\x9f\xa8\x72\x19\x23\x04\x8c\x16\x42\x4f\x0b\xb0\xd4\x84\x82\x20\x02\x64\x0b\xc5\x93\x15\x3b\x17\xd5\x60\x18\x22\x91\x02\xb0\x75\x20\x60\xe0\x82\x8a\xb4\x5f\xf0\x67\x25\x5d\xd2\x2e\xd6\x43\xef\xeb\x81\x63\x63\x93\x72\x1d\xe4\xcb\xf5\xbd\x4e\x3f\xea\xf3\x13\x94\xdd\x3e\x2b\x8f\x66\x29\x20\x68\xb7\xbe\xe5\xdf\x34\x6e\xbf\x23\x9d\x24\x6d\x58\x54\xdb\x7b\x06\xef\x7a\x28\xb5\xae\xfa\x3c\xbd\x66\xd7\x8f\x37\x4e\xc3\xda\x29\xb4\xd7\xd7\x53\x3b\x1c\x0e\x23\x6e\xcf\xb7\x1b\xb7\x77\xf0\x05\xd2\x4a\xf8\x96\x35\x56\x71\x50\x7f\x1c\x7d\x64\x43\x9e\x6b\x69\xdc\xec\x93\x85\x4a\x4f\xe2\x98\x66\x38\x11\x2d\x36\xc1\x10\xc4\xc5\x2e\x2d\xf0\xd5\x5b\xca\xda\x54\x7a\xeb\x8b\xd4\x6d\xa3\x44\x9f\xfe\x25\x8b\x48\x4c\xda\x69\xd6\xa2\x59\xad\x3c\x19\x5b\x3d\xa0\xf3\xdd\xa8\x2a\x69\x42\xf4\xb4\x8a\x48\x43\xbc\x45\xfb\xdc\x36\x3f\x90\x06\xc1\xfa\xf9\x2c\x8d\xaa\xb9\x7f\x78\x68\xbf\x6f\x99\x50\xd4\x6d\x67\xdb\x64\xb8\x20\xe7\xbd\x62\xc0\x1e\x0d\xba\x0d\xe5\xec\x67\x7d\x6e\x3b\xc9\x76\x3d\xde\x3c\x14\xf9\x94\xdb\xb3\x0b\xb5\x87\x90\x15\x99\xbd\xee\xf6\xb8\xcc\xe5\x4a\xf4\xef\x43\x9b\x6a\xdb\xe9\x70\xc1\xd1\xf9\x7b\xd4\xaf\x07\x63\x02\xf7\x8c\x16\xd7\xc2\x3e\x13\x7a\x30\x85\x24\x6f\xdf\x70\x8c\xb2\xdd\xc1\x7b\x7e\xa5\x3f\x89\xc0\xd4\xf8\x6f\x36\xfe\x09\x00\x00\xff\xff\xc4\xdd\x52\xc6\x53\x04\x00\x00")

func test_certsMtClientTenant123456789CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsMtClientTenant123456789Crt,
		"test_certs/mt/client-tenant.123456789.crt",
	)
}

func test_certsMtClientTenant123456789Crt() (*asset, error) {
	bytes, err := test_certsMtClientTenant123456789CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/mt/client-tenant.123456789.crt", size: 1107, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0xc3, 0x63, 0x77, 0x11, 0xd0, 0x4d, 0xca, 0xbd, 0xf8, 0x80, 0x1f, 0x26, 0xf5, 0x6a, 0x85, 0x46, 0x6d, 0x6a, 0x7d, 0x34, 0xda, 0x54, 0xfd, 0x67, 0xec, 0xe5, 0x25, 0x26, 0xd9, 0x4b, 0xfa}}
	return a, nil
}

var _test_certsMtClientTenant123456789Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xa3\xd0\x01\x85\xe1\x9e\xa7\xd8\x9e\xf1\x90\x05\x14\x5b\x5c\x10\xe1\x92\x73\xea\xc8\x08\x24\x91\x45\x78\x7a\x8f\xb7\xf6\x69\x4f\xf3\x77\xdf\x7f\xfe\x37\x41\x52\xa0\xf5\xc7\xf3\xc1\x1f\xc7\x83\x11\x08\xa4\x3f\xba\x94\xfe\x7b\x10\x13\x42\x69\x02\x50\x00\x40\x17\x81\x2b\x81\x43\x56\x74\xc0\x7a\x15\x71\xa4\x4a\xc2\x39\x7b\x13\xaf\x62\xd4\xdc\x86\x5b\x08\xe3\xef\xb3\xe0\x93\x93\x04\xd3\x4c\xad\xeb\x91\x8d\xe1\xda\x3b\xc8\xd6\xfe\xf2\x3a\x8d\x47\xb3\x8e\x0a\x3a\x8e\xed\x7c\xdd\xd1\xbc\xde\x41\x24\xd1\xe8\x32\xd4\x64\x30\x0e\x67\x67\xbc\x19\x8d\x36\x0b\xde\x16\xf9\xa7\x5f\xd0\x0f\x53\xf9\x74\x30\x21\x6d\xfb\xcd\x23\x31\x51\x3b\x4c\x78\xbf\xbf\x47\x97\x96\xa3\x64\x5b\xac\xc1\xbe\xcf\x52\x37\x0b\xed\x11\xe1\x7a\x1e\x26\xbb\x90\x54\x15\x34\xfc\x1a\x92\xb4\x6e\xe2\x79\x7d\x83\x7c\x49\xc3\x4c\xad\x7a\xee\x19\x20\xad\x63\x2a\x77\x4b\x7d\x33\x36\x0c\xb9\xcf\x6e\x65\xb8\x55\xcb\x67\x0a\x3a\xf4\x57\x07\xc7\x7a\xb6\x09\x29\xd7\x4e\xe9\x89\x0b\xbf\x6b\x4a\x66\x33\x86\x4d\x5c\x2b\xf1\xca\x55\x6f\xa8\x7b\x52\x40\x72\xf8\x55\x33\x75\x24\x14\x49\xe0\x08\x9c\x09\x55\x29\x12\x27\xf4\x97\xbb\x9b\x26\x06\xc3\x97\xaa\x44\x12\xef\xb6\x23\x90\x48\xce\x20\x05\x53\x33\x8c\x17\xfc\x50\xa6\x67\xbd\xb2\x9a\x46\xe7\x10\x99\x0f\x3c\xf6\x08\xd4\xaf\x2e\x30\xd7\xcd\xc8\xd1\xf2\xb5\xd3\xb9\x24\x93\xa8\x82\xe3\x0f\x65\x31\x25\xe1\x89\x1f\xf0\x09\x5c\x20\x80\x11\x0a\xc0\x15\x2b\x25\x60\xee\xa6\xc7\x88\xd9\xe1\x65\x84\x0f\x3b\x1a\xf3\x9c\x36\x43\xd7\x77\xb8\xf9\x56\xc0\x5b\x75\x1d\xe2\x71\x2e\x14\xef\xfd\x30\x29\xcb\x14\x0f\xa1\xed\x95\xb1\x65\x6b\x91\xbc\xf8\x8d\x2a\x32\x54\x59\x47\xd5\xe6\xd6\x62\x1f\x49\x84\x8f\x51\xe7\x68\x3c\x98\xf5\x09\xbd\xf1\x5f\xb6\x12\xd3\xbc\xc6\x99\x8b\xe4\x63\xad\xab\x45\x2a\x5b\x0f\x92\x97\xc3\xd6\x27\x37\xd6\xd6\x0a\xec\xd3\xcf\x1d\x7f\x1f\xc5\xdb\x41\xd5\xfb\xd6\x77\x84\xc4\xe1\xc9\xd1\x62\x7d\x8e\x80\x56\xc6\x6c\x76\x0b\x54\xaa\xb8\x86\x75\x0b\x53\x93\x53\x6d\x13\x2a\xde\x1e\xaa\x9a\x92\xac\x1e\xfb\xaa\xbc\x6c\xb9\xef\x4a\xa7\xa4\x4d\x0c\x17\xf4\x1b\x7c\x2e\x64\x89\x6d\x9e\x38\xdd\xcc\x2c\xb6\xe3\xf0\x99\xb8\xf6\xd4\xa6\x32\x12\x72\xca\x3b\x36\x8f\x61\xc1\x92\xc0\x70\xc3\xc2\xcf\x8c\xb2\xb4\x27\x15\x67\xba\x73\x6a\x50\x4c\xfa\xed\xdb\x7c\xe2\x2e\x86\x2c\x67\x1a\x75\xb0\x0b\xed\x8b\xfc\xfa\xae\xfe\x98\x9e\x5c\xbc\x57\x07\x95\xe2\x9f\x70\xce\x4a\xb7\x8a\x6c\x92\x7b\xb5\x3b\xf5\xb4\x13\x2d\xa9\x1e\x6d\x98\x93\xd6\x1c\x97\x11\xf4\xe8\x17\x1e\x92\x48\xc3\x7d\x14\x02\x7b\x9c\x60\x54\x04\x60\x8f\xf7\x79\xe1\xf8\x81\x0a\xbc\x83\x13\x28\x46\x88\x79\xc0\xfa\xc1\x3d\xee\x60\x5d\xe8\x87\x27\x9a\x39\xf4\x6b\xc0\x7c\xc0\x66\x34\x36\x64\xcb\xf7\x8e\x00\xfa\xf9\x55\xcc\xe8\xee\x8a\xe1\xb3\xd8\xab\xf6\xb0\x8d\x85\x51\xdb\x5f\xb5\x9e\x89\xd6\xd9\xfe\xae\x1b\x98\x35\x9f\xcb\xa4\xc8\x96\x5f\xe8\xdd\xce\xe1\xad\x42\xd8\x36\xc9\xd0\x17\xad\xc2\x00\xe9\xcf\xac\xf6\xe8\x83\x99\xa8\xbe\x7d\xc4\xca\x6b\x19\x2a\xa1\x48\x08\x55\x7e\xfc\x14\xb9\xa8\x5e\x8c\x41\x61\x3a\xc1\x2f\x24\x11\x68\x1e\x2f\x7f\xe3\xe4\x67\x4c\x8a\xaa\xfd\x2b\xb6\x20\x85\xe0\x91\xbd\x53\x4e\xda\x67\x3e\xfb\xa8\xc2\x97\xbe\x0c\xb4\x2e\x37\x64\x3b\x38\x2a\x26\x76\x85\x79\x8f\x22\x19\x13\xd1\x91\x83\xec\x15\x1f\x68\xbe\x99\xe4\xd7\x73\x47\xfd\xf8\x81\x07\x41\x50\x17\x62\x7c\x3c\x1e\x42\xf6\xa3\xfd\xe0\x96\x4d\x0b\xbb\xb1\x62\x4c\xa1\x2b\x3d\x1e\xc3\x01\x8d\x5a\xef\xb8\xb2\x5e\xca\xe7\xda\xbe\x0a\x6e\x35\x79\x3a\x6d\x2c\x75\x3e\x74\xa3\x5c\xf6\xac\x67\xaf\x37\x92\x8d\x43\xd8\x1c\x68\xe4\x86\xaa\x64\xa4\xe6\x0a\xd2\xad\x89\x5f\xc4\xf9\x04\x94\x2c\xfb\x4b\x0e\x5a\xa7\xa1\xfd\x9c\xfd\x97\xac\x1d\xca\x69\xaa\xb8\xf1\x62\xd5\xb1\x27\xcf\x73\x3d\x1b\x44\x4a\x2f\xec\xc9\x6b\x71\xdd\x33\x86\xed\xee\xd5\xc8\x2d\xf9\x20\x82\x83\x0c\xc2\x9d\xbc\x9c\x86\x02\xfb\x92\x77\x42\x96\x9d\xee\xfd\xb6\x49\x5e\x21\xd8\xdc\x5d\xa7\x17\xab\x87\xf7\xd9\x85\x17\x02\x83\xaf\x2d\x9c\x4a\x94\x5a\xb7\xf2\x2c\x8e\xe9\x99\x2b\xd9\x7c\x2f\xf5\xac\x57\x85\xcb\xa6\xa5\xf2\x78\xd8\xce\xae\xa9\xe3\x8c\xb5\xce\x6f\xed\xf0\xdb\x62\x9b\xc1\x04\xdc\xc6\x8d\x1e\x41\x90\x48\x80\x36\xa9\x09\x81\xbb\x34\xc4\x96\x5c\x80\x27\xce\xf9\x1b\x3c\xd6\x09\x8c\x0a\xb0\xd5\x7d\xe4\xea\x83\x90\xf4\x4f\x0a\x22\x6f\xac\x1d\xcd\x77\x42\x9b\x6c\xf6\x53\x9f\xca\x35\x87\x35\x58\x90\x4b\xac\x29\xdf\x10\x47\x73\x29\x8e\x75\xb1\xdf\xd7\x0f\x14\x3b\xe7\x8a\xd5\xf6\x83\xbd\xe4\x1b\x96\x66\xec\x61\x56\x3e\xab\xda\xc7\x40\xb3\xeb\xe5\x54\xa9\xb1\x6b\x75\xc7\x29\x71\x79\xe0\xa1\xc8\xe8\x3e\x4b\xc7\xe4\x9c\x2a\x39\x65\x3a\xef\x79\x1a\x0e\xab\x6e\x26\x9d\xe9\xf6\xc3\x76\x6a\xb1\xc0\x84\x86\xbb\xed\xf5\xdc\xa5\x91\xa8\x3e\xde\x15\x93\xe9\x36\x13\x31\xa9\x9e\xc0\xed\x6e\x62\xa4\x31\x53\x19\x07\xab\xd8\xa6\xc2\x76\x36\x98\xdb\x3a\xf7\xca\xc8\xba\xae\x69\x85\x16\x75\x52\x35\x43\xae\x2b\xac\x8f\xad\x6f\x40\xa8\x7e\x4e\x98\xc6\x49\x86\xbe\xbf\xfa\x29\xe3\xcd\x39\x7e\x6e\x44\xcf\xd3\xa7\x1e\x14\xea\x47\x32\x5f\xcd\x46\x49\x03\x06\xa2\x06\x03\x4d\xc1\x71\x8f\xfc\xc4\x07\x7e\x5e\xef\xbb\xd3\x22\x3b\xbc\xaf\x15\x40\xc2\x69\xec\x6e\x32\x66\x21\x17\x98\xb9\x8c\xfd\x10\xa9\xdf\xc2\x9a\x13\x54\x9f\x73\xa1\x83\x8f\x4b\x80\x0e\xb8\x7e\xec\x90\xf5\x25\x27\xbd\x13\xa0\x8a\x1d\xd1\xfa\x01\xb8\xe0\x85\xb3\x4e\x47\x6b\x53\x33\x9f\x58\xfb\xf7\x2f\xf2\x8f\x15\xc9\x7a\xfe\x7f\x6e\xfe\x1b\x00\x00\xff\xff\xdc\xeb\x52\x05\x8f\x06\x00\x00")

func test_certsMtClientTenant123456789KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsMtClientTenant123456789Key,
		"test_certs/mt/client-tenant.123456789.key",
	)
}

func test_certsMtClientTenant123456789Key() (*asset, error) {
	bytes, err := test_certsMtClientTenant123456789KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/mt/client-tenant.123456789.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x23, 0x2d, 0xf8, 0x7a, 0x4c, 0xd5, 0x3, 0x12, 0xaa, 0xe8, 0xde, 0xe4, 0xe7, 0x9b, 0xd7, 0x35, 0x67, 0x5c, 0xee, 0x66, 0xd, 0x77, 0xc4, 0x47, 0x93, 0xc2, 0x14, 0xa0, 0x52, 0xd9, 0x94, 0x4b}}
	return a, nil
}

var _test_certsMtServerTenantCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x3d\xd3\xb2\xbc\x02\x84\x7b\x7e\xc5\xe9\x9d\x33\x20\x2a\x4a\x71\x8a\x84\x04\x08\x98\x68\x44\xf9\xea\x00\x31\x80\x28\x82\x1f\x11\x7e\xfd\x99\xfb\x2e\x9e\xa7\x78\xdf\xad\x76\xae\x9d\xd9\x6a\x67\xff\xfb\x23\x88\x1d\xc2\xfe\x63\xe1\xc3\x91\xd8\xc4\x02\x47\xfc\x4b\x15\x4a\x08\xf2\x91\x65\x81\xca\x12\x40\x12\x08\x04\x39\x00\x56\x8d\x39\xb1\xd6\xaa\xba\xd4\xbd\xe2\x71\x28\x9d\x55\x79\xc8\xb1\x44\x3c\xf1\xfc\x2e\x25\xd5\xa7\x60\x80\xe3\x2d\xe4\x40\x2a\xfe\x84\x03\x0a\x81\x03\xe6\x27\x6c\x55\xd4\xe3\xba\xd9\x64\x0b\xef\x93\x44\xac\xa3\x87\x93\xc4\x32\x41\x21\xe7\x08\xcb\x2f\xca\x75\x36\x14\x37\xb3\x4a\x74\x21\xb8\x86\xa5\x5b\x15\x4c\xa1\x0d\x90\x6c\x22\x23\x3d\x26\x72\x87\xe8\x14\x55\x05\xa3\xcd\xe9\x87\x2d\xfe\xb0\x06\x9c\xe8\x81\x48\x0c\x7e\xcb\x7c\x2c\xdb\x3f\x65\x4a\xa2\x0b\x29\x04\xae\x29\xd0\x1c\x2b\xe8\x9d\x80\xe4\x0b\xc4\x31\x04\xfc\x04\xc0\x92\x40\x24\xc1\x4f\xee\x83\x8e\x40\xc0\x2d\xd3\x4e\xc2\x9d\xea\x65\x8b\xdc\x70\x52\x21\xc4\x57\xe1\x2d\xd2\xbe\x93\x21\x56\xef\xa0\x9d\x91\x2c\xdf\xf3\xce\x89\xca\xef\x80\x32\xcf\xcb\xcf\x69\x5e\x3f\x9c\xa5\xc1\xc6\xd1\x41\xa4\xb6\x24\x6e\x67\x39\x50\xe7\xdd\x6b\x75\x78\x74\x9b\x66\xda\x5b\x8a\x0c\x53\x37\x2d\x19\xb9\x08\x4a\x37\x83\xb3\xce\xe7\xcf\x75\xb7\x34\xd6\xdc\x7c\xaa\x4f\xd5\x9b\x5f\x1e\xe9\xd3\x3e\x9f\xac\x86\x21\xf5\x81\x81\x1a\x00\x59\xaf\xfa\x30\xd1\xea\xac\x70\xcb\xcc\x52\x92\x43\x97\xc3\x79\x18\xeb\xd0\x80\xfa\xf5\x95\xea\xd7\x93\xe9\xa5\x81\x3d\x1b\x45\xbe\x6a\x2c\x19\xba\xc7\x6e\xc6\x2f\xd3\x74\x6f\xc7\xe5\x42\x17\xee\x7e\xa7\x79\xb7\xad\xb6\x3e\x7b\x9a\xad\x42\x5f\x59\xde\xe6\xfe\xf2\xc2\x34\x0a\xb4\xf8\xc8\xfc\xb7\xfb\x8c\x7b\xc8\x87\x76\x7f\xb9\x5c\xde\xeb\x09\xd0\x34\xb1\xf1\xa9\x65\x31\x86\xb9\x11\x49\x1e\xcd\x16\x2a\x98\xee\xbb\x82\x65\x49\x19\xc7\x48\xa9\x6f\xe9\x5e\x54\x22\x9a\x0e\xb5\xd7\xf9\xe7\xd5\xdd\xb6\xcd\x7e\xbb\xf2\x42\x5f\xeb\xf9\x48\xa3\x4d\x73\xb7\xc9\x6b\x53\xd7\xf7\xab\x33\xad\xb5\x59\x56\xa7\x65\x7b\xb4\xed\x56\xaf\x02\x75\xbe\x29\x94\xb2\x1d\x5f\x40\x50\x08\x80\xd3\xc4\x0d\x2c\x28\x58\xfe\x6c\xe2\x8c\x24\x86\xaa\xe4\x18\x48\x62\x77\x08\x1c\xa1\x60\xa1\x1b\x9c\x30\x42\xc0\x87\x42\x0c\x50\x60\x1b\xf2\x02\x29\xe0\x08\xe6\xbf\xe1\x01\xe3\x6d\x03\x9e\x42\xb4\xcf\x5c\x67\x55\xee\x54\x9f\x62\x11\x58\x70\xec\xde\xb9\x63\x36\x49\x34\xba\xd0\xdd\x00\x00\x1c\x17\x83\xbf\x52\xfe\xda\x7f\x9d\x2a\x12\x02\x43\x00\xc3\x74\x28\xc0\xe9\x9d\xa7\x8b\x5e\xd7\xc1\x60\xc4\x7d\xb1\xce\xe8\x5a\x3f\x0f\xca\x6b\xd0\x4d\xbb\x2f\x2c\x87\xba\x43\x10\x70\xeb\xad\xa7\x71\x84\x73\x3d\xc9\xd0\x2e\xe1\x54\x87\xc5\x67\xfe\xd9\x6b\x2f\x75\x08\xbb\xfe\xdb\xb4\x57\x6f\x68\xae\x06\xae\x19\xb3\x8d\xb5\x6d\x1a\xca\xc2\xaf\xd4\xc3\x14\xd2\xc8\xad\x2e\xc1\x53\x26\x34\x51\xb1\x45\xb7\xe3\xee\xc8\x81\xba\xd8\x3b\x59\x02\xc6\xc7\x94\x89\x2c\x34\xa3\x22\xe8\x72\x62\x8f\x71\x1a\x4c\xcc\x2a\xdc\xfe\xf5\x18\x37\xca\x7c\x70\xaa\xf7\xe3\xf3\x40\xbb\xdb\x47\xad\x8e\x4f\x7f\x76\x5a\xf8\xfe\x9d\x10\x68\x93\x73\xbc\xc8\x47\xe1\x58\x71\xb5\x1d\xf6\xea\x9b\x7e\xda\xf6\x39\x6c\x22\xe7\x15\x39\x31\xc9\xd7\x2b\x63\xbb\xbc\x2b\xb3\x24\xd5\x4c\x23\x1d\x4c\xff\x7c\x46\xa2\x7e\x17\x32\xaa\xeb\xab\x76\xab\x2d\x35\xe3\x30\xd8\xdf\xca\xcd\x3c\x39\x1c\x77\x8f\xec\x43\x76\x91\xc3\x6e\x6e\xc4\x58\xb1\xe6\x91\xa6\xc9\x7a\x9b\x6f\x14\x1c\x7c\x37\xb1\x31\x6a\xd8\x14\xb1\x83\x56\xfd\x79\xe6\x75\xda\x4d\x4d\xcf\x51\x3e\x7f\x35\x3d\x04\x65\xb6\xdf\x5f\xf7\xfe\xa0\xa9\xb7\x72\x48\x7a\xb5\xdb\x86\x62\x48\x4b\x33\xe0\xff\x53\x7e\x2f\x05\x33\xf4\xcf\x9b\xf9\x7f\x00\x00\x00\xff\xff\x56\x2a\xfc\xa5\x83\x04\x00\x00")

func test_certsMtServerTenantCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsMtServerTenantCrt,
		"test_certs/mt/server-tenant.crt",
	)
}

func test_certsMtServerTenantCrt() (*asset, error) {
	bytes, err := test_certsMtServerTenantCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/mt/server-tenant.crt", size: 1155, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x67, 0xda, 0xc, 0xd1, 0xad, 0x15, 0xc9, 0x4b, 0x15, 0x92, 0xf0, 0x8, 0x51, 0x79, 0x8d, 0x5a, 0x92, 0x8, 0x3c, 0x88, 0x2c, 0x34, 0x20, 0xdb, 0x5, 0xd9, 0x59, 0x4f, 0x41, 0x57, 0x30, 0xb3}}
	return a, nil
}

var _test_certsMtServerTenantKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb5\xd6\xb3\x50\x02\x85\xe1\x9e\xab\xf8\x7b\xd6\x2c\x2c\x41\xca\x83\x1f\x20\xc1\x2d\x1d\x12\x9c\xe0\x7a\xf5\xb3\xe6\xab\x67\xb7\xbb\x79\xbb\xe7\x3f\xff\x1b\x2f\x29\xf0\xfd\xcf\x71\xc1\x3f\xcb\x81\x01\xf0\xa4\x7f\xba\x14\xff\x3d\xc8\x0b\x42\x69\x38\x20\x0f\x80\x2e\x00\x5b\x02\xbb\x13\xca\xde\x7e\x85\x2b\x89\x56\x7d\x0c\xe1\xcb\xd7\x6c\xee\x95\xa1\x83\x99\xb6\x63\x51\x2b\xfd\x8d\xeb\x7c\xf7\x5b\x92\x83\xac\xdd\x90\x0a\x91\xf0\x31\x39\x9b\xd9\x64\x4b\x55\x5e\xb0\x5c\x78\xad\xe8\x0f\x8b\x4b\x8c\xaf\x9f\x24\x16\x64\xef\x63\x91\x43\x87\x8c\x1a\x57\x7d\x88\xa2\xa5\x9f\x1b\xc9\xa5\x26\x6d\x9a\x1b\x6e\xa5\x16\x63\x5d\x48\x1e\xd1\x61\xca\x47\x01\x18\x6e\x1b\xa3\x1d\x60\xe1\xe5\x0b\x6e\x49\x17\xbe\x61\xff\xe3\xa9\xbe\xec\xa5\x44\x39\xf2\x20\xe0\xca\x6f\x99\x8f\x46\x98\x8f\xb2\xe5\x86\x7e\x55\x2c\x83\x82\xc6\x07\xb2\xc8\x0e\x4e\x5b\xad\xca\xb2\xcf\x67\xb6\xbd\xb9\x81\xbf\xef\x55\xf8\xd4\x9c\x49\xb9\x39\x5f\x1c\xee\xa6\xad\xee\xa6\xde\xb9\x08\xde\x32\x7e\xbb\x73\xc5\xc8\x74\xe9\xeb\x4f\x8f\xa2\x28\x66\x63\x91\x43\x54\x42\xde\x91\x35\x2f\x38\x41\x88\x76\x8b\x24\xef\x2b\x76\xbc\x9e\xf7\x4f\x0c\x7b\xb5\x23\x8e\xc7\xd8\x7b\x0f\x18\xcb\x0b\x1e\xd7\x89\xf0\xfb\x7e\x4e\xa7\x48\x6a\xd4\x0d\xdc\x55\x6f\x5f\x0d\x22\xef\xf0\x79\xba\x46\x01\x87\xf1\xc9\x2f\x28\x67\xf5\x43\x1f\x8d\xfe\xe9\x7c\xf2\xc1\xdf\xb9\x42\x55\xc7\x6c\xb6\xa1\x08\x6c\xc0\x83\x01\xf2\x40\x09\x8c\xec\x2a\xc3\xf4\x34\x25\xc3\xe9\x7c\x64\x7e\x37\xdf\xe3\xf8\x6d\x1c\x29\x9d\x19\x1c\xd7\x6c\xc8\x82\xf6\x1c\x65\x56\xa4\xe5\xaa\x3d\x68\x45\xbe\x4b\xbe\x36\xd0\xf7\xcb\xc3\x68\xc2\x34\xbe\x74\xcb\x67\x64\xb6\x0f\xd4\x67\x26\x03\x23\x41\x24\xb8\xb5\x52\xd4\x67\xd1\xcc\x29\xfa\x08\x71\xa3\xb8\xed\xa5\x1a\x07\xe1\x49\xbd\x0e\x22\x93\xf4\x99\x01\xe8\x31\x25\xf6\x63\x6f\x8c\x16\x0b\x6a\xbf\xcf\x93\x76\x91\x8c\xe5\x81\x15\x4b\x5f\x21\xe7\x71\x5a\xc7\x2c\xd3\x10\x97\x08\x25\x98\xdf\x16\xaf\x73\xdb\xfb\x10\xe4\xad\x74\xd9\x38\x25\xef\xa4\xd0\x53\x4e\x68\x37\xa9\x3b\xf1\x23\x73\x4c\xee\xa3\x35\x7a\x64\xec\xb8\x89\x8f\x14\xda\x22\xbe\x2c\x11\x0c\x61\x98\x43\x28\xc4\xc1\x4e\x13\x4f\xa2\x65\x8a\x12\x0b\xa8\xb1\xcc\xb3\x82\x7b\xce\xb9\x8f\x59\xe1\x38\x83\xce\x9b\xe6\xd4\xb9\x80\xb6\xd1\xd7\x06\x1f\xa7\x3f\xd2\x89\xf7\xdb\x90\x6f\x0b\x7a\x31\x60\xfa\x31\xc5\x73\xc8\xd2\x90\x95\x4e\x07\xe7\xb3\x40\xe4\x4e\x00\xe9\x6c\x34\x29\x03\x6f\xad\x0a\xa3\x24\xde\xbc\x04\xd3\x5f\x79\xbd\x66\x75\x96\x37\x1e\x98\x91\x3f\xae\x05\xc1\xfc\xa1\x2b\x42\x5c\x28\x63\x09\xdc\xa7\x4d\xa5\x80\xcb\x19\xb0\x30\x51\x35\x3a\x1e\x6d\x94\xe2\x27\xbc\x6b\xfe\xfd\x59\x1e\x62\x14\x11\x31\xd3\xb9\xe6\x60\x34\x92\x96\x36\x3a\x3f\x76\xd9\x82\x68\x2c\xf5\x1b\xd4\xec\xa1\x68\x7b\x6b\x32\xac\x68\xef\x39\xca\xf1\xd5\x33\xbd\x2c\x4e\x67\x9d\xe2\xde\x05\x9e\xc2\xe2\xec\x92\x8c\x97\xd1\x40\x9b\x0d\x8a\x64\x6a\x74\x36\xfe\xa1\xc1\x65\x95\x34\x62\xbb\x92\x4a\xb7\x0a\x49\xd4\x35\xf6\x0a\x5d\x12\xb7\x22\x35\x3f\x51\x7d\xba\x85\x31\xfd\x10\xd1\x63\x2f\xf2\x9c\x0c\xa9\xaf\x9d\x1f\x84\x53\xa0\x67\xa0\x5b\xc4\x90\xfd\x15\xd3\x99\x04\x90\xf3\x43\x52\xab\xb1\xba\xca\x49\x96\x7b\x9d\x3d\xc0\x5c\x93\x78\x7d\xd5\x59\xce\xed\x81\x83\xbd\x4d\x96\x1b\x2f\x8d\x65\xd4\x47\xef\x0b\xe9\xca\xb3\x92\x71\xde\x0e\x39\x41\xec\xa9\xa7\xb9\x17\x23\x97\x44\x3f\x9d\x53\x64\xbe\x63\xa8\x6f\x6e\x47\x64\x20\xd0\xb1\xe0\x23\xf8\x12\xde\xbf\x3f\xb8\xd5\x9a\x4e\xfc\x51\x37\xd8\xc9\x70\x4a\x28\xa2\x66\x01\x4f\x4d\xa8\x43\x0c\x6e\x81\x4f\xbe\x94\x21\xf3\x74\x0a\x84\x66\xbe\xda\x13\x07\xbe\x86\xa7\x1b\xd0\xcd\x37\x14\x9d\xfa\x6b\x6d\x75\x48\x51\x29\xb5\x76\xa2\xb0\xfc\x25\x0f\x81\xbe\xf5\xa3\xf0\xd5\xf7\x28\x50\xda\x49\x49\x0b\x5b\x46\xbe\x10\x8b\x8a\x68\x09\xd6\x59\x7d\xca\xc4\xd5\xcf\x5d\x07\x31\xf1\x1d\x75\x91\xda\xa4\xd7\x2b\xf1\xaf\xb2\x43\xb7\xbb\x23\x96\x38\x25\x05\x4c\xa1\x67\x4f\xb6\x07\xd7\xec\x8a\x4c\xec\x5e\x3e\x85\xfc\x06\xac\xf8\x95\xd3\x06\x3e\x21\x0c\x19\x4f\x8e\x1a\x54\xd4\x7f\x2e\x6b\xb4\x20\x02\xfa\xaf\x32\xc5\xfd\x8e\xc6\xe3\x76\x24\x3b\x31\x76\x81\x32\x99\x17\xf7\xf8\x60\x80\xc3\x6e\x1e\x7c\x1c\x01\x69\x9f\x5c\x87\xfa\x4f\x1f\xb7\xbd\x89\xad\x8a\x3d\xdb\x06\x8b\xd7\x25\xa1\x8c\x81\xea\x64\x0d\x15\xd9\x56\x60\xe8\xb3\xe9\x5e\xd3\xa1\x72\x03\x66\x93\x14\xbe\x96\xb7\x71\x0b\x8c\xd7\x0a\x17\x83\x7c\xa7\x10\x3e\xc9\x77\x5c\xbd\x2b\xd9\xf6\xf0\x07\x4b\x9e\xa0\x50\x53\x6d\xfe\xba\x38\xc3\x07\xdf\xa6\x3c\xa9\x49\x13\x92\xf4\xa5\xff\xb4\x1a\xda\x96\xfb\x9b\xd5\x9c\x59\xbc\x69\x58\xa6\xb5\x7b\x21\x30\xa5\x13\x37\xed\x1b\x85\xc9\x7d\x6d\x41\xe1\xbb\xdc\x44\x75\x0c\x15\xdf\x66\x96\xc1\x6d\x68\xb7\x35\x51\x9e\xf4\x57\x7b\xa0\x69\x96\xa8\xda\xb4\x29\x96\x54\x52\xe2\x99\xa6\x78\x73\xed\x6b\x84\xc1\xef\xba\x3a\x74\xbe\x14\x62\x1f\x35\xaa\x0e\x62\x9b\xc2\x99\x65\xf9\x0b\xbe\x09\x0a\x59\xfb\x24\x69\xd0\x36\xba\xb5\x96\x6b\x4a\xc5\xbf\xab\x7a\x1e\x56\xcb\x47\xae\xca\x0e\xa8\xf4\xf5\x00\xb2\x9a\xa3\x4d\x04\x38\xad\x29\x17\x6d\xe8\x75\xfd\xa5\x4b\x07\x2b\xa4\x8d\x66\x82\x54\x3b\xc7\x60\xf6\x39\x74\x2e\x1b\xc6\x3e\xd7\x95\x53\x45\xd0\x43\x87\xc5\x7f\x58\xed\x4b\xd5\x3c\x79\x9a\x87\xf4\x53\xc3\x0c\x28\x49\x5e\x75\x8d\x93\xfb\xaa\x1e\x1f\x83\x7a\xc3\xa6\x4a\x71\x87\x07\x0a\xd3\xd1\xfa\x2a\x28\x2d\xef\x53\xaf\x47\xc0\xe8\x35\x66\x9f\xdb\x13\xf9\x23\x45\x7a\x8b\xff\x9f\x9a\xff\x06\x00\x00\xff\xff\xc4\xc3\xec\x7e\x8b\x06\x00\x00")

func test_certsMtServerTenantKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsMtServerTenantKey,
		"test_certs/mt/server-tenant.key",
	)
}

func test_certsMtServerTenantKey() (*asset, error) {
	bytes, err := test_certsMtServerTenantKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/mt/server-tenant.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xed, 0x6c, 0xc1, 0x10, 0xc7, 0xf7, 0xde, 0x4c, 0x52, 0xfd, 0xab, 0x9, 0x5f, 0xd, 0xff, 0x23, 0x3d, 0x13, 0x36, 0xa3, 0xa, 0x37, 0xeb, 0x19, 0xfa, 0x4c, 0xe2, 0xdc, 0x6f, 0x1a, 0x64, 0x18}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"test_certs/ca.crt": test_certsCaCrt,

	"test_certs/ca.key": test_certsCaKey,

	"test_certs/client.root.crt": test_certsClientRootCrt,

	"test_certs/client.root.key": test_certsClientRootKey,

	"test_certs/client.testuser.crt": test_certsClientTestuserCrt,

	"test_certs/client.testuser.key": test_certsClientTestuserKey,

	"test_certs/client.testuser2.crt": test_certsClientTestuser2Crt,

	"test_certs/client.testuser2.key": test_certsClientTestuser2Key,

	"test_certs/node.crt": test_certsNodeCrt,

	"test_certs/node.key": test_certsNodeKey,

	"test_certs/mt/ca-client-tenant.crt": test_certsMtCaClientTenantCrt,

	"test_certs/mt/ca-client-tenant.key": test_certsMtCaClientTenantKey,

	"test_certs/mt/ca-server-tenant.crt": test_certsMtCaServerTenantCrt,

	"test_certs/mt/ca-server-tenant.key": test_certsMtCaServerTenantKey,

	"test_certs/mt/client-tenant.123456789.crt": test_certsMtClientTenant123456789Crt,

	"test_certs/mt/client-tenant.123456789.key": test_certsMtClientTenant123456789Key,

	"test_certs/mt/server-tenant.crt": test_certsMtServerTenantCrt,

	"test_certs/mt/server-tenant.key": test_certsMtServerTenantKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"test_certs": {nil, map[string]*bintree{
		"ca.crt":               {test_certsCaCrt, map[string]*bintree{}},
		"ca.key":               {test_certsCaKey, map[string]*bintree{}},
		"client.root.crt":      {test_certsClientRootCrt, map[string]*bintree{}},
		"client.root.key":      {test_certsClientRootKey, map[string]*bintree{}},
		"client.testuser.crt":  {test_certsClientTestuserCrt, map[string]*bintree{}},
		"client.testuser.key":  {test_certsClientTestuserKey, map[string]*bintree{}},
		"client.testuser2.crt": {test_certsClientTestuser2Crt, map[string]*bintree{}},
		"client.testuser2.key": {test_certsClientTestuser2Key, map[string]*bintree{}},
		"mt": {nil, map[string]*bintree{
			"ca-client-tenant.crt":        {test_certsMtCaClientTenantCrt, map[string]*bintree{}},
			"ca-client-tenant.key":        {test_certsMtCaClientTenantKey, map[string]*bintree{}},
			"ca-server-tenant.crt":        {test_certsMtCaServerTenantCrt, map[string]*bintree{}},
			"ca-server-tenant.key":        {test_certsMtCaServerTenantKey, map[string]*bintree{}},
			"client-tenant.123456789.crt": {test_certsMtClientTenant123456789Crt, map[string]*bintree{}},
			"client-tenant.123456789.key": {test_certsMtClientTenant123456789Key, map[string]*bintree{}},
			"server-tenant.crt":           {test_certsMtServerTenantCrt, map[string]*bintree{}},
			"server-tenant.key":           {test_certsMtServerTenantKey, map[string]*bintree{}},
		}},
		"node.crt": {test_certsNodeCrt, map[string]*bintree{}},
		"node.key": {test_certsNodeKey, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
