// Code generated by go-bindata. DO NOT EDIT.
// sources:
// test_certs/ca-client-tenant.crt (1.151kB)
// test_certs/ca-client-tenant.key (1.675kB)
// test_certs/ca.crt (1.151kB)
// test_certs/ca.key (1.679kB)
// test_certs/client-tenant.10.crt (1.168kB)
// test_certs/client-tenant.10.key (1.675kB)
// test_certs/client-tenant.11.crt (1.168kB)
// test_certs/client-tenant.11.key (1.679kB)
// test_certs/client-tenant.20.crt (1.168kB)
// test_certs/client-tenant.20.key (1.675kB)
// test_certs/client.root.crt (1.143kB)
// test_certs/client.root.key (1.679kB)
// test_certs/client.testuser.crt (1.151kB)
// test_certs/client.testuser.key (1.675kB)
// test_certs/client.testuser2.crt (1.151kB)
// test_certs/client.testuser2.key (1.675kB)
// test_certs/node.crt (1.281kB)
// test_certs/node.key (1.679kB)

package securitytest

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _test_certsCaClientTenantCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\xb9\xd2\xaa\x68\x10\x40\x73\x9e\x62\x72\x6b\x4a\x44\x01\x0d\xfb\x5b\x90\x7d\x5f\xcd\x00\x95\x4d\x45\x51\xf8\x84\xa7\x9f\xfa\xff\xe0\x06\x73\x3b\x3c\x55\x7d\xaa\x83\xae\xf3\xef\xcf\x20\x7a\xd4\xec\x7f\x30\xf5\x43\x4d\xd1\x30\x84\xf4\x97\x72\x96\xa6\x11\xbd\xc5\x18\x2a\xa9\x02\xa6\x21\xa8\x34\x1f\x8c\xd4\x3f\x35\x6b\xdf\x0e\x56\xe1\x8b\xa9\x19\xa6\xd2\x93\x37\x3a\x46\xbc\x4c\x37\xfa\x93\x56\x4f\xa5\x0d\x1e\x35\x91\x07\x8c\x33\x16\x1a\x58\x08\x8e\xb0\x89\x28\xae\x2d\xdd\x13\x0e\x6d\xbe\xd5\xa7\x2c\xb1\x7b\xcb\x8f\x18\x65\x19\x89\x3d\x8f\x50\xf6\x25\x85\x60\x0f\xe5\xfd\x50\x67\x42\x55\x79\x3c\x65\x6a\x5d\xda\x9c\xd5\x52\xe6\x10\xba\xb1\xc2\x72\xe3\x84\x20\x24\x75\x69\x5b\xcb\x0f\xd3\xf8\x3f\xac\x85\xc1\xf2\x35\x46\xe1\x57\x66\x50\x76\xfb\x23\xe3\x32\xa1\xfa\x2a\x21\x84\xa8\xb2\x63\x04\x56\x48\xa8\x3d\x65\xc2\x67\x2e\x04\xa5\xcd\x31\x22\x5e\x88\x31\x04\xda\xff\xcf\x47\xc8\x03\x52\x55\xd4\xe5\x80\x60\x0c\x5e\x8f\xab\x8a\x22\x30\x21\x89\xde\x96\x9e\xcf\xf9\x22\x13\x0b\xce\x83\x19\x75\x39\xbe\x3a\x79\xfc\x5d\x75\xed\xad\xa5\xe8\x34\x5e\xd5\xd3\xfd\x66\x2c\xcf\x2d\x56\x70\xdb\x95\xdc\xa8\xea\xe6\x3a\x98\xe1\x23\x17\x8d\x5f\x5f\x7d\x43\xc9\x6b\x77\xf0\xa1\x14\xe5\x8b\xa9\x98\x96\x90\x39\xbd\xbc\x31\x50\x68\x9b\xc8\x1d\xf5\x91\x64\x04\x26\x39\x61\xcd\xe6\xeb\xcf\xca\x5e\xe2\x56\x52\x78\x3d\xae\x86\xa4\x76\xd3\x0c\xf3\xcd\x33\x0e\xa6\xcf\xd9\x7b\x6c\x66\x77\x99\xf6\xe2\x7e\x08\x50\x60\xcb\xd9\xee\x7e\x90\x3a\x10\x1f\x8e\x8a\x77\x7d\x2f\xdd\x53\xa6\xab\x4e\x8d\x83\xf4\xce\x5d\x1e\xaa\xcf\x82\xc3\x27\xe6\x2f\xf7\xe2\xad\xc8\x82\xa6\x89\xd0\x76\xf8\x41\xdf\xf1\xf3\xa2\x91\x95\xc3\xbb\xa9\x20\xf1\xde\xdd\x94\xd8\xab\x39\x3a\x21\xda\xe5\xd1\x7e\x09\x36\xfb\xd3\x2b\x6c\x5a\x8e\x14\xe2\x7d\xb6\x9f\xca\xf9\x88\x1e\xf2\x7c\xcd\xdb\x61\x8a\xef\x17\xf3\xdb\xe6\x6c\xc8\x84\x31\xfe\x06\x39\x6c\x70\xa3\x84\xc3\xe8\xc8\xc9\xed\x15\xed\xa9\x93\x74\x59\x5a\xde\x49\x66\xd9\xe4\xc9\x79\x55\xb1\x4e\x2e\xa7\x0f\xb9\x29\xe9\xa3\x33\x54\xdd\x7e\x24\xd2\xeb\xa4\xaf\x27\xe1\x39\xd1\xdb\xce\x74\x3b\x0c\x8c\x02\xe4\xb6\x62\x51\x8b\x91\x2a\x23\xb1\xcf\xbb\xe0\xa9\x6b\x04\x1e\xe1\xa0\x32\x3b\x0b\x69\x3f\x8f\x74\xa6\x8c\xa2\x35\xf3\x34\x0b\x32\x04\xd7\x3d\x06\x8f\x32\xd5\xfb\x5d\x70\x10\xca\xa8\xe2\x5e\xbb\x3c\xcf\xbf\x65\x2a\xb7\x0b\x9f\x9e\xf3\x66\x35\x72\x5b\xa6\xa4\xdd\x7d\x21\x16\xf0\x47\x1c\xbc\x8e\x81\x56\x6c\x89\x47\x11\x66\x11\xc0\x4e\x43\xe0\xe1\x1e\xbf\x20\x54\xae\xee\xe1\x5b\x0c\x72\x94\x52\x2d\x69\x86\xe8\xec\x9e\x79\x61\x37\x31\x2e\x69\xed\xd2\x5b\x06\x85\x6a\xdf\x6f\xb1\xbc\x87\x6d\xbe\x71\x9d\xe6\x21\x5b\xd3\x48\x4c\xf5\x90\xd5\xaf\x8b\x9a\xba\xc8\xbf\x44\xdb\x5a\xa5\xf3\x55\xad\x58\x37\x55\x69\x6f\xa9\xc7\x79\xbc\x85\x05\xf7\x9e\x4c\x43\x44\xcd\x67\x57\xf4\x85\xd1\x36\xcd\x29\x7e\x5d\x06\xf6\x9e\xb5\xb3\xee\xbc\x8b\x8d\x64\x4d\x65\x04\x78\x3e\x07\xa3\x0f\x8e\x18\x8c\x72\xd0\x88\x6d\xbc\x92\xf7\xcb\x74\x50\x7d\xf1\xc9\xb5\x0d\xe1\x49\x1f\x9c\x4b\x37\xaf\x6d\x76\x93\x3f\x27\x05\x75\xe0\x61\x48\xc5\x5d\xaa\xf7\x56\x1a\x31\x4f\xad\x66\xcb\x1e\xfa\xf1\x6a\x9e\x83\xe4\x26\x6d\x85\x28\x0e\xe4\xa8\x53\x0f\xa1\x7c\xe0\xce\xbb\x6e\x95\x8c\x4f\x63\x6d\x9f\x40\x9f\x9f\x65\xe3\xcc\x4b\xf0\xcd\xf8\xf4\xb3\x26\xcc\xde\x7f\x6a\xea\x6e\x57\xf5\xd6\xd3\xa2\x58\x12\x3c\xf5\x11\x65\x16\xe8\x7b\xbf\xe8\x97\xee\x18\xbc\x78\x9f\x7b\xee\x30\xb0\xcf\xe1\x14\x8a\x33\x0a\x86\xa8\xab\x63\x5d\x19\xa5\xc1\x91\x87\x75\x69\x96\xc5\xeb\xd2\xda\x11\xe5\xb5\x95\x08\xd1\xce\x7c\x4b\x35\x7a\xf8\xc6\xba\x16\x15\xee\x37\x27\xd4\x26\x7f\x27\xe6\xbf\x00\x00\x00\xff\xff\x80\xdd\xa9\xfa\x7f\x04\x00\x00")

func test_certsCaClientTenantCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantCrt,
		"test_certs/ca-client-tenant.crt",
	)
}

func test_certsCaClientTenantCrt() (*asset, error) {
	bytes, err := test_certsCaClientTenantCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7d, 0xa1, 0xa4, 0x5d, 0x50, 0x23, 0x7b, 0x7f, 0x24, 0x26, 0x76, 0xe, 0xd9, 0x7f, 0x34, 0xc6, 0xee, 0x29, 0xcd, 0x42, 0xd2, 0x39, 0x65, 0x8e, 0xc9, 0x19, 0x68, 0xbb, 0xc3, 0xda, 0xb4, 0xab}}
	return a, nil
}

var _test_certsCaClientTenantKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xa7\x12\xa4\x50\x02\x85\x61\xcf\x53\x8c\xa7\xb6\xc8\x34\x2d\x56\x00\x4d\xce\x39\x38\x42\x93\xf3\x25\x34\x3c\xfd\xd6\x8c\xde\x63\x8f\xf9\xdd\xf7\x9f\xbf\xe3\x04\x49\x31\xff\xb8\x1e\xfb\xc7\x76\x95\x90\xf5\x85\x3f\x9a\x90\xfc\x7b\x20\x43\x51\x84\xb9\x56\x38\x96\xd5\x78\xd6\x11\x58\xc0\xa5\xde\x75\x0d\x9b\xba\xd9\xc0\xb8\x38\x1c\xec\x9e\x3b\xab\x0c\xb5\xc4\x32\xed\x59\x91\xe1\x88\x23\xc5\x94\x63\x16\x6c\xd6\x54\x28\x81\x06\x59\xee\x4d\x16\xfd\xf9\xd6\x15\x9e\xd8\x0f\x55\x12\xdf\xc2\x1c\xae\x02\xbc\x0b\xdc\x33\xed\x24\x08\xc0\x93\xd6\x74\x77\x06\xb3\x68\xa0\x40\x80\xc9\x91\x34\x6b\x83\x47\xf6\x9c\xd7\x63\x51\x56\xa0\xf8\xd9\x5e\x8b\xc9\xe4\xf4\x9e\x09\xef\xb2\xd6\x3d\x6d\x08\x35\x18\xc3\xf8\x2a\x56\x10\x0b\x79\xa6\x7b\x57\x44\x85\xd8\xbb\x36\x27\x56\xe7\x33\x16\x64\xa1\xb7\x6d\xb7\xa6\x15\xdb\x17\xb4\xa0\x42\xea\x37\xa5\x8b\x52\xe6\x74\x1c\x8b\x5d\x3a\x3d\xae\xf8\x4c\xea\xae\xe7\x2d\x47\x2b\xbc\x5f\x34\x90\xb5\x4d\xbe\x9c\x77\x95\x6f\x2e\x9f\x9c\x1b\xbf\x2a\x09\x65\xc8\xcd\xe2\x3f\xa6\x1e\xff\xc6\x05\xb2\x34\xc3\x3c\xc7\x5c\xc1\xfb\x10\x4d\xa4\xea\x54\xdf\xab\x75\xbc\xa3\x94\x3c\x25\x73\xe3\xf7\x2e\xa3\x62\x51\x9d\x3f\x81\xa6\x84\xd6\x41\xbe\xf6\x2c\x5a\xfc\xcb\xa1\x32\xb7\x29\xef\xc4\xac\x2f\x08\xb5\x06\x9e\x3b\xdf\x29\x35\xa2\x56\x10\x7e\xbf\xce\x5c\xf4\x78\x99\xaf\x4b\x3f\xc1\x48\x36\x32\x5e\x5c\x03\xd8\x51\x3e\xac\xc3\x72\xec\xac\x70\xac\x98\x56\x9b\x09\x82\x53\x8b\xae\xbc\x0a\x32\xa8\x6b\x5e\x20\xfe\xd0\xd7\x01\x1b\xe3\x4f\x91\xf4\xfc\x05\x8b\x2c\x73\xa6\xa1\xec\xad\x57\xc0\x85\x41\x8d\x9d\x3f\x8e\x40\xa7\xfe\xf7\x96\x6e\xfe\x8c\x89\x96\x0b\x03\xd0\xe8\x3f\x3b\xa4\x32\xc1\x85\x44\x3e\x37\xb3\xab\x13\x3f\xcd\x77\xca\x7e\x6b\xe6\x36\xe2\x00\x24\xfb\x58\x45\xd0\xeb\x41\x05\xd6\x12\xe9\xc7\xf7\xd0\x5f\xd8\x74\xda\x2d\x18\xaa\x68\x27\x10\x71\xf9\xa2\x9e\xc8\x8e\x75\xe8\x40\xc9\x88\xd2\xd2\xae\x7a\x1e\x7f\xa8\x5f\xc6\x41\x76\x06\x88\x15\xdf\x66\x2a\x56\xe3\x73\x78\xc8\xd7\x7e\x71\xf0\xd7\x5b\x11\xdb\x76\x6c\xab\x64\x5d\x0d\x3e\xc3\xb9\xe7\x5d\x6b\xff\xf9\xa3\x27\x43\x58\x25\x39\x26\x85\x65\xdd\x50\xa1\x94\x0e\x06\x86\x4c\xa4\x17\xca\x85\x95\x1b\x52\x41\x5d\x9c\x42\x05\x23\xc8\x9c\x27\xd3\xec\x45\x4a\x8e\x63\xd6\x9b\x17\x24\x49\xbd\x78\xca\xef\xa7\xf6\xa6\xa1\xfa\xa5\x96\x35\x35\xe6\x30\x82\x8a\x93\xc6\xfe\x84\x97\x96\x1d\x9a\xcc\xe9\xca\x76\x7b\xe8\xe6\xb5\x99\x71\xe3\x00\xaf\x44\xe2\xf0\x06\x38\x08\xb5\x07\x9b\xd3\xee\x7b\xb9\xdf\x0a\x41\x39\x22\x82\x2e\x6d\x46\xcc\x16\xe5\xeb\x44\x60\xaf\x4e\x1f\xf3\xfc\x50\x30\xb1\x77\xf8\xd3\x28\x08\x57\x50\x98\xce\x3e\xd0\x11\x2e\xe6\xd4\xe9\x83\x0c\x66\xb0\xf1\x49\x09\x50\x2a\x95\x3d\x5f\x8c\xbb\x6f\x50\x66\xeb\x80\xb8\xfd\xd2\x09\xc3\x41\x31\x07\xeb\x37\x4d\x09\x23\xde\xa3\x5c\x25\xc0\xa6\xd8\xec\xf9\x72\xd1\x9e\x12\x44\x2c\xcc\xd6\xdc\x46\xa5\x97\xc4\x77\xe0\x4b\x45\x14\x7f\xe0\xd1\x2b\x10\x88\x8c\xed\x11\x71\xf9\xd3\x27\x4f\x39\xd4\xaf\xa5\xb1\x74\x27\x55\x45\xcb\x83\xd9\x29\x1c\x88\x37\xcf\x5f\x0c\xa8\x14\x5a\xcd\xdc\xdb\xfc\x5c\x56\x1d\x9f\xd2\x43\x19\xff\x8a\x69\x0e\x19\x20\x61\x1d\xf2\xa1\xdf\x34\xb0\x14\x92\x3e\x98\x84\x2c\xc3\x4d\xa1\x31\xa3\x95\x20\xe1\xfd\xaa\x5d\x40\xfa\xee\x71\x61\xe2\xca\x2d\xdd\x58\x37\xbf\xdf\x61\x06\xbe\xdc\x53\x15\xf6\x45\xe4\xd9\xd3\xa0\x69\x49\xe9\x6e\x5f\xa3\xa9\xad\x46\x1c\x0e\xe8\xfd\xb0\x8b\x2e\x7b\xb4\xdb\xbb\x36\x21\x3a\xf0\xea\xca\xf8\xba\x93\xc8\x8c\xf1\x61\xfc\x66\x7a\x2c\x12\xf3\x1d\x81\xc5\x7c\x94\xf4\x5b\x4b\x62\x08\xc7\x34\xd3\x6e\xc4\x8b\x52\xbe\x8d\xba\x6c\xa9\xe0\xca\x7a\x74\xe1\xe4\xe6\xc7\xc9\xb2\x89\x51\xaf\x2d\x1c\x30\xfe\x26\xb3\xa0\x31\xe9\x23\xf3\x61\xe1\xb5\xc6\x07\xa1\x3d\xae\xe3\xa4\x2f\x08\x61\x4e\x47\x68\x93\x51\x95\x91\x03\xae\xd7\x3a\x8e\xed\xe0\x99\xd6\x6a\x45\x76\xe0\xcd\xcf\x20\xf4\x47\x2e\xf3\x4d\x71\x7d\xf3\x52\xb0\x9d\x43\x83\x79\xe4\x88\xf1\xbc\x36\x6c\xe1\xb3\x04\x11\x54\x05\x65\xf7\x45\x8d\x65\x77\x79\xf1\x20\xa6\x4f\xe0\x49\x1b\x8e\x5b\x20\x8e\x00\x1b\x78\x4c\x87\x72\x24\xca\x25\xcc\x8a\xf8\x9c\xf8\x51\x71\x92\x77\x8a\x92\x3b\xb5\x42\x18\xf2\xdb\xcd\x47\x00\x89\x55\x1d\x08\xb7\xd5\xc4\x89\xe4\x60\x88\xf5\x8a\x30\x5f\x49\x1c\x8d\xab\xe5\x75\xa4\x5e\xf4\x3e\x0a\x6e\xb2\x6d\x4e\x23\xec\x89\xb8\xf6\x03\x01\x7e\x02\xb3\xde\x9f\xb7\xad\xc4\x6e\xc9\x7f\x18\xc8\x97\xa6\x8a\x95\xb9\xed\xf6\x4b\xf5\xb2\x1f\xbd\x82\x69\x63\x24\x14\x5d\x1d\x5d\xf4\x18\xa8\xcf\x71\xdc\x2d\x9e\x07\xc3\x7b\xe8\xc9\x27\x49\x89\x57\x2f\xd0\x9f\xa0\xfd\x59\xc7\xed\xf4\x9b\x97\x42\xef\x73\xfa\x86\x45\x8f\xaa\xc1\xdc\x2c\x15\x62\xe2\x80\x18\xda\x30\x6b\xf1\x81\x6e\x7d\x3d\x57\x5f\xa7\x5c\xc2\x18\x81\x5d\xaa\xa3\x55\xfc\x2c\xa2\xb5\xc1\xfd\x38\x37\x63\xa5\xc1\xe0\xbd\x2c\x84\x26\x44\xd5\xd9\x59\x62\xb5\x16\xe5\x7b\xba\xfc\xf8\x55\x65\x5e\xdf\x27\xca\xe2\x06\x51\x09\x3a\x44\x89\x25\x7c\x5d\x0b\x9f\x4d\x77\xdc\x3f\xb5\xd7\xe8\x17\xec\xae\x32\x22\xce\xa2\xe2\xde\xed\x0a\x19\x6d\xa3\x26\x0b\xcc\x1c\xc1\xa7\xdc\xe7\x42\x43\x91\xc8\xea\x42\x42\x22\xdf\xed\x96\x6e\xb0\x9d\xa6\xc1\xbd\xe3\x66\xd0\x4e\x9a\x6a\xfa\x5c\x8e\xa1\x44\xaa\xaa\x27\x49\xfb\xf8\x5e\x8e\x0a\x80\x4a\xb0\x8d\x6f\xbc\x86\x6b\xab\x9d\x97\x9c\x35\x03\xee\x99\xc6\x2d\x4d\xcb\x5f\xaa\x8a\xdd\xbc\x54\xfe\xc6\x20\x69\x91\x12\xa0\xb1\x15\xe0\xc2\x86\x9f\xfc\x17\xfa\x47\x8a\x60\x7e\xfe\x3f\x35\xff\x0b\x00\x00\xff\xff\x0d\x33\xf4\x67\x8b\x06\x00\x00")

func test_certsCaClientTenantKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantKey,
		"test_certs/ca-client-tenant.key",
	)
}

func test_certsCaClientTenantKey() (*asset, error) {
	bytes, err := test_certsCaClientTenantKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0xb3, 0xdd, 0x64, 0x47, 0xa8, 0x9b, 0x33, 0x7, 0x1e, 0x16, 0x52, 0xcc, 0xd8, 0x11, 0x36, 0xd2, 0x79, 0x9, 0x29, 0x42, 0xaa, 0x60, 0xed, 0xd9, 0xaf, 0x34, 0xd5, 0xd, 0x45, 0xed, 0x20}}
	return a, nil
}

var _test_certsCaCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\xbd\xb2\xb2\x3a\x14\x40\x7b\x9e\xe2\xf6\xce\x1d\x04\x05\xb1\x4c\x48\x30\x08\x01\xc2\xef\xe1\x74\x82\xf2\x8f\x22\x6a\xa2\x3c\xfd\x9d\x73\x8a\xaf\xb8\xdf\x2e\xd7\xcc\x5e\xb3\x8b\x3d\xeb\xdf\x9f\x81\xf8\x60\x7b\xff\x98\x38\x8c\x6d\xcb\x36\x41\x8c\x7f\xa9\x44\x6d\x1b\x1d\x3b\xd3\x04\xb5\x5e\x03\x61\x43\x50\xdb\x21\x70\x78\xce\x0c\x58\xc2\xf9\xca\x0f\x7d\x78\x0b\xcb\xd9\x5f\xc9\x5b\x81\x58\x7e\x74\x6e\xdf\x76\xc3\x4b\x0f\x30\xec\x42\x06\x84\xe4\x2c\x38\xa2\x10\x1c\x80\x92\x60\xb3\xa1\x47\xa6\xee\xbb\xd3\xe6\xc8\xf3\xcc\xbb\xd1\x30\x11\x58\xe4\x28\x65\x0c\x61\xf1\x46\x85\xea\xcd\xe5\xb8\x6f\x72\xb5\xae\xd9\x1a\x0b\xd2\x94\x9e\x44\x3b\x2c\x7c\x84\x15\x1a\x97\x8a\x1f\x03\x25\x6b\x4a\x8f\x2e\x3f\xcc\x5e\xff\x61\x1d\x98\x69\x68\x0b\x0c\x7e\x65\x0e\x16\xc3\x1f\x99\x94\xab\xf5\xdb\x8a\x41\x0c\x6b\x2f\x85\x80\xc6\x08\x7b\x3c\x57\x9f\x9f\x42\xb5\xba\x93\x09\x11\x8b\x4d\x13\x44\xf6\xff\xcf\x87\x90\x01\x54\xd7\x38\x90\x00\x32\x4d\xc0\x6e\x66\x5d\x63\x08\x68\x6e\xa5\x81\x05\x28\x37\xbe\xee\x44\x95\xbd\xfa\xbb\xd5\x15\xf2\xa8\xf4\x40\x36\x2c\xfb\x78\x5b\x67\x48\xeb\x4f\x1e\x9b\x23\xd8\xd8\xce\x9c\x95\xcf\x4a\x6a\x9c\x5d\x73\xee\xbe\x65\xb7\xb5\x09\x25\x5a\x41\xe6\xe7\xbb\x7f\x54\x19\x3b\x27\x61\xdf\xdc\x93\x5e\x4e\xbc\xd5\xd3\xcd\x31\x63\x53\xa9\x5c\xf6\xae\x71\x97\xb5\x43\x39\xbc\xad\xcb\xc0\xf9\x24\x4b\x2e\xea\x8c\x2d\x20\x8d\x6d\x31\xe7\x9a\x7d\xba\x8b\x43\xb4\x20\xbc\xfa\xb3\xfb\xe8\x74\x1d\xda\x98\x97\xc7\x12\xde\xd7\x17\x46\xa8\xc1\x9d\x87\x47\xde\x96\x4c\xb4\x53\xb5\x83\xb5\x86\x75\x2c\xcd\x51\xd5\xc8\xc4\xfe\x44\x81\xbc\x68\x87\xf4\x6b\x4c\x52\xf3\xb2\xa9\x45\x5b\xb8\x25\x48\xb2\x7d\x53\x3c\x5e\x9b\x9d\xeb\xea\xf2\x24\x0c\x33\x58\xea\x8f\x7e\x5b\xb1\x5b\x1a\xe7\x5b\x76\x9b\xdf\xae\x44\x99\xb7\x9d\xd3\x7d\xe5\x67\x42\xe1\x41\xff\x1e\x7c\xaa\x16\x93\x5e\x80\xe4\x5a\x08\x6a\x7e\x82\x5e\x2e\xec\x25\xa4\x45\x77\x45\x6c\x94\x1b\xac\x55\xb6\x1e\xdd\x88\x71\xfa\x6c\xd3\x61\xf3\x92\xca\x9e\x7f\x4f\x43\x9e\x7c\x9c\xfc\xd4\x36\x17\x4f\x39\x1f\x0d\x56\x80\xe9\x58\x0c\xb1\xee\x79\x5f\xce\xae\x34\x81\xc0\x00\x9c\x3c\x8b\x62\x2a\x50\x9d\xa3\x34\x5c\x07\x80\x11\x19\x02\x86\x24\x50\xbb\x3d\x85\xf6\xcf\x23\x9d\xb1\xc0\x50\x16\xcc\xa6\x20\x87\xa0\x32\x4c\xc0\xb0\x20\xec\x77\xc1\x87\x30\xc7\x96\xa5\x1b\x71\x1a\xb1\x9e\x39\xf2\x6b\xef\x12\x0f\x4d\x44\xb2\xee\x23\x55\x8d\x4f\x45\xc1\xfa\x60\x46\xf7\x43\x64\x17\x1b\xc4\x30\x34\x45\x02\xc0\xd6\x86\x80\x99\xbb\x43\x74\x3d\x5f\xf4\x58\xd3\x1a\x7a\x15\x3d\x4d\x8b\x63\x4f\xf8\x29\x22\xca\x7e\x0c\xa4\x4e\xc9\xd4\x71\xb5\x74\xee\xd1\xbc\xfa\x9e\x43\x82\x03\xba\x92\x45\xbd\xba\x6b\xbe\x01\xbe\x37\x1c\xb8\x39\x69\xc1\x23\x39\xb9\xad\x72\xdf\xd4\x1f\x35\x5b\x82\x42\xe4\x4d\x98\x17\x33\x4e\x8c\x9d\xb4\x04\x39\x12\xb1\x10\xdb\x25\x5b\xfc\x07\x5f\x1d\xfa\xec\x1c\x1f\xab\xdd\x33\xa0\xaf\xbd\x6b\x16\xea\xa5\xfb\x14\xd3\xba\x6c\x90\xbe\xfd\x76\xf5\xc9\x69\x09\x6d\x47\x93\x6b\x7c\x56\x52\xb1\x9d\xa4\xf7\x85\x3d\x2f\xa8\xa0\xfb\x45\x5e\xc1\x4b\x48\xe4\xcb\xbe\xd8\xbd\x16\x36\x4d\xcc\x4a\x0c\xff\x3d\xcf\xe7\x32\xa6\x95\x80\xe5\x34\xf0\x79\x35\xbc\x5f\x67\x32\x5c\xdb\xfc\x41\x86\x55\x3e\x69\x44\x3a\xc7\xed\x86\xe7\x1b\x9f\x45\x21\x59\x1e\x2f\xbd\x6e\x75\xde\x92\x71\xe5\x66\x77\x85\x7a\xf7\x60\xfb\x8a\xbc\xde\x19\x92\xcd\xf3\x74\x53\x8b\xd3\x52\xed\xdb\x4c\x8c\xc1\x60\x69\xf0\x8b\xf3\x36\x95\xe6\xe7\xc7\x94\xef\x04\x95\xab\xa4\x22\x3e\xa6\x4f\xa0\x74\x56\xfb\x1e\xbd\x1c\x3d\x0f\xf2\x73\xb3\xec\x40\x0f\xec\xf2\x6b\xd4\x87\xf2\x33\x52\xbe\x87\xe5\x6c\xcd\x60\x94\x7e\x73\x82\x3d\xf4\x77\x62\xfe\x0b\x00\x00\xff\xff\x65\x54\xfb\xaa\x7f\x04\x00\x00")

func test_certsCaCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaCrt,
		"test_certs/ca.crt",
	)
}

func test_certsCaCrt() (*asset, error) {
	bytes, err := test_certsCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3, 0x3e, 0xa8, 0x6d, 0x33, 0x23, 0x4b, 0x9a, 0xd9, 0xaf, 0x8b, 0xaf, 0x7e, 0xd3, 0xe0, 0x4c, 0x6a, 0xa7, 0x34, 0x61, 0x1d, 0xad, 0xe5, 0x7, 0xa8, 0x28, 0x20, 0x7c, 0x9c, 0x29, 0x29, 0xe6}}
	return a, nil
}

var _test_certsCaKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xa3\xd0\x01\x85\xe1\x9e\xa7\xd8\x9e\xf1\x10\x44\x2c\xb6\xb8\x5c\x72\xce\x48\x74\x88\x28\x40\x64\x44\x78\x7a\x8f\xb7\xf6\x69\x4f\xf3\x77\xdf\x7f\xfe\x37\x41\x52\x34\xfb\x8f\x1f\x80\x3f\xae\xaf\xc5\x20\x94\xfe\x18\xd2\xeb\xdf\x83\x58\x9a\x26\x4d\x40\x13\x00\x30\x20\xf0\x24\x70\xd6\x71\xc4\x45\xe0\xc2\xce\x72\xac\xde\x1c\x29\x7c\xcd\x25\x2a\x4f\x6c\xc4\xb0\x23\xaa\xbf\xad\xff\x72\xbf\xfe\x48\xc0\x4d\x53\xa4\x7a\xde\x52\xe4\x22\x50\x69\xd9\x65\xd2\x1e\xb8\x5d\xab\xf3\xa3\xea\xd7\x72\x7f\x28\xc1\xc9\xa7\x02\xe1\x2b\x81\x32\x05\x21\xef\x3d\x18\x7c\xab\x7d\x01\xf6\x77\xcc\xe2\xbf\x6b\xc1\xba\xf4\x7a\x4a\x31\x93\xa0\x08\x3a\x70\xab\xe3\xde\x35\x28\xa5\x3a\x06\x73\xf1\x36\x6c\x6a\xac\x3a\x5e\xc9\x99\x75\xbf\xdc\x65\x94\xea\x80\x3f\xfa\x43\x59\x7c\x1a\xe4\xf7\xc5\xcd\x07\x5e\x49\x4f\xae\xea\x27\x6c\x55\xc4\x0e\x09\xc7\x60\xd3\x51\x95\xcb\x5b\x5d\xc3\x30\xb7\x4b\xe3\x32\xf5\x23\x9d\x2d\x45\xa8\xaf\xdb\x21\xf8\x6f\x52\xde\x2f\xb6\x5a\xd7\xdf\x82\x0e\xe2\xa1\x61\x8e\x68\xce\x2d\x0d\x9b\xd8\x6e\x1b\xf8\x41\x7e\xd2\x7a\x82\xc7\x67\x7b\x12\x1c\xfd\x16\x13\x0e\x0d\x95\x88\xba\xd3\x7d\x98\x56\x21\x28\x7e\xe0\x30\x35\x34\xe4\xd7\xd6\x96\xce\xdd\xc9\x6d\xf8\x46\xa5\xb0\xe7\xda\xc9\xa8\xab\x73\x31\x9b\x04\x79\x96\xf4\x15\xf0\xdf\x6f\xdc\x84\xda\xd4\xcc\x86\x4c\x3d\x62\x7c\x38\x85\x15\x76\xfd\x1e\xbb\x23\x4e\xe4\xcb\x76\x68\x22\xf0\x80\x00\x46\x4d\x00\x1e\x3c\xbe\x8f\x1b\xf4\x6f\xbb\xc7\x49\xd5\x43\x7a\xcb\xd4\x1c\x02\xd7\xd0\x22\x25\x54\x10\x8e\x42\xe5\x33\x5e\x64\xc5\x71\x6c\x07\x77\xf1\xb9\xd0\xdc\xfd\x68\x72\xd0\xb2\x90\x8c\x9c\x20\x49\x59\xd6\x71\x9e\x8d\x76\x6c\x87\xd0\x62\x83\x2c\x21\x99\x21\x3f\x89\x07\xaa\xe8\xc9\x4e\x6d\x22\x3a\x32\x7a\xfe\xaa\x28\x38\xbf\x02\x46\x20\xe1\x5a\x5e\xba\xde\xaf\xe7\xb4\xe0\xde\x75\xbc\x94\x59\xb9\x8a\xd6\x8f\x53\xfd\x11\x91\xe1\x66\x24\x6d\x8d\xf4\x07\x2b\x1b\xab\xe9\xc6\xe6\x57\xe3\x39\x98\x0f\x2a\x3f\xe5\xac\x70\xdf\x19\xcf\xef\xc0\x3c\xfd\x22\xb3\x6d\x7c\x52\x7b\xa3\x83\x47\x25\x43\x2e\x36\x8e\x83\x7b\x12\x7c\x6a\xb1\xa1\x0d\x57\x84\x0a\xd8\x66\xa6\x16\xe5\x8c\x38\x51\x65\x8b\x45\x09\x2f\x53\x24\x04\x9f\x56\x62\x35\xd7\x67\x47\x3d\xeb\x25\xa6\x1a\x20\x30\xb0\xf2\xa7\xad\xd6\x0b\x66\x25\x00\x47\xa2\x35\xc4\xa2\x83\x4f\x91\x69\x7b\x81\x8c\x29\x5a\x6c\x20\xb3\x77\x3d\xdb\xfe\xfd\x93\x68\x95\x6a\x43\xb3\x02\x01\xed\xd4\x97\xe4\x95\xae\x38\x7b\x9b\x14\xa6\x1f\xcb\x79\xd0\x2e\xba\x25\xe3\x0d\x1a\xf8\x2d\x50\x59\x3a\x10\x5b\xd0\x1f\xd3\xf0\x3b\xc1\xa8\x08\xc0\xf9\x55\xde\x41\x9c\x64\x93\x55\x24\x3a\x3d\xcd\xdf\xfd\xfd\xd5\xb4\xa9\xa2\x36\xb9\xa9\x5a\x65\xf3\x64\xb1\x74\x0a\x9b\x5e\x14\x4b\xf7\xfd\x52\xfc\xa8\x37\x12\x14\x37\x67\xce\xd6\x61\x0d\x2f\x33\xd7\x03\x90\x2e\xcf\x0f\xe0\x29\xd3\xe2\xed\xa4\xf7\x30\x14\x28\x3d\xe6\x72\x12\x3f\xc8\xd9\xc8\x35\xa8\x74\xea\x31\x2e\x85\xb7\x57\xbe\x13\x38\x2d\x29\x87\xdc\x43\xbe\xb9\xf7\xa3\x1d\xa9\x77\xb9\xd9\x19\x5b\x10\x46\xf6\x2b\xe2\xbc\xbe\x5e\x6d\x67\x27\x91\xaa\xc4\xbc\xb7\xd7\x9b\xfb\x25\xd7\x58\x3e\x73\xe6\x20\xa4\xa6\x54\x8b\x7f\xc5\xf6\x7b\x41\x2c\xab\x10\xe9\xd6\x72\x1f\xa4\x41\x8b\x07\x80\xe6\x9b\x66\xac\x82\x90\x75\x3c\x59\x88\xde\x9e\x44\x16\xaf\x57\x8c\x9f\xf9\x72\x78\xb1\x7d\x25\x0f\x1c\x7e\x50\xa1\x11\x8a\xdb\x9d\x09\x3e\x5e\x23\x18\xc9\xe3\xac\x70\x0d\x6e\x6b\xcb\xd8\xc9\x7c\xa6\x17\xc7\x57\xb9\x89\xb7\x80\x4c\x7b\x59\xbd\x9b\xce\xc8\x67\x6d\x64\x5e\xe8\x2a\x84\x76\x96\x32\x17\x95\xe5\xc4\xa9\x26\x5e\xb6\xd7\x5e\x23\x22\x0c\x6e\x2b\x3b\x7e\x93\x04\xb1\x25\xf9\xaf\x92\x0b\x87\x6b\xe8\x4e\xec\x32\x56\x1e\xb6\x84\xd6\xd8\xc1\x28\xb3\xfa\x6a\xc1\xa8\x00\x31\x9e\x80\xf5\xb8\xba\xb2\xe4\xbf\x67\x56\xc4\x38\xcd\x4b\x48\x7c\xb0\xf6\x1c\x87\x1a\xdf\x85\xb3\xbe\x38\xd6\x9b\x07\xb3\x14\x3c\x49\xb6\xbb\x09\xe5\x25\x13\xfc\x6f\x7e\xae\x51\x2f\x5a\x75\xa9\x1e\xb5\x90\xe1\x30\xf2\xc3\xdf\xfc\x7c\x0e\xfd\x27\xd8\x36\x0a\x31\x47\x78\x0f\x21\x5b\x8c\xb6\x2e\x76\xb3\x74\x17\xec\x74\xc4\x04\xcb\xd3\x76\x96\xf4\x4f\xcd\xf5\x1b\xf7\x3d\xcd\x05\x8c\xf5\x91\xa1\xc7\xc8\xf0\xdb\xf0\x15\x77\x0a\x97\xef\xa9\xd4\x2c\xc6\x89\x1c\x76\x64\x95\x93\x2f\x2b\x83\x6f\xa1\x5d\xe2\x45\xf6\x40\x5a\x5d\x07\xeb\x97\x00\x08\x39\x27\x0a\x3d\x1c\xa0\x48\x9e\x96\xeb\x28\x29\x54\xb3\x44\xc2\xf2\x44\x0c\x8b\xaa\x8f\xd8\xb2\x82\x5f\x24\xc7\x7f\xd4\xf7\xd4\x36\x21\x70\xa9\x18\x38\x7c\x60\xa4\xf1\x06\x3f\xb0\x17\x49\x30\x3b\x1f\xa9\x7a\x96\xee\xee\x73\xb4\xde\x72\xcb\x99\x6a\xfc\x0b\xbe\xba\xaa\xd0\xe2\x02\xda\xd9\x27\xf0\x7c\xe4\x2a\x55\xdd\xd1\x1e\xf1\xcb\xd1\xe4\xb3\xa6\x38\xd3\x3d\xa7\x42\xaf\x09\xd7\xf2\xb7\x7c\x2b\x7e\xe7\x26\xbb\xd0\x37\xee\x24\xb3\x99\x4a\x08\xbe\x54\x3e\x2c\xd8\xbd\x09\xca\x03\x3a\x9a\x83\x45\xc8\x18\x67\x86\x74\x18\x42\xed\x89\x71\x32\x63\x24\xc7\xf8\x5b\x46\x3e\xa0\xb0\x55\x07\x26\x58\x87\xab\x92\x5b\x1f\x69\x51\xc6\x29\xa8\x65\x7e\x04\x50\x35\x2a\x0d\xdb\xc7\xba\x96\xbb\xf3\x0c\x7c\xe4\x7c\x6a\x29\x60\xa7\xc2\xe5\xf6\xf7\xa5\x7f\x8b\x8f\xaa\xea\x3f\x56\x1a\x33\x0c\x5f\x84\xc5\xff\x0c\xd3\xcd\xbc\x31\x56\xd5\x29\xef\xcb\x30\xb6\xb5\x7d\xc5\x72\xc9\xa2\x46\x7c\x37\x4d\x9e\x1b\x22\xd2\xdc\xbb\xb1\xeb\x15\x8a\x0d\x74\xbb\xca\x92\xbc\x4a\xd3\xdd\x4e\xd6\x36\x7d\x83\xd3\x62\x04\x86\x13\x0c\xa8\xd8\x73\x37\xa7\x8f\xa5\x7a\xfa\x7c\xf0\x88\xdb\xe0\xf8\xfb\x17\xf9\xc7\x8a\x64\x8b\xff\x9f\x9b\xff\x06\x00\x00\xff\xff\x15\xea\x79\xbc\x8f\x06\x00\x00")

func test_certsCaKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaKey,
		"test_certs/ca.key",
	)
}

func test_certsCaKey() (*asset, error) {
	bytes, err := test_certsCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x75, 0xaa, 0x1e, 0xa3, 0xdc, 0x55, 0xc8, 0x41, 0xbe, 0x38, 0xa4, 0x71, 0xd6, 0x93, 0xbc, 0x15, 0x98, 0x5f, 0xf4, 0xdc, 0x27, 0x28, 0xa3, 0xbf, 0xd3, 0x75, 0x56, 0xd7, 0x1, 0x85, 0xa7, 0xaa}}
	return a, nil
}

var _test_certsClientTenant10Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x3b\xd3\xaa\x48\x10\x86\x73\x7e\xc5\xe6\xd6\x96\x8a\x17\x20\xd8\xa0\x87\x19\x60\xe4\x3e\x20\x0a\x99\x08\x82\x5c\x44\x14\x19\xe4\xd7\x6f\x9d\xf3\x55\x9d\x64\xb7\xc3\xa7\xbb\xde\xa4\xdf\x7a\xfe\xfe\x35\x88\xe8\xd4\xf9\x4b\x25\x2c\xa4\x1a\x55\x21\x24\xbf\xa9\x60\x53\x8a\xed\x50\x55\xa1\x6c\x0b\xe0\x14\x41\x41\x19\x98\xb8\x39\x6d\x6f\x98\x6c\x41\x7a\xf6\xdb\xbb\x22\x96\xd3\xcd\x27\x1c\xfb\xf1\xc1\xec\x12\x5a\x8e\x57\x07\x7c\x62\x21\x1f\xb8\x60\xce\x24\xb0\x11\xe8\xb0\x3e\x12\xb5\xb4\x0f\xbe\xa8\x54\x97\xcd\x61\x8c\x4f\x4e\x67\xb3\x23\x27\x3c\xc6\x91\xef\x63\xc2\x27\x9c\x8a\xce\xeb\xda\x2a\x65\x2c\x16\x85\xbf\x22\xdc\x28\xaf\x8e\x60\x57\x84\xbb\x98\xac\xed\xf0\xba\x76\x43\x10\x4f\xe5\xd5\xb1\xab\x98\xbb\x98\xf2\x3f\xac\x82\xd9\x66\x94\x13\xf8\x1d\x66\x12\xde\xfc\x09\x13\x62\xb1\x98\x08\x06\x17\x15\x4e\x84\xe0\x1d\xa2\x35\x6b\xd2\x56\xfb\x64\x86\x3d\xa9\x33\x1c\x7e\xb8\x1d\x42\x45\xb8\x4d\x29\xa2\x15\x38\xa8\xa8\xfb\xb2\xbe\xeb\x0a\x5f\x21\x01\x7c\xa2\x01\xb8\x2a\xf8\x32\xfc\x3a\x50\x0b\x53\x05\x9f\x40\xaf\xc9\x97\x36\x5d\xc2\xfa\x78\x44\x9b\xb1\x7f\xc4\xe7\xa0\xc4\x4f\xc6\x4f\x70\x4d\x4a\xcb\x3b\xd4\x64\x3b\x65\xd1\xd0\x09\xaf\x6b\x51\x8f\xc8\x9d\x22\xed\xe0\xd9\xf5\x62\xf4\x8d\x6c\x1c\xad\x76\xca\xdb\xa0\x81\x1d\x53\xc7\x5d\xd3\x91\x26\xda\xe6\xbb\x93\xde\x9b\xa6\xb8\xb9\x9c\x73\x14\x84\x09\x38\xf4\x9c\x5d\xed\x41\xa8\x72\x29\xcb\xcd\x21\x1b\x46\xec\xc9\xe2\xe7\xfc\x35\xe6\x45\xcc\x5c\x31\x15\x57\xb2\xa7\xa6\x97\x78\xbf\xab\xe2\x17\xd9\x29\x2b\x57\x51\xe2\xf7\x7e\xee\x3d\xbd\x9d\x66\x67\x1b\x42\x14\x4a\xb2\x2f\x94\xa7\xd5\xa3\x19\x86\x56\x6d\x1e\xe2\x55\x9c\xd7\x46\x6a\x9f\x45\xcc\x77\x49\x2d\x65\x81\x22\xf1\x7a\xde\x4a\x49\xae\x9d\xcb\x3e\xdd\x34\xee\x3d\x34\xdc\x24\xe7\x39\x7a\xab\xb9\xde\xd3\x69\x3d\x08\xb9\xf4\xd9\x74\xd9\xe0\x19\x40\x97\x9e\x79\x4b\x8d\x48\xb6\x97\xde\xdb\xac\xab\x6f\x1b\xbb\xdb\xab\xfc\x95\x55\x73\x9f\xf5\x1b\x4d\xbf\xf7\x87\xe9\x5e\xb9\x1e\xcd\xd3\x31\x3b\x90\xcd\xe6\xdd\x6e\x47\xc1\xa5\xbb\x2c\x7c\x68\xaf\x63\xa2\x06\x87\x58\x2f\xe4\x0b\x87\x87\xf3\xec\x94\x61\xbf\xb4\x4f\x47\xcb\x0b\xac\x82\x12\x1d\xad\x31\x3a\x05\x9c\x62\xf0\x01\x75\xab\x82\xb3\xea\xe7\x73\x82\xe1\xcb\x08\x6e\x32\x41\x60\xab\xe8\x02\x3f\xc5\x61\xab\x06\x01\xe7\x6a\x11\x53\x93\xc7\x08\xf9\x47\x03\x38\xe5\xc6\xcf\xae\x42\xa8\xe0\x5a\x07\x47\x65\xc1\x9e\xc2\xf3\xa5\x4d\xb7\x8f\xe7\xb1\x6c\xdd\x5b\x7b\xe9\x06\x51\x1e\xa4\xb6\xfd\x7f\xb5\xc5\x45\x41\x10\xd0\x78\xe9\x1d\x98\x55\x7e\xa5\x36\x61\x68\x21\x88\x33\x79\xde\x6e\x8c\xd8\xeb\x81\x49\x9d\x15\xb9\x75\x7d\x17\xc5\x44\x17\xb5\xa6\x93\x0e\x2f\xb7\xf0\x9f\xba\x4b\x92\xac\xc6\x28\x2a\x87\x4f\x61\x66\x4e\xc0\xdc\x59\x12\xbd\xee\xf6\xda\x25\x1f\xe1\xfc\xd9\x6b\xa1\xd9\xb4\x41\x86\xbc\x6b\xfd\x7e\x5e\xb2\xe5\x34\xcd\x85\x41\xec\x0a\x67\xd3\xd4\x68\xca\xfe\x0d\x96\x1c\xee\x12\x2b\x93\x90\xa7\x8a\x4b\xb9\x55\x45\x02\xaf\x33\xe9\xd3\x70\x32\x85\x8d\xad\x98\x9d\xd5\x4b\xb4\x59\x44\xed\xb1\x04\x53\xd9\x75\x63\xf7\x92\x48\x71\x91\x61\xd9\x11\xa7\xbe\x04\x37\x36\x7d\x76\xce\x55\xbc\x90\xc5\xfd\xa9\xde\xc0\x09\xf2\x41\x65\xc3\x63\xbc\x90\x48\xb8\xbf\x75\xd7\x5a\xe9\x1f\x63\x76\xb6\x8b\xd9\xa4\xd1\xb9\xea\x8b\x33\xc3\x7a\x17\xfa\x81\x62\x44\x10\x7a\xe5\xa7\x2f\xfa\x16\xcd\xc1\x16\x5b\xf9\x5d\xf5\x9a\x64\xf3\x32\xf7\x18\xcf\xdf\x4c\x1b\x84\xb4\x4d\x5d\x85\x5d\x14\x47\x5b\x11\xc6\x5a\x19\x3d\xd2\x35\xee\xe9\xe6\xb5\xec\xab\x61\xda\x1e\x23\x6b\xb9\x59\xba\xcd\x3c\x97\x4d\xc2\x2a\x3b\xad\xf7\x79\xf1\xa0\xb9\xdc\x59\xb0\x67\x45\x64\x0a\xcf\x05\x46\x8c\xca\xff\x08\xbf\xfd\x42\x1c\xfc\x5f\xe7\xfc\x1b\x00\x00\xff\xff\x42\xf4\xc4\xfa\x90\x04\x00\x00")

func test_certsClientTenant10CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Crt,
		"test_certs/client-tenant.10.crt",
	)
}

func test_certsClientTenant10Crt() (*asset, error) {
	bytes, err := test_certsClientTenant10CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.crt", size: 1168, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x37, 0x60, 0x5d, 0x5c, 0x87, 0xad, 0x7a, 0xb3, 0x32, 0xdb, 0x88, 0xc, 0x4, 0x73, 0xb8, 0x96, 0x13, 0x53, 0x56, 0x2e, 0x4d, 0x43, 0xeb, 0x37, 0xe6, 0xf4, 0x28, 0x91, 0x60, 0xeb, 0x50, 0xde}}
	return a, nil
}

var _test_certsClientTenant10Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb5\x12\xac\x06\x00\x85\xe1\x9e\xa7\xb8\xfd\x4e\x06\xb7\x12\x77\x77\x3a\x6c\x81\xc5\x5d\x9e\x3e\x93\x5b\xe7\xb4\xa7\xf9\xbb\xef\x9f\xff\xc6\x0a\x92\x62\xfe\x71\x3d\xe6\x8f\xed\x2a\x21\xe3\x0b\x7f\x34\x21\xf9\xfb\x00\x86\xa2\x08\xd3\xa5\xb0\x0c\xa3\x71\x8c\x23\x30\x8b\x48\x65\x43\x0e\x32\x70\x10\xb0\xe8\xb9\x8c\x49\xec\x35\xfc\xec\x5e\x11\x53\xa4\x8d\x6e\xab\x9d\x80\xdd\x65\xb8\x4f\x6b\x51\x77\x27\x6b\xdd\x40\x28\xaa\xb6\xd1\x7d\x4e\x47\x2e\xcf\x53\x1f\xee\x6a\xf0\x7a\x06\x77\xb9\x13\xef\x27\xa1\x0f\xb1\x0a\x8f\xa4\x45\xd3\x10\x34\x8b\x2b\xd6\xf3\x53\xc6\x54\xe2\xb2\x30\xf6\x5f\x45\x96\x95\xb6\x97\xc0\x7e\xf2\x36\x85\x1c\xf1\x23\xbf\x9f\xc4\xb5\x90\x1c\x81\x28\x9b\xcb\xb3\x84\xc0\x7f\xc9\x2a\xe0\x34\x64\xd1\x74\xb2\x11\xef\x62\x4b\xc3\xfd\x9a\x98\xcf\x84\x3e\x49\x39\x4d\x04\x8d\xfd\xbe\x0f\x00\xd7\x8f\x48\x81\xbc\xb0\x9c\x1b\x31\xc2\x5f\x78\xda\x91\xa5\x47\x93\x57\xf7\x62\x64\x5a\x89\x71\xb3\xe4\x68\x6f\xb5\xbe\x6c\xa5\xd5\x55\xb1\x1b\x57\x49\x8b\x72\xc3\x7b\x45\x1e\xe8\x54\xee\x36\x20\x33\x0a\x68\x6b\xdf\x5c\x0e\x29\x03\xb4\x37\xad\xfb\x3d\x43\x62\x61\x05\xf5\x50\x9c\x46\x94\x0b\x2a\x4a\xed\xa2\xde\xed\xcf\xb2\x95\x2a\x3f\x4b\x55\x40\xd1\x6d\xc0\x4e\x4b\xc1\x4b\x7f\x14\x57\x20\x48\x39\x4f\x4d\xa4\x9a\xca\x2e\x66\x34\xe7\x89\xde\x09\xd0\x88\x02\xdd\xf6\xf4\x5a\x11\x24\x16\xe6\xd9\xc8\xbb\x14\x9e\x71\x18\x96\x99\x14\x96\x11\x63\x7c\xea\xb4\xc5\x32\xdd\x23\x8c\x4c\x06\xe0\x2c\x75\xbe\xb5\x5a\x72\xba\xa3\x26\xe5\x78\x3c\x25\x06\x1a\xa3\x05\x7b\x51\x2c\x3c\x7e\xae\xbf\x7f\x5d\xf6\x46\x05\x26\x49\x1d\x66\x71\xde\x6d\x8a\x7c\x59\xcb\xc1\x51\xe1\xd4\xc9\xea\x60\x0d\x88\xb2\x06\xef\xed\xb4\x6c\xd9\x60\x0b\x86\x0f\x09\x36\xc5\xc7\x90\x09\xe7\x50\x61\xc9\x31\x28\x2f\xeb\x37\x58\x19\x56\x56\x71\xcd\xca\xe3\xf4\x84\xbd\xf6\x8e\x7a\x94\x5a\x30\xe7\xef\xe9\x62\x2f\x60\x40\x34\x73\x3f\xd3\xf9\x81\xe6\xd7\x34\x94\x90\xee\x8a\x15\x45\x12\xc9\x89\xd9\xb3\xb7\x0a\x9e\x0a\xd5\x3b\x96\xbe\xd1\x55\x5f\x9d\x13\xdf\x6a\x84\xd2\x84\x5d\x80\xf2\x05\x06\xc1\x43\xff\x2c\x20\xd6\x1f\xa5\xfe\x32\xc2\x39\x57\xe8\xc7\x90\xf3\xdf\x81\xca\xb7\x63\x15\x46\xb8\x90\x61\x05\xca\x53\xcf\xac\xee\xd8\x42\x4a\xf4\x31\x89\x28\x19\x5d\xaa\x04\x19\xfb\xd8\x7f\x5f\xef\x46\xe9\x8f\x01\x44\xb4\xe0\x3d\x8b\x4e\x8f\xbf\xe1\x18\x02\x51\xcd\xf0\x2f\xbb\x7d\x84\x97\x80\x60\xde\x48\x1d\xfb\x7a\x6f\xe3\x9d\xd7\xb0\x6e\xec\xb0\xff\x25\x53\x0f\x85\x24\x9b\x74\x8d\x49\x85\xb6\xcb\xca\x19\x80\x7c\x43\x4a\xbb\x3a\xae\x4e\x04\xe6\x12\xd7\x79\x84\x54\x37\x2f\xea\x9c\x26\xd5\x12\xf3\xe0\x1f\x5c\x7e\xd3\x52\x35\x2c\xd1\x75\xf4\x76\xaf\x8a\xcf\x81\x96\xae\x0e\x4a\x26\xae\x22\x39\xe8\x5f\x80\x21\xf8\x79\x83\x85\xe8\x9b\x87\xe2\x4a\x18\x1b\xce\x99\x55\xf4\xc8\x10\x09\xc7\x52\xdc\x53\xa8\xd1\x50\x35\x78\x8c\x8b\xdf\xc6\xe9\x93\x15\xec\x47\xb3\x86\x12\xd6\xf9\xdf\x3b\x17\x5a\x8d\x2b\x40\x50\x1e\xc7\x0b\xe7\x8f\xb6\xb1\x84\xcb\x89\x86\x78\x08\xa8\x2c\x83\x61\xd1\xdf\x49\x79\x73\x17\x3e\x4a\x95\xf3\x88\x53\x3a\xee\x48\x51\xa2\x1b\x8c\x4c\xbf\x58\x82\xfe\x16\x63\xac\xf7\x02\x77\xfe\xde\xbf\xa6\x4f\xbf\xb0\xb2\xf7\x7e\xbe\x52\x89\xec\x1d\x60\x24\xaa\x5d\xea\x90\xac\x8e\x46\x7b\xe6\xdd\x36\xb5\x89\xe1\xb1\xe7\x0e\x13\x4a\x48\xeb\x98\x8f\xd1\x79\x0d\xe4\xf2\x23\x65\x00\x2e\x01\xe1\x89\x29\x35\x3d\xbd\xa1\x2a\x15\xf7\xd4\x21\xd5\x9e\x80\x06\xa0\x8c\xa9\xd1\xc4\x7d\x6c\x85\xf5\x4f\x50\xf0\xf9\x52\x1c\x25\xdc\x19\xba\xa5\xae\x7e\x91\xe4\x7a\x78\x33\xf3\x56\x89\x00\x52\xed\xa6\x25\xb5\x20\x0e\xbd\xda\xf0\xdc\xe5\xd9\xd0\x4c\x14\x71\x97\xc3\xf9\x5d\x3e\x47\xca\xe9\xc8\x56\x23\x73\xc1\xd5\x09\xf3\x2d\x7d\x52\x47\x0e\xe2\x71\x30\x04\x8c\x67\x3c\x46\x5e\xf5\x03\x4c\x8a\xdb\x1c\x9d\x61\x06\x08\x38\xbe\x57\x69\x7b\x83\xb9\xd6\xd6\xa0\x63\xee\x94\xb6\x7e\x19\xbd\xc9\xe5\x36\xb4\x3b\x30\x75\x98\xb6\x4d\x3d\xc6\x70\x3f\x0b\x35\x91\xad\x19\x8e\x97\xea\x0b\x01\x2e\x4a\x82\x54\x12\x1e\xfa\x90\x89\x57\xd3\xb4\x39\x2a\x74\xec\x5c\x38\x24\x7a\x9f\xba\xa8\xeb\xb5\xc4\x30\xb9\x3e\x72\x0a\xe7\x56\x2f\xb3\xf3\xc3\x12\x49\x7b\xd6\x07\x97\x26\x82\x2a\x82\x0c\x00\x36\xc8\xf4\xa8\x1a\x41\x8c\x73\x73\x32\x83\xa0\xb3\xe1\xf7\xe2\x68\x6c\xed\xf0\xdc\x69\x6e\x19\xb8\xb1\x5c\x6b\xd3\x6c\xd6\x12\xa9\x9c\xff\x1a\x61\x85\x8c\xba\x3d\x57\x70\x94\x51\xf5\xd3\xc0\xc0\xde\x69\xb3\x08\x45\x74\x5e\x27\x1c\x84\x10\x42\xd5\xdb\xde\xfd\x78\x7e\xc7\x43\x77\x73\x2a\x8b\x2c\xa3\x35\x17\x91\x0e\xee\xd3\xdc\x39\x66\xe0\xac\x9e\x9c\x34\x8e\x34\xa4\x92\x59\x04\xa5\x18\xd0\x7f\xa4\xeb\x9d\x33\xfd\xa7\xd1\xf8\xed\x83\x45\x39\xf8\x16\x46\xae\xd4\x34\x71\xb7\xe6\xcf\xa8\x40\x11\x29\x4f\xd2\xdd\x72\x46\x0f\xf8\xe0\xb1\x2b\xda\x73\xa6\x59\xc1\x61\x62\xcb\xc8\xd0\x0b\x80\x0a\x4e\x26\x5c\x1a\x5b\x0b\x79\x3a\x4f\x36\xd4\x9a\xa3\x8e\x6d\x0f\xe2\xb7\xf8\x33\xbc\xc2\x61\x37\x23\xbc\xd2\xde\x1a\x04\x16\x4c\xe1\xa0\xe8\x11\x61\x0b\xb1\xed\xf8\x5a\x6c\x34\xf0\x97\x0d\x28\xc4\xd3\x46\x68\xb9\x9b\x67\x95\xe5\xbe\x96\x05\xb1\x40\x9a\x70\x36\x61\x85\xf4\xf8\x8b\x5e\xa6\x7b\x8e\xc7\x2c\xa6\xd2\x4e\x9d\x7e\xd8\xc4\x25\x3f\xd9\xf7\xb6\x85\x75\x95\xa1\x32\x39\x95\x17\xc8\xa1\x7e\xbb\xd3\x2f\xa9\x9b\xb9\xec\x10\x49\xce\xc3\x55\x32\xf5\x55\x73\x37\x3e\xf2\x72\xba\xec\x70\x7b\xcf\x93\xf6\xb7\x44\xd5\xce\x58\xc4\x8c\x12\x1e\x07\xf8\x4b\x8a\x60\xf2\xff\x4f\xcd\xbf\x01\x00\x00\xff\xff\xf0\xda\xbe\xc2\x8b\x06\x00\x00")

func test_certsClientTenant10KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Key,
		"test_certs/client-tenant.10.key",
	)
}

func test_certsClientTenant10Key() (*asset, error) {
	bytes, err := test_certsClientTenant10KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0xb5, 0xa, 0x6b, 0x68, 0x8a, 0xf7, 0x4f, 0x2f, 0xe1, 0xc2, 0xa5, 0x4, 0x35, 0xfc, 0x5c, 0x7d, 0xec, 0x8a, 0x60, 0xa8, 0xa2, 0x6a, 0xda, 0xe1, 0xc0, 0x29, 0x3a, 0x5b, 0xd1, 0xa, 0xda}}
	return a, nil
}

var _test_certsClientTenant11Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xb9\x12\xaa\x48\x14\x86\x73\x9e\x62\x72\x6a\x4a\x05\x11\x08\x6e\xd0\x1b\xd8\x68\xa3\xc8\xa2\x98\xd9\x2c\x2d\xb8\x80\x82\x36\xf0\xf4\x53\xf7\xde\xa9\x99\x60\xe6\x84\xdf\x39\xf5\x27\xe7\xaf\xef\xcf\x9f\x03\x89\x4b\xfd\x3f\x10\x39\x44\xd4\xa1\x08\x44\xe4\x17\x55\x18\xa5\x98\x61\x84\xc0\xb5\x12\x40\x52\x08\x04\x0d\xe8\xd5\xc7\xa5\x96\xad\x64\xe4\xe8\x78\x66\x49\x3e\x1a\x3c\xc2\xc0\x87\xe2\xf6\xba\xde\x2a\xd7\x96\x73\x08\x82\xce\x01\x18\xbc\x15\x76\xa0\x92\x80\x14\x27\x41\xb0\x21\xf2\x8e\xb9\xe6\xbf\xb3\x87\x7d\x4d\x35\x31\x38\x11\x88\xa0\xf0\x13\x08\x58\x84\x89\xff\x4d\xb5\x7e\xe4\x9a\x53\x5f\x10\xc4\x41\x04\x0a\x47\xce\x47\x85\x45\x60\xc9\xa2\x78\xf0\xa7\xd8\x60\x38\xbf\xfc\x84\x7e\x0d\x96\xac\x06\xff\x30\x86\xd9\x40\x6a\x10\xfc\x0e\x6b\x22\x14\xff\x1b\xa6\x5c\x30\x09\x18\x58\xba\x60\x11\x13\x34\xb0\x75\xe2\x26\x9f\xf4\x68\xcc\xb3\x89\x6c\x19\xb8\xfd\xe2\x60\x60\x88\x45\x44\x0a\x41\x2a\x06\xe6\x2e\x0a\x5f\x6e\x48\xb9\x8e\x03\x02\x15\x10\xc4\x00\x2c\x29\xc4\x12\xfc\x3c\xd8\x80\x86\x42\x10\xe0\x88\x8d\x3c\xbf\x3f\x5e\xc5\x84\x2e\x26\x8b\x64\xb1\xd7\x12\xa7\xa6\x07\xdd\xe8\xeb\x88\x53\xec\xd4\x7d\xa0\x2e\xe2\x71\x52\x3c\x9b\xe5\xed\x54\xf5\x5c\x5b\xbe\x6b\x0f\xc7\x59\x3f\x35\x55\xe1\xfb\x74\x5e\xba\x7a\xb6\x8c\xc4\xf5\xbb\x0c\xbc\x8a\x8a\xa1\x10\xcf\x26\x2c\xb4\x40\xbe\xe5\x2a\x6d\x8b\xb7\xba\x3f\x83\xcd\x51\xe9\x26\x70\x5a\xad\x8c\x54\xe4\x4e\xc4\xf7\xf8\x49\xf5\xe9\xa4\x8f\xd8\x5a\x98\x73\xe4\x7d\x72\xaf\x79\x90\xdb\x23\xb5\xf7\x65\x9d\xa6\xe7\x6a\x0d\xc5\xad\x49\x32\xa8\x1b\x23\x9a\x10\x3f\xa2\x85\xb2\x5a\xa3\x76\x7f\xb3\x0e\x6b\xd4\x36\xf1\xb6\xf1\x35\xbe\x28\xdb\x24\x25\x7d\x13\x6f\xe3\x8e\x38\xfc\xfe\x1c\x58\x53\x14\x7b\xdb\x51\xf5\x91\xcf\xf2\x62\xc4\xe2\xdb\xe5\x71\x93\x15\x97\x46\xf5\x94\x77\xbb\x30\x6e\x59\x5a\x77\xb3\xe7\x53\x5b\x9c\xd1\xfb\x1c\xd7\x68\x1b\xc6\x52\x2c\xc2\xf3\x52\x47\xbd\xe1\xcb\xe3\x0c\xd0\xf1\xe9\x05\xe9\x7d\xc5\xd6\x05\xbb\x9b\xdb\xf5\x8e\x6b\xfd\x7d\x5a\x83\xbd\x82\x3c\xdb\xfa\xda\xb1\x21\x12\x33\x98\xed\xaa\x5d\x59\x73\x15\x07\x65\xef\x19\x33\xf5\xfd\x25\x3b\x59\xd0\xfb\xb0\x41\xf8\x6b\xce\xbe\x40\x30\x08\x80\x5b\x87\x18\xba\x7f\x7f\x2e\x57\xb0\x24\x70\x26\x03\x02\x24\x75\x1a\xfc\xbb\x38\xeb\x30\x26\x18\x83\x0d\x14\xe2\x0d\x05\x71\x60\x90\x61\x50\x83\xf2\xf7\x8e\x11\x17\x83\xa3\x80\x91\x6e\xb8\x8f\x87\xd2\x9d\x1c\x75\x69\xd9\x8e\x7e\x6c\xbe\xef\xde\x82\x89\xe1\x75\x72\xfa\x9f\xda\x82\x1d\x02\x01\x01\x47\xb3\x03\xaf\x8b\x67\xc3\x87\xdb\x6c\x0a\xd0\x2a\x3e\xd6\xc2\x4a\xe7\xd9\x6c\xc7\x19\xde\x9d\xe3\xcd\x64\x58\xcd\xd8\xcd\xa0\x14\x66\x7b\xba\xd5\x48\x86\xe1\x39\x3f\x5c\x36\x85\xf9\x20\x05\x87\x4e\xb5\xec\x8e\x53\x7c\x4d\xba\x45\xd4\xdd\xb6\x9d\xe2\x05\xef\xa1\xa4\x49\x7f\xb3\xca\xb9\x7f\x0d\x6a\x0b\xed\x0e\x67\x68\x1d\xaa\x63\xf1\x32\x9e\x9f\xef\x2e\xb1\xf2\x23\xd4\x53\xd5\x5b\x8d\x7a\x01\x17\x90\xbf\x9e\xe7\x2d\x7b\xcf\x4c\xec\xeb\x6a\x03\x94\xeb\xb1\xe5\x09\x8b\x87\x27\x81\x7e\xa6\xa6\x96\xfa\x31\xb2\xc0\xd5\xcc\xb2\xba\x25\x6b\xf5\x75\x85\xae\xee\xc5\xcd\xd4\x7d\x0f\xf0\x79\x2a\x51\x3c\xd8\x01\xb5\x53\xf5\xd2\x68\xb8\x1c\x79\x19\x29\x85\x73\x88\xbc\xb6\x8a\x0c\xdf\x2c\x8d\xf4\xc8\xa4\x75\xe1\xed\x76\xde\x23\xc3\x24\xfd\xb4\xe2\x49\x3a\xa5\xe5\xa5\xbd\xd9\x87\xe5\x26\x77\x37\xfd\xc7\x1b\xfd\x83\x74\xb5\xcd\x4a\xed\xc1\x60\x53\x25\x0f\x2d\x5e\x4c\x76\x11\x85\xe7\x99\x2f\xac\x5c\xbb\x6e\xdb\x2c\xb7\xa3\x21\x9c\xe2\xc4\x3a\x09\x03\x7f\x54\x6a\xee\x3e\x7b\xea\xb7\x34\x9c\xae\x92\x48\xd7\x5d\x5b\x5b\x73\xfa\x10\x91\x21\xa9\x88\x13\x0d\x7c\xf9\xe3\x87\xf2\xcb\x2f\xc4\xc7\xff\x75\xce\x5f\x01\x00\x00\xff\xff\x60\x06\xae\x8f\x90\x04\x00\x00")

func test_certsClientTenant11CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Crt,
		"test_certs/client-tenant.11.crt",
	)
}

func test_certsClientTenant11Crt() (*asset, error) {
	bytes, err := test_certsClientTenant11CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.crt", size: 1168, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3c, 0xa6, 0x3d, 0xa9, 0x89, 0x6, 0x40, 0x43, 0x34, 0x65, 0xd9, 0xc6, 0x6, 0xf, 0xe5, 0xaa, 0x3f, 0x58, 0xce, 0x5c, 0x38, 0xe0, 0x6a, 0x0, 0xcf, 0x84, 0xa2, 0x24, 0xff, 0x9d, 0xb4, 0xa}}
	return a, nil
}

var _test_certsClientTenant11Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\xb7\x12\xab\xc8\x02\x05\x73\xbe\xe2\xe6\xd4\x2b\x24\x8c\x80\x60\x83\x01\x06\x3f\x08\xe1\x04\x64\x78\x23\x10\xc2\x9b\xaf\x7f\xb5\x37\xde\x93\x9e\xa4\x83\xae\xea\xff\xfd\x3b\x01\x2a\x9a\xf5\xc7\x71\xc1\x1f\xdb\xd1\x02\xe0\xc1\x3f\x06\x8c\xfe\x3e\x18\xd2\x34\xf8\x03\x9a\x00\x80\x21\x82\x17\x04\xb7\x0b\xf5\x54\x1c\x8f\xdf\x79\xef\xd7\x0b\x72\x6a\xcb\x77\x4e\x74\xc2\x1c\x4f\xa3\x1b\x79\x82\x23\x62\x7d\x7b\x09\xd0\x7c\x96\x9e\x9a\x64\x34\x36\xbd\xf9\xd5\xa0\xcf\xd7\x5d\x35\xb3\x87\xf6\x6d\x3d\xd7\x52\x8f\x85\x7a\x42\x5a\x4b\x71\x28\x46\x8d\x86\xc2\x41\x7f\xc0\xef\xf2\x41\x06\xf7\xec\x8d\x70\x24\x5a\xf2\x25\x76\x13\xda\x65\x7c\x5d\xb1\xb7\xa6\x3a\x3e\x79\xed\xcc\x69\x71\x77\x9e\xab\x08\xab\xe0\x41\x93\x7e\xdd\x44\xaf\x75\xbd\xb7\x3d\x8a\x26\x15\x25\xaa\xf7\x48\x37\xe4\x10\xe4\x78\x56\xcd\x7b\x7f\xaf\x96\xa2\xde\x47\x8f\xb1\x31\xe8\xec\x63\x22\x8b\x0f\x29\xef\xf9\xf0\x11\xbc\x05\x33\x91\xc5\xbb\x29\x08\x6f\x26\xe6\x3c\x43\xfd\xb6\x84\x53\x2e\x5c\x4f\x50\xe1\x5c\xd1\x26\xab\x06\x86\xaa\xf6\xa3\xdd\x24\x8f\xbc\x88\x55\x05\xd3\x58\x9b\x61\xf8\xe5\xfd\x1a\xc9\x40\xdb\x9b\x5b\x87\x34\xcb\xef\x0b\x6b\x9f\x0a\x2f\x93\xb7\x5d\x44\xbf\xd3\x57\xf4\xa2\x15\xa8\x56\x2f\xce\xe3\xea\xf9\x29\xce\x8e\x5d\xda\x9b\xb2\x34\x89\x00\x7b\x46\x72\x71\xb3\xaf\xa1\xfd\xd2\x24\x51\xdd\x54\xd6\x2d\x4a\x62\x64\x0f\x69\x56\x1b\x3d\x73\xab\x8a\xc5\x09\x76\xd7\x24\xf0\x02\x02\x18\x34\x01\xc8\xcd\x1c\x04\x9f\x94\xec\xc0\x8f\x5d\x3f\x0e\x16\xac\xf5\x6c\xc7\x57\x7d\x0d\x07\x03\x88\xba\x3a\x2b\x30\x44\xec\xb9\x90\xa9\xb6\xae\x5d\x3b\x3f\x10\xd2\x6e\xe5\x89\x93\x38\x08\xc5\x02\x0e\xd1\xc3\xbc\x0a\xd7\xfa\x31\x6e\xe5\x4d\x86\xd1\x60\x5f\xa5\xf6\xab\x6a\x76\xc1\xe9\x16\xb5\xde\x4f\x21\x7d\x9c\xa4\x63\x96\xe6\x98\xd9\xb6\x15\x3d\x5f\xe5\x67\x33\x24\x90\xec\xc1\x68\xa4\xbc\x23\x12\xbf\x71\x14\xf3\xe0\x57\x08\xbf\x77\xba\x4e\x23\x46\x74\x67\xc7\x38\x8d\x90\x38\xa6\xab\xfa\xe2\x83\xa8\xa7\xa5\x35\xef\x9d\xbe\x2b\x74\x39\x6e\x07\xe4\x85\x8f\x8e\x18\x63\x03\x77\xa1\x80\x85\xf7\x24\xd2\x78\x1a\xa2\xa9\xa5\x9e\x84\x0d\x91\x89\x91\x6e\x9f\x5a\x01\x6f\xbf\xf2\x3b\x5b\x28\x8a\xc4\x95\x29\xb8\x0f\x93\xd9\x78\xe1\x7b\x30\xab\xfb\x73\xfa\xad\x14\x5e\x17\xa8\x8c\xa7\x6f\xd6\x91\xeb\x13\x27\xcd\xdd\x53\x95\xe3\xfe\x43\xbe\xce\x63\x7d\xfe\xf4\xba\xbb\xe2\x23\xe2\x25\x4f\x4a\x14\x85\x9c\x65\x4e\x9a\x09\xc7\x9c\x37\x79\x2b\x6e\x47\x7b\x34\x3b\x8a\x0f\xbd\x80\xce\x11\x11\x6f\x2c\x75\x23\x5f\x28\x7f\xd2\x8f\xdb\xe6\x0d\xc6\x84\x99\x0d\x1c\xf3\x37\x14\xab\x08\x02\x56\xbf\xb8\xd6\x0e\x14\xc3\xfc\x91\x14\x1b\x59\x4f\x72\x3d\x86\x83\x00\xda\xb3\x5b\x02\x83\xca\xa7\xdf\x05\x33\x65\x84\xd1\x84\x33\x21\x65\x4e\x53\xd3\x43\x8c\x32\x6a\x74\xdc\x6e\xe5\x09\xc6\xa7\x47\xa0\x5e\x14\x1f\xa5\x0e\xbc\xd9\xb3\x72\xf5\x6e\xab\x31\xdd\x95\x94\xda\xf1\x04\x1c\x2f\x72\xd4\x50\x5e\x29\x74\xab\x07\x75\xa9\xc3\xa7\x6d\x81\x77\x85\x39\x6b\xe7\xd4\x3e\xe2\xb7\x9b\x37\xfd\x16\x60\x3b\x99\x86\x98\xdd\xb2\xe5\xdb\x24\x8b\x96\x1d\x1c\x64\x53\xe0\x8a\xf9\x13\xab\x31\x79\xbf\x13\xd4\x70\x29\x61\x1d\xe8\x2f\x31\xa3\xc1\x1c\x13\x18\xb4\xc9\xbd\xe1\x30\xae\xf1\x89\xa4\x41\xd3\x3e\x2b\xcb\xd1\xef\xfe\xe5\xe5\xa4\x50\x01\xd2\xcb\x6a\x6f\x8d\xe2\x44\xf3\x20\x9f\x7c\x64\x0a\x76\xb1\x4f\xee\xc4\x77\x99\xd0\xfe\x28\x4f\x1b\xb3\x58\x31\x8c\x7b\x9e\x89\x5c\x89\xef\xd2\x3a\x6c\xb5\x53\x3a\xfb\x6f\x3f\x6a\xde\xb9\x4f\x56\x8c\xcc\xcb\x9a\x8a\x94\x11\x24\x36\xbf\xd4\x57\xec\x95\xea\x5c\x43\xa2\xdc\x6c\xce\x2a\x5d\x94\x60\xe6\x20\xdc\x86\x9f\x71\x4b\x49\x61\xa1\xc5\xd1\xb2\x4d\xdc\xbb\x6c\xbf\xe2\x14\x4f\xe6\x33\x57\x49\x9c\xde\x8e\x2e\xff\x2f\x72\x2f\xf2\x60\x40\x1f\x41\x3d\xa1\x1d\xc3\x97\x39\x4d\x8e\x85\x1d\xe8\x5d\xea\xd1\xc6\x4f\x95\xac\xa8\x82\x34\x8c\x20\x48\x66\xd4\x6e\x67\x7e\xd0\x4d\xe6\x24\xbd\xa4\xa9\x19\x68\x45\x4e\xe2\x62\x32\xd2\x9b\x84\x97\x5e\xeb\xa4\xd9\x8f\xf6\x58\xa4\x53\x29\x31\xa3\x23\x99\x11\xcf\x77\x03\x9f\xda\x7e\x65\x1f\x60\x6c\x7d\xad\x69\xb9\xd3\x60\xcc\xf8\xa5\xc7\x21\x34\x3a\x59\xea\xae\x3c\x1e\xc8\xee\xb6\x4f\xc2\x30\x3b\xf0\xed\x7e\xb3\x66\xe5\xd5\xab\xae\xb0\xed\xf1\x69\xee\x1f\x5c\xa5\xf9\x00\x07\x8e\x9e\xbd\xc8\xe9\x1c\xf9\x7f\xbd\x10\x5c\x44\x0b\x01\xe7\x7b\x2a\x32\x19\xd6\xa1\x90\xd1\x2c\xa1\xfb\xd2\x8f\x4f\xfd\x2d\x41\xfb\x99\x9f\x6c\xec\xa6\x58\x3e\xde\xbf\x24\xf4\x3f\xca\x63\xf4\x9d\xb5\xe9\x49\xa1\xc0\xbb\x41\x9b\xa9\x7b\x2f\xf8\x97\xea\xda\xcb\x49\xeb\xb6\xba\x04\x7b\xdb\x34\x64\x74\xf9\xe1\x87\xfa\xf2\xf0\x0c\x7b\xf9\xfd\x0e\x1e\x10\xab\x8a\x2c\xa5\x25\x0b\x8e\x6c\xbb\x36\x44\xb0\xa6\x96\x0c\x18\x7e\xe2\xc5\xfe\x49\x91\x86\x94\x34\xc9\x32\xcd\xda\x34\xc4\x2d\xa8\x26\x91\x76\x19\xb5\xda\xc4\x83\x50\xde\xdb\xc0\x32\x24\xeb\x62\x9c\x94\x72\xf4\xcb\x10\xaa\x97\x14\x79\xe3\xd1\xcc\xb2\x10\x7d\x15\x2a\xed\xee\x83\x90\xa1\x2d\x2f\xaf\xc8\x8e\x79\x8b\x7d\x28\xf6\xad\x73\x8b\x24\xb3\x17\xad\xd0\xad\x86\xcd\xf6\x94\xdd\xf6\x0e\xc3\x37\x64\x51\x2f\x79\x96\x3c\x3d\x98\xb3\x27\x5b\x37\x41\xe7\x9b\xc4\x7e\x49\x81\x2c\x31\x64\x61\x6e\x1e\x54\x20\x7d\x84\x84\x51\xd7\xe0\x3c\x0d\xf3\x5a\x1f\xf9\xa2\x1e\x20\x30\x3f\xc4\xf9\xc5\x98\x92\xd4\x2e\x24\x68\x0e\x4a\x0b\xb4\x95\x11\x7e\x01\x45\x8c\xbe\x26\xbd\x59\xe1\x50\xd1\xda\xe9\xe0\x0c\x77\x57\x8b\x6e\x46\x3f\x3f\xc8\xbe\xc6\xde\x82\x5b\xf5\xcf\x3f\xd8\xdf\xac\x40\x4b\xfa\xef\xdc\xfc\x3f\x00\x00\xff\xff\xe4\xdf\x6e\x52\x8f\x06\x00\x00")

func test_certsClientTenant11KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Key,
		"test_certs/client-tenant.11.key",
	)
}

func test_certsClientTenant11Key() (*asset, error) {
	bytes, err := test_certsClientTenant11KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x49, 0x54, 0x64, 0x48, 0x6c, 0x7f, 0x17, 0x28, 0x69, 0xfb, 0xa6, 0x93, 0x4f, 0x60, 0x18, 0xa6, 0x6, 0x85, 0xc7, 0x21, 0x1d, 0x3a, 0x51, 0x6e, 0xba, 0x9a, 0x76, 0x7c, 0x2c, 0xb0, 0x10, 0xe9}}
	return a, nil
}

var _test_certsClientTenant20Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x3b\xd3\xaa\xca\x12\x86\x73\x7e\xc5\xc9\xad\x53\x22\x8a\x42\xb0\x82\x1e\x66\xc0\x11\x87\x3b\x28\x66\xdc\xe4\x22\x88\x20\x72\xf1\xd7\x9f\x5a\xdf\x3a\xb5\x77\xb0\x77\x87\x4f\x77\xbd\x49\xbf\xf5\xfc\xf7\xf7\x20\xa2\x51\xe3\x3f\x0a\x71\x3c\xaa\x52\x05\x3c\xf2\x43\x39\x46\x29\x66\x58\x51\xa0\x28\x73\x98\x28\x82\x9c\xda\xc6\x4d\xd4\xdb\xc3\xf6\x7d\xe8\x0e\xcd\xbd\x91\x2f\xe9\x7c\xf7\x87\x2f\x18\x28\x7f\x74\xc5\xa3\xd4\xe4\x89\x47\x60\xbf\x55\xc0\xd0\x73\xcc\xa1\x13\x81\x10\x07\xb6\xad\x93\xa9\xc6\xb1\x60\xf4\x49\x23\x17\xa1\x90\xcf\xaa\x07\x1e\xca\x8d\x00\x01\xf3\x30\x31\xc6\x50\x18\x96\x58\x50\xab\x48\x41\xd8\xf6\x20\x53\x27\x7e\xe1\x98\x07\x3b\xe6\xf9\xb3\xf1\xf5\x45\x86\xd3\xe8\x37\x34\x2a\xd8\xb1\x0a\xfe\x62\x0c\xb3\x99\x54\x60\xff\x09\x6b\x3d\xc5\xff\x3b\x8c\x8b\x30\xb1\x19\xec\x34\xd8\xf8\x44\x99\xd9\x31\xd0\x82\x4f\x78\x11\xf9\xe4\x4b\xce\x0c\x1e\x3f\x1c\x66\xa6\xb0\x0a\xa6\x3c\x27\x25\x03\x5e\x53\xdc\x4e\x73\x69\xbc\xc5\x36\x41\x1c\xd8\x3e\xc0\x8e\x22\x3c\xfd\x1c\xe8\xd0\x52\x04\xb6\xb2\x29\x9e\xdd\xbc\x17\xc6\xb0\xb9\x96\x41\xb1\xad\xde\x63\x21\x3a\xab\xfb\xbe\xcc\x79\xf4\x10\xb6\xe7\xfa\x76\xf8\xc6\xee\x43\xe6\x39\xac\x2c\x7d\xfd\x3a\xf6\x49\x93\x4f\x09\x11\xf4\xc8\x38\x1f\xc7\xe4\xf8\x99\x17\x3b\xf9\xc4\xb1\x96\xc4\x9a\xc5\x86\xe5\xf2\x44\xf3\xca\x0a\xca\x7c\xb5\x2f\x99\x11\xa5\xb5\xb2\xdd\xf7\xb2\x2b\x5e\x39\xd7\x9f\x25\xaa\x8b\x52\x5c\x7c\xfa\x2e\x96\xb5\xae\x9d\x74\xf3\x69\x6e\x7d\x55\x0a\xd7\xc3\xa5\x18\xad\xfa\x4e\xb5\x67\x47\xd0\xe9\x34\x05\x7e\xd6\x12\x4f\x3e\x98\x28\xcc\x7a\xe0\x0b\x67\x3a\x73\x95\xc0\xc6\x2a\x06\x7a\x8f\x0c\x30\xc4\xa4\x1a\xee\x9b\xd5\xae\x21\x5d\xde\xc7\xdd\xc3\x6c\xbb\x56\x19\x53\xba\x4f\xdc\xf7\xe3\x60\xea\xd2\xcb\xcc\xc8\x59\xb1\x1c\x29\xea\xda\xd0\xb9\xf9\xd7\x17\x37\xf8\x9b\x9b\x3b\x89\xa5\x10\xa3\x57\x61\x4d\x27\xfd\xa5\xc4\xce\x77\xe1\x95\xdd\x93\xe0\xe5\x78\x82\xc9\x0b\xd7\xf9\x30\xb8\xdf\xb9\x4d\xbf\x2c\xf3\xab\x52\x55\x8c\x67\xe0\xac\x36\xeb\x4c\xde\x45\x9c\x75\xe8\x2c\xc9\xdd\xde\x1b\x32\xba\x2d\x53\xab\xb6\x6a\x10\x59\x22\xfe\xe2\x0c\x41\x70\x31\x25\xfe\x2e\xf4\x83\xb9\xbe\x18\x4f\xdf\x83\x9c\x21\x00\xad\x72\x31\xd2\xfe\xff\xb9\x94\xc3\x13\x41\xeb\xc9\x26\x30\x51\xb5\xc5\x7f\x8a\x73\x74\x7d\x82\x31\xe8\x28\xcf\x7b\x94\x13\x15\xd9\x09\x86\x0a\xee\x7f\x76\x8c\x68\x18\x2e\x39\xf2\xb6\xa2\xd6\x34\xdc\xfb\xaa\xae\x76\x92\xac\x6e\x2f\xed\xd8\x0f\x12\x0a\xc4\xd3\x7b\xfa\xb7\xda\x82\xa9\x80\x4d\xa0\x66\x2c\x8c\xbb\x77\x7c\xbd\x9e\x5b\xab\xf1\x3c\x6e\x97\x6e\xe8\xea\xc5\xaa\xd3\x0c\x28\xeb\x92\xcf\x38\x84\x5b\x97\xec\x84\x67\xc8\x0f\x74\xb5\x94\x37\x80\x41\x78\x35\x60\x6e\x54\xd1\x5c\xb5\xd8\x86\x0b\xd4\xf0\x4a\xaf\xd1\x36\x1b\x4f\x9b\x3d\xb7\x24\x6a\xe1\x54\x52\xaa\xe8\x1e\x31\xe4\x6f\xae\xbe\xef\x85\x64\x75\x4f\xb1\xd4\xae\x17\x0a\x7e\x6d\xf6\x4d\x5a\x56\xe6\xb6\x9c\xd7\x30\x44\xcc\x4d\x34\xa3\xee\xd3\xcd\xd7\x1a\x5e\x1f\x09\x8f\xdc\x12\xb2\x75\x36\x1e\x46\x77\xd3\x1d\x96\xf7\x70\xcb\x5c\x3d\x29\x6a\x9b\x48\x46\xc5\x0b\xbc\xd5\x7a\x18\xcd\x99\x79\x5e\xf7\x1e\xa5\xe2\xbe\x73\x8e\x5f\x75\x9f\xbe\x95\x6b\xec\xa8\xd6\x55\x4f\x53\x4e\xd9\xf3\x78\xb6\xa6\xba\x2f\xf3\xe8\x2c\x10\x4a\x26\xc6\xd7\x3b\x75\x53\xd0\xa1\xd5\x26\xdd\xce\xf5\xab\x1c\x44\xfd\x32\x3c\xf7\xf8\xe5\x85\x6f\x8a\x6e\x5f\xbb\xf1\x4e\x19\xcb\xed\x3a\x5b\x55\x9c\x6e\xdc\x6b\x3d\x11\xd0\xc9\x3f\xc8\xe2\x5e\xa1\xa3\xf2\xda\xf5\x42\xa3\x66\x9b\x8f\x37\x3b\xde\xb1\x50\xa9\xd4\x31\x5d\xa9\xd9\xf5\xb0\xcf\x72\x32\x66\xc7\x63\x60\x09\x6b\xe3\xf5\x15\xde\xfa\x90\x72\xe5\x81\xca\x38\xff\xf5\x8b\xfb\xf1\x0b\x31\xf0\x3f\x9d\xf3\xbf\x00\x00\x00\xff\xff\xe2\x48\x1a\xee\x90\x04\x00\x00")

func test_certsClientTenant20CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Crt,
		"test_certs/client-tenant.20.crt",
	)
}

func test_certsClientTenant20Crt() (*asset, error) {
	bytes, err := test_certsClientTenant20CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.crt", size: 1168, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7a, 0xef, 0x1a, 0x99, 0x1, 0x3d, 0x8b, 0x88, 0xa5, 0x2f, 0xa1, 0x65, 0x2c, 0xbd, 0xaa, 0x73, 0x7e, 0x7f, 0x7f, 0x91, 0xa8, 0xdf, 0x3e, 0xb3, 0xfb, 0xc7, 0x9e, 0x7d, 0x2f, 0xba, 0x2c, 0x8b}}
	return a, nil
}

var _test_certsClientTenant20Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb5\x16\xa3\xec\x02\x85\xe1\x9e\xab\x98\x3e\xeb\x2c\xdc\x4a\x20\x04\x77\xa7\xc3\x3e\x24\x78\xf0\xab\x3f\x6b\xa6\xfe\x77\xbb\x9b\xb7\x7b\xfe\xf7\x77\xbc\x28\x29\xe6\x1f\xd7\xe3\xfe\xd8\xae\x12\x72\xbe\xf8\x47\x13\x93\x7f\x0f\x64\x28\x8a\x38\x9d\x0a\xcf\x71\x9a\xc0\x39\x22\xb7\x25\x29\xf5\xab\xb6\x15\x53\x7b\xa2\x4f\x4a\x82\xd6\x89\x2a\x00\xe3\x6b\x9a\x4c\x2e\x35\xb7\x9b\x8c\x2a\x06\x43\x66\xbb\xe4\xce\xdf\x42\x66\x2e\x44\xe1\xea\x64\xc8\xbc\xd9\x0e\x9d\x77\xd1\x38\x4f\xff\x8a\xaf\xac\x0f\xd8\x35\x4a\x57\xf7\xe8\x45\x3f\x9f\x05\xe8\xd0\x64\xb2\xf7\xa9\x7b\x47\x63\xea\x6c\xaf\x05\x0e\xf6\x10\xe9\x0d\x20\x08\x3b\x04\x24\x22\x5f\xa8\x01\x76\x97\xc5\x10\xba\xf9\xd9\x50\x1e\x48\x36\x1d\x4e\xf9\x43\xc6\x37\x3f\x53\x0d\xe7\x79\xc5\x27\x94\x17\x5e\x84\xab\xa7\x8e\xe4\xe5\x34\x95\xa0\x10\x08\xb6\xd3\x09\xec\x84\x04\x19\xeb\x9c\x77\x15\x2b\x74\xcc\x82\x5d\x6d\xb4\x49\xc3\xa8\xf9\xbd\x68\x0b\xb7\xe2\x9e\x35\x8a\xab\x6a\x3d\xed\xa1\xf9\x63\x23\x9c\x1d\x02\xa4\x65\x91\xc4\x28\xfc\x50\x79\x68\x46\xc1\xcf\x82\x92\x6d\x38\xb3\xc4\x67\x04\x6f\x71\x06\xa4\x60\x36\x6e\x57\x2f\x8e\x69\x6e\xc7\x10\x31\x9b\xd0\xf3\xe0\xc7\x64\x72\xf1\xc8\xbd\x42\x34\x4e\x97\xa2\x01\xd8\x00\x7e\x54\x52\xf7\xa2\x3a\x58\xdc\x20\x9c\x6c\x74\x64\x79\xf3\x09\xa5\x90\xb5\x6b\x0c\xdb\xe7\x9b\x87\x61\xd8\x1d\xa6\xcc\x2e\xb4\x7f\xa0\x5d\x8a\x8a\xa7\xf2\xe6\x1c\x8e\xe7\x26\x85\xe7\xc4\x57\x78\xdd\xa6\xe1\xd8\x3f\xe4\x6a\xc8\x1a\xba\x18\x2a\xbf\xe0\xd0\x62\x96\xd1\xaf\x48\x9a\xc9\x48\xd5\xab\xea\x10\x3b\xea\x37\xfa\x8a\x77\xd6\x3d\x16\x4e\x0f\x41\x1c\x9a\xd5\x0d\xe3\x54\x29\x8f\x9a\xf5\x5d\xa5\x34\x9d\x71\x22\x33\x30\x03\xfa\x36\x76\x2b\x31\x60\x56\xf0\x6d\x7a\x7d\x77\xa9\x1f\x29\x7e\xd4\x72\xb3\xdf\xbd\xee\x15\x0c\x56\x3f\x7f\x36\xc7\x9a\x2f\x47\xe7\xd8\x93\x9a\x82\x48\xee\xb7\xb8\x77\x28\x19\x44\x86\x93\xfa\x0a\xe4\x8a\x25\x68\xc6\x20\xfd\x3d\x3e\x6d\x46\xae\x77\x20\xe1\x0a\xac\x92\xc4\x14\xfd\x6b\xcb\xa7\x6c\x52\x9c\xaa\x24\xe6\x13\x75\x41\x1f\x8a\xa3\x18\xd3\x25\x22\xdb\x3f\xf6\x7d\x64\xd6\x1e\xc0\x31\xf4\x06\x45\xb1\x22\x4f\xee\xb2\x68\xbd\x7f\x70\x4c\x22\xe1\x10\xbd\x2c\x3f\x97\x6e\xe5\x79\xac\x98\x1f\x04\xa6\x08\xcf\x56\x26\xf9\x06\x23\xd2\xd7\x0d\x9f\xdd\x6f\x65\x0f\xd2\x95\x4e\xb9\x45\x07\x48\x89\x32\xcf\x46\x84\xbb\xce\x19\x44\x67\x62\x6e\x21\xc2\x94\xd4\xd9\xf6\x78\x21\x3d\x49\xbe\xf6\x42\xb2\x93\x88\x87\x37\x85\xdf\x85\x16\xd3\x56\x1e\xcc\xb5\xe4\x3a\x4a\x32\x3e\xc7\xeb\xd6\x19\x48\xa4\x93\x99\xc3\x45\xa1\x4e\x44\x8e\x50\xbf\x28\xd8\x9c\xd1\x22\x24\x0a\x9d\x66\xf7\xf9\x7d\xed\x36\x17\x0b\xe2\xfa\x6d\xac\xd5\x4a\x41\xd9\x68\xa8\xbb\xd3\xa9\xb7\x64\x21\x0f\x27\xf6\x9a\x11\x90\x29\x65\x95\xdc\xb8\x48\xe5\xb2\x9b\x77\x39\x45\x58\x25\xe4\xe3\xf7\x5d\x4c\x60\x5b\x1a\xc8\x20\x10\x6a\x5f\x53\x0d\xd7\xd7\x52\x96\x5d\xe6\xac\xbf\x77\xc6\x77\x86\x87\x44\x68\xcf\x47\x0b\x0a\x02\x8d\x83\x0b\xc3\x6a\xe0\xb9\x5a\x07\xad\x31\x76\x61\x28\x3b\x18\x76\x9b\xaa\x80\x3d\xab\x56\x00\x50\x52\x09\x43\x89\x63\x3e\xad\xdf\x4d\x76\x73\xfd\xe4\xe6\xfb\xf7\xaf\xf8\xd9\xab\x0c\x0a\x4d\x7f\x33\x17\x33\x80\x2b\x2f\xcc\x7b\x1d\x21\x58\xc3\x79\xb6\xb8\x7c\xe7\x13\xa9\xea\x8e\xe4\x65\xe1\x90\xc1\xb9\x9c\xcc\x40\x7d\xf9\xee\x81\x9a\x5f\x32\x01\xcb\x49\x54\x26\x6a\xb8\xac\x07\x21\xf3\x3d\xc2\x13\x06\x70\xc4\xfa\x11\xec\x8a\x57\xc7\x48\x8c\x67\xfd\x25\x13\x26\x05\x59\xe8\xc9\xb2\xe2\x1c\x2f\xd4\x14\xeb\x9f\x19\x52\xb2\x3a\x60\x64\xa4\xc0\xe4\xb8\x4d\xfe\x9a\x1e\x27\x0d\x45\xa4\x6d\x54\x05\x3a\xc6\xfe\xd6\x05\xea\x88\x11\xb4\x4f\xbf\x2e\x76\x09\x7c\x49\x6d\xca\x8e\x4a\xe4\xfb\x53\xe6\x5f\xa1\x4e\xb8\x0f\x3b\x6d\xcd\x7b\xe9\x56\x98\x18\x85\x44\x96\xdf\x3d\xbd\xb2\x10\x61\xc9\x47\x99\xa1\xd2\x8a\xc6\xfc\x38\x35\xaf\x0f\x3c\xf7\xbb\x0f\xe2\x1d\x16\x50\x2c\x39\xbd\x8a\x2f\x84\x31\xe6\x17\x73\x2b\xbf\xdc\xde\x6e\xeb\xfd\x6b\x7e\x0c\x9f\xaf\xee\xa6\x16\xb6\xaa\x40\xc4\x54\xc2\x3f\x11\xcc\xbe\xab\xfa\x9f\x6e\x55\x6b\xdd\x7e\xab\xec\xaa\xd1\xd1\xdb\x11\x47\xdf\x96\x05\x55\x7d\x29\xf6\x41\xef\x0d\x7e\x15\xcc\xca\xc7\x5e\x46\xe5\xda\xd6\xce\x93\x4d\x6d\x49\x00\x21\x4d\xcf\x5f\x2e\x3e\x39\x6d\x50\xf1\xc6\x19\x4d\x47\x71\x55\x8e\xc6\xd7\x8e\x10\x94\x54\xae\x93\xeb\x62\x1a\x51\x27\xd6\xf7\xb7\x33\x44\x1c\xdc\x01\x6e\xfb\xf9\x87\x5b\xf1\x12\xec\x60\xe9\x21\x91\x8f\xcd\xcd\x6d\xc0\xc3\x4b\xb8\xcf\xb9\x76\x68\xdc\x7e\xec\x99\x15\x2f\x3c\x06\x01\x38\xb2\x39\x93\x34\x13\xde\xa3\x93\x46\xa3\xfe\xc8\xc1\x59\x76\xdc\x1a\xb8\xdf\x29\x1a\x06\x6b\x50\x1c\x28\x0e\xd1\xb2\xc5\x4b\x32\xa8\xd7\x8b\x06\x9b\x23\xbd\xb1\x66\x97\x42\x73\xf8\x44\x15\x91\xcb\x8b\x5b\x04\xac\x5b\x28\xac\x16\x95\xf9\xc2\xb1\x4c\xc4\x6f\xc1\xa0\x97\xd5\x52\xf2\x0a\x3f\x0c\x2b\x34\x19\x74\xbc\xfc\x4d\xfe\x00\x20\x57\xb6\xee\x50\xe8\xc6\xd2\x86\x02\xf2\x36\xd0\x4c\x8b\xa8\x38\xca\xf0\x5e\xb8\x3f\xd6\x6e\x6d\x3c\x96\xd5\xe6\x7e\xe4\x3b\xed\xc4\xf0\x64\x68\xbd\x5f\x2a\x44\x6f\xe6\xd6\x9a\x46\x95\x8b\x7c\x8a\x99\xc3\xd5\x25\xf1\xca\x39\x34\xdb\xb5\xef\x00\x31\xaa\x6e\x9f\x30\x24\xa0\x27\x22\xd5\x2a\x67\x4d\xe7\x52\xdc\x67\x9a\x29\x10\xf8\xe8\xca\xea\x1b\xd0\x0f\x54\x6e\x12\xf6\x6d\x02\xf6\xa4\x0f\x4c\x88\x0d\x0c\xc3\x2e\xe9\x02\x75\x56\x21\xa8\xbd\xa7\x62\x45\x9a\x47\xd0\x4d\x78\x34\xf7\xa9\x63\x45\x03\x6a\x21\x60\x81\xfe\x91\x22\x9a\xef\xff\xa6\xe6\xff\x01\x00\x00\xff\xff\x80\x2d\x22\x67\x8b\x06\x00\x00")

func test_certsClientTenant20KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Key,
		"test_certs/client-tenant.20.key",
	)
}

func test_certsClientTenant20Key() (*asset, error) {
	bytes, err := test_certsClientTenant20KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa0, 0x4b, 0x82, 0xdb, 0x8e, 0xb2, 0xdf, 0x7d, 0x3e, 0x5d, 0x93, 0x56, 0xbf, 0x2d, 0xc, 0x65, 0x72, 0xf8, 0x5e, 0x53, 0xb4, 0x4f, 0xa9, 0x21, 0x2d, 0xc3, 0x49, 0x15, 0x8a, 0xa0, 0x6c, 0x99}}
	return a, nil
}

var _test_certsClientRootCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\xcb\xce\xb2\xc8\x1a\x85\xe7\x5c\xc5\x9e\x9b\x1d\x11\x01\x61\x58\x50\x05\x94\x50\x48\xc9\x41\x71\xc6\xb1\x10\x50\x3f\x04\x29\xf0\xea\x3b\xdf\xdf\x49\xf7\xa0\xdf\xe1\xb3\x92\x95\xbc\x59\xc9\xf3\xff\xdf\x33\x90\x8d\xfd\xff\x99\xe8\x1c\x61\x0b\x9b\x20\x42\x7f\xa8\x40\x30\x86\x18\x9a\x26\x60\x77\x06\x38\x36\x00\xc3\xf4\x38\x22\x53\xac\xd7\x75\xdd\x57\xcd\x4d\xd1\xe9\xd4\xab\xb0\x8b\x80\x6f\xb0\x6e\x68\xba\xbb\xad\x73\xd1\x00\x74\xb4\x00\x04\x6f\x81\x9c\x31\x47\x20\x85\x09\xa5\x2e\xe2\x3d\xcc\x25\xff\x5d\x3c\xf4\x26\x95\xd8\x62\x45\x20\x32\x98\x9f\x18\x80\x44\x10\xf9\x73\x2a\x4d\x6b\x2e\x59\x6d\x66\x1a\x90\x46\xa0\xb2\xb8\xb8\x0a\x24\x02\x32\x89\xe2\xc5\xff\xc6\x0a\x81\x49\xf6\x0b\xfd\x16\xc8\xa4\x05\xff\x30\x62\x92\x05\xb5\x80\xfe\x5d\xf6\x8a\xcc\xf8\xdf\x32\x21\x83\xc8\x27\x60\xb4\xc1\x2e\x46\x60\x21\xa8\x78\xe8\x73\xf9\xfb\x52\x88\x39\xa4\xe9\xd1\x7d\xdd\x70\x33\x17\x3e\xa0\xc8\x30\x28\x80\x8c\xa1\x00\xfc\xe6\xf4\x65\x32\x86\x0c\x01\xf8\x97\x63\x0f\x95\x7e\x18\x9d\xe0\x91\x85\x38\x6f\xbb\x41\x3d\x15\x8b\x91\x56\xea\x7b\xde\xf4\xb7\x9c\xfb\x5b\xba\x11\xad\x02\xee\xd0\xbb\x3c\x90\xb7\xb8\x9d\xaa\x7e\x92\xa6\xb1\xd8\x8c\x30\x12\x02\xb7\xf0\x5d\x3d\x56\x27\xfc\xd5\x8f\x9a\xb6\x17\x4b\x59\x2c\x1e\xbb\x84\x7f\xa4\xe6\xa5\xce\x76\x56\xc6\xcb\xe5\x70\x92\x97\xe1\x36\xcd\xef\xe8\xae\x6f\x14\x73\x1b\x7a\x4b\xa6\x03\xfa\x58\x12\x49\xb8\x8b\xc6\x5a\xbd\xa4\xef\xed\xd0\x55\xa3\xb3\x5c\x9c\xca\x52\xac\x64\xd9\xbb\x2b\x03\xd2\xf5\x68\x2a\xaa\xf4\x68\x6b\xae\x4d\x6a\x27\x9b\x71\xeb\x35\xb6\x6d\x99\xca\x76\x5f\x86\x45\x95\x5f\xe4\x4a\x28\x79\xa0\xc2\xf6\x3c\x48\x79\xaf\xaf\xca\xdb\x7b\xa9\xcd\xfd\xa3\x36\xfd\xcf\xee\x5e\xec\x83\x52\x61\x2d\x06\x69\xab\x26\x85\x9c\xbc\x3e\x5a\x73\x2d\xf0\x93\x5d\xb2\x68\xe2\x7e\x20\xff\xe8\x03\x14\x8c\xcd\xcf\x07\x4b\xec\xde\x38\x2a\x75\x8a\x4d\x1a\x75\x87\x2e\x78\x2d\x06\x5e\x97\xc3\x24\xf2\x24\x61\xb7\x3a\x9e\xfa\xc3\xc7\x13\x17\xbf\x5c\x7c\xfc\xc3\xf8\x37\x3d\x3b\x0e\x3d\xb5\xea\x69\x9e\x05\xfb\x25\xb2\xab\xf6\x0d\xd6\xfe\x5e\xab\xfc\xa2\xef\xdc\xb3\x7b\xfb\x11\x4d\xc0\x11\x00\x99\x8f\x09\x4a\x39\x64\x29\x4c\xce\x62\x00\xa8\xb3\x35\x00\x85\x80\x5d\x18\x31\xc8\xef\x72\xa5\x70\xa4\x94\x10\xf0\xb2\x4d\x73\xb4\x01\x8d\x2d\x83\x13\x93\x18\xda\x9f\x10\x73\x9a\x12\x23\x03\x96\xa5\x6a\x51\x12\xd2\x8e\xba\xdb\x8f\xee\x39\x3e\xfc\x71\xac\xe1\x41\x24\x6d\xad\x05\x02\x44\xdb\x0c\x07\x3b\xc4\xf9\x1e\x52\x64\x98\x3c\x06\x40\xc6\x06\xa0\x20\xb9\x88\x56\x48\x5b\x49\x39\x64\xbd\xdf\x55\x47\xf9\x4c\x87\xd7\xa6\xf0\x2e\xcd\xbd\xe7\xab\x7a\x29\x9e\xed\x45\x13\x8e\xfc\xeb\x56\x06\x3b\x95\xe7\xe1\x23\xa7\xf0\xf0\xf0\xa4\x2e\x34\xb5\xf3\x7e\xf6\x6d\x57\xdd\x2d\xcf\xc9\x78\x3f\x9c\x22\x3a\xd7\xd8\x5b\xc7\x03\x77\xe9\xe6\xb9\xbb\x36\x55\xbf\x77\x86\xae\x0f\x16\xa1\x5a\xb9\x32\xbc\xdd\xbc\xad\xb9\x6c\xb9\xad\x8b\x15\xeb\xd8\x68\xfa\xba\xab\xb3\xc6\x89\xc4\x22\x9a\x6f\x75\x31\xcf\x70\x72\x6b\x27\xad\xe2\xa4\x36\xfb\x36\xa2\x70\xca\x48\x0d\xe4\xc3\xd3\x12\x68\x4e\x5f\x4b\xcf\xf8\x06\x89\x5e\xa5\x81\x98\x42\x14\x9d\x5a\xff\xd4\x8a\x4a\x6d\x2b\xed\x37\xb7\x5d\xe9\xba\x7d\xac\x25\x1f\xcb\x0d\xf9\xe2\xbb\x74\x73\x73\x34\xa7\xa3\x98\xef\xa2\x96\x3c\x84\x9c\x49\x45\xd7\x2d\xef\xc8\x50\xce\x93\x37\x94\xe8\x71\xc8\x0b\xd3\x6f\x9f\x55\x8c\x77\xd5\x55\xe6\x3b\xa6\xec\xb7\xe1\x26\xfb\x40\xc5\xe3\x59\x16\x76\x21\xbb\x85\x41\xfe\x1e\x4b\x6b\x98\xba\x4e\x18\x9e\xd6\xac\x3d\x51\x7a\xf6\x6a\x7a\x9d\xb3\xef\x49\x9a\x35\xea\x04\x83\x03\xef\xf6\x90\x1f\xf5\x43\x16\x54\xa6\x0c\xbd\xe2\x9a\x5c\x6e\x7e\x82\x84\x3f\x1a\x41\x3e\xfc\xaf\x5a\xfe\x0a\x00\x00\xff\xff\x85\xb1\x14\x91\x77\x04\x00\x00")

func test_certsClientRootCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootCrt,
		"test_certs/client.root.crt",
	)
}

func test_certsClientRootCrt() (*asset, error) {
	bytes, err := test_certsClientRootCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.crt", size: 1143, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x72, 0x9d, 0x4d, 0x2d, 0xba, 0xf1, 0xa9, 0x1e, 0x3d, 0x1a, 0x88, 0xc1, 0x20, 0x3f, 0x93, 0xdf, 0xce, 0x81, 0x31, 0x87, 0x8f, 0xd9, 0x9e, 0x91, 0xf1, 0x5a, 0x25, 0x7, 0xa5, 0xee, 0x18, 0x73}}
	return a, nil
}

var _test_certsClientRootKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xa7\x12\xa4\x50\x02\x85\x61\xcf\x53\x8c\xa7\xb6\x9a\x26\x36\x62\xc4\x25\xe7\x1c\xdb\x91\x73\x86\x26\x3c\xfd\xd6\x8e\xde\x63\x8f\xf9\xdd\xf7\x9f\xff\x8d\xe1\x45\xd9\xf8\xe3\xb8\xe0\x8f\xe5\xc8\x01\xf0\xf8\x3f\x2a\x1f\xff\x7b\x20\x5d\x96\xf9\x19\xc8\x0c\x00\x2a\x0b\x6c\x1e\xbc\xe3\xc1\xb7\x86\x70\x39\x33\xf8\x3b\xcb\xf5\x61\xba\xeb\x44\x3c\xbc\x50\x53\xcb\xf1\x22\x83\xfe\x07\x30\x9a\xa3\xec\xe0\xb4\x7c\x77\xc7\xb6\x1b\xfa\x79\xf0\x9b\x0c\xb1\x04\xbd\x1e\xf2\x34\xf4\xcf\x7c\x22\xeb\xdb\x5b\x90\xd6\x42\xc6\xe7\x29\x1d\xac\x75\xee\x34\x88\x58\x2a\x11\xdb\xe5\xf3\x9d\xdf\x9e\x90\x6e\x54\x2b\xce\x03\x0a\xef\xa6\x86\x41\x54\xa7\xd1\xf2\x4f\x58\x11\x86\x4d\x85\x28\xd1\x6c\x49\x21\xdb\xd4\x18\x0f\x87\x3c\x4b\x21\xce\xf1\xa8\x0b\x22\x29\x5b\x55\xc0\x7d\xb3\x4e\x1b\xd7\x24\x31\x5e\xdc\x8d\x2d\x5e\xa5\xb8\xfa\xc1\x43\x71\xec\x6b\xe3\x2b\x7f\x2b\x17\xb1\xa7\x35\x81\x81\xd7\x64\x1a\xe2\xfa\x3d\x22\x4c\x1b\xb6\xa3\x5d\x44\x95\x5a\xc4\x70\x0c\x95\x27\xa3\xb1\x81\xd5\x2b\xa6\xb1\xe6\xe0\xa9\xc3\x86\xba\x85\xfc\x84\x9a\x82\xf9\xce\x26\x06\x90\x57\x33\xa2\x93\x2e\x91\x03\xde\x26\xac\xca\x97\x33\xc8\x1f\xa2\x36\xbd\xc3\x86\x5b\x9e\x6f\x35\xe9\xc0\x3c\x26\x08\x99\x9e\x76\xd1\xe8\xc0\x7f\x1e\xff\xc6\x78\xa4\x81\x06\x8e\x33\x6a\x3e\xcb\x01\x69\x4d\x24\xfc\x49\x5a\x97\x29\x1f\xfd\xa5\x86\xca\x6b\x65\x52\xcc\x9f\xf9\x79\x18\x6d\x99\x03\x36\x60\xc0\x24\x33\xc0\x66\xf7\xa9\x31\x1a\x3c\x72\x55\x06\xa6\x32\x88\xb6\x56\xaa\xf5\x55\xfc\x3e\x07\x58\x69\xdd\xc5\x20\x07\x0f\x59\xec\x60\xda\xe0\xa0\xf1\xa4\x8a\x16\x14\xea\x12\x1c\x5a\x73\xd8\x05\xdb\xcd\x02\x26\x3d\x84\x75\x0b\xda\xb5\x78\xcd\xfc\x24\x3d\x24\xad\xae\xe9\xc8\x86\x25\xf2\x74\xf2\xfb\xa5\x4c\xae\xea\xc1\xa7\x24\x67\xfe\xe7\x76\x28\x6d\xc7\x69\x49\x00\xc7\x77\xba\x19\x23\x0d\xeb\x32\xa8\xa7\x5f\x65\x74\x43\x41\x8a\x1b\x02\x59\x35\x1c\xf4\xc9\x67\xd4\x3a\x5a\xe2\xb0\xbd\xae\x13\x2e\xa0\xec\x9b\x6d\x6d\xcc\x55\xf2\xe1\x13\x32\x6b\x64\x58\xc2\x4a\x47\xc3\x04\x26\xe4\x7b\x37\x75\x33\x54\x26\xc7\x6a\xc6\x22\x7f\xf0\xcc\xeb\x2a\x1b\x2a\x42\xcc\xd5\x5f\x73\xc2\x63\x3d\x58\x19\xce\x62\xc8\xe5\xa9\x13\x5a\xd2\xf2\x64\x89\x65\x1e\x90\x29\x8c\x23\x19\xd5\xb7\x1c\xb7\xd0\xc3\xe8\x2b\x72\x3c\xd1\xcc\x61\x3c\x15\x06\xa3\x58\xd2\x40\x52\xb7\x7c\x09\x69\xf1\x5e\xec\x4e\x4e\xc3\xed\x55\xe8\xe0\xe5\x80\xa4\xee\x29\xfb\xe6\xa4\xbb\xa3\xc1\x4f\xf0\x0c\x66\x09\x6d\xe1\x58\x2c\x60\x1a\x72\xe0\xc3\x69\x43\xbe\x67\xb3\x85\x8b\x92\x86\x3e\x84\x20\xe0\x12\xfc\x05\x93\xc8\x00\x93\x79\x87\xde\xa5\xd9\x57\x8d\xbb\x4c\xb1\x85\xf8\xe1\x53\x93\x13\x3c\x49\x2f\x2a\x06\xf1\x9b\x92\xf7\xc8\x0e\x37\x66\x0b\x1a\x6b\x5c\x73\x16\xd1\x24\x03\x49\x78\xa5\xbd\xf2\x4c\x8f\xf8\xd3\x23\xec\xed\x66\x95\x1e\x95\xde\x4e\x1a\x68\xe4\x7a\x27\xca\xb7\x04\x49\x08\x23\xa8\xad\x8a\x7b\x89\x2c\xdb\x63\x53\xc3\x3c\x91\xfb\xc0\x6e\xb9\x74\x2a\x4b\x0c\x49\x11\x83\xa6\x92\x1f\x34\x88\x78\x63\x4c\x9c\xa6\x37\xfa\xad\xce\x5f\xdf\xc9\x16\x9b\x9f\x85\xde\x4e\xdf\x55\x16\xea\xe0\xa7\x95\x5a\x6a\xe8\x4f\xce\x58\x88\x62\x84\xda\xbf\x62\xcb\xd4\xa0\x88\xc5\x3f\x6f\x56\x59\x05\x4f\xe8\x77\x61\xc1\xf3\x9a\x3d\x17\x92\x8b\x5c\xc2\xdb\xd5\x10\x6f\xd6\x5b\xcc\x1d\xa4\x1a\x9f\x5c\x75\xa9\xe6\x36\x55\x3e\x25\x68\x9d\xbe\x95\x52\xeb\x77\x55\xd5\x20\x81\x00\x04\x5c\x88\xaa\x19\x9a\xb3\xb9\x46\xd9\x81\x01\xd4\xb7\x39\xc2\xd4\x27\xf8\x1a\x26\x15\xaf\xd6\xd6\xcb\x56\x32\xea\x96\xee\x7c\x06\x4f\xc6\x12\x10\x6f\x0e\x99\xf7\xef\xc2\x5d\xec\x01\x3a\x4b\x93\x5a\x82\xc4\x80\x57\xf6\x01\x29\x9d\xbc\xba\x8d\x1d\x13\xba\xba\x93\x6a\x45\xe5\xa9\x37\xe3\x4b\x9f\x3e\x3d\x06\x26\x11\xb8\x59\xaf\xbc\x25\x46\x09\xda\x11\x31\x1d\x5b\x22\x18\x4d\x81\xf2\x22\x2f\x5e\x3c\x41\x9e\xbc\xdb\x98\x71\xb2\xbf\xe6\x4f\x29\xd5\xa1\x1a\x50\x55\xa8\xc2\x29\x3a\xce\x8b\xdb\x92\x59\xdc\xf1\xe3\x17\xfe\x9e\x17\x83\x8b\x6f\x73\xc7\x56\xa3\xd0\x1e\x29\x37\x33\x08\x2d\x50\x5c\xfa\xd1\xfa\xdd\xd2\x3b\x9a\x0c\x78\x97\x55\x49\x9a\x46\xc1\xe5\x3d\xb3\x0a\xb7\x7d\xad\xac\x73\x29\x59\xd5\x80\x31\xf1\xe1\x1f\x54\xa1\x4c\x62\xdc\xaf\x3a\x75\x1a\x68\xfa\x7d\x4a\x48\x8a\x79\x05\xb5\x41\xe8\xa7\x7e\x7f\xbb\x55\x0c\x2b\x5f\x66\xfe\xf2\x6c\x15\xf3\xe0\x76\xdd\xdd\x1e\xd2\x0d\x09\xaf\xbc\x88\x47\xc1\x68\xed\x59\xd8\x46\xce\x69\xdb\x25\x55\x96\x32\x66\x30\x0c\x72\xd4\xe7\x74\x22\xce\xcd\xcb\xf5\x66\xed\xeb\xb9\x63\x9d\x99\x1d\xba\x99\x3b\xef\x65\x74\xbf\x29\xbd\xa9\x86\x0c\x56\x13\xf7\x4a\xbb\x95\xbb\xcf\x12\x47\xec\x7d\x4f\xea\xce\x27\x64\xb1\x3a\x38\xe4\x4f\xe6\x4b\xf5\x2b\xe4\xd5\xea\x9b\x52\xe0\x91\x68\xf9\x89\x94\x4c\xec\xab\xb3\xdf\x32\x66\x51\x46\xc5\x77\x14\x41\xe6\x9d\xd6\x44\x41\xa1\x36\x6a\x64\xf2\xf3\x90\x2d\x57\x21\xc8\x03\x56\x12\x90\x38\x63\xfd\xc8\x6e\x6c\x15\x03\x5c\xd3\x86\x9f\x41\x45\x18\xe8\x68\xca\x44\x8d\x52\x18\x45\xa7\xf6\xcc\x1f\xd3\xd4\xb4\xb7\x7e\x96\xca\x9e\xcc\xdf\x6c\x93\x6a\xbd\x15\x45\xa1\x9e\x66\xfd\x29\xa1\x5a\xea\x39\x19\xe6\xb8\x04\xdb\x86\xb9\xd7\x4b\x3f\xeb\x95\x64\x3f\x9f\xd3\x42\xb6\x2c\x0f\x13\xef\x56\x49\x37\x24\xaf\x4f\x2f\x84\x59\x0f\x7c\x55\x77\xc9\xdf\x94\xd2\xcd\x25\x50\x93\xef\x3a\xd0\x44\x48\x42\x55\x6e\x27\xce\xb5\x38\x55\x95\xb5\x60\xa4\x31\xe2\xc1\xa3\x79\x0d\x60\xf6\x83\xba\xa7\x6a\xb8\x90\xe6\x96\xe1\x99\xfd\xd0\xb6\xcb\xfc\x5e\x62\x75\xfe\xfd\x0b\xfd\x63\x85\x37\xb8\xff\xcf\xcd\x7f\x03\x00\x00\xff\xff\x80\xde\x29\xc4\x8f\x06\x00\x00")

func test_certsClientRootKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootKey,
		"test_certs/client.root.key",
	)
}

func test_certsClientRootKey() (*asset, error) {
	bytes, err := test_certsClientRootKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0x80, 0xa6, 0x2b, 0x5a, 0x8a, 0xb2, 0x39, 0x1b, 0xd2, 0x88, 0x8, 0xce, 0xe0, 0x55, 0x6c, 0x20, 0x4c, 0x62, 0xb, 0x7a, 0xe7, 0x22, 0xf1, 0x2c, 0xf9, 0x53, 0x4c, 0x29, 0x26, 0x37, 0x9d}}
	return a, nil
}

var _test_certsClientTestuserCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xb9\xce\xab\xc8\x16\x85\x73\x9e\xe2\xe6\xe8\xca\x36\x1e\xff\xe0\x04\xbb\xa8\x62\x74\x81\x99\x31\x19\x18\x5c\x0c\xc6\x36\x83\x99\x9e\xbe\xe5\x73\xa4\xee\xa0\x7b\x87\xdf\x92\x56\xb2\xb6\xbe\xff\x7f\x0f\x11\x59\x35\xfe\x27\x12\xdb\x55\x25\x55\x04\x97\xfc\xa6\x1c\x55\x55\xac\x61\x51\x04\x36\x33\x18\x55\x04\x4c\xb5\xce\x92\x93\xfa\x01\x9e\x13\x9d\x99\x9f\x6e\xd6\xce\xe6\x7a\x74\x31\x18\x88\x55\x4d\x5e\x15\xf2\xcf\xb8\x46\x60\x75\x12\x60\x68\x39\x6a\xab\x23\x81\x2b\xf6\x2d\x4b\x27\xe3\x03\x27\x82\xd1\xde\xea\x9f\xfc\x2a\xb0\x49\x72\xc1\x45\xcc\xf0\x11\x50\x17\x13\x63\xb8\x0a\xfd\x9c\x08\x52\x19\x8b\x08\x5b\x2e\x64\xd2\xb8\x9e\x39\xea\xc2\x8e\xba\xde\x64\x2c\xde\x9e\x62\x3f\xfe\x42\xa3\x84\x1d\x2d\xe1\x6f\x46\xc5\xdb\x44\x4a\xb0\xfe\x94\xbd\x5c\xd1\xfb\xa7\x8c\x8b\x31\xb1\x29\x9c\x64\xd8\x78\x04\x26\xaa\xa6\xb2\xbf\xa4\x8a\xbf\x44\xa1\x3a\x32\x46\x0a\x0a\x6b\x59\x74\x1a\xd9\x51\x93\x2d\xb6\x08\x02\xcb\x03\xd8\xa9\x08\x8f\xf0\xcd\x75\x0e\x5e\x2a\x02\x4b\x1c\x25\x1f\xfd\x94\xfb\x79\x3b\x2c\xee\xc9\x2c\x79\xa2\x24\xce\xad\xbe\x3b\x32\x9a\xe8\x26\x71\x8f\xd6\x1c\x53\x2c\x6b\x71\x41\xb4\xa7\x93\xc7\x85\x13\x0e\xcc\x52\x4f\xce\x9d\x1b\x4c\x6a\x4f\xc1\xb5\x76\x79\xa7\x8d\xce\xbb\x62\x93\xe5\xb1\xcb\xd7\x6b\x63\x5c\xd9\x75\x97\x0a\x4a\xbd\x49\xae\x95\xd1\xcd\x85\x3d\x04\x9a\xf1\xb6\x94\xbb\x89\x9c\xf2\xc1\x8f\xe5\x3b\x32\x5a\x93\x3b\x54\x15\xff\xa3\xb6\x87\x8a\x41\x1f\xcd\xc2\x80\xfa\xcf\xe9\x74\x10\x2f\x0a\xad\x3e\x41\xcb\x8c\x9d\x1f\xc6\x99\x56\x7b\x75\xa4\x6d\xd1\x3e\xf3\xdb\xf2\x99\x87\x07\x4d\x88\x14\xe3\x7e\x39\x58\x2e\x17\xee\x6f\x6e\xf1\x4c\x8c\x27\x99\xe2\xd7\xad\x29\xf6\x7c\x49\x2b\x7b\xe5\x56\x51\xf3\x5e\xe8\x9b\x55\xb5\xa0\xcd\x7e\xcb\xe2\xed\x3e\x3d\xa3\x75\xd9\x0d\x77\xd9\xf2\xee\xcc\xf2\xc4\xf6\x3a\xda\x39\xc7\xfc\x4f\x2d\x3e\xc4\xeb\xc6\xb0\xc6\x75\xa1\x27\x8e\x2c\x98\xfc\xde\x0d\xcb\xfb\xfc\x88\x7c\xdd\x7f\x67\xf1\xa2\x17\xde\xb0\xaf\x74\xfb\x92\xbd\xdf\x39\x3a\x7f\xb2\xa8\x71\x76\xcf\x65\xcb\xb7\x86\xcb\x9d\x15\x94\xb5\xaf\x14\x86\x46\x50\xce\x7b\x05\xf2\x4a\x3f\x4a\x4c\xb6\x40\x7a\x49\xc0\x28\x02\x90\x4b\x07\x23\x99\xc2\xee\xbb\x54\x8a\x47\x82\x56\xa3\x45\x60\x54\xa5\x17\x06\x97\xfb\x6e\xab\x38\x1e\xc1\x18\x74\xc4\x58\x8b\x18\x91\x90\x75\xc3\x50\xc2\xfd\x4f\x46\x89\x8c\x21\x60\xc8\xce\x06\xb2\xf1\x2a\x8d\x88\xc3\x71\x70\xa6\xc5\x3a\xd8\x53\xfc\xe6\x4a\x63\xa0\xcf\xe5\x3f\xde\x14\x4c\x11\x2c\x02\xd2\x09\x42\x77\xdf\x42\x52\xf4\x18\x55\x2b\xba\x37\xed\x57\xc0\xbf\x36\x47\x60\x6c\xc1\x4a\xc3\x7d\x8e\xf3\x71\xba\x97\x11\x8c\x61\xdf\x89\xf5\x09\x75\x87\x3b\xbb\x2d\xcd\x39\xb5\xfa\x4d\xd4\x2e\x87\x75\x70\x42\xab\xcd\x34\xf6\xf6\xdb\xec\xb5\x7b\x2b\x69\xad\xd6\xad\x49\x5e\x3b\xa2\x1b\x16\x39\x97\xd9\xc6\x07\x09\x41\x19\xe2\x5c\x3c\xc8\xd3\xa7\x30\x82\x6b\xdb\x19\x79\x16\xf8\xf9\xca\x9c\xa6\xf3\xe6\xd1\x0b\x8b\x35\x5d\x84\x67\xbb\x19\x7b\xba\xd2\x9a\xcf\x45\x79\x06\xc5\xd6\xe1\xad\xb2\x5d\x38\xfe\xa2\x0d\xcd\xb6\x11\x32\xc5\x3e\x19\xc7\x27\x75\x11\x42\x93\xd0\x4b\x11\x7f\xd1\x67\x9f\xd7\x99\xae\x54\xd2\xa4\x76\xdb\xc7\x4f\xf5\xde\xaa\xfc\x74\xbd\x34\x6c\x8b\xe4\x50\xbe\xaa\xd9\xc3\x24\x5c\xed\xd8\x46\xdc\xed\x2e\x55\xa8\x16\xc9\x39\x89\x4a\x8a\x35\x26\x7a\x9a\x93\x7a\x86\xf7\x0a\x48\x7f\x3c\xa7\x8f\x97\xd2\xa5\xaf\x3e\x7a\x61\xcd\x90\x7b\x48\xa6\x55\xff\x3c\xc2\xd2\xa7\x41\xda\x72\x9e\xa4\xb7\xbd\x30\xf8\x30\x2f\xf5\xc3\x9f\x97\x92\x35\xd7\x4f\x74\x1a\x51\xbe\x5f\x7f\xa4\xd0\xac\xef\x6a\xd6\xb9\x1f\xde\x89\xe6\x47\xed\x8a\x87\x5b\x4c\x33\x7e\xfc\xf5\x8b\xfb\xad\x13\x62\xe0\x7f\x2b\xe6\xaf\x00\x00\x00\xff\xff\x96\x0a\xe9\x48\x7f\x04\x00\x00")

func test_certsClientTestuserCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserCrt,
		"test_certs/client.testuser.crt",
	)
}

func test_certsClientTestuserCrt() (*asset, error) {
	bytes, err := test_certsClientTestuserCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x53, 0x4c, 0x88, 0xc5, 0xb7, 0xea, 0x70, 0x6e, 0x8e, 0xdc, 0xbb, 0x6c, 0x7f, 0xcb, 0x2d, 0x63, 0xde, 0x68, 0x37, 0x70, 0xac, 0x6, 0xb7, 0xaf, 0x5c, 0x70, 0x8b, 0xde, 0x62, 0x9f, 0x29, 0xfc}}
	return a, nil
}

var _test_certsClientTestuserKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xab\xc8\x02\x85\xe1\x9c\x55\xdc\x9c\x7a\x05\x02\x04\x28\x78\x01\xa6\x81\xc6\x09\xd4\xf8\x0c\xe1\x24\xbc\xf0\xb0\xfa\xa9\xb9\xf1\x9c\xf4\x24\x7f\xf6\xfd\xef\xdf\x89\x40\x85\xf6\x9f\x17\x12\xfe\x38\x2f\x18\x08\x1e\xf8\x63\x80\xf8\xef\x83\x59\x10\x82\xa1\x82\xa2\x20\x18\x92\xe0\x02\x61\x16\x03\xb7\x8c\xf1\x6c\xe1\x78\x92\x90\x07\xe2\x23\x52\x64\xaf\xf7\xe4\xa7\xca\x3c\x3b\x24\x71\xd2\xea\x6a\xe1\xf8\x86\xc3\x47\x4a\xc8\x21\x1c\xb0\xa6\xe5\x18\x20\x39\xa0\xe7\xae\x1a\x64\x41\xa7\x37\x44\xf3\xa3\x10\x0e\x97\x68\x08\x1b\x62\x5c\xe4\xcc\x21\x93\x49\xcb\x3f\xf7\x25\xa4\x74\xf9\x6d\x0d\xcd\xfb\xf6\xf5\x52\x5f\xa4\xaf\xca\x1f\xb0\x7b\x39\x43\x36\xf4\xd2\x6b\x1d\x75\x67\x43\x06\x3e\x42\xc1\x0c\xb3\x65\xda\xdf\xef\xcd\x79\x56\xf5\x71\xe9\x66\xfb\x63\xe4\x42\x09\xa8\xfe\x9b\xb4\x7a\x87\xf2\xbd\x88\xda\x94\xb9\x33\x01\xfe\xc5\xf2\xee\x75\x45\x17\xde\x80\x1b\x1e\x01\x66\xa4\xae\xe4\xb0\xc2\x9f\x66\x0c\x6b\x39\x5c\x3a\x28\xc9\xbb\x9a\xfe\xb2\xcb\x88\x75\x7d\xf9\x66\x6d\xca\xa8\x0b\x1e\xa1\x3d\x87\x9c\x49\x1f\x8d\xa2\x61\x0c\x50\x84\x1f\x65\x81\x38\x56\xde\x63\x35\xba\x9d\xed\xf9\x96\x0d\xbf\x1d\xf9\x59\xea\x6d\xf5\x6f\x0c\xcd\x8f\x61\x80\xda\x34\xea\xe6\x73\x68\x4d\x3c\x91\x1a\x8f\xfe\xa5\xb1\x8b\xb8\xbe\x4b\xb1\x66\xd5\xf9\x07\xf1\xbb\xfc\xf3\xd8\xa3\x1f\xab\xb9\x26\xbb\x7c\x4e\xfc\xb5\xc3\x44\x5a\x8f\x58\x6c\x04\x31\x15\x5d\x28\x0b\xae\x20\x0a\x03\x14\x05\xa9\x30\xdd\xfc\xee\xb2\xc0\xaa\x37\xfe\xf5\xc0\x42\x45\x0f\xfc\x58\x3c\xa8\x39\x09\x0f\x75\x0d\xac\x73\x27\x4b\x25\xd8\x7e\x35\x72\xdc\xfc\xf0\x2a\x82\x31\xad\xe2\xfe\xc0\x8b\x57\x7e\xa2\x7a\xfd\x96\x1f\x30\x39\x15\x24\x0b\x03\x30\x34\xee\x63\xdb\xdc\x0e\xa6\x9c\xc3\xd4\xe7\x9d\xae\x79\xbe\x5a\x9e\x73\xb7\xb9\x67\x37\x4d\x14\x56\x29\x2b\x92\xf8\xbd\xd7\xf7\xde\x58\x47\xa0\x67\x7a\x58\x51\xe9\x2d\x36\x20\xa3\xef\xf8\x6f\xdf\x93\x83\xc6\x86\x5a\x11\x47\x0e\x6d\xde\xa6\x97\xf2\xef\x1d\xad\x53\x74\xf6\x17\xc1\x88\x83\x37\x34\xdf\x66\x6f\x72\x2f\xd0\xc8\x21\x94\xe7\xc9\xd5\x38\xc3\x2b\x3c\xb2\xb0\x6f\xe1\x27\x9f\xfa\x2d\x2f\xaf\x0d\xcb\xd6\xab\xa8\x05\xc4\x73\xaf\x55\xa7\x9f\x15\x4f\xb1\x23\x7a\x5a\x1d\xad\xe5\xf5\xfd\xa9\x07\x05\xc9\xf6\x0c\x05\xe3\x71\x6f\x3d\x23\x98\xba\xf2\x39\xe3\xde\x28\x25\xb2\xba\x1e\xdf\x50\xc2\x0b\x0c\xfa\x51\x73\x76\x94\x3a\x9c\xc7\x60\x4e\x56\xcb\x68\x71\xa5\x66\x4e\x24\xe4\x92\x0a\xe3\x79\xd5\xba\x82\x5c\xfd\x4c\xa7\x54\xd5\xe8\x2a\x35\x47\xb0\x30\xa2\xd8\x64\x6b\x64\x06\xdb\xbd\x3a\x31\x88\x04\x39\x0a\x1b\xa9\x8a\x81\x70\xcc\x2e\xa4\x4d\x2a\x1b\x2b\x22\x4b\x1f\xb1\x5d\x97\x2e\xf7\xb5\xb7\x23\x62\xd9\xbb\xde\xc7\x88\x2d\x6f\x6b\x6c\x84\x53\xba\xbe\xb2\x32\xf3\x0c\x9e\x41\x29\xc6\x49\x7a\xd8\x8b\xf4\xb8\x55\xcd\x56\x9d\x92\x75\x92\xfb\xe1\x10\xea\xf8\x2d\xe6\x17\xb2\x1f\xa7\xf8\x8b\xd7\x8f\xfe\x1e\xf6\x5e\x37\x58\x08\x1f\xfb\x7b\xb8\x88\xfb\x3b\xaa\x27\xf7\xf7\x61\xc5\x12\xcb\x82\x3e\x3f\x60\xc6\x86\x99\xef\x5a\x8a\x5e\x7e\x3b\xa1\x80\xa5\xdb\x34\xe6\x6e\xe4\x8f\x01\x2c\x09\x74\x23\xa0\x7a\xc8\x30\x3a\xb4\x7b\x0f\xe0\x28\x86\xd9\xf0\x7f\x8b\x99\xb9\xc1\xb1\xd3\xe3\xfa\x78\x7f\x6a\xea\x42\x76\xc4\xef\x54\x5f\x8c\x19\x3b\x63\xb3\xdc\x63\xd2\xe2\xc8\x16\x57\xb3\xe5\x76\x2d\xd4\x03\x3c\x4e\x7c\x33\xa9\xe8\xb6\x3f\x8f\x54\x51\x1d\x6d\x8a\xe6\x75\x49\x78\x6c\x51\x48\x05\x12\x0b\xbd\x5a\x5a\x1c\xac\x4e\x0a\x54\x66\xe2\x0e\x65\x42\xc8\x81\x7c\x9d\x5a\xf7\x82\xef\x35\xce\xf2\x3d\xfa\x1d\x5c\xfa\x87\xb1\x92\x22\x4f\xaf\x4f\xe9\x28\x36\x4d\xa0\x21\xc3\xe4\xb4\x3d\x14\xd6\xf4\x33\x8b\x7a\x9e\x07\x7d\xd2\x53\x1a\x5f\x8e\x63\xc0\xaf\xc2\xda\xee\x14\xab\x2c\x3f\xf8\xe1\x2c\x55\xb1\xc8\x19\xf1\x33\xf6\x80\xfa\xd9\xf5\x8f\xdc\xa6\x63\x57\xe8\x57\x89\x21\x42\x23\x58\xd7\x22\x8c\x45\x96\xcb\x99\x97\xdd\x0a\xb1\x7b\x47\x1c\xe1\x78\x4e\x7e\x6b\xec\x94\x0b\x2f\x52\x53\x24\xea\x79\x08\x0c\x79\x63\x17\x2a\x4d\xa4\x0c\xf9\x78\x7d\xaa\xbd\x9c\x18\x58\xd7\xa3\x62\x28\xca\xb5\x7c\x86\xe5\xb2\x1d\x4e\x4a\x9b\x9a\x20\x10\x7d\x2b\xf4\x6c\xda\x1c\xc9\x44\xa5\x64\x14\xfc\x8e\x8d\xb2\x96\xbe\x22\xfb\x4c\x56\xdf\x4b\x77\x6b\xef\x29\x87\xe8\x63\x6f\x31\xb6\x06\xa6\x14\x59\x6f\xa1\x8c\x7e\x9c\x92\xf7\x2f\x74\xc8\xf2\x6e\x88\x95\x54\x6b\xca\x3c\xc3\x0b\xc2\xfb\x53\xea\xfd\xf4\x93\xba\xf4\xe6\xce\xe7\xec\x53\x4b\xae\x31\xf3\x6c\x5c\x1c\x90\x7a\x4c\xb3\xf1\xc7\xfb\x1c\x4c\xed\x94\x85\x5b\x8f\x0c\x2e\xb2\xb3\x7c\x2d\xd4\x6d\x82\xf7\x69\x35\xca\xfc\xf2\x47\xb5\x8e\xc2\xe4\x55\xb2\x8d\x62\x5d\x84\xa4\xc7\x39\x3d\x68\x8e\x67\xb8\xa6\x16\x9a\xd8\xbc\xf9\x8c\x5d\xa5\xd7\x45\x51\xdf\xc8\x1c\x9f\xc0\xac\x8a\x7d\x06\x4f\xf8\x22\xb3\xc8\xe3\xe8\xc1\x88\xfb\xf0\xb5\x3a\xe1\x10\xbe\x6d\xe7\xd3\x5d\x96\x69\x67\xa7\x49\xf0\x95\xd2\x77\x99\x5b\x61\xcd\x98\xbf\x84\x41\x15\x7c\x6b\x36\xd1\x98\xcf\x6a\xc3\xa2\x72\xc9\xc2\xcd\xe2\x6c\xf9\xe4\x48\x7f\x7a\x73\xa3\xa8\xf6\xea\x51\x83\x84\x3f\xcf\xbe\x1f\x60\x7f\x64\x7a\x36\x73\x6a\x31\xee\x2c\x76\xcd\xa0\xa4\x6d\xcd\xb3\x23\x49\x2c\x10\x5b\xbc\x56\x91\xce\xb4\xda\xf1\x86\x9a\x1c\x74\x64\xb4\x8a\x08\x66\x3b\xdb\xc1\x78\x3e\x9c\xfd\x11\x93\x96\x45\xb7\x30\x25\x78\xba\x0f\x9f\x57\x8b\x30\x0f\x2a\x0f\xcb\x5f\xd0\xd3\x53\xf8\xf6\x57\x1c\x35\xa0\x77\x06\x07\x34\xfb\x9d\xf4\x90\xda\x0b\xe1\x3e\x80\x60\x0b\xd6\xd3\x9b\x9d\xb5\x12\x97\x4f\x4f\xfe\x1f\xfb\x4b\x0a\xb0\xe5\xff\xa6\xe6\x9f\x00\x00\x00\xff\xff\x9a\x88\x27\x20\x8b\x06\x00\x00")

func test_certsClientTestuserKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserKey,
		"test_certs/client.testuser.key",
	)
}

func test_certsClientTestuserKey() (*asset, error) {
	bytes, err := test_certsClientTestuserKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0x5b, 0x4f, 0xb9, 0x2f, 0x8c, 0xb7, 0xd4, 0xb5, 0xe, 0x79, 0x7b, 0xc7, 0x52, 0x32, 0xf9, 0x1e, 0x1e, 0xfb, 0x80, 0xd8, 0x88, 0xaf, 0x7e, 0x39, 0xd6, 0x28, 0xa7, 0x3e, 0x89, 0xa, 0x2d}}
	return a, nil
}

var _test_certsClientTestuser2Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\xb9\xae\xab\xca\x12\x86\x73\x9e\xe2\xe6\xd6\xd5\xc2\xe0\x01\xc2\x9e\x98\xbb\x71\x33\x43\x86\xc1\x6e\x46\x4f\x18\x63\xfb\xe9\x8f\xf6\x0a\x76\x70\x4e\x85\x7f\x49\x9f\xaa\xa4\x5f\xdf\xff\xff\x0c\x24\xa6\xcd\xfe\x87\x48\x10\xd9\x86\x8d\x40\x44\x7e\x53\x89\xda\x36\x76\x3a\x84\x80\xd8\x09\xb0\xd8\x10\x08\x3b\x00\x87\xb0\x8f\x31\x4c\x4f\x93\x16\xf9\xaa\x4b\xef\xc7\xe3\xf2\x82\xf2\x82\x79\xee\xb8\xd7\xc2\x6e\x5e\x15\x03\x9c\x78\x90\x83\x45\x72\xbf\x24\xa4\x10\x98\x60\x1d\x13\xd4\x50\x87\x2b\x7a\x57\xaa\xce\x2b\x4f\xd9\x95\x06\xf1\x42\x96\x1c\x27\x9c\x63\xb2\xbc\xf1\x51\x61\x8f\x6a\xd4\x9b\x5c\x11\x82\xcb\x64\xb1\x9a\x8a\x49\xb4\x23\x8b\x8f\xc9\x9a\x46\xd5\xda\x8f\x80\x92\x36\x15\xa3\x5d\xbe\xf8\xd8\x5e\xfe\x66\x1d\xb8\xd2\xc0\x5e\x08\xf8\x85\xb9\x64\x19\xfe\xc2\xa4\x5c\x11\x6f\xd2\x01\x0e\x05\x4b\x20\xa0\x11\xca\x82\xa1\x52\x83\x75\xa5\x24\x1f\xfa\xe7\xb5\xd0\xfe\xf7\xe9\x10\x72\x80\x85\x20\x07\x80\x11\x92\x00\xbf\x22\x21\x08\x04\xf4\x23\xd2\xf6\xc7\x13\x6e\x5c\x58\x63\x49\xcf\x4e\xe0\x64\x11\xad\x9e\xb7\x5b\x01\xb2\x8c\xd7\x5e\x7e\xf7\x7b\x46\x1f\xab\x2d\xf6\x77\xd9\xa9\xa1\xeb\x9e\xb3\xdb\x57\xda\xe8\x2b\x18\x2d\xea\xb6\xb2\xcb\xfd\xde\xed\xca\xb3\xba\x6a\xdf\x6f\xb5\xfe\x86\x5a\x15\x3f\x95\x52\x58\xde\xc1\x76\xe6\x24\x5f\x3f\x75\x65\xe3\x41\x1c\xbf\x22\xb3\xb2\x19\x23\x1d\x22\xaf\x38\x96\xfa\x97\x6d\xbc\x53\x9c\x5e\x1e\xb0\x09\x8c\xc7\x23\x1b\xd0\xea\x3b\x17\xc4\xad\x2f\x7c\x68\x5b\x43\x09\x54\x93\xae\xa7\x48\xf0\x4d\xbb\x71\xed\x30\xb9\x8d\xcd\xa0\x7c\xee\x9d\xa2\xe2\xd7\xda\xf4\xa5\x7d\xe6\x29\x69\xce\x55\xeb\x78\xee\x9c\x16\xdf\xf6\x9a\xb9\xbf\x5e\x6e\xdb\xb1\xaf\xba\x6e\x76\x2e\x66\x7d\x7e\x66\xfe\x98\xaa\x49\x14\xa8\x18\x09\xa8\x6f\x50\x3a\x08\xcb\x5d\x8c\xb7\x47\x1c\x26\x3d\xf3\xf3\x64\xa5\xc5\x50\x1d\xc0\xa7\xf4\xdf\x65\x68\xec\xba\x7c\x2b\x87\x76\x51\xdd\x27\x7d\xb0\x34\x11\x29\xd3\x70\x50\x8a\x0b\x51\x74\x93\x8e\x7a\x7a\xd8\x94\x6f\xaf\xae\x4b\x40\xba\x30\x97\x25\x2d\xf5\x10\x5a\xd1\x1b\x0b\x8b\xd6\xd6\x95\xaf\x62\x12\x45\x41\xdf\x0d\x63\x4f\xed\xe1\xc6\x08\x2c\x04\x80\x92\xd9\x94\xe4\x0b\x16\x39\x4e\x02\xf9\x00\xb8\xf5\x03\x01\xc7\x40\xa4\x42\xa2\x90\xfe\x29\x51\xed\x70\x4e\x29\xb8\x9a\x08\x4d\x26\xe0\xb1\x01\x17\x8a\x28\xd4\x7e\x77\xf6\xc2\x73\x0a\x4b\x60\x18\x3b\x2d\x4a\x42\xde\x73\xf7\x67\xd6\x3d\x8b\xe1\x9b\x25\x19\xf7\x91\x2a\xda\xe7\x4c\x81\x6c\xa2\xf0\x6e\x86\xf6\x51\xc5\x9c\x40\xb4\xc4\x00\x6c\x6c\x08\x38\x72\x71\xbb\x75\xf6\xeb\x4c\x8c\xb3\xfd\x6a\x4e\x15\xaa\xde\xab\x22\xb8\x93\x71\x32\x06\x21\xb9\x3f\xc1\x3e\x9f\x3b\x2d\x97\xd1\x69\x9a\x03\xdb\xe9\xcb\x6c\xf5\x64\xdf\xa9\xa6\xec\xa3\xdc\x2f\x70\xa2\x9b\x0c\xc3\x9c\x25\xbe\x9c\xb1\xd9\x1a\xe8\xab\xf8\x58\xd1\xf6\xb6\x85\xe9\xe5\x54\x3b\x12\x3a\x36\xfb\xb0\xfb\xec\xa3\xf5\xa8\xf6\xcf\xf7\x25\xaa\x0e\x47\x8e\x6f\xa6\xd8\x5c\xf8\xbc\x7f\x1e\x76\x8b\xde\xb3\xb7\x9f\x47\xeb\x5a\xcd\xea\x33\xae\x74\x63\x1a\x7c\xd6\xbf\xa6\xe4\x5e\xcf\xa7\x49\x92\x7f\xae\x0a\xb8\xca\x1f\x0d\xa2\xfc\x3b\xbc\xb2\x2a\xce\x92\xa4\x38\x9d\x9f\x95\x51\x7a\x7d\xeb\x55\xf1\x30\x77\xae\x9f\x36\xd9\x9d\xdf\xa0\xb9\x12\x7b\x5d\xd6\xc6\x6d\xbb\x3a\x27\xea\xee\xb8\xed\xa4\x7e\x26\x72\xb7\xf7\x06\x59\xc7\xae\x3c\xcb\x9a\x1c\x46\xfd\xe4\x6c\x14\x25\x74\x57\xce\xb7\xd0\x28\x53\xcd\x18\xd4\x9a\xf7\x1c\x38\x39\x5b\xc1\xfc\xfd\x9c\x7c\xde\x64\xdc\xf0\x44\xda\x9e\x5b\xa9\x4e\xbf\x46\x7a\x54\x4b\x6c\x34\xe6\xe0\xb4\x3f\xf7\xb8\x6d\x1e\x89\xee\xb5\xc1\xb9\xd8\xd5\xbd\x91\x99\x45\x9c\x36\x13\xea\x27\x21\x9a\xc7\x67\x34\xc7\x7d\xde\x4d\xc9\x45\xfa\xd5\x09\x61\xf8\xbf\x8a\xf9\x27\x00\x00\xff\xff\x0f\x84\x91\x76\x7f\x04\x00\x00")

func test_certsClientTestuser2CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Crt,
		"test_certs/client.testuser2.crt",
	)
}

func test_certsClientTestuser2Crt() (*asset, error) {
	bytes, err := test_certsClientTestuser2CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x45, 0x93, 0xa2, 0xa2, 0x2f, 0xd6, 0x7d, 0x5, 0xe, 0x48, 0x37, 0x7a, 0xef, 0x86, 0x9d, 0x5f, 0xaf, 0xeb, 0x7d, 0xbe, 0x90, 0xcf, 0x56, 0xa2, 0x4b, 0x7f, 0x2, 0x2, 0x31, 0xdd, 0xfb}}
	return a, nil
}

var _test_certsClientTestuser2Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xab\x46\x00\x85\xe1\x9e\xa7\xb8\xbd\xc6\x43\x10\xb1\x5c\x60\x11\x4b\x8e\x22\x74\x22\x47\x01\x02\x81\xe0\xe9\x3d\xbe\xb5\x4f\x7b\x9a\xbf\xfb\xfe\xf9\x6f\x22\x7c\x20\xeb\x8f\xe7\x83\x3f\x8e\x87\x9e\x20\x80\x7f\x74\x98\xfc\x7d\x30\x13\x21\x38\x1d\x48\x04\x40\x97\x80\x0b\xc1\xa5\x8b\x2f\x83\xff\x82\xd9\xeb\xcb\x74\xfa\xf1\x03\x1c\x0a\xf3\x77\x52\xe3\xd0\x8b\x45\x21\x12\x5b\x3b\xb1\x2e\x71\xee\x5c\x6f\x72\x73\xc1\x42\xec\x8a\x3c\x40\xbd\x9d\xee\x4e\x2b\x8e\x5c\x0d\x47\xf3\xd9\xd7\xc5\x9a\xf1\x8a\x35\x54\xb5\xb8\x5b\xc6\xef\xe7\xdf\xd3\x05\xe4\x2b\x5f\x8f\xcc\xb3\x8b\xee\xf7\xac\x5e\xa1\xe5\x0b\x66\x7a\xd4\x04\x81\xf9\x26\xf2\x05\xcf\xf7\xf9\x3a\x56\x12\xeb\x55\xae\x0f\x05\x46\xdf\xad\x0c\x0d\xce\x66\x7a\x77\xa6\x0a\x29\xd2\x51\x9c\xaa\x79\x72\x45\x3f\x5b\x94\x5b\xa3\x9e\x1a\x2d\x1a\x5f\x8f\x38\xd3\x17\x07\xcb\x72\x1b\x0f\x13\x6e\xcb\xf7\x34\x6d\xe4\xbc\xd8\x6e\xe6\x88\xec\xf7\x7e\x64\xdf\xb6\x7c\x8f\x2f\xef\xb4\x6d\x7a\xcc\x53\xf2\x46\xe6\x6c\x9a\x15\x4f\x4b\xcd\x4d\x1d\xa8\xf7\x5a\x7b\x45\x20\xff\x60\x20\x86\xab\xdb\x53\x64\x73\x3b\x8a\x74\x7c\x1e\xbc\xac\x4d\x9c\x32\xa3\x78\xb1\xba\xb7\x87\x9a\xe1\x5c\x2e\x2a\xac\x4e\xd1\x79\x9d\x21\x9e\x8e\x79\x90\x11\xc9\x99\x91\x09\xde\x7c\xe0\x46\x92\xd8\x04\x7c\x4b\xeb\x82\x5f\xb2\x22\x83\x3e\x7b\x52\x1b\x51\x77\xcf\x9c\x24\x09\xb2\xc4\x70\x6a\x82\xba\x9f\xeb\xec\x22\x19\xb8\x40\x04\x13\x12\xc1\xe3\x29\x74\x1b\xb5\x9f\xda\xe3\x95\x98\xcb\x82\x3d\xc2\xc3\x91\xce\x5d\xfe\xb8\xef\x91\x89\x6c\xe9\xca\xc4\xda\x23\x6f\x32\xa9\x2f\x8e\x21\x2b\xdc\xf2\x94\xd2\xab\x08\x8c\x55\x0c\x48\xc1\xe8\xdc\x59\x06\x55\x74\x06\xc7\x34\x24\x27\xe7\x2b\x27\xa6\xf4\xe5\x5a\xb2\xfd\xce\x85\x37\x18\x54\x1c\x7f\x97\x2b\x67\x63\xc3\xa1\xf3\xbf\x57\x49\xd0\x21\xaf\xb2\xcc\x49\x0a\x0a\x6a\xe4\xc5\x28\x1a\xea\x36\xba\xbb\xd4\xc0\xd3\x6a\x1b\xe8\x9f\x0d\xc2\x62\x8d\x32\x59\x99\x88\xe5\x2a\x56\xbb\x30\x67\x58\x68\x07\xf3\xb7\xcd\x8e\x62\x8a\x6c\x67\xc6\xb5\xae\x44\x95\xa6\xd7\x53\xb7\x6a\xbb\x49\xfb\xf2\x77\xc0\x6f\x3b\x08\x9f\x16\x64\xcd\xa0\xa9\xb1\x33\xef\xd2\x7a\x4a\x2a\xbe\xf2\xd5\xf3\x7a\xd0\xbb\x71\xd3\x64\x71\x94\x8d\x66\xf1\x18\xf8\xe8\xc6\x37\xce\xeb\xfa\x36\xf2\xb1\xd9\x05\x5c\x69\x66\x7b\x2c\x64\x92\xc8\xa8\x4b\x39\x0f\xf9\x28\x61\x5b\x65\x93\x90\x9b\x4b\x64\xc0\xc8\xb9\x8c\x60\x71\xda\x5a\x66\x53\x52\xba\xed\x1a\x1b\x12\xb5\xe1\xbd\x79\x85\x5b\x66\x80\x9a\x90\x52\x09\xba\x05\xd5\xa0\x2b\x8f\x3b\x11\xf5\x95\x63\xf1\x04\xb6\x2d\x1f\x29\x84\x84\x54\x27\x10\x90\xd6\x29\x0a\x8c\xc8\xd1\xf2\xc3\x4e\x7b\x1c\x9f\xb5\x2b\xb2\xfd\x96\x27\x20\x7b\x8a\x3e\xa8\x04\xb3\x9b\x3d\x7d\xfd\x1e\xfe\xab\xf0\x7d\xde\xdf\xb4\xd7\x17\x6b\x57\x61\x74\x54\xd7\x9c\x66\x4f\xd4\xbd\x5a\xff\x14\x28\x69\xa4\xf6\xc2\x1b\x50\x81\xfb\x37\x22\xb5\x5b\x7d\xa1\x6d\xda\xdd\x45\x5c\xf1\xf5\xd3\xb0\xa8\xd2\x85\xf4\xfb\xad\xd8\xfd\x5d\x3c\x21\x26\x32\xe9\x3e\xe5\x80\xa2\x5e\x1a\x8f\x7f\x02\xc6\xa6\xce\x4b\x8c\x98\xac\x1c\x3a\x5b\x73\xef\x05\xb7\xf8\xe5\xc5\xb4\x20\xbd\xc2\x02\x14\xd9\x92\x2c\xf3\x8b\xaa\xf3\xbf\xc5\x42\xd3\xbe\xb0\xd5\x12\xcc\xb7\x9e\xff\x18\x6b\xda\xac\xab\x94\x89\xe1\xec\x7f\x1f\xba\x84\x1c\x77\xc7\xd5\x14\x96\x14\xd3\x8f\xfa\x4d\xf9\xa8\x54\xe4\x0e\x69\x50\xf2\x76\x41\x30\xb4\x8d\xe4\x39\xeb\xcd\x9e\xc6\xf6\x4f\xe6\x7c\x9e\x39\xae\x71\xe0\x5e\x6d\xe2\x28\xab\x6e\xc3\x2e\x31\x4d\xb7\x19\x95\xe6\x6f\x4e\xf8\x12\xdc\x8b\x1e\x08\x45\xac\x95\x25\xd1\x59\xde\xa2\xe9\x27\x2c\x1e\x09\x94\x4c\x12\xff\x6c\x18\xc7\xa9\xb3\x0b\x72\x7d\x13\x66\xb2\x63\xde\x9b\x6b\x41\xda\xaa\x78\x3c\xa3\xb9\x77\xe7\xbe\x34\x4f\x4c\x88\xd6\x31\xa5\x3a\x01\xe7\xd2\x45\xb3\x36\x38\xca\xbd\x8d\x95\xdf\x9b\x0b\x0e\xed\xaa\xb1\x13\xb4\x22\x7c\x4c\x35\x2e\x09\xb8\xe8\xf1\xf4\x01\x90\xc2\x3e\x27\x30\x2b\xcb\x91\x5d\xfd\xe8\x1e\x64\xd0\xc3\x9b\x30\xac\x53\xfc\xb1\x1b\xe5\x0a\xf8\xe8\x5d\x44\xde\xf1\x78\x79\xf1\x92\xe6\x18\x4e\x53\xf7\xba\x5c\x7f\x3a\x8f\xb4\x5a\x38\xb6\x3e\x46\x31\xd7\xe4\x14\x2d\xf2\x36\x41\xe4\x0c\xf8\xb1\x29\x78\xa7\xc6\xe1\xd4\xc2\x0b\xaf\xce\x19\xa8\x66\xda\x9a\x1e\xef\x14\xc8\x40\xb8\x86\xf5\x5a\x91\x3c\xe5\xb0\xa3\xd8\xf1\x41\x25\x37\x36\xe9\xf1\x6b\x3c\x74\xb1\x76\xa5\xeb\xcb\x78\xb7\xd3\xcb\x4f\xbe\x1e\x1e\xfd\xfe\x68\x6f\x9d\x14\x46\x53\x58\xd4\xc9\xa9\x70\xe4\x7a\x0b\x08\x04\xb1\x83\xb7\xe0\x24\x9d\x68\x2e\xc0\xce\xaf\xbf\x27\xce\x81\x55\x78\xcd\x9f\xec\xb2\xeb\x75\x7b\x52\x9b\x48\x6a\x22\x28\x3a\xdc\xcb\xf5\xeb\xea\xe9\xcf\xd5\x50\xea\x5d\x11\x6e\x65\xa6\x1f\x9a\xca\x63\x5c\x9a\xb8\x0f\x7c\xeb\x60\xd2\x78\xaa\xad\x64\x76\x2c\xb3\xb1\xea\x78\x8b\x62\x92\xd2\x90\xad\x21\xfa\x8a\x1c\xab\xaf\x4f\xa9\xa5\xa1\xbc\x7d\x57\x92\xf3\x43\x07\x1a\xbd\xb5\x66\x1c\x44\x3d\x66\xe0\xd6\x2d\x77\x75\xb1\x16\x5f\x84\xc5\x75\x6c\x80\xc2\x37\xfb\x31\xcf\xf6\x4a\x10\x0b\xc7\xb9\x1f\x77\x16\x88\xe8\x97\x76\xef\x96\xb7\x95\x5d\x60\xc9\xfa\x97\x1b\xa1\xaa\xf8\x24\x03\x48\x19\x5b\xdc\xc2\x8b\x7f\x1c\x73\xc4\x72\xb8\xfe\xde\xf7\xe7\x5e\xe8\x52\xc5\xea\xf5\xc4\x6a\x16\x10\x07\xbb\x16\x56\xa7\xe1\x9c\xc2\x0f\x3e\x0f\x19\xc7\xd9\xa4\x8a\x78\x57\xd3\xf0\xc1\xd6\xc8\xe2\x1c\x30\x69\x17\x33\x64\xb0\x21\xff\x3d\x14\x86\x96\xdb\xca\x39\x75\xfd\x79\xc9\xad\x84\x73\x62\xfb\x25\x58\x51\xe3\xc7\xcd\xba\x9c\x38\x21\x35\xcf\x7a\xa2\x28\x33\xb0\xbf\xa4\x40\x4b\xfe\x7f\x6a\xfe\x0d\x00\x00\xff\xff\x9e\xa4\x48\x07\x8b\x06\x00\x00")

func test_certsClientTestuser2KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Key,
		"test_certs/client.testuser2.key",
	)
}

func test_certsClientTestuser2Key() (*asset, error) {
	bytes, err := test_certsClientTestuser2KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x85, 0xe7, 0x5c, 0x0, 0x4, 0x11, 0xd7, 0x94, 0x6d, 0xe7, 0xd9, 0xa7, 0xf1, 0xac, 0x23, 0xaf, 0x50, 0x69, 0x21, 0xec, 0x59, 0xa3, 0x2, 0x89, 0x68, 0x8d, 0x9d, 0x1f, 0xd5, 0x92, 0x5d, 0x22}}
	return a, nil
}

var _test_certsNodeCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xc9\xce\xba\x5a\x16\xc5\xe7\x3c\x45\xcd\x4d\x45\x1a\x45\x19\xfc\x07\xa7\x03\x0e\x48\x73\xf0\x80\xe2\x0c\x50\x41\xa4\x47\x45\x78\xfa\xca\xf7\x55\x52\x95\xdc\x7b\xd7\x60\x0f\x7e\xd9\x59\xc9\xce\xca\x5e\xff\xfe\x11\x24\x06\x75\xff\x85\x48\xc0\xa9\x4e\x11\xe0\xe4\x97\x0a\x0e\xa5\xb8\xc0\x08\x81\x7a\xce\xc1\x44\x21\xc8\x29\xa3\xe7\xdb\xda\x54\x7a\xae\xed\xfb\x60\x77\xf6\x1e\x5b\x68\x30\xce\x81\x0b\xf3\x67\x5f\x3c\x1f\x86\x36\x89\x10\xb0\x51\x07\x18\x0c\x82\x13\xd0\x89\x80\x18\x47\x8c\xd9\x64\xaa\x70\x2a\xbb\x43\x56\x6b\x45\x2c\xe7\x5f\x9d\x03\x0e\x73\x37\x82\xc0\xe1\x98\xb8\x9f\x58\x7e\xcd\xa9\xac\x97\x09\x82\x98\x71\x70\xd3\x27\x71\x16\x1c\x0e\x36\x0e\x0f\xbf\xee\x12\x6e\x1d\x1c\x25\x3f\xd0\x2d\xc1\xc6\x29\xc1\xff\x98\x83\x9c\x2f\x29\x01\xfb\xaf\x59\xcb\x51\xf8\x7f\x33\x21\xc1\xc4\x75\xc0\x68\x00\x29\x24\xe0\xeb\x90\xb4\xd6\x9e\x17\x8e\x10\x38\xd2\x09\xb3\xd8\xb2\xdb\x0b\x2d\x3e\x99\x0b\x18\x81\x90\x01\x9c\xe7\xc4\x07\x3f\x27\xb3\x16\xe5\x39\x81\x02\x70\x64\xd7\x60\x9a\x7e\x47\x95\x27\x36\x97\xf8\xaa\xd5\xc4\x50\x0a\x7c\x39\xe8\x1b\x3e\x5c\x28\x3c\xa6\x83\x45\x14\xb1\x30\xfa\xe8\x10\xd7\xd2\xae\x08\x5b\x69\x70\xe9\xe1\x6e\x2c\x32\xf5\x34\xe1\x53\x54\xf5\x45\x51\xe6\x5a\xb9\x8f\x86\x1a\xaf\x8c\x87\x72\x5e\x2f\x66\xd9\xa9\xb3\x7a\x3d\x78\x49\x3d\xb6\x27\x7f\x68\xbc\x35\x80\x8b\x0d\xdf\xaf\x5c\xba\x6f\xcc\x45\xc4\x3a\xdb\xac\x70\xb5\x33\x04\x73\x97\x76\xf7\x87\x1c\xb6\xb8\x4e\xdf\x1a\x3b\xe8\xf8\x35\x8e\xee\x5b\xb1\xb9\xf9\x6e\xe5\x4f\x93\xae\xe8\x36\x9f\xf2\xce\x37\xf2\x10\xe4\x79\xed\x21\xbb\x1a\x4a\xf3\x09\x6f\x0f\x2b\x19\x4b\x51\xf0\xbf\xdf\xd7\xd8\x29\x9f\x96\xf8\xdc\x29\x96\xe9\x52\x8d\x43\x18\xf9\x9e\x0d\xcc\x72\xe1\x41\x49\x02\x1c\x1c\x57\x1b\x6d\x94\xef\xfb\xf8\x23\x9a\x5b\x45\x32\x8b\x71\x05\xab\xb3\x7b\x4f\x2c\xcb\x14\xbc\xed\x4a\xf3\xe7\xad\x28\xa7\xd9\x21\xcb\x82\xed\x63\x99\x6d\x8f\x23\x50\xef\xca\xc6\xef\x43\xf2\xfe\xaa\x37\xff\x06\x71\xde\x49\x3b\x80\xa5\x61\x3a\x5f\xb2\xef\xf1\xd3\x1f\x1e\x66\x87\xb6\x2f\x26\x5c\xc7\xec\xde\x67\x38\xd8\xf7\xbb\xf9\x2a\x7f\x58\xbc\x2e\xd5\x0a\x39\x08\x4c\x04\x80\xc4\x83\xfd\x82\x60\x8f\x81\xf7\x13\xa1\xc9\xf6\x10\xdc\xf7\x04\x02\x07\xc1\x04\x4c\x26\x8b\xb1\x10\x05\x62\x05\x61\x3c\xe9\x20\xa6\xf6\x14\x43\xc8\x42\x13\x4c\xc4\x40\x68\x34\x00\x0b\x75\x38\x39\xc8\x81\xfb\x9f\x98\xaf\x74\x62\xb1\x03\x13\xa0\xeb\xea\x9e\x47\x47\xf6\x64\xf6\x5a\x78\x6b\x07\xd3\xc5\x9d\xa9\xf7\xb5\x23\xef\xe7\xbb\xa3\xc7\xbf\xcb\x84\x05\xbe\x43\x64\x84\x4e\xdf\x4f\x2c\xeb\x63\x62\x68\xcb\x95\x52\xd3\x7e\x6c\xc7\x54\x76\x8b\x94\x52\xeb\x6a\x44\x6f\x21\x3e\x6d\xc5\x03\x27\x53\x9e\x57\xe2\xe5\xb4\x2d\xd2\x86\xbd\x1c\x6e\x20\x74\x0e\xaa\xb4\xd6\xdf\x57\x24\xce\x0e\xcd\xc8\x7d\x02\x00\xc4\x19\x03\x7f\x91\xf0\x3b\xff\xe9\x51\x80\x87\x00\x23\x80\x35\xb7\xa9\xb2\xe6\xa9\xb9\x35\x1a\xbd\x6b\xec\x9c\x1c\x87\x82\xfa\xfd\xbc\x41\xaf\x91\x44\x50\x50\xa8\xe4\xe8\x50\xde\x9d\xec\xf9\xec\xee\x02\x09\x37\xe1\x51\x41\x96\xb8\xba\x7c\x8d\xa1\xb7\x53\xd4\xba\xad\x1a\x9d\x10\xd1\x76\x47\x57\x83\xaa\xdb\x64\x07\x3f\xb9\x8e\x6a\xd2\x55\x51\x54\x54\x02\x81\xd7\x93\x8f\x02\x7b\xf3\xb2\xd8\x4b\x0e\x54\x2f\xf0\xd2\xcc\xb0\xba\x42\x0b\x76\x7b\x14\x17\xea\xb2\x0d\xc9\xfc\xf2\xf9\x5e\x52\xb2\x6c\x09\x42\x54\x27\x96\x96\xec\x2e\xaf\xbc\x3b\xeb\xf7\x45\xf8\xce\xec\xd4\xcd\xb3\xfa\x30\xfd\x37\xe2\x93\xa7\xe0\xd3\x95\x9e\x60\xd7\x39\xb7\xf5\xbc\x07\xa9\x98\xdd\x8e\xf4\xd2\x9e\xd4\xdb\x55\xc4\xb1\xf8\xb4\xc2\xea\x71\xdc\x8c\x37\x83\x0d\x33\x33\xb1\x23\xb8\xf3\xdc\x7e\xca\xe7\xb3\x34\x4f\xd6\x5a\xba\xa5\x97\x95\xf4\xfe\x4c\x1c\x5b\xfc\x59\xaa\xa8\x8c\x4a\x3a\xc2\x7e\x88\xf6\x63\x33\xeb\xd6\x1c\x1c\xbd\xa8\x74\x57\xdf\x8d\x18\xd0\xc5\xd0\xdb\x0c\x08\x9d\x04\x0e\x9b\xe7\x50\xfa\x79\xdf\xe4\xc9\x2d\x2d\x1e\x6f\x79\x7a\x99\x4b\xd3\xc6\xdb\x74\x25\xa1\x36\xe5\x8a\x7e\x6e\xd6\xca\xb0\x9e\x62\x60\x3f\x5e\x62\xae\xad\xc1\x9f\x3f\xc2\x6f\xa1\x11\x17\xff\xbd\xe4\xfe\x13\x00\x00\xff\xff\x34\xe6\xe2\xae\x01\x05\x00\x00")

func test_certsNodeCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeCrt,
		"test_certs/node.crt",
	)
}

func test_certsNodeCrt() (*asset, error) {
	bytes, err := test_certsNodeCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.crt", size: 1281, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0xf4, 0x8c, 0x36, 0xf0, 0x8c, 0xc8, 0xea, 0xdd, 0x62, 0x8a, 0xf0, 0xb4, 0x8e, 0xbb, 0x8b, 0xb5, 0xab, 0x42, 0x17, 0x1d, 0x81, 0x7b, 0x71, 0x23, 0xf6, 0xd, 0xd0, 0xa8, 0xe0, 0x7a, 0xf5}}
	return a, nil
}

var _test_certsNodeKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xa7\x12\xac\x5a\x02\x85\x61\xcf\x53\x1c\x4f\x4d\x91\x9a\x24\xae\x20\xe7\x9c\x71\x1b\x9a\x4c\x13\x1a\x68\xc2\xd3\x4f\xcd\x19\x7b\x97\x5d\xe6\x77\xdf\x7f\xfe\x37\x5e\x52\x34\xfb\x8f\x1f\x70\x7f\x5c\x5f\x8b\xb9\x50\xfa\x63\x48\xd9\xdf\x07\xb2\x34\x4d\x5a\x38\x8d\xe7\x38\x43\xe0\x3c\x89\x7b\x32\x34\x17\xd1\x98\x31\x22\x3a\x78\x8f\x2d\x81\x67\x5e\x51\x49\xf6\xb0\xa5\xad\xb3\x0f\x8d\xac\x1f\xdb\x10\xd6\x81\x04\x96\x68\xef\x8a\xf4\x80\xe4\xa0\x4f\x36\xb4\xd9\x99\xc2\xcd\x1a\x1a\x87\x95\x24\x9f\xea\xda\x28\xde\xf0\x59\x2c\xfd\x0b\x98\xef\x1a\xb1\x2a\x67\xfa\x9a\x0b\xba\x91\x2b\xb8\xdb\x0c\x3e\x4a\x9a\xe1\x54\x6b\x56\x28\x5c\x84\x62\xa4\xa9\x5d\xcf\x8a\xc5\xfe\xe5\xa4\x5b\x56\xef\xc7\x08\x9b\x79\xd0\x38\xf9\x41\x63\xdc\x16\x39\xf8\x7d\xe2\x74\xb9\x58\x15\xd5\x03\xf8\xfd\x7b\xf5\x1f\x51\x10\x06\x06\xf0\x9e\x20\x08\xd9\x0b\xd2\xd6\xe4\xb0\x2a\x4f\xa6\xb4\x71\xbd\x5d\x0f\x51\x15\xfc\x9e\x2a\xb8\xf1\x58\xeb\x56\x5d\xfe\x93\xdc\xbb\x1f\x31\xaf\x99\xab\x5c\xdb\x56\x2c\x5f\xb2\x65\x93\xee\xf1\x27\x47\xae\x0e\xf1\xea\x09\xaa\xa3\x4a\x79\x5e\x4a\x5c\x62\xec\x3c\x0c\x25\x3d\xd1\x28\x62\x4e\x61\xbe\x9f\xfb\x75\xa9\x1f\xd3\xd5\x66\xd2\xd2\x84\xe2\x70\x4a\x78\xf1\x02\x5a\x5d\x5e\xec\x4b\x72\x84\x29\xdd\x38\x37\xf9\xf1\xd0\x7b\x7c\x64\x03\x9e\x0f\xad\x1a\xcc\x0f\xc6\xe3\xd7\x05\x2f\xa7\xad\xde\xdf\x9f\x4e\x00\x96\xef\x61\x77\x8d\xb4\x53\x13\x39\x8f\xe3\xb9\x59\xe3\x39\x99\x3e\xcb\xad\x9b\x99\x24\x5b\x69\x98\x8a\xa1\xa6\x4d\xd5\xda\x11\xf2\x48\x30\x9b\x50\xfb\x6a\x8f\xd7\x76\x17\xfa\xbb\x83\x81\x9e\x7d\x31\x63\x10\x92\x5f\xb3\x89\xe7\x3c\xa5\xd5\xf9\x4b\xeb\x02\x42\x7e\x28\x0f\xc5\xfc\x27\xf9\xac\x03\x98\xa1\x49\x35\x4b\xfb\x0a\x62\x9a\xcd\x75\xc6\x18\x4a\x05\x50\x7a\xc3\xd8\xc1\xe2\x82\xcc\x29\x1b\x98\x1c\x65\x2c\x39\xdb\xd8\x68\x49\x84\xbe\x4b\x5a\xc5\xe8\xaa\x7f\x97\xe2\x6e\x27\x1f\x72\xf5\x43\x08\x05\xe4\xeb\xc1\x58\xcb\xe7\x6e\x4a\xf8\xc4\x0a\x18\x7b\x94\xc1\x28\x73\x8a\x7a\x26\x72\x6c\x22\x6a\x22\x38\x94\x28\xa0\x16\xfd\x10\x61\x52\x07\x47\x8e\xdc\x88\x08\xf6\xe5\x9e\xee\x57\x01\x1c\x52\xdf\x91\x9e\xdd\x2d\x8c\x37\x25\x86\xac\x43\xd8\x5c\x86\x82\x3f\xe1\x45\xa0\x32\xb3\x37\xf2\xcb\x76\x46\x36\x71\x88\xdc\xf0\x3e\x2b\xe5\x0a\x33\x49\x33\xc3\xba\x36\x78\x40\xf9\x5e\x34\xbf\x43\x08\x8e\xd7\x66\x13\x14\x81\x97\x72\x65\x9f\xba\x5a\x88\x32\x51\x1f\xbb\x8d\x63\xc0\x93\xe7\x83\xb8\x8a\xfb\xe4\xc4\xac\x80\xd9\x15\x60\x8d\x9f\x40\xa5\x04\x6e\x38\x3e\x48\xd2\xce\x30\x5e\xe2\x02\xb9\xba\x69\xf6\x84\x24\x34\x99\xc4\x91\xb3\x28\xf5\xe7\x6e\x1e\x35\x37\x1a\x8e\x22\x78\x39\x0d\x5f\x15\xdc\xdd\xfc\xfe\x59\x63\x22\xfc\x14\xd5\xfa\x54\x5e\xd5\x23\x87\xda\xfc\xf8\x5b\x8d\xd8\x0d\x72\x94\x31\x6b\xd2\xf9\x47\xa9\xdf\x19\x70\x5b\x48\x18\xc7\x02\x7a\xdc\xf1\x6b\x72\x5d\xc3\xb5\x5e\x9c\xeb\x6d\xbc\x70\x1e\xb1\xf7\xad\xac\x8e\x3d\x3f\x98\x2b\x62\xce\xef\xbe\x03\xea\x75\x44\x3d\xa4\x0a\xf0\x17\x18\xb5\x54\xf4\x37\x82\x6a\xb3\xdd\xfa\xec\x1c\xfa\x27\x7e\xa5\xa7\x47\xd0\xbb\x92\x93\xaa\x47\x48\x2f\xfb\xf1\x6e\xbc\x02\x7c\x7a\xc6\x15\x8d\x8f\xe8\xff\x8b\xa5\x49\x80\x56\x14\xab\xc7\xbb\x78\x24\x2c\xd4\x9a\x66\xbc\xf3\x4f\xec\x95\x56\xc3\x61\x83\xa7\xdb\xb3\x77\xc2\x4e\x21\xe4\x6f\xbd\x1d\xcb\xe2\x43\xd2\x77\x6d\x95\x60\x59\xe4\x5e\x8d\xa9\x40\xf3\x53\xa7\x83\x8a\xa8\x16\x7d\x47\x77\xf3\x63\xe0\x97\xca\x35\x2e\xe5\x90\x68\xac\x60\xa7\x0b\x7b\x1e\x74\xca\x41\x6d\xb7\xfc\x0c\xbc\x4d\x24\x55\x5a\xe4\x04\x52\x4d\x9e\xbb\xc3\xa2\xe2\xb9\x50\x8a\xcd\x3a\xc8\xea\x94\xb2\xed\x8b\xf3\x1e\x2b\xcd\x83\x2b\xbb\x1d\x7d\x95\xed\x89\x8c\xc2\x58\xac\xf7\xfc\xf6\x69\x09\xe0\xa9\xcc\xdf\xe4\x03\xe7\x1e\xca\xe2\x01\x4b\x87\x02\x2a\xc3\xa4\x3b\x86\x25\x54\xda\x51\xbf\x91\xf8\xfa\x65\xe2\x45\xb4\xb0\x21\x71\x3a\x1c\x26\xa8\x40\xbb\x4e\x8d\x65\x85\xa9\xce\x1b\xbb\x48\x0f\x3e\x56\x39\x3b\xf9\x51\x55\xc8\xc4\x3f\x98\xe1\x98\x78\x75\x79\xfc\x87\xd7\x10\xf9\x00\x1d\xac\xe8\x87\xf0\xa4\xc4\x85\x47\x0e\x03\xfb\x7b\x3e\xce\x54\xf3\x9d\x1a\x4c\xc2\xe9\x39\xcb\x93\x81\x9e\x98\x47\x39\x67\x64\x89\x74\x46\x2c\xda\x62\xfd\xad\xb3\x24\x49\xfb\x69\x04\x11\x5f\x4a\x8d\x53\xd6\x67\xbe\x28\x4f\x78\x0c\xac\x5f\xab\x7c\xd1\x91\xd0\x64\x1c\x6d\xda\x8e\x1c\x20\xe8\x14\x87\x71\xac\xa5\x83\xa6\x0a\xa6\x9a\x09\xae\x8c\xcb\x1a\xe2\x48\x47\x21\xb5\x92\x0b\x6d\xb0\x9c\x39\xc4\xad\x59\x8b\xe9\xe9\x57\xb7\x31\x9f\xd7\x41\x32\xfe\xf0\x7e\xa5\x66\xf2\x9b\xc3\xa1\x30\x3c\x57\xfb\x78\x2d\x81\xb7\xc4\x37\x97\x1e\x6e\x7e\x97\xb2\x85\x61\xa4\x90\xd7\x07\x93\x41\x0d\x3d\xe1\xe8\x65\x26\xa9\x46\x79\xe6\x57\xf5\xdd\x55\x9e\x95\x03\x41\xe5\xfc\xa7\xdb\xdd\xed\x0a\x2d\x3b\x1c\xa7\x94\x6e\xbd\x38\x04\x61\xbc\x06\x3a\x70\xce\x4a\x1e\xce\x92\x00\x37\xe2\xc2\x50\x5c\x82\x25\xf0\x0c\xbe\xf1\x04\x10\xf3\x11\x39\x25\xa8\x14\xf4\x75\xf9\x63\xbf\xdc\xe5\x7e\xed\xc7\xba\x3b\x81\xe6\xf5\x58\x9f\x6d\xa2\xd6\xa7\xd2\xe2\xab\xc0\xe2\xf7\x9f\x86\x88\x60\x2e\x2f\xe8\x2d\x6c\xe2\xec\xcc\x95\x53\x5b\xf0\xd8\x07\xcb\x57\x47\xfc\xf0\xf5\xcc\x13\x8c\xa7\xe0\xc7\x59\x73\x16\xea\xcb\xaf\x3a\xf2\x6d\x38\xd5\x10\x04\xbc\x6e\xc2\xb3\xcb\xdf\xa7\x7d\xb9\x25\xab\x6f\x90\x25\x72\x3c\x25\x1a\x8e\xb1\x92\x36\x36\x30\x17\x3b\x7c\xd6\xee\x52\x66\x95\x95\x23\x43\x75\xd4\xfa\xa9\xf3\x6e\x29\x88\x74\x99\xd9\xf1\x8b\x58\xed\xf4\x0a\x4b\xee\x9f\x7f\xa0\xbf\xac\x48\xb6\xf8\xef\xdc\xfc\x37\x00\x00\xff\xff\xad\x76\x3f\x32\x8f\x06\x00\x00")

func test_certsNodeKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeKey,
		"test_certs/node.key",
	)
}

func test_certsNodeKey() (*asset, error) {
	bytes, err := test_certsNodeKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0x85, 0xa2, 0xc7, 0xfe, 0x6b, 0x43, 0x1b, 0x69, 0x4b, 0xf7, 0x4c, 0xc9, 0xbc, 0x6f, 0x80, 0x18, 0x70, 0xc2, 0x62, 0x28, 0x9c, 0x5f, 0x5f, 0x7c, 0xa2, 0x56, 0x50, 0xf0, 0xce, 0x38, 0xe9}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"test_certs/ca-client-tenant.crt": test_certsCaClientTenantCrt,

	"test_certs/ca-client-tenant.key": test_certsCaClientTenantKey,

	"test_certs/ca.crt": test_certsCaCrt,

	"test_certs/ca.key": test_certsCaKey,

	"test_certs/client-tenant.10.crt": test_certsClientTenant10Crt,

	"test_certs/client-tenant.10.key": test_certsClientTenant10Key,

	"test_certs/client-tenant.11.crt": test_certsClientTenant11Crt,

	"test_certs/client-tenant.11.key": test_certsClientTenant11Key,

	"test_certs/client-tenant.20.crt": test_certsClientTenant20Crt,

	"test_certs/client-tenant.20.key": test_certsClientTenant20Key,

	"test_certs/client.root.crt": test_certsClientRootCrt,

	"test_certs/client.root.key": test_certsClientRootKey,

	"test_certs/client.testuser.crt": test_certsClientTestuserCrt,

	"test_certs/client.testuser.key": test_certsClientTestuserKey,

	"test_certs/client.testuser2.crt": test_certsClientTestuser2Crt,

	"test_certs/client.testuser2.key": test_certsClientTestuser2Key,

	"test_certs/node.crt": test_certsNodeCrt,

	"test_certs/node.key": test_certsNodeKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"test_certs": {nil, map[string]*bintree{
		"ca-client-tenant.crt": {test_certsCaClientTenantCrt, map[string]*bintree{}},
		"ca-client-tenant.key": {test_certsCaClientTenantKey, map[string]*bintree{}},
		"ca.crt":               {test_certsCaCrt, map[string]*bintree{}},
		"ca.key":               {test_certsCaKey, map[string]*bintree{}},
		"client-tenant.10.crt": {test_certsClientTenant10Crt, map[string]*bintree{}},
		"client-tenant.10.key": {test_certsClientTenant10Key, map[string]*bintree{}},
		"client-tenant.11.crt": {test_certsClientTenant11Crt, map[string]*bintree{}},
		"client-tenant.11.key": {test_certsClientTenant11Key, map[string]*bintree{}},
		"client-tenant.20.crt": {test_certsClientTenant20Crt, map[string]*bintree{}},
		"client-tenant.20.key": {test_certsClientTenant20Key, map[string]*bintree{}},
		"client.root.crt":      {test_certsClientRootCrt, map[string]*bintree{}},
		"client.root.key":      {test_certsClientRootKey, map[string]*bintree{}},
		"client.testuser.crt":  {test_certsClientTestuserCrt, map[string]*bintree{}},
		"client.testuser.key":  {test_certsClientTestuserKey, map[string]*bintree{}},
		"client.testuser2.crt": {test_certsClientTestuser2Crt, map[string]*bintree{}},
		"client.testuser2.key": {test_certsClientTestuser2Key, map[string]*bintree{}},
		"node.crt":             {test_certsNodeCrt, map[string]*bintree{}},
		"node.key":             {test_certsNodeKey, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
