# Testcases that are ok for TestAssignmentCastsMatchPostgres to skip.
literal,type,note,issue
'',BIT,"postgres has stricter assignment casts from string to bit(n)","https://github.com/cockroachdb/cockroach/issues/79261"
'',BIT(1),"postgres has stricter assignment casts from string to bit(n)","https://github.com/cockroachdb/cockroach/issues/79261"
'',BIT(8),"postgres has stricter assignment casts from string to bit(n)","https://github.com/cockroachdb/cockroach/issues/79261"
'0',BIT(8),"postgres has stricter assignment casts from string to bit(n)","https://github.com/cockroachdb/cockroach/issues/79261"
'1',BIT(8),"postgres has stricter assignment casts from string to bit(n)","https://github.com/cockroachdb/cockroach/issues/79261"
+9223372036854775807,INTEGER,"postgres integer is only 4 bytes","https://github.com/cockroachdb/cockroach/issues/26925"
-9223372036854775807,INTEGER,"postgres integer is only 4 bytes","https://github.com/cockroachdb/cockroach/issues/26925"
INT8 '+9223372036854775807',INTEGER,"postgres integer is only 4 bytes","https://github.com/cockroachdb/cockroach/issues/26925"
INT8 '-9223372036854775807',INTEGER,"postgres integer is only 4 bytes","https://github.com/cockroachdb/cockroach/issues/26925"
"+0","""char""","postgres integer is only 4 bytes which cannot be assignment cast to qchar","https://github.com/cockroachdb/cockroach/issues/26925"
"+9223372036854775807","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"-0","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"-1","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"-9223372036854775807","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"0","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"1","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"BIGINT '0'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"BIGINT '1'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"INT2 '+32767'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"INT2 '-32768'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"INT2 '0'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"INT2 '1'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"INT8 '+9223372036854775807'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"INT8 '-9223372036854775807'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"INT8 '0'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"INT8 '1'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"INTEGER '0'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"INTEGER '1'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"SMALLINT '0'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
"SMALLINT '1'","""char""","casts from integers to qchars do not match postgres","https://github.com/cockroachdb/cockroach/issues/102485"
