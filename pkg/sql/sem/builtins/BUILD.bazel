load("//build/bazelutil/unused_checker:unused.bzl", "get_x_data")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("//pkg/testutils/buildutil:buildutil.bzl", "disallowed_imports_test")

go_library(
    name = "builtins",
    srcs = [
        "aggregate_builtins.go",
        "all_builtins.go",
        "builtins.go",
        "generator_builtins.go",
        "generator_probe_ranges.go",
        "geo_builtins.go",
        "math_builtins.go",
        "notice.go",
        "overlaps_builtins.go",
        "parse_ident_builtin.go",
        "pg_builtins.go",
        "pgcrypto_builtins.go",
        "replication_builtins.go",
        "show_create_all_schemas_builtin.go",
        "show_create_all_tables_builtin.go",
        "show_create_all_types_builtin.go",
        "trigram_builtins.go",
        "window_builtins.go",
        "window_frame_builtins.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/sem/builtins",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/base",
        "//pkg/build",
        "//pkg/clusterversion",
        "//pkg/config/zonepb",
        "//pkg/geo",
        "//pkg/geo/geogfn",
        "//pkg/geo/geoindex",
        "//pkg/geo/geomfn",
        "//pkg/geo/geopb",
        "//pkg/geo/geoprojbase",
        "//pkg/geo/geos",
        "//pkg/geo/geotransform",
        "//pkg/geo/twkb",
        "//pkg/jobs/jobspb",
        "//pkg/keys",
        "//pkg/kv",
        "//pkg/kv/kvclient",
        "//pkg/kv/kvserver/kvserverbase",
        "//pkg/roachpb",
        "//pkg/security/password",
        "//pkg/security/username",
        "//pkg/server/telemetry",
        "//pkg/settings",
        "//pkg/settings/cluster",
        "//pkg/sql/catalog",
        "//pkg/sql/catalog/catalogkeys",
        "//pkg/sql/catalog/descpb",
        "//pkg/sql/colexecerror",
        "//pkg/sql/lex",
        "//pkg/sql/lexbase",
        "//pkg/sql/memsize",
        "//pkg/sql/oidext",
        "//pkg/sql/parser",
        "//pkg/sql/pgwire/pgcode",
        "//pkg/sql/pgwire/pgerror",
        "//pkg/sql/pgwire/pgnotice",
        "//pkg/sql/privilege",
        "//pkg/sql/protoreflect",
        "//pkg/sql/roleoption",
        "//pkg/sql/rowenc",
        "//pkg/sql/rowenc/keyside",
        "//pkg/sql/rowenc/valueside",
        "//pkg/sql/sem/asof",
        "//pkg/sql/sem/builtins/builtinconstants",
        "//pkg/sql/sem/builtins/builtinsregistry",
        "//pkg/sql/sem/builtins/pgformat",
        "//pkg/sql/sem/catconstants",
        "//pkg/sql/sem/catid",
        "//pkg/sql/sem/eval",
        "//pkg/sql/sem/tree",
        "//pkg/sql/sem/volatility",
        "//pkg/sql/sessiondata",
        "//pkg/sql/sessiondatapb",
        "//pkg/sql/sqlliveness",
        "//pkg/sql/sqlstats/persistedsqlstats/sqlstatsutil",
        "//pkg/sql/sqltelemetry",
        "//pkg/sql/storageparam",
        "//pkg/sql/storageparam/indexstorageparam",
        "//pkg/sql/types",
        "//pkg/streaming",
        "//pkg/util",
        "//pkg/util/arith",
        "//pkg/util/bitarray",
        "//pkg/util/contextutil",
        "//pkg/util/duration",
        "//pkg/util/encoding",
        "//pkg/util/errorutil",
        "//pkg/util/errorutil/unimplemented",
        "//pkg/util/fuzzystrmatch",
        "//pkg/util/hlc",
        "//pkg/util/humanizeutil",
        "//pkg/util/ipaddr",
        "//pkg/util/json",
        "//pkg/util/log",
        "//pkg/util/mon",
        "//pkg/util/protoutil",
        "//pkg/util/ring",
        "//pkg/util/syncutil",
        "//pkg/util/timeofday",
        "//pkg/util/timetz",
        "//pkg/util/timeutil",
        "//pkg/util/timeutil/pgdate",
        "//pkg/util/tochar",
        "//pkg/util/tracing",
        "//pkg/util/tracing/tracingpb",
        "//pkg/util/trigram",
        "//pkg/util/ulid",
        "//pkg/util/unaccent",
        "//pkg/util/uuid",
        "@com_github_cockroachdb_apd_v3//:apd",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_golang_geo//s1",
        "@com_github_knz_strtime//:strtime",
        "@com_github_lib_pq//oid",
        "@com_github_twpayne_go_geom//:go-geom",
        "@com_github_twpayne_go_geom//encoding/ewkb",
        "@org_golang_x_crypto//bcrypt",
        "@org_golang_x_text//cases",
        "@org_golang_x_text//language",
    ],
)

go_test(
    name = "builtins_test",
    size = "medium",
    srcs = [
        "aggregate_builtins_test.go",
        "all_builtins_test.go",
        "builtins_test.go",
        "datums_to_bytes_builtin_test.go",
        "generator_builtins_test.go",
        "geo_builtins_test.go",
        "help_test.go",
        "helpers_test.go",
        "main_test.go",
        "math_builtins_test.go",
        "parse_ident_builtin_test.go",
        "show_create_all_tables_builtin_test.go",
        "window_frame_builtins_test.go",
    ],
    args = ["-test.timeout=295s"],
    data = glob(["testdata/**"]),
    embed = [":builtins"],
    deps = [
        "//pkg/base",
        "//pkg/keys",
        "//pkg/kv",
        "//pkg/security/securityassets",
        "//pkg/security/securitytest",
        "//pkg/server",
        "//pkg/settings/cluster",
        "//pkg/sql/catalog/desctestutils",
        "//pkg/sql/parser",
        "//pkg/sql/pgwire/pgerror",
        "//pkg/sql/randgen",
        "//pkg/sql/sem/builtins/builtinconstants",
        "//pkg/sql/sem/builtins/builtinsregistry",
        "//pkg/sql/sem/eval",
        "//pkg/sql/sem/tree",
        "//pkg/sql/sem/tree/treewindow",
        "//pkg/sql/sem/volatility",
        "//pkg/sql/types",
        "//pkg/testutils",
        "//pkg/testutils/serverutils",
        "//pkg/testutils/skip",
        "//pkg/testutils/sqlutils",
        "//pkg/testutils/testcluster",
        "//pkg/util",
        "//pkg/util/duration",
        "//pkg/util/leaktest",
        "//pkg/util/mon",
        "//pkg/util/randutil",
        "//pkg/util/timeutil",
        "@com_github_lib_pq//:pq",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
    ],
)

disallowed_imports_test(
    src = "builtins",
    disallowed_list = [
        "//pkg/sql/catalog/descs",
        "//pkg/sql/catalog/tabledesc",
        "//pkg/sql/catalog/schemadesc",
        "//pkg/sql/catalog/dbdesc",
        "//pkg/sql/catalog/typedesc",
    ],
)

get_x_data(name = "get_x_data")
