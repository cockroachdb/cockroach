# Load 500 512-dimension features and search them. Use small partition size to
# ensure a deeper tree.

new-index dims=512 min-partition-size=4 max-partition-size=16 quality-samples=8 beam-size=4 load-features=1000 hide-tree
----
Created index with 1000 vectors with 512 dimensions.
3 levels, 95 partitions, 11.91 vectors/partition.
CV stats:
  level 2 - mean: 0.1250, stdev: 0.0379
  level 3 - mean: 0.1325, stdev: 0.0252

# Search with small beam size.
search max-results=1 use-feature=5000 beam-size=1
----
vec302: 0.6601 (centroid=0.5473)
20 leaf vectors, 40 vectors, 3 full vectors, 4 partitions

# Search for additional results.
search max-results=6 use-feature=5000 beam-size=1
----
vec302: 0.6601 (centroid=0.5473)
vec95: 0.7008 (centroid=0.5893)
vec240: 0.7723 (centroid=0.6093)
vec525: 0.8184 (centroid=0.5317)
vec202: 0.8218 (centroid=0.5217)
vec586: 0.8472 (centroid=0.5446)
20 leaf vectors, 40 vectors, 15 full vectors, 4 partitions

# Use a larger beam size.
search max-results=6 use-feature=5000 beam-size=4
----
vec356: 0.5976 (centroid=0.4951)
vec302: 0.6601 (centroid=0.5473)
vec95: 0.7008 (centroid=0.5893)
vec117: 0.7576 (centroid=0.4857)
vec25: 0.761 (centroid=0.4699)
vec240: 0.7723 (centroid=0.6093)
69 leaf vectors, 121 vectors, 18 full vectors, 13 partitions

# Turn off re-ranking, which results in increased inaccuracy.
search max-results=6 use-feature=5000 beam-size=4 skip-rerank
----
vec356: 0.6136 ±0.033 (centroid=0.4951)
vec302: 0.6227 ±0.0358 (centroid=0.5473)
vec95: 0.6827 ±0.037 (centroid=0.5893)
vec240: 0.7161 ±0.0398 (centroid=0.6093)
vec11: 0.7594 ±0.036 (centroid=0.5305)
vec25: 0.7704 ±0.0313 (centroid=0.4699)
69 leaf vectors, 121 vectors, 0 full vectors, 13 partitions

# Return top 25 results with large beam size.
search max-results=25 use-feature=5000 beam-size=16
----
vec771: 0.5624 (centroid=0.5931)
vec356: 0.5976 (centroid=0.4951)
vec640: 0.6525 (centroid=0.5531)
vec302: 0.6601 (centroid=0.5473)
vec329: 0.6871 (centroid=0.66)
vec95: 0.7008 (centroid=0.5893)
vec249: 0.7268 (centroid=0.4582)
vec386: 0.7301 (centroid=0.6592)
vec309: 0.7311 (centroid=0.535)
vec633: 0.7513 (centroid=0.3684)
vec117: 0.7576 (centroid=0.4857)
vec25: 0.761 (centroid=0.4699)
vec776: 0.7633 (centroid=0.5439)
vec872: 0.7707 (centroid=0.5741)
vec859: 0.7708 (centroid=0.616)
vec240: 0.7723 (centroid=0.6093)
vec347: 0.7745 (centroid=0.6182)
vec11: 0.777 (centroid=0.5305)
vec340: 0.7858 (centroid=0.6581)
vec239: 0.7878 (centroid=0.486)
vec423: 0.7956 (centroid=0.5373)
vec848: 0.7958 (centroid=0.4722)
vec387: 0.8038 (centroid=0.4303)
vec637: 0.8039 (centroid=0.505)
vec410: 0.8062 (centroid=0.5241)
340 leaf vectors, 442 vectors, 85 full vectors, 41 partitions

# Search for an "easy" result, where adaptive search inspects less partitions.
recall topk=20 use-feature=8601 beam-size=4
----
60.00% recall@20
23.00 leaf vectors, 46.00 vectors, 23.00 full vectors, 4.00 partitions

# Search for a "hard" result, where adaptive search inspects more partitions.
recall topk=20 use-feature=2717 beam-size=4
----
55.00% recall@20
79.00 leaf vectors, 135.00 vectors, 36.00 full vectors, 13.00 partitions

# Test recall at different beam sizes.
recall topk=10 beam-size=2 samples=50
----
38.20% recall@10
32.90 leaf vectors, 57.84 vectors, 18.14 full vectors, 5.34 partitions

recall topk=10 beam-size=4 samples=50
----
61.20% recall@10
67.84 leaf vectors, 103.70 vectors, 23.12 full vectors, 9.42 partitions

recall topk=10 beam-size=8 samples=50
----
82.40% recall@10
148.26 leaf vectors, 207.98 vectors, 27.60 full vectors, 18.88 partitions

recall topk=10 beam-size=16 samples=50
----
94.60% recall@10
293.04 leaf vectors, 372.96 vectors, 30.48 full vectors, 34.08 partitions

recall topk=10 beam-size=32 samples=50
----
99.60% recall@10
580.84 leaf vectors, 682.84 vectors, 34.14 full vectors, 62.84 partitions
