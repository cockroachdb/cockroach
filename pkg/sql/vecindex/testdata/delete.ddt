# ----------
# Test deleting vectors from primary index, but not from secondary index.
# ----------
new-index min-partition-size=1 max-partition-size=3 beam-size=2
vec1: (1, 2)
vec2: (7, 4)
vec3: (4, 3)
vec4: (5, 5)
----
• 1 (3.1667, 3)
│
├───• 2 (5.3333, 4)
│   │
│   ├───• vec2 (7, 4)
│   ├───• vec3 (4, 3)
│   └───• vec4 (5, 5)
│   
└───• 3 (1, 2)
    │
    └───• vec1 (1, 2)

# Delete vector from primary index, but not from secondary index.
delete not-found
vec3
----
• 1 (3.1667, 3)
│
├───• 2 (5.3333, 4)
│   │
│   ├───• vec2 (7, 4)
│   ├───• vec3 (MISSING)
│   └───• vec4 (5, 5)
│   
└───• 3 (1, 2)
    │
    └───• vec1 (1, 2)

# Ensure deleted vector is not returned by search. This should enqueue a fixup
# that removes the vector from the index.
search max-results=1
(4, 3)
----
vec4: 5 (centroid=1.0541)
4 leaf vectors, 6 vectors, 2 full vectors, 3 partitions

# Again, with higher max results.
search max-results=2
(4, 3)
----
vec4: 5 (centroid=1.0541)
vec2: 10 (centroid=1.6667)
4 leaf vectors, 6 vectors, 4 full vectors, 3 partitions

# Vector should now be gone from the index.
# TODO(andyk): This will be true once fixups are added.
format-tree
----
• 1 (3.1667, 3)
│
├───• 2 (5.3333, 4)
│   │
│   ├───• vec2 (7, 4)
│   ├───• vec3 (MISSING)
│   └───• vec4 (5, 5)
│   
└───• 3 (1, 2)
    │
    └───• vec1 (1, 2)

# Delete all vectors from one branch of the tree.
delete not-found
vec1
----
• 1 (3.1667, 3)
│
├───• 2 (5.3333, 4)
│   │
│   ├───• vec2 (7, 4)
│   ├───• vec3 (MISSING)
│   └───• vec4 (5, 5)
│   
└───• 3 (1, 2)
    │
    └───• vec1 (MISSING)

# Search the empty branch.
search max-results=1 beam-size=1
(1, 2)
----
1 leaf vectors, 3 vectors, 1 full vectors, 2 partitions
