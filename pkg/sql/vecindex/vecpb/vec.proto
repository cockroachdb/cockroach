// Copyright 2025 The Cockroach Authors.
//
// Use of this software is governed by the CockroachDB Software License
// included in the /LICENSE file.

syntax = "proto3";
package cockroach.sql.vecindex.vecpb;
option go_package = "github.com/cockroachdb/cockroach/pkg/sql/vecindex/vecpb";

import "gogoproto/gogo.proto";

option (gogoproto.goproto_getters_all) = false;

// Config encapsulates the information needed to search and maintain a vector
// index. This includes the dimensions of the vectors and the random seed,
// neither of which should change after the index is created.
message Config {
  option (gogoproto.equal) = true;
  // Dims is the width of vectors in the index (i.e. number of dimensions).
  int32 dims = 1;
  // Seed initializes the pseudo-random generator used to randomly perturb
  // vectors, in order to mitigate the impact of skewed input data
  // distributions. This seed stays constant for the lifetime of the index.
  int64 seed = 2;
  // BuildBeamSize specifies the default breadth of searches used when inserting
  // into, deleting from, or updating the index. This is typically quite a bit
  // smaller than the beam sizes used during read-only search, since it's not
  // critical for vectors to be in exactly the nearest partition - close enough
  // is good enough.
  int32 build_beam_size = 3;
  // MinPartitionSize is the lowest number of vectors that a partition can have
  // without being merged away.
  int32 min_partition_size = 4;
  // MaxPartitionSize is the highest number of vectors that a partition can have
  // without being split.
  int32 max_partition_size = 5;
}
