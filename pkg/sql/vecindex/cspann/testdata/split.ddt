# ----------------------------------------------------------------------
# Test simple partition splits.
# ----------------------------------------------------------------------
new-index min-partition-size=1 max-partition-size=4 beam-size=2
----
• 1 (0, 0)

# Insert enough vectors in the store to trigger a split of the root.
insert
vec1: (1, 2)
vec2: (7, 4)
vec3: (4, 3)
vec4: (8, 11)
vec5: (14, 1)
----
• 1 (0, 0)
│
├───• 2 (7.5, 7.5)
│   │
│   ├───• vec4 (8, 11)
│   ├───• vec2 (7, 4)
│   └───• vec5 (14, 1)
│
└───• 3 (2.5, 2.5)
    │
    ├───• vec3 (4, 3)
    └───• vec1 (1, 2)

# Trigger another split, this time of a child.
insert
vec6: (8, 6)
vec7: (5, 8)
----
• 1 (0, 0)
│
├───• 5 (6.5, 9.5)
│   │
│   ├───• vec4 (8, 11)
│   └───• vec7 (5, 8)
│
├───• 3 (2.5, 2.5)
│   │
│   ├───• vec3 (4, 3)
│   └───• vec1 (1, 2)
│
└───• 4 (9.6667, 3.6667)
    │
    ├───• vec6 (8, 6)
    ├───• vec2 (7, 4)
    └───• vec5 (14, 1)

# Trigger another split that adds a level to the tree.
insert
vec8: (-2, -3)
vec9: (4, 1)
vec10: (3, 5)
vec11: (3, 2)
vec12: (4, 4)
vec14: (3, 6)
----
• 1 (0, 0)
│
├───• 8 (1.75, 0.75)
│   │
│   ├───• 11 (3.5, 4)
│   │   │
│   │   ├───• vec10 (3, 5)
│   │   ├───• vec3 (4, 3)
│   │   └───• vec12 (4, 4)
│   │
│   ├───• 7 (-0.5, -0.5)
│   │   │
│   │   └───• vec8 (-2, -3)
│   │
│   └───• 10 (3.5, 1.5)
│       │
│       ├───• vec1 (1, 2)
│       ├───• vec11 (3, 2)
│       └───• vec9 (4, 1)
│
└───• 9 (8.0833, 6.5833)
    │
    ├───• 4 (9.6667, 3.6667)
    │   │
    │   ├───• vec6 (8, 6)
    │   ├───• vec2 (7, 4)
    │   └───• vec5 (14, 1)
    │
    └───• 5 (6.5, 9.5)
        │
        ├───• vec4 (8, 11)
        ├───• vec7 (5, 8)
        └───• vec14 (3, 6)

# Search for closest vectors with beam-size=1.
search max-results=3 beam-size=1
(4, 7)
----
vec14: 2
vec7: 2
vec4: 32
3 leaf vectors, 7 vectors, 3 full vectors, 3 partitions

# Search for closest vectors with beam-size=3.
search max-results=3 beam-size=3
(4, 7)
----
vec14: 2
vec7: 2
vec10: 5
9 leaf vectors, 16 vectors, 6 full vectors, 6 partitions

# ----------------------------------------------------------------------
# Test reassigning vectors from partitions at same level during split.
# using the L2Squared distance metric.
# ----------------------------------------------------------------------
load-index min-partition-size=1 max-partition-size=4 beam-size=2
• 1 (0, 0)
│
├───• 2 (0, 0)
│   │
│   ├───• vec1 (4, 4)
│   └───• vec2 (-4, -4)
│
└───• 3 (8, 8)
    │
    ├───• vec3 (5, 5)
    ├───• vec4 (8, 8)
    └───• vec5 (11, 11)
----
Loaded 5 vectors.

# Add vectors to partition 2 until it splits and then pulls in vec3 from
# partition 3.
insert
vec6: (-5, -5)
vec7: (3, 5)
----
• 1 (0, 0)
│
├───• 5 (3.5, 4.5)
│   │
│   ├───• vec3 (5, 5)
│   ├───• vec1 (4, 4)
│   └───• vec7 (3, 5)
│
├───• 3 (8, 8)
│   │
│   ├───• vec5 (11, 11)
│   └───• vec4 (8, 8)
│
└───• 4 (-4.5, -4.5)
    │
    ├───• vec6 (-5, -5)
    └───• vec2 (-4, -4)

# ----------------------------------------------------------------------
# Test reassigning vectors from partitions at same level during split.
# using the InnerProduct distance metric.
# ----------------------------------------------------------------------
load-index min-partition-size=1 max-partition-size=4 beam-size=2 distance-metric=InnerProduct
• 1 (0, 0)
│
├───• 2 (-5, -5)
│   │
│   ├───• vec1 (-6, -6)
│   └───• vec2 (-4, -4)
│
└───• 3 (6, 6)
    │
    ├───• vec3 (-1, -1)
    ├───• vec4 (8, 8)
    └───• vec5 (11, 11)
----
Loaded 5 vectors.

# Add vectors to partition 2 until it splits and then pulls in vec3 from
# partition 3.
insert
vec6: (-5, 1)
vec7: (-3, 2)
----
• 1 (0, 0)
│
├───• 5 (-4, 1.5)
│   │
│   ├───• vec6 (-5, 1)
│   └───• vec7 (-3, 2)
│
├───• 3 (6, 6)
│   │
│   ├───• vec5 (11, 11)
│   └───• vec4 (8, 8)
│
└───• 4 (-5, -5)
    │
    ├───• vec3 (-1, -1)
    ├───• vec1 (-6, -6)
    └───• vec2 (-4, -4)

# ----------------------------------------------------------------------
# Test reassigning vectors from partitions at same level during split
# using the Cosine InnerProduct distance metric.
# ----------------------------------------------------------------------
load-index min-partition-size=1 max-partition-size=4 beam-size=2 distance-metric=Cosine
• 1 (0, 0)
│
├───• 2 (-0.7071, -0.7071)
│   │
│   ├───• vec1 (-6, -6)
│   └───• vec2 (-4, -4)
│
└───• 3 (0.7071, 0.7071)
    │
    ├───• vec3 (-1, -1)
    ├───• vec4 (8, 8)
    └───• vec5 (11, 11)
----
Loaded 5 vectors.

# Add vectors to partition 2 until it splits and then pulls in vec3 from
# partition 3.
insert
vec6: (-5, 1)
vec7: (-3, 2)
----
• 1 (0, 0)
│
├───• 5 (-0.9063, 0.3754)
│   │
│   ├───• vec6 (-5, 1)
│   └───• vec7 (-3, 2)
│
├───• 3 (0.7071, 0.7071)
│   │
│   ├───• vec5 (11, 11)
│   └───• vec4 (8, 8)
│
└───• 4 (-0.7071, -0.7071)
    │
    ├───• vec3 (-1, -1)
    ├───• vec1 (-6, -6)
    └───• vec2 (-4, -4)

# ----------------------------------------------------------------------
# Test reassigning vectors to sibling partitions during split.
# ----------------------------------------------------------------------
load-index min-partition-size=1 max-partition-size=5 beam-size=2
• 1 (0, 0)
│
├───• 2 (0, 0.6667)
│   │
│   ├───• vec3 (1, 1)
│   ├───• vec2 (-1, 1)
│   └───• vec1 (0, 0)
│
├───• 3 (-0.5, -2)
│   │
│   ├───• vec4 (0, -2)
│   └───• vec5 (-1, -2)
│
└───• 4 (1, -2)
    │
    └───• vec6 (1, -2)
----
Loaded 6 vectors.

# Add vectors to partition 2 until it splits, leaving vec1 further away from
# the new centroids than to the centroid of partition 2. Expect it to move to
# partition 3.
insert
vec7: (-4, 4)
vec8: (4, 5)
----
• 1 (0, 0)
│
├───• 6 (-1.6667, 1.6667)
│   │
│   ├───• vec2 (-1, 1)
│   └───• vec7 (-4, 4)
│
├───• 3 (-0.5, -2)
│   │
│   ├───• vec4 (0, -2)
│   ├───• vec5 (-1, -2)
│   └───• vec1 (0, 0)
│
├───• 4 (1, -2)
│   │
│   └───• vec6 (1, -2)
│
└───• 5 (2.5, 3)
    │
    ├───• vec3 (1, 1)
    └───• vec8 (4, 5)

# ----------------------------------------------------------------------
# Test splits in the presence of dangling vectors.
# ----------------------------------------------------------------------
new-index min-partition-size=1 max-partition-size=4 beam-size=2 discard-fixups
vec1: (0, -1)
vec2: (3, 9)
vec3: (-2, 8)
vec4: (-2, 8)
----
• 1 (0, 0)
│
├───• vec1 (0, -1)
├───• vec2 (3, 9)
├───• vec3 (-2, 8)
└───• vec4 (-2, 8)

# Trigger split of root with dangling vectors.
delete not-found
vec1
vec4
----
• 1 (0, 0)
│
├───• vec1 (MISSING)
├───• vec2 (3, 9)
├───• vec3 (-2, 8)
└───• vec4 (MISSING)

insert
vec5: (4, 3)
vec6: (1, 2)
vec7: (5, 0)
vec8: (2, 2)
----
• 1 (0, 0)
│
├───• 2 (0.5, 8.5)
│   │
│   ├───• vec3 (-2, 8)
│   └───• vec2 (3, 9)
│
├───• 5 (4.5, 1.5)
│   │
│   ├───• vec7 (5, 0)
│   └───• vec5 (4, 3)
│
└───• 4 (1.5, 2)
    │
    ├───• vec6 (1, 2)
    └───• vec8 (2, 2)

# Again, this time at a lower level, with more dangling vectors.
delete not-found
vec5
vec6
vec7
----
• 1 (0, 0)
│
├───• 2 (0.5, 8.5)
│   │
│   ├───• vec3 (-2, 8)
│   └───• vec2 (3, 9)
│
├───• 5 (4.5, 1.5)
│   │
│   ├───• vec7 (MISSING)
│   └───• vec5 (MISSING)
│
└───• 4 (1.5, 2)
    │
    ├───• vec6 (MISSING)
    └───• vec8 (2, 2)

insert
vec9: (6, 1)
vec10: (5, 3)
----
• 1 (0, 0)
│
├───• 8 (5.5, 2)
│   │
│   ├───• 6 (6, 1)
│   │   │
│   │   └───• vec9 (6, 1)
│   │
│   └───• 7 (5, 3)
│       │
│       └───• vec10 (5, 3)
│
└───• 9 (1, 5.25)
    │
    ├───• 4 (1.5, 2)
    │   │
    │   ├───• vec6 (MISSING)
    │   └───• vec8 (2, 2)
    │
    └───• 2 (0.5, 8.5)
        │
        ├───• vec3 (-2, 8)
        └───• vec2 (3, 9)

# ----------------------------------------------------------------------
# Test split of root partition with every vector dangling.
# ----------------------------------------------------------------------
new-index min-partition-size=1 max-partition-size=5 beam-size=2
vec1: (0, -1)
vec2: (3, 9)
vec3: (-2, 8)
vec4: (-2, 8)
----
• 1 (0, 0)
│
├───• vec1 (0, -1)
├───• vec2 (3, 9)
├───• vec3 (-2, 8)
└───• vec4 (-2, 8)

# Delete all vectors in the primary index, but leave them "dangling" in the
# secondary index.
delete not-found
vec1
vec2
vec3
vec4
----
• 1 (0, 0)
│
├───• vec1 (MISSING)
├───• vec2 (MISSING)
├───• vec3 (MISSING)
└───• vec4 (MISSING)

# Trigger a split.
insert
vec5: (4, 3)
----
• 1 (0, 0)
│
├───• 2 (4, 3)
│   │
│   └───• vec5 (4, 3)
│
└───• 3 (4, 3)

# ----------------------------------------------------------------------
# Split of partition that's too small or not a child of the parent is a no-op.
# ----------------------------------------------------------------------
load-index min-partition-size=1 max-partition-size=3 beam-size=2
• 1 (0, 0)
│
├───• 2 (0.5, 8.5)
│   │
│   ├───• vec3 (-2, 8)
│   └───• vec2 (3, 9)
│
├───• 3 (0, -1)
│   │
│   └───• vec1 (0, -1)
│
└───• 4 (3, 2.5)
    │
    ├───• vec5 (2, 2)
    └───• vec4 (4, 3)
----
Loaded 5 vectors.

# Partition #2 is not a child of partition #2, so no-op.
force-split partition-key=2 parent-partition-key=4
----
• 1 (0, 0)
│
├───• 2 (0.5, 8.5)
│   │
│   ├───• vec3 (-2, 8)
│   └───• vec2 (3, 9)
│
├───• 3 (0, -1)
│   │
│   └───• vec1 (0, -1)
│
└───• 4 (3, 2.5)
    │
    ├───• vec5 (2, 2)
    └───• vec4 (4, 3)

# Partition #2 is too small to split.
force-split partition-key=2 parent-partition-key=1
----
• 1 (0, 0)
│
├───• 2 (0.5, 8.5)
│   │
│   ├───• vec3 (-2, 8)
│   └───• vec2 (3, 9)
│
├───• 3 (0, -1)
│   │
│   └───• vec1 (0, -1)
│
└───• 4 (3, 2.5)
    │
    ├───• vec5 (2, 2)
    └───• vec4 (4, 3)

# Discard fixups to enable partition to grow larger than max-partition-size.
insert discard-fixups
vec6: (3, -2)
vec7: (-1, 0)
vec8: (-2, 2)
vec9: (1, 1)
vec10: (0, -3)
vec11: (-5, -5)
----
• 1 (0, 0)
│
├───• 2 (0.5, 8.5)
│   │
│   ├───• vec3 (-2, 8)
│   └───• vec2 (3, 9)
│
├───• 3 (0, -1)
│   │
│   ├───• vec1 (0, -1)
│   ├───• vec6 (3, -2)
│   ├───• vec7 (-1, 0)
│   ├───• vec8 (-2, 2)
│   ├───• vec9 (1, 1)
│   ├───• vec10 (0, -3)
│   └───• vec11 (-5, -5)
│
└───• 4 (3, 2.5)
    │
    ├───• vec5 (2, 2)
    └───• vec4 (4, 3)

# After split, partition #5 is still greater than max-partition-size.
force-split partition-key=3 parent-partition-key=1
----
• 1 (0, 0)
│
├───• 7 (1.75, 5.5)
│   │
│   ├───• 2 (0.5, 8.5)
│   │   │
│   │   ├───• vec3 (-2, 8)
│   │   └───• vec2 (3, 9)
│   │
│   └───• 4 (3, 2.5)
│       │
│       ├───• vec5 (2, 2)
│       └───• vec4 (4, 3)
│
└───• 8 (-0.3333, -1.0833)
    │
    ├───• 6 (1.3333, -0.6667)
    │   │
    │   ├───• vec9 (1, 1)
    │   ├───• vec6 (3, -2)
    │   └───• vec1 (0, -1)
    │
    └───• 5 (-2, -1.5)
        │
        ├───• vec11 (-5, -5)
        ├───• vec10 (0, -3)
        ├───• vec7 (-1, 0)
        └───• vec8 (-2, 2)

# ----------------------------------------------------------------------
# Split partitions with 0 vectors.
# ----------------------------------------------------------------------

load-index min-partition-size=1 max-partition-size=3 beam-size=2
• 1 (0, 0)
│
└───• 2 (4, 4)
    │
    ├───• 3 (2, 4)
    │   │
    │   ├───• vec1 (-2, 2)
    │   ├───• vec2 (3, 9)
    │   └───• vec3 (5, 1)
    │
    └───• 4 (6, 4)
        │
        └───• vec4 (6, 4)
----
Loaded 4 vectors.

# Delete vectors from primary index, but not from secondary index. Leave
# partition #3 with zero vectors.
delete not-found
vec1
vec2
vec3
----
• 1 (0, 0)
│
└───• 2 (4, 4)
    │
    ├───• 3 (2, 4)
    │   │
    │   ├───• vec1 (MISSING)
    │   ├───• vec2 (MISSING)
    │   └───• vec3 (MISSING)
    │
    └───• 4 (6, 4)
        │
        └───• vec4 (6, 4)

# Split partition with 0 vectors.
force-split partition-key=3 parent-partition-key=2
----
• 1 (0, 0)
│
├───• 8 (6, 4)
│   │
│   └───• 4 (6, 4)
│       │
│       └───• vec4 (6, 4)
│
└───• 7 (2, 4)
    │
    ├───• 6 (2, 4)
    └───• 5 (2, 4)

# ----------------------------------------------------------------------
# Split partitions with 1 vector.
# ----------------------------------------------------------------------

load-index min-partition-size=1 max-partition-size=3 beam-size=2
• 1 (0, 0)
│
└───• 2 (4, 4)
    │
    ├───• 3 (2, 4)
    │   │
    │   ├───• vec1 (-2, 2)
    │   ├───• vec2 (3, 9)
    │   └───• vec3 (5, 1)
    │
    └───• 4 (6, 4)
        │
        └───• vec4 (6, 4)
----
Loaded 4 vectors.

# Delete vectors from primary index, but not from secondary index. Leave
# partition #3 with one vector.
delete not-found
vec1
vec2
----
• 1 (0, 0)
│
└───• 2 (4, 4)
    │
    ├───• 3 (2, 4)
    │   │
    │   ├───• vec1 (MISSING)
    │   ├───• vec2 (MISSING)
    │   └───• vec3 (5, 1)
    │
    └───• 4 (6, 4)
        │
        └───• vec4 (6, 4)

# Split partition with 0 vectors.
force-split partition-key=3 parent-partition-key=2
----
• 1 (0, 0)
│
├───• 8 (6, 4)
│   │
│   └───• 4 (6, 4)
│       │
│       └───• vec4 (6, 4)
│
└───• 7 (5, 1)
    │
    ├───• 6 (5, 1)
    └───• 5 (5, 1)
        │
        └───• vec3 (5, 1)

# ----------------------------------------------------------------------
# reassignToSiblings fails because parent does not exist or does not
# contain the child.
# ----------------------------------------------------------------------

# Load index where the (18, 0) vector is about to be reassigned to partition #2.
load-index min-partition-size=1 max-partition-size=5 beam-size=2
• 1 (0, 0)
│
├───• 2 (14, 1)
│   │
│   └───• vec1 (14, 1)
│
├───• 3 (8, 5) [DrainingForSplit:4,5]
│   │
│   ├───• vec2 (18, 0)
│   ├───• vec3 (3, 8)
│   ├───• vec4 (6, 2)
│   └───• vec5 (5, 10)
│
├───• 4 (4, 9) [Updating:3]
└───• 5 (12, 1) [Updating:3]
----
Loaded 5 vectors.

# Attempt to split partition #3, but where parent patition does not exist.
# The split should be aborted.
force-split partition-key=3 parent-partition-key=99
----
• 1 (0, 0)
│
├───• 2 (14, 1)
│   │
│   └───• vec1 (14, 1)
│
├───• 3 (8, 5) [DrainingForSplit:4,5]
│   │
│   ├───• vec2 (18, 0)
│   ├───• vec3 (3, 8)
│   ├───• vec4 (6, 2)
│   └───• vec5 (5, 10)
│
├───• 4 (4, 9) [Updating:3]
└───• 5 (12, 1) [Updating:3]

# Attempt to split partition #3, but where child is not in the parent partition.
# The split should be aborted.
force-split partition-key=3 parent-partition-key=4
----
• 1 (0, 0)
│
├───• 2 (14, 1)
│   │
│   └───• vec1 (14, 1)
│
├───• 3 (8, 5) [DrainingForSplit:4,5]
│   │
│   ├───• vec2 (18, 0)
│   ├───• vec3 (3, 8)
│   ├───• vec4 (6, 2)
│   └───• vec5 (5, 10)
│
├───• 4 (4, 9) [Updating:3]
└───• 5 (12, 1) [Updating:3]

# Finish the split, ensuring that the (18, 0) vector is reassigned.
force-split partition-key=3 parent-partition-key=1
----
• 1 (0, 0)
│
├───• 2 (14, 1)
│   │
│   ├───• vec1 (14, 1)
│   └───• vec2 (18, 0)
│
├───• 5 (12, 1)
│   │
│   └───• vec4 (6, 2)
│
└───• 4 (4, 9)
    │
    ├───• vec5 (5, 10)
    └───• vec3 (3, 8)

# ----------------------------------------------------------------------
# reassignToSiblings has multiple closer siblings to choose from.
# ----------------------------------------------------------------------

# Load index where vectors needs to be reassigned.
load-index min-partition-size=1 max-partition-size=6 beam-size=3
• 1 (0, 0)
│
├───• 2 (14, 1)
│   │
│   └───• vec1 (14, 1)
│
├───• 3 (8, 5)
│   │
│   ├───• vec2 (18, 0)
│   ├───• vec3 (3, 8)
│   ├───• vec4 (6, 2)
│   ├───• vec5 (5, 3)
│   └───• vec6 (5, 10)
│
├───• 4 (20, 0)
│   │
│   └───• vec7 (20, 0)
│
└───• 5 (16, 1)
    │
    └───• vec8 (16, 1)
----
Loaded 8 vectors.

# Split partition #3 and ensure that vector (18, 0) is assigned to partition #4,
# not partition #2 or #5. Vector (14, 2) should be assigned to partition #2.
force-split partition-key=3 parent-partition-key=1
----
• 1 (0, 0)
│
├───• 2 (14, 1)
│   │
│   └───• vec1 (14, 1)
│
├───• 7 (4.3333, 7)
│   │
│   ├───• vec3 (3, 8)
│   └───• vec6 (5, 10)
│
├───• 4 (20, 0)
│   │
│   ├───• vec7 (20, 0)
│   └───• vec2 (18, 0)
│
├───• 5 (16, 1)
│   │
│   └───• vec8 (16, 1)
│
└───• 6 (12, 1)
    │
    ├───• vec5 (5, 3)
    └───• vec4 (6, 2)

# ----------------------------------------------------------------------
# Empty split target partition. This regresses a bug caused by code that
# was trying to insert partition 4 into both partition 5 and 6, in order
# to avoid creating an empty partition. Instead, partition 4 wasn't
# inserted into either partition, becoming a "lost update". The fix was
# to remove the code entirely, as it's no longer a problem for empty
# partitions to exist.
# ----------------------------------------------------------------------

load-index min-partition-size=1 max-partition-size=4 beam-size=2
• 1 (0, 0)
│
├───• 2 (-9, 18)
│   │
│   ├───• 3 (-9, 18) [Splitting:5,6]
│   │   │
│   │   └───• 4 (-9, 18)
│   │       │
│   │       ├───• vec39 (-4, 13)
│   │       └───• vec60 (-14, 23)
│   │
│   ├───• 5 (-9, 18) [Updating:3]
│   └───• 6 (4, 3) [Updating:3]
│
└───• 7 (5, 8)
----
Loaded 2 vectors.

force-split partition-key=3 parent-partition-key=2
----
• 1 (0, 0)
│
├───• 2 (-9, 18)
│   │
│   ├───• 6 (4, 3)
│   │   │
│   │   └───• 4 (-9, 18)
│   │       │
│   │       ├───• vec39 (-4, 13)
│   │       └───• vec60 (-14, 23)
│   │
│   └───• 5 (-9, 18)
└───• 7 (5, 8)
