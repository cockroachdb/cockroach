# ----------------------------------------------------------------------
# Load 1000 512-dimension features and search them. Use small partition size to
# ensure a deeper tree.
# ----------------------------------------------------------------------
new-index dims=512 min-partition-size=4 max-partition-size=16 quality-samples=8 beam-size=4 load-features=1000 hide-tree
----
Created index with 1000 vectors with 512 dimensions.
3 levels, 105 partitions.
CV stats:
  level 2 - mean: 0.1161, stdev: 0.0252
  level 3 - mean: 0.1488, stdev: 0.0179

# Search with small beam size.
search max-results=1 use-feature=5000 beam-size=1
----
vec771: 0.5624 (centroid=0.6)
24 leaf vectors, 48 vectors, 2 full vectors, 4 partitions

# Search for additional results.
search max-results=6 use-feature=5000 beam-size=1
----
vec771: 0.5624 (centroid=0.6)
vec356: 0.5976 (centroid=0.47)
vec309: 0.7311 (centroid=0.6)
vec590: 0.8131 (centroid=0.51)
vec879: 0.8291 (centroid=0.76)
vec271: 0.84 (centroid=0.59)
24 leaf vectors, 48 vectors, 14 full vectors, 4 partitions

# Use a larger beam size.
search max-results=6 use-feature=5000 beam-size=4
----
vec771: 0.5624 (centroid=0.6)
vec356: 0.5976 (centroid=0.47)
vec329: 0.6871 (centroid=0.48)
vec386: 0.7301 (centroid=0.53)
vec309: 0.7311 (centroid=0.6)
vec117: 0.7576 (centroid=0.54)
75 leaf vectors, 132 vectors, 22 full vectors, 13 partitions

# Turn off re-ranking, which results in increased inaccuracy.
search max-results=6 use-feature=5000 beam-size=4 skip-rerank
----
vec771: 0.5145 ±0.04 (centroid=0.6)
vec356: 0.5953 ±0.03 (centroid=0.47)
vec329: 0.6725 ±0.03 (centroid=0.48)
vec25: 0.7487 ±0.04 (centroid=0.55)
vec386: 0.7603 ±0.03 (centroid=0.53)
vec590: 0.7635 ±0.03 (centroid=0.51)
75 leaf vectors, 132 vectors, 0 full vectors, 13 partitions

# Return top 25 results with large beam size.
search max-results=25 use-feature=5000 beam-size=16
----
vec771: 0.5624 (centroid=0.6)
vec356: 0.5976 (centroid=0.47)
vec640: 0.6525 (centroid=0.6)
vec302: 0.6601 (centroid=0.55)
vec329: 0.6871 (centroid=0.48)
vec95: 0.7008 (centroid=0.54)
vec249: 0.7268 (centroid=0.45)
vec386: 0.7301 (centroid=0.53)
vec309: 0.7311 (centroid=0.6)
vec633: 0.7513 (centroid=0.4)
vec117: 0.7576 (centroid=0.54)
vec556: 0.7595 (centroid=0.47)
vec25: 0.761 (centroid=0.55)
vec776: 0.7633 (centroid=0.51)
vec872: 0.7707 (centroid=0.54)
vec859: 0.7708 (centroid=0.51)
vec240: 0.7723 (centroid=0.5)
vec347: 0.7745 (centroid=0.55)
vec11: 0.777 (centroid=0.56)
vec340: 0.7858 (centroid=0.5)
vec239: 0.7878 (centroid=0.47)
vec704: 0.7916 (centroid=0.65)
vec848: 0.7958 (centroid=0.48)
vec668: 0.7964 (centroid=0.33)
vec637: 0.8039 (centroid=0.55)
321 leaf vectors, 425 vectors, 77 full vectors, 42 partitions

# Search for an "easy" result, where adaptive search inspects less partitions.
recall topk=20 use-feature=8601 beam-size=4
----
50.00% recall@20
23.00 leaf vectors, 41.00 vectors, 23.00 full vectors, 4.00 partitions

# Search for a "hard" result, where adaptive search inspects more partitions.
recall topk=20 use-feature=2717 beam-size=4
----
35.00% recall@20
82.00 leaf vectors, 135.00 vectors, 42.00 full vectors, 13.00 partitions

# Test recall at different beam sizes.
recall topk=10 beam-size=2 samples=50
----
39.20% recall@10
28.48 leaf vectors, 56.50 vectors, 16.14 full vectors, 5.38 partitions

recall topk=10 beam-size=4 samples=50
----
60.60% recall@10
59.44 leaf vectors, 104.58 vectors, 20.96 full vectors, 9.74 partitions

recall topk=10 beam-size=8 samples=50
----
78.40% recall@10
117.38 leaf vectors, 197.62 vectors, 25.26 full vectors, 18.38 partitions

recall topk=10 beam-size=16 samples=50
----
90.60% recall@10
239.44 leaf vectors, 333.86 vectors, 29.14 full vectors, 30.88 partitions

recall topk=10 beam-size=32 samples=50
----
96.80% recall@10
470.14 leaf vectors, 572.64 vectors, 30.98 full vectors, 53.30 partitions
