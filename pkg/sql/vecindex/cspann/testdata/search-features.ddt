# ----------------------------------------------------------------------
# Load 1000 512-dimension features and search them. Use small partition size to
# ensure a deeper tree.
# ----------------------------------------------------------------------
new-index dims=512 min-partition-size=4 max-partition-size=16 quality-samples=8 beam-size=4 load-features=1000 hide-tree
----
Created index with 1000 vectors with 512 dimensions.
3 levels, 201 partitions.
CV stats:
  level 2 - mean: 0.1149, stdev: 0.0228
  level 3 - mean: 0.0000, stdev: 0.0000

# Search with small beam size.
search max-results=1 use-feature=5000 beam-size=1
----
vec356: 0.5976 (centroid=0.49)
20 leaf vectors, 42 vectors, 13 full vectors, 4 partitions

# Search for additional results.
search max-results=6 use-feature=5000 beam-size=1
----
vec356: 0.5976 (centroid=0.49)
vec302: 0.6601 (centroid=0.55)
vec25: 0.761 (centroid=0.48)
vec704: 0.7916 (centroid=0.6)
vec246: 0.8141 (centroid=0.53)
vec37: 0.8214 (centroid=0.6)
20 leaf vectors, 42 vectors, 13 full vectors, 4 partitions

# Use a larger beam size.
search max-results=6 use-feature=5000 beam-size=4
----
vec771: 0.5624 (centroid=0.55)
vec356: 0.5976 (centroid=0.49)
vec640: 0.6525 (centroid=0.54)
vec302: 0.6601 (centroid=0.55)
vec309: 0.7311 (centroid=0.51)
vec25: 0.761 (centroid=0.48)
81 leaf vectors, 119 vectors, 22 full vectors, 11 partitions

# Turn off re-ranking, which results in increased inaccuracy.
search max-results=6 use-feature=5000 beam-size=4 skip-rerank
----
vec771: 0.5698 ± 0.04 (centroid=0.55)
vec356: 0.5972 ± 0.03 (centroid=0.49)
vec302: 0.66 ± 0.03 (centroid=0.55)
vec640: 0.6676 ± 0.04 (centroid=0.54)
vec704: 0.7344 ± 0.04 (centroid=0.6)
vec309: 0.7405 ± 0.03 (centroid=0.51)
81 leaf vectors, 119 vectors, 0 full vectors, 11 partitions

# Return top 25 results with large beam size.
search max-results=25 use-feature=5000 beam-size=16
----
vec771: 0.5624 (centroid=0.55)
vec356: 0.5976 (centroid=0.49)
vec640: 0.6525 (centroid=0.54)
vec302: 0.6601 (centroid=0.55)
vec329: 0.6871 (centroid=0.52)
vec249: 0.7268 (centroid=0.45)
vec386: 0.7301 (centroid=0.51)
vec309: 0.7311 (centroid=0.51)
vec633: 0.7513 (centroid=0.46)
vec117: 0.7576 (centroid=0.61)
vec556: 0.7595 (centroid=0.56)
vec25: 0.761 (centroid=0.48)
vec776: 0.7633 (centroid=0.48)
vec240: 0.7723 (centroid=0.47)
vec347: 0.7745 (centroid=0.5)
vec11: 0.777 (centroid=0.57)
vec340: 0.7858 (centroid=0.45)
vec239: 0.7878 (centroid=0.49)
vec704: 0.7916 (centroid=0.6)
vec220: 0.7957 (centroid=0.44)
vec848: 0.7958 (centroid=0.59)
vec387: 0.8038 (centroid=0.52)
vec637: 0.8039 (centroid=0.57)
vec410: 0.8062 (centroid=0.49)
vec979: 0.8066 (centroid=0.62)
344 leaf vectors, 447 vectors, 82 full vectors, 40 partitions

# Search for an "easy" result, where adaptive search inspects less partitions.
recall topk=20 use-feature=8601 beam-size=4
----
45.00% recall@20
19.00 leaf vectors, 45.00 vectors, 19.00 full vectors, 5.00 partitions

# Search for a "hard" result, where adaptive search inspects more partitions.
recall topk=20 use-feature=2717 beam-size=4
----
30.00% recall@20
93.00 leaf vectors, 125.00 vectors, 49.00 full vectors, 11.00 partitions

# Test recall at different beam sizes.
recall topk=10 beam-size=2 samples=50
----
28.00% recall@10
21.66 leaf vectors, 42.18 vectors, 14.82 full vectors, 3.96 partitions

recall topk=10 beam-size=4 samples=50
----
53.80% recall@10
54.76 leaf vectors, 86.06 vectors, 20.20 full vectors, 7.96 partitions

recall topk=10 beam-size=8 samples=50
----
79.40% recall@10
117.38 leaf vectors, 169.66 vectors, 22.98 full vectors, 15.64 partitions

recall topk=10 beam-size=16 samples=50
----
93.20% recall@10
239.10 leaf vectors, 333.72 vectors, 26.88 full vectors, 30.80 partitions

recall topk=10 beam-size=32 samples=50
----
97.60% recall@10
470.64 leaf vectors, 575.64 vectors, 28.50 full vectors, 53.44 partitions
