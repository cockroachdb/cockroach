create-table
CREATE TABLE defaultdb.customers (id INT PRIMARY KEY, email STRING UNIQUE);
----

create-table
CREATE TABLE IF NOT EXISTS defaultdb.orders (
    id INT PRIMARY KEY,
    customer INT UNIQUE NOT NULL REFERENCES customers (id),
    orderTotal DECIMAL(9,2),
    INDEX (customer)
  );
----

create-sequence
CREATE SEQUENCE defaultdb.SQ2;
----

create-table
CREATE TABLE defaultdb.shipments (
    tracking_number UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    carrier STRING,
    status STRING,
    customer_id INT,
    randcol INT DEFAULT nextval('defaultdb.sq2'),
    CONSTRAINT fk_customers FOREIGN KEY (customer_id) REFERENCES customers(id),
    CONSTRAINT fk_orders FOREIGN KEY (customer_id) REFERENCES orders(customer)
  );
----

create-sequence
CREATE SEQUENCE defaultdb.SQ1 OWNED BY defaultdb.shipments.carrier
----

create-view
CREATE VIEW v1 as (select customer_id, carrier from defaultdb.shipments);
----

build
DROP TABLE defaultdb.shipments CASCADE;
----
- DROP View:{DescID: 57}
  state: PUBLIC
  details:
    dependedOnBy: []
    dependsOn:
    - 55
    tableId: 57
- DROP OutboundForeignKey:{DescID: 55, DepID: 52, ElementName: "fk_customers"}
  state: PUBLIC
  details:
    name: fk_customers
    originColumns:
    - 4
    originId: 55
    referenceColumns:
    - 1
    referenceId: 52
- DROP InboundForeignKey:{DescID: 52, DepID: 55, ElementName: "fk_customers"}
  state: PUBLIC
  details:
    name: fk_customers
    originColumns:
    - 1
    originId: 52
    referenceColumns:
    - 4
    referenceId: 55
- DROP OutboundForeignKey:{DescID: 55, DepID: 53, ElementName: "fk_orders"}
  state: PUBLIC
  details:
    name: fk_orders
    originColumns:
    - 4
    originId: 55
    referenceColumns:
    - 2
    referenceId: 53
- DROP InboundForeignKey:{DescID: 53, DepID: 55, ElementName: "fk_orders"}
  state: PUBLIC
  details:
    name: fk_orders
    originColumns:
    - 2
    originId: 53
    referenceColumns:
    - 4
    referenceId: 55
- DROP Sequence:{DescID: 56}
  state: PUBLIC
  details:
    sequenceId: 56
- DROP SequenceOwnedBy:{DescID: 56, DepID: 55}
  state: PUBLIC
  details:
    ownerTableId: 55
    sequenceId: 56
- DROP DefaultExpression:{DescID: 55, ColumnID: 5}
  state: PUBLIC
  details:
    columnId: 5
    defaultExpr: nextval(54:::REGCLASS)
    tableId: 55
    usesSequenceIDs:
    - 54
- DROP RelationDependedOnBy:{DescID: 54, DepID: 55}
  state: PUBLIC
  details:
    dependedOn: 55
    tableId: 54
- DROP Table:{DescID: 55}
  state: PUBLIC
  details:
    tableId: 55
