create-table
CREATE TABLE defaultdb.customers (id INT PRIMARY KEY, email STRING UNIQUE);
----

create-table
CREATE TABLE IF NOT EXISTS defaultdb.orders (
    id INT PRIMARY KEY,
    customer INT UNIQUE NOT NULL REFERENCES customers (id),
    orderTotal DECIMAL(9,2),
    INDEX (customer)
  );
----

create-sequence
CREATE SEQUENCE defaultdb.SQ2;
----

create-type
CREATE TYPE defaultdb.typ AS ENUM('a')
----

create-table
CREATE TABLE defaultdb.shipments (
    tracking_number UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    carrier STRING,
    status STRING,
    customer_id INT,
    randcol INT DEFAULT nextval('defaultdb.sq2'),
    val defaultdb.TYP AS ('a'::defaultdb.typ) STORED,
    CONSTRAINT fk_customers FOREIGN KEY (customer_id) REFERENCES customers(id),
    CONSTRAINT fk_orders FOREIGN KEY (customer_id) REFERENCES orders(customer)
  );
----

create-sequence
CREATE SEQUENCE defaultdb.SQ1 OWNED BY defaultdb.shipments.carrier
----

create-view
CREATE VIEW v1 as (select customer_id, carrier from defaultdb.shipments);
----

build
DROP TABLE defaultdb.shipments CASCADE;
----
- DROP DefaultExpression:{DescID: 59, ColumnID: 1}
  state: PUBLIC
  details:
    columnId: 1
    defaultExpr: gen_random_uuid()
    tableId: 59
- DROP DefaultExpression:{DescID: 59, ColumnID: 2}
  state: PUBLIC
  details:
    columnId: 2
    tableId: 59
- DROP DefaultExpression:{DescID: 59, ColumnID: 3}
  state: PUBLIC
  details:
    columnId: 3
    tableId: 59
- DROP DefaultExpression:{DescID: 59, ColumnID: 4}
  state: PUBLIC
  details:
    columnId: 4
    tableId: 59
- DROP DefaultExpression:{DescID: 59, ColumnID: 5}
  state: PUBLIC
  details:
    columnId: 5
    defaultExpr: nextval(56:::REGCLASS)
    tableId: 59
    usesSequenceIDs:
    - 56
- DROP DefaultExpression:{DescID: 59, ColumnID: 6}
  state: PUBLIC
  details:
    columnId: 6
    tableId: 59
- DROP InboundForeignKey:{DescID: 54, Name: fk_customers, ReferencedDescID: 59}
  state: PUBLIC
  details:
    name: fk_customers
    originColumns:
    - 1
    originId: 54
    referenceColumns:
    - 4
    referenceId: 59
- DROP InboundForeignKey:{DescID: 55, Name: fk_orders, ReferencedDescID: 59}
  state: PUBLIC
  details:
    name: fk_orders
    originColumns:
    - 2
    originId: 55
    referenceColumns:
    - 4
    referenceId: 59
- DROP OutboundForeignKey:{DescID: 59, Name: fk_customers, ReferencedDescID: 54}
  state: PUBLIC
  details:
    name: fk_customers
    originColumns:
    - 4
    originId: 59
    referenceColumns:
    - 1
    referenceId: 54
- DROP OutboundForeignKey:{DescID: 59, Name: fk_orders, ReferencedDescID: 55}
  state: PUBLIC
  details:
    name: fk_orders
    originColumns:
    - 4
    originId: 59
    referenceColumns:
    - 2
    referenceId: 55
- DROP RelationDependedOnBy:{DescID: 56, ReferencedDescID: 59}
  state: PUBLIC
  details:
    dependedOn: 59
    tableId: 56
- DROP RelationDependedOnBy:{DescID: 59, ReferencedDescID: 61}
  state: PUBLIC
  details:
    dependedOn: 61
    tableId: 59
- DROP Sequence:{DescID: 60}
  state: PUBLIC
  details:
    sequenceId: 60
- DROP SequenceOwnedBy:{DescID: 60, ReferencedDescID: 59}
  state: PUBLIC
  details:
    ownerTableId: 59
    sequenceId: 60
- DROP Table:{DescID: 59}
  state: PUBLIC
  details:
    tableId: 59
- DROP TypeReference:{DescID: 59, ReferencedDescID: 57}
  state: PUBLIC
  details:
    descriptorId: 59
    typeId: 57
- DROP TypeReference:{DescID: 59, ReferencedDescID: 58}
  state: PUBLIC
  details:
    descriptorId: 59
    typeId: 58
- DROP View:{DescID: 61}
  state: PUBLIC
  details:
    dependedOnBy: []
    dependsOn:
    - 59
    tableId: 61
