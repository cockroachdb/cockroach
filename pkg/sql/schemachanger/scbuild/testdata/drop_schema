create-schema
CREATE SCHEMA SC1
----

create-schema
CREATE SCHEMA SC2
----

create-sequence
CREATE SEQUENCE sc1.SQ1
----

create-table
CREATE TABLE sc1.t1 (id INT PRIMARY KEY, name varchar(256), val int DEFAULT nextval('sc1.sq1'))
----

create-view
CREATE VIEW sc1.v1 AS (SELECT name FROM sc1.t1)
----

create-view
CREATE VIEW sc1.v2 AS (SELECT name AS n1, name AS n2 FROM sc1.v1)
----

create-view
CREATE VIEW sc1.v3 AS (SELECT name, n1 FROM sc1.v1, sc1.v2);
----

create-view
CREATE VIEW sc1.v4 AS (SELECT n2, n1 FROM sc1.v2);
----

create-type
CREATE TYPE sc1.typ AS ENUM('a')
----

create-view
CREATE VIEW sc1.v5 AS (SELECT 'a'::sc1.typ::string AS k, n2, n1 from sc1.v4)
----

create-view
CREATE VIEW sc2.v6 AS (SELECT 'a'::sc1.typ::string AS k, n2, n1 from sc1.v4)
----

build
DROP SCHEMA defaultdb.SC1 CASCADE
----
- DROP DefaultExpression:{DescID: 55, ColumnID: 1}
  state: PUBLIC
  details:
    columnId: 1
    tableId: 55
- DROP DefaultExpression:{DescID: 55, ColumnID: 2}
  state: PUBLIC
  details:
    columnId: 2
    tableId: 55
- DROP DefaultExpression:{DescID: 55, ColumnID: 3}
  state: PUBLIC
  details:
    columnId: 3
    tableId: 55
    usesSequenceIDs:
    - 54
- DROP RelationDependedOnBy:{DescID: 54, ReferencedDescID: 55}
  state: PUBLIC
  details:
    dependedOn: 55
    tableId: 54
- DROP RelationDependedOnBy:{DescID: 55, ReferencedDescID: 56}
  state: PUBLIC
  details:
    dependedOn: 56
    tableId: 55
- DROP RelationDependedOnBy:{DescID: 56, ReferencedDescID: 57}
  state: PUBLIC
  details:
    dependedOn: 57
    tableId: 56
- DROP RelationDependedOnBy:{DescID: 56, ReferencedDescID: 58}
  state: PUBLIC
  details:
    dependedOn: 58
    tableId: 56
- DROP RelationDependedOnBy:{DescID: 57, ReferencedDescID: 58}
  state: PUBLIC
  details:
    dependedOn: 58
    tableId: 57
- DROP RelationDependedOnBy:{DescID: 57, ReferencedDescID: 59}
  state: PUBLIC
  details:
    dependedOn: 59
    tableId: 57
- DROP RelationDependedOnBy:{DescID: 59, ReferencedDescID: 62}
  state: PUBLIC
  details:
    dependedOn: 62
    tableId: 59
- DROP RelationDependedOnBy:{DescID: 59, ReferencedDescID: 63}
  state: PUBLIC
  details:
    dependedOn: 63
    tableId: 59
- DROP Schema:{DescID: 52}
  state: PUBLIC
  details:
    dependentObjects:
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    schemaId: 52
- DROP Sequence:{DescID: 54}
  state: PUBLIC
  details:
    sequenceId: 54
- DROP Table:{DescID: 55}
  state: PUBLIC
  details:
    tableId: 55
- DROP Type:{DescID: 60}
  state: PUBLIC
  details:
    typeId: 60
- DROP Type:{DescID: 61}
  state: PUBLIC
  details:
    typeId: 61
- DROP TypeReference:{DescID: 62, ReferencedDescID: 60}
  state: PUBLIC
  details:
    descriptorId: 62
    typeId: 60
- DROP TypeReference:{DescID: 62, ReferencedDescID: 61}
  state: PUBLIC
  details:
    descriptorId: 62
    typeId: 61
- DROP TypeReference:{DescID: 63, ReferencedDescID: 60}
  state: PUBLIC
  details:
    descriptorId: 63
    typeId: 60
- DROP TypeReference:{DescID: 63, ReferencedDescID: 61}
  state: PUBLIC
  details:
    descriptorId: 63
    typeId: 61
- DROP View:{DescID: 56}
  state: PUBLIC
  details:
    dependedOnBy:
    - 57
    - 58
    dependsOn:
    - 55
    tableId: 56
- DROP View:{DescID: 57}
  state: PUBLIC
  details:
    dependedOnBy:
    - 58
    - 59
    dependsOn:
    - 56
    tableId: 57
- DROP View:{DescID: 58}
  state: PUBLIC
  details:
    dependedOnBy: []
    dependsOn:
    - 56
    - 57
    tableId: 58
- DROP View:{DescID: 59}
  state: PUBLIC
  details:
    dependedOnBy:
    - 62
    - 63
    dependsOn:
    - 57
    tableId: 59
- DROP View:{DescID: 62}
  state: PUBLIC
  details:
    dependedOnBy: []
    dependsOn:
    - 59
    tableId: 62
- DROP View:{DescID: 63}
  state: PUBLIC
  details:
    dependedOnBy: []
    dependsOn:
    - 59
    tableId: 63
