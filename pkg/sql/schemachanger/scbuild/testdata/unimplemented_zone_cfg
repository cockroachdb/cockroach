setup
SET experimental_enable_unique_without_index_constraints = true;
CREATE TABLE defaultdb.foo (
    i INT8 PRIMARY KEY,
    -- j gets added by the test
    k INT8 CHECK (k > 10),
    l INT8 NOT NULL UNIQUE,
    m INT8 REFERENCES foo (l),
    n UUID,
    UNIQUE WITHOUT INDEX (n),
    o INT -- this column can be dropped
);
ALTER TABLE defaultdb.foo CONFIGURE ZONE USING gc.ttlseconds=10;
CREATE INDEX idx ON defaultdb.foo(k, l);
CREATE TABLE defaultdb.foo_index_zone_cfg (
    i INT8 PRIMARY KEY,
    -- j gets added by the test
    k INT8 CHECK (k > 10),
    l INT8 NOT NULL UNIQUE,
    m INT8 REFERENCES foo (l),
    n UUID,
    UNIQUE WITHOUT INDEX (n),
    o INT -- this column can be dropped
);
CREATE INDEX idx ON defaultdb.foo_index_zone_cfg(k, l);
ALTER INDEX defaultdb.foo_index_zone_cfg@idx CONFIGURE ZONE USING gc.ttlseconds=10;
----

unimplemented
ALTER TABLE defaultdb.foo_index_zone_cfg ADD COLUMN j INT
----

unimplemented
ALTER TABLE defaultdb.foo_index_zone_cfg ADD PRIMARY KEY (i, n)
----

unimplemented
ALTER TABLE defaultdb.foo_index_zone_cfg DROP COLUMN k
----

unimplemented
DROP INDEX defaultdb.foo_index_zone_cfg@idx
----
