setup
CREATE DATABASE db;
CREATE SCHEMA db.sc;
----
...
+database {0 0 db} -> 54
+schema {54 0 public} -> 55
+schema {54 0 sc} -> 56

test
DROP SCHEMA db.sc;
----
begin transaction #1
# begin StatementPhase
## StatementPhase stage 1 of 1 with 1 MutationType ops
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase non-revertible stage 1 of 2 with 1 MutationType ops
upsert descriptor #56
  ...
         userProto: root
       version: 2
  -  version: "1"
  +  state: DROP
  +  version: "2"
## PreCommitPhase non-revertible stage 2 of 2 with 2 MutationType ops
delete schema namespace entry {54 0 sc} -> 56
create job #1: "Schema change job"
  descriptor IDs: [56]
# end PreCommitPhase
commit transaction #1
# begin PostCommitPhase
begin transaction #2
commit transaction #2
# end PostCommitPhase

setup
CREATE SCHEMA db.sc;
CREATE TABLE db.sc.t (k INT, v STRING);
CREATE TYPE db.sc.e AS ENUM('a', 'b', 'c');
----
...
+schema {54 0 sc} -> 57
+object {54 57 t} -> 58
+object {54 57 e} -> 59
+object {54 57 _e} -> 60

test
DROP TABLE db.sc.t;
----
begin transaction #1
# begin StatementPhase
## StatementPhase stage 1 of 1 with 1 MutationType ops
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase non-revertible stage 1 of 1 with 2 MutationType ops
delete object namespace entry {54 57 t} -> 58
upsert descriptor #58
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 57
  -  version: "1"
  +  version: "2"
create job #1: "Schema change job"
  descriptor IDs: [58]
upsert descriptor #58
  ...
     modificationTime: {}
     name: t
  +  newSchemaChangeJobId: "1"
     nextColumnId: 4
     nextFamilyId: 1
  ...
# end PreCommitPhase
commit transaction #1
# begin PostCommitPhase
begin transaction #2
## PostCommitPhase non-revertible stage 1 of 1 with 2 MutationType ops
create job #2: "GC for dropping descriptor 58"
  descriptor IDs: [58]
update progress of schema change job #1
upsert descriptor #58
  ...
     modificationTime: {}
     name: t
  -  newSchemaChangeJobId: "1"
     nextColumnId: 4
     nextFamilyId: 1
  ...
commit transaction #2
# end PostCommitPhase

test
DROP SCHEMA db.sc CASCADE;
----
begin transaction #1
# begin StatementPhase
## StatementPhase stage 1 of 1 with 3 MutationType ops
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase non-revertible stage 1 of 2 with 3 MutationType ops
upsert descriptor #57
  ...
         userProto: root
       version: 2
  -  version: "1"
  +  state: DROP
  +  version: "2"
upsert descriptor #59
  ...
         userProto: root
       version: 2
  -  version: "1"
  +  state: DROP
  +  version: "2"
upsert descriptor #60
  ...
         userProto: root
       version: 2
  -  version: "1"
  +  state: DROP
  +  version: "2"
## PreCommitPhase non-revertible stage 2 of 2 with 4 MutationType ops
delete schema namespace entry {54 0 sc} -> 57
delete object namespace entry {54 57 e} -> 59
delete object namespace entry {54 57 _e} -> 60
create job #1: "Schema change job"
  descriptor IDs: [57 59 60]
# end PreCommitPhase
commit transaction #1
# begin PostCommitPhase
begin transaction #2
commit transaction #2
# end PostCommitPhase

test
DROP DATABASE db CASCADE;
----
begin transaction #1
# begin StatementPhase
## StatementPhase stage 1 of 1 with 2 MutationType ops
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase non-revertible stage 1 of 2 with 2 MutationType ops
upsert descriptor #54
  ...
       public:
         id: 55
  -  version: "5"
  +  state: DROP
  +  version: "6"
upsert descriptor #55
  ...
         userProto: root
       version: 2
  -  version: "1"
  +  state: DROP
  +  version: "2"
## PreCommitPhase non-revertible stage 2 of 2 with 4 MutationType ops
delete database namespace entry {0 0 db} -> 54
delete schema namespace entry {54 0 public} -> 55
create job #1: "Schema change job"
  descriptor IDs: [54 55]
# end PreCommitPhase
commit transaction #1
# begin PostCommitPhase
begin transaction #2
commit transaction #2
# end PostCommitPhase

setup
CREATE DATABASE db1;
CREATE SCHEMA db1.sc1;
CREATE SEQUENCE db1.public.sq1;
CREATE SEQUENCE db1.sc1.sq1;
CREATE TABLE db1.sc1.t1 (id INT PRIMARY KEY, name varchar(256), val int DEFAULT nextval('db1.sc1.sq1'));
CREATE TABLE db1.public.t1 (id INT PRIMARY KEY, name varchar(256), val int DEFAULT nextval('db1.public.sq1'));
CREATE VIEW db1.sc1.v1 AS (SELECT name FROM db1.sc1.t1);
CREATE VIEW db1.sc1.v2 AS (SELECT name AS n1, name AS n2 FROM db1.sc1.v1);
CREATE VIEW db1.sc1.v3 AS (SELECT name, n1 FROM db1.sc1.v1, db1.sc1.v2);
CREATE VIEW db1.sc1.v4 AS (SELECT n2, n1 FROM db1.sc1.v2);
CREATE TYPE db1.sc1.typ AS ENUM('a');
CREATE VIEW db1.sc1.v5 AS (SELECT 'a'::db1.sc1.typ::string AS k, n2, n1 from db1.sc1.v4);
----
...
+database {0 0 db1} -> 61
+schema {61 0 public} -> 62
+schema {61 0 sc1} -> 63
+object {61 62 sq1} -> 64
+object {61 63 sq1} -> 65
+object {61 63 t1} -> 66
+object {61 62 t1} -> 67
+object {61 63 v1} -> 68
+object {61 63 v2} -> 69
+object {61 63 v3} -> 70
+object {61 63 v4} -> 71
+object {61 63 typ} -> 72
+object {61 63 _typ} -> 73
+object {61 63 v5} -> 74

test
DROP DATABASE db1 CASCADE
----
begin transaction #1
# begin StatementPhase
## StatementPhase stage 1 of 1 with 14 MutationType ops
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase non-revertible stage 1 of 2 with 37 MutationType ops
delete object namespace entry {61 62 sq1} -> 64
delete object namespace entry {61 63 sq1} -> 65
delete object namespace entry {61 63 t1} -> 66
delete object namespace entry {61 62 t1} -> 67
delete object namespace entry {61 63 v1} -> 68
delete object namespace entry {61 63 v2} -> 69
delete object namespace entry {61 63 v3} -> 70
delete object namespace entry {61 63 v4} -> 71
delete object namespace entry {61 63 v5} -> 74
upsert descriptor #61
  ...
       sc1:
         id: 63
  -  version: "2"
  +  state: DROP
  +  version: "3"
upsert descriptor #62
  ...
         userProto: root
       version: 2
  -  version: "1"
  +  state: DROP
  +  version: "2"
upsert descriptor #63
  ...
         userProto: root
       version: 2
  -  version: "1"
  +  state: DROP
  +  version: "2"
upsert descriptor #64
  ...
     createAsOfTime:
       wallTime: "1"
  -  dependedOnBy:
  -  - byId: true
  -    columnIds:
  -    - 3
  -    id: 67
     families:
     - columnIds:
  ...
       sequenceOwner: {}
       start: "1"
  +  state: DROP
     unexposedParentSchemaId: 62
  -  version: "2"
  +  version: "3"
upsert descriptor #65
  ...
     createAsOfTime:
       wallTime: "1"
  -  dependedOnBy:
  -  - byId: true
  -    columnIds:
  -    - 3
  -    id: 66
     families:
     - columnIds:
  ...
       sequenceOwner: {}
       start: "1"
  +  state: DROP
     unexposedParentSchemaId: 63
  -  version: "2"
  +  version: "3"
upsert descriptor #66
  ...
         visibleType: 7
         width: 256
  -  - defaultExpr: nextval(65:::REGCLASS)
  -    id: 3
  +  - id: 3
       name: val
       nullable: true
  ...
         oid: 20
         width: 64
  -    usesSequenceIds:
  -    - 65
     createAsOfTime:
       wallTime: "1"
     dependedOnBy:
  -  - columnIds:
  -    - 2
  -    id: 68
  +  - {}
     families:
     - columnIds:
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 63
  -  version: "2"
  +  version: "3"
upsert descriptor #67
  ...
         visibleType: 7
         width: 256
  -  - defaultExpr: nextval(64:::REGCLASS)
  -    id: 3
  +  - id: 3
       name: val
       nullable: true
  ...
         oid: 20
         width: 64
  -    usesSequenceIds:
  -    - 64
     createAsOfTime:
       wallTime: "1"
  +  dependedOnBy: []
     families:
     - columnIds:
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 62
  -  version: "1"
  +  version: "2"
upsert descriptor #68
  ...
     createAsOfTime:
       wallTime: "1"
  -  dependedOnBy:
  -  - columnIds:
  -    - 1
  -    id: 69
  -  - columnIds:
  -    - 1
  -    id: 70
  -  dependsOn:
  -  - 66
     formatVersion: 3
     id: 68
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 63
  -  version: "3"
  +  version: "4"
     viewQuery: (SELECT name FROM db1.sc1.t1)
upsert descriptor #69
  ...
     createAsOfTime:
       wallTime: "1"
  -  dependedOnBy:
  -  - columnIds:
  -    - 1
  -    - 2
  -    id: 70
  -  - columnIds:
  -    - 1
  -    - 2
  -    id: 71
  -  dependsOn:
  -  - 68
     formatVersion: 3
     id: 69
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 63
  -  version: "3"
  +  version: "4"
     viewQuery: (SELECT name AS n1, name AS n2 FROM db1.sc1.v1)
upsert descriptor #70
  ...
     createAsOfTime:
       wallTime: "1"
  -  dependsOn:
  -  - 68
  -  - 69
     formatVersion: 3
     id: 70
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 63
  -  version: "1"
  +  version: "2"
     viewQuery: (SELECT name, n1 FROM db1.sc1.v1, db1.sc1.v2)
upsert descriptor #71
  ...
     createAsOfTime:
       wallTime: "1"
  -  dependedOnBy:
  -  - columnIds:
  -    - 1
  -    - 2
  -    id: 74
  -  dependsOn:
  -  - 69
     formatVersion: 3
     id: 71
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 63
  -  version: "2"
  +  version: "3"
     viewQuery: (SELECT n2, n1 FROM db1.sc1.v2)
upsert descriptor #72
  ...
         userProto: root
       version: 2
  -  referencingDescriptorIds:
  -  - 74
  -  version: "2"
  +  referencingDescriptorIds: []
  +  state: DROP
  +  version: "3"
upsert descriptor #73
  ...
         userProto: root
       version: 2
  -  referencingDescriptorIds:
  -  - 74
  -  version: "2"
  +  referencingDescriptorIds: []
  +  state: DROP
  +  version: "3"
upsert descriptor #74
  ...
     createAsOfTime:
       wallTime: "1"
  -  dependsOn:
  -  - 71
     dependsOnTypes:
     - 72
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 63
  -  version: "1"
  +  version: "2"
     viewQuery: (SELECT 'a':::sc1.typ::STRING AS k, n2, n1 FROM db1.sc1.v4)
## PreCommitPhase non-revertible stage 2 of 2 with 4 MutationType ops
delete database namespace entry {0 0 db1} -> 61
delete object namespace entry {61 63 typ} -> 72
delete object namespace entry {61 63 _typ} -> 73
create job #1: "Schema change job"
  descriptor IDs: [61 62 63 64 65 66 67 68 69 70 71 72 73 74]
upsert descriptor #64
  ...
     modificationTime: {}
     name: sq1
  +  newSchemaChangeJobId: "1"
     parentId: 61
     primaryIndex:
  ...
upsert descriptor #65
  ...
     modificationTime: {}
     name: sq1
  +  newSchemaChangeJobId: "1"
     parentId: 61
     primaryIndex:
  ...
upsert descriptor #66
  ...
     modificationTime: {}
     name: t1
  +  newSchemaChangeJobId: "1"
     nextColumnId: 4
     nextFamilyId: 1
  ...
upsert descriptor #67
  ...
     modificationTime: {}
     name: t1
  +  newSchemaChangeJobId: "1"
     nextColumnId: 4
     nextFamilyId: 1
  ...
upsert descriptor #68
  ...
     modificationTime: {}
     name: v1
  +  newSchemaChangeJobId: "1"
     nextColumnId: 2
     nextMutationId: 1
  ...
upsert descriptor #69
  ...
     modificationTime: {}
     name: v2
  +  newSchemaChangeJobId: "1"
     nextColumnId: 3
     nextMutationId: 1
  ...
upsert descriptor #70
  ...
     modificationTime: {}
     name: v3
  +  newSchemaChangeJobId: "1"
     nextColumnId: 3
     nextMutationId: 1
  ...
upsert descriptor #71
  ...
     modificationTime: {}
     name: v4
  +  newSchemaChangeJobId: "1"
     nextColumnId: 3
     nextMutationId: 1
  ...
upsert descriptor #74
  ...
     modificationTime: {}
     name: v5
  +  newSchemaChangeJobId: "1"
     nextColumnId: 4
     nextMutationId: 1
  ...
# end PreCommitPhase
commit transaction #1
# begin PostCommitPhase
begin transaction #2
## PostCommitPhase non-revertible stage 1 of 1 with 22 MutationType ops
create job #2: "GC for dropping descriptors 64 67 65 66 68 69 70 71 74"
  descriptor IDs: [64 67 65 66 68 69 70 71 74]
delete schema namespace entry {61 0 public} -> 62
delete schema namespace entry {61 0 sc1} -> 63
update progress of schema change job #1
upsert descriptor #64
  ...
     modificationTime: {}
     name: sq1
  -  newSchemaChangeJobId: "1"
     parentId: 61
     primaryIndex:
  ...
upsert descriptor #65
  ...
     modificationTime: {}
     name: sq1
  -  newSchemaChangeJobId: "1"
     parentId: 61
     primaryIndex:
  ...
upsert descriptor #66
  ...
     modificationTime: {}
     name: t1
  -  newSchemaChangeJobId: "1"
     nextColumnId: 4
     nextFamilyId: 1
  ...
upsert descriptor #67
  ...
     modificationTime: {}
     name: t1
  -  newSchemaChangeJobId: "1"
     nextColumnId: 4
     nextFamilyId: 1
  ...
upsert descriptor #68
  ...
     modificationTime: {}
     name: v1
  -  newSchemaChangeJobId: "1"
     nextColumnId: 2
     nextMutationId: 1
  ...
upsert descriptor #69
  ...
     modificationTime: {}
     name: v2
  -  newSchemaChangeJobId: "1"
     nextColumnId: 3
     nextMutationId: 1
  ...
upsert descriptor #70
  ...
     modificationTime: {}
     name: v3
  -  newSchemaChangeJobId: "1"
     nextColumnId: 3
     nextMutationId: 1
  ...
upsert descriptor #71
  ...
     modificationTime: {}
     name: v4
  -  newSchemaChangeJobId: "1"
     nextColumnId: 3
     nextMutationId: 1
  ...
upsert descriptor #74
  ...
     modificationTime: {}
     name: v5
  -  newSchemaChangeJobId: "1"
     nextColumnId: 4
     nextMutationId: 1
  ...
commit transaction #2
# end PostCommitPhase
