/* setup */
CREATE TYPE e AS ENUM('a', 'b', 'c');
CREATE TABLE t (k INT PRIMARY KEY, v e NOT NULL);

/* test */
CREATE INDEX idx1 ON t (v) WHERE (v = 'a');
EXPLAIN (ddl, verbose) rollback at post-commit stage 1 of 7;
----
• Schema change plan for rolling back CREATE INDEX ‹idx1› ON ‹defaultdb›.public.‹t› (‹v›) WHERE (‹v› = ‹'a'›); 
│
└── • PostCommitNonRevertiblePhase
    │
    └── • Stage 1 of 1 in PostCommitNonRevertiblePhase
        │
        ├── • 10 elements transitioning toward ABSENT
        │   │
        │   ├── • SecondaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
        │   │   │ BACKFILL_ONLY → ABSENT
        │   │   │
        │   │   ├── • PreviousTransactionPrecedence dependency from BACKFILL_ONLY SecondaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
        │   │   │     rule: "SecondaryIndex transitions to ABSENT uphold 2-version invariant: BACKFILL_ONLY->DELETE_ONLY"
        │   │   │
        │   │   ├── • SameStagePrecedence dependency from ABSENT SecondaryIndexPartial:{DescID: 106, IndexID: 2}
        │   │   │     rule: "dependents removed before index"
        │   │   │     rule: "partial predicate removed right before secondary index when not dropping relation"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 106, ColumnID: 2, IndexID: 2}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 106, ColumnID: 1, IndexID: 2}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   └── • Precedence dependency from ABSENT IndexName:{DescID: 106, Name: idx1, IndexID: 2}
        │   │         rule: "dependents removed before index"
        │   │
        │   ├── • SecondaryIndexPartial:{DescID: 106, IndexID: 2}
        │   │     PUBLIC → ABSENT
        │   │
        │   ├── • IndexColumn:{DescID: 106, ColumnID: 2, IndexID: 2}
        │   │   │ PUBLIC → ABSENT
        │   │   │
        │   │   └── • skip PUBLIC → ABSENT operations
        │   │         rule: "skip index-column removal ops on index removal"
        │   │
        │   ├── • IndexColumn:{DescID: 106, ColumnID: 1, IndexID: 2}
        │   │   │ PUBLIC → ABSENT
        │   │   │
        │   │   └── • skip PUBLIC → ABSENT operations
        │   │         rule: "skip index-column removal ops on index removal"
        │   │
        │   ├── • IndexData:{DescID: 106, IndexID: 2}
        │   │   │ PUBLIC → ABSENT
        │   │   │
        │   │   └── • Precedence dependency from ABSENT SecondaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
        │   │         rule: "index removed before garbage collection"
        │   │
        │   ├── • IndexName:{DescID: 106, Name: idx1, IndexID: 2}
        │   │   │ PUBLIC → ABSENT
        │   │   │
        │   │   └── • Precedence dependency from DELETE_ONLY SecondaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
        │   │         rule: "index no longer public before index name"
        │   │
        │   ├── • TemporaryIndex:{DescID: 106, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
        │   │   │ DELETE_ONLY → ABSENT
        │   │   │
        │   │   ├── • PreviousTransactionPrecedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 106, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
        │   │   │     rule: "TemporaryIndex transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT SecondaryIndexPartial:{DescID: 106, IndexID: 3}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 106, ColumnID: 2, IndexID: 3}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   └── • Precedence dependency from ABSENT IndexColumn:{DescID: 106, ColumnID: 1, IndexID: 3}
        │   │         rule: "dependents removed before index"
        │   │
        │   ├── • SecondaryIndexPartial:{DescID: 106, IndexID: 3}
        │   │     PUBLIC → ABSENT
        │   │
        │   ├── • IndexColumn:{DescID: 106, ColumnID: 2, IndexID: 3}
        │   │   │ PUBLIC → ABSENT
        │   │   │
        │   │   └── • skip PUBLIC → ABSENT operations
        │   │         rule: "skip index-column removal ops on index removal"
        │   │
        │   └── • IndexColumn:{DescID: 106, ColumnID: 1, IndexID: 3}
        │       │ PUBLIC → ABSENT
        │       │
        │       └── • skip PUBLIC → ABSENT operations
        │             rule: "skip index-column removal ops on index removal"
        │
        └── • 8 Mutation operations
            │
            ├── • RemoveDroppedIndexPartialPredicate
            │     IndexID: 2
            │     TableID: 106
            │
            ├── • SetIndexName
            │     IndexID: 2
            │     Name: crdb_internal_index_2_name_placeholder
            │     TableID: 106
            │
            ├── • RemoveDroppedIndexPartialPredicate
            │     IndexID: 3
            │     TableID: 106
            │
            ├── • MakeIndexAbsent
            │     IndexID: 2
            │     TableID: 106
            │
            ├── • CreateGCJobForIndex
            │     IndexID: 2
            │     StatementForDropJob:
            │       Rollback: true
            │       Statement: CREATE INDEX idx1 ON defaultdb.public.t (v) WHERE (v = 'a')
            │     TableID: 106
            │
            ├── • MakeIndexAbsent
            │     IndexID: 3
            │     TableID: 106
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 106
            │     JobID: 1
            │
            └── • UpdateSchemaChangerJob
                  DescriptorIDsToRemove:
                  - 106
                  IsNonCancelable: true
                  JobID: 1
                  RunningStatus: all stages completed
