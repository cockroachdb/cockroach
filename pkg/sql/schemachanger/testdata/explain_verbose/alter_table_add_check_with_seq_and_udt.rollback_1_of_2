/* setup */
CREATE SEQUENCE s;
CREATE TYPE typ AS ENUM ('a', 'b');
CREATE TABLE t (i INT PRIMARY KEY, j STRING);

/* test */
ALTER TABLE t ADD CHECK (i > nextval('s') OR j::typ = 'a');
EXPLAIN (ddl, verbose) rollback at post-commit stage 1 of 2;
----
• Schema change plan for rolling back ALTER TABLE ‹defaultdb›.public.‹t› ADD CHECK ((‹i› > nextval(‹'s'›)) OR (‹j›::‹typ› = ‹'a'›));
│
└── • PostCommitNonRevertiblePhase
    │
    └── • Stage 1 of 1 in PostCommitNonRevertiblePhase
        │
        ├── • 1 element transitioning toward ABSENT
        │   │
        │   └── • CheckConstraint:{DescID: 107, ReferencedTypeIDs: [105 106], IndexID: 0, ConstraintID: 2, ReferencedSequenceIDs: [104]}
        │       │ WRITE_ONLY → ABSENT
        │       │
        │       ├── • PreviousStagePrecedence dependency from WRITE_ONLY CheckConstraint:{DescID: 107, ReferencedTypeIDs: [105 106], IndexID: 0, ConstraintID: 2, ReferencedSequenceIDs: [104]}
        │       │     rule: "CheckConstraint transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->VALIDATED"
        │       │
        │       └── • Precedence dependency from ABSENT ConstraintWithoutIndexName:{DescID: 107, Name: check_i_j, ConstraintID: 2}
        │             rule: "dependents removed before constraint"
        │
        └── • 8 Mutation operations
            │
            ├── • RemoveCheckConstraint
            │     ConstraintID: 2
            │     TableID: 107
            │
            ├── • UpdateTableBackReferencesInTypes
            │     BackReferencedTableID: 107
            │     TypeIDs:
            │     - 105
            │     - 106
            │
            ├── • UpdateTableBackReferencesInSequences
            │     BackReferencedTableID: 107
            │     SequenceIDs:
            │     - 104
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 104
            │     JobID: 1
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 105
            │     JobID: 1
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 106
            │     JobID: 1
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 107
            │     JobID: 1
            │
            └── • UpdateSchemaChangerJob
                  DescriptorIDsToRemove:
                  - 104
                  - 105
                  - 106
                  - 107
                  IsNonCancelable: true
                  JobID: 1
                  RunningStatus: all stages completed
