/* setup */
CREATE DATABASE db;
CREATE SCHEMA db.sc;

/* test */
EXPLAIN (ddl, verbose) DROP SCHEMA db.sc;
----
• Schema change plan for DROP SCHEMA ‹db›.‹sc›; 
│
├── • StatementPhase
│   │
│   └── • Stage 1 of 1 in StatementPhase
│       │
│       ├── • 1 element transitioning toward ABSENT
│       │   │
│       │   └── • Schema:{DescID: 106}
│       │         PUBLIC → TXN_DROPPED
│       │
│       └── • 1 Mutation operation
│           │
│           └── • MarkDescriptorAsSyntheticallyDropped
│                 DescriptorID: 106
│
├── • PreCommitPhase
│   │
│   └── • Stage 1 of 1 in PreCommitPhase
│       │
│       ├── • 6 elements transitioning toward ABSENT
│       │   │
│       │   ├── • Namespace:{DescID: 106, Name: sc, ReferencedDescID: 104}
│       │   │   │ PUBLIC → ABSENT
│       │   │   │
│       │   │   └── • SameStagePrecedence dependency from DROPPED Schema:{DescID: 106}
│       │   │         rule: "descriptor drop right before dependent element removal"
│       │   │
│       │   ├── • Owner:{DescID: 106}
│       │   │   │ PUBLIC → ABSENT
│       │   │   │
│       │   │   ├── • SameStagePrecedence dependency from DROPPED Schema:{DescID: 106}
│       │   │   │     rule: "descriptor drop right before dependent element removal"
│       │   │   │
│       │   │   └── • skip PUBLIC → ABSENT operations
│       │   │         rule: "skip element removal ops on descriptor drop"
│       │   │
│       │   ├── • UserPrivileges:{DescID: 106, Name: admin}
│       │   │   │ PUBLIC → ABSENT
│       │   │   │
│       │   │   ├── • SameStagePrecedence dependency from DROPPED Schema:{DescID: 106}
│       │   │   │     rule: "descriptor drop right before dependent element removal"
│       │   │   │
│       │   │   └── • skip PUBLIC → ABSENT operations
│       │   │         rule: "skip element removal ops on descriptor drop"
│       │   │
│       │   ├── • UserPrivileges:{DescID: 106, Name: root}
│       │   │   │ PUBLIC → ABSENT
│       │   │   │
│       │   │   ├── • SameStagePrecedence dependency from DROPPED Schema:{DescID: 106}
│       │   │   │     rule: "descriptor drop right before dependent element removal"
│       │   │   │
│       │   │   └── • skip PUBLIC → ABSENT operations
│       │   │         rule: "skip element removal ops on descriptor drop"
│       │   │
│       │   ├── • Schema:{DescID: 106}
│       │   │   │ TXN_DROPPED → DROPPED
│       │   │   │
│       │   │   └── • PreviousStagePrecedence dependency from TXN_DROPPED Schema:{DescID: 106}
│       │   │         rule: "descriptor TXN_DROPPED before DROPPED"
│       │   │
│       │   └── • SchemaParent:{DescID: 106, ReferencedDescID: 104}
│       │       │ PUBLIC → ABSENT
│       │       │
│       │       └── • SameStagePrecedence dependency from DROPPED Schema:{DescID: 106}
│       │             rule: "descriptor drop right before dependent element removal"
│       │
│       └── • 6 Mutation operations
│           │
│           ├── • MarkDescriptorAsDropped
│           │     DescriptorID: 106
│           │
│           ├── • RemoveSchemaParent
│           │     Parent:
│           │       ParentDatabaseID: 104
│           │       SchemaID: 106
│           │
│           ├── • DrainDescriptorName
│           │     Namespace:
│           │       DatabaseID: 104
│           │       DescriptorID: 106
│           │       Name: sc
│           │
│           ├── • SetJobStateOnDescriptor
│           │     DescriptorID: 104
│           │     Initialize: true
│           │
│           ├── • SetJobStateOnDescriptor
│           │     DescriptorID: 106
│           │     Initialize: true
│           │
│           └── • CreateSchemaChangerJob
│                 Authorization:
│                   UserName: root
│                 DescriptorIDs:
│                 - 104
│                 - 106
│                 JobID: 1
│                 NonCancelable: true
│                 RunningStatus: PostCommitNonRevertiblePhase stage 1 of 1 with 2 MutationType ops pending
│                 Statements:
│                 - statement: DROP SCHEMA db.sc
│                   redactedstatement: DROP SCHEMA ‹db›.‹sc›
│                   statementtag: DROP SCHEMA
│
└── • PostCommitNonRevertiblePhase
    │
    └── • Stage 1 of 1 in PostCommitNonRevertiblePhase
        │
        ├── • 1 element transitioning toward ABSENT
        │   │
        │   └── • Schema:{DescID: 106}
        │       │ DROPPED → ABSENT
        │       │
        │       └── • PreviousTransactionPrecedence dependency from DROPPED Schema:{DescID: 106}
        │             rule: "descriptor DROPPED in transaction before removal"
        │
        └── • 5 Mutation operations
            │
            ├── • LogEvent
            │     Element:
            │       Schema:
            │         schemaId: 106
            │     EventBase:
            │       Authorization:
            │         UserName: root
            │       Statement: DROP SCHEMA ‹db›.‹sc›
            │       StatementTag: DROP SCHEMA
            │       TargetMetadata:
            │         SourceElementID: 1
            │         SubWorkID: 1
            │     TargetStatus: 1
            │
            ├── • DeleteDescriptor
            │     DescriptorID: 106
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 104
            │     JobID: 1
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 106
            │     JobID: 1
            │
            └── • UpdateSchemaChangerJob
                  DescriptorIDsToRemove:
                  - 104
                  - 106
                  IsNonCancelable: true
                  JobID: 1
                  RunningStatus: all stages completed
