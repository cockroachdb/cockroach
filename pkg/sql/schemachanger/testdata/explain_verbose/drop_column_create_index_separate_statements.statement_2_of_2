/* setup */
CREATE TABLE t (i INT PRIMARY KEY, j INT, k INT DEFAULT 32 ON UPDATE 42, INDEX((j+1), k));

/* test */
ALTER TABLE t DROP COLUMN j CASCADE;
EXPLAIN (ddl, verbose) CREATE UNIQUE INDEX idx ON t(k);
----
• Schema change plan for ALTER TABLE ‹defaultdb›.‹public›.‹t› DROP COLUMN ‹j› CASCADE; CREATE UNIQUE INDEX ‹idx› ON ‹defaultdb›.‹public›.‹t› (‹k›); 
│
├── • PreCommitPhase
│   │
│   └── • Stage 1 of 1 in PreCommitPhase
│       │
│       └── • 2 Mutation operations
│           │
│           ├── • SetJobStateOnDescriptor
│           │     DescriptorID: 104
│           │     Initialize: true
│           │
│           └── • CreateSchemaChangerJob
│                 Authorization:
│                   UserName: root
│                 DescriptorIDs:
│                 - 104
│                 JobID: 1
│                 RunningStatus: PostCommitPhase stage 1 of 15 with 1 MutationType op pending
│                 Statements:
│                 - statement: ALTER TABLE t DROP COLUMN j CASCADE
│                   redactedstatement: ALTER TABLE ‹defaultdb›.‹public›.‹t› DROP COLUMN ‹j› CASCADE
│                   statementtag: ALTER TABLE
│                 - statement: CREATE UNIQUE INDEX idx ON t (k)
│                   redactedstatement: CREATE UNIQUE INDEX ‹idx› ON ‹defaultdb›.‹public›.‹t› (‹k›)
│                   statementtag: CREATE INDEX
│
├── • PostCommitPhase
│   │
│   ├── • Stage 1 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward TRANSIENT_ABSENT
│   │   │   │
│   │   │   └── • TemporaryIndex:{DescID: 104, IndexID: 4, SourceIndexID: 1}
│   │   │       │ DELETE_ONLY → WRITE_ONLY
│   │   │       │
│   │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 4}
│   │   │       │     rule: "index-column added to index before temp index receives writes"
│   │   │       │
│   │   │       └── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 4}
│   │   │             rule: "index-column added to index before temp index receives writes"
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeAddedIndexDeleteAndWriteOnly
│   │       │     IndexID: 4
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 2 of 15 with 1 BackfillType op pending
│   │
│   ├── • Stage 2 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • PrimaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, TemporaryIndexID: 4, SourceIndexID: 1}
│   │   │       │ BACKFILL_ONLY → BACKFILLED
│   │   │       │
│   │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}
│   │   │       │     rule: "index-column added to index before index is backfilled"
│   │   │       │
│   │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 3}
│   │   │       │     rule: "index-column added to index before index is backfilled"
│   │   │       │
│   │   │       └── • Precedence dependency from WRITE_ONLY TemporaryIndex:{DescID: 104, IndexID: 4, SourceIndexID: 1}
│   │   │             rule: "temp index is WRITE_ONLY before backfill"
│   │   │
│   │   └── • 1 Backfill operation
│   │       │
│   │       └── • BackfillIndex
│   │             IndexID: 3
│   │             SourceIndexID: 1
│   │             TableID: 104
│   │
│   ├── • Stage 3 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • PrimaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, TemporaryIndexID: 4, SourceIndexID: 1}
│   │   │         BACKFILLED → DELETE_ONLY
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeBackfillingIndexDeleteOnly
│   │       │     IndexID: 3
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 4 of 15 with 1 MutationType op pending
│   │
│   ├── • Stage 4 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • PrimaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, TemporaryIndexID: 4, SourceIndexID: 1}
│   │   │         DELETE_ONLY → MERGE_ONLY
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeBackfilledIndexMerging
│   │       │     IndexID: 3
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 5 of 15 with 1 BackfillType op pending
│   │
│   ├── • Stage 5 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • PrimaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, TemporaryIndexID: 4, SourceIndexID: 1}
│   │   │         MERGE_ONLY → MERGED
│   │   │
│   │   └── • 1 Backfill operation
│   │       │
│   │       └── • MergeIndex
│   │             BackfilledIndexID: 3
│   │             TableID: 104
│   │             TemporaryIndexID: 4
│   │
│   ├── • Stage 6 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • PrimaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, TemporaryIndexID: 4, SourceIndexID: 1}
│   │   │         MERGED → WRITE_ONLY
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeMergedIndexWriteOnly
│   │       │     IndexID: 3
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 7 of 15 with 1 ValidationType op pending
│   │
│   ├── • Stage 7 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • PrimaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, TemporaryIndexID: 4, SourceIndexID: 1}
│   │   │         WRITE_ONLY → VALIDATED
│   │   │
│   │   └── • 1 Validation operation
│   │       │
│   │       └── • ValidateUniqueIndex
│   │             IndexID: 3
│   │             TableID: 104
│   │
│   ├── • Stage 8 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 2 elements transitioning toward ABSENT
│   │   │   │
│   │   │   ├── • PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}
│   │   │   │     PUBLIC → VALIDATED
│   │   │   │
│   │   │   └── • IndexName:{DescID: 104, Name: t_pkey, IndexID: 1}
│   │   │       │ PUBLIC → ABSENT
│   │   │       │
│   │   │       └── • Precedence dependency from VALIDATED PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}
│   │   │             rule: "index no longer public before dependents removed"
│   │   │
│   │   ├── • 7 elements transitioning toward PUBLIC
│   │   │   │
│   │   │   ├── • PrimaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, TemporaryIndexID: 4, SourceIndexID: 1}
│   │   │   │   │ VALIDATED → PUBLIC
│   │   │   │   │
│   │   │   │   ├── • SameStagePrecedence dependency from VALIDATED PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}
│   │   │   │   │     rule: "primary index swap"
│   │   │   │   │
│   │   │   │   └── • SameStagePrecedence dependency from PUBLIC IndexName:{DescID: 104, Name: t_pkey, IndexID: 3}
│   │   │   │         rule: "index named right before index becomes public"
│   │   │   │
│   │   │   ├── • IndexName:{DescID: 104, Name: t_pkey, IndexID: 3}
│   │   │   │   │ ABSENT → PUBLIC
│   │   │   │   │
│   │   │   │   └── • Precedence dependency from BACKFILL_ONLY PrimaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, TemporaryIndexID: 4, SourceIndexID: 1}
│   │   │   │         rule: "index existence precedes index name and comment"
│   │   │   │
│   │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 5}
│   │   │   │   │ ABSENT → PUBLIC
│   │   │   │   │
│   │   │   │   └── • Precedence dependency from BACKFILL_ONLY SecondaryIndex:{DescID: 104, IndexID: 5, ConstraintID: 0, TemporaryIndexID: 6, SourceIndexID: 3}
│   │   │   │         rule: "index-column added to index after index exists"
│   │   │   │
│   │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 5}
│   │   │   │   │ ABSENT → PUBLIC
│   │   │   │   │
│   │   │   │   └── • Precedence dependency from BACKFILL_ONLY SecondaryIndex:{DescID: 104, IndexID: 5, ConstraintID: 0, TemporaryIndexID: 6, SourceIndexID: 3}
│   │   │   │         rule: "index-column added to index after index exists"
│   │   │   │
│   │   │   ├── • SecondaryIndex:{DescID: 104, IndexID: 5, ConstraintID: 0, TemporaryIndexID: 6, SourceIndexID: 3}
│   │   │   │   │ ABSENT → BACKFILL_ONLY
│   │   │   │   │
│   │   │   │   └── • Precedence dependency from PUBLIC PrimaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, TemporaryIndexID: 4, SourceIndexID: 1}
│   │   │   │         rule: "primary index with new columns should exist before secondary indexes"
│   │   │   │
│   │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 6}
│   │   │   │   │ ABSENT → PUBLIC
│   │   │   │   │
│   │   │   │   └── • Precedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 6, SourceIndexID: 3}
│   │   │   │         rule: "temp index exists before columns, partitioning, and partial"
│   │   │   │         rule: "index-column added to index after temp index exists"
│   │   │   │
│   │   │   └── • IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 6}
│   │   │       │ ABSENT → PUBLIC
│   │   │       │
│   │   │       └── • Precedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 6, SourceIndexID: 3}
│   │   │             rule: "temp index exists before columns, partitioning, and partial"
│   │   │             rule: "index-column added to index after temp index exists"
│   │   │
│   │   ├── • 1 element transitioning toward TRANSIENT_ABSENT
│   │   │   │
│   │   │   └── • TemporaryIndex:{DescID: 104, IndexID: 6, SourceIndexID: 3}
│   │   │       │ ABSENT → DELETE_ONLY
│   │   │       │
│   │   │       └── • Precedence dependency from PUBLIC PrimaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, TemporaryIndexID: 4, SourceIndexID: 1}
│   │   │             rule: "primary index with new columns should exist before temp indexes"
│   │   │
│   │   └── • 12 Mutation operations
│   │       │
│   │       ├── • MakeDroppedPrimaryIndexDeleteAndWriteOnly
│   │       │     IndexID: 1
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetIndexName
│   │       │     IndexID: 1
│   │       │     Name: crdb_internal_index_1_name_placeholder
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetIndexName
│   │       │     IndexID: 3
│   │       │     Name: t_pkey
│   │       │     TableID: 104
│   │       │
│   │       ├── • MakeAddedPrimaryIndexPublic
│   │       │     EventBase:
│   │       │       Authorization:
│   │       │         UserName: root
│   │       │       Statement: ALTER TABLE ‹defaultdb›.‹public›.‹t› DROP COLUMN ‹j› CASCADE
│   │       │       StatementTag: ALTER TABLE
│   │       │       TargetMetadata:
│   │       │         SourceElementID: 1
│   │       │         SubWorkID: 1
│   │       │     IndexID: 3
│   │       │     TableID: 104
│   │       │
│   │       ├── • MakeAddedIndexBackfilling
│   │       │     Index:
│   │       │       IndexID: 5
│   │       │       IsUnique: true
│   │       │       SourceIndexID: 3
│   │       │       TableID: 104
│   │       │       TemporaryIndexID: 6
│   │       │     IsSecondaryIndex: true
│   │       │
│   │       ├── • MakeAddedTempIndexDeleteOnly
│   │       │     Index:
│   │       │       IndexID: 6
│   │       │       IsUnique: true
│   │       │       SourceIndexID: 3
│   │       │       TableID: 104
│   │       │     IsSecondaryIndex: true
│   │       │
│   │       ├── • AddColumnToIndex
│   │       │     ColumnID: 3
│   │       │     IndexID: 6
│   │       │     TableID: 104
│   │       │
│   │       ├── • AddColumnToIndex
│   │       │     ColumnID: 1
│   │       │     IndexID: 6
│   │       │     Kind: 1
│   │       │     TableID: 104
│   │       │
│   │       ├── • AddColumnToIndex
│   │       │     ColumnID: 3
│   │       │     IndexID: 5
│   │       │     TableID: 104
│   │       │
│   │       ├── • AddColumnToIndex
│   │       │     ColumnID: 1
│   │       │     IndexID: 5
│   │       │     Kind: 1
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 9 of 15 with 1 MutationType op pending
│   │
│   ├── • Stage 9 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward TRANSIENT_ABSENT
│   │   │   │
│   │   │   └── • TemporaryIndex:{DescID: 104, IndexID: 6, SourceIndexID: 3}
│   │   │       │ DELETE_ONLY → WRITE_ONLY
│   │   │       │
│   │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 6}
│   │   │       │     rule: "index-column added to index before temp index receives writes"
│   │   │       │
│   │   │       └── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 6}
│   │   │             rule: "index-column added to index before temp index receives writes"
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeAddedIndexDeleteAndWriteOnly
│   │       │     IndexID: 6
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 10 of 15 with 1 BackfillType op pending
│   │
│   ├── • Stage 10 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 5, ConstraintID: 0, TemporaryIndexID: 6, SourceIndexID: 3}
│   │   │       │ BACKFILL_ONLY → BACKFILLED
│   │   │       │
│   │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 5}
│   │   │       │     rule: "index-column added to index before index is backfilled"
│   │   │       │
│   │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 5}
│   │   │       │     rule: "index-column added to index before index is backfilled"
│   │   │       │
│   │   │       └── • Precedence dependency from WRITE_ONLY TemporaryIndex:{DescID: 104, IndexID: 6, SourceIndexID: 3}
│   │   │             rule: "temp index is WRITE_ONLY before backfill"
│   │   │
│   │   └── • 1 Backfill operation
│   │       │
│   │       └── • BackfillIndex
│   │             IndexID: 5
│   │             SourceIndexID: 3
│   │             TableID: 104
│   │
│   ├── • Stage 11 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 5, ConstraintID: 0, TemporaryIndexID: 6, SourceIndexID: 3}
│   │   │         BACKFILLED → DELETE_ONLY
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeBackfillingIndexDeleteOnly
│   │       │     IndexID: 5
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 12 of 15 with 1 MutationType op pending
│   │
│   ├── • Stage 12 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 5, ConstraintID: 0, TemporaryIndexID: 6, SourceIndexID: 3}
│   │   │         DELETE_ONLY → MERGE_ONLY
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeBackfilledIndexMerging
│   │       │     IndexID: 5
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 13 of 15 with 1 BackfillType op pending
│   │
│   ├── • Stage 13 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 5, ConstraintID: 0, TemporaryIndexID: 6, SourceIndexID: 3}
│   │   │         MERGE_ONLY → MERGED
│   │   │
│   │   └── • 1 Backfill operation
│   │       │
│   │       └── • MergeIndex
│   │             BackfilledIndexID: 5
│   │             TableID: 104
│   │             TemporaryIndexID: 6
│   │
│   ├── • Stage 14 of 15 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 5, ConstraintID: 0, TemporaryIndexID: 6, SourceIndexID: 3}
│   │   │         MERGED → WRITE_ONLY
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeMergedIndexWriteOnly
│   │       │     IndexID: 5
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 15 of 15 with 1 ValidationType op pending
│   │
│   └── • Stage 15 of 15 in PostCommitPhase
│       │
│       ├── • 1 element transitioning toward PUBLIC
│       │   │
│       │   └── • SecondaryIndex:{DescID: 104, IndexID: 5, ConstraintID: 0, TemporaryIndexID: 6, SourceIndexID: 3}
│       │         WRITE_ONLY → VALIDATED
│       │
│       └── • 1 Validation operation
│           │
│           └── • ValidateUniqueIndex
│                 IndexID: 5
│                 TableID: 104
│
└── • PostCommitNonRevertiblePhase
    │
    ├── • Stage 1 of 2 in PostCommitNonRevertiblePhase
    │   │
    │   ├── • 10 elements transitioning toward ABSENT
    │   │   │
    │   │   ├── • Column:{DescID: 104, ColumnID: 2}
    │   │   │     WRITE_ONLY → DELETE_ONLY
    │   │   │
    │   │   ├── • Column:{DescID: 104, ColumnID: 4}
    │   │   │     WRITE_ONLY → DELETE_ONLY
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 1}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from VALIDATED PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}
    │   │   │         rule: "index no longer public before dependents removed"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 1}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from VALIDATED PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}
    │   │   │         rule: "index no longer public before dependents removed"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 1}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from VALIDATED PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}
    │   │   │         rule: "index no longer public before dependents removed"
    │   │   │
    │   │   ├── • PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}
    │   │   │     VALIDATED → DELETE_ONLY
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 4, IndexID: 2}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   ├── • Precedence dependency from DELETE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
    │   │   │   │     rule: "secondary index in DELETE_ONLY before removing columns"
    │   │   │   │
    │   │   │   └── • Precedence dependency from VALIDATED SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
    │   │   │         rule: "index no longer public before dependents removed"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 2}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   ├── • Precedence dependency from DELETE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
    │   │   │   │     rule: "secondary index in DELETE_ONLY before removing columns"
    │   │   │   │
    │   │   │   └── • Precedence dependency from VALIDATED SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
    │   │   │         rule: "index no longer public before dependents removed"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   ├── • Precedence dependency from DELETE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
    │   │   │   │     rule: "secondary index in DELETE_ONLY before removing columns"
    │   │   │   │
    │   │   │   └── • Precedence dependency from VALIDATED SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
    │   │   │         rule: "index no longer public before dependents removed"
    │   │   │
    │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
    │   │         VALIDATED → DELETE_ONLY
    │   │
    │   ├── • 2 elements transitioning toward PUBLIC
    │   │   │
    │   │   ├── • SecondaryIndex:{DescID: 104, IndexID: 5, ConstraintID: 0, TemporaryIndexID: 6, SourceIndexID: 3}
    │   │   │   │ VALIDATED → PUBLIC
    │   │   │   │
    │   │   │   └── • SameStagePrecedence dependency from PUBLIC IndexName:{DescID: 104, Name: idx, IndexID: 5}
    │   │   │         rule: "index named right before index becomes public"
    │   │   │
    │   │   └── • IndexName:{DescID: 104, Name: idx, IndexID: 5}
    │   │       │ ABSENT → PUBLIC
    │   │       │
    │   │       └── • Precedence dependency from BACKFILL_ONLY SecondaryIndex:{DescID: 104, IndexID: 5, ConstraintID: 0, TemporaryIndexID: 6, SourceIndexID: 3}
    │   │             rule: "index existence precedes index name and comment"
    │   │
    │   ├── • 2 elements transitioning toward TRANSIENT_ABSENT
    │   │   │
    │   │   ├── • TemporaryIndex:{DescID: 104, IndexID: 4, SourceIndexID: 1}
    │   │   │     WRITE_ONLY → TRANSIENT_DELETE_ONLY
    │   │   │
    │   │   └── • TemporaryIndex:{DescID: 104, IndexID: 6, SourceIndexID: 3}
    │   │         WRITE_ONLY → TRANSIENT_DELETE_ONLY
    │   │
    │   └── • 16 Mutation operations
    │       │
    │       ├── • MakeDroppedColumnDeleteOnly
    │       │     ColumnID: 2
    │       │     TableID: 104
    │       │
    │       ├── • MakeDroppedColumnDeleteOnly
    │       │     ColumnID: 4
    │       │     TableID: 104
    │       │
    │       ├── • RemoveColumnFromIndex
    │       │     ColumnID: 1
    │       │     IndexID: 1
    │       │     TableID: 104
    │       │
    │       ├── • RemoveColumnFromIndex
    │       │     ColumnID: 2
    │       │     IndexID: 1
    │       │     Kind: 2
    │       │     TableID: 104
    │       │
    │       ├── • RemoveColumnFromIndex
    │       │     ColumnID: 3
    │       │     IndexID: 1
    │       │     Kind: 2
    │       │     Ordinal: 1
    │       │     TableID: 104
    │       │
    │       ├── • MakeDroppedIndexDeleteOnly
    │       │     IndexID: 4
    │       │     TableID: 104
    │       │
    │       ├── • SetIndexName
    │       │     IndexID: 5
    │       │     Name: idx
    │       │     TableID: 104
    │       │
    │       ├── • MakeDroppedIndexDeleteOnly
    │       │     IndexID: 6
    │       │     TableID: 104
    │       │
    │       ├── • MakeDroppedIndexDeleteOnly
    │       │     IndexID: 1
    │       │     TableID: 104
    │       │
    │       ├── • MakeDroppedIndexDeleteOnly
    │       │     IndexID: 2
    │       │     TableID: 104
    │       │
    │       ├── • MakeAddedSecondaryIndexPublic
    │       │     IndexID: 5
    │       │     TableID: 104
    │       │
    │       ├── • RemoveColumnFromIndex
    │       │     ColumnID: 4
    │       │     IndexID: 2
    │       │     TableID: 104
    │       │
    │       ├── • RemoveColumnFromIndex
    │       │     ColumnID: 3
    │       │     IndexID: 2
    │       │     Ordinal: 1
    │       │     TableID: 104
    │       │
    │       ├── • RemoveColumnFromIndex
    │       │     ColumnID: 1
    │       │     IndexID: 2
    │       │     Kind: 1
    │       │     TableID: 104
    │       │
    │       ├── • SetJobStateOnDescriptor
    │       │     DescriptorID: 104
    │       │
    │       └── • UpdateSchemaChangerJob
    │             IsNonCancelable: true
    │             JobID: 1
    │             RunningStatus: PostCommitNonRevertiblePhase stage 2 of 2 with 11 MutationType ops
    │               pending
    │
    └── • Stage 2 of 2 in PostCommitNonRevertiblePhase
        │
        ├── • 6 elements transitioning toward ABSENT
        │   │
        │   ├── • Column:{DescID: 104, ColumnID: 2}
        │   │   │ DELETE_ONLY → ABSENT
        │   │   │
        │   │   ├── • SameStagePrecedence dependency from ABSENT ColumnType:{DescID: 104, ColumnFamilyID: 0, ColumnID: 2}
        │   │   │     rule: "dependents removed before column"
        │   │   │     rule: "column type removed right before column when not dropping relation"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}
        │   │   │     rule: "indexes containing columns reach absent before column"
        │   │   │
        │   │   └── • Precedence dependency from ABSENT ColumnName:{DescID: 104, Name: j, ColumnID: 2}
        │   │         rule: "dependents removed before column"
        │   │
        │   ├── • ColumnType:{DescID: 104, ColumnFamilyID: 0, ColumnID: 2}
        │   │   │ PUBLIC → ABSENT
        │   │   │
        │   │   └── • Precedence dependency from WRITE_ONLY Column:{DescID: 104, ColumnID: 2}
        │   │         rule: "column dependents removed after column no longer public"
        │   │
        │   ├── • Column:{DescID: 104, ColumnID: 4}
        │   │   │ DELETE_ONLY → ABSENT
        │   │   │
        │   │   ├── • SameStagePrecedence dependency from ABSENT ColumnType:{DescID: 104, ColumnFamilyID: 0, ColumnID: 4}
        │   │   │     rule: "dependents removed before column"
        │   │   │     rule: "column type removed right before column when not dropping relation"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
        │   │   │     rule: "indexes containing columns reach absent before column"
        │   │   │
        │   │   └── • Precedence dependency from ABSENT ColumnName:{DescID: 104, Name: crdb_internal_idx_expr, ColumnID: 4}
        │   │         rule: "dependents removed before column"
        │   │
        │   ├── • ColumnType:{DescID: 104, ColumnFamilyID: 0, ColumnID: 4}
        │   │   │ PUBLIC → ABSENT
        │   │   │
        │   │   └── • Precedence dependency from WRITE_ONLY Column:{DescID: 104, ColumnID: 4}
        │   │         rule: "column dependents removed after column no longer public"
        │   │
        │   ├── • PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}
        │   │   │ DELETE_ONLY → ABSENT
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 1}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 1}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 1}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexName:{DescID: 104, Name: t_pkey, IndexID: 1}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • SameStagePrecedence dependency from TRANSIENT_ABSENT TemporaryIndex:{DescID: 104, IndexID: 4, SourceIndexID: 1}
        │   │   │     rule: "temp indexes reach absent at the same time as other indexes"
        │   │   │
        │   │   └── • SameStagePrecedence dependency from TRANSIENT_ABSENT TemporaryIndex:{DescID: 104, IndexID: 6, SourceIndexID: 3}
        │   │         rule: "temp indexes reach absent at the same time as other indexes"
        │   │
        │   └── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
        │       │ DELETE_ONLY → ABSENT
        │       │
        │       ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 4, IndexID: 2}
        │       │     rule: "secondary index columns removed before removing the index"
        │       │     rule: "dependents removed before index"
        │       │
        │       ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 2}
        │       │     rule: "secondary index columns removed before removing the index"
        │       │     rule: "dependents removed before index"
        │       │
        │       ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}
        │       │     rule: "secondary index columns removed before removing the index"
        │       │     rule: "dependents removed before index"
        │       │
        │       ├── • Precedence dependency from ABSENT IndexName:{DescID: 104, Name: t_expr_k_idx, IndexID: 2}
        │       │     rule: "dependents removed before index"
        │       │
        │       ├── • SameStagePrecedence dependency from TRANSIENT_ABSENT TemporaryIndex:{DescID: 104, IndexID: 4, SourceIndexID: 1}
        │       │     rule: "temp indexes reach absent at the same time as other indexes"
        │       │
        │       └── • SameStagePrecedence dependency from TRANSIENT_ABSENT TemporaryIndex:{DescID: 104, IndexID: 6, SourceIndexID: 3}
        │             rule: "temp indexes reach absent at the same time as other indexes"
        │
        ├── • 2 elements transitioning toward TRANSIENT_ABSENT
        │   │
        │   ├── • TemporaryIndex:{DescID: 104, IndexID: 4, SourceIndexID: 1}
        │   │     TRANSIENT_DELETE_ONLY → TRANSIENT_ABSENT
        │   │
        │   └── • TemporaryIndex:{DescID: 104, IndexID: 6, SourceIndexID: 3}
        │         TRANSIENT_DELETE_ONLY → TRANSIENT_ABSENT
        │
        └── • 13 Mutation operations
            │
            ├── • CreateGcJobForIndex
            │     IndexID: 4
            │     TableID: 104
            │
            ├── • MakeIndexAbsent
            │     IndexID: 4
            │     TableID: 104
            │
            ├── • CreateGcJobForIndex
            │     IndexID: 6
            │     TableID: 104
            │
            ├── • MakeIndexAbsent
            │     IndexID: 6
            │     TableID: 104
            │
            ├── • CreateGcJobForIndex
            │     IndexID: 1
            │     StatementForDropJob:
            │       Statement: ALTER TABLE defaultdb.public.t DROP COLUMN j CASCADE
            │     TableID: 104
            │
            ├── • MakeIndexAbsent
            │     EventBase:
            │       Authorization:
            │         UserName: root
            │       Statement: ALTER TABLE ‹defaultdb›.‹public›.‹t› DROP COLUMN ‹j› CASCADE
            │       StatementTag: ALTER TABLE
            │       TargetMetadata:
            │         SourceElementID: 1
            │         SubWorkID: 1
            │     IndexID: 1
            │     TableID: 104
            │
            ├── • LogEvent
            │     Element:
            │       SecondaryIndex:
            │         indexId: 2
            │         tableId: 104
            │     EventBase:
            │       Authorization:
            │         UserName: root
            │       Statement: ALTER TABLE ‹defaultdb›.‹public›.‹t› DROP COLUMN ‹j› CASCADE
            │       StatementTag: ALTER TABLE
            │       TargetMetadata:
            │         SourceElementID: 1
            │         SubWorkID: 1
            │     TargetStatus: 1
            │
            ├── • CreateGcJobForIndex
            │     IndexID: 2
            │     StatementForDropJob:
            │       Statement: ALTER TABLE defaultdb.public.t DROP COLUMN j CASCADE
            │     TableID: 104
            │
            ├── • MakeIndexAbsent
            │     IndexID: 2
            │     TableID: 104
            │
            ├── • MakeColumnAbsent
            │     ColumnID: 2
            │     EventBase:
            │       Authorization:
            │         UserName: root
            │       Statement: ALTER TABLE ‹defaultdb›.‹public›.‹t› DROP COLUMN ‹j› CASCADE
            │       StatementTag: ALTER TABLE
            │       TargetMetadata:
            │         SourceElementID: 1
            │         SubWorkID: 1
            │     TableID: 104
            │
            ├── • MakeColumnAbsent
            │     ColumnID: 4
            │     EventBase:
            │       Authorization:
            │         UserName: root
            │       Statement: ALTER TABLE ‹defaultdb›.‹public›.‹t› DROP COLUMN ‹j› CASCADE
            │       StatementTag: ALTER TABLE
            │       TargetMetadata:
            │         SourceElementID: 1
            │         SubWorkID: 1
            │     TableID: 104
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 104
            │     JobID: 1
            │
            └── • UpdateSchemaChangerJob
                  IsNonCancelable: true
                  JobID: 1
                  RunningStatus: all stages completed
