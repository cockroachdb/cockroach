/* setup */
CREATE TABLE t (a INT PRIMARY KEY, b INT NOT NULL);

/* test */
CREATE FUNCTION t() RETURNS INT LANGUAGE SQL AS $$ SELECT 1 $$;
CREATE UNIQUE INDEX idx ON t(b);
EXPLAIN (ddl, verbose) rollback at post-commit stage 6 of 7;
----
• Schema change plan for rolling back CREATE UNIQUE INDEX ‹idx› ON ‹defaultdb›.public.‹t› (‹b›); following CREATE FUNCTION ‹defaultdb›.‹public›.‹t›()
│ 	RETURNS INT8
│ 	LANGUAGE SQL
│ 	AS $$SELECT ‹1›;$$;
│
└── • PostCommitNonRevertiblePhase
    │
    ├── • Stage 1 of 2 in PostCommitNonRevertiblePhase
    │   │
    │   ├── • 14 elements transitioning toward ABSENT
    │   │   │
    │   │   ├── • Owner:{DescID: 105}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from DROPPED Function:{DescID: 105}
    │   │   │         rule: "descriptor dropped before dependent element removal"
    │   │   │
    │   │   ├── • UserPrivileges:{DescID: 105, Name: admin}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from DROPPED Function:{DescID: 105}
    │   │   │         rule: "descriptor dropped before dependent element removal"
    │   │   │
    │   │   ├── • UserPrivileges:{DescID: 105, Name: root}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from DROPPED Function:{DescID: 105}
    │   │   │         rule: "descriptor dropped before dependent element removal"
    │   │   │
    │   │   ├── • Function:{DescID: 105}
    │   │   │     DESCRIPTOR_ADDED → DROPPED
    │   │   │
    │   │   ├── • SchemaChild:{DescID: 105, ReferencedDescID: 101}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • SameStagePrecedence dependency from DROPPED Function:{DescID: 105}
    │   │   │         rule: "descriptor dropped before dependent element removal"
    │   │   │         rule: "descriptor dropped right before removing back-reference in its parent descriptor"
    │   │   │
    │   │   ├── • FunctionName:{DescID: 105}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from DROPPED Function:{DescID: 105}
    │   │   │         rule: "descriptor dropped before dependent element removal"
    │   │   │
    │   │   ├── • FunctionBody:{DescID: 105}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from DROPPED Function:{DescID: 105}
    │   │   │         rule: "descriptor dropped before dependent element removal"
    │   │   │
    │   │   ├── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 2, TemporaryIndexID: 3, SourceIndexID: 1}
    │   │   │   │ MERGE_ONLY → DELETE_ONLY
    │   │   │   │
    │   │   │   └── • PreviousStagePrecedence dependency from MERGE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 2, TemporaryIndexID: 3, SourceIndexID: 1}
    │   │   │         rule: "SecondaryIndex transitions to ABSENT uphold 2-version invariant: MERGE_ONLY->WRITE_ONLY"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 2}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from DELETE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 2, TemporaryIndexID: 3, SourceIndexID: 1}
    │   │   │         rule: "index drop mutation visible before cleaning up index columns"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from DELETE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 2, TemporaryIndexID: 3, SourceIndexID: 1}
    │   │   │         rule: "index drop mutation visible before cleaning up index columns"
    │   │   │
    │   │   ├── • IndexName:{DescID: 104, Name: idx, IndexID: 2}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from DELETE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 2, TemporaryIndexID: 3, SourceIndexID: 1}
    │   │   │         rule: "index no longer public before index name"
    │   │   │
    │   │   ├── • TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 3, SourceIndexID: 1}
    │   │   │   │ WRITE_ONLY → DELETE_ONLY
    │   │   │   │
    │   │   │   └── • PreviousStagePrecedence dependency from WRITE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 3, SourceIndexID: 1}
    │   │   │         rule: "TemporaryIndex transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->DELETE_ONLY"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 3}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • Precedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 3, SourceIndexID: 1}
    │   │   │         rule: "index drop mutation visible before cleaning up index columns"
    │   │   │
    │   │   └── • IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}
    │   │       │ PUBLIC → ABSENT
    │   │       │
    │   │       └── • Precedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 3, SourceIndexID: 1}
    │   │             rule: "index drop mutation visible before cleaning up index columns"
    │   │
    │   └── • 16 Mutation operations
    │       │
    │       ├── • MakeWriteOnlyIndexDeleteOnly
    │       │     IndexID: 3
    │       │     TableID: 104
    │       │
    │       ├── • RemoveColumnFromIndex
    │       │     ColumnID: 2
    │       │     IndexID: 3
    │       │     TableID: 104
    │       │
    │       ├── • RemoveColumnFromIndex
    │       │     ColumnID: 1
    │       │     IndexID: 3
    │       │     Kind: 1
    │       │     TableID: 104
    │       │
    │       ├── • MarkDescriptorAsDropped
    │       │     DescriptorID: 105
    │       │
    │       ├── • RemoveObjectParent
    │       │     ObjectID: 105
    │       │     ParentSchemaID: 101
    │       │
    │       ├── • NotImplementedForPublicObjects
    │       │     DescID: 105
    │       │     ElementType: scpb.FunctionName
    │       │
    │       ├── • MakeWriteOnlyIndexDeleteOnly
    │       │     IndexID: 2
    │       │     TableID: 104
    │       │
    │       ├── • RemoveColumnFromIndex
    │       │     ColumnID: 2
    │       │     IndexID: 2
    │       │     TableID: 104
    │       │
    │       ├── • RemoveColumnFromIndex
    │       │     ColumnID: 1
    │       │     IndexID: 2
    │       │     Kind: 1
    │       │     TableID: 104
    │       │
    │       ├── • SetIndexName
    │       │     IndexID: 2
    │       │     Name: crdb_internal_index_2_name_placeholder
    │       │     TableID: 104
    │       │
    │       ├── • NotImplementedForPublicObjects
    │       │     DescID: 105
    │       │     ElementType: scpb.Owner
    │       │
    │       ├── • RemoveUserPrivileges
    │       │     DescriptorID: 105
    │       │     User: admin
    │       │
    │       ├── • RemoveUserPrivileges
    │       │     DescriptorID: 105
    │       │     User: root
    │       │
    │       ├── • SetJobStateOnDescriptor
    │       │     DescriptorID: 104
    │       │
    │       ├── • SetJobStateOnDescriptor
    │       │     DescriptorID: 105
    │       │
    │       └── • UpdateSchemaChangerJob
    │             IsNonCancelable: true
    │             JobID: 1
    │             RunningStatus: PostCommitNonRevertiblePhase stage 2 of 2 with 5 MutationType ops pending
    │
    └── • Stage 2 of 2 in PostCommitNonRevertiblePhase
        │
        ├── • 5 elements transitioning toward ABSENT
        │   │
        │   ├── • Function:{DescID: 105}
        │   │   │ DROPPED → ABSENT
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT Owner:{DescID: 105}
        │   │   │     rule: "non-data dependents removed before descriptor"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT UserPrivileges:{DescID: 105, Name: admin}
        │   │   │     rule: "non-data dependents removed before descriptor"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT UserPrivileges:{DescID: 105, Name: root}
        │   │   │     rule: "non-data dependents removed before descriptor"
        │   │   │
        │   │   ├── • PreviousStagePrecedence dependency from DROPPED Function:{DescID: 105}
        │   │   │     rule: "descriptor dropped in transaction before removal"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT SchemaChild:{DescID: 105, ReferencedDescID: 101}
        │   │   │     rule: "non-data dependents removed before descriptor"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT FunctionName:{DescID: 105}
        │   │   │     rule: "non-data dependents removed before descriptor"
        │   │   │
        │   │   └── • Precedence dependency from ABSENT FunctionBody:{DescID: 105}
        │   │         rule: "non-data dependents removed before descriptor"
        │   │
        │   ├── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 2, TemporaryIndexID: 3, SourceIndexID: 1}
        │   │   │ DELETE_ONLY → ABSENT
        │   │   │
        │   │   ├── • PreviousStagePrecedence dependency from DELETE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 2, TemporaryIndexID: 3, SourceIndexID: 1}
        │   │   │     rule: "SecondaryIndex transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 2}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   └── • Precedence dependency from ABSENT IndexName:{DescID: 104, Name: idx, IndexID: 2}
        │   │         rule: "dependents removed before index"
        │   │
        │   ├── • IndexData:{DescID: 104, IndexID: 2}
        │   │   │ PUBLIC → ABSENT
        │   │   │
        │   │   └── • Precedence dependency from ABSENT SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 2, TemporaryIndexID: 3, SourceIndexID: 1}
        │   │         rule: "index removed before garbage collection"
        │   │
        │   ├── • TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 3, SourceIndexID: 1}
        │   │   │ DELETE_ONLY → ABSENT
        │   │   │
        │   │   ├── • PreviousStagePrecedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 3, SourceIndexID: 1}
        │   │   │     rule: "TemporaryIndex transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 3}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   └── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}
        │   │         rule: "dependents removed before index"
        │   │
        │   └── • IndexData:{DescID: 104, IndexID: 3}
        │       │ PUBLIC → ABSENT
        │       │
        │       ├── • SameStagePrecedence dependency from DROPPED IndexData:{DescID: 104, IndexID: 2}
        │       │     rule: "schedule all GC jobs for a descriptor in the same stage"
        │       │
        │       └── • Precedence dependency from ABSENT TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 3, SourceIndexID: 1}
        │             rule: "index removed before garbage collection"
        │
        └── • 8 Mutation operations
            │
            ├── • DeleteDescriptor
            │     DescriptorID: 105
            │
            ├── • MakeIndexAbsent
            │     IndexID: 2
            │     TableID: 104
            │
            ├── • CreateGCJobForIndex
            │     IndexID: 2
            │     StatementForDropJob:
            │       Rollback: true
            │       Statement: CREATE UNIQUE INDEX idx ON defaultdb.public.t (b)
            │       StatementID: 1
            │     TableID: 104
            │
            ├── • MakeIndexAbsent
            │     IndexID: 3
            │     TableID: 104
            │
            ├── • CreateGCJobForIndex
            │     IndexID: 3
            │     StatementForDropJob:
            │       Rollback: true
            │       Statement: CREATE UNIQUE INDEX idx ON defaultdb.public.t (b)
            │       StatementID: 1
            │     TableID: 104
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 104
            │     JobID: 1
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 105
            │     JobID: 1
            │
            └── • UpdateSchemaChangerJob
                  DescriptorIDsToRemove:
                  - 104
                  - 105
                  IsNonCancelable: true
                  JobID: 1
                  RunningStatus: all stages completed
