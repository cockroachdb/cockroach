/* setup */
CREATE TABLE t (i INT PRIMARY KEY, j INT);
CREATE INDEX idx ON t(j) USING HASH;

/* test */
EXPLAIN (ddl) DROP INDEX idx CASCADE;
----
Schema change plan for DROP INDEX ‹defaultdb›.‹public›.‹t›@‹idx› CASCADE; 
 ├── StatementPhase
 │    └── Stage 1 of 1 in StatementPhase
 │         ├── 4 elements transitioning toward ABSENT
 │         │    ├── PUBLIC → WRITE_ONLY Column:{DescID: 104, ColumnID: 3}
 │         │    ├── PUBLIC → ABSENT     ColumnName:{DescID: 104, Name: crdb_internal_j_shard_16, ColumnID: 3}
 │         │    ├── PUBLIC → VALIDATED  SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
 │         │    └── PUBLIC → ABSENT     IndexName:{DescID: 104, Name: idx, IndexID: 2}
 │         └── 5 Mutation operations
 │              ├── MakePublicSecondaryIndexWriteOnly {"IndexID":2,"TableID":104}
 │              ├── SetIndexName {"IndexID":2,"Name":"crdb_internal_in...","TableID":104}
 │              ├── MakePublicColumnWriteOnly {"ColumnID":3,"TableID":104}
 │              ├── LogEvent {"TargetStatus":1}
 │              └── SetColumnName {"ColumnID":3,"Name":"crdb_internal_co...","TableID":104}
 ├── PreCommitPhase
 │    └── Stage 1 of 1 in PreCommitPhase
 │         ├── 5 elements transitioning toward ABSENT
 │         │    ├── PUBLIC → ABSENT IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 2}
 │         │    ├── PUBLIC → ABSENT IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 2}
 │         │    ├── PUBLIC → ABSENT IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}
 │         │    ├── PUBLIC → ABSENT CheckConstraint:{DescID: 104, ConstraintID: 2}
 │         │    └── PUBLIC → ABSENT ConstraintName:{DescID: 104, Name: check_crdb_internal_j_shard_16, ConstraintID: 2}
 │         └── 4 Mutation operations
 │              ├── NotImplemented {"ElementType":"scpb.ConstraintN..."}
 │              ├── RemoveCheckConstraint {"ConstraintID":2,"TableID":104}
 │              ├── SetJobStateOnDescriptor {"DescriptorID":104,"Initialize":true}
 │              └── CreateSchemaChangerJob {"NonCancelable":true,"RunningStatus":"PostCommitNonRev..."}
 └── PostCommitNonRevertiblePhase
      ├── Stage 1 of 2 in PostCommitNonRevertiblePhase
      │    ├── 2 elements transitioning toward ABSENT
      │    │    ├── WRITE_ONLY → DELETE_ONLY Column:{DescID: 104, ColumnID: 3}
      │    │    └── VALIDATED  → DELETE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
      │    └── 4 Mutation operations
      │         ├── MakeWriteOnlyColumnDeleteOnly {"ColumnID":3,"TableID":104}
      │         ├── MakeWriteOnlyIndexDeleteOnly {"IndexID":2,"TableID":104}
      │         ├── SetJobStateOnDescriptor {"DescriptorID":104}
      │         └── UpdateSchemaChangerJob {"IsNonCancelable":true,"RunningStatus":"PostCommitNonRev..."}
      └── Stage 2 of 2 in PostCommitNonRevertiblePhase
           ├── 3 elements transitioning toward ABSENT
           │    ├── DELETE_ONLY → ABSENT Column:{DescID: 104, ColumnID: 3}
           │    ├── PUBLIC      → ABSENT ColumnType:{DescID: 104, ColumnFamilyID: 0, ColumnID: 3}
           │    └── DELETE_ONLY → ABSENT SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0}
           └── 6 Mutation operations
                ├── LogEvent {"TargetStatus":1}
                ├── CreateGCJobForIndex {"IndexID":2,"TableID":104}
                ├── MakeIndexAbsent {"IndexID":2,"TableID":104}
                ├── MakeDeleteOnlyColumnAbsent {"ColumnID":3,"TableID":104}
                ├── RemoveJobStateFromDescriptor {"DescriptorID":104}
                └── UpdateSchemaChangerJob {"IsNonCancelable":true,"RunningStatus":"all stages compl..."}
