setup
SET experimental_enable_unique_without_index_constraints = true;
CREATE TABLE t (i INT PRIMARY KEY, j INT);
INSERT INTO t VALUES (0,0), (1,0);
----
...
+object {100 101 t} -> 104

test
ALTER TABLE t ADD UNIQUE WITHOUT INDEX (j) NOT VALID;
----
begin transaction #1
# begin StatementPhase
checking for feature: ALTER TABLE
increment telemetry for sql.schema.alter_table
increment telemetry for sql.schema.alter_table.add_constraint
write *eventpb.AlterTable to event log:
  mutationId: 1
  sql:
    descriptorId: 104
    statement: ALTER TABLE ‹defaultdb›.‹public›.‹t› ADD CONSTRAINT ‹unique_j› UNIQUE
      WITHOUT INDEX (‹j›) NOT VALID
    tag: ALTER TABLE
    user: root
  tableName: defaultdb.public.t
## StatementPhase stage 1 of 1 with 2 MutationType ops
upsert descriptor #104
  ...
     name: t
     nextColumnId: 3
  -  nextConstraintId: 2
  +  nextConstraintId: 3
     nextFamilyId: 1
     nextIndexId: 2
  ...
       time: {}
     unexposedParentSchemaId: 101
  -  version: "1"
  +  uniqueWithoutIndexConstraints:
  +  - columnIds:
  +    - 2
  +    constraintId: 2
  +    name: unique_j
  +    tableId: 104
  +    validity: Unvalidated
  +  version: "2"
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase stage 1 of 2 with 1 MutationType op
undo all catalog changes within txn #1
persist all catalog changes to storage
## PreCommitPhase stage 2 of 2 with 2 MutationType ops
upsert descriptor #104
  ...
     name: t
     nextColumnId: 3
  -  nextConstraintId: 2
  +  nextConstraintId: 3
     nextFamilyId: 1
     nextIndexId: 2
  ...
       time: {}
     unexposedParentSchemaId: 101
  -  version: "1"
  +  uniqueWithoutIndexConstraints:
  +  - columnIds:
  +    - 2
  +    constraintId: 2
  +    name: unique_j
  +    tableId: 104
  +    validity: Unvalidated
  +  version: "2"
persist all catalog changes to storage
# end PreCommitPhase
commit transaction #1
