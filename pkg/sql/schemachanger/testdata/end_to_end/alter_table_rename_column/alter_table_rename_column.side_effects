/* setup */
CREATE TABLE t (i INT PRIMARY KEY, j INT);
----
...
+object {100 101 t} -> 104

/* test */
ALTER TABLE t RENAME COLUMN j TO k;
----
begin transaction #1
# begin StatementPhase
checking for feature: ALTER TABLE
increment telemetry for sql.schema.alter_table
increment telemetry for sql.schema.alter_table.rename_column
## StatementPhase stage 1 of 1 with 2 MutationType ops
upsert descriptor #104
  ...
         width: 64
     - id: 2
  -    name: j
  +    name: k
       nullable: true
       type:
  ...
       columnNames:
       - i
  -    - j
  +    - k
       defaultColumnId: 2
       name: primary
  ...
       - 2
       storeColumnNames:
  -    - j
  +    - k
       unique: true
       vecConfig: {}
  ...
     replacementOf:
       time: {}
  -  schemaLocked: true
     unexposedParentSchemaId: 101
  -  version: "1"
  +  version: "2"
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase stage 1 of 2 with 1 MutationType op
undo all catalog changes within txn #1
persist all catalog changes to storage
## PreCommitPhase stage 2 of 2 with 4 MutationType ops
upsert descriptor #104
  ...
         width: 64
     - id: 2
  -    name: j
  +    name: k
       nullable: true
       type:
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    currentStatuses: <redacted>
  +    jobId: "1"
  +    nameMapping:
  +      columns:
  +        "1": i
  +        "2": k
  +        "4294967292": crdb_internal_origin_timestamp
  +        "4294967293": crdb_internal_origin_id
  +        "4294967294": tableoid
  +        "4294967295": crdb_internal_mvcc_timestamp
  +      families:
  +        "0": primary
  +      id: 104
  +      indexes:
  +        "1": t_pkey
  +      name: t
  +    relevantStatements:
  +    - statement:
  +        redactedStatement: ALTER TABLE ‹defaultdb›.‹public›.‹t› RENAME COLUMN ‹j› TO ‹k›
  +        statement: ALTER TABLE t RENAME COLUMN j TO k
  +        statementTag: ALTER TABLE
  +    revertible: true
  +    targetRanks: <redacted>
  +    targets: <redacted>
     families:
     - columnIds:
  ...
       columnNames:
       - i
  -    - j
  +    - k
       defaultColumnId: 2
       name: primary
  ...
       - 2
       storeColumnNames:
  -    - j
  +    - k
       unique: true
       vecConfig: {}
  ...
     replacementOf:
       time: {}
  -  schemaLocked: true
     unexposedParentSchemaId: 101
  -  version: "1"
  +  version: "2"
persist all catalog changes to storage
create job #1 (non-cancelable: false): "ALTER TABLE defaultdb.public.t RENAME COLUMN j TO k"
  descriptor IDs: [104]
# end PreCommitPhase
commit transaction #1
notified job registry to adopt jobs: [1]
# begin PostCommitPhase
begin transaction #2
commit transaction #2
begin transaction #3
## PostCommitPhase stage 1 of 1 with 3 MutationType ops
upsert descriptor #104
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  -  declarativeSchemaChangerState:
  -    authorization:
  -      userName: root
  -    currentStatuses: <redacted>
  -    jobId: "1"
  -    nameMapping:
  -      columns:
  -        "1": i
  -        "2": k
  -        "4294967292": crdb_internal_origin_timestamp
  -        "4294967293": crdb_internal_origin_id
  -        "4294967294": tableoid
  -        "4294967295": crdb_internal_mvcc_timestamp
  -      families:
  -        "0": primary
  -      id: 104
  -      indexes:
  -        "1": t_pkey
  -      name: t
  -    relevantStatements:
  -    - statement:
  -        redactedStatement: ALTER TABLE ‹defaultdb›.‹public›.‹t› RENAME COLUMN ‹j› TO ‹k›
  -        statement: ALTER TABLE t RENAME COLUMN j TO k
  -        statementTag: ALTER TABLE
  -    revertible: true
  -    targetRanks: <redacted>
  -    targets: <redacted>
     families:
     - columnIds:
  ...
     replacementOf:
       time: {}
  +  schemaLocked: true
     unexposedParentSchemaId: 101
  -  version: "2"
  +  version: "3"
persist all catalog changes to storage
update progress of schema change job #1: "all stages completed"
set schema change job #1 to non-cancellable
updated schema change job #1 descriptor IDs to []
write *eventpb.FinishSchemaChange to event log:
  sc:
    descriptorId: 104
commit transaction #3
# end PostCommitPhase
