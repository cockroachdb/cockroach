/* setup */
CREATE TABLE t1 (tenant_id uuid, c1 int);

/* test */
EXPLAIN (DDL) CREATE POLICY "policy 1" on t1 AS PERMISSIVE FOR SELECT TO PUBLIC USING (tenant_id = '01538898-f55c-44db-a306-89078e2c430e');
----
Schema change plan for CREATE POLICY ‹"policy 1"› ON ‹t1› AS PERMISSIVE FOR SELECT TO public USING (‹tenant_id› = ‹'01538898-f55c-44db-a306-89078e2c430e'›);
 ├── StatementPhase
 │    └── Stage 1 of 1 in StatementPhase
 │         ├── 2 elements transitioning toward PUBLIC
 │         │    ├── ABSENT → PUBLIC Policy:{DescID: 104 (t1), PolicyID: 1}
 │         │    └── ABSENT → PUBLIC PolicyName:{DescID: 104 (t1), Name: "policy 1", PolicyID: 1}
 │         └── 2 Mutation operations
 │              ├── AddPolicy {"Policy":{"Command":2,"PolicyID":1,"TableID":104,"Type":1}}
 │              └── SetPolicyName {"Name":"policy 1","PolicyID":1,"TableID":104}
 └── PreCommitPhase
      ├── Stage 1 of 2 in PreCommitPhase
      │    ├── 2 elements transitioning toward PUBLIC
      │    │    ├── PUBLIC → ABSENT Policy:{DescID: 104 (t1), PolicyID: 1}
      │    │    └── PUBLIC → ABSENT PolicyName:{DescID: 104 (t1), Name: "policy 1", PolicyID: 1}
      │    └── 1 Mutation operation
      │         └── UndoAllInTxnImmediateMutationOpSideEffects
      └── Stage 2 of 2 in PreCommitPhase
           ├── 2 elements transitioning toward PUBLIC
           │    ├── ABSENT → PUBLIC Policy:{DescID: 104 (t1), PolicyID: 1}
           │    └── ABSENT → PUBLIC PolicyName:{DescID: 104 (t1), Name: "policy 1", PolicyID: 1}
           └── 2 Mutation operations
                ├── AddPolicy {"Policy":{"Command":2,"PolicyID":1,"TableID":104,"Type":1}}
                └── SetPolicyName {"Name":"policy 1","PolicyID":1,"TableID":104}
