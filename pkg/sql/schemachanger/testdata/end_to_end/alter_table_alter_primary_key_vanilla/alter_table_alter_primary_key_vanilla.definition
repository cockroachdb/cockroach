setup
CREATE TABLE t (i INT PRIMARY KEY, j INT NOT NULL);
INSERT INTO t(i, j) VALUES (-4, -4), (-2, -2), (-3, -3);
----

# Note: Unlike other tests, we intentionally avoid
# UPDATE t SET j=i+1 this will violate constraints
# because of ordering.
stage-exec phase=PostCommitPhase stage=:
INSERT INTO t VALUES($stageKey, $stageKey);
INSERT INTO t VALUES($stageKey + 1, $stageKey + 1);
UPDATE t SET j=i+10000000;
UPDATE t SET j=i;
DELETE FROM t WHERE i=-4;
DELETE FROM t WHERE i=$stageKey;
INSERT INTO t VALUES($stageKey, $stageKey);
INSERT INTO t VALUES(-4, -4);
----

# Each insert will be injected twice per stage, so we should always,
# see a count of 2.
stage-query phase=PostCommitPhase stage=:
SELECT count(*)=($successfulStageCount*2)+3 FROM t;
----
true

stage-exec phase=PostCommitNonRevertiblePhase stage=:
INSERT INTO t VALUES($stageKey, $stageKey);
INSERT INTO t VALUES($stageKey + 1, $stageKey + 1);
UPDATE t SET j=i+10000000;
UPDATE t SET j=i;
DELETE FROM t WHERE i=-4;
DELETE FROM t WHERE i=$stageKey;
INSERT INTO t VALUES($stageKey, $stageKey);
INSERT INTO t VALUES(-4, -4);
----

# Each insert will be injected twice per stage, so we should always,
# see a count of 2.
stage-query phase=PostCommitNonRevertiblePhase stage=:
SELECT count(*)=($successfulStageCount*2)+3 FROM t;
----
true

test
ALTER TABLE t ALTER PRIMARY KEY USING COLUMNS (j)
----
