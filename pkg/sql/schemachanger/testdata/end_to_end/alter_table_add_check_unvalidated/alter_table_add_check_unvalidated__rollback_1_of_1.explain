/* setup */
CREATE TABLE t (i INT PRIMARY KEY);
INSERT INTO t VALUES (0);

/* test */
ALTER TABLE t ADD CHECK (i > 0) NOT VALID;
EXPLAIN (DDL) rollback at post-commit stage 1 of 1;
----
Schema change plan for rolling back ALTER TABLE defaultdb.public.t ADD CHECK (i > ‹0›) NOT VALID;
 └── PostCommitNonRevertiblePhase
      ├── Stage 1 of 2 in PostCommitNonRevertiblePhase
      │    ├── 2 elements transitioning toward ABSENT
      │    │    ├── PUBLIC → ABSENT CheckConstraintUnvalidated:{DescID: 104 (t), ConstraintID: 2 (check_i-), ReferencedColumnIDs: [1]}
      │    │    └── PUBLIC → ABSENT ConstraintWithoutIndexName:{DescID: 104 (t), Name: "check_i", ConstraintID: 2 (check_i-)}
      │    └── 4 Mutation operations
      │         ├── SetConstraintName {"ConstraintID":2,"Name":"crdb_internal_co...","TableID":104}
      │         ├── RemoveCheckConstraint {"ConstraintID":2,"TableID":104}
      │         ├── SetJobStateOnDescriptor {"DescriptorID":104}
      │         └── UpdateSchemaChangerJob {"IsNonCancelable":true,"RunningStatus":"PostCommitNonRev..."}
      └── Stage 2 of 2 in PostCommitNonRevertiblePhase
           ├── 1 element transitioning toward TRANSIENT_PUBLIC
           │    └── ABSENT → TRANSIENT_PUBLIC TableSchemaLocked:{DescID: 104 (t)}
           └── 3 Mutation operations
                ├── SetTableSchemaLocked {"Locked":true,"TableID":104}
                ├── RemoveJobStateFromDescriptor {"DescriptorID":104}
                └── UpdateSchemaChangerJob {"IsNonCancelable":true,"RunningStatus":"all stages compl..."}
