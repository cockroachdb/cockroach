/* setup */
CREATE TABLE t (a INT NOT NULL, b INT NOT NULL);
CREATE INDEX idx_b ON t(b);

/* test */
EXPLAIN (DDL, SHAPE) alter table t add primary key (a) USING HASH WITH (bucket_count=10);
----
Schema change plan for ALTER TABLE ‹defaultdb›.‹public›.‹t› ADD PRIMARY KEY (‹a›) USING HASH WITH ('bucket_count' = ‹10›);
 ├── execute 2 system table mutations transactions
 ├── backfill using primary index t_pkey- in relation t
 │    └── into t_pkey~ (a, crdb_internal_a_shard_10+; rowid-, b)
 ├── execute 2 system table mutations transactions
 ├── merge temporary indexes into backfilled indexes in relation t
 │    └── from t@[7] into t_pkey~
 ├── execute 1 system table mutations transaction
 ├── validate UNIQUE constraint backed by index t_pkey~ in relation t
 ├── execute 2 system table mutations transactions
 ├── backfill using primary index t_pkey~ in relation t
 │    ├── into idx_b+ (b: a, crdb_internal_a_shard_10+)
 │    └── into t_pkey+ (a, crdb_internal_a_shard_10+; b)
 ├── execute 2 system table mutations transactions
 ├── merge temporary indexes into backfilled indexes in relation t
 │    ├── from t@[5] into idx_b+
 │    └── from t@[9] into t_pkey+
 ├── execute 1 system table mutations transaction
 ├── validate UNIQUE constraint backed by index t_pkey+ in relation t
 ├── validate NOT NULL constraint on column crdb_internal_a_shard_10+ in index t_pkey+ in relation t
 ├── validate UNIQUE constraint backed by index idx_b+ in relation t
 ├── execute 3 system table mutations transactions
 ├── validate non-index-backed constraint check_crdb_internal_a_shard_10+ in relation t
 └── execute 2 system table mutations transactions
