setup
CREATE DATABASE db;
CREATE SCHEMA db.sc;
CREATE TABLE db.sc.t (k INT, v STRING);
CREATE TYPE db.sc.e AS ENUM('a', 'b', 'c');
----
...
+database {0 0 db} -> 104
+schema {104 0 public} -> 105
+schema {104 0 sc} -> 106
+object {104 106 t} -> 107
+object {104 106 e} -> 108
+object {104 106 _e} -> 109

test
DROP TABLE db.sc.t;
----
begin transaction #1
# begin StatementPhase
checking for feature: DROP TABLE
increment telemetry for sql.schema.drop_table
## StatementPhase stage 1 of 1 with 1 MutationType op
add synthetic descriptor #107:
  ...
     formatVersion: 3
     id: 107
  -  modificationTime: {}
  +  modificationTime:
  +    wallTime: "1640995200000000001"
     name: t
     nextColumnId: 4
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 106
     version: "1"
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase stage 1 of 1 with 6 MutationType ops
delete object namespace entry {104 106 t} -> 107
upsert descriptor #107
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    currentStatuses: <redacted>
  +    jobId: "1"
  +    relevantStatements:
  +    - statement:
  +        redactedStatement: DROP TABLE ‹db›.‹sc›.‹t›
  +        statement: DROP TABLE db.sc.t
  +        statementTag: DROP TABLE
  +    targetRanks: <redacted>
  +    targets: <redacted>
  +  dropTime: <redacted>"
     families:
     - columnIds:
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 106
  -  version: "1"
  +  version: "2"
delete all comments for table descriptors [107]
create job #1 (non-cancelable: true): "DROP TABLE db.sc.t"
  descriptor IDs: [107]
# end PreCommitPhase
commit transaction #1
notified job registry to adopt jobs: [1]
# begin PostCommitPhase
begin transaction #2
commit transaction #2
begin transaction #3
## PostCommitNonRevertiblePhase stage 1 of 1 with 9 MutationType ops
upsert descriptor #107
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  -  declarativeSchemaChangerState:
  -    authorization:
  -      userName: root
  -    currentStatuses: <redacted>
  -    jobId: "1"
  -    relevantStatements:
  -    - statement:
  -        redactedStatement: DROP TABLE ‹db›.‹sc›.‹t›
  -        statement: DROP TABLE db.sc.t
  -        statementTag: DROP TABLE
  -    targetRanks: <redacted>
  -    targets: <redacted>
     dropTime: <redacted>"
     families:
  ...
     state: DROP
     unexposedParentSchemaId: 106
  -  version: "2"
  +  version: "3"
write *eventpb.DropTable to event log: DROP TABLE ‹db›.‹sc›.‹t›
create job #2 (non-cancelable: true): "GC for DROP TABLE db.sc.t"
  descriptor IDs: [107]
update progress of schema change job #1: "all stages completed"
set schema change job #1 to non-cancellable
updated schema change job #1 descriptor IDs to []
commit transaction #3
notified job registry to adopt jobs: [2]
# end PostCommitPhase
