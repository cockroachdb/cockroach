/* setup */
SET CLUSTER SETTING feature.vector_index.enabled = true;
CREATE TABLE t (id INT PRIMARY KEY, embedding VECTOR(3), metadata TEXT);

/* test */
CREATE VECTOR INDEX vec_idx ON t (embedding);
EXPLAIN (DDL) rollback at post-commit stage 6 of 7;
----
Schema change plan for rolling back CREATE VECTOR INDEX vec_idx ON defaultdb.public.t (embedding);
 └── PostCommitNonRevertiblePhase
      ├── Stage 1 of 3 in PostCommitNonRevertiblePhase
      │    ├── 6 elements transitioning toward ABSENT
      │    │    ├── MERGE_ONLY → DELETE_ONLY SecondaryIndex:{DescID: 104 (t), IndexID: 2 (vec_idx-), TemporaryIndexID: 3, SourceIndexID: 1 (t_pkey), RecreateSourceIndexID: 0}
      │    │    ├── PUBLIC     → ABSENT      IndexColumn:{DescID: 104 (t), ColumnID: 2 (embedding), IndexID: 2 (vec_idx-)}
      │    │    ├── PUBLIC     → ABSENT      IndexColumn:{DescID: 104 (t), ColumnID: 1 (id), IndexID: 2 (vec_idx-)}
      │    │    ├── PUBLIC     → ABSENT      IndexName:{DescID: 104 (t), Name: "vec_idx", IndexID: 2 (vec_idx-)}
      │    │    ├── WRITE_ONLY → DELETE_ONLY TemporaryIndex:{DescID: 104 (t), IndexID: 3, ConstraintID: 1, SourceIndexID: 1 (t_pkey)}
      │    │    └── PUBLIC     → ABSENT      IndexColumn:{DescID: 104 (t), ColumnID: 1 (id), IndexID: 3}
      │    └── 8 Mutation operations
      │         ├── MakeWriteOnlyIndexDeleteOnly {"IndexID":3,"TableID":104}
      │         ├── RemoveColumnFromIndex {"ColumnID":1,"IndexID":3,"TableID":104}
      │         ├── MakeWriteOnlyIndexDeleteOnly {"IndexID":2,"TableID":104}
      │         ├── RemoveColumnFromIndex {"ColumnID":2,"IndexID":2,"TableID":104}
      │         ├── RemoveColumnFromIndex {"ColumnID":1,"IndexID":2,"Kind":1,"TableID":104}
      │         ├── SetIndexName {"IndexID":2,"Name":"crdb_internal_in...","TableID":104}
      │         ├── SetJobStateOnDescriptor {"DescriptorID":104}
      │         └── UpdateSchemaChangerJob {"IsNonCancelable":true,"RunningStatus":"Pending: Updatin..."}
      ├── Stage 2 of 3 in PostCommitNonRevertiblePhase
      │    ├── 4 elements transitioning toward ABSENT
      │    │    ├── DELETE_ONLY → ABSENT SecondaryIndex:{DescID: 104 (t), IndexID: 2 (vec_idx-), TemporaryIndexID: 3, SourceIndexID: 1 (t_pkey), RecreateSourceIndexID: 0}
      │    │    ├── PUBLIC      → ABSENT IndexData:{DescID: 104 (t), IndexID: 2 (vec_idx-)}
      │    │    ├── DELETE_ONLY → ABSENT TemporaryIndex:{DescID: 104 (t), IndexID: 3, ConstraintID: 1, SourceIndexID: 1 (t_pkey)}
      │    │    └── PUBLIC      → ABSENT IndexData:{DescID: 104 (t), IndexID: 3}
      │    └── 6 Mutation operations
      │         ├── MakeIndexAbsent {"IndexID":2,"TableID":104}
      │         ├── CreateGCJobForIndex {"IndexID":2,"TableID":104}
      │         ├── MakeIndexAbsent {"IndexID":3,"TableID":104}
      │         ├── CreateGCJobForIndex {"IndexID":3,"TableID":104}
      │         ├── SetJobStateOnDescriptor {"DescriptorID":104}
      │         └── UpdateSchemaChangerJob {"IsNonCancelable":true,"RunningStatus":"Pending: Updatin..."}
      └── Stage 3 of 3 in PostCommitNonRevertiblePhase
           ├── 1 element transitioning toward TRANSIENT_PUBLIC
           │    └── ABSENT → TRANSIENT_PUBLIC TableSchemaLocked:{DescID: 104 (t)}
           └── 3 Mutation operations
                ├── SetTableSchemaLocked {"Locked":true,"TableID":104}
                ├── RemoveJobStateFromDescriptor {"DescriptorID":104}
                └── UpdateSchemaChangerJob {"IsNonCancelable":true,"RunningStatus":"all stages compl..."}
