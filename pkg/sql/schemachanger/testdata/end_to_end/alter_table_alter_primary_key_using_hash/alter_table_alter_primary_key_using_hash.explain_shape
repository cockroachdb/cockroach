/* setup */
CREATE TABLE t (i INT PRIMARY KEY, j INT NOT NULL);

/* test */
EXPLAIN (DDL, SHAPE) ALTER TABLE t ALTER PRIMARY KEY USING COLUMNS (j) USING HASH WITH (bucket_count=3);
----
Schema change plan for ALTER TABLE ‹defaultdb›.‹public›.‹t› ALTER PRIMARY KEY USING COLUMNS (‹j›) USING HASH WITH (‹bucket_count› = ‹3›);
 ├── execute 2 system table mutations transactions
 ├── backfill using primary index t_pkey- in relation t
 │    └── into t_pkey+ (j, crdb_internal_j_shard_3+; i)
 ├── execute 2 system table mutations transactions
 ├── merge temporary indexes into backfilled indexes in relation t
 │    └── from t@[5] into t_pkey+
 ├── execute 1 system table mutations transaction
 ├── validate UNIQUE constraint backed by index t_pkey+ in relation t
 ├── validate NOT NULL constraint on column crdb_internal_j_shard_3+ in index t_pkey+ in relation t
 ├── validate non-index-backed constraint check_crdb_internal_j_shard_3+ in relation t
 ├── execute 2 system table mutations transactions
 ├── backfill using primary index t_pkey+ in relation t
 │    └── into t_i_key+ (i: crdb_internal_j_shard_3+, j)
 ├── execute 2 system table mutations transactions
 ├── merge temporary indexes into backfilled indexes in relation t
 │    └── from t@[3] into t_i_key+
 ├── execute 1 system table mutations transaction
 ├── validate UNIQUE constraint backed by index t_i_key+ in relation t
 └── execute 2 system table mutations transactions
