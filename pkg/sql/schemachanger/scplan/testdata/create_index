create-table
CREATE TABLE defaultdb.t1 (id INT PRIMARY KEY, name varchar(256), money int)
----

ops
CREATE INDEX id1 on defaultdb.t1(id, name) storing (money)
----
Stage 0
  *scop.MakeAddedIndexDeleteOnly
    IndexID: 2
    IndexName: id1
    KeyColumnDirections:
    - 0
    - 0
    KeyColumnIDs:
    - 1
    - 2
    SecondaryIndex: true
    StoreColumnIDs:
    - 3
    TableID: 52
Stage 1
  *scop.MakeAddedIndexDeleteAndWriteOnly
    IndexID: 2
    TableID: 52
Stage 2
  scop.BackfillIndex
    IndexID: 2
    TableID: 52
Stage 3
  *scop.MakeAddedSecondaryIndexPublic
    IndexID: 2
    TableID: 52

deps
CREATE INDEX id1 on  defaultdb.t1(id, name) storing (money)
----

ops
CREATE INVERTED INDEX concurrently id1 on defaultdb.t1(id, name) storing (money)
----
Stage 0
  *scop.MakeAddedIndexDeleteOnly
    Concurrently: true
    IndexID: 2
    IndexName: id1
    Inverted: true
    KeyColumnDirections:
    - 0
    - 0
    KeyColumnIDs:
    - 1
    - 2
    SecondaryIndex: true
    StoreColumnIDs:
    - 3
    TableID: 52
Stage 1
  *scop.MakeAddedIndexDeleteAndWriteOnly
    IndexID: 2
    TableID: 52
Stage 2
  scop.BackfillIndex
    IndexID: 2
    TableID: 52
Stage 3
  *scop.MakeAddedSecondaryIndexPublic
    IndexID: 2
    TableID: 52

deps
CREATE INDEX id1 on  defaultdb.t1(id, name) storing (money)
----

ops
CREATE INDEX id1 on  defaultdb.t1(id, name) storing (money) PARTITION BY LIST (id) (
                                                              PARTITION p1 VALUES IN (1)
                                                            )
----
Stage 0
  *scop.MakeAddedIndexDeleteOnly
    IndexID: 2
    IndexName: id1
    KeyColumnDirections:
    - 0
    - 0
    KeyColumnIDs:
    - 1
    - 2
    SecondaryIndex: true
    StoreColumnIDs:
    - 3
    TableID: 52
  *scop.AddIndexPartitionInfo
    IndexID: 2
    ListPartitions:
    - name: p1
      expr:
      - "1"
    PartitionFields:
    - id
    RangePartitions: []
    TableID: 52
Stage 1
  *scop.MakeAddedIndexDeleteAndWriteOnly
    IndexID: 2
    TableID: 52
Stage 2
  scop.BackfillIndex
    IndexID: 2
    TableID: 52
Stage 3
  *scop.MakeAddedSecondaryIndexPublic
    IndexID: 2
    TableID: 52

deps
CREATE INDEX id1 on  defaultdb.t1(id, name) storing (money) PARTITION BY LIST (id) (
                                                              PARTITION p1 VALUES IN (1)
                                                            )
----
- from: [Partitioning:{DescID: 52, IndexID: 2}, PUBLIC]
  to:   [SecondaryIndex:{DescID: 52, ElementName: "id1", IndexID: 2}, DELETE_ONLY]
- from: [SecondaryIndex:{DescID: 52, ElementName: "id1", IndexID: 2}, DELETE_AND_WRITE_ONLY]
  to:   [Partitioning:{DescID: 52, IndexID: 2}, PUBLIC]
