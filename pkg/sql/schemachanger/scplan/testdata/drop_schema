create-schema
CREATE SCHEMA SC1
----

create-sequence
CREATE SEQUENCE sc1.SQ1
----

create-table
CREATE TABLE sc1.t1 (id INT8 PRIMARY KEY, name VARCHAR(256), val INT8 DEFAULT nextval('sc1.sq1'))
----

create-view
CREATE VIEW sc1.v1 AS (SELECT name FROM sc1.t1)
----

create-view
CREATE VIEW sc1.v2 AS (SELECT name AS n1, name AS n2 FROM sc1.v1)
----

create-view
CREATE VIEW sc1.v3 AS (SELECT name, n1 FROM sc1.v1, sc1.v2);
----

create-view
CREATE VIEW sc1.v4 AS (SELECT n2, n1 FROM sc1.v2);
----

create-type
CREATE TYPE sc1.typ AS ENUM('a')
----

create-view
CREATE VIEW sc1.v5 AS (SELECT 'a'::sc1.typ::STRING AS k, n2, n1 FROM sc1.v4)
----

deps
DROP SCHEMA defaultdb.SC1 CASCADE
----
- from: [Column:{DescID: 106, ColumnID: 1}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 106, ColumnID: 1, Name: id}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 106, ColumnID: 2}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 106, ColumnID: 2, Name: name}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 106, ColumnID: 3}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 106, ColumnID: 3, Name: val}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [ColumnName:{DescID: 106, ColumnID: 1, Name: id}, ABSENT]
  to:   [Column:{DescID: 106, ColumnID: 1}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 106, ColumnID: 2, Name: name}, ABSENT]
  to:   [Column:{DescID: 106, ColumnID: 2}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 106, ColumnID: 3, Name: val}, ABSENT]
  to:   [Column:{DescID: 106, ColumnID: 3}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [DatabaseSchemaEntry:{DescID: 100, ReferencedDescID: 104}, ABSENT]
  to:   [Schema:{DescID: 104}, ABSENT]
  kind: Precedence
  rule: schema can be dropped after schema entry inside the database
- from: [IndexName:{DescID: 106, IndexID: 1, Name: t1_pkey}, ABSENT]
  to:   [PrimaryIndex:{DescID: 106, IndexID: 1}, ABSENT]
  kind: Precedence
  rule: index unnamed before index no longer exists
- from: [Namespace:{DescID: 105, Name: sq1}, ABSENT]
  to:   [Sequence:{DescID: 105}, ABSENT]
  kind: Precedence
  rule: name must drain before descriptor deletion
- from: [Namespace:{DescID: 106, Name: t1}, ABSENT]
  to:   [Table:{DescID: 106}, ABSENT]
  kind: Precedence
  rule: name must drain before descriptor deletion
- from: [Namespace:{DescID: 107, Name: v1}, ABSENT]
  to:   [View:{DescID: 107}, ABSENT]
  kind: Precedence
  rule: name must drain before descriptor deletion
- from: [Namespace:{DescID: 108, Name: v2}, ABSENT]
  to:   [View:{DescID: 108}, ABSENT]
  kind: Precedence
  rule: name must drain before descriptor deletion
- from: [Namespace:{DescID: 109, Name: v3}, ABSENT]
  to:   [View:{DescID: 109}, ABSENT]
  kind: Precedence
  rule: name must drain before descriptor deletion
- from: [Namespace:{DescID: 110, Name: v4}, ABSENT]
  to:   [View:{DescID: 110}, ABSENT]
  kind: Precedence
  rule: name must drain before descriptor deletion
- from: [Namespace:{DescID: 111, Name: typ}, ABSENT]
  to:   [Type:{DescID: 111}, ABSENT]
  kind: Precedence
  rule: name must drain before descriptor deletion
- from: [Namespace:{DescID: 112, Name: _typ}, ABSENT]
  to:   [Type:{DescID: 112}, ABSENT]
  kind: Precedence
  rule: name must drain before descriptor deletion
- from: [Namespace:{DescID: 113, Name: v5}, ABSENT]
  to:   [View:{DescID: 113}, ABSENT]
  kind: Precedence
  rule: name must drain before descriptor deletion
- from: [PrimaryIndex:{DescID: 106, IndexID: 1}, VALIDATED]
  to:   [IndexName:{DescID: 106, IndexID: 1, Name: t1_pkey}, ABSENT]
  kind: Precedence
  rule: index unnamed after index no longer public
- from: [Sequence:{DescID: 105}, ABSENT]
  to:   [Schema:{DescID: 104}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [Sequence:{DescID: 105}, DROPPED]
  to:   [Locality:{DescID: 105}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [Sequence:{DescID: 105}, DROPPED]
  to:   [Namespace:{DescID: 105, Name: sq1}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [Sequence:{DescID: 105}, DROPPED]
  to:   [Owner:{DescID: 105}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [Sequence:{DescID: 105}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 105, ReferencedDescID: 106}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Sequence:{DescID: 105}, DROPPED]
  to:   [UserPrivileges:{DescID: 105, Username: admin}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [Sequence:{DescID: 105}, DROPPED]
  to:   [UserPrivileges:{DescID: 105, Username: public}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [Sequence:{DescID: 105}, DROPPED]
  to:   [UserPrivileges:{DescID: 105, Username: root}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [Table:{DescID: 106}, ABSENT]
  to:   [Schema:{DescID: 104}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [Table:{DescID: 106}, DROPPED]
  to:   [DefaultExpression:{DescID: 106, ColumnID: 3}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 106}, DROPPED]
  to:   [Locality:{DescID: 106}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [Table:{DescID: 106}, DROPPED]
  to:   [Namespace:{DescID: 106, Name: t1}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [Table:{DescID: 106}, DROPPED]
  to:   [Owner:{DescID: 106}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [Table:{DescID: 106}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 105, ReferencedDescID: 106}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 106}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 106, ReferencedDescID: 107}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 106}, DROPPED]
  to:   [UserPrivileges:{DescID: 106, Username: admin}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [Table:{DescID: 106}, DROPPED]
  to:   [UserPrivileges:{DescID: 106, Username: public}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [Table:{DescID: 106}, DROPPED]
  to:   [UserPrivileges:{DescID: 106, Username: root}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [Type:{DescID: 111}, ABSENT]
  to:   [Schema:{DescID: 104}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [Type:{DescID: 111}, DROPPED]
  to:   [Namespace:{DescID: 111, Name: typ}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [Type:{DescID: 111}, DROPPED]
  to:   [ViewDependsOnType:{DescID: 113, ReferencedDescID: 111}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Type:{DescID: 112}, ABSENT]
  to:   [Schema:{DescID: 104}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [Type:{DescID: 112}, DROPPED]
  to:   [Namespace:{DescID: 112, Name: _typ}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [Type:{DescID: 112}, DROPPED]
  to:   [ViewDependsOnType:{DescID: 113, ReferencedDescID: 112}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 107}, ABSENT]
  to:   [Schema:{DescID: 104}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [View:{DescID: 107}, DROPPED]
  to:   [Locality:{DescID: 107}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 107}, DROPPED]
  to:   [Namespace:{DescID: 107, Name: v1}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [View:{DescID: 107}, DROPPED]
  to:   [Owner:{DescID: 107}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 107}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 106, ReferencedDescID: 107}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 107}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 107, ReferencedDescID: 108}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 107}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 107, ReferencedDescID: 109}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 107}, DROPPED]
  to:   [UserPrivileges:{DescID: 107, Username: admin}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 107}, DROPPED]
  to:   [UserPrivileges:{DescID: 107, Username: public}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 107}, DROPPED]
  to:   [UserPrivileges:{DescID: 107, Username: root}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 108}, ABSENT]
  to:   [Schema:{DescID: 104}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [View:{DescID: 108}, DROPPED]
  to:   [Locality:{DescID: 108}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 108}, DROPPED]
  to:   [Namespace:{DescID: 108, Name: v2}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [View:{DescID: 108}, DROPPED]
  to:   [Owner:{DescID: 108}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 108}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 107, ReferencedDescID: 108}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 108}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 108, ReferencedDescID: 109}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 108}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 108, ReferencedDescID: 110}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 108}, DROPPED]
  to:   [UserPrivileges:{DescID: 108, Username: admin}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 108}, DROPPED]
  to:   [UserPrivileges:{DescID: 108, Username: public}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 108}, DROPPED]
  to:   [UserPrivileges:{DescID: 108, Username: root}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 109}, ABSENT]
  to:   [Schema:{DescID: 104}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [View:{DescID: 109}, DROPPED]
  to:   [Locality:{DescID: 109}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 109}, DROPPED]
  to:   [Namespace:{DescID: 109, Name: v3}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [View:{DescID: 109}, DROPPED]
  to:   [Owner:{DescID: 109}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 109}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 107, ReferencedDescID: 109}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 109}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 108, ReferencedDescID: 109}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 109}, DROPPED]
  to:   [UserPrivileges:{DescID: 109, Username: admin}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 109}, DROPPED]
  to:   [UserPrivileges:{DescID: 109, Username: public}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 109}, DROPPED]
  to:   [UserPrivileges:{DescID: 109, Username: root}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 110}, ABSENT]
  to:   [Schema:{DescID: 104}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [View:{DescID: 110}, DROPPED]
  to:   [Locality:{DescID: 110}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 110}, DROPPED]
  to:   [Namespace:{DescID: 110, Name: v4}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [View:{DescID: 110}, DROPPED]
  to:   [Owner:{DescID: 110}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 110}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 108, ReferencedDescID: 110}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 110}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 110, ReferencedDescID: 113}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 110}, DROPPED]
  to:   [UserPrivileges:{DescID: 110, Username: admin}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 110}, DROPPED]
  to:   [UserPrivileges:{DescID: 110, Username: public}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 110}, DROPPED]
  to:   [UserPrivileges:{DescID: 110, Username: root}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 113}, ABSENT]
  to:   [Schema:{DescID: 104}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [View:{DescID: 113}, DROPPED]
  to:   [Locality:{DescID: 113}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 113}, DROPPED]
  to:   [Namespace:{DescID: 113, Name: v5}, ABSENT]
  kind: Precedence
  rule: descriptor must be dropped before draining name
- from: [View:{DescID: 113}, DROPPED]
  to:   [Owner:{DescID: 113}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 113}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 110, ReferencedDescID: 113}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 113}, DROPPED]
  to:   [UserPrivileges:{DescID: 113, Username: admin}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 113}, DROPPED]
  to:   [UserPrivileges:{DescID: 113, Username: public}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal
- from: [View:{DescID: 113}, DROPPED]
  to:   [UserPrivileges:{DescID: 113, Username: root}, ABSENT]
  kind: Precedence
  rule: relation drop precedes relation deps removal

ops
DROP SCHEMA defaultdb.SC1 CASCADE
----
StatementPhase stage 1 of 1 with 23 MutationType ops
  transitions:
    [[Sequence:{DescID: 105}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 105}, ABSENT], PUBLIC] -> ABSENT
    [[Table:{DescID: 106}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 106}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 106, ColumnID: 1}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 106, ColumnID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 106, ColumnID: 2}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 106, ColumnID: 2}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 106, ColumnID: 3}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 106, ColumnID: 3}, ABSENT], PUBLIC] -> ABSENT
    [[PrimaryIndex:{DescID: 106, IndexID: 1}, ABSENT], PUBLIC] -> VALIDATED
    [[ConstraintComment:{DescID: 106, ConstraintID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[IndexComment:{DescID: 106, IndexID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 107}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 107}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 108}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 108}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 109}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 109}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 110}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 110}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 113}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 113}, ABSENT], PUBLIC] -> ABSENT
    [[Type:{DescID: 111}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[Type:{DescID: 112}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[Schema:{DescID: 104}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[SchemaComment:{DescID: 104}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 105
    *scop.RemoveTableComment
      TableID: 105
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 106
    *scop.RemoveTableComment
      TableID: 106
    *scop.RemoveColumnComment
      ColumnID: 1
      TableID: 106
    *scop.RemoveColumnComment
      ColumnID: 2
      TableID: 106
    *scop.RemoveColumnComment
      ColumnID: 3
      TableID: 106
    *scop.RemoveConstraintComment
      ConstraintID: 1
      TableID: 106
    *scop.RemoveIndexComment
      IndexID: 1
      TableID: 106
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 107
    *scop.RemoveTableComment
      TableID: 107
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 108
    *scop.RemoveTableComment
      TableID: 108
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 109
    *scop.RemoveTableComment
      TableID: 109
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 110
    *scop.RemoveTableComment
      TableID: 110
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 113
    *scop.RemoveTableComment
      TableID: 113
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 111
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 112
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 104
    *scop.RemoveSchemaComment
      SchemaID: 104
PreCommitPhase stage 1 of 1 with 43 MutationType ops
  transitions:
    [[Sequence:{DescID: 105}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 105, Name: sq1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 105}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 105, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 105, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 105, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 105}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 105, ReferencedDescID: 106}, ABSENT], PUBLIC] -> ABSENT
    [[DefaultExpression:{DescID: 106, ColumnID: 3}, ABSENT], PUBLIC] -> ABSENT
    [[Table:{DescID: 106}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 106, Name: t1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 106}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 106, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 106, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 106, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 106, ColumnID: 1, Name: id}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 106, ColumnID: 2, Name: name}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 106, ColumnID: 3, Name: val}, ABSENT], PUBLIC] -> ABSENT
    [[IndexName:{DescID: 106, IndexID: 1, Name: t1_pkey}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 106}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 106, ReferencedDescID: 107}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 107}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 107, Name: v1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 107}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 107, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 107, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 107, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 107}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 107, ReferencedDescID: 108}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 107, ReferencedDescID: 109}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 108}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 108, Name: v2}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 108}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 108, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 108, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 108, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 108}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 108, ReferencedDescID: 109}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 108, ReferencedDescID: 110}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 109}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 109, Name: v3}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 109}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 109, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 109, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 109, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 109}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 110}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 110, Name: v4}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 110}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 110, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 110, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 110, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 110}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 110, ReferencedDescID: 113}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 113}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 113, Name: v5}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 113}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 113, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 113, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 113, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[ViewDependsOnType:{DescID: 113, ReferencedDescID: 111}, ABSENT], PUBLIC] -> ABSENT
    [[ViewDependsOnType:{DescID: 113, ReferencedDescID: 112}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 113}, ABSENT], PUBLIC] -> ABSENT
    [[Type:{DescID: 111}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 111, Name: typ}, ABSENT], PUBLIC] -> ABSENT
    [[Type:{DescID: 112}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 112, Name: _typ}, ABSENT], PUBLIC] -> ABSENT
    [[Schema:{DescID: 104}, ABSENT], TXN_DROPPED] -> DROPPED
    [[DatabaseSchemaEntry:{DescID: 100, ReferencedDescID: 104}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 105
    *scop.DrainDescriptorName
      TableID: 105
    *scop.MarkDescriptorAsDropped
      DescID: 106
    *scop.DrainDescriptorName
      TableID: 106
    *scop.MarkDescriptorAsDropped
      DescID: 107
    *scop.DrainDescriptorName
      TableID: 107
    *scop.MarkDescriptorAsDropped
      DescID: 108
    *scop.DrainDescriptorName
      TableID: 108
    *scop.MarkDescriptorAsDropped
      DescID: 109
    *scop.DrainDescriptorName
      TableID: 109
    *scop.MarkDescriptorAsDropped
      DescID: 110
    *scop.DrainDescriptorName
      TableID: 110
    *scop.MarkDescriptorAsDropped
      DescID: 113
    *scop.DrainDescriptorName
      TableID: 113
    *scop.MarkDescriptorAsDropped
      DescID: 111
    *scop.DrainDescriptorName
      TableID: 111
    *scop.MarkDescriptorAsDropped
      DescID: 112
    *scop.DrainDescriptorName
      TableID: 112
    *scop.MarkDescriptorAsDropped
      DescID: 104
    *scop.DeleteDatabaseSchemaEntry
      DatabaseID: 100
      SchemaID: 104
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 106
      TableID: 105
    *scop.RemoveColumnDefaultExpression
      ColumnID: 3
      TableID: 106
    *scop.RemoveColumnSequenceReferences
      ColumnID: 3
      SequenceIDs:
      - 105
      TableID: 106
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 107
      TableID: 106
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 108
      TableID: 107
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 109
      TableID: 107
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 109
      TableID: 108
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 110
      TableID: 108
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 113
      TableID: 110
    *scop.RemoveTypeBackRef
      DescID: 113
      TypeID: 111
    *scop.RemoveTypeBackRef
      DescID: 113
      TypeID: 112
    *scop.SetJobStateOnDescriptor
      DescriptorID: 100
      Initialize: true
    *scop.SetJobStateOnDescriptor
      DescriptorID: 104
      Initialize: true
    *scop.SetJobStateOnDescriptor
      DescriptorID: 105
      Initialize: true
    *scop.SetJobStateOnDescriptor
      DescriptorID: 106
      Initialize: true
    *scop.SetJobStateOnDescriptor
      DescriptorID: 107
      Initialize: true
    *scop.SetJobStateOnDescriptor
      DescriptorID: 108
      Initialize: true
    *scop.SetJobStateOnDescriptor
      DescriptorID: 109
      Initialize: true
    *scop.SetJobStateOnDescriptor
      DescriptorID: 110
      Initialize: true
    *scop.SetJobStateOnDescriptor
      DescriptorID: 111
      Initialize: true
    *scop.SetJobStateOnDescriptor
      DescriptorID: 112
      Initialize: true
    *scop.SetJobStateOnDescriptor
      DescriptorID: 113
      Initialize: true
    *scop.CreateSchemaChangerJob
      Authorization:
        UserName: root
      DescriptorIDs:
      - 100
      - 104
      - 105
      - 106
      - 107
      - 108
      - 109
      - 110
      - 111
      - 112
      - 113
      JobID: 1
      Statements:
      - statement: DROP SCHEMA defaultdb.sc1 CASCADE
        redactedstatement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
        statementtag: DROP SCHEMA
PostCommitNonRevertiblePhase stage 1 of 1 with 33 MutationType ops
  transitions:
    [[Sequence:{DescID: 105}, ABSENT], DROPPED] -> ABSENT
    [[Table:{DescID: 106}, ABSENT], DROPPED] -> ABSENT
    [[Column:{DescID: 106, ColumnID: 1}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 106, ColumnID: 2}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 106, ColumnID: 3}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[PrimaryIndex:{DescID: 106, IndexID: 1}, ABSENT], VALIDATED] -> ABSENT
    [[View:{DescID: 107}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 108}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 109}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 110}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 113}, ABSENT], DROPPED] -> ABSENT
    [[Type:{DescID: 111}, ABSENT], DROPPED] -> ABSENT
    [[Type:{DescID: 112}, ABSENT], DROPPED] -> ABSENT
    [[Schema:{DescID: 104}, ABSENT], DROPPED] -> ABSENT
  ops:
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Sequence:
          sequenceId: 105
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 105
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Table:
          tableId: 106
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 106
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 107
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 4
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 107
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 108
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 5
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 108
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 109
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 6
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 109
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 110
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 6
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 110
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 113
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 8
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 113
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Type:
          typeId: 111
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 1
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 111
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Type:
          typeId: 112
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 2
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 112
    *scop.DrainDescriptorName
      TableID: 104
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Schema:
          dependentObjects:
          - 105
          - 106
          - 107
          - 108
          - 109
          - 110
          - 111
          - 112
          - 113
          schemaId: 104
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 1
        SubWorkID: 1
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 104
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 100
      JobID: 1
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 104
      JobID: 1
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 105
      JobID: 1
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 106
      JobID: 1
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 107
      JobID: 1
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 108
      JobID: 1
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 109
      JobID: 1
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 110
      JobID: 1
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 111
      JobID: 1
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 112
      JobID: 1
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 113
      JobID: 1
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1
