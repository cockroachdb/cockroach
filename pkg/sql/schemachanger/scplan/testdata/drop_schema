create-schema
CREATE SCHEMA SC1
----

create-sequence
CREATE SEQUENCE sc1.SQ1
----

create-table
CREATE TABLE sc1.t1 (id INT8 PRIMARY KEY, name VARCHAR(256), val INT8 DEFAULT nextval('sc1.sq1'))
----

create-view
CREATE VIEW sc1.v1 AS (SELECT name FROM sc1.t1)
----

create-view
CREATE VIEW sc1.v2 AS (SELECT name AS n1, name AS n2 FROM sc1.v1)
----

create-view
CREATE VIEW sc1.v3 AS (SELECT name, n1 FROM sc1.v1, sc1.v2);
----

create-view
CREATE VIEW sc1.v4 AS (SELECT n2, n1 FROM sc1.v2);
----

create-type
CREATE TYPE sc1.typ AS ENUM('a')
----

create-view
CREATE VIEW sc1.v5 AS (SELECT 'a'::sc1.typ::STRING AS k, n2, n1 FROM sc1.v4)
----

deps
DROP SCHEMA defaultdb.SC1 CASCADE
----
- from: [DatabaseSchemaEntry:{DescID: 50, ReferencedDescID: 54}, ABSENT]
  to:   [Schema:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: schema can be dropped after schema entry inside the database
- from: [Namespace:{DescID: 55, Name: sq1}, ABSENT]
  to:   [Sequence:{DescID: 55}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 56, Name: t1}, ABSENT]
  to:   [Table:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 57, Name: v1}, ABSENT]
  to:   [View:{DescID: 57}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 58, Name: v2}, ABSENT]
  to:   [View:{DescID: 58}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 59, Name: v3}, ABSENT]
  to:   [View:{DescID: 59}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 60, Name: v4}, ABSENT]
  to:   [View:{DescID: 60}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 61, Name: typ}, ABSENT]
  to:   [Type:{DescID: 61}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 62, Name: _typ}, ABSENT]
  to:   [Type:{DescID: 62}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 63, Name: v5}, ABSENT]
  to:   [View:{DescID: 63}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Sequence:{DescID: 55}, ABSENT]
  to:   [Schema:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Sequence:{DescID: 55}, DROPPED]
  to:   [Locality:{DescID: 55}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 55}, DROPPED]
  to:   [Namespace:{DescID: 55, Name: sq1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Sequence:{DescID: 55}, DROPPED]
  to:   [Owner:{DescID: 55}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 55}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 55, ReferencedDescID: 56}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Sequence:{DescID: 55}, DROPPED]
  to:   [UserPrivileges:{DescID: 55, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 55}, DROPPED]
  to:   [UserPrivileges:{DescID: 55, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 55}, DROPPED]
  to:   [UserPrivileges:{DescID: 55, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 56}, ABSENT]
  to:   [Schema:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Table:{DescID: 56}, DROPPED]
  to:   [DefaultExpression:{DescID: 56, ColumnID: 3}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 56}, DROPPED]
  to:   [Locality:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 56}, DROPPED]
  to:   [Namespace:{DescID: 56, Name: t1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Table:{DescID: 56}, DROPPED]
  to:   [Owner:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 56}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 55, ReferencedDescID: 56}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 56}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 56, ReferencedDescID: 57}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 56}, DROPPED]
  to:   [UserPrivileges:{DescID: 56, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 56}, DROPPED]
  to:   [UserPrivileges:{DescID: 56, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 56}, DROPPED]
  to:   [UserPrivileges:{DescID: 56, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Type:{DescID: 61}, ABSENT]
  to:   [Schema:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Type:{DescID: 61}, DROPPED]
  to:   [Namespace:{DescID: 61, Name: typ}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Type:{DescID: 61}, DROPPED]
  to:   [ViewDependsOnType:{DescID: 63, ReferencedDescID: 61}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Type:{DescID: 62}, ABSENT]
  to:   [Schema:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Type:{DescID: 62}, DROPPED]
  to:   [Namespace:{DescID: 62, Name: _typ}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Type:{DescID: 62}, DROPPED]
  to:   [ViewDependsOnType:{DescID: 63, ReferencedDescID: 62}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 57}, ABSENT]
  to:   [Schema:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 57}, DROPPED]
  to:   [Locality:{DescID: 57}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 57}, DROPPED]
  to:   [Namespace:{DescID: 57, Name: v1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 57}, DROPPED]
  to:   [Owner:{DescID: 57}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 57}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 56, ReferencedDescID: 57}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 57}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 57, ReferencedDescID: 58}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 57}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 57, ReferencedDescID: 59}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 57}, DROPPED]
  to:   [UserPrivileges:{DescID: 57, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 57}, DROPPED]
  to:   [UserPrivileges:{DescID: 57, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 57}, DROPPED]
  to:   [UserPrivileges:{DescID: 57, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 58}, ABSENT]
  to:   [Schema:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 58}, DROPPED]
  to:   [Locality:{DescID: 58}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 58}, DROPPED]
  to:   [Namespace:{DescID: 58, Name: v2}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 58}, DROPPED]
  to:   [Owner:{DescID: 58}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 58}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 57, ReferencedDescID: 58}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 58}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 58, ReferencedDescID: 59}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 58}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 58, ReferencedDescID: 60}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 58}, DROPPED]
  to:   [UserPrivileges:{DescID: 58, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 58}, DROPPED]
  to:   [UserPrivileges:{DescID: 58, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 58}, DROPPED]
  to:   [UserPrivileges:{DescID: 58, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 59}, ABSENT]
  to:   [Schema:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 59}, DROPPED]
  to:   [Locality:{DescID: 59}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [Namespace:{DescID: 59, Name: v3}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [Owner:{DescID: 59}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 57, ReferencedDescID: 59}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 58, ReferencedDescID: 59}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [UserPrivileges:{DescID: 59, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [UserPrivileges:{DescID: 59, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [UserPrivileges:{DescID: 59, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 60}, ABSENT]
  to:   [Schema:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 60}, DROPPED]
  to:   [Locality:{DescID: 60}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 60}, DROPPED]
  to:   [Namespace:{DescID: 60, Name: v4}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 60}, DROPPED]
  to:   [Owner:{DescID: 60}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 60}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 58, ReferencedDescID: 60}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 60}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 60, ReferencedDescID: 63}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 60}, DROPPED]
  to:   [UserPrivileges:{DescID: 60, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 60}, DROPPED]
  to:   [UserPrivileges:{DescID: 60, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 60}, DROPPED]
  to:   [UserPrivileges:{DescID: 60, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 63}, ABSENT]
  to:   [Schema:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 63}, DROPPED]
  to:   [Locality:{DescID: 63}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [Namespace:{DescID: 63, Name: v5}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [Owner:{DescID: 63}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 60, ReferencedDescID: 63}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [UserPrivileges:{DescID: 63, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [UserPrivileges:{DescID: 63, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [UserPrivileges:{DescID: 63, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped

ops
DROP SCHEMA defaultdb.SC1 CASCADE
----
StatementPhase stage 1 of 1 with 10 MutationType ops
  transitions:
    [Sequence:{DescID: 55}, PUBLIC, DROP] -> TXN_DROPPED
    [Table:{DescID: 56}, PUBLIC, DROP] -> TXN_DROPPED
    [Column:{DescID: 56, ColumnID: 1}, PUBLIC, DROP] -> DELETE_AND_WRITE_ONLY
    [Column:{DescID: 56, ColumnID: 2}, PUBLIC, DROP] -> DELETE_AND_WRITE_ONLY
    [Column:{DescID: 56, ColumnID: 3}, PUBLIC, DROP] -> DELETE_AND_WRITE_ONLY
    [PrimaryIndex:{DescID: 56, IndexID: 1}, PUBLIC, DROP] -> VALIDATED
    [View:{DescID: 57}, PUBLIC, DROP] -> TXN_DROPPED
    [View:{DescID: 58}, PUBLIC, DROP] -> TXN_DROPPED
    [View:{DescID: 59}, PUBLIC, DROP] -> TXN_DROPPED
    [View:{DescID: 60}, PUBLIC, DROP] -> TXN_DROPPED
    [View:{DescID: 63}, PUBLIC, DROP] -> TXN_DROPPED
    [Type:{DescID: 61}, PUBLIC, DROP] -> TXN_DROPPED
    [Type:{DescID: 62}, PUBLIC, DROP] -> TXN_DROPPED
    [Schema:{DescID: 54}, PUBLIC, DROP] -> TXN_DROPPED
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 55
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 56
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 57
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 58
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 59
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 60
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 63
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 61
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 62
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 54
PreCommitPhase non-revertible stage 1 of 1 with 31 MutationType ops
  transitions:
    [Sequence:{DescID: 55}, TXN_DROPPED, DROP] -> DROPPED
    [Namespace:{DescID: 55, Name: sq1}, PUBLIC, DROP] -> ABSENT
    [Owner:{DescID: 55}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 55, Username: admin}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 55, Username: public}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 55, Username: root}, PUBLIC, DROP] -> ABSENT
    [Locality:{DescID: 55}, PUBLIC, DROP] -> ABSENT
    [RelationDependedOnBy:{DescID: 55, ReferencedDescID: 56}, PUBLIC, DROP] -> ABSENT
    [DefaultExpression:{DescID: 56, ColumnID: 3}, PUBLIC, DROP] -> ABSENT
    [Table:{DescID: 56}, TXN_DROPPED, DROP] -> DROPPED
    [Namespace:{DescID: 56, Name: t1}, PUBLIC, DROP] -> ABSENT
    [Owner:{DescID: 56}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 56, Username: admin}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 56, Username: public}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 56, Username: root}, PUBLIC, DROP] -> ABSENT
    [Locality:{DescID: 56}, PUBLIC, DROP] -> ABSENT
    [RelationDependedOnBy:{DescID: 56, ReferencedDescID: 57}, PUBLIC, DROP] -> ABSENT
    [View:{DescID: 57}, TXN_DROPPED, DROP] -> DROPPED
    [Namespace:{DescID: 57, Name: v1}, PUBLIC, DROP] -> ABSENT
    [Owner:{DescID: 57}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 57, Username: admin}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 57, Username: public}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 57, Username: root}, PUBLIC, DROP] -> ABSENT
    [Locality:{DescID: 57}, PUBLIC, DROP] -> ABSENT
    [RelationDependedOnBy:{DescID: 57, ReferencedDescID: 58}, PUBLIC, DROP] -> ABSENT
    [RelationDependedOnBy:{DescID: 57, ReferencedDescID: 59}, PUBLIC, DROP] -> ABSENT
    [View:{DescID: 58}, TXN_DROPPED, DROP] -> DROPPED
    [Namespace:{DescID: 58, Name: v2}, PUBLIC, DROP] -> ABSENT
    [Owner:{DescID: 58}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 58, Username: admin}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 58, Username: public}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 58, Username: root}, PUBLIC, DROP] -> ABSENT
    [Locality:{DescID: 58}, PUBLIC, DROP] -> ABSENT
    [RelationDependedOnBy:{DescID: 58, ReferencedDescID: 59}, PUBLIC, DROP] -> ABSENT
    [RelationDependedOnBy:{DescID: 58, ReferencedDescID: 60}, PUBLIC, DROP] -> ABSENT
    [View:{DescID: 59}, TXN_DROPPED, DROP] -> DROPPED
    [Namespace:{DescID: 59, Name: v3}, PUBLIC, DROP] -> ABSENT
    [Owner:{DescID: 59}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 59, Username: admin}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 59, Username: public}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 59, Username: root}, PUBLIC, DROP] -> ABSENT
    [Locality:{DescID: 59}, PUBLIC, DROP] -> ABSENT
    [View:{DescID: 60}, TXN_DROPPED, DROP] -> DROPPED
    [Namespace:{DescID: 60, Name: v4}, PUBLIC, DROP] -> ABSENT
    [Owner:{DescID: 60}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 60, Username: admin}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 60, Username: public}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 60, Username: root}, PUBLIC, DROP] -> ABSENT
    [Locality:{DescID: 60}, PUBLIC, DROP] -> ABSENT
    [RelationDependedOnBy:{DescID: 60, ReferencedDescID: 63}, PUBLIC, DROP] -> ABSENT
    [View:{DescID: 63}, TXN_DROPPED, DROP] -> DROPPED
    [Namespace:{DescID: 63, Name: v5}, PUBLIC, DROP] -> ABSENT
    [Owner:{DescID: 63}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 63, Username: admin}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 63, Username: public}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 63, Username: root}, PUBLIC, DROP] -> ABSENT
    [ViewDependsOnType:{DescID: 63, ReferencedDescID: 61}, PUBLIC, DROP] -> ABSENT
    [ViewDependsOnType:{DescID: 63, ReferencedDescID: 62}, PUBLIC, DROP] -> ABSENT
    [Locality:{DescID: 63}, PUBLIC, DROP] -> ABSENT
    [Type:{DescID: 61}, TXN_DROPPED, DROP] -> DROPPED
    [Namespace:{DescID: 61, Name: typ}, PUBLIC, DROP] -> ABSENT
    [Type:{DescID: 62}, TXN_DROPPED, DROP] -> DROPPED
    [Namespace:{DescID: 62, Name: _typ}, PUBLIC, DROP] -> ABSENT
    [Schema:{DescID: 54}, TXN_DROPPED, DROP] -> DROPPED
    [DatabaseSchemaEntry:{DescID: 50, ReferencedDescID: 54}, PUBLIC, DROP] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 55
    *scop.DrainDescriptorName
      TableID: 55
    *scop.MarkDescriptorAsDropped
      DescID: 56
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 56
      TableID: 55
    *scop.RemoveColumnDefaultExpression
      ColumnID: 3
      TableID: 56
    *scop.UpdateRelationDeps
      TableID: 56
    *scop.DrainDescriptorName
      TableID: 56
    *scop.MarkDescriptorAsDropped
      DescID: 57
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 57
      TableID: 56
    *scop.DrainDescriptorName
      TableID: 57
    *scop.MarkDescriptorAsDropped
      DescID: 58
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 58
      TableID: 57
    *scop.MarkDescriptorAsDropped
      DescID: 59
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 59
      TableID: 57
    *scop.DrainDescriptorName
      TableID: 58
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 59
      TableID: 58
    *scop.MarkDescriptorAsDropped
      DescID: 60
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 60
      TableID: 58
    *scop.DrainDescriptorName
      TableID: 59
    *scop.DrainDescriptorName
      TableID: 60
    *scop.MarkDescriptorAsDropped
      DescID: 63
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 63
      TableID: 60
    *scop.DrainDescriptorName
      TableID: 63
    *scop.MarkDescriptorAsDropped
      DescID: 61
    *scop.RemoveTypeBackRef
      DescID: 63
      TypeID: 61
    *scop.MarkDescriptorAsDropped
      DescID: 62
    *scop.RemoveTypeBackRef
      DescID: 63
      TypeID: 62
    *scop.DrainDescriptorName
      TableID: 61
    *scop.DrainDescriptorName
      TableID: 62
    *scop.DeleteDatabaseSchemaEntry
      DatabaseID: 50
      SchemaID: 54
    *scop.MarkDescriptorAsDropped
      DescID: 54
PostCommitPhase non-revertible stage 1 of 1 with 21 MutationType ops
  transitions:
    [Sequence:{DescID: 55}, DROPPED, DROP] -> ABSENT
    [Table:{DescID: 56}, DROPPED, DROP] -> ABSENT
    [ColumnName:{DescID: 56, ColumnID: 1, Name: id}, PUBLIC, DROP] -> ABSENT
    [Column:{DescID: 56, ColumnID: 1}, DELETE_AND_WRITE_ONLY, DROP] -> ABSENT
    [ColumnName:{DescID: 56, ColumnID: 2, Name: name}, PUBLIC, DROP] -> ABSENT
    [Column:{DescID: 56, ColumnID: 2}, DELETE_AND_WRITE_ONLY, DROP] -> ABSENT
    [ColumnName:{DescID: 56, ColumnID: 3, Name: val}, PUBLIC, DROP] -> ABSENT
    [Column:{DescID: 56, ColumnID: 3}, DELETE_AND_WRITE_ONLY, DROP] -> ABSENT
    [PrimaryIndex:{DescID: 56, IndexID: 1}, VALIDATED, DROP] -> ABSENT
    [IndexName:{DescID: 56, IndexID: 1, Name: t1_pkey}, PUBLIC, DROP] -> ABSENT
    [View:{DescID: 57}, DROPPED, DROP] -> ABSENT
    [View:{DescID: 58}, DROPPED, DROP] -> ABSENT
    [View:{DescID: 59}, DROPPED, DROP] -> ABSENT
    [View:{DescID: 60}, DROPPED, DROP] -> ABSENT
    [View:{DescID: 63}, DROPPED, DROP] -> ABSENT
    [Type:{DescID: 61}, DROPPED, DROP] -> ABSENT
    [Type:{DescID: 62}, DROPPED, DROP] -> ABSENT
    [Schema:{DescID: 54}, DROPPED, DROP] -> ABSENT
  ops:
    *scop.LogEvent
      DescID: 55
      Direction: 2
      Element:
        sequence:
          sequenceId: 55
      Metadata:
        Statement: DROP SCHEMA defaultdb.sc1 CASCADE
        TargetMetadata:
          SourceElementID: 2
          SubWorkID: 1
        Username: root
    *scop.CreateGcJobForTable
      TableID: 55
    *scop.LogEvent
      DescID: 56
      Direction: 2
      Element:
        table:
          tableId: 56
      Metadata:
        Statement: DROP SCHEMA defaultdb.sc1 CASCADE
        TargetMetadata:
          SourceElementID: 2
          SubWorkID: 1
        Username: root
    *scop.CreateGcJobForTable
      TableID: 56
    *scop.LogEvent
      DescID: 57
      Direction: 2
      Element:
        view:
          tableId: 57
      Metadata:
        Statement: DROP SCHEMA defaultdb.sc1 CASCADE
        TargetMetadata:
          SourceElementID: 4
          SubWorkID: 1
        Username: root
    *scop.CreateGcJobForTable
      TableID: 57
    *scop.LogEvent
      DescID: 58
      Direction: 2
      Element:
        view:
          tableId: 58
      Metadata:
        Statement: DROP SCHEMA defaultdb.sc1 CASCADE
        TargetMetadata:
          SourceElementID: 5
          SubWorkID: 1
        Username: root
    *scop.CreateGcJobForTable
      TableID: 58
    *scop.LogEvent
      DescID: 59
      Direction: 2
      Element:
        view:
          tableId: 59
      Metadata:
        Statement: DROP SCHEMA defaultdb.sc1 CASCADE
        TargetMetadata:
          SourceElementID: 6
          SubWorkID: 1
        Username: root
    *scop.CreateGcJobForTable
      TableID: 59
    *scop.LogEvent
      DescID: 60
      Direction: 2
      Element:
        view:
          tableId: 60
      Metadata:
        Statement: DROP SCHEMA defaultdb.sc1 CASCADE
        TargetMetadata:
          SourceElementID: 6
          SubWorkID: 1
        Username: root
    *scop.CreateGcJobForTable
      TableID: 60
    *scop.LogEvent
      DescID: 63
      Direction: 2
      Element:
        view:
          tableId: 63
      Metadata:
        Statement: DROP SCHEMA defaultdb.sc1 CASCADE
        TargetMetadata:
          SourceElementID: 8
          SubWorkID: 1
        Username: root
    *scop.CreateGcJobForTable
      TableID: 63
    *scop.LogEvent
      DescID: 61
      Direction: 2
      Element:
        type:
          typeId: 61
      Metadata:
        Statement: DROP SCHEMA defaultdb.sc1 CASCADE
        TargetMetadata:
          SourceElementID: 2
          SubWorkID: 1
        Username: root
    *scop.DeleteDescriptor
      DescriptorID: 61
    *scop.LogEvent
      DescID: 62
      Direction: 2
      Element:
        type:
          typeId: 62
      Metadata:
        Statement: DROP SCHEMA defaultdb.sc1 CASCADE
        TargetMetadata:
          SourceElementID: 2
          SubWorkID: 1
        Username: root
    *scop.DeleteDescriptor
      DescriptorID: 62
    *scop.DrainDescriptorName
      TableID: 54
    *scop.LogEvent
      DescID: 54
      Direction: 2
      Element:
        schema:
          dependentObjects:
          - 55
          - 56
          - 57
          - 58
          - 59
          - 60
          - 61
          - 62
          - 63
          schemaId: 54
      Metadata:
        Statement: DROP SCHEMA defaultdb.sc1 CASCADE
        TargetMetadata:
          SourceElementID: 1
          SubWorkID: 1
        Username: root
    *scop.DeleteDescriptor
      DescriptorID: 54
