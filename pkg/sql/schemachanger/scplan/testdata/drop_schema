create-schema
CREATE SCHEMA SC1
----

create-sequence
CREATE SEQUENCE sc1.SQ1
----

create-table
CREATE TABLE sc1.t1 (id INT8 PRIMARY KEY, name VARCHAR(256), val INT8 DEFAULT nextval('sc1.sq1'))
----

create-view
CREATE VIEW sc1.v1 AS (SELECT name FROM sc1.t1)
----

create-view
CREATE VIEW sc1.v2 AS (SELECT name AS n1, name AS n2 FROM sc1.v1)
----

create-view
CREATE VIEW sc1.v3 AS (SELECT name, n1 FROM sc1.v1, sc1.v2);
----

create-view
CREATE VIEW sc1.v4 AS (SELECT n2, n1 FROM sc1.v2);
----

create-type
CREATE TYPE sc1.typ AS ENUM('a')
----

create-view
CREATE VIEW sc1.v5 AS (SELECT 'a'::sc1.typ::STRING AS k, n2, n1 FROM sc1.v4)
----

deps
DROP SCHEMA defaultdb.SC1 CASCADE
----
- from: [Column:{DescID: 1007, ColumnID: 1}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 1007, ColumnID: 1, Name: id}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 1007, ColumnID: 2}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 1007, ColumnID: 2, Name: name}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 1007, ColumnID: 3}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 1007, ColumnID: 3, Name: val}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [ColumnName:{DescID: 1007, ColumnID: 1, Name: id}, ABSENT]
  to:   [Column:{DescID: 1007, ColumnID: 1}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 1007, ColumnID: 2, Name: name}, ABSENT]
  to:   [Column:{DescID: 1007, ColumnID: 2}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 1007, ColumnID: 3, Name: val}, ABSENT]
  to:   [Column:{DescID: 1007, ColumnID: 3}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [DatabaseSchemaEntry:{DescID: 1001, ReferencedDescID: 1005}, ABSENT]
  to:   [Schema:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: schema can be dropped after schema entry inside the database
- from: [IndexName:{DescID: 1007, IndexID: 1, Name: t1_pkey}, ABSENT]
  to:   [PrimaryIndex:{DescID: 1007, IndexID: 1}, ABSENT]
  kind: Precedence
  rule: index unnamed before index no longer exists
- from: [Namespace:{DescID: 1006, Name: sq1}, ABSENT]
  to:   [Sequence:{DescID: 1006}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1007, Name: t1}, ABSENT]
  to:   [Table:{DescID: 1007}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1008, Name: v1}, ABSENT]
  to:   [View:{DescID: 1008}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1009, Name: v2}, ABSENT]
  to:   [View:{DescID: 1009}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1010, Name: v3}, ABSENT]
  to:   [View:{DescID: 1010}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1011, Name: v4}, ABSENT]
  to:   [View:{DescID: 1011}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1012, Name: typ}, ABSENT]
  to:   [Type:{DescID: 1012}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1013, Name: _typ}, ABSENT]
  to:   [Type:{DescID: 1013}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1014, Name: v5}, ABSENT]
  to:   [View:{DescID: 1014}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [PrimaryIndex:{DescID: 1007, IndexID: 1}, VALIDATED]
  to:   [IndexName:{DescID: 1007, IndexID: 1, Name: t1_pkey}, ABSENT]
  kind: Precedence
  rule: index unnamed after index no longer public
- from: [Sequence:{DescID: 1006}, ABSENT]
  to:   [Schema:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Sequence:{DescID: 1006}, DROPPED]
  to:   [Locality:{DescID: 1006}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 1006}, DROPPED]
  to:   [Namespace:{DescID: 1006, Name: sq1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Sequence:{DescID: 1006}, DROPPED]
  to:   [Owner:{DescID: 1006}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 1006}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1006, ReferencedDescID: 1007}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Sequence:{DescID: 1006}, DROPPED]
  to:   [UserPrivileges:{DescID: 1006, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 1006}, DROPPED]
  to:   [UserPrivileges:{DescID: 1006, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 1006}, DROPPED]
  to:   [UserPrivileges:{DescID: 1006, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 1007}, ABSENT]
  to:   [Schema:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Table:{DescID: 1007}, DROPPED]
  to:   [DefaultExpression:{DescID: 1007, ColumnID: 3}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 1007}, DROPPED]
  to:   [Locality:{DescID: 1007}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 1007}, DROPPED]
  to:   [Namespace:{DescID: 1007, Name: t1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Table:{DescID: 1007}, DROPPED]
  to:   [Owner:{DescID: 1007}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 1007}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1006, ReferencedDescID: 1007}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 1007}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1007, ReferencedDescID: 1008}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 1007}, DROPPED]
  to:   [UserPrivileges:{DescID: 1007, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 1007}, DROPPED]
  to:   [UserPrivileges:{DescID: 1007, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 1007}, DROPPED]
  to:   [UserPrivileges:{DescID: 1007, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Type:{DescID: 1012}, ABSENT]
  to:   [Schema:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Type:{DescID: 1012}, DROPPED]
  to:   [Namespace:{DescID: 1012, Name: typ}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Type:{DescID: 1012}, DROPPED]
  to:   [ViewDependsOnType:{DescID: 1014, ReferencedDescID: 1012}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Type:{DescID: 1013}, ABSENT]
  to:   [Schema:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Type:{DescID: 1013}, DROPPED]
  to:   [Namespace:{DescID: 1013, Name: _typ}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Type:{DescID: 1013}, DROPPED]
  to:   [ViewDependsOnType:{DescID: 1014, ReferencedDescID: 1013}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1008}, ABSENT]
  to:   [Schema:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 1008}, DROPPED]
  to:   [Locality:{DescID: 1008}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [Namespace:{DescID: 1008, Name: v1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [Owner:{DescID: 1008}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1007, ReferencedDescID: 1008}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1008, ReferencedDescID: 1009}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1008, ReferencedDescID: 1010}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [UserPrivileges:{DescID: 1008, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [UserPrivileges:{DescID: 1008, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [UserPrivileges:{DescID: 1008, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1009}, ABSENT]
  to:   [Schema:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 1009}, DROPPED]
  to:   [Locality:{DescID: 1009}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [Namespace:{DescID: 1009, Name: v2}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [Owner:{DescID: 1009}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1008, ReferencedDescID: 1009}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1009, ReferencedDescID: 1010}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1009, ReferencedDescID: 1011}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [UserPrivileges:{DescID: 1009, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [UserPrivileges:{DescID: 1009, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [UserPrivileges:{DescID: 1009, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1010}, ABSENT]
  to:   [Schema:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 1010}, DROPPED]
  to:   [Locality:{DescID: 1010}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1010}, DROPPED]
  to:   [Namespace:{DescID: 1010, Name: v3}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 1010}, DROPPED]
  to:   [Owner:{DescID: 1010}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1010}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1008, ReferencedDescID: 1010}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1010}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1009, ReferencedDescID: 1010}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1010}, DROPPED]
  to:   [UserPrivileges:{DescID: 1010, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1010}, DROPPED]
  to:   [UserPrivileges:{DescID: 1010, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1010}, DROPPED]
  to:   [UserPrivileges:{DescID: 1010, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1011}, ABSENT]
  to:   [Schema:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 1011}, DROPPED]
  to:   [Locality:{DescID: 1011}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1011}, DROPPED]
  to:   [Namespace:{DescID: 1011, Name: v4}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 1011}, DROPPED]
  to:   [Owner:{DescID: 1011}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1011}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1009, ReferencedDescID: 1011}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1011}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1011, ReferencedDescID: 1014}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1011}, DROPPED]
  to:   [UserPrivileges:{DescID: 1011, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1011}, DROPPED]
  to:   [UserPrivileges:{DescID: 1011, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1011}, DROPPED]
  to:   [UserPrivileges:{DescID: 1011, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1014}, ABSENT]
  to:   [Schema:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 1014}, DROPPED]
  to:   [Locality:{DescID: 1014}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1014}, DROPPED]
  to:   [Namespace:{DescID: 1014, Name: v5}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 1014}, DROPPED]
  to:   [Owner:{DescID: 1014}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1014}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1011, ReferencedDescID: 1014}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1014}, DROPPED]
  to:   [UserPrivileges:{DescID: 1014, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1014}, DROPPED]
  to:   [UserPrivileges:{DescID: 1014, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1014}, DROPPED]
  to:   [UserPrivileges:{DescID: 1014, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped

ops
DROP SCHEMA defaultdb.SC1 CASCADE
----
StatementPhase stage 1 of 1 with 23 MutationType ops
  transitions:
    [[Sequence:{DescID: 1006}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1006}, ABSENT], PUBLIC] -> ABSENT
    [[Table:{DescID: 1007}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1007}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 1007, ColumnID: 1}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 1007, ColumnID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 1007, ColumnID: 2}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 1007, ColumnID: 2}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 1007, ColumnID: 3}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 1007, ColumnID: 3}, ABSENT], PUBLIC] -> ABSENT
    [[PrimaryIndex:{DescID: 1007, IndexID: 1}, ABSENT], PUBLIC] -> VALIDATED
    [[ConstraintComment:{DescID: 1007, ConstraintType: PrimaryKey, Name: t1_pkey}, ABSENT], PUBLIC] -> ABSENT
    [[IndexComment:{DescID: 1007, IndexID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1008}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1008}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1009}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1009}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1010}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1010}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1011}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1011}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1014}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1014}, ABSENT], PUBLIC] -> ABSENT
    [[Type:{DescID: 1012}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[Type:{DescID: 1013}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[Schema:{DescID: 1005}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[SchemaComment:{DescID: 1005}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1006
    *scop.RemoveTableComment
      TableID: 1006
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1007
    *scop.RemoveTableComment
      TableID: 1007
    *scop.RemoveColumnComment
      ColumnID: 1
      TableID: 1007
    *scop.RemoveColumnComment
      ColumnID: 2
      TableID: 1007
    *scop.RemoveColumnComment
      ColumnID: 3
      TableID: 1007
    *scop.RemoveConstraintComment
      ConstraintName: t1_pkey
      ConstraintType: 4
      TableID: 1007
    *scop.RemoveIndexComment
      IndexID: 1
      TableID: 1007
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1008
    *scop.RemoveTableComment
      TableID: 1008
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1009
    *scop.RemoveTableComment
      TableID: 1009
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1010
    *scop.RemoveTableComment
      TableID: 1010
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1011
    *scop.RemoveTableComment
      TableID: 1011
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1014
    *scop.RemoveTableComment
      TableID: 1014
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1012
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1013
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1005
    *scop.RemoveSchemaComment
      SchemaID: 1005
PreCommitPhase stage 1 of 1 with 43 MutationType ops
  transitions:
    [[Sequence:{DescID: 1006}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1006, Name: sq1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1006}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1006, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1006, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1006, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1006}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1006, ReferencedDescID: 1007}, ABSENT], PUBLIC] -> ABSENT
    [[DefaultExpression:{DescID: 1007, ColumnID: 3}, ABSENT], PUBLIC] -> ABSENT
    [[Table:{DescID: 1007}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1007, Name: t1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1007}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1007, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1007, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1007, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 1007, ColumnID: 1, Name: id}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 1007, ColumnID: 2, Name: name}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 1007, ColumnID: 3, Name: val}, ABSENT], PUBLIC] -> ABSENT
    [[IndexName:{DescID: 1007, IndexID: 1, Name: t1_pkey}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1007}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1007, ReferencedDescID: 1008}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1008}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1008, Name: v1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1008}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1008, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1008, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1008, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1008}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1008, ReferencedDescID: 1009}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1008, ReferencedDescID: 1010}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1009}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1009, Name: v2}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1009}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1009, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1009, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1009, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1009}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1009, ReferencedDescID: 1010}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1009, ReferencedDescID: 1011}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1010}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1010, Name: v3}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1010}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1010, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1010, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1010, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1010}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1011}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1011, Name: v4}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1011}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1011, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1011, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1011, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1011}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1011, ReferencedDescID: 1014}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1014}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1014, Name: v5}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1014}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1014, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1014, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1014, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[ViewDependsOnType:{DescID: 1014, ReferencedDescID: 1012}, ABSENT], PUBLIC] -> ABSENT
    [[ViewDependsOnType:{DescID: 1014, ReferencedDescID: 1013}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1014}, ABSENT], PUBLIC] -> ABSENT
    [[Type:{DescID: 1012}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1012, Name: typ}, ABSENT], PUBLIC] -> ABSENT
    [[Type:{DescID: 1013}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1013, Name: _typ}, ABSENT], PUBLIC] -> ABSENT
    [[Schema:{DescID: 1005}, ABSENT], TXN_DROPPED] -> DROPPED
    [[DatabaseSchemaEntry:{DescID: 1001, ReferencedDescID: 1005}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 1006
    *scop.DrainDescriptorName
      TableID: 1006
    *scop.MarkDescriptorAsDropped
      DescID: 1007
    *scop.DrainDescriptorName
      TableID: 1007
    *scop.MarkDescriptorAsDropped
      DescID: 1008
    *scop.DrainDescriptorName
      TableID: 1008
    *scop.MarkDescriptorAsDropped
      DescID: 1009
    *scop.DrainDescriptorName
      TableID: 1009
    *scop.MarkDescriptorAsDropped
      DescID: 1010
    *scop.DrainDescriptorName
      TableID: 1010
    *scop.MarkDescriptorAsDropped
      DescID: 1011
    *scop.DrainDescriptorName
      TableID: 1011
    *scop.MarkDescriptorAsDropped
      DescID: 1014
    *scop.DrainDescriptorName
      TableID: 1014
    *scop.MarkDescriptorAsDropped
      DescID: 1012
    *scop.DrainDescriptorName
      TableID: 1012
    *scop.MarkDescriptorAsDropped
      DescID: 1013
    *scop.DrainDescriptorName
      TableID: 1013
    *scop.MarkDescriptorAsDropped
      DescID: 1005
    *scop.DeleteDatabaseSchemaEntry
      DatabaseID: 1001
      SchemaID: 1005
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1007
      TableID: 1006
    *scop.RemoveColumnDefaultExpression
      ColumnID: 3
      TableID: 1007
    *scop.UpdateRelationDeps
      TableID: 1007
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1008
      TableID: 1007
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1009
      TableID: 1008
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1010
      TableID: 1008
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1010
      TableID: 1009
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1011
      TableID: 1009
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1014
      TableID: 1011
    *scop.RemoveTypeBackRef
      DescID: 1014
      TypeID: 1012
    *scop.RemoveTypeBackRef
      DescID: 1014
      TypeID: 1013
    *scop.AddJobReference
      DescriptorID: 1001
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1005
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1006
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1007
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1008
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1009
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1010
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1011
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1012
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1013
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1014
      JobID: 1
    *scop.CreateDeclarativeSchemaChangerJob
      JobID: 1
      TargetState:
        Authorization:
          UserName: root
        Statements:
        - statement: DROP SCHEMA defaultdb.sc1 CASCADE
          redactedstatement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
          statementtag: DROP SCHEMA
PostCommitNonRevertiblePhase stage 1 of 1 with 33 MutationType ops
  transitions:
    [[Sequence:{DescID: 1006}, ABSENT], DROPPED] -> ABSENT
    [[Table:{DescID: 1007}, ABSENT], DROPPED] -> ABSENT
    [[Column:{DescID: 1007, ColumnID: 1}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 1007, ColumnID: 2}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 1007, ColumnID: 3}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[PrimaryIndex:{DescID: 1007, IndexID: 1}, ABSENT], VALIDATED] -> ABSENT
    [[View:{DescID: 1008}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 1009}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 1010}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 1011}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 1014}, ABSENT], DROPPED] -> ABSENT
    [[Type:{DescID: 1012}, ABSENT], DROPPED] -> ABSENT
    [[Type:{DescID: 1013}, ABSENT], DROPPED] -> ABSENT
    [[Schema:{DescID: 1005}, ABSENT], DROPPED] -> ABSENT
  ops:
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Sequence:
          sequenceId: 1006
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1006
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Table:
          tableId: 1007
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1007
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 1008
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 4
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1008
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 1009
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 5
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1009
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 1010
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 6
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1010
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 1011
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 6
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1011
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 1014
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 8
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1014
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Type:
          typeId: 1012
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 1
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 1012
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Type:
          typeId: 1013
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 2
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 1013
    *scop.DrainDescriptorName
      TableID: 1005
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Schema:
          dependentObjects:
          - 1006
          - 1007
          - 1008
          - 1009
          - 1010
          - 1011
          - 1012
          - 1013
          - 1014
          schemaId: 1005
      Statement: DROP SCHEMA ‹defaultdb›.‹sc1› CASCADE
      StatementTag: DROP SCHEMA
      TargetMetadata:
        SourceElementID: 1
        SubWorkID: 1
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 1005
    *scop.RemoveJobReference
      DescriptorID: 1001
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1005
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1006
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1007
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1008
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1009
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1010
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1011
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1012
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1013
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1014
      JobID: 1
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1
