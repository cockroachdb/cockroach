create-table
CREATE TABLE defaultdb.t1 (id INT PRIMARY KEY, name varchar(256))
----

create-view
CREATE VIEW defaultdb.v1 AS (SELECT name FROM defaultdb.t1)
----

ops
DROP VIEW defaultdb.v1
----
StatementPhase stage 1 of 1 with 2 MutationType ops
  transitions:
    [[View:{DescID: 1006}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1006}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1006
    *scop.RemoveTableComment
      TableID: 1006
PreCommitPhase stage 1 of 1 with 6 MutationType ops
  transitions:
    [[View:{DescID: 1006}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1006, Name: v1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1006}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1006, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1006, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1006, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1006}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1005, ReferencedDescID: 1006}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 1006
    *scop.DrainDescriptorName
      TableID: 1006
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1006
      TableID: 1005
    *scop.AddJobReference
      DescriptorID: 1005
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1006
      JobID: 1
    *scop.CreateDeclarativeSchemaChangerJob
      JobID: 1
      TargetState:
        Authorization:
          UserName: root
        Statements:
        - statement: DROP VIEW defaultdb.v1
          redactedstatement: DROP VIEW ‹defaultdb›.public.‹v1›
          statementtag: DROP VIEW
PostCommitNonRevertiblePhase stage 1 of 1 with 5 MutationType ops
  transitions:
    [[View:{DescID: 1006}, ABSENT], DROPPED] -> ABSENT
  ops:
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 1006
      Statement: DROP VIEW ‹defaultdb›.public.‹v1›
      StatementTag: DROP VIEW
      TargetMetadata:
        SourceElementID: 1
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1006
    *scop.RemoveJobReference
      DescriptorID: 1005
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1006
      JobID: 1
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1

deps
DROP VIEW defaultdb.v1
----
- from: [Namespace:{DescID: 1006, Name: v1}, ABSENT]
  to:   [View:{DescID: 1006}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [View:{DescID: 1006}, DROPPED]
  to:   [Locality:{DescID: 1006}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [Namespace:{DescID: 1006, Name: v1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [Owner:{DescID: 1006}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1005, ReferencedDescID: 1006}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [UserPrivileges:{DescID: 1006, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [UserPrivileges:{DescID: 1006, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [UserPrivileges:{DescID: 1006, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped

create-view
CREATE VIEW defaultdb.v2 AS (SELECT name AS n1, name AS n2 FROM v1)
----

create-view
CREATE VIEW defaultdb.v3 AS (SELECT name, n1 FROM v1, v2);
----

create-view
CREATE VIEW defaultdb.v4 AS (SELECT n2, n1 FROM v2);
----

create-type
CREATE TYPE defaultdb.typ AS ENUM('a')
----

create-view
CREATE VIEW v5 AS (SELECT 'a'::defaultdb.typ::string AS k, n2, n1 from defaultdb.v4)
----

ops
DROP VIEW defaultdb.v1 CASCADE
----
StatementPhase stage 1 of 1 with 10 MutationType ops
  transitions:
    [[View:{DescID: 1006}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1006}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1007}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1007}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1008}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1008}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1009}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1009}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1012}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1012}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1006
    *scop.RemoveTableComment
      TableID: 1006
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1007
    *scop.RemoveTableComment
      TableID: 1007
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1008
    *scop.RemoveTableComment
      TableID: 1008
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1009
    *scop.RemoveTableComment
      TableID: 1009
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1012
    *scop.RemoveTableComment
      TableID: 1012
PreCommitPhase stage 1 of 1 with 25 MutationType ops
  transitions:
    [[View:{DescID: 1006}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1006, Name: v1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1006}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1006, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1006, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1006, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1006}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1005, ReferencedDescID: 1006}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1006, ReferencedDescID: 1007}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1006, ReferencedDescID: 1008}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1007}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1007, Name: v2}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1007}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1007, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1007, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1007, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1007}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1007, ReferencedDescID: 1008}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1007, ReferencedDescID: 1009}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1008}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1008, Name: v3}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1008}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1008, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1008, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1008, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1008}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1009}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1009, Name: v4}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1009}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1009, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1009, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1009, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1009}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1009, ReferencedDescID: 1012}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 1012}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1012, Name: v5}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1012}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1012, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1012, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1012, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[ViewDependsOnType:{DescID: 1012, ReferencedDescID: 1010}, ABSENT], PUBLIC] -> ABSENT
    [[ViewDependsOnType:{DescID: 1012, ReferencedDescID: 1011}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1012}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 1006
    *scop.DrainDescriptorName
      TableID: 1006
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1006
      TableID: 1005
    *scop.MarkDescriptorAsDropped
      DescID: 1007
    *scop.DrainDescriptorName
      TableID: 1007
    *scop.MarkDescriptorAsDropped
      DescID: 1008
    *scop.DrainDescriptorName
      TableID: 1008
    *scop.MarkDescriptorAsDropped
      DescID: 1009
    *scop.DrainDescriptorName
      TableID: 1009
    *scop.MarkDescriptorAsDropped
      DescID: 1012
    *scop.DrainDescriptorName
      TableID: 1012
    *scop.RemoveTypeBackRef
      DescID: 1012
      TypeID: 1010
    *scop.RemoveTypeBackRef
      DescID: 1012
      TypeID: 1011
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1007
      TableID: 1006
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1008
      TableID: 1006
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1008
      TableID: 1007
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1009
      TableID: 1007
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1012
      TableID: 1009
    *scop.AddJobReference
      DescriptorID: 1005
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1006
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1007
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1008
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1009
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1012
      JobID: 1
    *scop.CreateDeclarativeSchemaChangerJob
      JobID: 1
      TargetState:
        Authorization:
          UserName: root
        Statements:
        - statement: DROP VIEW defaultdb.v1 CASCADE
          redactedstatement: DROP VIEW ‹defaultdb›.public.‹v1› CASCADE
          statementtag: DROP VIEW
PostCommitNonRevertiblePhase stage 1 of 1 with 17 MutationType ops
  transitions:
    [[View:{DescID: 1006}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 1007}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 1008}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 1009}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 1012}, ABSENT], DROPPED] -> ABSENT
  ops:
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 1006
      Statement: DROP VIEW ‹defaultdb›.public.‹v1› CASCADE
      StatementTag: DROP VIEW
      TargetMetadata:
        SourceElementID: 1
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1006
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 1007
      Statement: DROP VIEW ‹defaultdb›.public.‹v1› CASCADE
      StatementTag: DROP VIEW
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1007
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 1008
      Statement: DROP VIEW ‹defaultdb›.public.‹v1› CASCADE
      StatementTag: DROP VIEW
      TargetMetadata:
        SourceElementID: 3
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1008
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 1009
      Statement: DROP VIEW ‹defaultdb›.public.‹v1› CASCADE
      StatementTag: DROP VIEW
      TargetMetadata:
        SourceElementID: 3
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1009
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 1012
      Statement: DROP VIEW ‹defaultdb›.public.‹v1› CASCADE
      StatementTag: DROP VIEW
      TargetMetadata:
        SourceElementID: 5
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1012
    *scop.RemoveJobReference
      DescriptorID: 1005
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1006
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1007
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1008
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1009
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1012
      JobID: 1
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1

deps
DROP VIEW defaultdb.v1 CASCADE
----
- from: [Namespace:{DescID: 1006, Name: v1}, ABSENT]
  to:   [View:{DescID: 1006}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1007, Name: v2}, ABSENT]
  to:   [View:{DescID: 1007}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1008, Name: v3}, ABSENT]
  to:   [View:{DescID: 1008}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1009, Name: v4}, ABSENT]
  to:   [View:{DescID: 1009}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 1012, Name: v5}, ABSENT]
  to:   [View:{DescID: 1012}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [View:{DescID: 1006}, DROPPED]
  to:   [Locality:{DescID: 1006}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [Namespace:{DescID: 1006, Name: v1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [Owner:{DescID: 1006}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1005, ReferencedDescID: 1006}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1006, ReferencedDescID: 1007}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1006, ReferencedDescID: 1008}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [UserPrivileges:{DescID: 1006, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [UserPrivileges:{DescID: 1006, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1006}, DROPPED]
  to:   [UserPrivileges:{DescID: 1006, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1007}, DROPPED]
  to:   [Locality:{DescID: 1007}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1007}, DROPPED]
  to:   [Namespace:{DescID: 1007, Name: v2}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 1007}, DROPPED]
  to:   [Owner:{DescID: 1007}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1007}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1006, ReferencedDescID: 1007}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1007}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1007, ReferencedDescID: 1008}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1007}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1007, ReferencedDescID: 1009}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1007}, DROPPED]
  to:   [UserPrivileges:{DescID: 1007, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1007}, DROPPED]
  to:   [UserPrivileges:{DescID: 1007, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1007}, DROPPED]
  to:   [UserPrivileges:{DescID: 1007, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [Locality:{DescID: 1008}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [Namespace:{DescID: 1008, Name: v3}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [Owner:{DescID: 1008}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1006, ReferencedDescID: 1008}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1007, ReferencedDescID: 1008}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [UserPrivileges:{DescID: 1008, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [UserPrivileges:{DescID: 1008, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1008}, DROPPED]
  to:   [UserPrivileges:{DescID: 1008, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [Locality:{DescID: 1009}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [Namespace:{DescID: 1009, Name: v4}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [Owner:{DescID: 1009}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1007, ReferencedDescID: 1009}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1009, ReferencedDescID: 1012}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [UserPrivileges:{DescID: 1009, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [UserPrivileges:{DescID: 1009, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1009}, DROPPED]
  to:   [UserPrivileges:{DescID: 1009, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1012}, DROPPED]
  to:   [Locality:{DescID: 1012}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1012}, DROPPED]
  to:   [Namespace:{DescID: 1012, Name: v5}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 1012}, DROPPED]
  to:   [Owner:{DescID: 1012}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1012}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1009, ReferencedDescID: 1012}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 1012}, DROPPED]
  to:   [UserPrivileges:{DescID: 1012, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1012}, DROPPED]
  to:   [UserPrivileges:{DescID: 1012, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 1012}, DROPPED]
  to:   [UserPrivileges:{DescID: 1012, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
