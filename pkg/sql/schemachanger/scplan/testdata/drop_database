create-database
CREATE DATABASE db1;
----

create-schema
CREATE SCHEMA db1.sc1
----

create-sequence
CREATE SEQUENCE db1.public.SQ1
----

create-sequence
CREATE SEQUENCE db1.sc1.SQ1
----

create-table
CREATE TABLE db1.sc1.t1 (id INT PRIMARY KEY, name varchar(256), val int DEFAULT nextval('db1.sc1.sq1'))
----

create-table
CREATE TABLE db1.public.t1 (id INT PRIMARY KEY, name varchar(256), val int DEFAULT nextval('db1.public.sq1'))
----

create-view
CREATE VIEW db1.sc1.v1 AS (SELECT name FROM db1.sc1.t1)
----

create-view
CREATE VIEW db1.sc1.v2 AS (SELECT name AS n1, name AS n2 FROM db1.sc1.v1)
----

create-view
CREATE VIEW db1.sc1.v3 AS (SELECT name, n1 FROM db1.sc1.v1, db1.sc1.v2);
----

create-view
CREATE VIEW db1.sc1.v4 AS (SELECT n2, n1 FROM db1.sc1.v2);
----

create-type
CREATE TYPE db1.sc1.typ AS ENUM('a')
----

create-view
CREATE VIEW db1.sc1.v5 AS (SELECT 'a'::db1.sc1.typ::string AS k, n2, n1 from db1.sc1.v4)
----

ops
DROP DATABASE db1 CASCADE
----
StatementPhase stage 1 of 1 with 37 MutationType ops
  transitions:
    [[Sequence:{DescID: 57}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 57}, ABSENT], PUBLIC] -> ABSENT
    [[Table:{DescID: 60}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 60}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 60, ColumnID: 1}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 60, ColumnID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 60, ColumnID: 2}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 60, ColumnID: 2}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 60, ColumnID: 3}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 60, ColumnID: 3}, ABSENT], PUBLIC] -> ABSENT
    [[PrimaryIndex:{DescID: 60, IndexID: 1}, ABSENT], PUBLIC] -> VALIDATED
    [[ConstraintComment:{DescID: 60, ConstraintType: PrimaryKey, Name: t1_pkey}, ABSENT], PUBLIC] -> ABSENT
    [[IndexComment:{DescID: 60, IndexID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[Schema:{DescID: 55}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[SchemaComment:{DescID: 55}, ABSENT], PUBLIC] -> ABSENT
    [[Sequence:{DescID: 58}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 58}, ABSENT], PUBLIC] -> ABSENT
    [[Table:{DescID: 59}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 59}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 59, ColumnID: 1}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 59, ColumnID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 59, ColumnID: 2}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 59, ColumnID: 2}, ABSENT], PUBLIC] -> ABSENT
    [[Column:{DescID: 59, ColumnID: 3}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[ColumnComment:{DescID: 59, ColumnID: 3}, ABSENT], PUBLIC] -> ABSENT
    [[PrimaryIndex:{DescID: 59, IndexID: 1}, ABSENT], PUBLIC] -> VALIDATED
    [[ConstraintComment:{DescID: 59, ConstraintType: PrimaryKey, Name: t1_pkey}, ABSENT], PUBLIC] -> ABSENT
    [[IndexComment:{DescID: 59, IndexID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 61}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 61}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 62}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 62}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 63}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 63}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 64}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 64}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 67}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 67}, ABSENT], PUBLIC] -> ABSENT
    [[Type:{DescID: 65}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[Type:{DescID: 66}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[Schema:{DescID: 56}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[SchemaComment:{DescID: 56}, ABSENT], PUBLIC] -> ABSENT
    [[Database:{DescID: 54}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[DatabaseComment:{DescID: 54}, ABSENT], PUBLIC] -> ABSENT
    [[DatabaseRoleSetting:{DescID: 54, RoleName: TODO(fqazi) Roles are not currently fetched from database_role_settings}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 57
    *scop.RemoveTableComment
      TableID: 57
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 60
    *scop.RemoveTableComment
      TableID: 60
    *scop.RemoveColumnComment
      ColumnID: 1
      TableID: 60
    *scop.RemoveColumnComment
      ColumnID: 2
      TableID: 60
    *scop.RemoveColumnComment
      ColumnID: 3
      TableID: 60
    *scop.RemoveConstraintComment
      ConstraintName: t1_pkey
      ConstraintType: 4
      TableID: 60
    *scop.RemoveIndexComment
      IndexID: 1
      TableID: 60
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 55
    *scop.RemoveSchemaComment
      SchemaID: 55
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 58
    *scop.RemoveTableComment
      TableID: 58
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 59
    *scop.RemoveTableComment
      TableID: 59
    *scop.RemoveColumnComment
      ColumnID: 1
      TableID: 59
    *scop.RemoveColumnComment
      ColumnID: 2
      TableID: 59
    *scop.RemoveColumnComment
      ColumnID: 3
      TableID: 59
    *scop.RemoveConstraintComment
      ConstraintName: t1_pkey
      ConstraintType: 4
      TableID: 59
    *scop.RemoveIndexComment
      IndexID: 1
      TableID: 59
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 61
    *scop.RemoveTableComment
      TableID: 61
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 62
    *scop.RemoveTableComment
      TableID: 62
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 63
    *scop.RemoveTableComment
      TableID: 63
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 64
    *scop.RemoveTableComment
      TableID: 64
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 67
    *scop.RemoveTableComment
      TableID: 67
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 65
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 66
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 56
    *scop.RemoveSchemaComment
      SchemaID: 56
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 54
    *scop.RemoveDatabaseComment
      DatabaseID: 54
    *scop.RemoveDatabaseRoleSettings
      DatabaseID: 54
PreCommitPhase stage 1 of 1 with 56 MutationType ops
  transitions:
    [[Sequence:{DescID: 57}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 57, Name: sq1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 57}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 57, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 57, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 57, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 57}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 57, ReferencedDescID: 60}, ABSENT], PUBLIC] -> ABSENT
    [[DefaultExpression:{DescID: 60, ColumnID: 3}, ABSENT], PUBLIC] -> ABSENT
    [[Table:{DescID: 60}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 60, Name: t1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 60}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 60, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 60, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 60, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 60, ColumnID: 1, Name: id}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 60, ColumnID: 2, Name: name}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 60, ColumnID: 3, Name: val}, ABSENT], PUBLIC] -> ABSENT
    [[IndexName:{DescID: 60, IndexID: 1, Name: t1_pkey}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 60}, ABSENT], PUBLIC] -> ABSENT
    [[Schema:{DescID: 55}, ABSENT], TXN_DROPPED] -> DROPPED
    [[DatabaseSchemaEntry:{DescID: 54, ReferencedDescID: 55}, ABSENT], PUBLIC] -> ABSENT
    [[Sequence:{DescID: 58}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 58, Name: sq1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 58}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 58, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 58, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 58, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 58}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 58, ReferencedDescID: 59}, ABSENT], PUBLIC] -> ABSENT
    [[DefaultExpression:{DescID: 59, ColumnID: 3}, ABSENT], PUBLIC] -> ABSENT
    [[Table:{DescID: 59}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 59, Name: t1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 59}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 59, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 59, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 59, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 59, ColumnID: 1, Name: id}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 59, ColumnID: 2, Name: name}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 59, ColumnID: 3, Name: val}, ABSENT], PUBLIC] -> ABSENT
    [[IndexName:{DescID: 59, IndexID: 1, Name: t1_pkey}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 59}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 59, ReferencedDescID: 61}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 61}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 61, Name: v1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 61}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 61, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 61, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 61, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 61}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 61, ReferencedDescID: 62}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 61, ReferencedDescID: 63}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 62}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 62, Name: v2}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 62}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 62, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 62, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 62, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 62}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 62, ReferencedDescID: 63}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 62, ReferencedDescID: 64}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 63}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 63, Name: v3}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 63}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 63, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 63, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 63, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 63}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 64}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 64, Name: v4}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 64}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 64, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 64, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 64, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 64}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 64, ReferencedDescID: 67}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 67}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 67, Name: v5}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 67}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 67, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 67, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 67, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[ViewDependsOnType:{DescID: 67, ReferencedDescID: 65}, ABSENT], PUBLIC] -> ABSENT
    [[ViewDependsOnType:{DescID: 67, ReferencedDescID: 66}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 67}, ABSENT], PUBLIC] -> ABSENT
    [[Type:{DescID: 65}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 65, Name: typ}, ABSENT], PUBLIC] -> ABSENT
    [[Type:{DescID: 66}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 66, Name: _typ}, ABSENT], PUBLIC] -> ABSENT
    [[Schema:{DescID: 56}, ABSENT], TXN_DROPPED] -> DROPPED
    [[DatabaseSchemaEntry:{DescID: 54, ReferencedDescID: 56}, ABSENT], PUBLIC] -> ABSENT
    [[Database:{DescID: 54}, ABSENT], TXN_DROPPED] -> DROPPED
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 57
    *scop.DrainDescriptorName
      TableID: 57
    *scop.MarkDescriptorAsDropped
      DescID: 60
    *scop.DrainDescriptorName
      TableID: 60
    *scop.MarkDescriptorAsDropped
      DescID: 55
    *scop.MarkDescriptorAsDropped
      DescID: 58
    *scop.DrainDescriptorName
      TableID: 58
    *scop.MarkDescriptorAsDropped
      DescID: 59
    *scop.DrainDescriptorName
      TableID: 59
    *scop.MarkDescriptorAsDropped
      DescID: 61
    *scop.DrainDescriptorName
      TableID: 61
    *scop.MarkDescriptorAsDropped
      DescID: 62
    *scop.DrainDescriptorName
      TableID: 62
    *scop.MarkDescriptorAsDropped
      DescID: 63
    *scop.DrainDescriptorName
      TableID: 63
    *scop.MarkDescriptorAsDropped
      DescID: 64
    *scop.DrainDescriptorName
      TableID: 64
    *scop.MarkDescriptorAsDropped
      DescID: 67
    *scop.DrainDescriptorName
      TableID: 67
    *scop.MarkDescriptorAsDropped
      DescID: 65
    *scop.DrainDescriptorName
      TableID: 65
    *scop.MarkDescriptorAsDropped
      DescID: 66
    *scop.DrainDescriptorName
      TableID: 66
    *scop.MarkDescriptorAsDropped
      DescID: 56
    *scop.MarkDescriptorAsDropped
      DescID: 54
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 60
      TableID: 57
    *scop.RemoveColumnDefaultExpression
      ColumnID: 3
      TableID: 60
    *scop.UpdateRelationDeps
      TableID: 60
    *scop.DeleteDatabaseSchemaEntry
      DatabaseID: 54
      SchemaID: 55
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 59
      TableID: 58
    *scop.RemoveColumnDefaultExpression
      ColumnID: 3
      TableID: 59
    *scop.UpdateRelationDeps
      TableID: 59
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 61
      TableID: 59
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 62
      TableID: 61
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 63
      TableID: 61
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 63
      TableID: 62
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 64
      TableID: 62
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 67
      TableID: 64
    *scop.RemoveTypeBackRef
      DescID: 67
      TypeID: 65
    *scop.RemoveTypeBackRef
      DescID: 67
      TypeID: 66
    *scop.DeleteDatabaseSchemaEntry
      DatabaseID: 54
      SchemaID: 56
    *scop.AddJobReference
      DescriptorID: 54
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 55
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 56
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 57
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 58
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 59
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 60
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 61
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 62
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 63
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 64
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 65
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 66
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 67
      JobID: 1
    *scop.CreateDeclarativeSchemaChangerJob
      JobID: 1
      TargetState:
        Authorization:
          UserName: root
        Statements:
        - statement: DROP DATABASE db1 CASCADE
          redactedstatement: DROP DATABASE ‹db1› CASCADE
          statementtag: DROP DATABASE
PostCommitNonRevertiblePhase stage 1 of 1 with 46 MutationType ops
  transitions:
    [[Sequence:{DescID: 57}, ABSENT], DROPPED] -> ABSENT
    [[Table:{DescID: 60}, ABSENT], DROPPED] -> ABSENT
    [[Column:{DescID: 60, ColumnID: 1}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 60, ColumnID: 2}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 60, ColumnID: 3}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[PrimaryIndex:{DescID: 60, IndexID: 1}, ABSENT], VALIDATED] -> ABSENT
    [[Schema:{DescID: 55}, ABSENT], DROPPED] -> ABSENT
    [[Sequence:{DescID: 58}, ABSENT], DROPPED] -> ABSENT
    [[Table:{DescID: 59}, ABSENT], DROPPED] -> ABSENT
    [[Column:{DescID: 59, ColumnID: 1}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 59, ColumnID: 2}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 59, ColumnID: 3}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[PrimaryIndex:{DescID: 59, IndexID: 1}, ABSENT], VALIDATED] -> ABSENT
    [[View:{DescID: 61}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 62}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 63}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 64}, ABSENT], DROPPED] -> ABSENT
    [[View:{DescID: 67}, ABSENT], DROPPED] -> ABSENT
    [[Type:{DescID: 65}, ABSENT], DROPPED] -> ABSENT
    [[Type:{DescID: 66}, ABSENT], DROPPED] -> ABSENT
    [[Schema:{DescID: 56}, ABSENT], DROPPED] -> ABSENT
    [[Database:{DescID: 54}, ABSENT], DROPPED] -> ABSENT
  ops:
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Sequence:
          sequenceId: 57
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 3
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 57
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Table:
          tableId: 60
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 3
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 60
    *scop.DrainDescriptorName
      TableID: 55
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Schema:
          dependentObjects:
          - 57
          - 60
          schemaId: 55
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 1
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 55
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Sequence:
          sequenceId: 58
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 6
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 58
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Table:
          tableId: 59
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 6
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 59
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 61
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 8
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 61
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 62
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 9
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 62
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 63
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 10
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 63
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 64
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 10
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 64
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 67
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 12
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 67
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Type:
          typeId: 65
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 6
        SubWorkID: 1
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 65
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Type:
          typeId: 66
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 6
        SubWorkID: 2
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 66
    *scop.DrainDescriptorName
      TableID: 56
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Schema:
          dependentObjects:
          - 58
          - 59
          - 61
          - 62
          - 63
          - 64
          - 65
          - 66
          - 67
          schemaId: 56
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 1
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 56
    *scop.DrainDescriptorName
      TableID: 54
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Database:
          databaseId: 54
          dependentObjects:
          - 55
          - 56
      Statement: DROP DATABASE ‹db1› CASCADE
      StatementTag: DROP DATABASE
      TargetMetadata:
        SourceElementID: 1
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForDatabase
      DatabaseID: 54
    *scop.RemoveJobReference
      DescriptorID: 54
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 55
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 56
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 57
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 58
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 59
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 60
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 61
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 62
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 63
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 64
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 65
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 66
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 67
      JobID: 1
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1

deps
DROP DATABASE db1 CASCADE
----
- from: [Column:{DescID: 59, ColumnID: 1}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 59, ColumnID: 1, Name: id}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 59, ColumnID: 2}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 59, ColumnID: 2, Name: name}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 59, ColumnID: 3}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 59, ColumnID: 3, Name: val}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 60, ColumnID: 1}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 60, ColumnID: 1, Name: id}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 60, ColumnID: 2}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 60, ColumnID: 2, Name: name}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 60, ColumnID: 3}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 60, ColumnID: 3, Name: val}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [ColumnName:{DescID: 59, ColumnID: 1, Name: id}, ABSENT]
  to:   [Column:{DescID: 59, ColumnID: 1}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 59, ColumnID: 2, Name: name}, ABSENT]
  to:   [Column:{DescID: 59, ColumnID: 2}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 59, ColumnID: 3, Name: val}, ABSENT]
  to:   [Column:{DescID: 59, ColumnID: 3}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 60, ColumnID: 1, Name: id}, ABSENT]
  to:   [Column:{DescID: 60, ColumnID: 1}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 60, ColumnID: 2, Name: name}, ABSENT]
  to:   [Column:{DescID: 60, ColumnID: 2}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 60, ColumnID: 3, Name: val}, ABSENT]
  to:   [Column:{DescID: 60, ColumnID: 3}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [Database:{DescID: 54}, DROPPED]
  to:   [DatabaseSchemaEntry:{DescID: 54, ReferencedDescID: 55}, ABSENT]
  kind: Precedence
  rule: schema entry can be dropped after the database has exited synth drop
- from: [Database:{DescID: 54}, DROPPED]
  to:   [DatabaseSchemaEntry:{DescID: 54, ReferencedDescID: 56}, ABSENT]
  kind: Precedence
  rule: schema entry can be dropped after the database has exited synth drop
- from: [DatabaseSchemaEntry:{DescID: 54, ReferencedDescID: 55}, ABSENT]
  to:   [Schema:{DescID: 55}, ABSENT]
  kind: Precedence
  rule: schema can be dropped after schema entry inside the database
- from: [DatabaseSchemaEntry:{DescID: 54, ReferencedDescID: 56}, ABSENT]
  to:   [Schema:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: schema can be dropped after schema entry inside the database
- from: [IndexName:{DescID: 59, IndexID: 1, Name: t1_pkey}, ABSENT]
  to:   [PrimaryIndex:{DescID: 59, IndexID: 1}, ABSENT]
  kind: Precedence
  rule: index unnamed before index no longer exists
- from: [IndexName:{DescID: 60, IndexID: 1, Name: t1_pkey}, ABSENT]
  to:   [PrimaryIndex:{DescID: 60, IndexID: 1}, ABSENT]
  kind: Precedence
  rule: index unnamed before index no longer exists
- from: [Namespace:{DescID: 57, Name: sq1}, ABSENT]
  to:   [Sequence:{DescID: 57}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 58, Name: sq1}, ABSENT]
  to:   [Sequence:{DescID: 58}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 59, Name: t1}, ABSENT]
  to:   [Table:{DescID: 59}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 60, Name: t1}, ABSENT]
  to:   [Table:{DescID: 60}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 61, Name: v1}, ABSENT]
  to:   [View:{DescID: 61}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 62, Name: v2}, ABSENT]
  to:   [View:{DescID: 62}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 63, Name: v3}, ABSENT]
  to:   [View:{DescID: 63}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 64, Name: v4}, ABSENT]
  to:   [View:{DescID: 64}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 65, Name: typ}, ABSENT]
  to:   [Type:{DescID: 65}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 66, Name: _typ}, ABSENT]
  to:   [Type:{DescID: 66}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 67, Name: v5}, ABSENT]
  to:   [View:{DescID: 67}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [PrimaryIndex:{DescID: 59, IndexID: 1}, VALIDATED]
  to:   [IndexName:{DescID: 59, IndexID: 1, Name: t1_pkey}, ABSENT]
  kind: Precedence
  rule: index unnamed after index no longer public
- from: [PrimaryIndex:{DescID: 60, IndexID: 1}, VALIDATED]
  to:   [IndexName:{DescID: 60, IndexID: 1, Name: t1_pkey}, ABSENT]
  kind: Precedence
  rule: index unnamed after index no longer public
- from: [Schema:{DescID: 55}, ABSENT]
  to:   [Database:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Schema:{DescID: 56}, ABSENT]
  to:   [Database:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Sequence:{DescID: 57}, ABSENT]
  to:   [Schema:{DescID: 55}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Sequence:{DescID: 57}, DROPPED]
  to:   [Locality:{DescID: 57}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 57}, DROPPED]
  to:   [Namespace:{DescID: 57, Name: sq1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Sequence:{DescID: 57}, DROPPED]
  to:   [Owner:{DescID: 57}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 57}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 57, ReferencedDescID: 60}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Sequence:{DescID: 57}, DROPPED]
  to:   [UserPrivileges:{DescID: 57, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 57}, DROPPED]
  to:   [UserPrivileges:{DescID: 57, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 57}, DROPPED]
  to:   [UserPrivileges:{DescID: 57, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 58}, ABSENT]
  to:   [Schema:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [Locality:{DescID: 58}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [Namespace:{DescID: 58, Name: sq1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [Owner:{DescID: 58}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 58, ReferencedDescID: 59}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [UserPrivileges:{DescID: 58, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [UserPrivileges:{DescID: 58, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [UserPrivileges:{DescID: 58, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 59}, ABSENT]
  to:   [Schema:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Table:{DescID: 59}, DROPPED]
  to:   [DefaultExpression:{DescID: 59, ColumnID: 3}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 59}, DROPPED]
  to:   [Locality:{DescID: 59}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 59}, DROPPED]
  to:   [Namespace:{DescID: 59, Name: t1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Table:{DescID: 59}, DROPPED]
  to:   [Owner:{DescID: 59}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 59}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 58, ReferencedDescID: 59}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 59}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 59, ReferencedDescID: 61}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 59}, DROPPED]
  to:   [UserPrivileges:{DescID: 59, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 59}, DROPPED]
  to:   [UserPrivileges:{DescID: 59, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 59}, DROPPED]
  to:   [UserPrivileges:{DescID: 59, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 60}, ABSENT]
  to:   [Schema:{DescID: 55}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Table:{DescID: 60}, DROPPED]
  to:   [DefaultExpression:{DescID: 60, ColumnID: 3}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 60}, DROPPED]
  to:   [Locality:{DescID: 60}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 60}, DROPPED]
  to:   [Namespace:{DescID: 60, Name: t1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Table:{DescID: 60}, DROPPED]
  to:   [Owner:{DescID: 60}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 60}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 57, ReferencedDescID: 60}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 60}, DROPPED]
  to:   [UserPrivileges:{DescID: 60, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 60}, DROPPED]
  to:   [UserPrivileges:{DescID: 60, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 60}, DROPPED]
  to:   [UserPrivileges:{DescID: 60, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Type:{DescID: 65}, ABSENT]
  to:   [Schema:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Type:{DescID: 65}, DROPPED]
  to:   [Namespace:{DescID: 65, Name: typ}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Type:{DescID: 65}, DROPPED]
  to:   [ViewDependsOnType:{DescID: 67, ReferencedDescID: 65}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Type:{DescID: 66}, ABSENT]
  to:   [Schema:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [Type:{DescID: 66}, DROPPED]
  to:   [Namespace:{DescID: 66, Name: _typ}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Type:{DescID: 66}, DROPPED]
  to:   [ViewDependsOnType:{DescID: 67, ReferencedDescID: 66}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 61}, ABSENT]
  to:   [Schema:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 61}, DROPPED]
  to:   [Locality:{DescID: 61}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 61}, DROPPED]
  to:   [Namespace:{DescID: 61, Name: v1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 61}, DROPPED]
  to:   [Owner:{DescID: 61}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 61}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 59, ReferencedDescID: 61}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 61}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 61, ReferencedDescID: 62}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 61}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 61, ReferencedDescID: 63}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 61}, DROPPED]
  to:   [UserPrivileges:{DescID: 61, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 61}, DROPPED]
  to:   [UserPrivileges:{DescID: 61, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 61}, DROPPED]
  to:   [UserPrivileges:{DescID: 61, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 62}, ABSENT]
  to:   [Schema:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 62}, DROPPED]
  to:   [Locality:{DescID: 62}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 62}, DROPPED]
  to:   [Namespace:{DescID: 62, Name: v2}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 62}, DROPPED]
  to:   [Owner:{DescID: 62}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 62}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 61, ReferencedDescID: 62}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 62}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 62, ReferencedDescID: 63}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 62}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 62, ReferencedDescID: 64}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 62}, DROPPED]
  to:   [UserPrivileges:{DescID: 62, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 62}, DROPPED]
  to:   [UserPrivileges:{DescID: 62, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 62}, DROPPED]
  to:   [UserPrivileges:{DescID: 62, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 63}, ABSENT]
  to:   [Schema:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 63}, DROPPED]
  to:   [Locality:{DescID: 63}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [Namespace:{DescID: 63, Name: v3}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [Owner:{DescID: 63}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 61, ReferencedDescID: 63}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 62, ReferencedDescID: 63}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [UserPrivileges:{DescID: 63, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [UserPrivileges:{DescID: 63, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 63}, DROPPED]
  to:   [UserPrivileges:{DescID: 63, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 64}, ABSENT]
  to:   [Schema:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 64}, DROPPED]
  to:   [Locality:{DescID: 64}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 64}, DROPPED]
  to:   [Namespace:{DescID: 64, Name: v4}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 64}, DROPPED]
  to:   [Owner:{DescID: 64}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 64}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 62, ReferencedDescID: 64}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 64}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 64, ReferencedDescID: 67}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 64}, DROPPED]
  to:   [UserPrivileges:{DescID: 64, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 64}, DROPPED]
  to:   [UserPrivileges:{DescID: 64, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 64}, DROPPED]
  to:   [UserPrivileges:{DescID: 64, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 67}, ABSENT]
  to:   [Schema:{DescID: 56}, ABSENT]
  kind: Precedence
  rule: parent dependencies
- from: [View:{DescID: 67}, DROPPED]
  to:   [Locality:{DescID: 67}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 67}, DROPPED]
  to:   [Namespace:{DescID: 67, Name: v5}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 67}, DROPPED]
  to:   [Owner:{DescID: 67}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 67}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 64, ReferencedDescID: 67}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 67}, DROPPED]
  to:   [UserPrivileges:{DescID: 67, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 67}, DROPPED]
  to:   [UserPrivileges:{DescID: 67, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 67}, DROPPED]
  to:   [UserPrivileges:{DescID: 67, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
