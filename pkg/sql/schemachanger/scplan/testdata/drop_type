setup
CREATE TYPE defaultdb.typ AS ENUM('a')
----

ops
DROP TYPE defaultdb.typ
----
StatementPhase stage 1 of 1 with 2 MutationType ops
  transitions:
    [[EnumType:{DescID: 104}, ABSENT], PUBLIC] -> OFFLINE
    [[AliasType:{DescID: 105}, ABSENT], PUBLIC] -> OFFLINE
  ops:
    *scop.MarkDescriptorAsOffline
      DescID: 104
      Reason: DROP TYPE defaultdb.public.typ
    *scop.MarkDescriptorAsOffline
      DescID: 105
      Reason: DROP TYPE defaultdb.public.typ
PreCommitPhase stage 1 of 1 with 3 MutationType ops
  transitions:
  ops:
    *scop.SetJobStateOnDescriptor
      DescriptorID: 104
      Initialize: true
    *scop.SetJobStateOnDescriptor
      DescriptorID: 105
      Initialize: true
    *scop.CreateSchemaChangerJob
      Authorization:
        UserName: root
      DescriptorIDs:
      - 104
      - 105
      JobID: 1
      NonCancelable: true
      RunningStatus: PostCommitNonRevertiblePhase stage 1 of 2 with 4 MutationType ops pending
      Statements:
      - statement: DROP TYPE defaultdb.typ
        redactedstatement: DROP TYPE ‹defaultdb›.‹public›.‹typ›
        statementtag: DROP TYPE
PostCommitNonRevertiblePhase stage 1 of 2 with 7 MutationType ops
  transitions:
    [[Namespace:{DescID: 104, Name: typ, ReferencedDescID: 100}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 104}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 104, Name: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 104, Name: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 104, Name: root}, ABSENT], PUBLIC] -> ABSENT
    [[EnumType:{DescID: 104}, ABSENT], OFFLINE] -> DROPPED
    [[EnumTypeValue:{DescID: 104, Name: a}, ABSENT], PUBLIC] -> ABSENT
    [[ObjectParent:{DescID: 104, ReferencedDescID: 101}, ABSENT], PUBLIC] -> ABSENT
    [[Namespace:{DescID: 105, Name: _typ, ReferencedDescID: 100}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 105}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 105, Name: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 105, Name: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 105, Name: root}, ABSENT], PUBLIC] -> ABSENT
    [[AliasType:{DescID: 105}, ABSENT], OFFLINE] -> DROPPED
    [[ObjectParent:{DescID: 105, ReferencedDescID: 101}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 104
    *scop.MarkDescriptorAsDropped
      DescID: 105
    *scop.DrainDescriptorName
      Namespace:
        DatabaseID: 100
        DescriptorID: 104
        Name: typ
        SchemaID: 101
    *scop.DrainDescriptorName
      Namespace:
        DatabaseID: 100
        DescriptorID: 105
        Name: _typ
        SchemaID: 101
    *scop.SetJobStateOnDescriptor
      DescriptorID: 104
    *scop.SetJobStateOnDescriptor
      DescriptorID: 105
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1
PostCommitNonRevertiblePhase stage 2 of 2 with 7 MutationType ops
  transitions:
    [[EnumType:{DescID: 104}, ABSENT], DROPPED] -> ABSENT
    [[AliasType:{DescID: 105}, ABSENT], DROPPED] -> ABSENT
  ops:
    *scop.LogEvent
      Element:
        EnumType:
          arrayTypeId: 105
          typeId: 104
      EventBase:
        Authorization:
          UserName: root
        Statement: DROP TYPE ‹defaultdb›.‹public›.‹typ›
        StatementTag: DROP TYPE
        TargetMetadata:
          SourceElementID: 1
          SubWorkID: 1
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 104
    *scop.LogEvent
      Element:
        AliasType:
          closedTypeIds:
          - 104
          - 105
          type:
            arrayContents:
              family: EnumFamily
              oid: 100104
              udtMetadata:
                arrayTypeOid: 100105
            arrayElemType: EnumFamily
            family: ArrayFamily
            oid: 100105
          typeId: 105
      EventBase:
        Authorization:
          UserName: root
        Statement: DROP TYPE ‹defaultdb›.‹public›.‹typ›
        StatementTag: DROP TYPE
        TargetMetadata:
          SourceElementID: 2
          SubWorkID: 2
      TargetStatus: 1
    *scop.DeleteDescriptor
      DescriptorID: 105
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 104
      JobID: 1
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 105
      JobID: 1
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1

deps
DROP TYPE defaultdb.typ
----
- from: [AliasType:{DescID: 105}, DROPPED]
  to:   [Namespace:{DescID: 105, Name: _typ, ReferencedDescID: 100}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [AliasType:{DescID: 105}, DROPPED]
  to:   [ObjectParent:{DescID: 105, ReferencedDescID: 101}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [AliasType:{DescID: 105}, DROPPED]
  to:   [Owner:{DescID: 105}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [AliasType:{DescID: 105}, DROPPED]
  to:   [UserPrivileges:{DescID: 105, Name: admin}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [AliasType:{DescID: 105}, DROPPED]
  to:   [UserPrivileges:{DescID: 105, Name: public}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [AliasType:{DescID: 105}, DROPPED]
  to:   [UserPrivileges:{DescID: 105, Name: root}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [EnumType:{DescID: 104}, DROPPED]
  to:   [EnumTypeValue:{DescID: 104, Name: a}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [EnumType:{DescID: 104}, DROPPED]
  to:   [Namespace:{DescID: 104, Name: typ, ReferencedDescID: 100}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [EnumType:{DescID: 104}, DROPPED]
  to:   [ObjectParent:{DescID: 104, ReferencedDescID: 101}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [EnumType:{DescID: 104}, DROPPED]
  to:   [Owner:{DescID: 104}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [EnumType:{DescID: 104}, DROPPED]
  to:   [UserPrivileges:{DescID: 104, Name: admin}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [EnumType:{DescID: 104}, DROPPED]
  to:   [UserPrivileges:{DescID: 104, Name: public}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
- from: [EnumType:{DescID: 104}, DROPPED]
  to:   [UserPrivileges:{DescID: 104, Name: root}, ABSENT]
  kind: SameStagePrecedence
  rule: descriptor drop right before dependent element removal
