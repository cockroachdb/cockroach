create-sequence
CREATE SEQUENCE defaultdb.SQ1
----

ops
DROP SEQUENCE defaultdb.SQ1 CASCADE
----
StatementPhase stage 1 of 1 with 2 MutationType ops
  transitions:
    [[Sequence:{DescID: 1005}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1005}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1005
    *scop.RemoveTableComment
      TableID: 1005
PreCommitPhase stage 1 of 1 with 4 MutationType ops
  transitions:
    [[Sequence:{DescID: 1005}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1005, Name: sq1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1005}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1005, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1005, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1005, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1005}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 1005
    *scop.DrainDescriptorName
      TableID: 1005
    *scop.AddJobReference
      DescriptorID: 1005
      JobID: 1
    *scop.CreateDeclarativeSchemaChangerJob
      JobID: 1
      TargetState:
        Authorization:
          UserName: root
        Statements:
        - statement: DROP SEQUENCE defaultdb.sq1 CASCADE
          redactedstatement: DROP SEQUENCE ‹defaultdb›.public.‹sq1› CASCADE
          statementtag: DROP SEQUENCE
PostCommitNonRevertiblePhase stage 1 of 1 with 4 MutationType ops
  transitions:
    [[Sequence:{DescID: 1005}, ABSENT], DROPPED] -> ABSENT
  ops:
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Sequence:
          sequenceId: 1005
      Statement: DROP SEQUENCE ‹defaultdb›.public.‹sq1› CASCADE
      StatementTag: DROP SEQUENCE
      TargetMetadata:
        SourceElementID: 1
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1005
    *scop.RemoveJobReference
      DescriptorID: 1005
      JobID: 1
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1

create-table
CREATE TABLE defaultdb.blog_posts (id INT8 PRIMARY KEY, val INT8 DEFAULT nextval('defaultdb.sq1'), title STRING)
----

create-table
CREATE TABLE defaultdb.blog_posts2 (id INT8 PRIMARY KEY, val INT8 DEFAULT nextval('defaultdb.sq1'), title STRING)
----

ops
DROP SEQUENCE defaultdb.SQ1 CASCADE
----
StatementPhase stage 1 of 1 with 2 MutationType ops
  transitions:
    [[Sequence:{DescID: 1005}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[TableComment:{DescID: 1005}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 1005
    *scop.RemoveTableComment
      TableID: 1005
PreCommitPhase stage 1 of 1 with 12 MutationType ops
  transitions:
    [[Sequence:{DescID: 1005}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 1005, Name: sq1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 1005}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1005, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1005, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 1005, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 1005}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1005, ReferencedDescID: 1006}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 1005, ReferencedDescID: 1007}, ABSENT], PUBLIC] -> ABSENT
    [[DefaultExpression:{DescID: 1006, ColumnID: 2}, ABSENT], PUBLIC] -> ABSENT
    [[DefaultExpression:{DescID: 1007, ColumnID: 2}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 1005
    *scop.DrainDescriptorName
      TableID: 1005
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1006
      TableID: 1005
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 1007
      TableID: 1005
    *scop.RemoveColumnDefaultExpression
      ColumnID: 2
      TableID: 1006
    *scop.UpdateRelationDeps
      TableID: 1006
    *scop.RemoveColumnDefaultExpression
      ColumnID: 2
      TableID: 1007
    *scop.UpdateRelationDeps
      TableID: 1007
    *scop.AddJobReference
      DescriptorID: 1005
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1006
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 1007
      JobID: 1
    *scop.CreateDeclarativeSchemaChangerJob
      JobID: 1
      TargetState:
        Authorization:
          UserName: root
        Statements:
        - statement: DROP SEQUENCE defaultdb.sq1 CASCADE
          redactedstatement: DROP SEQUENCE ‹defaultdb›.public.‹sq1› CASCADE
          statementtag: DROP SEQUENCE
PostCommitNonRevertiblePhase stage 1 of 1 with 6 MutationType ops
  transitions:
    [[Sequence:{DescID: 1005}, ABSENT], DROPPED] -> ABSENT
  ops:
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Sequence:
          sequenceId: 1005
      Statement: DROP SEQUENCE ‹defaultdb›.public.‹sq1› CASCADE
      StatementTag: DROP SEQUENCE
      TargetMetadata:
        SourceElementID: 1
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 1005
    *scop.RemoveJobReference
      DescriptorID: 1005
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1006
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 1007
      JobID: 1
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1


deps
DROP SEQUENCE defaultdb.SQ1 CASCADE
----
- from: [Namespace:{DescID: 1005, Name: sq1}, ABSENT]
  to:   [Sequence:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Sequence:{DescID: 1005}, DROPPED]
  to:   [Locality:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 1005}, DROPPED]
  to:   [Namespace:{DescID: 1005, Name: sq1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Sequence:{DescID: 1005}, DROPPED]
  to:   [Owner:{DescID: 1005}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 1005}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1005, ReferencedDescID: 1006}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Sequence:{DescID: 1005}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 1005, ReferencedDescID: 1007}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Sequence:{DescID: 1005}, DROPPED]
  to:   [UserPrivileges:{DescID: 1005, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 1005}, DROPPED]
  to:   [UserPrivileges:{DescID: 1005, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 1005}, DROPPED]
  to:   [UserPrivileges:{DescID: 1005, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
