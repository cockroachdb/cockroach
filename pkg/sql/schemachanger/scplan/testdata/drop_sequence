create-sequence
CREATE SEQUENCE defaultdb.SQ1
----

ops
DROP SEQUENCE defaultdb.SQ1 CASCADE
----
StatementPhase stage 1 of 1 with 1 MutationType ops
  transitions:
    [Sequence:{DescID: 54}, PUBLIC, DROP] -> TXN_DROPPED
    [Locality:{DescID: 54}, PUBLIC, DROP] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 54
PreCommitPhase non-revertible stage 1 of 1 with 2 MutationType ops
  transitions:
    [Sequence:{DescID: 54}, TXN_DROPPED, DROP] -> DROPPED
    [Namespace:{DescID: 54, Name: sq1}, PUBLIC, DROP] -> ABSENT
    [Owner:{DescID: 54}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 54, Username: admin}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 54, Username: public}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 54, Username: root}, PUBLIC, DROP] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 54
    *scop.DrainDescriptorName
      TableID: 54
PostCommitPhase non-revertible stage 1 of 1 with 2 MutationType ops
  transitions:
    [Sequence:{DescID: 54}, DROPPED, DROP] -> ABSENT
  ops:
    *scop.LogEvent
      DescID: 54
      Direction: 2
      Element:
        sequence:
          sequenceId: 54
      Metadata:
        Statement: DROP SEQUENCE defaultdb.sq1 CASCADE
        TargetMetadata:
          SourceElementID: 1
          SubWorkID: 1
        Username: root
    *scop.CreateGcJobForTable
      TableID: 54

create-table
CREATE TABLE defaultdb.blog_posts (id INT8 PRIMARY KEY, val INT8 DEFAULT nextval('defaultdb.sq1'), title STRING)
----

create-table
CREATE TABLE defaultdb.blog_posts2 (id INT8 PRIMARY KEY, val INT8 DEFAULT nextval('defaultdb.sq1'), title STRING)
----

ops
DROP SEQUENCE defaultdb.SQ1 CASCADE
----
StatementPhase stage 1 of 1 with 1 MutationType ops
  transitions:
    [Sequence:{DescID: 54}, PUBLIC, DROP] -> TXN_DROPPED
    [Locality:{DescID: 54}, PUBLIC, DROP] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 54
PreCommitPhase non-revertible stage 1 of 1 with 8 MutationType ops
  transitions:
    [Sequence:{DescID: 54}, TXN_DROPPED, DROP] -> DROPPED
    [Namespace:{DescID: 54, Name: sq1}, PUBLIC, DROP] -> ABSENT
    [Owner:{DescID: 54}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 54, Username: admin}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 54, Username: public}, PUBLIC, DROP] -> ABSENT
    [UserPrivileges:{DescID: 54, Username: root}, PUBLIC, DROP] -> ABSENT
    [RelationDependedOnBy:{DescID: 54, ReferencedDescID: 55}, PUBLIC, DROP] -> ABSENT
    [RelationDependedOnBy:{DescID: 54, ReferencedDescID: 56}, PUBLIC, DROP] -> ABSENT
    [DefaultExpression:{DescID: 55, ColumnID: 2}, PUBLIC, DROP] -> ABSENT
    [DefaultExpression:{DescID: 56, ColumnID: 2}, PUBLIC, DROP] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 54
    *scop.DrainDescriptorName
      TableID: 54
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 55
      TableID: 54
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 56
      TableID: 54
    *scop.RemoveColumnDefaultExpression
      ColumnID: 2
      TableID: 55
    *scop.UpdateRelationDeps
      TableID: 55
    *scop.RemoveColumnDefaultExpression
      ColumnID: 2
      TableID: 56
    *scop.UpdateRelationDeps
      TableID: 56
PostCommitPhase non-revertible stage 1 of 1 with 2 MutationType ops
  transitions:
    [Sequence:{DescID: 54}, DROPPED, DROP] -> ABSENT
  ops:
    *scop.LogEvent
      DescID: 54
      Direction: 2
      Element:
        sequence:
          sequenceId: 54
      Metadata:
        Statement: DROP SEQUENCE defaultdb.sq1 CASCADE
        TargetMetadata:
          SourceElementID: 1
          SubWorkID: 1
        Username: root
    *scop.CreateGcJobForTable
      TableID: 54


deps
DROP SEQUENCE defaultdb.SQ1 CASCADE
----
- from: [Namespace:{DescID: 54, Name: sq1}, ABSENT]
  to:   [Sequence:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Sequence:{DescID: 54}, DROPPED]
  to:   [Namespace:{DescID: 54, Name: sq1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Sequence:{DescID: 54}, DROPPED]
  to:   [Owner:{DescID: 54}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 54}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 54, ReferencedDescID: 55}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Sequence:{DescID: 54}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 54, ReferencedDescID: 56}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Sequence:{DescID: 54}, DROPPED]
  to:   [UserPrivileges:{DescID: 54, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 54}, DROPPED]
  to:   [UserPrivileges:{DescID: 54, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 54}, DROPPED]
  to:   [UserPrivileges:{DescID: 54, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
