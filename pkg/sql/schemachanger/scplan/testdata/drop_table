create-table
CREATE TABLE defaultdb.customers (id INT PRIMARY KEY, email STRING UNIQUE);
----

create-table
CREATE TABLE IF NOT EXISTS defaultdb.orders (
    id INT PRIMARY KEY,
    customer INT UNIQUE NOT NULL REFERENCES customers (id),
    orderTotal DECIMAL(9,2),
    INDEX (customer)
  );
----

create-sequence
CREATE SEQUENCE defaultdb.SQ2;
----

create-table
CREATE TABLE defaultdb.shipments (
    tracking_number UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    carrier STRING,
    status STRING,
    customer_id INT,
    randcol INT DEFAULT nextval('defaultdb.sq2'),
    CONSTRAINT fk_customers FOREIGN KEY (customer_id) REFERENCES customers(id),
    CONSTRAINT fk_orders FOREIGN KEY (customer_id) REFERENCES orders(customer)
  );
----

create-sequence
CREATE SEQUENCE defaultdb.SQ1 OWNED BY defaultdb.shipments.carrier
----

create-view
CREATE VIEW v1 AS (SELECT customer_id, carrier FROM defaultdb.shipments)
----

ops
DROP TABLE defaultdb.shipments CASCADE;
----
StatementPhase stage 1 of 1 with 3 MutationType ops
  transitions:
    [[Table:{DescID: 57}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[Column:{DescID: 57, ColumnID: 1}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[Column:{DescID: 57, ColumnID: 2}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[Column:{DescID: 57, ColumnID: 3}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[Column:{DescID: 57, ColumnID: 4}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[Column:{DescID: 57, ColumnID: 5}, ABSENT], PUBLIC] -> DELETE_AND_WRITE_ONLY
    [[PrimaryIndex:{DescID: 57, IndexID: 1}, ABSENT], PUBLIC] -> VALIDATED
    [[View:{DescID: 59}, ABSENT], PUBLIC] -> TXN_DROPPED
    [[Sequence:{DescID: 58}, ABSENT], PUBLIC] -> TXN_DROPPED
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 57
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 59
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 58
PreCommitPhase stage 1 of 1 with 22 MutationType ops
  transitions:
    [[Table:{DescID: 57}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 57, Name: shipments}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 57}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 57, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 57, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 57, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 57, ColumnID: 1, Name: tracking_number}, ABSENT], PUBLIC] -> ABSENT
    [[DefaultExpression:{DescID: 57, ColumnID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 57, ColumnID: 2, Name: carrier}, ABSENT], PUBLIC] -> ABSENT
    [[SequenceOwnedBy:{DescID: 58, ReferencedDescID: 57}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 57, ColumnID: 3, Name: status}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 57, ColumnID: 4, Name: customer_id}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnName:{DescID: 57, ColumnID: 5, Name: randcol}, ABSENT], PUBLIC] -> ABSENT
    [[DefaultExpression:{DescID: 57, ColumnID: 5}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 56, ReferencedDescID: 57}, ABSENT], PUBLIC] -> ABSENT
    [[IndexName:{DescID: 57, IndexID: 1, Name: shipments_pkey}, ABSENT], PUBLIC] -> ABSENT
    [[ForeignKey:{DescID: 57, ReferencedDescID: 54, Name: fk_customers}, ABSENT], PUBLIC] -> ABSENT
    [[ForeignKey:{DescID: 57, ReferencedDescID: 55, Name: fk_orders}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 57}, ABSENT], PUBLIC] -> ABSENT
    [[RelationDependedOnBy:{DescID: 57, ReferencedDescID: 59}, ABSENT], PUBLIC] -> ABSENT
    [[View:{DescID: 59}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 59, Name: v1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 59}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 59, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 59, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 59, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 59}, ABSENT], PUBLIC] -> ABSENT
    [[ForeignKeyBackReference:{DescID: 54, ReferencedDescID: 57, Name: fk_customers}, ABSENT], PUBLIC] -> ABSENT
    [[ForeignKeyBackReference:{DescID: 55, ReferencedDescID: 57, Name: fk_orders}, ABSENT], PUBLIC] -> ABSENT
    [[Sequence:{DescID: 58}, ABSENT], TXN_DROPPED] -> DROPPED
    [[Namespace:{DescID: 58, Name: sq1}, ABSENT], PUBLIC] -> ABSENT
    [[Owner:{DescID: 58}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 58, Username: admin}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 58, Username: public}, ABSENT], PUBLIC] -> ABSENT
    [[UserPrivileges:{DescID: 58, Username: root}, ABSENT], PUBLIC] -> ABSENT
    [[Locality:{DescID: 58}, ABSENT], PUBLIC] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 57
    *scop.DrainDescriptorName
      TableID: 57
    *scop.RemoveColumnDefaultExpression
      ColumnID: 1
      TableID: 57
    *scop.UpdateRelationDeps
      TableID: 57
    *scop.RemoveColumnDefaultExpression
      ColumnID: 5
      TableID: 57
    *scop.UpdateRelationDeps
      TableID: 57
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 57
      TableID: 56
    *scop.MarkDescriptorAsDropped
      DescID: 59
    *scop.DrainDescriptorName
      TableID: 59
    *scop.DropForeignKeyRef
      Name: fk_customers
      TableID: 54
    *scop.DropForeignKeyRef
      Name: fk_orders
      TableID: 55
    *scop.MarkDescriptorAsDropped
      DescID: 58
    *scop.DrainDescriptorName
      TableID: 58
    *scop.RemoveSequenceOwnedBy
      SequenceID: 58
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 59
      TableID: 57
    *scop.AddJobReference
      DescriptorID: 54
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 55
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 56
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 57
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 58
      JobID: 1
    *scop.AddJobReference
      DescriptorID: 59
      JobID: 1
    *scop.CreateDeclarativeSchemaChangerJob
      JobID: 1
      TargetState:
        Authorization:
          UserName: root
        Statements:
        - statement: DROP TABLE defaultdb.shipments CASCADE
PostCommitNonRevertiblePhase stage 1 of 1 with 13 MutationType ops
  transitions:
    [[Table:{DescID: 57}, ABSENT], DROPPED] -> ABSENT
    [[Column:{DescID: 57, ColumnID: 1}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 57, ColumnID: 2}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 57, ColumnID: 3}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 57, ColumnID: 4}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[Column:{DescID: 57, ColumnID: 5}, ABSENT], DELETE_AND_WRITE_ONLY] -> ABSENT
    [[PrimaryIndex:{DescID: 57, IndexID: 1}, ABSENT], VALIDATED] -> ABSENT
    [[View:{DescID: 59}, ABSENT], DROPPED] -> ABSENT
    [[Sequence:{DescID: 58}, ABSENT], DROPPED] -> ABSENT
  ops:
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Table:
          tableId: 57
      Statement: DROP TABLE defaultdb.shipments CASCADE
      TargetMetadata:
        SourceElementID: 1
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 57
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        View:
          tableId: 59
      Statement: DROP TABLE defaultdb.shipments CASCADE
      TargetMetadata:
        SourceElementID: 3
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 59
    *scop.LogEvent
      Authorization:
        UserName: root
      Element:
        Sequence:
          sequenceId: 58
      Statement: DROP TABLE defaultdb.shipments CASCADE
      TargetMetadata:
        SourceElementID: 2
        SubWorkID: 1
      TargetStatus: 1
    *scop.CreateGcJobForTable
      TableID: 58
    *scop.RemoveJobReference
      DescriptorID: 54
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 55
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 56
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 57
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 58
      JobID: 1
    *scop.RemoveJobReference
      DescriptorID: 59
      JobID: 1
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1

deps
DROP TABLE defaultdb.shipments CASCADE;
----
- from: [Column:{DescID: 57, ColumnID: 1}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 57, ColumnID: 1, Name: tracking_number}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 57, ColumnID: 2}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 57, ColumnID: 2, Name: carrier}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 57, ColumnID: 3}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 57, ColumnID: 3, Name: status}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 57, ColumnID: 4}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 57, ColumnID: 4, Name: customer_id}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [Column:{DescID: 57, ColumnID: 5}, DELETE_AND_WRITE_ONLY]
  to:   [ColumnName:{DescID: 57, ColumnID: 5, Name: randcol}, ABSENT]
  kind: Precedence
  rule: column unnamed after column no longer public
- from: [ColumnName:{DescID: 57, ColumnID: 1, Name: tracking_number}, ABSENT]
  to:   [Column:{DescID: 57, ColumnID: 1}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 57, ColumnID: 2, Name: carrier}, ABSENT]
  to:   [Column:{DescID: 57, ColumnID: 2}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 57, ColumnID: 3, Name: status}, ABSENT]
  to:   [Column:{DescID: 57, ColumnID: 3}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 57, ColumnID: 4, Name: customer_id}, ABSENT]
  to:   [Column:{DescID: 57, ColumnID: 4}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [ColumnName:{DescID: 57, ColumnID: 5, Name: randcol}, ABSENT]
  to:   [Column:{DescID: 57, ColumnID: 5}, ABSENT]
  kind: Precedence
  rule: column unnamed before column no longer exists
- from: [IndexName:{DescID: 57, IndexID: 1, Name: shipments_pkey}, ABSENT]
  to:   [PrimaryIndex:{DescID: 57, IndexID: 1}, ABSENT]
  kind: Precedence
  rule: index unnamed before index no longer exists
- from: [Namespace:{DescID: 57, Name: shipments}, ABSENT]
  to:   [Table:{DescID: 57}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 58, Name: sq1}, ABSENT]
  to:   [Sequence:{DescID: 58}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [Namespace:{DescID: 59, Name: v1}, ABSENT]
  to:   [View:{DescID: 59}, ABSENT]
  kind: Precedence
  rule: descriptor can only be cleaned up once the name is drained
- from: [PrimaryIndex:{DescID: 57, IndexID: 1}, VALIDATED]
  to:   [IndexName:{DescID: 57, IndexID: 1, Name: shipments_pkey}, ABSENT]
  kind: Precedence
  rule: index unnamed after index no longer public
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [Locality:{DescID: 58}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [Namespace:{DescID: 58, Name: sq1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [Owner:{DescID: 58}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [SequenceOwnedBy:{DescID: 58, ReferencedDescID: 57}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [UserPrivileges:{DescID: 58, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [UserPrivileges:{DescID: 58, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Sequence:{DescID: 58}, DROPPED]
  to:   [UserPrivileges:{DescID: 58, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [DefaultExpression:{DescID: 57, ColumnID: 1}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [DefaultExpression:{DescID: 57, ColumnID: 5}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [ForeignKey:{DescID: 57, ReferencedDescID: 54, Name: fk_customers}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [ForeignKey:{DescID: 57, ReferencedDescID: 55, Name: fk_orders}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [ForeignKeyBackReference:{DescID: 54, ReferencedDescID: 57, Name: fk_customers}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [ForeignKeyBackReference:{DescID: 55, ReferencedDescID: 57, Name: fk_orders}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [Locality:{DescID: 57}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [Namespace:{DescID: 57, Name: shipments}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [Owner:{DescID: 57}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 56, ReferencedDescID: 57}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 57, ReferencedDescID: 59}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [UserPrivileges:{DescID: 57, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [UserPrivileges:{DescID: 57, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [Table:{DescID: 57}, DROPPED]
  to:   [UserPrivileges:{DescID: 57, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [Locality:{DescID: 59}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [Namespace:{DescID: 59, Name: v1}, ABSENT]
  kind: Precedence
  rule: namespace needs descriptor to be dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [Owner:{DescID: 59}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [RelationDependedOnBy:{DescID: 57, ReferencedDescID: 59}, ABSENT]
  kind: SameStagePrecedence
  rule: dependency needs relation/type as non-synthetically dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [UserPrivileges:{DescID: 59, Username: admin}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [UserPrivileges:{DescID: 59, Username: public}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
- from: [View:{DescID: 59}, DROPPED]
  to:   [UserPrivileges:{DescID: 59, Username: root}, ABSENT]
  kind: Precedence
  rule: table deps removal happens after table marked as dropped
