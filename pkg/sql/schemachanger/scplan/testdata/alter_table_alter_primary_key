setup
CREATE TABLE t (k INT NOT NULL, v STRING);
----

ops
ALTER TABLE t ALTER PRIMARY KEY USING COLUMNS (k);
----
StatementPhase stage 1 of 1 with 9 MutationType ops
  transitions:
    [[Column:{DescID: 104, ColumnID: 3}, ABSENT], PUBLIC] -> WRITE_ONLY
    [[ColumnName:{DescID: 104, Name: rowid, ColumnID: 3}, ABSENT], PUBLIC] -> ABSENT
    [[IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}, PUBLIC], ABSENT] -> PUBLIC
    [[IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 2}, PUBLIC], ABSENT] -> PUBLIC
    [[PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, PUBLIC], ABSENT] -> BACKFILL_ONLY
    [[TemporaryIndex:{DescID: 104, IndexID: 3, SourceIndexID: 1}, TRANSIENT_ABSENT], ABSENT] -> DELETE_ONLY
    [[IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}, PUBLIC], ABSENT] -> PUBLIC
    [[IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 3}, PUBLIC], ABSENT] -> PUBLIC
  ops:
    *scop.MakeDroppedColumnDeleteAndWriteOnly
      ColumnID: 3
      TableID: 104
    *scop.LogEvent
      Element:
        Column:
          columnId: 3
          isHidden: true
          pgAttributeNum: 3
          tableId: 104
      EventBase:
        Authorization:
          UserName: root
        Statement: ALTER TABLE ‹defaultdb›.public.‹t› ALTER PRIMARY KEY USING COLUMNS (‹k›)
        StatementTag: ALTER TABLE
        TargetMetadata:
          SourceElementID: 1
          SubWorkID: 1
      TargetStatus: 1
    *scop.SetColumnName
      ColumnID: 3
      Name: crdb_internal_column_3_name_placeholder
      TableID: 104
    *scop.MakeAddedIndexBackfilling
      Index:
        ConstraintID: 1
        IndexID: 2
        IsUnique: true
        SourceIndexID: 1
        TableID: 104
        TemporaryIndexID: 3
    *scop.MakeAddedTempIndexDeleteOnly
      Index:
        ConstraintID: 1
        IndexID: 3
        IsUnique: true
        SourceIndexID: 1
        TableID: 104
    *scop.AddColumnToIndex
      ColumnID: 1
      IndexID: 3
      TableID: 104
    *scop.AddColumnToIndex
      ColumnID: 2
      IndexID: 3
      Kind: 2
      TableID: 104
    *scop.AddColumnToIndex
      ColumnID: 1
      IndexID: 2
      TableID: 104
    *scop.AddColumnToIndex
      ColumnID: 2
      IndexID: 2
      Kind: 2
      TableID: 104
PreCommitPhase stage 1 of 1 with 2 MutationType ops
  transitions:
  ops:
    *scop.SetJobStateOnDescriptor
      DescriptorID: 104
      Initialize: true
    *scop.CreateSchemaChangerJob
      Authorization:
        UserName: root
      DescriptorIDs:
      - 104
      JobID: 1
      RunningStatus: PostCommitPhase stage 1 of 7 with 1 MutationType op pending
      Statements:
      - statement: ALTER TABLE t ALTER PRIMARY KEY USING COLUMNS (k)
        redactedstatement: ALTER TABLE ‹defaultdb›.public.‹t› ALTER PRIMARY KEY USING COLUMNS
          (‹k›)
        statementtag: ALTER TABLE
PostCommitPhase stage 1 of 7 with 3 MutationType ops
  transitions:
    [[TemporaryIndex:{DescID: 104, IndexID: 3, SourceIndexID: 1}, TRANSIENT_ABSENT], DELETE_ONLY] -> WRITE_ONLY
  ops:
    *scop.MakeAddedIndexDeleteAndWriteOnly
      IndexID: 3
      TableID: 104
    *scop.SetJobStateOnDescriptor
      DescriptorID: 104
    *scop.UpdateSchemaChangerJob
      JobID: 1
PostCommitPhase stage 2 of 7 with 1 BackfillType op
  transitions:
    [[PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, PUBLIC], BACKFILL_ONLY] -> BACKFILLED
  ops:
    *scop.BackfillIndex
      IndexID: 2
      SourceIndexID: 1
      TableID: 104
PostCommitPhase stage 3 of 7 with 3 MutationType ops
  transitions:
    [[PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, PUBLIC], BACKFILLED] -> DELETE_ONLY
  ops:
    *scop.MakeBackfillingIndexDeleteOnly
      IndexID: 2
      TableID: 104
    *scop.SetJobStateOnDescriptor
      DescriptorID: 104
    *scop.UpdateSchemaChangerJob
      JobID: 1
PostCommitPhase stage 4 of 7 with 3 MutationType ops
  transitions:
    [[PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, PUBLIC], DELETE_ONLY] -> MERGE_ONLY
  ops:
    *scop.MakeBackfilledIndexMerging
      IndexID: 2
      TableID: 104
    *scop.SetJobStateOnDescriptor
      DescriptorID: 104
    *scop.UpdateSchemaChangerJob
      JobID: 1
PostCommitPhase stage 5 of 7 with 1 BackfillType op
  transitions:
    [[PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, PUBLIC], MERGE_ONLY] -> MERGED
  ops:
    *scop.MergeIndex
      BackfilledIndexID: 2
      TableID: 104
      TemporaryIndexID: 3
PostCommitPhase stage 6 of 7 with 3 MutationType ops
  transitions:
    [[PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, PUBLIC], MERGED] -> WRITE_ONLY
  ops:
    *scop.MakeMergedIndexWriteOnly
      IndexID: 2
      TableID: 104
    *scop.SetJobStateOnDescriptor
      DescriptorID: 104
    *scop.UpdateSchemaChangerJob
      JobID: 1
PostCommitPhase stage 7 of 7 with 1 ValidationType op
  transitions:
    [[PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, PUBLIC], WRITE_ONLY] -> VALIDATED
  ops:
    *scop.ValidateUniqueIndex
      IndexID: 2
      TableID: 104
PostCommitNonRevertiblePhase stage 1 of 3 with 11 MutationType ops
  transitions:
    [[Column:{DescID: 104, ColumnID: 3}, ABSENT], WRITE_ONLY] -> DELETE_ONLY
    [[IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, ABSENT], PUBLIC] -> WRITE_ONLY
    [[IndexName:{DescID: 104, Name: t_pkey, IndexID: 1}, ABSENT], PUBLIC] -> ABSENT
    [[PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, PUBLIC], VALIDATED] -> PUBLIC
    [[IndexName:{DescID: 104, Name: t_pkey, IndexID: 2}, PUBLIC], ABSENT] -> PUBLIC
    [[TemporaryIndex:{DescID: 104, IndexID: 3, SourceIndexID: 1}, TRANSIENT_ABSENT], WRITE_ONLY] -> TRANSIENT_DELETE_ONLY
  ops:
    *scop.MakeDroppedColumnDeleteOnly
      ColumnID: 3
      TableID: 104
    *scop.MakeDroppedPrimaryIndexDeleteAndWriteOnly
      IndexID: 1
      TableID: 104
    *scop.SetIndexName
      IndexID: 1
      Name: crdb_internal_index_1_name_placeholder
      TableID: 104
    *scop.SetIndexName
      IndexID: 2
      Name: t_pkey
      TableID: 104
    *scop.MakeDroppedIndexDeleteOnly
      IndexID: 3
      TableID: 104
    *scop.RemoveColumnFromIndex
      ColumnID: 3
      IndexID: 1
      TableID: 104
    *scop.RemoveColumnFromIndex
      ColumnID: 1
      IndexID: 1
      Kind: 2
      TableID: 104
    *scop.RemoveColumnFromIndex
      ColumnID: 2
      IndexID: 1
      Kind: 2
      Ordinal: 1
      TableID: 104
    *scop.MakeAddedPrimaryIndexPublic
      EventBase:
        Authorization:
          UserName: root
        Statement: ALTER TABLE ‹defaultdb›.public.‹t› ALTER PRIMARY KEY USING COLUMNS (‹k›)
        StatementTag: ALTER TABLE
        TargetMetadata:
          SourceElementID: 1
          SubWorkID: 1
      IndexID: 2
      TableID: 104
    *scop.SetJobStateOnDescriptor
      DescriptorID: 104
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1
PostCommitNonRevertiblePhase stage 2 of 3 with 3 MutationType ops
  transitions:
    [[PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, ABSENT], WRITE_ONLY] -> DELETE_ONLY
  ops:
    *scop.MakeDroppedIndexDeleteOnly
      IndexID: 1
      TableID: 104
    *scop.SetJobStateOnDescriptor
      DescriptorID: 104
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1
PostCommitNonRevertiblePhase stage 3 of 3 with 8 MutationType ops
  transitions:
    [[Column:{DescID: 104, ColumnID: 3}, ABSENT], DELETE_ONLY] -> ABSENT
    [[ColumnType:{DescID: 104, ColumnFamilyID: 0, ColumnID: 3}, ABSENT], PUBLIC] -> ABSENT
    [[ColumnDefaultExpression:{DescID: 104, ColumnID: 3}, ABSENT], PUBLIC] -> ABSENT
    [[PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, ABSENT], DELETE_ONLY] -> ABSENT
    [[TemporaryIndex:{DescID: 104, IndexID: 3, SourceIndexID: 1}, TRANSIENT_ABSENT], TRANSIENT_DELETE_ONLY] -> TRANSIENT_ABSENT
  ops:
    *scop.CreateGcJobForIndex
      IndexID: 3
      TableID: 104
    *scop.MakeIndexAbsent
      IndexID: 3
      TableID: 104
    *scop.CreateGcJobForIndex
      IndexID: 1
      StatementForDropJob:
        Statement: ALTER TABLE defaultdb.public.t ALTER PRIMARY KEY USING COLUMNS (k)
      TableID: 104
    *scop.MakeIndexAbsent
      EventBase:
        Authorization:
          UserName: root
        Statement: ALTER TABLE ‹defaultdb›.public.‹t› ALTER PRIMARY KEY USING COLUMNS (‹k›)
        StatementTag: ALTER TABLE
        TargetMetadata:
          SourceElementID: 1
          SubWorkID: 1
      IndexID: 1
      TableID: 104
    *scop.RemoveColumnDefaultExpression
      ColumnID: 3
      TableID: 104
    *scop.MakeColumnAbsent
      ColumnID: 3
      EventBase:
        Authorization:
          UserName: root
        Statement: ALTER TABLE ‹defaultdb›.public.‹t› ALTER PRIMARY KEY USING COLUMNS (‹k›)
        StatementTag: ALTER TABLE
        TargetMetadata:
          SourceElementID: 1
          SubWorkID: 1
      TableID: 104
    *scop.RemoveJobStateFromDescriptor
      DescriptorID: 104
      JobID: 1
    *scop.UpdateSchemaChangerJob
      IsNonCancelable: true
      JobID: 1

deps
ALTER TABLE t ALTER PRIMARY KEY USING COLUMNS (k);
----
- from: [Column:{DescID: 104, ColumnID: 3}, WRITE_ONLY]
  to:   [ColumnName:{DescID: 104, Name: rowid, ColumnID: 3}, ABSENT]
  kind: Precedence
  rule: column dependents removed after column no longer public
- from: [Column:{DescID: 104, ColumnID: 3}, WRITE_ONLY]
  to:   [ColumnType:{DescID: 104, ColumnFamilyID: 0, ColumnID: 3}, ABSENT]
  kind: Precedence
  rule: column dependents removed after column no longer public
- from: [ColumnDefaultExpression:{DescID: 104, ColumnID: 3}, ABSENT]
  to:   [ColumnType:{DescID: 104, ColumnFamilyID: 0, ColumnID: 3}, ABSENT]
  kind: SameStagePrecedence
  rule: column type dependents removed right before column type
- from: [ColumnName:{DescID: 104, Name: rowid, ColumnID: 3}, ABSENT]
  to:   [Column:{DescID: 104, ColumnID: 3}, ABSENT]
  kind: Precedence
  rule: dependents removed before column
- from: [ColumnType:{DescID: 104, ColumnFamilyID: 0, ColumnID: 3}, ABSENT]
  to:   [Column:{DescID: 104, ColumnID: 3}, ABSENT]
  kind: SameStagePrecedence
  rules: [dependents removed before column; column type removed right before column when not dropping relation]
- from: [IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 1}, ABSENT]
  to:   [PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, ABSENT]
  kind: Precedence
  rule: dependents removed before index
- from: [IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}, PUBLIC]
  to:   [PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, BACKFILLED]
  kind: Precedence
  rule: index-column added to index before index is backfilled
- from: [IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}, PUBLIC]
  to:   [TemporaryIndex:{DescID: 104, IndexID: 3, SourceIndexID: 1}, WRITE_ONLY]
  kind: Precedence
  rule: index-column added to index before temp index receives writes
- from: [IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 1}, ABSENT]
  to:   [PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, ABSENT]
  kind: Precedence
  rule: dependents removed before index
- from: [IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 2}, PUBLIC]
  to:   [PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, BACKFILLED]
  kind: Precedence
  rule: index-column added to index before index is backfilled
- from: [IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 3}, PUBLIC]
  to:   [TemporaryIndex:{DescID: 104, IndexID: 3, SourceIndexID: 1}, WRITE_ONLY]
  kind: Precedence
  rule: index-column added to index before temp index receives writes
- from: [IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 1}, ABSENT]
  to:   [PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, ABSENT]
  kind: Precedence
  rule: dependents removed before index
- from: [IndexName:{DescID: 104, Name: t_pkey, IndexID: 1}, ABSENT]
  to:   [PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, ABSENT]
  kind: Precedence
  rule: dependents removed before index
- from: [IndexName:{DescID: 104, Name: t_pkey, IndexID: 2}, PUBLIC]
  to:   [PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, PUBLIC]
  kind: SameStagePrecedence
  rule: index named right before index becomes public
- from: [PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, ABSENT]
  to:   [Column:{DescID: 104, ColumnID: 3}, ABSENT]
  kind: Precedence
  rule: indexes containing columns reach absent before column
- from: [PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, VALIDATED]
  to:   [IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 1}, ABSENT]
  kind: Precedence
  rule: index no longer public before dependents removed
- from: [PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, VALIDATED]
  to:   [IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 1}, ABSENT]
  kind: Precedence
  rule: index no longer public before dependents removed
- from: [PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, VALIDATED]
  to:   [IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 1}, ABSENT]
  kind: Precedence
  rule: index no longer public before dependents removed
- from: [PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, VALIDATED]
  to:   [IndexName:{DescID: 104, Name: t_pkey, IndexID: 1}, ABSENT]
  kind: Precedence
  rule: index no longer public before dependents removed
- from: [PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, VALIDATED]
  to:   [PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, PUBLIC]
  kind: SameStagePrecedence
  rule: primary index swap
- from: [PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, BACKFILL_ONLY]
  to:   [IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}, PUBLIC]
  kind: Precedence
  rule: index-column added to index after index exists
- from: [PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, BACKFILL_ONLY]
  to:   [IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 2}, PUBLIC]
  kind: Precedence
  rule: index-column added to index after index exists
- from: [PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, BACKFILL_ONLY]
  to:   [IndexName:{DescID: 104, Name: t_pkey, IndexID: 2}, PUBLIC]
  kind: Precedence
  rule: index existence precedes index name and comment
- from: [TemporaryIndex:{DescID: 104, IndexID: 3, SourceIndexID: 1}, DELETE_ONLY]
  to:   [IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}, PUBLIC]
  kind: Precedence
  rules: [temp index exists before columns, partitioning, and partial; index-column added to index after temp index exists]
- from: [TemporaryIndex:{DescID: 104, IndexID: 3, SourceIndexID: 1}, DELETE_ONLY]
  to:   [IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 3}, PUBLIC]
  kind: Precedence
  rules: [temp index exists before columns, partitioning, and partial; index-column added to index after temp index exists]
- from: [TemporaryIndex:{DescID: 104, IndexID: 3, SourceIndexID: 1}, TRANSIENT_ABSENT]
  to:   [PrimaryIndex:{DescID: 104, IndexID: 1, ConstraintID: 1}, ABSENT]
  kind: SameStagePrecedence
  rule: temp indexes reach absent at the same time as other indexes
- from: [TemporaryIndex:{DescID: 104, IndexID: 3, SourceIndexID: 1}, WRITE_ONLY]
  to:   [PrimaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 1, TemporaryIndexID: 3, SourceIndexID: 1}, BACKFILLED]
  kind: Precedence
  rule: temp index is WRITE_ONLY before backfill
