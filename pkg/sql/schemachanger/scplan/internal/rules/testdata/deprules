rules
----
columnInIndex($index-column, $index, $table-id, $column-id, $index-id):
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index-column[DescID] = $_
    - $index-column[ColumnID] = $column-id
    - $index[IndexID] = $index-id
    - joinOnIndexID($index, $index-column, $table-id, $index-id)
columnInSwappedInPrimaryIndex($index-column, $index, $table-id, $column-id, $index-id):
    - columnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - sourceIndexIsSet($index)
descriptorIsNotBeingDropped($element):
    not-join:
        - $descriptor[Type] IN ['*scpb.Database', '*scpb.Schema', '*scpb.View', '*scpb.Sequence', '*scpb.Table', '*scpb.EnumType', '*scpb.AliasType']
        - joinTarget($descriptor, $descriptor-target)
        - joinOnDescID($descriptor, $element, $id)
        - $descriptor-target[TargetStatus] = ABSENT
fromHasPublicStatusIfFromIsTableAndToIsRowLevelTTL($fromTarget, $fromEl, $toEl):
    not-join:
        - $fromEl[Type] = '*scpb.Table'
        - $toEl[Type] = '*scpb.RowLevelTTL'
        - $n[Type] = '*screl.Node'
        - $n[Target] = $fromTarget
        - nodeHasNoPublicStatus($n)
joinOnColumnID($a, $b, $desc-id, $col-id):
    - joinOnDescID($a, $b, $desc-id)
    - $a[ColumnID] = $col-id
    - $b[ColumnID] = $col-id
joinOnConstraintID($a, $b, $desc-id, $constraint-id):
    - joinOnDescID($a, $b, $desc-id)
    - $a[ConstraintID] = $constraint-id
    - $b[ConstraintID] = $constraint-id
joinOnDescID($a, $b, $id):
    - $a[DescID] = $id
    - $b[DescID] = $id
joinOnIndexID($a, $b, $desc-id, $index-id):
    - joinOnDescID($a, $b, $desc-id)
    - $a[IndexID] = $index-id
    - $b[IndexID] = $index-id
joinReferencedDescID($referrer, $referenced, $id):
    - $referrer[ReferencedDescID] = $id
    - $referenced[DescID] = $id
joinTarget($element, $target):
    - $target[Type] = '*scpb.Target'
    - $target[Element] = $element
    - $element[DescID] = $_
joinTargetNode($element, $target, $node):
    - joinTarget($element, $target)
    - $node[Type] = '*screl.Node'
    - $node[Target] = $target
nodeHasNoPublicStatus($n):
    not-join:
        - $public = PUBLIC
        - $n[CurrentStatus] = $public
nodeNotExistsWithStatusIn_BACKFILLED_BACKFILL_ONLY($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [BACKFILLED, BACKFILL_ONLY]
nodeNotExistsWithStatusIn_TRANSIENT_BACKFILLED_TRANSIENT_BACKFILL_ONLY($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_BACKFILLED, TRANSIENT_BACKFILL_ONLY]
nodeNotExistsWithStatusIn_TRANSIENT_DELETE_ONLY($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_DELETE_ONLY]
? nodeNotExistsWithStatusIn_TRANSIENT_DELETE_ONLY_BACKFILLED_TRANSIENT_BACKFILLED_BACKFILL_ONLY_TRANSIENT_BACKFILL_ONLY($sharedTarget)
:   not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_DELETE_ONLY, BACKFILLED, TRANSIENT_BACKFILLED, BACKFILL_ONLY, TRANSIENT_BACKFILL_ONLY]
nodeNotExistsWithStatusIn_TRANSIENT_VALIDATED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_VALIDATED]
nodeNotExistsWithStatusIn_TRANSIENT_VALIDATED_TRANSIENT_MERGE_ONLY_TRANSIENT_MERGED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_VALIDATED, TRANSIENT_MERGE_ONLY, TRANSIENT_MERGED]
nodeNotExistsWithStatusIn_VALIDATED_MERGE_ONLY_MERGED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [VALIDATED, MERGE_ONLY, MERGED]
nodeNotExistsWithStatusIn_VALIDATED_TRANSIENT_WRITE_ONLY_MERGE_ONLY_TRANSIENT_MERGE_ONLY_MERGED_TRANSIENT_MERGED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [VALIDATED, TRANSIENT_WRITE_ONLY, MERGE_ONLY, TRANSIENT_MERGE_ONLY, MERGED, TRANSIENT_MERGED]
nodeNotExistsWithStatusIn_WRITE_ONLY($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [WRITE_ONLY]
sourceIndexIsSet($index):
    - $index[SourceIndexID] != 0
toAbsent($target1, $target2):
    - $target1[TargetStatus] = ABSENT
    - $target2[TargetStatus] = ABSENT
toPublicOrTransient($target1, $target2):
    - $target1[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
    - $target2[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
transient($target1, $target2):
    - $target1[TargetStatus] = TRANSIENT_ABSENT
    - $target2[TargetStatus] = TRANSIENT_ABSENT

deprules
----
- name: 'CheckConstraint transitions to ABSENT uphold 2-version invariant: PUBLIC->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.CheckConstraint'
    - $next[Type] = '*scpb.CheckConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = PUBLIC
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'CheckConstraint transitions to ABSENT uphold 2-version invariant: VALIDATED->ABSENT'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.CheckConstraint'
    - $next[Type] = '*scpb.CheckConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = VALIDATED
    - $next-node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped($prev)
    - nodeNotExistsWithStatusIn_WRITE_ONLY($prev-target)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'CheckConstraint transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.CheckConstraint'
    - $next[Type] = '*scpb.CheckConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'CheckConstraint transitions to PUBLIC uphold 2-version invariant: ABSENT->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.CheckConstraint'
    - $next[Type] = '*scpb.CheckConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = ABSENT
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'CheckConstraint transitions to PUBLIC uphold 2-version invariant: VALIDATED->PUBLIC'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.CheckConstraint'
    - $next[Type] = '*scpb.CheckConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = VALIDATED
    - $next-node[CurrentStatus] = PUBLIC
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'CheckConstraint transitions to PUBLIC uphold 2-version invariant: WRITE_ONLY->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.CheckConstraint'
    - $next[Type] = '*scpb.CheckConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'Column transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = DELETE_ONLY
    - $next-node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'Column transitions to ABSENT uphold 2-version invariant: PUBLIC->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = PUBLIC
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'Column transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'Column transitions to PUBLIC uphold 2-version invariant: ABSENT->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = ABSENT
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'Column transitions to PUBLIC uphold 2-version invariant: DELETE_ONLY->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = DELETE_ONLY
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'Column transitions to PUBLIC uphold 2-version invariant: WRITE_ONLY->PUBLIC'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = PUBLIC
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: DEFAULT or ON UPDATE existence precedes writes to column
  from: expr-node
  kind: Precedence
  to: column-node
  query:
    - $expr[Type] IN ['*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($expr, $column, $table-id, $col-id)
    - toPublicOrTransient($expr-target, $column-target)
    - $expr-node[CurrentStatus] = PUBLIC
    - $column-node[CurrentStatus] = WRITE_ONLY
    - joinTargetNode($expr, $expr-target, $expr-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: 'ForeignKeyConstraint transitions to ABSENT uphold 2-version invariant: PUBLIC->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.ForeignKeyConstraint'
    - $next[Type] = '*scpb.ForeignKeyConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = PUBLIC
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'ForeignKeyConstraint transitions to ABSENT uphold 2-version invariant: VALIDATED->ABSENT'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.ForeignKeyConstraint'
    - $next[Type] = '*scpb.ForeignKeyConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = VALIDATED
    - $next-node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped($prev)
    - nodeNotExistsWithStatusIn_WRITE_ONLY($prev-target)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'ForeignKeyConstraint transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.ForeignKeyConstraint'
    - $next[Type] = '*scpb.ForeignKeyConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'ForeignKeyConstraint transitions to PUBLIC uphold 2-version invariant: ABSENT->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.ForeignKeyConstraint'
    - $next[Type] = '*scpb.ForeignKeyConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = ABSENT
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'ForeignKeyConstraint transitions to PUBLIC uphold 2-version invariant: VALIDATED->PUBLIC'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.ForeignKeyConstraint'
    - $next[Type] = '*scpb.ForeignKeyConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = VALIDATED
    - $next-node[CurrentStatus] = PUBLIC
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'ForeignKeyConstraint transitions to PUBLIC uphold 2-version invariant: WRITE_ONLY->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.ForeignKeyConstraint'
    - $next[Type] = '*scpb.ForeignKeyConstraint'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: BACKFILLED->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = BACKFILLED
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: BACKFILL_ONLY->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = BACKFILL_ONLY
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = DELETE_ONLY
    - $next-node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped($prev)
    - nodeNotExistsWithStatusIn_TRANSIENT_DELETE_ONLY_BACKFILLED_TRANSIENT_BACKFILLED_BACKFILL_ONLY_TRANSIENT_BACKFILL_ONLY($prev-target)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: MERGED->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = MERGED
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: MERGE_ONLY->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = MERGE_ONLY
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: PUBLIC->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = PUBLIC
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_ABSENT->ABSENT'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_ABSENT
    - $next-node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_BACKFILLED->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_BACKFILLED
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_BACKFILL_ONLY->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_BACKFILL_ONLY
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_DELETE_ONLY->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_MERGED->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_MERGED
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_MERGE_ONLY->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_MERGE_ONLY
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_VALIDATED->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_VALIDATED
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_WRITE_ONLY->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: VALIDATED->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = VALIDATED
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - nodeNotExistsWithStatusIn_TRANSIENT_VALIDATED($prev-target)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - nodeNotExistsWithStatusIn_VALIDATED_TRANSIENT_WRITE_ONLY_MERGE_ONLY_TRANSIENT_MERGE_ONLY_MERGED_TRANSIENT_MERGED($prev-target)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: ABSENT->BACKFILL_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = ABSENT
    - $next-node[CurrentStatus] = BACKFILL_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: BACKFILLED->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = BACKFILLED
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: BACKFILL_ONLY->BACKFILLED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = BACKFILL_ONLY
    - $next-node[CurrentStatus] = BACKFILLED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: DELETE_ONLY->MERGE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = DELETE_ONLY
    - $next-node[CurrentStatus] = MERGE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: MERGED->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = MERGED
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: MERGE_ONLY->MERGED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = MERGE_ONLY
    - $next-node[CurrentStatus] = MERGED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: VALIDATED->PUBLIC'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = VALIDATED
    - $next-node[CurrentStatus] = PUBLIC
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: WRITE_ONLY->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: ABSENT->BACKFILL_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = ABSENT
    - $next-node[CurrentStatus] = BACKFILL_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: BACKFILLED->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = BACKFILLED
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: BACKFILL_ONLY->BACKFILLED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = BACKFILL_ONLY
    - $next-node[CurrentStatus] = BACKFILLED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: DELETE_ONLY->MERGE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = DELETE_ONLY
    - $next-node[CurrentStatus] = MERGE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: MERGED->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = MERGED
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: MERGE_ONLY->MERGED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = MERGE_ONLY
    - $next-node[CurrentStatus] = MERGED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: PUBLIC->TRANSIENT_VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = PUBLIC
    - $next-node[CurrentStatus] = TRANSIENT_VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_BACKFILLED->TRANSIENT_DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_BACKFILLED
    - $next-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_BACKFILL_ONLY->TRANSIENT_DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_BACKFILL_ONLY
    - $next-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_DELETE_ONLY->TRANSIENT_ABSENT'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $next-node[CurrentStatus] = TRANSIENT_ABSENT
    - descriptorIsNotBeingDropped($prev)
    - nodeNotExistsWithStatusIn_TRANSIENT_BACKFILLED_TRANSIENT_BACKFILL_ONLY($prev-target)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_MERGED->TRANSIENT_WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_MERGED
    - $next-node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_MERGE_ONLY->TRANSIENT_WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_MERGE_ONLY
    - $next-node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_VALIDATED->TRANSIENT_WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_VALIDATED
    - $next-node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_WRITE_ONLY->TRANSIENT_DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - $next-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - nodeNotExistsWithStatusIn_TRANSIENT_VALIDATED_TRANSIENT_MERGE_ONLY_TRANSIENT_MERGED($prev-target)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: VALIDATED->PUBLIC'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = VALIDATED
    - $next-node[CurrentStatus] = PUBLIC
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: WRITE_ONLY->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: BACKFILLED->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = BACKFILLED
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: BACKFILL_ONLY->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = BACKFILL_ONLY
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = DELETE_ONLY
    - $next-node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped($prev)
    - nodeNotExistsWithStatusIn_BACKFILLED_BACKFILL_ONLY($prev-target)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: MERGED->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = MERGED
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: MERGE_ONLY->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = MERGE_ONLY
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: PUBLIC->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = PUBLIC
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: VALIDATED->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = VALIDATED
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - nodeNotExistsWithStatusIn_VALIDATED_MERGE_ONLY_MERGED($prev-target)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: ABSENT->BACKFILL_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = ABSENT
    - $next-node[CurrentStatus] = BACKFILL_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: BACKFILLED->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = BACKFILLED
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: BACKFILL_ONLY->BACKFILLED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = BACKFILL_ONLY
    - $next-node[CurrentStatus] = BACKFILLED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: DELETE_ONLY->MERGE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = DELETE_ONLY
    - $next-node[CurrentStatus] = MERGE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: MERGED->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = MERGED
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: MERGE_ONLY->MERGED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = MERGE_ONLY
    - $next-node[CurrentStatus] = MERGED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: VALIDATED->PUBLIC'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = VALIDATED
    - $next-node[CurrentStatus] = PUBLIC
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: WRITE_ONLY->VALIDATED'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = PUBLIC
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'TemporaryIndex transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = DELETE_ONLY
    - $next-node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped($prev)
    - nodeNotExistsWithStatusIn_TRANSIENT_DELETE_ONLY($prev-target)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'TemporaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_ABSENT->ABSENT'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_ABSENT
    - $next-node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'TemporaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_DELETE_ONLY->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'TemporaryIndex transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = ABSENT
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: ABSENT->DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = ABSENT
    - $next-node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: DELETE_ONLY->WRITE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = DELETE_ONLY
    - $next-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_DELETE_ONLY->TRANSIENT_ABSENT'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $next-node[CurrentStatus] = TRANSIENT_ABSENT
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: 'TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: WRITE_ONLY->TRANSIENT_DELETE_ONLY'
  from: prev-node
  kind: PreviousTransactionPrecedence
  to: next-node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-target[Self] = $next-target
    - $prev-target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-node[CurrentStatus] = WRITE_ONLY
    - $next-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - descriptorIsNotBeingDropped($prev)
    - joinTargetNode($prev, $prev-target, $prev-node)
    - joinTargetNode($next, $next-target, $next-node)
- name: column dependents exist before column becomes public
  from: dependent-node
  kind: Precedence
  to: column-node
  query:
    - $dependent[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexColumn']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($dependent, $column, $table-id, $col-id)
    - toPublicOrTransient($dependent-target, $column-target)
    - $dependent-node[CurrentStatus] = PUBLIC
    - $column-node[CurrentStatus] = PUBLIC
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: column existence precedes column dependents
  from: column-node
  kind: Precedence
  to: dependent-node
  query:
    - $column[Type] = '*scpb.Column'
    - $dependent[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexColumn']
    - joinOnColumnID($column, $dependent, $table-id, $col-id)
    - toPublicOrTransient($column-target, $dependent-target)
    - $column-node[CurrentStatus] = DELETE_ONLY
    - $dependent-node[CurrentStatus] = PUBLIC
    - joinTargetNode($column, $column-target, $column-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: column existence precedes index existence
  from: column-node
  kind: Precedence
  to: index-node
  query:
    - $column[Type] = '*scpb.Column'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - joinOnColumnID($column, $index-column, $table-id, $column-id)
    - columnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - toPublicOrTransient($column-target, $index-target)
    - $column-node[CurrentStatus] = DELETE_ONLY
    - $index-node[CurrentStatus] = BACKFILL_ONLY
    - joinTargetNode($column, $column-target, $column-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: column existence precedes temp index existence
  from: column-node
  kind: Precedence
  to: index-node
  query:
    - $column[Type] = '*scpb.Column'
    - $index[Type] = '*scpb.TemporaryIndex'
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - columnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - toPublicOrTransient($column-target, $index-target)
    - $column-node[CurrentStatus] = DELETE_ONLY
    - $index-node[CurrentStatus] = DELETE_ONLY
    - joinTargetNode($column, $column-target, $column-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: column is WRITE_ONLY before temporary index is WRITE_ONLY
  from: column-node
  kind: Precedence
  to: index-node
  query:
    - $column[Type] = '*scpb.Column'
    - $index[Type] = '*scpb.TemporaryIndex'
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - columnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - toPublicOrTransient($column-target, $index-target)
    - $column-node[CurrentStatus] = WRITE_ONLY
    - $index-node[CurrentStatus] = WRITE_ONLY
    - joinTargetNode($column, $column-target, $column-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: column name and type set right after column existence
  from: column-node
  kind: SameStagePrecedence
  to: column-name-or-type-node
  query:
    - $column[Type] = '*scpb.Column'
    - $column-name-or-type[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType']
    - toPublicOrTransient($column-target, $column-name-or-type-target)
    - $column-node[CurrentStatus] = DELETE_ONLY
    - $column-name-or-type-node[CurrentStatus] = PUBLIC
    - joinOnColumnID($column, $column-name-or-type, $table-id, $col-id)
    - joinTargetNode($column, $column-target, $column-node)
    - joinTargetNode($column-name-or-type, $column-name-or-type-target, $column-name-or-type-node)
- name: column no longer public before dependents
  from: column-node
  kind: Precedence
  to: dependent-node
  query:
    - $column[Type] = '*scpb.Column'
    - $dependent[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexColumn']
    - joinOnColumnID($column, $dependent, $table-id, $col-id)
    - toAbsent($column-target, $dependent-target)
    - $column-node[CurrentStatus] = WRITE_ONLY
    - $dependent-node[CurrentStatus] = ABSENT
    - joinTargetNode($column, $column-target, $column-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: column no longer public before dependents
  from: column-node
  kind: Precedence
  to: dependent-node
  query:
    - $column[Type] = '*scpb.Column'
    - $dependent[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexColumn']
    - joinOnColumnID($column, $dependent, $table-id, $col-id)
    - transient($column-target, $dependent-target)
    - $column-node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - $dependent-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($column, $column-target, $column-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: column no longer public before dependents
  from: column-node
  kind: Precedence
  to: dependent-node
  query:
    - $column[Type] = '*scpb.Column'
    - $dependent[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexColumn']
    - joinOnColumnID($column, $dependent, $table-id, $col-id)
    - $column-target[TargetStatus] = TRANSIENT_ABSENT
    - $column-node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - $dependent-target[TargetStatus] = ABSENT
    - $dependent-node[CurrentStatus] = ABSENT
    - joinTargetNode($column, $column-target, $column-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: column no longer public before dependents
  from: column-node
  kind: Precedence
  to: dependent-node
  query:
    - $column[Type] = '*scpb.Column'
    - $dependent[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexColumn']
    - joinOnColumnID($column, $dependent, $table-id, $col-id)
    - $column-target[TargetStatus] = ABSENT
    - $column-node[CurrentStatus] = WRITE_ONLY
    - $dependent-target[TargetStatus] = TRANSIENT_ABSENT
    - $dependent-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($column, $column-target, $column-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: column type dependents removed right before column type
  from: dependent-node
  kind: SameStagePrecedence
  to: column-type-node
  query:
    - $dependent[Type] IN ['*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner']
    - $column-type[Type] = '*scpb.ColumnType'
    - joinOnColumnID($dependent, $column-type, $table-id, $col-id)
    - toAbsent($dependent-target, $column-type-target)
    - $dependent-node[CurrentStatus] = ABSENT
    - $column-type-node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($column-type, $column-type-target, $column-type-node)
- name: column type removed right before column when not dropping relation
  from: column-type-node
  kind: SameStagePrecedence
  to: column-node
  query:
    - $column-type[Type] = '*scpb.ColumnType'
    - descriptorIsNotBeingDropped($column-type)
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($column-type, $column, $table-id, $col-id)
    - toAbsent($column-type-target, $column-target)
    - $column-type-node[CurrentStatus] = ABSENT
    - $column-node[CurrentStatus] = ABSENT
    - joinTargetNode($column-type, $column-type-target, $column-type-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: constraint dependent public right before constraint
  from: dependent-node
  kind: SameStagePrecedence
  to: constraint-node
  query:
    - $dependent[Type] IN ['*scpb.ConstraintWithoutIndexName', '*scpb.ConstraintComment']
    - $constraint[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex', '*scpb.UniqueWithoutIndexConstraint', '*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint']
    - joinOnConstraintID($dependent, $constraint, $table-id, $constraint-id)
    - toPublicOrTransient($dependent-target, $constraint-target)
    - $dependent-node[CurrentStatus] = PUBLIC
    - $constraint-node[CurrentStatus] = PUBLIC
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($constraint, $constraint-target, $constraint-node)
- name: constraint no longer public before dependents
  from: constraint-node
  kind: Precedence
  to: dependent-node
  query:
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint']
    - $dependent[Type] IN ['*scpb.ConstraintWithoutIndexName', '*scpb.ConstraintComment']
    - joinOnConstraintID($constraint, $dependent, $table-id, $constraint-id)
    - transient($constraint-target, $dependent-target)
    - $constraint-node[CurrentStatus] = TRANSIENT_VALIDATED
    - $dependent-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($constraint, $constraint-target, $constraint-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: constraint no longer public before dependents
  from: constraint-node
  kind: Precedence
  to: dependent-node
  query:
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint']
    - $dependent[Type] IN ['*scpb.ConstraintWithoutIndexName', '*scpb.ConstraintComment']
    - joinOnConstraintID($constraint, $dependent, $table-id, $constraint-id)
    - $constraint-target[TargetStatus] = TRANSIENT_ABSENT
    - $constraint-node[CurrentStatus] = TRANSIENT_VALIDATED
    - $dependent-target[TargetStatus] = ABSENT
    - $dependent-node[CurrentStatus] = ABSENT
    - joinTargetNode($constraint, $constraint-target, $constraint-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: constraint no longer public before dependents
  from: constraint-node
  kind: Precedence
  to: dependent-node
  query:
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint']
    - $dependent[Type] IN ['*scpb.ConstraintWithoutIndexName', '*scpb.ConstraintComment']
    - joinOnConstraintID($constraint, $dependent, $table-id, $constraint-id)
    - toAbsent($constraint-target, $dependent-target)
    - $constraint-node[CurrentStatus] = VALIDATED
    - $dependent-node[CurrentStatus] = ABSENT
    - joinTargetNode($constraint, $constraint-target, $constraint-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: constraint no longer public before dependents
  from: constraint-node
  kind: Precedence
  to: dependent-node
  query:
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint']
    - $dependent[Type] IN ['*scpb.ConstraintWithoutIndexName', '*scpb.ConstraintComment']
    - joinOnConstraintID($constraint, $dependent, $table-id, $constraint-id)
    - $constraint-target[TargetStatus] = ABSENT
    - $constraint-node[CurrentStatus] = VALIDATED
    - $dependent-target[TargetStatus] = TRANSIENT_ABSENT
    - $dependent-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($constraint, $constraint-target, $constraint-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: dependent view absent before secondary index
  from: view-node
  kind: Precedence
  to: index-node
  query:
    - $view[Type] = '*scpb.View'
    - $index[Type] = '*scpb.SecondaryIndex'
    - viewReferencesIndex(*scpb.View, *scpb.SecondaryIndex)($view, $index)
    - $view-target[TargetStatus] = ABSENT
    - $view-node[CurrentStatus] = ABSENT
    - $index-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($view, $view-target, $view-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: dependent view absent before secondary index
  from: view-node
  kind: Precedence
  to: index-node
  query:
    - $view[Type] = '*scpb.View'
    - $index[Type] = '*scpb.SecondaryIndex'
    - viewReferencesIndex(*scpb.View, *scpb.SecondaryIndex)($view, $index)
    - $view-target[TargetStatus] = TRANSIENT_ABSENT
    - $view-node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-target[TargetStatus] = ABSENT
    - $index-node[CurrentStatus] = ABSENT
    - joinTargetNode($view, $view-target, $view-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: dependent view absent before secondary index
  from: view-node
  kind: Precedence
  to: index-node
  query:
    - $view[Type] = '*scpb.View'
    - $index[Type] = '*scpb.SecondaryIndex'
    - viewReferencesIndex(*scpb.View, *scpb.SecondaryIndex)($view, $index)
    - toAbsent($view-target, $index-target)
    - $view-node[CurrentStatus] = ABSENT
    - $index-node[CurrentStatus] = ABSENT
    - joinTargetNode($view, $view-target, $view-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: dependent view absent before secondary index
  from: view-node
  kind: Precedence
  to: index-node
  query:
    - $view[Type] = '*scpb.View'
    - $index[Type] = '*scpb.SecondaryIndex'
    - viewReferencesIndex(*scpb.View, *scpb.SecondaryIndex)($view, $index)
    - transient($view-target, $index-target)
    - $view-node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($view, $view-target, $view-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: dependent view no longer public before secondary index
  from: view-node
  kind: Precedence
  to: index-node
  query:
    - $view[Type] = '*scpb.View'
    - $index[Type] = '*scpb.SecondaryIndex'
    - viewReferencesIndex(*scpb.View, *scpb.SecondaryIndex)($view, $index)
    - $view-target[TargetStatus] = ABSENT
    - $view-node[CurrentStatus] = DROPPED
    - $index-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_VALIDATED
    - joinTargetNode($view, $view-target, $view-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: dependent view no longer public before secondary index
  from: view-node
  kind: Precedence
  to: index-node
  query:
    - $view[Type] = '*scpb.View'
    - $index[Type] = '*scpb.SecondaryIndex'
    - viewReferencesIndex(*scpb.View, *scpb.SecondaryIndex)($view, $index)
    - toAbsent($view-target, $index-target)
    - $view-node[CurrentStatus] = DROPPED
    - $index-node[CurrentStatus] = VALIDATED
    - joinTargetNode($view, $view-target, $view-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: dependent view no longer public before secondary index
  from: view-node
  kind: Precedence
  to: index-node
  query:
    - $view[Type] = '*scpb.View'
    - $index[Type] = '*scpb.SecondaryIndex'
    - viewReferencesIndex(*scpb.View, *scpb.SecondaryIndex)($view, $index)
    - transient($view-target, $index-target)
    - $view-node[CurrentStatus] = TRANSIENT_DROPPED
    - $index-node[CurrentStatus] = TRANSIENT_VALIDATED
    - joinTargetNode($view, $view-target, $view-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: dependent view no longer public before secondary index
  from: view-node
  kind: Precedence
  to: index-node
  query:
    - $view[Type] = '*scpb.View'
    - $index[Type] = '*scpb.SecondaryIndex'
    - viewReferencesIndex(*scpb.View, *scpb.SecondaryIndex)($view, $index)
    - $view-target[TargetStatus] = TRANSIENT_ABSENT
    - $view-node[CurrentStatus] = TRANSIENT_DROPPED
    - $index-target[TargetStatus] = ABSENT
    - $index-node[CurrentStatus] = VALIDATED
    - joinTargetNode($view, $view-target, $view-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: dependents removed before column
  from: dependent-node
  kind: Precedence
  to: column-node
  query:
    - $dependent[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexColumn']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($dependent, $column, $table-id, $col-id)
    - transient($dependent-target, $column-target)
    - $dependent-node[CurrentStatus] = TRANSIENT_ABSENT
    - $column-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: dependents removed before column
  from: dependent-node
  kind: Precedence
  to: column-node
  query:
    - $dependent[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexColumn']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($dependent, $column, $table-id, $col-id)
    - toAbsent($dependent-target, $column-target)
    - $dependent-node[CurrentStatus] = ABSENT
    - $column-node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: dependents removed before column
  from: dependent-node
  kind: Precedence
  to: column-node
  query:
    - $dependent[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexColumn']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($dependent, $column, $table-id, $col-id)
    - $dependent-target[TargetStatus] = TRANSIENT_ABSENT
    - $dependent-node[CurrentStatus] = TRANSIENT_ABSENT
    - $column-target[TargetStatus] = ABSENT
    - $column-node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: dependents removed before column
  from: dependent-node
  kind: Precedence
  to: column-node
  query:
    - $dependent[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexColumn']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($dependent, $column, $table-id, $col-id)
    - $dependent-target[TargetStatus] = ABSENT
    - $dependent-node[CurrentStatus] = ABSENT
    - $column-target[TargetStatus] = TRANSIENT_ABSENT
    - $column-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: dependents removed before constraint
  from: dependents-node
  kind: Precedence
  to: constraint-node
  query:
    - $dependents[Type] IN ['*scpb.ConstraintWithoutIndexName', '*scpb.ConstraintComment']
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint']
    - joinOnConstraintID($dependents, $constraint, $table-id, $constraint-id)
    - toAbsent($dependents-target, $constraint-target)
    - $dependents-node[CurrentStatus] = ABSENT
    - $constraint-node[CurrentStatus] = ABSENT
    - joinTargetNode($dependents, $dependents-target, $dependents-node)
    - joinTargetNode($constraint, $constraint-target, $constraint-node)
- name: dependents removed before constraint
  from: dependents-node
  kind: Precedence
  to: constraint-node
  query:
    - $dependents[Type] IN ['*scpb.ConstraintWithoutIndexName', '*scpb.ConstraintComment']
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint']
    - joinOnConstraintID($dependents, $constraint, $table-id, $constraint-id)
    - transient($dependents-target, $constraint-target)
    - $dependents-node[CurrentStatus] = TRANSIENT_ABSENT
    - $constraint-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependents, $dependents-target, $dependents-node)
    - joinTargetNode($constraint, $constraint-target, $constraint-node)
- name: dependents removed before constraint
  from: dependents-node
  kind: Precedence
  to: constraint-node
  query:
    - $dependents[Type] IN ['*scpb.ConstraintWithoutIndexName', '*scpb.ConstraintComment']
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint']
    - joinOnConstraintID($dependents, $constraint, $table-id, $constraint-id)
    - $dependents-target[TargetStatus] = TRANSIENT_ABSENT
    - $dependents-node[CurrentStatus] = TRANSIENT_ABSENT
    - $constraint-target[TargetStatus] = ABSENT
    - $constraint-node[CurrentStatus] = ABSENT
    - joinTargetNode($dependents, $dependents-target, $dependents-node)
    - joinTargetNode($constraint, $constraint-target, $constraint-node)
- name: dependents removed before constraint
  from: dependents-node
  kind: Precedence
  to: constraint-node
  query:
    - $dependents[Type] IN ['*scpb.ConstraintWithoutIndexName', '*scpb.ConstraintComment']
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint']
    - joinOnConstraintID($dependents, $constraint, $table-id, $constraint-id)
    - $dependents-target[TargetStatus] = ABSENT
    - $dependents-node[CurrentStatus] = ABSENT
    - $constraint-target[TargetStatus] = TRANSIENT_ABSENT
    - $constraint-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependents, $dependents-target, $dependents-node)
    - joinTargetNode($constraint, $constraint-target, $constraint-node)
- name: dependents removed before index
  from: dependent-node
  kind: Precedence
  to: index-node
  query:
    - $dependent[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($dependent, $index, $table-id, $index-id)
    - $dependent-target[TargetStatus] = TRANSIENT_ABSENT
    - $dependent-node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-target[TargetStatus] = ABSENT
    - $index-node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: dependents removed before index
  from: dependent-node
  kind: Precedence
  to: index-node
  query:
    - $dependent[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($dependent, $index, $table-id, $index-id)
    - toAbsent($dependent-target, $index-target)
    - $dependent-node[CurrentStatus] = ABSENT
    - $index-node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: dependents removed before index
  from: dependent-node
  kind: Precedence
  to: index-node
  query:
    - $dependent[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($dependent, $index, $table-id, $index-id)
    - transient($dependent-target, $index-target)
    - $dependent-node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: dependents removed before index
  from: dependent-node
  kind: Precedence
  to: index-node
  query:
    - $dependent[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($dependent, $index, $table-id, $index-id)
    - $dependent-target[TargetStatus] = ABSENT
    - $dependent-node[CurrentStatus] = ABSENT
    - $index-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: descriptor DROPPED in transaction before removal
  from: dropped-node
  kind: PreviousTransactionPrecedence
  to: absent-node
  query:
    - $dropped[Type] IN ['*scpb.Database', '*scpb.Schema', '*scpb.View', '*scpb.Sequence', '*scpb.Table', '*scpb.EnumType', '*scpb.AliasType']
    - $dropped[DescID] = $_
    - $dropped[Self] = $absent
    - toAbsent($dropped-target, $absent-target)
    - $dropped-node[CurrentStatus] = DROPPED
    - $absent-node[CurrentStatus] = ABSENT
    - joinTargetNode($dropped, $dropped-target, $dropped-node)
    - joinTargetNode($absent, $absent-target, $absent-node)
- name: descriptor TXN_DROPPED before DROPPED
  from: txn_dropped-node
  kind: PreviousStagePrecedence
  to: dropped-node
  query:
    - $txn_dropped[Type] IN ['*scpb.Database', '*scpb.Schema', '*scpb.View', '*scpb.Sequence', '*scpb.Table', '*scpb.EnumType', '*scpb.AliasType']
    - $txn_dropped[DescID] = $_
    - $txn_dropped[Self] = $dropped
    - toAbsent($txn_dropped-target, $dropped-target)
    - $txn_dropped-node[CurrentStatus] = TXN_DROPPED
    - $dropped-node[CurrentStatus] = DROPPED
    - joinTargetNode($txn_dropped, $txn_dropped-target, $txn_dropped-node)
    - joinTargetNode($dropped, $dropped-target, $dropped-node)
- name: descriptor drop right before dependent element removal
  from: descriptor-node
  kind: Precedence
  to: dependent-node
  query:
    - $descriptor[Type] IN ['*scpb.Database', '*scpb.Schema', '*scpb.View', '*scpb.Sequence', '*scpb.Table', '*scpb.EnumType', '*scpb.AliasType']
    - $dependent[Type] IN ['*scpb.ColumnFamily', '*scpb.UniqueWithoutIndexConstraint', '*scpb.TableComment', '*scpb.RowLevelTTL', '*scpb.TableZoneConfig', '*scpb.TablePartitioning', '*scpb.TableLocalityGlobal', '*scpb.TableLocalityPrimaryRegion', '*scpb.TableLocalitySecondaryRegion', '*scpb.TableLocalityRegionalByRow', '*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn', '*scpb.ConstraintWithoutIndexName', '*scpb.ConstraintComment', '*scpb.Namespace', '*scpb.Owner', '*scpb.UserPrivileges', '*scpb.DatabaseRegionConfig', '*scpb.DatabaseRoleSetting', '*scpb.DatabaseComment', '*scpb.SchemaParent', '*scpb.SchemaComment', '*scpb.ObjectParent', '*scpb.EnumTypeValue']
    - joinOnDescID($descriptor, $dependent, $desc-id)
    - toAbsent($descriptor-target, $dependent-target)
    - $descriptor-node[CurrentStatus] = DROPPED
    - $dependent-node[CurrentStatus] = ABSENT
    - fromHasPublicStatusIfFromIsTableAndToIsRowLevelTTL($descriptor-target, $descriptor, $dependent)
    - joinTargetNode($descriptor, $descriptor-target, $descriptor-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: descriptor drop right before removing dependent with attr ref
  from: referenced-descriptor-node
  kind: SameStagePrecedence
  to: referencing-via-attr-node
  query:
    - $referenced-descriptor[Type] IN ['*scpb.Database', '*scpb.Schema', '*scpb.View', '*scpb.Sequence', '*scpb.Table', '*scpb.EnumType', '*scpb.AliasType']
    - $referencing-via-attr[Type] IN ['*scpb.ColumnFamily', '*scpb.UniqueWithoutIndexConstraint', '*scpb.TableComment', '*scpb.RowLevelTTL', '*scpb.TableZoneConfig', '*scpb.TablePartitioning', '*scpb.TableLocalityGlobal', '*scpb.TableLocalityPrimaryRegion', '*scpb.TableLocalitySecondaryRegion', '*scpb.TableLocalityRegionalByRow', '*scpb.ColumnName', '*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner', '*scpb.ColumnComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn', '*scpb.ConstraintWithoutIndexName', '*scpb.ConstraintComment', '*scpb.Namespace', '*scpb.Owner', '*scpb.UserPrivileges', '*scpb.DatabaseRegionConfig', '*scpb.DatabaseRoleSetting', '*scpb.DatabaseComment', '*scpb.SchemaParent', '*scpb.SchemaComment', '*scpb.ObjectParent', '*scpb.EnumTypeValue']
    - joinReferencedDescID($referencing-via-attr, $referenced-descriptor, $desc-id)
    - toAbsent($referenced-descriptor-target, $referencing-via-attr-target)
    - $referenced-descriptor-node[CurrentStatus] = DROPPED
    - $referencing-via-attr-node[CurrentStatus] = ABSENT
    - joinTargetNode($referenced-descriptor, $referenced-descriptor-target, $referenced-descriptor-node)
    - joinTargetNode($referencing-via-attr, $referencing-via-attr-target, $referencing-via-attr-node)
- name: descriptor drop right before removing dependent with expr ref to sequence
  from: referenced-descriptor-node
  kind: SameStagePrecedence
  to: referencing-via-expr-node
  query:
    - $referenced-descriptor[Type] = '*scpb.Sequence'
    - $referenced-descriptor[DescID] = $seqID
    - $referencing-via-expr[ReferencedSequenceIDs] CONTAINS $seqID
    - $referencing-via-expr[Type] IN ['*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SecondaryIndexPartial']
    - toAbsent($referenced-descriptor-target, $referencing-via-expr-target)
    - $referenced-descriptor-node[CurrentStatus] = DROPPED
    - $referencing-via-expr-node[CurrentStatus] = ABSENT
    - joinTargetNode($referenced-descriptor, $referenced-descriptor-target, $referenced-descriptor-node)
    - joinTargetNode($referencing-via-expr, $referencing-via-expr-target, $referencing-via-expr-node)
- name: descriptor drop right before removing dependent with type ref
  from: referenced-descriptor-node
  kind: SameStagePrecedence
  to: referencing-via-type-node
  query:
    - $referenced-descriptor[Type] IN ['*scpb.EnumType', '*scpb.AliasType']
    - $referenced-descriptor[DescID] = $fromDescID
    - $referencing-via-type[ReferencedTypeIDs] CONTAINS $fromDescID
    - $referencing-via-type[Type] IN ['*scpb.ColumnType', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SecondaryIndexPartial']
    - toAbsent($referenced-descriptor-target, $referencing-via-type-target)
    - $referenced-descriptor-node[CurrentStatus] = DROPPED
    - $referencing-via-type-node[CurrentStatus] = ABSENT
    - joinTargetNode($referenced-descriptor, $referenced-descriptor-target, $referenced-descriptor-node)
    - joinTargetNode($referencing-via-type, $referencing-via-type-target, $referencing-via-type-node)
- name: descriptor removed right before garbage collection
  from: database-node
  kind: SameStagePrecedence
  to: data-node
  query:
    - $database[Type] IN ['*scpb.Database', '*scpb.Schema', '*scpb.View', '*scpb.Sequence', '*scpb.Table', '*scpb.EnumType', '*scpb.AliasType']
    - $data[Type] = '*scpb.DatabaseData'
    - joinOnDescID($database, $data, $db-id)
    - toAbsent($database-target, $data-target)
    - $database-node[CurrentStatus] = ABSENT
    - $data-node[CurrentStatus] = DROPPED
    - joinTargetNode($database, $database-target, $database-node)
    - joinTargetNode($data, $data-target, $data-node)
- name: ensure columns are in increasing order
  from: later-column-node
  kind: SameStagePrecedence
  to: earlier-column-node
  query:
    - $later-column[Type] = '*scpb.Column'
    - $earlier-column[Type] = '*scpb.Column'
    - joinOnDescID($later-column, $earlier-column, $table-id)
    - toPublicOrTransient($later-column-target, $earlier-column-target)
    - $status IN [WRITE_ONLY, PUBLIC]
    - $later-column-node[CurrentStatus] = $status
    - $earlier-column-node[CurrentStatus] = $status
    - SmallerColumnIDFirst(*scpb.Column, *scpb.Column)($later-column, $earlier-column)
    - joinTargetNode($later-column, $later-column-target, $later-column-node)
    - joinTargetNode($earlier-column, $earlier-column-target, $earlier-column-node)
- name: index data exists as soon as index accepts backfills
  from: index-name-node
  kind: SameStagePrecedence
  to: index-node
  query:
    - $index-name[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $index[Type] = '*scpb.IndexData'
    - joinOnIndexID($index-name, $index, $table-id, $index-id)
    - toPublicOrTransient($index-name-target, $index-target)
    - $index-name-node[CurrentStatus] = BACKFILL_ONLY
    - $index-node[CurrentStatus] = PUBLIC
    - joinTargetNode($index-name, $index-name-target, $index-name-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: index dependents exist before index becomes public
  from: dependent-node
  kind: Precedence
  to: index-node
  query:
    - $dependent[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($dependent, $index, $table-id, $index-id)
    - toPublicOrTransient($dependent-target, $index-target)
    - $dependent-node[CurrentStatus] = PUBLIC
    - $index-node[CurrentStatus] = PUBLIC
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: index existence precedes index dependents
  from: index-node
  kind: Precedence
  to: dependent-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $dependent[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - toPublicOrTransient($index-target, $dependent-target)
    - $index-node[CurrentStatus] = BACKFILL_ONLY
    - $dependent-node[CurrentStatus] = PUBLIC
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: index is ready to be validated before we validate constraint on it
  from: index-node
  kind: Precedence
  to: constraint-node
  query:
    - $index[Type] = '*scpb.PrimaryIndex'
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint']
    - joinOnDescID($index, $constraint, $table-id)
    - $index[IndexID] = $index-id-for-validation
    - $constraint[IndexID] = $index-id-for-validation
    - toPublicOrTransient($index-target, $constraint-target)
    - $index-node[CurrentStatus] = VALIDATED
    - $constraint-node[CurrentStatus] = VALIDATED
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($constraint, $constraint-target, $constraint-node)
- name: index no longer public before dependents
  from: index-node
  kind: Precedence
  to: dependent-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $dependent[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - transient($index-target, $dependent-target)
    - $index-node[CurrentStatus] = TRANSIENT_VALIDATED
    - $dependent-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: index no longer public before dependents
  from: index-node
  kind: Precedence
  to: dependent-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $dependent[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - toAbsent($index-target, $dependent-target)
    - $index-node[CurrentStatus] = VALIDATED
    - $dependent-node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: index no longer public before dependents
  from: index-node
  kind: Precedence
  to: dependent-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $dependent[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - $index-target[TargetStatus] = ABSENT
    - $index-node[CurrentStatus] = VALIDATED
    - $dependent-target[TargetStatus] = TRANSIENT_ABSENT
    - $dependent-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: index no longer public before dependents
  from: index-node
  kind: Precedence
  to: dependent-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $dependent[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - $index-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_VALIDATED
    - $dependent-target[TargetStatus] = ABSENT
    - $dependent-node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: index no longer public before index name
  from: index-node
  kind: Precedence
  to: name-node
  query:
    - $index[Type] = '*scpb.SecondaryIndex'
    - $name[Type] = '*scpb.IndexName'
    - joinOnIndexID($index, $name, $table-id, $index-id)
    - $index-target[TargetStatus] = ABSENT
    - $index-node[CurrentStatus] = DELETE_ONLY
    - $name-target[TargetStatus] = TRANSIENT_ABSENT
    - $name-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($name, $name-target, $name-node)
- name: index no longer public before index name
  from: index-node
  kind: Precedence
  to: name-node
  query:
    - $index[Type] = '*scpb.SecondaryIndex'
    - $name[Type] = '*scpb.IndexName'
    - joinOnIndexID($index, $name, $table-id, $index-id)
    - toAbsent($index-target, $name-target)
    - $index-node[CurrentStatus] = DELETE_ONLY
    - $name-node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($name, $name-target, $name-node)
- name: index no longer public before index name
  from: index-node
  kind: Precedence
  to: name-node
  query:
    - $index[Type] = '*scpb.SecondaryIndex'
    - $name[Type] = '*scpb.IndexName'
    - joinOnIndexID($index, $name, $table-id, $index-id)
    - transient($index-target, $name-target)
    - $index-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $name-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($name, $name-target, $name-node)
- name: index no longer public before index name
  from: index-node
  kind: Precedence
  to: name-node
  query:
    - $index[Type] = '*scpb.SecondaryIndex'
    - $name[Type] = '*scpb.IndexName'
    - joinOnIndexID($index, $name, $table-id, $index-id)
    - $index-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $name-target[TargetStatus] = ABSENT
    - $name-node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($name, $name-target, $name-node)
- name: index removed before garbage collection
  from: index-node
  kind: Precedence
  to: index-data-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $index-data[Type] = '*scpb.IndexData'
    - joinOnIndexID($index, $index-data, $table-id, $index-id)
    - $index-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-data-target[TargetStatus] = ABSENT
    - $index-data-node[CurrentStatus] = DROPPED
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($index-data, $index-data-target, $index-data-node)
- name: index removed before garbage collection
  from: index-node
  kind: Precedence
  to: index-data-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $index-data[Type] = '*scpb.IndexData'
    - joinOnIndexID($index, $index-data, $table-id, $index-id)
    - transient($index-target, $index-data-target)
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-data-node[CurrentStatus] = TRANSIENT_DROPPED
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($index-data, $index-data-target, $index-data-node)
- name: index removed before garbage collection
  from: index-node
  kind: Precedence
  to: index-data-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $index-data[Type] = '*scpb.IndexData'
    - joinOnIndexID($index, $index-data, $table-id, $index-id)
    - toAbsent($index-target, $index-data-target)
    - $index-node[CurrentStatus] = ABSENT
    - $index-data-node[CurrentStatus] = DROPPED
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($index-data, $index-data-target, $index-data-node)
- name: index removed before garbage collection
  from: index-node
  kind: Precedence
  to: index-data-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $index-data[Type] = '*scpb.IndexData'
    - joinOnIndexID($index, $index-data, $table-id, $index-id)
    - $index-target[TargetStatus] = ABSENT
    - $index-node[CurrentStatus] = ABSENT
    - $index-data-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-data-node[CurrentStatus] = TRANSIENT_DROPPED
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($index-data, $index-data-target, $index-data-node)
- name: index-column added to index before index is backfilled
  from: index-column-node
  kind: Precedence
  to: index-node
  query:
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - joinOnIndexID($index-column, $index, $table-id, $index-id)
    - toPublicOrTransient($index-column-target, $index-target)
    - $index-column-node[CurrentStatus] = PUBLIC
    - $index-node[CurrentStatus] = BACKFILLED
    - joinTargetNode($index-column, $index-column-target, $index-column-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: index-column added to index before temp index receives writes
  from: index-column-node
  kind: Precedence
  to: index-node
  query:
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index[Type] = '*scpb.TemporaryIndex'
    - joinOnIndexID($index-column, $index, $table-id, $index-id)
    - transient($index-column-target, $index-target)
    - $index-column-node[CurrentStatus] = PUBLIC
    - $index-node[CurrentStatus] = WRITE_ONLY
    - joinTargetNode($index-column, $index-column-target, $index-column-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: indexes containing column reach absent before column
  from: index-node
  kind: Precedence
  to: column-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $column[Type] = '*scpb.Column'
    - columnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - descriptorIsNotBeingDropped($index-column)
    - $index-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - $column-target[TargetStatus] = ABSENT
    - $column-node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: indexes containing column reach absent before column
  from: index-node
  kind: Precedence
  to: column-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $column[Type] = '*scpb.Column'
    - columnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - descriptorIsNotBeingDropped($index-column)
    - toAbsent($index-target, $column-target)
    - $index-node[CurrentStatus] = ABSENT
    - $column-node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: indexes containing column reach absent before column
  from: index-node
  kind: Precedence
  to: column-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $column[Type] = '*scpb.Column'
    - columnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - descriptorIsNotBeingDropped($index-column)
    - transient($index-target, $column-target)
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - $column-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: indexes containing column reach absent before column
  from: index-node
  kind: Precedence
  to: column-node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $column[Type] = '*scpb.Column'
    - columnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - descriptorIsNotBeingDropped($index-column)
    - $index-target[TargetStatus] = ABSENT
    - $index-node[CurrentStatus] = ABSENT
    - $column-target[TargetStatus] = TRANSIENT_ABSENT
    - $column-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: old index absent before new index public when swapping with transient
  from: old-primary-index-node
  kind: Precedence
  to: new-primary-index-node
  query:
    - $old-primary-index[Type] = '*scpb.PrimaryIndex'
    - $transient-primary-index[Type] = '*scpb.PrimaryIndex'
    - $new-primary-index[Type] = '*scpb.PrimaryIndex'
    - joinOnDescID($old-primary-index, $transient-primary-index, $table-id)
    - $old-primary-index[IndexID] = $old-index-id
    - $transient-primary-index[SourceIndexID] = $old-index-id
    - joinOnDescID($transient-primary-index, $new-primary-index, $table-id)
    - $transient-primary-index[IndexID] = $transient-index-id
    - $new-primary-index[SourceIndexID] = $transient-index-id
    - $old-primary-index-target[TargetStatus] = ABSENT
    - $old-primary-index-node[CurrentStatus] = ABSENT
    - $new-primary-index-target[TargetStatus] = PUBLIC
    - $new-primary-index-node[CurrentStatus] = PUBLIC
    - joinTargetNode($old-primary-index, $old-primary-index-target, $old-primary-index-node)
    - joinTargetNode($new-primary-index, $new-primary-index-target, $new-primary-index-node)
- name: partial predicate removed right before secondary index when not dropping relation
  from: partial-predicate-node
  kind: SameStagePrecedence
  to: index-node
  query:
    - $partial-predicate[Type] = '*scpb.SecondaryIndexPartial'
    - descriptorIsNotBeingDropped($partial-predicate)
    - $index[Type] = '*scpb.SecondaryIndex'
    - joinOnIndexID($partial-predicate, $index, $table-id, $index-id)
    - transient($partial-predicate-target, $index-target)
    - $partial-predicate-node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($partial-predicate, $partial-predicate-target, $partial-predicate-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: partial predicate removed right before secondary index when not dropping relation
  from: partial-predicate-node
  kind: SameStagePrecedence
  to: index-node
  query:
    - $partial-predicate[Type] = '*scpb.SecondaryIndexPartial'
    - descriptorIsNotBeingDropped($partial-predicate)
    - $index[Type] = '*scpb.SecondaryIndex'
    - joinOnIndexID($partial-predicate, $index, $table-id, $index-id)
    - toAbsent($partial-predicate-target, $index-target)
    - $partial-predicate-node[CurrentStatus] = ABSENT
    - $index-node[CurrentStatus] = ABSENT
    - joinTargetNode($partial-predicate, $partial-predicate-target, $partial-predicate-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: partial predicate removed right before secondary index when not dropping relation
  from: partial-predicate-node
  kind: SameStagePrecedence
  to: index-node
  query:
    - $partial-predicate[Type] = '*scpb.SecondaryIndexPartial'
    - descriptorIsNotBeingDropped($partial-predicate)
    - $index[Type] = '*scpb.SecondaryIndex'
    - joinOnIndexID($partial-predicate, $index, $table-id, $index-id)
    - $partial-predicate-target[TargetStatus] = TRANSIENT_ABSENT
    - $partial-predicate-node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-target[TargetStatus] = ABSENT
    - $index-node[CurrentStatus] = ABSENT
    - joinTargetNode($partial-predicate, $partial-predicate-target, $partial-predicate-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: partial predicate removed right before secondary index when not dropping relation
  from: partial-predicate-node
  kind: SameStagePrecedence
  to: index-node
  query:
    - $partial-predicate[Type] = '*scpb.SecondaryIndexPartial'
    - descriptorIsNotBeingDropped($partial-predicate)
    - $index[Type] = '*scpb.SecondaryIndex'
    - joinOnIndexID($partial-predicate, $index, $table-id, $index-id)
    - $partial-predicate-target[TargetStatus] = ABSENT
    - $partial-predicate-node[CurrentStatus] = ABSENT
    - $index-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($partial-predicate, $partial-predicate-target, $partial-predicate-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: primary index named right before index becomes public
  from: index-name-node
  kind: SameStagePrecedence
  to: index-node
  query:
    - $index-name[Type] = '*scpb.IndexName'
    - $index[Type] = '*scpb.PrimaryIndex'
    - joinOnIndexID($index-name, $index, $table-id, $index-id)
    - toPublicOrTransient($index-name-target, $index-target)
    - $index-name-node[CurrentStatus] = PUBLIC
    - $index-node[CurrentStatus] = PUBLIC
    - joinTargetNode($index-name, $index-name-target, $index-name-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: primary index swap
  from: old-index-node
  kind: SameStagePrecedence
  to: new-index-node
  query:
    - $old-index[Type] = '*scpb.PrimaryIndex'
    - $new-index[Type] = '*scpb.PrimaryIndex'
    - joinOnDescID($old-index, $new-index, $table-id)
    - $old-index[IndexID] = $old-index-id
    - $new-index[SourceIndexID] = $old-index-id
    - $old-index-target[TargetStatus] = ABSENT
    - $old-index-node[CurrentStatus] = VALIDATED
    - $new-index-target[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
    - $new-index-node[CurrentStatus] = PUBLIC
    - joinTargetNode($old-index, $old-index-target, $old-index-node)
    - joinTargetNode($new-index, $new-index-target, $new-index-node)
- name: primary index swap
  from: new-index-node
  kind: SameStagePrecedence
  to: old-index-node
  query:
    - $new-index[Type] = '*scpb.PrimaryIndex'
    - $old-index[Type] = '*scpb.PrimaryIndex'
    - joinOnDescID($new-index, $old-index, $table-id)
    - $new-index[SourceIndexID] = $old-index-id
    - $old-index[IndexID] = $old-index-id
    - $new-index-target[TargetStatus] = ABSENT
    - $new-index-node[CurrentStatus] = VALIDATED
    - $old-index-target[TargetStatus] = PUBLIC
    - $old-index-node[CurrentStatus] = PUBLIC
    - joinTargetNode($new-index, $new-index-target, $new-index-node)
    - joinTargetNode($old-index, $old-index-target, $old-index-node)
- name: primary index swap
  from: old-index-node
  kind: SameStagePrecedence
  to: new-index-node
  query:
    - $old-index[Type] = '*scpb.PrimaryIndex'
    - $new-index[Type] = '*scpb.PrimaryIndex'
    - joinOnDescID($old-index, $new-index, $table-id)
    - $old-index[IndexID] = $old-index-id
    - $new-index[SourceIndexID] = $old-index-id
    - $old-index-target[TargetStatus] = TRANSIENT_ABSENT
    - $old-index-node[CurrentStatus] = TRANSIENT_VALIDATED
    - $new-index-target[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
    - $new-index-node[CurrentStatus] = PUBLIC
    - joinTargetNode($old-index, $old-index-target, $old-index-node)
    - joinTargetNode($new-index, $new-index-target, $new-index-node)
- name: primary index with new columns should exist before secondary indexes
  from: primary-index-node
  kind: Precedence
  to: secondary-index-node
  query:
    - $primary-index[Type] = '*scpb.PrimaryIndex'
    - $secondary-index[Type] = '*scpb.SecondaryIndex'
    - joinOnDescID($primary-index, $secondary-index, $table-id)
    - $primary-index[IndexID] = $primary-index-id
    - $secondary-index[SourceIndexID] = $primary-index-id
    - toPublicOrTransient($primary-index-target, $secondary-index-target)
    - $primary-index-node[CurrentStatus] = PUBLIC
    - $secondary-index-node[CurrentStatus] = BACKFILL_ONLY
    - joinTargetNode($primary-index, $primary-index-target, $primary-index-node)
    - joinTargetNode($secondary-index, $secondary-index-target, $secondary-index-node)
- name: primary index with new columns should exist before temp indexes
  from: primary-index-node
  kind: Precedence
  to: temp-index-node
  query:
    - $primary-index[Type] = '*scpb.PrimaryIndex'
    - $temp-index[Type] = '*scpb.TemporaryIndex'
    - joinOnDescID($primary-index, $temp-index, $table-id)
    - $primary-index[IndexID] = $primary-index-id
    - $temp-index[SourceIndexID] = $primary-index-id
    - toPublicOrTransient($primary-index-target, $temp-index-target)
    - $primary-index-node[CurrentStatus] = PUBLIC
    - $temp-index-node[CurrentStatus] = DELETE_ONLY
    - joinTargetNode($primary-index, $primary-index-target, $primary-index-node)
    - joinTargetNode($temp-index, $temp-index-target, $temp-index-node)
- name: remove columns from index right before removing index
  from: index-column-node
  kind: Precedence
  to: index-node
  query:
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($index-column, $index, $table-id, $index-id)
    - $index-column-target[TargetStatus] = ABSENT
    - $index-column-node[CurrentStatus] = DELETE_ONLY
    - $index-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index-column, $index-column-target, $index-column-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: remove columns from index right before removing index
  from: index-column-node
  kind: Precedence
  to: index-node
  query:
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($index-column, $index, $table-id, $index-id)
    - $index-column-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-column-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $index-target[TargetStatus] = ABSENT
    - $index-node[CurrentStatus] = ABSENT
    - joinTargetNode($index-column, $index-column-target, $index-column-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: remove columns from index right before removing index
  from: index-column-node
  kind: Precedence
  to: index-node
  query:
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($index-column, $index, $table-id, $index-id)
    - transient($index-column-target, $index-target)
    - $index-column-node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $index-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index-column, $index-column-target, $index-column-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: remove columns from index right before removing index
  from: index-column-node
  kind: Precedence
  to: index-node
  query:
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($index-column, $index, $table-id, $index-id)
    - toAbsent($index-column-target, $index-target)
    - $index-column-node[CurrentStatus] = DELETE_ONLY
    - $index-node[CurrentStatus] = ABSENT
    - joinTargetNode($index-column, $index-column-target, $index-column-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: schedule all GC jobs for a descriptor in the same stage
  from: data-a-node
  kind: SameStagePrecedence
  to: data-b-node
  query:
    - $data-a[Type] IN ['*scpb.TableData', '*scpb.IndexData', '*scpb.DatabaseData']
    - $data-b[Type] IN ['*scpb.TableData', '*scpb.IndexData', '*scpb.DatabaseData']
    - joinOnDescID($data-a, $data-b, $desc-id)
    - SmallerIDsFirst(scpb.Element, scpb.Element)($data-a, $data-b)
    - $data-a-target[TargetStatus] = ABSENT
    - $data-a-node[CurrentStatus] = DROPPED
    - $data-b-target[TargetStatus] = TRANSIENT_ABSENT
    - $data-b-node[CurrentStatus] = TRANSIENT_DROPPED
    - joinTargetNode($data-a, $data-a-target, $data-a-node)
    - joinTargetNode($data-b, $data-b-target, $data-b-node)
- name: schedule all GC jobs for a descriptor in the same stage
  from: data-a-node
  kind: SameStagePrecedence
  to: data-b-node
  query:
    - $data-a[Type] IN ['*scpb.TableData', '*scpb.IndexData', '*scpb.DatabaseData']
    - $data-b[Type] IN ['*scpb.TableData', '*scpb.IndexData', '*scpb.DatabaseData']
    - joinOnDescID($data-a, $data-b, $desc-id)
    - SmallerIDsFirst(scpb.Element, scpb.Element)($data-a, $data-b)
    - toAbsent($data-a-target, $data-b-target)
    - $data-a-node[CurrentStatus] = DROPPED
    - $data-b-node[CurrentStatus] = DROPPED
    - joinTargetNode($data-a, $data-a-target, $data-a-node)
    - joinTargetNode($data-b, $data-b-target, $data-b-node)
- name: schedule all GC jobs for a descriptor in the same stage
  from: data-a-node
  kind: SameStagePrecedence
  to: data-b-node
  query:
    - $data-a[Type] IN ['*scpb.TableData', '*scpb.IndexData', '*scpb.DatabaseData']
    - $data-b[Type] IN ['*scpb.TableData', '*scpb.IndexData', '*scpb.DatabaseData']
    - joinOnDescID($data-a, $data-b, $desc-id)
    - SmallerIDsFirst(scpb.Element, scpb.Element)($data-a, $data-b)
    - $data-a-target[TargetStatus] = TRANSIENT_ABSENT
    - $data-a-node[CurrentStatus] = TRANSIENT_DROPPED
    - $data-b-target[TargetStatus] = ABSENT
    - $data-b-node[CurrentStatus] = DROPPED
    - joinTargetNode($data-a, $data-a-target, $data-a-node)
    - joinTargetNode($data-b, $data-b-target, $data-b-node)
- name: schedule all GC jobs for a descriptor in the same stage
  from: data-a-node
  kind: SameStagePrecedence
  to: data-b-node
  query:
    - $data-a[Type] IN ['*scpb.TableData', '*scpb.IndexData', '*scpb.DatabaseData']
    - $data-b[Type] IN ['*scpb.TableData', '*scpb.IndexData', '*scpb.DatabaseData']
    - joinOnDescID($data-a, $data-b, $desc-id)
    - SmallerIDsFirst(scpb.Element, scpb.Element)($data-a, $data-b)
    - transient($data-a-target, $data-b-target)
    - $data-a-node[CurrentStatus] = TRANSIENT_DROPPED
    - $data-b-node[CurrentStatus] = TRANSIENT_DROPPED
    - joinTargetNode($data-a, $data-a-target, $data-a-node)
    - joinTargetNode($data-b, $data-b-target, $data-b-node)
- name: secondary index named before validation
  from: index-name-node
  kind: Precedence
  to: index-node
  query:
    - $index-name[Type] = '*scpb.IndexName'
    - $index[Type] = '*scpb.SecondaryIndex'
    - joinOnIndexID($index-name, $index, $table-id, $index-id)
    - toPublicOrTransient($index-name-target, $index-target)
    - $index-name-node[CurrentStatus] = PUBLIC
    - $index-node[CurrentStatus] = VALIDATED
    - joinTargetNode($index-name, $index-name-target, $index-name-node)
    - joinTargetNode($index, $index-target, $index-node)
- name: secondary index should be validated before dependent view can be absent
  from: index-node
  kind: Precedence
  to: view-node
  query:
    - $index[Type] = '*scpb.SecondaryIndex'
    - $view[Type] = '*scpb.View'
    - viewReferencesIndex(*scpb.SecondaryIndex, *scpb.View)($index, $view)
    - $index-target[TargetStatus] = ABSENT
    - $index-node[CurrentStatus] = VALIDATED
    - $view-target[TargetStatus] = TRANSIENT_ABSENT
    - $view-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($view, $view-target, $view-node)
- name: secondary index should be validated before dependent view can be absent
  from: index-node
  kind: Precedence
  to: view-node
  query:
    - $index[Type] = '*scpb.SecondaryIndex'
    - $view[Type] = '*scpb.View'
    - viewReferencesIndex(*scpb.SecondaryIndex, *scpb.View)($index, $view)
    - toAbsent($index-target, $view-target)
    - $index-node[CurrentStatus] = VALIDATED
    - $view-node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($view, $view-target, $view-node)
- name: secondary index should be validated before dependent view can be absent
  from: index-node
  kind: Precedence
  to: view-node
  query:
    - $index[Type] = '*scpb.SecondaryIndex'
    - $view[Type] = '*scpb.View'
    - viewReferencesIndex(*scpb.SecondaryIndex, *scpb.View)($index, $view)
    - transient($index-target, $view-target)
    - $index-node[CurrentStatus] = TRANSIENT_VALIDATED
    - $view-node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($view, $view-target, $view-node)
- name: secondary index should be validated before dependent view can be absent
  from: index-node
  kind: Precedence
  to: view-node
  query:
    - $index[Type] = '*scpb.SecondaryIndex'
    - $view[Type] = '*scpb.View'
    - viewReferencesIndex(*scpb.SecondaryIndex, *scpb.View)($index, $view)
    - $index-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-node[CurrentStatus] = TRANSIENT_VALIDATED
    - $view-target[TargetStatus] = ABSENT
    - $view-node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($view, $view-target, $view-node)
- name: secondary indexes containing column as key reach write-only before column
  from: index-node
  kind: Precedence
  to: column-node
  query:
    - $index[Type] = '*scpb.SecondaryIndex'
    - $column[Type] = '*scpb.Column'
    - columnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - toAbsent($index-target, $column-target)
    - $index-node[CurrentStatus] = VALIDATED
    - $column-node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped($index-column)
    - isIndexKeyColumnKey(*scpb.IndexColumn)($index-column)
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: swapped primary index public before column
  from: index-node
  kind: Precedence
  to: column-node
  query:
    - $index[Type] = '*scpb.PrimaryIndex'
    - $column[Type] = '*scpb.Column'
    - columnInSwappedInPrimaryIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - toPublicOrTransient($index-target, $column-target)
    - $index-node[CurrentStatus] = PUBLIC
    - $column-node[CurrentStatus] = PUBLIC
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($column, $column-target, $column-node)
- name: table removed right before garbage collection
  from: table-node
  kind: SameStagePrecedence
  to: data-node
  query:
    - $table[Type] IN ['*scpb.Database', '*scpb.Schema', '*scpb.View', '*scpb.Sequence', '*scpb.Table', '*scpb.EnumType', '*scpb.AliasType']
    - $data[Type] = '*scpb.TableData'
    - joinOnDescID($table, $data, $table-id)
    - toAbsent($table-target, $data-target)
    - $table-node[CurrentStatus] = ABSENT
    - $data-node[CurrentStatus] = DROPPED
    - joinTargetNode($table, $table-target, $table-node)
    - joinTargetNode($data, $data-target, $data-node)
- name: temp index data exists as soon as temp index accepts writes
  from: temp-index-node
  kind: SameStagePrecedence
  to: temp-index-data-node
  query:
    - $temp-index[Type] = '*scpb.TemporaryIndex'
    - $temp-index-data[Type] = '*scpb.IndexData'
    - joinOnIndexID($temp-index, $temp-index-data, $table-id, $index-id)
    - toPublicOrTransient($temp-index-target, $temp-index-data-target)
    - $temp-index-node[CurrentStatus] = WRITE_ONLY
    - $temp-index-data-node[CurrentStatus] = PUBLIC
    - joinTargetNode($temp-index, $temp-index-target, $temp-index-node)
    - joinTargetNode($temp-index-data, $temp-index-data-target, $temp-index-data-node)
- name: temp index existence precedes index dependents
  from: index-node
  kind: Precedence
  to: dependent-node
  query:
    - $index[Type] = '*scpb.TemporaryIndex'
    - $dependent[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial', '*scpb.IndexComment', '*scpb.IndexColumn']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - toPublicOrTransient($index-target, $dependent-target)
    - $index-node[CurrentStatus] = DELETE_ONLY
    - $dependent-node[CurrentStatus] = PUBLIC
    - joinTargetNode($index, $index-target, $index-node)
    - joinTargetNode($dependent, $dependent-target, $dependent-node)
- name: temp index is WRITE_ONLY before backfill
  from: temp-node
  kind: Precedence
  to: index-node
  query:
    - $temp[Type] = '*scpb.TemporaryIndex'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - joinOnDescID($temp, $index, $table-id)
    - $temp[IndexID] = $temp-index-id
    - $index[TemporaryIndexID] = $temp-index-id
    - $temp-target[TargetStatus] = TRANSIENT_ABSENT
    - $index-target[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
    - $temp-node[CurrentStatus] = WRITE_ONLY
    - $index-node[CurrentStatus] = BACKFILLED
    - joinTargetNode($temp, $temp-target, $temp-node)
    - joinTargetNode($index, $index-target, $index-node)
