rules
----
ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id):
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index-column[DescID] = $_
    - $index-column[ColumnID] = $column-id
    - $index[IndexID] = $index-id
    - joinOnIndexID($index, $index-column, $table-id, $index-id)
ColumnInSwappedInPrimaryIndex($index-column, $index, $table-id, $column-id, $index-id):
    - ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - sourceIndexIsSet($index)
ToPublicOrTransient($target1, $target2):
    - $target1[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
    - $target2[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
descriptorIsNotBeingDropped-22.2($element):
    not-join:
        - $descriptor[Type] IN ['*scpb.AliasType', '*scpb.Database', '*scpb.EnumType', '*scpb.Schema', '*scpb.Sequence', '*scpb.Table', '*scpb.View']
        - joinTarget($descriptor, $descriptor-Target)
        - joinOnDescID($descriptor, $element, $id)
        - $descriptor-Target[TargetStatus] = ABSENT
fromHasPublicStatusIfFromIsTableAndToIsRowLevelTTL($fromTarget, $fromEl, $toEl):
    not-join:
        - $fromEl[Type] = '*scpb.Table'
        - $toEl[Type] = '*scpb.RowLevelTTL'
        - $n[Type] = '*screl.Node'
        - $n[Target] = $fromTarget
        - nodeHasNoPublicStatus($n)
joinOnColumnFamilyID($a, $b, $desc-id, $family-id):
    - joinOnDescID($a, $b, $desc-id)
    - $a[ColumnFamilyID] = $family-id
    - $b[ColumnFamilyID] = $family-id
joinOnColumnID($a, $b, $desc-id, $col-id):
    - joinOnDescID($a, $b, $desc-id)
    - $a[ColumnID] = $col-id
    - $b[ColumnID] = $col-id
joinOnConstraintID($a, $b, $desc-id, $constraint-id):
    - joinOnDescID($a, $b, $desc-id)
    - $a[ConstraintID] = $constraint-id
    - $b[ConstraintID] = $constraint-id
joinOnDescID($a, $b, $id):
    - $a[DescID] = $id
    - $b[DescID] = $id
joinOnIndexID($a, $b, $desc-id, $index-id):
    - joinOnDescID($a, $b, $desc-id)
    - $a[IndexID] = $index-id
    - $b[IndexID] = $index-id
joinReferencedDescID($referrer, $referenced, $id):
    - $referrer[ReferencedDescID] = $id
    - $referenced[DescID] = $id
joinTarget($element, $target):
    - $target[Type] = '*scpb.Target'
    - $target[Element] = $element
    - $element[DescID] = $_
joinTargetNode($element, $target, $node):
    - joinTarget($element, $target)
    - $node[Type] = '*screl.Node'
    - $node[Target] = $target
nodeHasNoPublicStatus($n):
    not-join:
        - $public = PUBLIC
        - $n[CurrentStatus] = $public
nodeNotExistsWithStatusIn_BACKFILLED_BACKFILL_ONLY($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [BACKFILLED, BACKFILL_ONLY]
nodeNotExistsWithStatusIn_TRANSIENT_BACKFILLED_TRANSIENT_BACKFILL_ONLY($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_BACKFILLED, TRANSIENT_BACKFILL_ONLY]
nodeNotExistsWithStatusIn_TRANSIENT_DELETE_ONLY($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_DELETE_ONLY]
? nodeNotExistsWithStatusIn_TRANSIENT_DELETE_ONLY_BACKFILLED_TRANSIENT_BACKFILLED_BACKFILL_ONLY_TRANSIENT_BACKFILL_ONLY($sharedTarget)
:   not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_DELETE_ONLY, BACKFILLED, TRANSIENT_BACKFILLED, BACKFILL_ONLY, TRANSIENT_BACKFILL_ONLY]
nodeNotExistsWithStatusIn_TRANSIENT_VALIDATED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_VALIDATED]
nodeNotExistsWithStatusIn_TRANSIENT_VALIDATED_TRANSIENT_MERGE_ONLY_TRANSIENT_MERGED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_VALIDATED, TRANSIENT_MERGE_ONLY, TRANSIENT_MERGED]
nodeNotExistsWithStatusIn_VALIDATED_MERGE_ONLY_MERGED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [VALIDATED, MERGE_ONLY, MERGED]
nodeNotExistsWithStatusIn_VALIDATED_TRANSIENT_WRITE_ONLY_MERGE_ONLY_TRANSIENT_MERGE_ONLY_MERGED_TRANSIENT_MERGED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [VALIDATED, TRANSIENT_WRITE_ONLY, MERGE_ONLY, TRANSIENT_MERGE_ONLY, MERGED, TRANSIENT_MERGED]
sourceIndexIsSet($index):
    - $index[SourceIndexID] != 0
toAbsent($target1, $target2):
    - $target1[TargetStatus] = ABSENT
    - $target2[TargetStatus] = ABSENT
transient($target1, $target2):
    - $target1[TargetStatus] = TRANSIENT_ABSENT
    - $target2[TargetStatus] = TRANSIENT_ABSENT

oprules
----
- name: skip column dependents removal ops on relation drop
  from: column-dep-Node
  query:
    - $relation[Type] IN ['*scpb.Table', '*scpb.View']
    - $column[Type] = '*scpb.Column'
    - $column-dep[Type] = '*scpb.ColumnName'
    - joinOnDescID($relation, $column, $relation-id)
    - joinOnColumnID($column, $column-dep, $relation-id, $column-id)
    - joinTarget($relation, $relation-Target)
    - $relation-Target[TargetStatus] = ABSENT
    - joinTarget($column, $column-Target)
    - $column-Target[TargetStatus] = ABSENT
    - joinTargetNode($column-dep, $column-dep-Target, $column-dep-Node)
    - $column-dep-Target[TargetStatus] = ABSENT
- name: skip column removal ops on relation drop
  from: column-Node
  query:
    - $relation[Type] IN ['*scpb.Table', '*scpb.View']
    - $column[Type] = '*scpb.Column'
    - joinOnDescID($relation, $column, $relation-id)
    - joinTarget($relation, $relation-Target)
    - $relation-Target[TargetStatus] = ABSENT
    - joinTargetNode($column, $column-Target, $column-Node)
    - $column-Target[TargetStatus] = ABSENT
    - $column-Node[CurrentStatus] IN [PUBLIC, WRITE_ONLY]
- name: skip constraint dependents removal ops on relation drop
  from: constraint-dep-Node
  query:
    - $relation[Type] IN ['*scpb.Table', '*scpb.View']
    - $constraint[Type] IN ['*scpb.UniqueWithoutIndexConstraint', '*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint']
    - $constraint-dep[Type] = '*scpb.ConstraintWithoutIndexName'
    - joinOnDescID($relation, $constraint, $relation-id)
    - joinOnConstraintID($constraint, $constraint-dep, $relation-id, $constraint-id)
    - joinTarget($relation, $relation-Target)
    - $relation-Target[TargetStatus] = ABSENT
    - joinTarget($constraint, $constraint-Target)
    - $constraint-Target[TargetStatus] = ABSENT
    - joinTargetNode($constraint-dep, $constraint-dep-Target, $constraint-dep-Node)
    - $constraint-dep-Target[TargetStatus] = ABSENT
- name: skip constraint removal ops on relation drop
  from: constraint-Node
  query:
    - $relation[Type] IN ['*scpb.Table', '*scpb.View']
    - $constraint[Type] = '*scpb.UniqueWithoutIndexConstraint'
    - joinOnDescID($relation, $constraint, $relation-id)
    - joinTarget($relation, $relation-Target)
    - $relation-Target[TargetStatus] = ABSENT
    - joinTargetNode($constraint, $constraint-Target, $constraint-Node)
    - $constraint-Target[TargetStatus] = ABSENT
- name: skip element removal ops on descriptor drop
  from: dep-Node
  query:
    - $desc[Type] IN ['*scpb.AliasType', '*scpb.Database', '*scpb.EnumType', '*scpb.Schema', '*scpb.Sequence', '*scpb.Table', '*scpb.View']
    - $dep[Type] IN ['*scpb.ColumnFamily', '*scpb.Owner', '*scpb.UserPrivileges', '*scpb.EnumTypeValue']
    - joinOnDescID($desc, $dep, $desc-id)
    - joinTarget($desc, $desc-Target)
    - $desc-Target[TargetStatus] = ABSENT
    - joinTargetNode($dep, $dep-Target, $dep-Node)
    - $dep-Target[TargetStatus] = ABSENT
- name: skip index dependents removal ops on relation drop
  from: index-dep-Node
  query:
    - $relation[Type] IN ['*scpb.Table', '*scpb.View']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $index-dep[Type] IN ['*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.IndexColumn']
    - joinOnDescID($relation, $index, $relation-id)
    - joinOnIndexID($index, $index-dep, $relation-id, $index-id)
    - joinTarget($relation, $relation-Target)
    - $relation-Target[TargetStatus] = ABSENT
    - joinTarget($index, $index-Target)
    - $index-Target[TargetStatus] = ABSENT
    - joinTargetNode($index-dep, $index-dep-Target, $index-dep-Node)
    - $index-dep-Target[TargetStatus] = ABSENT
- name: skip index removal ops on relation drop
  from: index-Node
  query:
    - $relation[Type] IN ['*scpb.Table', '*scpb.View']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnDescID($relation, $index, $relation-id)
    - joinTarget($relation, $relation-Target)
    - $relation-Target[TargetStatus] = ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - $index-Target[TargetStatus] = ABSENT
- name: skip index-column removal ops on index removal
  from: index-column-Node
  query:
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($index-column, $index, $relation-id, $index-id)
    - joinTargetNode($index-column, $index-column-Target, $index-column-Node)
    - $index-column-Target[TargetStatus] IN [ABSENT, TRANSIENT_ABSENT]
    - $index-column-Node[CurrentStatus] IN [PUBLIC, TRANSIENT_PUBLIC]
    - joinTarget($index, $index-Target)
    - $index-Target[TargetStatus] IN [ABSENT, TRANSIENT_ABSENT]
- name: skip table comment removal ops on descriptor drop
  from: dep-Node
  query:
    - $desc[Type] IN ['*scpb.Table', '*scpb.View', '*scpb.Sequence']
    - $dep[Type] IN ['*scpb.ColumnComment', '*scpb.IndexComment', '*scpb.ConstraintComment', '*scpb.TableComment']
    - joinOnDescID($desc, $dep, $desc-id)
    - joinTarget($desc, $desc-Target)
    - $desc-Target[TargetStatus] = ABSENT
    - joinTargetNode($dep, $dep-Target, $dep-Node)
    - $dep-Target[TargetStatus] = ABSENT
- name: skip table zone config removal ops on descriptor drop
  from: dep-Node
  query:
    - $desc[Type] IN ['*scpb.Table', '*scpb.View', '*scpb.Sequence']
    - $dep[Type] = '*scpb.TableZoneConfig'
    - joinOnDescID($desc, $dep, $desc-id)
    - joinTarget($desc, $desc-Target)
    - $desc-Target[TargetStatus] = ABSENT
    - joinTargetNode($dep, $dep-Target, $dep-Node)
    - $dep-Target[TargetStatus] = ABSENT
