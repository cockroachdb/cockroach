rules
----
ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id):
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index-column[DescID] = $_
    - $index-column[ColumnID] = $column-id
    - $index[IndexID] = $index-id
    - joinOnIndexID($index, $index-column, $table-id, $index-id)
ColumnInSwappedInPrimaryIndex($index-column, $index, $table-id, $column-id, $index-id):
    - ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - sourceIndexIsSet($index)
ToPublicOrTransient($target1, $target2):
    - $target1[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
    - $target2[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
descriptorIsNotBeingDropped-22.2($element):
    not-join:
        - $descriptor[Type] IN ['*scpb.AliasType', '*scpb.Database', '*scpb.EnumType', '*scpb.Schema', '*scpb.Sequence', '*scpb.Table', '*scpb.View']
        - joinTarget($descriptor, $descriptor-Target)
        - joinOnDescID($descriptor, $element, $id)
        - $descriptor-Target[TargetStatus] = ABSENT
fromHasPublicStatusIfFromIsTableAndToIsRowLevelTTL($fromTarget, $fromEl, $toEl):
    not-join:
        - $fromEl[Type] = '*scpb.Table'
        - $toEl[Type] = '*scpb.RowLevelTTL'
        - $n[Type] = '*screl.Node'
        - $n[Target] = $fromTarget
        - nodeHasNoPublicStatus($n)
joinOnColumnFamilyID($a, $b, $desc-id, $family-id):
    - joinOnDescID($a, $b, $desc-id)
    - $a[ColumnFamilyID] = $family-id
    - $b[ColumnFamilyID] = $family-id
joinOnColumnID($a, $b, $desc-id, $col-id):
    - joinOnDescID($a, $b, $desc-id)
    - $a[ColumnID] = $col-id
    - $b[ColumnID] = $col-id
joinOnConstraintID($a, $b, $desc-id, $constraint-id):
    - joinOnDescID($a, $b, $desc-id)
    - $a[ConstraintID] = $constraint-id
    - $b[ConstraintID] = $constraint-id
joinOnDescID($a, $b, $id):
    - $a[DescID] = $id
    - $b[DescID] = $id
joinOnIndexID($a, $b, $desc-id, $index-id):
    - joinOnDescID($a, $b, $desc-id)
    - $a[IndexID] = $index-id
    - $b[IndexID] = $index-id
joinReferencedDescID($referrer, $referenced, $id):
    - $referrer[ReferencedDescID] = $id
    - $referenced[DescID] = $id
joinTarget($element, $target):
    - $target[Type] = '*scpb.Target'
    - $target[Element] = $element
    - $element[DescID] = $_
joinTargetNode($element, $target, $node):
    - joinTarget($element, $target)
    - $node[Type] = '*screl.Node'
    - $node[Target] = $target
nodeHasNoPublicStatus($n):
    not-join:
        - $public = PUBLIC
        - $n[CurrentStatus] = $public
nodeNotExistsWithStatusIn_BACKFILLED_BACKFILL_ONLY($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [BACKFILLED, BACKFILL_ONLY]
nodeNotExistsWithStatusIn_TRANSIENT_BACKFILLED_TRANSIENT_BACKFILL_ONLY($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_BACKFILLED, TRANSIENT_BACKFILL_ONLY]
nodeNotExistsWithStatusIn_TRANSIENT_DELETE_ONLY($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_DELETE_ONLY]
? nodeNotExistsWithStatusIn_TRANSIENT_DELETE_ONLY_BACKFILLED_TRANSIENT_BACKFILLED_BACKFILL_ONLY_TRANSIENT_BACKFILL_ONLY($sharedTarget)
:   not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_DELETE_ONLY, BACKFILLED, TRANSIENT_BACKFILLED, BACKFILL_ONLY, TRANSIENT_BACKFILL_ONLY]
nodeNotExistsWithStatusIn_TRANSIENT_VALIDATED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_VALIDATED]
nodeNotExistsWithStatusIn_TRANSIENT_VALIDATED_TRANSIENT_MERGE_ONLY_TRANSIENT_MERGED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [TRANSIENT_VALIDATED, TRANSIENT_MERGE_ONLY, TRANSIENT_MERGED]
nodeNotExistsWithStatusIn_VALIDATED_MERGE_ONLY_MERGED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [VALIDATED, MERGE_ONLY, MERGED]
nodeNotExistsWithStatusIn_VALIDATED_TRANSIENT_WRITE_ONLY_MERGE_ONLY_TRANSIENT_MERGE_ONLY_MERGED_TRANSIENT_MERGED($sharedTarget):
    not-join:
        - $n[Type] = '*screl.Node'
        - $n[Target] = $sharedTarget
        - $n[CurrentStatus] IN [VALIDATED, TRANSIENT_WRITE_ONLY, MERGE_ONLY, TRANSIENT_MERGE_ONLY, MERGED, TRANSIENT_MERGED]
sourceIndexIsSet($index):
    - $index[SourceIndexID] != 0
toAbsent($target1, $target2):
    - $target1[TargetStatus] = ABSENT
    - $target2[TargetStatus] = ABSENT
transient($target1, $target2):
    - $target1[TargetStatus] = TRANSIENT_ABSENT
    - $target2[TargetStatus] = TRANSIENT_ABSENT

deprules
----
- name: 'Column transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = DELETE_ONLY
    - $next-Node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'Column transitions to ABSENT uphold 2-version invariant: PUBLIC->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = PUBLIC
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'Column transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = WRITE_ONLY
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'Column transitions to PUBLIC uphold 2-version invariant: ABSENT->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = ABSENT
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'Column transitions to PUBLIC uphold 2-version invariant: DELETE_ONLY->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = DELETE_ONLY
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'Column transitions to PUBLIC uphold 2-version invariant: WRITE_ONLY->PUBLIC'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.Column'
    - $next[Type] = '*scpb.Column'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = WRITE_ONLY
    - $next-Node[CurrentStatus] = PUBLIC
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: DEFAULT or ON UPDATE existence precedes writes to column
  from: expr-Node
  kind: Precedence
  to: column-Node
  query:
    - $expr[Type] IN ['*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($expr, $column, $table-id, $col-id)
    - ToPublicOrTransient($expr-Target, $column-Target)
    - $expr-Node[CurrentStatus] = PUBLIC
    - $column-Node[CurrentStatus] = WRITE_ONLY
    - joinTargetNode($expr, $expr-Target, $expr-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: BACKFILLED->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = BACKFILLED
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: BACKFILL_ONLY->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = BACKFILL_ONLY
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = DELETE_ONLY
    - $next-Node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped-22.2($prev)
    - nodeNotExistsWithStatusIn_TRANSIENT_DELETE_ONLY_BACKFILLED_TRANSIENT_BACKFILLED_BACKFILL_ONLY_TRANSIENT_BACKFILL_ONLY($prev-Target)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: MERGED->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = MERGED
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: MERGE_ONLY->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = MERGE_ONLY
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: PUBLIC->VALIDATED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = PUBLIC
    - $next-Node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_ABSENT->ABSENT'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $next-Node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_BACKFILLED->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_BACKFILLED
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_BACKFILL_ONLY->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_BACKFILL_ONLY
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_DELETE_ONLY->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_MERGED->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_MERGED
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_MERGE_ONLY->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_MERGE_ONLY
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_VALIDATED->VALIDATED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_VALIDATED
    - $next-Node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_WRITE_ONLY->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: VALIDATED->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = VALIDATED
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - nodeNotExistsWithStatusIn_TRANSIENT_VALIDATED($prev-Target)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = WRITE_ONLY
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - nodeNotExistsWithStatusIn_VALIDATED_TRANSIENT_WRITE_ONLY_MERGE_ONLY_TRANSIENT_MERGE_ONLY_MERGED_TRANSIENT_MERGED($prev-Target)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: ABSENT->BACKFILL_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = ABSENT
    - $next-Node[CurrentStatus] = BACKFILL_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: BACKFILLED->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = BACKFILLED
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: BACKFILL_ONLY->BACKFILLED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = BACKFILL_ONLY
    - $next-Node[CurrentStatus] = BACKFILLED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: DELETE_ONLY->MERGE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = DELETE_ONLY
    - $next-Node[CurrentStatus] = MERGE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: MERGED->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = MERGED
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: MERGE_ONLY->MERGED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = MERGE_ONLY
    - $next-Node[CurrentStatus] = MERGED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: VALIDATED->PUBLIC'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = VALIDATED
    - $next-Node[CurrentStatus] = PUBLIC
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to PUBLIC uphold 2-version invariant: WRITE_ONLY->VALIDATED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = WRITE_ONLY
    - $next-Node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: ABSENT->BACKFILL_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = ABSENT
    - $next-Node[CurrentStatus] = BACKFILL_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: BACKFILLED->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = BACKFILLED
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: BACKFILL_ONLY->BACKFILLED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = BACKFILL_ONLY
    - $next-Node[CurrentStatus] = BACKFILLED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: DELETE_ONLY->MERGE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = DELETE_ONLY
    - $next-Node[CurrentStatus] = MERGE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: MERGED->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = MERGED
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: MERGE_ONLY->MERGED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = MERGE_ONLY
    - $next-Node[CurrentStatus] = MERGED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: PUBLIC->TRANSIENT_VALIDATED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = PUBLIC
    - $next-Node[CurrentStatus] = TRANSIENT_VALIDATED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_BACKFILLED->TRANSIENT_DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_BACKFILLED
    - $next-Node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_BACKFILL_ONLY->TRANSIENT_DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_BACKFILL_ONLY
    - $next-Node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_DELETE_ONLY->TRANSIENT_ABSENT'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $next-Node[CurrentStatus] = TRANSIENT_ABSENT
    - descriptorIsNotBeingDropped-22.2($prev)
    - nodeNotExistsWithStatusIn_TRANSIENT_BACKFILLED_TRANSIENT_BACKFILL_ONLY($prev-Target)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_MERGED->TRANSIENT_WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_MERGED
    - $next-Node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_MERGE_ONLY->TRANSIENT_WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_MERGE_ONLY
    - $next-Node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_VALIDATED->TRANSIENT_WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_VALIDATED
    - $next-Node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_WRITE_ONLY->TRANSIENT_DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - $next-Node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - nodeNotExistsWithStatusIn_TRANSIENT_VALIDATED_TRANSIENT_MERGE_ONLY_TRANSIENT_MERGED($prev-Target)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: VALIDATED->PUBLIC'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = VALIDATED
    - $next-Node[CurrentStatus] = PUBLIC
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'PrimaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: WRITE_ONLY->VALIDATED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.PrimaryIndex'
    - $next[Type] = '*scpb.PrimaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = WRITE_ONLY
    - $next-Node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: BACKFILLED->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = BACKFILLED
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: BACKFILL_ONLY->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = BACKFILL_ONLY
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = DELETE_ONLY
    - $next-Node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped-22.2($prev)
    - nodeNotExistsWithStatusIn_BACKFILLED_BACKFILL_ONLY($prev-Target)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: MERGED->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = MERGED
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: MERGE_ONLY->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = MERGE_ONLY
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: PUBLIC->VALIDATED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = PUBLIC
    - $next-Node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: VALIDATED->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = VALIDATED
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = WRITE_ONLY
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - nodeNotExistsWithStatusIn_VALIDATED_MERGE_ONLY_MERGED($prev-Target)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: ABSENT->BACKFILL_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = ABSENT
    - $next-Node[CurrentStatus] = BACKFILL_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: BACKFILLED->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = BACKFILLED
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: BACKFILL_ONLY->BACKFILLED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = BACKFILL_ONLY
    - $next-Node[CurrentStatus] = BACKFILLED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: DELETE_ONLY->MERGE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = DELETE_ONLY
    - $next-Node[CurrentStatus] = MERGE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: MERGED->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = MERGED
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: MERGE_ONLY->MERGED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = MERGE_ONLY
    - $next-Node[CurrentStatus] = MERGED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: VALIDATED->PUBLIC'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = VALIDATED
    - $next-Node[CurrentStatus] = PUBLIC
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'SecondaryIndex transitions to PUBLIC uphold 2-version invariant: WRITE_ONLY->VALIDATED'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.SecondaryIndex'
    - $next[Type] = '*scpb.SecondaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = PUBLIC
    - $prev-Node[CurrentStatus] = WRITE_ONLY
    - $next-Node[CurrentStatus] = VALIDATED
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'TemporaryIndex transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = DELETE_ONLY
    - $next-Node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped-22.2($prev)
    - nodeNotExistsWithStatusIn_TRANSIENT_DELETE_ONLY($prev-Target)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'TemporaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_ABSENT->ABSENT'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $next-Node[CurrentStatus] = ABSENT
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'TemporaryIndex transitions to ABSENT uphold 2-version invariant: TRANSIENT_DELETE_ONLY->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'TemporaryIndex transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = ABSENT
    - $prev-Node[CurrentStatus] = WRITE_ONLY
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: ABSENT->DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = ABSENT
    - $next-Node[CurrentStatus] = DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: DELETE_ONLY->WRITE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = DELETE_ONLY
    - $next-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_DELETE_ONLY->TRANSIENT_ABSENT'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $next-Node[CurrentStatus] = TRANSIENT_ABSENT
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: 'TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: WRITE_ONLY->TRANSIENT_DELETE_ONLY'
  from: prev-Node
  kind: PreviousTransactionPrecedence
  to: next-Node
  query:
    - $prev[Type] = '*scpb.TemporaryIndex'
    - $next[Type] = '*scpb.TemporaryIndex'
    - $prev[DescID] = $_
    - $prev[Self] = $next
    - $prev-Target[Self] = $next-Target
    - $prev-Target[TargetStatus] = TRANSIENT_ABSENT
    - $prev-Node[CurrentStatus] = WRITE_ONLY
    - $next-Node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - descriptorIsNotBeingDropped-22.2($prev)
    - joinTargetNode($prev, $prev-Target, $prev-Node)
    - joinTargetNode($next, $next-Target, $next-Node)
- name: column dependents exist before column becomes public
  from: dependent-Node
  kind: Precedence
  to: column-Node
  query:
    - $dependent[Type] IN ['*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.IndexColumn', '*scpb.SequenceOwner']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($dependent, $column, $table-id, $col-id)
    - ToPublicOrTransient($dependent-Target, $column-Target)
    - $dependent-Node[CurrentStatus] = PUBLIC
    - $column-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: column existence precedes column dependents
  from: column-Node
  kind: Precedence
  to: dependent-Node
  query:
    - $column[Type] = '*scpb.Column'
    - $dependent[Type] IN ['*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.IndexColumn', '*scpb.SequenceOwner']
    - joinOnColumnID($column, $dependent, $table-id, $col-id)
    - ToPublicOrTransient($column-Target, $dependent-Target)
    - $column-Node[CurrentStatus] = DELETE_ONLY
    - $dependent-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($column, $column-Target, $column-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: column existence precedes index existence
  from: column-Node
  kind: Precedence
  to: index-Node
  query:
    - $column[Type] = '*scpb.Column'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - joinOnColumnID($column, $index-column, $table-id, $column-id)
    - ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - ToPublicOrTransient($column-Target, $index-Target)
    - $column-Node[CurrentStatus] = DELETE_ONLY
    - $index-Node[CurrentStatus] = BACKFILL_ONLY
    - joinTargetNode($column, $column-Target, $column-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: column existence precedes temp index existence
  from: column-Node
  kind: Precedence
  to: index-Node
  query:
    - $column[Type] = '*scpb.Column'
    - $index[Type] = '*scpb.TemporaryIndex'
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - ToPublicOrTransient($column-Target, $index-Target)
    - $column-Node[CurrentStatus] = DELETE_ONLY
    - $index-Node[CurrentStatus] = DELETE_ONLY
    - joinTargetNode($column, $column-Target, $column-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: column is WRITE_ONLY before temporary index is WRITE_ONLY
  from: column-Node
  kind: Precedence
  to: index-Node
  query:
    - $column[Type] = '*scpb.Column'
    - $index[Type] = '*scpb.TemporaryIndex'
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - ToPublicOrTransient($column-Target, $index-Target)
    - $column-Node[CurrentStatus] = WRITE_ONLY
    - $index-Node[CurrentStatus] = WRITE_ONLY
    - joinTargetNode($column, $column-Target, $column-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: column name and type set right after column existence
  from: column-Node
  kind: SameStagePrecedence
  to: column-name-or-type-Node
  query:
    - $column[Type] = '*scpb.Column'
    - $column-name-or-type[Type] IN ['*scpb.ColumnName', '*scpb.ColumnType']
    - ToPublicOrTransient($column-Target, $column-name-or-type-Target)
    - $column-Node[CurrentStatus] = DELETE_ONLY
    - $column-name-or-type-Node[CurrentStatus] = PUBLIC
    - joinOnColumnID($column, $column-name-or-type, $table-id, $col-id)
    - joinTargetNode($column, $column-Target, $column-Node)
    - joinTargetNode($column-name-or-type, $column-name-or-type-Target, $column-name-or-type-Node)
- name: column no longer public before dependents
  from: column-Node
  kind: Precedence
  to: dependent-Node
  query:
    - $column[Type] = '*scpb.Column'
    - $dependent[Type] IN ['*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.IndexColumn', '*scpb.SequenceOwner']
    - joinOnColumnID($column, $dependent, $table-id, $col-id)
    - toAbsent($column-Target, $dependent-Target)
    - $column-Node[CurrentStatus] = WRITE_ONLY
    - $dependent-Node[CurrentStatus] = ABSENT
    - joinTargetNode($column, $column-Target, $column-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: column no longer public before dependents
  from: column-Node
  kind: Precedence
  to: dependent-Node
  query:
    - $column[Type] = '*scpb.Column'
    - $dependent[Type] IN ['*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.IndexColumn', '*scpb.SequenceOwner']
    - joinOnColumnID($column, $dependent, $table-id, $col-id)
    - transient($column-Target, $dependent-Target)
    - $column-Node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - $dependent-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($column, $column-Target, $column-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: column no longer public before dependents
  from: column-Node
  kind: Precedence
  to: dependent-Node
  query:
    - $column[Type] = '*scpb.Column'
    - $dependent[Type] IN ['*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.IndexColumn', '*scpb.SequenceOwner']
    - joinOnColumnID($column, $dependent, $table-id, $col-id)
    - $column-Target[TargetStatus] = TRANSIENT_ABSENT
    - $column-Node[CurrentStatus] = TRANSIENT_WRITE_ONLY
    - $dependent-Target[TargetStatus] = ABSENT
    - $dependent-Node[CurrentStatus] = ABSENT
    - joinTargetNode($column, $column-Target, $column-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: column no longer public before dependents
  from: column-Node
  kind: Precedence
  to: dependent-Node
  query:
    - $column[Type] = '*scpb.Column'
    - $dependent[Type] IN ['*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.IndexColumn', '*scpb.SequenceOwner']
    - joinOnColumnID($column, $dependent, $table-id, $col-id)
    - $column-Target[TargetStatus] = ABSENT
    - $column-Node[CurrentStatus] = WRITE_ONLY
    - $dependent-Target[TargetStatus] = TRANSIENT_ABSENT
    - $dependent-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($column, $column-Target, $column-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: column type dependents removed right before column type
  from: dependent-Node
  kind: SameStagePrecedence
  to: column-type-Node
  query:
    - $dependent[Type] IN ['*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.SequenceOwner']
    - $column-type[Type] = '*scpb.ColumnType'
    - joinOnColumnID($dependent, $column-type, $table-id, $col-id)
    - toAbsent($dependent-Target, $column-type-Target)
    - $dependent-Node[CurrentStatus] = ABSENT
    - $column-type-Node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($column-type, $column-type-Target, $column-type-Node)
- name: column type removed right before column when not dropping relation
  from: column-type-Node
  kind: SameStagePrecedence
  to: column-Node
  query:
    - $column-type[Type] = '*scpb.ColumnType'
    - descriptorIsNotBeingDropped-22.2($column-type)
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($column-type, $column, $table-id, $col-id)
    - toAbsent($column-type-Target, $column-Target)
    - $column-type-Node[CurrentStatus] = ABSENT
    - $column-Node[CurrentStatus] = ABSENT
    - joinTargetNode($column-type, $column-type-Target, $column-type-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: constraint dependent absent right before constraint
  from: dependent-Node
  kind: SameStagePrecedence
  to: constraint-Node
  query:
    - $dependent[Type] IN ['*scpb.ConstraintComment', '*scpb.ConstraintWithoutIndexName']
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint', '*scpb.UniqueWithoutIndexConstraint']
    - joinOnConstraintID($dependent, $constraint, $table-id, $constraint-id)
    - toAbsent($dependent-Target, $constraint-Target)
    - $dependent-Node[CurrentStatus] = ABSENT
    - $constraint-Node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($constraint, $constraint-Target, $constraint-Node)
- name: constraint dependent absent right before constraint
  from: dependent-Node
  kind: SameStagePrecedence
  to: constraint-Node
  query:
    - $dependent[Type] IN ['*scpb.ConstraintComment', '*scpb.ConstraintWithoutIndexName']
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint', '*scpb.UniqueWithoutIndexConstraint']
    - joinOnConstraintID($dependent, $constraint, $table-id, $constraint-id)
    - transient($dependent-Target, $constraint-Target)
    - $dependent-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $constraint-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($constraint, $constraint-Target, $constraint-Node)
- name: constraint dependent absent right before constraint
  from: dependent-Node
  kind: SameStagePrecedence
  to: constraint-Node
  query:
    - $dependent[Type] IN ['*scpb.ConstraintComment', '*scpb.ConstraintWithoutIndexName']
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint', '*scpb.UniqueWithoutIndexConstraint']
    - joinOnConstraintID($dependent, $constraint, $table-id, $constraint-id)
    - $dependent-Target[TargetStatus] = TRANSIENT_ABSENT
    - $dependent-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $constraint-Target[TargetStatus] = ABSENT
    - $constraint-Node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($constraint, $constraint-Target, $constraint-Node)
- name: constraint dependent absent right before constraint
  from: dependent-Node
  kind: SameStagePrecedence
  to: constraint-Node
  query:
    - $dependent[Type] IN ['*scpb.ConstraintComment', '*scpb.ConstraintWithoutIndexName']
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint', '*scpb.UniqueWithoutIndexConstraint']
    - joinOnConstraintID($dependent, $constraint, $table-id, $constraint-id)
    - $dependent-Target[TargetStatus] = ABSENT
    - $dependent-Node[CurrentStatus] = ABSENT
    - $constraint-Target[TargetStatus] = TRANSIENT_ABSENT
    - $constraint-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($constraint, $constraint-Target, $constraint-Node)
- name: constraint dependent absent right before constraint
  from: dependent-Node
  kind: SameStagePrecedence
  to: constraint-Node
  query:
    - $dependent[Type] IN ['*scpb.ConstraintComment', '*scpb.ConstraintWithoutIndexName']
    - $constraint[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnConstraintID($dependent, $constraint, $table-id, $constraint-id)
    - toAbsent($dependent-Target, $constraint-Target)
    - $dependent-Node[CurrentStatus] = VALIDATED
    - $constraint-Node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($constraint, $constraint-Target, $constraint-Node)
- name: constraint dependent absent right before constraint
  from: dependent-Node
  kind: SameStagePrecedence
  to: constraint-Node
  query:
    - $dependent[Type] IN ['*scpb.ConstraintComment', '*scpb.ConstraintWithoutIndexName']
    - $constraint[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnConstraintID($dependent, $constraint, $table-id, $constraint-id)
    - transient($dependent-Target, $constraint-Target)
    - $dependent-Node[CurrentStatus] = TRANSIENT_VALIDATED
    - $constraint-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($constraint, $constraint-Target, $constraint-Node)
- name: constraint dependent absent right before constraint
  from: dependent-Node
  kind: SameStagePrecedence
  to: constraint-Node
  query:
    - $dependent[Type] IN ['*scpb.ConstraintComment', '*scpb.ConstraintWithoutIndexName']
    - $constraint[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnConstraintID($dependent, $constraint, $table-id, $constraint-id)
    - $dependent-Target[TargetStatus] = TRANSIENT_ABSENT
    - $dependent-Node[CurrentStatus] = TRANSIENT_VALIDATED
    - $constraint-Target[TargetStatus] = ABSENT
    - $constraint-Node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($constraint, $constraint-Target, $constraint-Node)
- name: constraint dependent absent right before constraint
  from: dependent-Node
  kind: SameStagePrecedence
  to: constraint-Node
  query:
    - $dependent[Type] IN ['*scpb.ConstraintComment', '*scpb.ConstraintWithoutIndexName']
    - $constraint[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnConstraintID($dependent, $constraint, $table-id, $constraint-id)
    - $dependent-Target[TargetStatus] = ABSENT
    - $dependent-Node[CurrentStatus] = VALIDATED
    - $constraint-Target[TargetStatus] = TRANSIENT_ABSENT
    - $constraint-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($constraint, $constraint-Target, $constraint-Node)
- name: constraint dependent public right before constraint
  from: constraint-Node
  kind: SameStagePrecedence
  to: dependent-Node
  query:
    - $constraint[Type] IN ['*scpb.CheckConstraint', '*scpb.ForeignKeyConstraint', '*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex', '*scpb.UniqueWithoutIndexConstraint']
    - $dependent[Type] IN ['*scpb.ConstraintComment', '*scpb.ConstraintWithoutIndexName']
    - joinOnConstraintID($constraint, $dependent, $table-id, $constraint-id)
    - ToPublicOrTransient($constraint-Target, $dependent-Target)
    - $constraint-Node[CurrentStatus] = PUBLIC
    - $dependent-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($constraint, $constraint-Target, $constraint-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: dependents removed before column
  from: dependent-Node
  kind: Precedence
  to: column-Node
  query:
    - $dependent[Type] IN ['*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.IndexColumn', '*scpb.SequenceOwner']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($dependent, $column, $table-id, $col-id)
    - toAbsent($dependent-Target, $column-Target)
    - $dependent-Node[CurrentStatus] = ABSENT
    - $column-Node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: dependents removed before column
  from: dependent-Node
  kind: Precedence
  to: column-Node
  query:
    - $dependent[Type] IN ['*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.IndexColumn', '*scpb.SequenceOwner']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($dependent, $column, $table-id, $col-id)
    - transient($dependent-Target, $column-Target)
    - $dependent-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $column-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: dependents removed before column
  from: dependent-Node
  kind: Precedence
  to: column-Node
  query:
    - $dependent[Type] IN ['*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.IndexColumn', '*scpb.SequenceOwner']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($dependent, $column, $table-id, $col-id)
    - $dependent-Target[TargetStatus] = TRANSIENT_ABSENT
    - $dependent-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $column-Target[TargetStatus] = ABSENT
    - $column-Node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: dependents removed before column
  from: dependent-Node
  kind: Precedence
  to: column-Node
  query:
    - $dependent[Type] IN ['*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.IndexColumn', '*scpb.SequenceOwner']
    - $column[Type] = '*scpb.Column'
    - joinOnColumnID($dependent, $column, $table-id, $col-id)
    - $dependent-Target[TargetStatus] = ABSENT
    - $dependent-Node[CurrentStatus] = ABSENT
    - $column-Target[TargetStatus] = TRANSIENT_ABSENT
    - $column-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: dependents removed before index
  from: dependent-Node
  kind: Precedence
  to: index-Node
  query:
    - $dependent[Type] IN ['*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($dependent, $index, $table-id, $index-id)
    - toAbsent($dependent-Target, $index-Target)
    - $dependent-Node[CurrentStatus] = ABSENT
    - $index-Node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: dependents removed before index
  from: dependent-Node
  kind: Precedence
  to: index-Node
  query:
    - $dependent[Type] IN ['*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($dependent, $index, $table-id, $index-id)
    - transient($dependent-Target, $index-Target)
    - $dependent-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: dependents removed before index
  from: dependent-Node
  kind: Precedence
  to: index-Node
  query:
    - $dependent[Type] IN ['*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($dependent, $index, $table-id, $index-id)
    - $dependent-Target[TargetStatus] = TRANSIENT_ABSENT
    - $dependent-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-Target[TargetStatus] = ABSENT
    - $index-Node[CurrentStatus] = ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: dependents removed before index
  from: dependent-Node
  kind: Precedence
  to: index-Node
  query:
    - $dependent[Type] IN ['*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($dependent, $index, $table-id, $index-id)
    - $dependent-Target[TargetStatus] = ABSENT
    - $dependent-Node[CurrentStatus] = ABSENT
    - $index-Target[TargetStatus] = TRANSIENT_ABSENT
    - $index-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: descriptor DROPPED in transaction before removal
  from: dropped-Node
  kind: PreviousTransactionPrecedence
  to: absent-Node
  query:
    - $dropped[Type] IN ['*scpb.AliasType', '*scpb.Database', '*scpb.EnumType', '*scpb.Schema', '*scpb.Sequence', '*scpb.Table', '*scpb.View']
    - $dropped[DescID] = $_
    - $dropped[Self] = $absent
    - toAbsent($dropped-Target, $absent-Target)
    - $dropped-Node[CurrentStatus] = DROPPED
    - $absent-Node[CurrentStatus] = ABSENT
    - joinTargetNode($dropped, $dropped-Target, $dropped-Node)
    - joinTargetNode($absent, $absent-Target, $absent-Node)
- name: descriptor TXN_DROPPED before DROPPED
  from: txn_dropped-Node
  kind: PreviousStagePrecedence
  to: dropped-Node
  query:
    - $txn_dropped[Type] IN ['*scpb.AliasType', '*scpb.Database', '*scpb.EnumType', '*scpb.Schema', '*scpb.Sequence', '*scpb.Table', '*scpb.View']
    - $txn_dropped[DescID] = $_
    - $txn_dropped[Self] = $dropped
    - toAbsent($txn_dropped-Target, $dropped-Target)
    - $txn_dropped-Node[CurrentStatus] = TXN_DROPPED
    - $dropped-Node[CurrentStatus] = DROPPED
    - joinTargetNode($txn_dropped, $txn_dropped-Target, $txn_dropped-Node)
    - joinTargetNode($dropped, $dropped-Target, $dropped-Node)
- name: descriptor drop right before dependent element removal
  from: descriptor-Node
  kind: SameStagePrecedence
  to: dependent-Node
  query:
    - $descriptor[Type] IN ['*scpb.AliasType', '*scpb.Database', '*scpb.EnumType', '*scpb.Schema', '*scpb.Sequence', '*scpb.Table', '*scpb.View']
    - $dependent[Type] IN ['*scpb.CheckConstraint', '*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnFamily', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.ConstraintComment', '*scpb.ConstraintWithoutIndexName', '*scpb.DatabaseComment', '*scpb.DatabaseRegionConfig', '*scpb.DatabaseRoleSetting', '*scpb.EnumTypeValue', '*scpb.ForeignKeyConstraint', '*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.Namespace', '*scpb.Owner', '*scpb.RowLevelTTL', '*scpb.SchemaChild', '*scpb.SchemaComment', '*scpb.SchemaParent', '*scpb.SecondaryIndexPartial', '*scpb.SequenceOwner', '*scpb.TableComment', '*scpb.TableLocalityGlobal', '*scpb.TableLocalityPrimaryRegion', '*scpb.TableLocalityRegionalByRow', '*scpb.TableLocalitySecondaryRegion', '*scpb.TableZoneConfig', '*scpb.UniqueWithoutIndexConstraint', '*scpb.UserPrivileges']
    - joinOnDescID($descriptor, $dependent, $desc-id)
    - toAbsent($descriptor-Target, $dependent-Target)
    - $descriptor-Node[CurrentStatus] = DROPPED
    - $dependent-Node[CurrentStatus] = ABSENT
    - fromHasPublicStatusIfFromIsTableAndToIsRowLevelTTL($descriptor-Target, $descriptor, $dependent)
    - joinTargetNode($descriptor, $descriptor-Target, $descriptor-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: descriptor drop right before removing dependent with attr ref
  from: referenced-descriptor-Node
  kind: SameStagePrecedence
  to: referencing-via-attr-Node
  query:
    - $referenced-descriptor[Type] IN ['*scpb.AliasType', '*scpb.Database', '*scpb.EnumType', '*scpb.Schema', '*scpb.Sequence', '*scpb.Table', '*scpb.View']
    - $referencing-via-attr[Type] IN ['*scpb.CheckConstraint', '*scpb.ColumnComment', '*scpb.ColumnDefaultExpression', '*scpb.ColumnFamily', '*scpb.ColumnName', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.ConstraintComment', '*scpb.ConstraintWithoutIndexName', '*scpb.DatabaseComment', '*scpb.DatabaseRegionConfig', '*scpb.DatabaseRoleSetting', '*scpb.EnumTypeValue', '*scpb.ForeignKeyConstraint', '*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.Namespace', '*scpb.Owner', '*scpb.RowLevelTTL', '*scpb.SchemaChild', '*scpb.SchemaComment', '*scpb.SchemaParent', '*scpb.SecondaryIndexPartial', '*scpb.SequenceOwner', '*scpb.TableComment', '*scpb.TableLocalityGlobal', '*scpb.TableLocalityPrimaryRegion', '*scpb.TableLocalityRegionalByRow', '*scpb.TableLocalitySecondaryRegion', '*scpb.TableZoneConfig', '*scpb.UniqueWithoutIndexConstraint', '*scpb.UserPrivileges']
    - joinReferencedDescID($referencing-via-attr, $referenced-descriptor, $desc-id)
    - toAbsent($referenced-descriptor-Target, $referencing-via-attr-Target)
    - $referenced-descriptor-Node[CurrentStatus] = DROPPED
    - $referencing-via-attr-Node[CurrentStatus] = ABSENT
    - joinTargetNode($referenced-descriptor, $referenced-descriptor-Target, $referenced-descriptor-Node)
    - joinTargetNode($referencing-via-attr, $referencing-via-attr-Target, $referencing-via-attr-Node)
- name: descriptor drop right before removing dependent with expr ref to sequence
  from: referenced-descriptor-Node
  kind: SameStagePrecedence
  to: referencing-via-expr-Node
  query:
    - $referenced-descriptor[Type] = '*scpb.Sequence'
    - joinTargetNode($referenced-descriptor, $referenced-descriptor-Target, $referenced-descriptor-Node)
    - $referenced-descriptor[DescID] = $seqID
    - $referencing-via-expr[ReferencedSequenceIDs] CONTAINS $seqID
    - $referencing-via-expr[Type] IN ['*scpb.CheckConstraint', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.SecondaryIndexPartial']
    - toAbsent($referenced-descriptor-Target, $referencing-via-expr-Target)
    - $referenced-descriptor-Node[CurrentStatus] = DROPPED
    - $referencing-via-expr-Node[CurrentStatus] = ABSENT
    - joinTargetNode($referenced-descriptor, $referenced-descriptor-Target, $referenced-descriptor-Node)
    - joinTargetNode($referencing-via-expr, $referencing-via-expr-Target, $referencing-via-expr-Node)
- name: descriptor drop right before removing dependent with type ref
  from: referenced-descriptor-Node
  kind: SameStagePrecedence
  to: referencing-via-type-Node
  query:
    - $referenced-descriptor[Type] IN ['*scpb.AliasType', '*scpb.EnumType']
    - joinTargetNode($referenced-descriptor, $referenced-descriptor-Target, $referenced-descriptor-Node)
    - $referenced-descriptor[DescID] = $fromDescID
    - $referencing-via-type[ReferencedTypeIDs] CONTAINS $fromDescID
    - $referencing-via-type[Type] IN ['*scpb.CheckConstraint', '*scpb.ColumnDefaultExpression', '*scpb.ColumnOnUpdateExpression', '*scpb.ColumnType', '*scpb.SecondaryIndexPartial']
    - toAbsent($referenced-descriptor-Target, $referencing-via-type-Target)
    - $referenced-descriptor-Node[CurrentStatus] = DROPPED
    - $referencing-via-type-Node[CurrentStatus] = ABSENT
    - joinTargetNode($referenced-descriptor, $referenced-descriptor-Target, $referenced-descriptor-Node)
    - joinTargetNode($referencing-via-type, $referencing-via-type-Target, $referencing-via-type-Node)
- name: descriptor removal right before dependent element removal
  from: descriptor-Node
  kind: SameStagePrecedence
  to: idx-or-col-Node
  query:
    - $descriptor[Type] IN ['*scpb.AliasType', '*scpb.Database', '*scpb.EnumType', '*scpb.Schema', '*scpb.Sequence', '*scpb.Table', '*scpb.View']
    - $idx-or-col[Type] IN ['*scpb.Column', '*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnDescID($descriptor, $idx-or-col, $desc-id)
    - toAbsent($descriptor-Target, $idx-or-col-Target)
    - $descriptor-Node[CurrentStatus] = ABSENT
    - $idx-or-col-Node[CurrentStatus] = ABSENT
    - joinTargetNode($descriptor, $descriptor-Target, $descriptor-Node)
    - joinTargetNode($idx-or-col, $idx-or-col-Target, $idx-or-col-Node)
- name: ensure columns are in increasing order
  from: later-column-Node
  kind: SameStagePrecedence
  to: earlier-column-Node
  query:
    - $later-column[Type] = '*scpb.Column'
    - $earlier-column[Type] = '*scpb.Column'
    - joinOnDescID($later-column, $earlier-column, $table-id)
    - ToPublicOrTransient($later-column-Target, $earlier-column-Target)
    - $status IN [WRITE_ONLY, PUBLIC]
    - $later-column-Node[CurrentStatus] = $status
    - $earlier-column-Node[CurrentStatus] = $status
    - SmallerColumnIDFirst(*scpb.Column, *scpb.Column)($later-column, $earlier-column)
    - joinTargetNode($later-column, $later-column-Target, $later-column-Node)
    - joinTargetNode($earlier-column, $earlier-column-Target, $earlier-column-Node)
- name: index dependents exist before index becomes public
  from: dependent-Node
  kind: Precedence
  to: index-Node
  query:
    - $dependent[Type] IN ['*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial']
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($dependent, $index, $table-id, $index-id)
    - ToPublicOrTransient($dependent-Target, $index-Target)
    - $dependent-Node[CurrentStatus] = PUBLIC
    - $index-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: index existence precedes index dependents
  from: index-Node
  kind: Precedence
  to: dependent-Node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $dependent[Type] IN ['*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - ToPublicOrTransient($index-Target, $dependent-Target)
    - $index-Node[CurrentStatus] = BACKFILL_ONLY
    - $dependent-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: index named right before index becomes public
  from: index-name-Node
  kind: SameStagePrecedence
  to: index-Node
  query:
    - $index-name[Type] = '*scpb.IndexName'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - joinOnIndexID($index-name, $index, $table-id, $index-id)
    - ToPublicOrTransient($index-name-Target, $index-Target)
    - $index-name-Node[CurrentStatus] = PUBLIC
    - $index-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($index-name, $index-name-Target, $index-name-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: index no longer public before dependents
  from: index-Node
  kind: Precedence
  to: dependent-Node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $dependent[Type] IN ['*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - toAbsent($index-Target, $dependent-Target)
    - $index-Node[CurrentStatus] = VALIDATED
    - $dependent-Node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: index no longer public before dependents
  from: index-Node
  kind: Precedence
  to: dependent-Node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $dependent[Type] IN ['*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - transient($index-Target, $dependent-Target)
    - $index-Node[CurrentStatus] = TRANSIENT_VALIDATED
    - $dependent-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: index no longer public before dependents
  from: index-Node
  kind: Precedence
  to: dependent-Node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $dependent[Type] IN ['*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - $index-Target[TargetStatus] = TRANSIENT_ABSENT
    - $index-Node[CurrentStatus] = TRANSIENT_VALIDATED
    - $dependent-Target[TargetStatus] = ABSENT
    - $dependent-Node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: index no longer public before dependents
  from: index-Node
  kind: Precedence
  to: dependent-Node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - $dependent[Type] IN ['*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - $index-Target[TargetStatus] = ABSENT
    - $index-Node[CurrentStatus] = VALIDATED
    - $dependent-Target[TargetStatus] = TRANSIENT_ABSENT
    - $dependent-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: index-column added to index before index is backfilled
  from: index-column-Node
  kind: Precedence
  to: index-Node
  query:
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - joinOnIndexID($index-column, $index, $table-id, $index-id)
    - ToPublicOrTransient($index-column-Target, $index-Target)
    - $index-column-Node[CurrentStatus] = PUBLIC
    - $index-Node[CurrentStatus] = BACKFILLED
    - joinTargetNode($index-column, $index-column-Target, $index-column-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: index-column added to index before temp index receives writes
  from: index-column-Node
  kind: Precedence
  to: index-Node
  query:
    - $index-column[Type] = '*scpb.IndexColumn'
    - $index[Type] = '*scpb.TemporaryIndex'
    - joinOnIndexID($index-column, $index, $table-id, $index-id)
    - transient($index-column-Target, $index-Target)
    - $index-column-Node[CurrentStatus] = PUBLIC
    - $index-Node[CurrentStatus] = WRITE_ONLY
    - joinTargetNode($index-column, $index-column-Target, $index-column-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: indexes containing column reach absent before column
  from: index-Node
  kind: Precedence
  to: column-Node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $column[Type] = '*scpb.Column'
    - ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - descriptorIsNotBeingDropped-22.2($index-column)
    - toAbsent($index-Target, $column-Target)
    - $index-Node[CurrentStatus] = ABSENT
    - $column-Node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: indexes containing column reach absent before column
  from: index-Node
  kind: Precedence
  to: column-Node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $column[Type] = '*scpb.Column'
    - ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - descriptorIsNotBeingDropped-22.2($index-column)
    - transient($index-Target, $column-Target)
    - $index-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $column-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: indexes containing column reach absent before column
  from: index-Node
  kind: Precedence
  to: column-Node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $column[Type] = '*scpb.Column'
    - ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - descriptorIsNotBeingDropped-22.2($index-column)
    - $index-Target[TargetStatus] = TRANSIENT_ABSENT
    - $index-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $column-Target[TargetStatus] = ABSENT
    - $column-Node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: indexes containing column reach absent before column
  from: index-Node
  kind: Precedence
  to: column-Node
  query:
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $column[Type] = '*scpb.Column'
    - ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - descriptorIsNotBeingDropped-22.2($index-column)
    - $index-Target[TargetStatus] = ABSENT
    - $index-Node[CurrentStatus] = ABSENT
    - $column-Target[TargetStatus] = TRANSIENT_ABSENT
    - $column-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: old index absent before new index public when swapping with transient
  from: old-primary-index-Node
  kind: Precedence
  to: new-primary-index-Node
  query:
    - $old-primary-index[Type] = '*scpb.PrimaryIndex'
    - $transient-primary-index[Type] = '*scpb.PrimaryIndex'
    - $new-primary-index[Type] = '*scpb.PrimaryIndex'
    - joinOnDescID($old-primary-index, $transient-primary-index, $table-id)
    - $old-primary-index[IndexID] = $old-index-id
    - $transient-primary-index[SourceIndexID] = $old-index-id
    - joinOnDescID($transient-primary-index, $new-primary-index, $table-id)
    - $transient-primary-index[IndexID] = $transient-index-id
    - $new-primary-index[SourceIndexID] = $transient-index-id
    - $old-primary-index-Target[TargetStatus] = ABSENT
    - $old-primary-index-Node[CurrentStatus] = ABSENT
    - $new-primary-index-Target[TargetStatus] = PUBLIC
    - $new-primary-index-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($old-primary-index, $old-primary-index-Target, $old-primary-index-Node)
    - joinTargetNode($new-primary-index, $new-primary-index-Target, $new-primary-index-Node)
- name: partial predicate removed right before secondary index when not dropping relation
  from: partial-predicate-Node
  kind: SameStagePrecedence
  to: index-Node
  query:
    - $partial-predicate[Type] = '*scpb.SecondaryIndexPartial'
    - descriptorIsNotBeingDropped-22.2($partial-predicate)
    - $index[Type] = '*scpb.SecondaryIndex'
    - joinOnIndexID($partial-predicate, $index, $table-id, $index-id)
    - toAbsent($partial-predicate-Target, $index-Target)
    - $partial-predicate-Node[CurrentStatus] = ABSENT
    - $index-Node[CurrentStatus] = ABSENT
    - joinTargetNode($partial-predicate, $partial-predicate-Target, $partial-predicate-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: partial predicate removed right before secondary index when not dropping relation
  from: partial-predicate-Node
  kind: SameStagePrecedence
  to: index-Node
  query:
    - $partial-predicate[Type] = '*scpb.SecondaryIndexPartial'
    - descriptorIsNotBeingDropped-22.2($partial-predicate)
    - $index[Type] = '*scpb.SecondaryIndex'
    - joinOnIndexID($partial-predicate, $index, $table-id, $index-id)
    - transient($partial-predicate-Target, $index-Target)
    - $partial-predicate-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($partial-predicate, $partial-predicate-Target, $partial-predicate-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: partial predicate removed right before secondary index when not dropping relation
  from: partial-predicate-Node
  kind: SameStagePrecedence
  to: index-Node
  query:
    - $partial-predicate[Type] = '*scpb.SecondaryIndexPartial'
    - descriptorIsNotBeingDropped-22.2($partial-predicate)
    - $index[Type] = '*scpb.SecondaryIndex'
    - joinOnIndexID($partial-predicate, $index, $table-id, $index-id)
    - $partial-predicate-Target[TargetStatus] = TRANSIENT_ABSENT
    - $partial-predicate-Node[CurrentStatus] = TRANSIENT_ABSENT
    - $index-Target[TargetStatus] = ABSENT
    - $index-Node[CurrentStatus] = ABSENT
    - joinTargetNode($partial-predicate, $partial-predicate-Target, $partial-predicate-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: partial predicate removed right before secondary index when not dropping relation
  from: partial-predicate-Node
  kind: SameStagePrecedence
  to: index-Node
  query:
    - $partial-predicate[Type] = '*scpb.SecondaryIndexPartial'
    - descriptorIsNotBeingDropped-22.2($partial-predicate)
    - $index[Type] = '*scpb.SecondaryIndex'
    - joinOnIndexID($partial-predicate, $index, $table-id, $index-id)
    - $partial-predicate-Target[TargetStatus] = ABSENT
    - $partial-predicate-Node[CurrentStatus] = ABSENT
    - $index-Target[TargetStatus] = TRANSIENT_ABSENT
    - $index-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($partial-predicate, $partial-predicate-Target, $partial-predicate-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
- name: primary index swap
  from: old-index-Node
  kind: SameStagePrecedence
  to: new-index-Node
  query:
    - $old-index[Type] = '*scpb.PrimaryIndex'
    - $new-index[Type] = '*scpb.PrimaryIndex'
    - joinOnDescID($old-index, $new-index, $table-id)
    - $old-index[IndexID] = $old-index-id
    - $new-index[SourceIndexID] = $old-index-id
    - $old-index-Target[TargetStatus] = ABSENT
    - $old-index-Node[CurrentStatus] = VALIDATED
    - $new-index-Target[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
    - $new-index-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($old-index, $old-index-Target, $old-index-Node)
    - joinTargetNode($new-index, $new-index-Target, $new-index-Node)
- name: primary index swap
  from: old-index-Node
  kind: SameStagePrecedence
  to: new-index-Node
  query:
    - $old-index[Type] = '*scpb.PrimaryIndex'
    - $new-index[Type] = '*scpb.PrimaryIndex'
    - joinOnDescID($old-index, $new-index, $table-id)
    - $old-index[IndexID] = $old-index-id
    - $new-index[SourceIndexID] = $old-index-id
    - $old-index-Target[TargetStatus] = TRANSIENT_ABSENT
    - $old-index-Node[CurrentStatus] = TRANSIENT_VALIDATED
    - $new-index-Target[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
    - $new-index-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($old-index, $old-index-Target, $old-index-Node)
    - joinTargetNode($new-index, $new-index-Target, $new-index-Node)
- name: primary index swap
  from: new-index-Node
  kind: SameStagePrecedence
  to: old-index-Node
  query:
    - $new-index[Type] = '*scpb.PrimaryIndex'
    - $old-index[Type] = '*scpb.PrimaryIndex'
    - joinOnDescID($new-index, $old-index, $table-id)
    - $new-index[SourceIndexID] = $old-index-id
    - $old-index[IndexID] = $old-index-id
    - $new-index-Target[TargetStatus] = ABSENT
    - $new-index-Node[CurrentStatus] = VALIDATED
    - $old-index-Target[TargetStatus] = PUBLIC
    - $old-index-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($new-index, $new-index-Target, $new-index-Node)
    - joinTargetNode($old-index, $old-index-Target, $old-index-Node)
- name: primary index with new columns should exist before secondary indexes
  from: primary-index-Node
  kind: Precedence
  to: secondary-index-Node
  query:
    - $primary-index[Type] = '*scpb.PrimaryIndex'
    - $secondary-index[Type] = '*scpb.SecondaryIndex'
    - joinOnDescID($primary-index, $secondary-index, $table-id)
    - $primary-index[IndexID] = $primary-index-id
    - $secondary-index[SourceIndexID] = $primary-index-id
    - ToPublicOrTransient($primary-index-Target, $secondary-index-Target)
    - $primary-index-Node[CurrentStatus] = PUBLIC
    - $secondary-index-Node[CurrentStatus] = BACKFILL_ONLY
    - joinTargetNode($primary-index, $primary-index-Target, $primary-index-Node)
    - joinTargetNode($secondary-index, $secondary-index-Target, $secondary-index-Node)
- name: primary index with new columns should exist before temp indexes
  from: primary-index-Node
  kind: Precedence
  to: temp-index-Node
  query:
    - $primary-index[Type] = '*scpb.PrimaryIndex'
    - $temp-index[Type] = '*scpb.TemporaryIndex'
    - joinOnDescID($primary-index, $temp-index, $table-id)
    - $primary-index[IndexID] = $primary-index-id
    - $temp-index[SourceIndexID] = $primary-index-id
    - ToPublicOrTransient($primary-index-Target, $temp-index-Target)
    - $primary-index-Node[CurrentStatus] = PUBLIC
    - $temp-index-Node[CurrentStatus] = DELETE_ONLY
    - joinTargetNode($primary-index, $primary-index-Target, $primary-index-Node)
    - joinTargetNode($temp-index, $temp-index-Target, $temp-index-Node)
- name: remove columns from index right before removing index
  from: index-Node
  kind: Precedence
  to: index-column-Node
  query:
    - $index[Type] = '*scpb.IndexColumn'
    - $index-column[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($index, $index-column, $table-id, $index-id)
    - toAbsent($index-Target, $index-column-Target)
    - $index-Node[CurrentStatus] = DELETE_ONLY
    - $index-column-Node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($index-column, $index-column-Target, $index-column-Node)
- name: remove columns from index right before removing index
  from: index-Node
  kind: Precedence
  to: index-column-Node
  query:
    - $index[Type] = '*scpb.IndexColumn'
    - $index-column[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($index, $index-column, $table-id, $index-id)
    - transient($index-Target, $index-column-Target)
    - $index-Node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $index-column-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($index-column, $index-column-Target, $index-column-Node)
- name: remove columns from index right before removing index
  from: index-Node
  kind: Precedence
  to: index-column-Node
  query:
    - $index[Type] = '*scpb.IndexColumn'
    - $index-column[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($index, $index-column, $table-id, $index-id)
    - $index-Target[TargetStatus] = TRANSIENT_ABSENT
    - $index-Node[CurrentStatus] = TRANSIENT_DELETE_ONLY
    - $index-column-Target[TargetStatus] = ABSENT
    - $index-column-Node[CurrentStatus] = ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($index-column, $index-column-Target, $index-column-Node)
- name: remove columns from index right before removing index
  from: index-Node
  kind: Precedence
  to: index-column-Node
  query:
    - $index[Type] = '*scpb.IndexColumn'
    - $index-column[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex', '*scpb.TemporaryIndex']
    - joinOnIndexID($index, $index-column, $table-id, $index-id)
    - $index-Target[TargetStatus] = ABSENT
    - $index-Node[CurrentStatus] = DELETE_ONLY
    - $index-column-Target[TargetStatus] = TRANSIENT_ABSENT
    - $index-column-Node[CurrentStatus] = TRANSIENT_ABSENT
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($index-column, $index-column-Target, $index-column-Node)
- name: secondary indexes containing column as key reach write-only before column
  from: index-Node
  kind: Precedence
  to: column-Node
  query:
    - $index[Type] = '*scpb.SecondaryIndex'
    - $column[Type] = '*scpb.Column'
    - ColumnInIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - toAbsent($index-Target, $column-Target)
    - $index-Node[CurrentStatus] = VALIDATED
    - $column-Node[CurrentStatus] = WRITE_ONLY
    - descriptorIsNotBeingDropped-22.2($index-column)
    - rules.IsIndexKeyColumnKey(*scpb.IndexColumn)($index-column)
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: swapped primary index public before column
  from: index-Node
  kind: Precedence
  to: column-Node
  query:
    - $index[Type] = '*scpb.PrimaryIndex'
    - $column[Type] = '*scpb.Column'
    - ColumnInSwappedInPrimaryIndex($index-column, $index, $table-id, $column-id, $index-id)
    - joinOnColumnID($index-column, $column, $table-id, $column-id)
    - ToPublicOrTransient($index-Target, $column-Target)
    - $index-Node[CurrentStatus] = PUBLIC
    - $column-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($column, $column-Target, $column-Node)
- name: temp index existence precedes index dependents
  from: index-Node
  kind: Precedence
  to: dependent-Node
  query:
    - $index[Type] = '*scpb.TemporaryIndex'
    - $dependent[Type] IN ['*scpb.IndexColumn', '*scpb.IndexComment', '*scpb.IndexName', '*scpb.IndexPartitioning', '*scpb.SecondaryIndexPartial']
    - joinOnIndexID($index, $dependent, $table-id, $index-id)
    - ToPublicOrTransient($index-Target, $dependent-Target)
    - $index-Node[CurrentStatus] = DELETE_ONLY
    - $dependent-Node[CurrentStatus] = PUBLIC
    - joinTargetNode($index, $index-Target, $index-Node)
    - joinTargetNode($dependent, $dependent-Target, $dependent-Node)
- name: temp index is WRITE_ONLY before backfill
  from: temp-Node
  kind: Precedence
  to: index-Node
  query:
    - $temp[Type] = '*scpb.TemporaryIndex'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - joinOnDescID($temp, $index, $table-id)
    - $temp[IndexID] = $temp-index-id
    - $index[TemporaryIndexID] = $temp-index-id
    - $temp-Target[TargetStatus] = TRANSIENT_ABSENT
    - $index-Target[TargetStatus] IN [PUBLIC, TRANSIENT_ABSENT]
    - $temp-Node[CurrentStatus] = WRITE_ONLY
    - $index-Node[CurrentStatus] = BACKFILLED
    - joinTargetNode($temp, $temp-Target, $temp-Node)
    - joinTargetNode($index, $index-Target, $index-Node)
