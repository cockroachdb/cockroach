rules
----
- name: descriptor must be dropped before draining name
  from: from-node
  to: to-node
  query:
    - $from[Type] IN ['*scpb.Schema', '*scpb.Table', '*scpb.View', '*scpb.Sequence', '*scpb.Type']
    - $to[Type] IN ['*scpb.Database', '*scpb.Schema']
    - $from-target[TargetStatus] = ABSENT
    - $to-target[TargetStatus] = ABSENT
    - $from-node[CurrentStatus] = ABSENT
    - $to-node[CurrentStatus] = ABSENT
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - has-parent-child-relationship(scpb.Element, scpb.Element)($from, $to)
- name: dependency needs relation/type as non-synthetically dropped
  from: relation-node
  to: dep-node
  query:
    - $relation[Type] IN ['*scpb.Table', '*scpb.View', '*scpb.Sequence', '*scpb.Type']
    - $dep[Type] IN ['*scpb.DefaultExpression', '*scpb.RelationDependedOnBy', '*scpb.SequenceOwnedBy', '*scpb.ForeignKey']
    - $relation[DescID] = $id
    - $dep[DescID] = $id
    - $relation-target[Type] = '*scpb.Target'
    - $relation-target[Element] = $relation
    - $relation-node[Type] = '*screl.Node'
    - $relation-node[Target] = $relation-target
    - $relation-target[TargetStatus] = ABSENT
    - $relation-node[CurrentStatus] = DROPPED
    - $dep-target[Type] = '*scpb.Target'
    - $dep-target[Element] = $dep
    - $dep-node[Type] = '*screl.Node'
    - $dep-node[Target] = $dep-target
    - $dep-target[TargetStatus] = ABSENT
    - $dep-node[CurrentStatus] = ABSENT
- name: dependency needs relation/type as non-synthetically dropped
  from: relation-node
  to: dep-node
  query:
    - $relation[Type] IN ['*scpb.Table', '*scpb.View', '*scpb.Sequence', '*scpb.Type']
    - $dep[Type] IN ['*scpb.ForeignKeyBackReference', '*scpb.RelationDependedOnBy', '*scpb.ViewDependsOnType', '*scpb.DefaultExprTypeReference', '*scpb.OnUpdateExprTypeReference', '*scpb.ComputedExprTypeReference', '*scpb.ColumnTypeReference', '*scpb.CheckConstraintTypeReference']
    - $relation[DescID] = $id
    - $dep[ReferencedDescID] = $id
    - $relation-target[Type] = '*scpb.Target'
    - $relation-target[Element] = $relation
    - $relation-node[Type] = '*screl.Node'
    - $relation-node[Target] = $relation-target
    - $relation-target[TargetStatus] = ABSENT
    - $relation-node[CurrentStatus] = DROPPED
    - $dep-target[Type] = '*scpb.Target'
    - $dep-target[Element] = $dep
    - $dep-node[Type] = '*screl.Node'
    - $dep-node[Target] = $dep-target
    - $dep-target[TargetStatus] = ABSENT
    - $dep-node[CurrentStatus] = ABSENT
- name: type ref drop is no-op if ref is being added
  from: type-ref-drop-node
  to: type-ref-drop-node
  query:
    - $type-ref-drop[Type] IN ['*scpb.DefaultExprTypeReference', '*scpb.ColumnTypeReference', '*scpb.OnUpdateExprTypeReference', '*scpb.ComputedExprTypeReference', '*scpb.ViewDependsOnType']
    - $type-ref-add[Type] IN ['*scpb.DefaultExprTypeReference', '*scpb.ColumnTypeReference', '*scpb.OnUpdateExprTypeReference', '*scpb.ComputedExprTypeReference', '*scpb.ViewDependsOnType']
    - $type-ref-drop[ReferencedDescID] = $type-id
    - $type-ref-add[ReferencedDescID] = $type-id
    - $type-ref-drop[DescID] = $table-id
    - $type-ref-add[DescID] = $table-id
    - $type-ref-drop-target[Type] = '*scpb.Target'
    - $type-ref-drop-target[Element] = $type-ref-drop
    - $type-ref-drop-node[Type] = '*screl.Node'
    - $type-ref-drop-node[Target] = $type-ref-drop-target
    - $type-ref-drop-target[TargetStatus] = ABSENT
    - $type-ref-drop-node[CurrentStatus] = ABSENT
    - $type-ref-add-target[Type] = '*scpb.Target'
    - $type-ref-add-target[Element] = $type-ref-add
    - $type-ref-add-node[Type] = '*screl.Node'
    - $type-ref-add-node[Target] = $type-ref-add-target
    - $type-ref-add-target[TargetStatus] = PUBLIC
    - $type-ref-add-node[CurrentStatus] = PUBLIC
- name: descriptor must be dropped before draining name
  from: from-node
  to: to-node
  query:
    - $from[Type] IN ['*scpb.Database', '*scpb.Schema', '*scpb.Table', '*scpb.View', '*scpb.Sequence', '*scpb.Type']
    - $to[Type] = '*scpb.Namespace'
    - $from-target[TargetStatus] = ABSENT
    - $to-target[TargetStatus] = ABSENT
    - $from-node[CurrentStatus] = DROPPED
    - $to-node[CurrentStatus] = ABSENT
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
- name: name must drain before descriptor deletion
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.Namespace'
    - $to[Type] IN ['*scpb.Database', '*scpb.Schema', '*scpb.Table', '*scpb.View', '*scpb.Sequence', '*scpb.Type']
    - $from-target[TargetStatus] = ABSENT
    - $to-target[TargetStatus] = ABSENT
    - $from-node[CurrentStatus] = ABSENT
    - $to-node[CurrentStatus] = ABSENT
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
- name: relation drop precedes relation deps removal
  from: from-node
  to: to-node
  query:
    - $from[Type] IN ['*scpb.Table', '*scpb.Sequence', '*scpb.View']
    - $to[Type] IN ['*scpb.Owner', '*scpb.UserPrivileges', '*scpb.Locality']
    - $from-target[TargetStatus] = ABSENT
    - $to-target[TargetStatus] = ABSENT
    - $from-node[CurrentStatus] = DROPPED
    - $to-node[CurrentStatus] = ABSENT
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
- name: schema can be dropped after schema entry inside the database
  from: schema-entry-node
  to: schema-node
  query:
    - $schema[Type] = '*scpb.Schema'
    - $schema-entry[Type] = '*scpb.DatabaseSchemaEntry'
    - $schema[DescID] = $schema-id
    - $schema-entry[ReferencedDescID] = $schema-id
    - $schema-target[Type] = '*scpb.Target'
    - $schema-target[Element] = $schema
    - $schema-node[Type] = '*screl.Node'
    - $schema-node[Target] = $schema-target
    - $schema-target[TargetStatus] = ABSENT
    - $schema-node[CurrentStatus] = ABSENT
    - $schema-entry-target[Type] = '*scpb.Target'
    - $schema-entry-target[Element] = $schema-entry
    - $schema-entry-node[Type] = '*screl.Node'
    - $schema-entry-node[Target] = $schema-entry-target
    - $schema-entry-target[TargetStatus] = ABSENT
    - $schema-entry-node[CurrentStatus] = ABSENT
- name: database drop precedes schema entry removal
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.Database'
    - $to[Type] = '*scpb.DatabaseSchemaEntry'
    - $from-target[TargetStatus] = ABSENT
    - $to-target[TargetStatus] = ABSENT
    - $from-node[CurrentStatus] = DROPPED
    - $to-node[CurrentStatus] = ABSENT
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
- name: primary index add depends on drop
  from: dropping-index-node
  to: adding-index-node
  query:
    - $adding-index[Type] = '*scpb.PrimaryIndex'
    - $dropping-index[Type] = '*scpb.PrimaryIndex'
    - $adding-index[DescID] = $id
    - $dropping-index[DescID] = $id
    - indexes-reference-each-other(*scpb.PrimaryIndex, *scpb.PrimaryIndex)($adding-index, $dropping-index)
    - $adding-index-target[Type] = '*scpb.Target'
    - $adding-index-target[Element] = $adding-index
    - $adding-index-node[Type] = '*screl.Node'
    - $adding-index-node[Target] = $adding-index-target
    - $adding-index-target[TargetStatus] = PUBLIC
    - $adding-index-node[CurrentStatus] = PUBLIC
    - $dropping-index-target[Type] = '*scpb.Target'
    - $dropping-index-target[Element] = $dropping-index
    - $dropping-index-node[Type] = '*screl.Node'
    - $dropping-index-node[Target] = $dropping-index-target
    - $dropping-index-target[TargetStatus] = ABSENT
    - $dropping-index-node[CurrentStatus] = VALIDATED
- name: index existence precedes partitioning
  from: from-node
  to: to-node
  query:
    - $from[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $to[Type] = '*scpb.IndexPartitioning'
    - $from-target[TargetStatus] = PUBLIC
    - $to-target[TargetStatus] = PUBLIC
    - $from-node[CurrentStatus] = DELETE_ONLY
    - $to-node[CurrentStatus] = PUBLIC
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
    - $from[IndexID] = $IndexID-join-var
    - $to[IndexID] = $IndexID-join-var
- name: index partitioning precedes allowing writes
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.IndexPartitioning'
    - $to[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $from-target[TargetStatus] = PUBLIC
    - $to-target[TargetStatus] = PUBLIC
    - $from-node[CurrentStatus] = PUBLIC
    - $to-node[CurrentStatus] = DELETE_AND_WRITE_ONLY
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
    - $from[IndexID] = $IndexID-join-var
    - $to[IndexID] = $IndexID-join-var
- name: index existence precedes naming
  from: from-node
  to: to-node
  query:
    - $from[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $to[Type] = '*scpb.IndexName'
    - $from-target[TargetStatus] = PUBLIC
    - $to-target[TargetStatus] = PUBLIC
    - $from-node[CurrentStatus] = DELETE_ONLY
    - $to-node[CurrentStatus] = PUBLIC
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
    - $from[IndexID] = $IndexID-join-var
    - $to[IndexID] = $IndexID-join-var
- name: index named right before index becomes public
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.IndexName'
    - $to[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $from-target[TargetStatus] = PUBLIC
    - $to-target[TargetStatus] = PUBLIC
    - $from-node[CurrentStatus] = PUBLIC
    - $to-node[CurrentStatus] = PUBLIC
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
    - $from[IndexID] = $IndexID-join-var
    - $to[IndexID] = $IndexID-join-var
- name: index unnamed after index no longer public
  from: from-node
  to: to-node
  query:
    - $from[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $to[Type] = '*scpb.IndexName'
    - $from-target[TargetStatus] = ABSENT
    - $to-target[TargetStatus] = ABSENT
    - $from-node[CurrentStatus] = VALIDATED
    - $to-node[CurrentStatus] = ABSENT
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
    - $from[IndexID] = $IndexID-join-var
    - $to[IndexID] = $IndexID-join-var
- name: index unnamed before index no longer exists
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.IndexName'
    - $to[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $from-target[TargetStatus] = ABSENT
    - $to-target[TargetStatus] = ABSENT
    - $from-node[CurrentStatus] = ABSENT
    - $to-node[CurrentStatus] = ABSENT
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
    - $from[IndexID] = $IndexID-join-var
    - $to[IndexID] = $IndexID-join-var
- name: column must come into existence before being named
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.Column'
    - $to[Type] = '*scpb.ColumnName'
    - $from-target[TargetStatus] = PUBLIC
    - $to-target[TargetStatus] = PUBLIC
    - $from-node[CurrentStatus] = DELETE_ONLY
    - $to-node[CurrentStatus] = PUBLIC
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
    - $from[ColumnID] = $ColumnID-join-var
    - $to[ColumnID] = $ColumnID-join-var
- name: column named right before column becomes public
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.ColumnName'
    - $to[Type] = '*scpb.Column'
    - $from-target[TargetStatus] = PUBLIC
    - $to-target[TargetStatus] = PUBLIC
    - $from-node[CurrentStatus] = PUBLIC
    - $to-node[CurrentStatus] = PUBLIC
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
    - $from[ColumnID] = $ColumnID-join-var
    - $to[ColumnID] = $ColumnID-join-var
- name: column unnamed after column no longer public
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.Column'
    - $to[Type] = '*scpb.ColumnName'
    - $from-target[TargetStatus] = ABSENT
    - $to-target[TargetStatus] = ABSENT
    - $from-node[CurrentStatus] = DELETE_AND_WRITE_ONLY
    - $to-node[CurrentStatus] = ABSENT
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
    - $from[ColumnID] = $ColumnID-join-var
    - $to[ColumnID] = $ColumnID-join-var
- name: column unnamed before column no longer exists
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.ColumnName'
    - $to[Type] = '*scpb.Column'
    - $from-target[TargetStatus] = ABSENT
    - $to-target[TargetStatus] = ABSENT
    - $from-node[CurrentStatus] = ABSENT
    - $to-node[CurrentStatus] = ABSENT
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
    - $from[ColumnID] = $ColumnID-join-var
    - $to[ColumnID] = $ColumnID-join-var
- name: column depends on indexes
  from: index-node
  to: column-node
  query:
    - $status IN [DELETE_AND_WRITE_ONLY, PUBLIC]
    - $target-status = PUBLIC
    - $column[Type] = '*scpb.Column'
    - $index[Type] = '*scpb.PrimaryIndex'
    - $column[DescID] = $id
    - $index[DescID] = $id
    - columnInIndex(*scpb.Column, scpb.Element)($column, $index)
    - $column-target[TargetStatus] = $target-status
    - $index-target[TargetStatus] = $target-status
    - $column-node[CurrentStatus] = $status
    - $index-node[CurrentStatus] = $status
    - $column-target[Type] = '*scpb.Target'
    - $column-target[Element] = $column
    - $column-node[Type] = '*screl.Node'
    - $column-node[Target] = $column-target
    - $index-target[Type] = '*scpb.Target'
    - $index-target[Element] = $index
    - $index-node[Type] = '*screl.Node'
    - $index-node[Target] = $index-target
- name: column existence precedes index existence
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.Column'
    - $to[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $from-target[TargetStatus] = PUBLIC
    - $to-target[TargetStatus] = PUBLIC
    - $from-node[CurrentStatus] = DELETE_ONLY
    - $to-node[CurrentStatus] = DELETE_ONLY
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*screl.Node'
    - $from-node[Target] = $from-target
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*screl.Node'
    - $to-node[Target] = $to-target
    - $from[DescID] = $DescID-join-var
    - $to[DescID] = $DescID-join-var
    - column-featured-in-index(*scpb.Column, scpb.Element)($from, $to)
