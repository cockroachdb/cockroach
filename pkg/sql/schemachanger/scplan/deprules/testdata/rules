rules
----
- name: parent dependencies
  from: parent-node
  to: other-node
  query:
    - $parent[Type] IN ['*scpb.Database', '*scpb.Schema']
    - $other[Type] IN ['*scpb.Type', '*scpb.Table', '*scpb.View', '*scpb.Sequence']
    - parentDependsOn(scpb.Element, scpb.Element)($parent, $other)
    - $parent-target[Type] = '*scpb.Target'
    - $parent-target[Element] = $parent
    - $parent-node[Type] = '*scpb.Node'
    - $parent-node[Target] = $parent-target
    - $parent-target[Direction] = DROP
    - $parent-node[Status] IN [DELETE_ONLY, DELETE_AND_WRITE_ONLY]
    - $other-target[Type] = '*scpb.Target'
    - $other-target[Element] = $other
    - $other-node[Type] = '*scpb.Node'
    - $other-node[Target] = $other-target
    - $other-target[Direction] = DROP
    - $other-node[Status] = ABSENT
- name: sequence owned by being dropped relies on sequence entering delete only
  from: owned-by-node
  to: seq-node
  query:
    - $owned-by[Type] = '*scpb.SequenceOwnedBy'
    - $seq[Type] = '*scpb.Sequence'
    - $owned-by[DescID] = $id
    - $seq[DescID] = $id
    - $owned-by-target[Type] = '*scpb.Target'
    - $owned-by-target[Element] = $owned-by
    - $owned-by-node[Type] = '*scpb.Node'
    - $owned-by-node[Target] = $owned-by-target
    - $owned-by-target[Direction] = DROP
    - $owned-by-node[Status] = ABSENT
    - $seq-target[Type] = '*scpb.Target'
    - $seq-target[Element] = $seq
    - $seq-node[Type] = '*scpb.Node'
    - $seq-node[Target] = $seq-target
    - $seq-target[Direction] = DROP
    - $seq-node[Status] = ABSENT
- name: table drop in public depends on absent sequence owned by?
  from: tab-node
  to: owned-by-node
  query:
    - $tab[Type] = '*scpb.Table'
    - $owned-by[Type] = '*scpb.SequenceOwnedBy'
    - $tab[DescID] = $id
    - $owned-by[ReferencedDescID] = $id
    - $tab-target[Type] = '*scpb.Target'
    - $tab-target[Element] = $tab
    - $tab-node[Type] = '*scpb.Node'
    - $tab-node[Target] = $tab-target
    - $tab-target[Direction] = DROP
    - $tab-node[Status] = PUBLIC
    - $owned-by-target[Type] = '*scpb.Target'
    - $owned-by-target[Element] = $owned-by
    - $owned-by-node[Type] = '*scpb.Node'
    - $owned-by-node[Target] = $owned-by-target
    - $owned-by-target[Direction] = DROP
    - $owned-by-node[Status] = ABSENT
- name: type reference something
  from: type-node
  to: type-ref-node
  query:
    - $type[Type] = '*scpb.Type'
    - $type-ref[Type] = '*scpb.TypeReference'
    - $type[DescID] = $id
    - $type-ref[ReferencedDescID] = $id
    - $type-target[Type] = '*scpb.Target'
    - $type-target[Element] = $type
    - $type-node[Type] = '*scpb.Node'
    - $type-node[Target] = $type-target
    - $type-target[Direction] = DROP
    - $type-node[Status] = PUBLIC
    - $type-ref-target[Type] = '*scpb.Target'
    - $type-ref-target[Element] = $type-ref
    - $type-ref-node[Type] = '*scpb.Node'
    - $type-ref-node[Target] = $type-ref-target
    - $type-ref-target[Direction] = DROP
    - $type-ref-node[Status] = ABSENT
- name: view depends on view
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.View'
    - $to[Type] = '*scpb.View'
    - depended-on-by(*scpb.View, *scpb.View)($from, $to)
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*scpb.Node'
    - $from-node[Target] = $from-target
    - $from-target[Direction] = DROP
    - $from-node[Status] = ABSENT
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*scpb.Node'
    - $to-node[Target] = $to-target
    - $to-target[Direction] = DROP
    - $to-node[Status] = ABSENT
- name: table drop depended on by on view
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.Table'
    - $to[Type] = '*scpb.View'
    - viewDependsOnTable(*scpb.View, *scpb.Table)($to, $from)
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*scpb.Node'
    - $from-node[Target] = $from-target
    - $from-target[Direction] = DROP
    - $from-node[Status] = PUBLIC
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*scpb.Node'
    - $to-node[Target] = $to-target
    - $to-target[Direction] = DROP
    - $to-node[Status] = ABSENT
- name: view depends on type
  from: from-node
  to: to-node
  query:
    - $from[Type] = '*scpb.View'
    - $to[Type] = '*scpb.TypeReference'
    - $from[DescID] = $id
    - $to[DescID] = $id
    - $from-target[Type] = '*scpb.Target'
    - $from-target[Element] = $from
    - $from-node[Type] = '*scpb.Node'
    - $from-node[Target] = $from-target
    - $from-target[Direction] = DROP
    - $from-node[Status] = ABSENT
    - $to-target[Type] = '*scpb.Target'
    - $to-target[Element] = $to
    - $to-node[Type] = '*scpb.Node'
    - $to-node[Target] = $to-target
    - $to-target[Direction] = DROP
    - $to-node[Status] = ABSENT
- name: column depends on indexes
  from: column-node
  to: index-node
  query:
    - $status IN [DELETE_AND_WRITE_ONLY, PUBLIC]
    - $direction = ADD
    - $column[Type] = '*scpb.Column'
    - $index[Type] IN ['*scpb.PrimaryIndex', '*scpb.SecondaryIndex']
    - $column[DescID] = $id
    - $index[DescID] = $id
    - columnInIndex(*scpb.Column, scpb.Element)($column, $index)
    - $column-target[Direction] = $direction
    - $index-target[Direction] = $direction
    - $column-node[Status] = $status
    - $index-node[Status] = $status
    - $column-target[Type] = '*scpb.Target'
    - $column-target[Element] = $column
    - $column-node[Type] = '*scpb.Node'
    - $column-node[Target] = $column-target
    - $index-target[Type] = '*scpb.Target'
    - $index-target[Element] = $index
    - $index-node[Type] = '*scpb.Node'
    - $index-node[Target] = $index-target
- name: primary index add depends on drop
  from: add-idx-node
  to: drop-idx-node
  query:
    - $add-idx[Type] = '*scpb.PrimaryIndex'
    - $drop-idx[Type] = '*scpb.PrimaryIndex'
    - $add-idx[DescID] = $id
    - $drop-idx[DescID] = $id
    - referenceEachOther(*scpb.PrimaryIndex, *scpb.PrimaryIndex)($add-idx, $drop-idx)
    - $add-idx-target[Type] = '*scpb.Target'
    - $add-idx-target[Element] = $add-idx
    - $add-idx-node[Type] = '*scpb.Node'
    - $add-idx-node[Target] = $add-idx-target
    - $add-idx-target[Direction] = ADD
    - $add-idx-node[Status] = PUBLIC
    - $drop-idx-target[Type] = '*scpb.Target'
    - $drop-idx-target[Element] = $drop-idx
    - $drop-idx-node[Type] = '*scpb.Node'
    - $drop-idx-node[Target] = $drop-idx-target
    - $drop-idx-target[Direction] = DROP
    - $drop-idx-node[Status] = DELETE_AND_WRITE_ONLY
- name: primary index drop depends on add
  from: drop-idx-node
  to: add-idx-node
  query:
    - $add-idx[Type] = '*scpb.PrimaryIndex'
    - $drop-idx[Type] = '*scpb.PrimaryIndex'
    - $add-idx[DescID] = $id
    - $drop-idx[DescID] = $id
    - referenceEachOther(*scpb.PrimaryIndex, *scpb.PrimaryIndex)($add-idx, $drop-idx)
    - $add-idx-target[Type] = '*scpb.Target'
    - $add-idx-target[Element] = $add-idx
    - $add-idx-node[Type] = '*scpb.Node'
    - $add-idx-node[Target] = $add-idx-target
    - $add-idx-target[Direction] = ADD
    - $add-idx-node[Status] = PUBLIC
    - $drop-idx-target[Type] = '*scpb.Target'
    - $drop-idx-target[Element] = $drop-idx
    - $drop-idx-node[Type] = '*scpb.Node'
    - $drop-idx-node[Target] = $drop-idx-target
    - $drop-idx-target[Direction] = DROP
    - $drop-idx-node[Status] = DELETE_AND_WRITE_ONLY
- name: sequence default expr
  from: seq-node
  to: def-expr-node
  query:
    - $seq[Type] = '*scpb.Sequence'
    - $def-expr[Type] = '*scpb.DefaultExpression'
    - defaultExpressionUsesSequence(*scpb.Sequence, *scpb.DefaultExpression)($seq, $def-expr)
    - $seq-target[Type] = '*scpb.Target'
    - $seq-target[Element] = $seq
    - $seq-node[Type] = '*scpb.Node'
    - $seq-node[Target] = $seq-target
    - $seq-target[Direction] = DROP
    - $seq-node[Status] = PUBLIC
    - $def-expr-target[Type] = '*scpb.Target'
    - $def-expr-target[Element] = $def-expr
    - $def-expr-node[Type] = '*scpb.Node'
    - $def-expr-node[Target] = $def-expr-target
    - $def-expr-target[Direction] = DROP
    - $def-expr-node[Status] = ABSENT
- name: table default expr
  from: tab-node
  to: def-expr-node
  query:
    - $tab[Type] = '*scpb.Table'
    - $def-expr[Type] = '*scpb.DefaultExpression'
    - $tab[DescID] = $id
    - $def-expr[DescID] = $id
    - $tab-target[Type] = '*scpb.Target'
    - $tab-target[Element] = $tab
    - $tab-node[Type] = '*scpb.Node'
    - $tab-node[Target] = $tab-target
    - $tab-target[Direction] = DROP
    - $tab-node[Status] = PUBLIC
    - $def-expr-target[Type] = '*scpb.Target'
    - $def-expr-target[Element] = $def-expr
    - $def-expr-node[Type] = '*scpb.Node'
    - $def-expr-node[Target] = $def-expr-target
    - $def-expr-target[Direction] = DROP
    - $def-expr-node[Status] = ABSENT
- name: table drop relation depended on
  from: tab-node
  to: rel-dep-node
  query:
    - $tab[Type] = '*scpb.Table'
    - $rel-dep[Type] = '*scpb.RelationDependedOnBy'
    - $tab[DescID] = $dep-id
    - $rel-dep[ReferencedDescID] = $dep-id
    - $tab-target[Type] = '*scpb.Target'
    - $tab-target[Element] = $tab
    - $tab-node[Type] = '*scpb.Node'
    - $tab-node[Target] = $tab-target
    - $tab-target[Direction] = DROP
    - $tab-node[Status] = PUBLIC
    - $rel-dep-target[Type] = '*scpb.Target'
    - $rel-dep-target[Element] = $rel-dep
    - $rel-dep-node[Type] = '*scpb.Node'
    - $rel-dep-node[Target] = $rel-dep-target
    - $rel-dep-target[Direction] = DROP
    - $rel-dep-node[Status] = ABSENT
- name: table drop depends on outbound fk
  from: tab-node
  to: fk-node
  query:
    - $tab[Type] = '*scpb.Table'
    - $fk[Type] = '*scpb.OutboundForeignKey'
    - $tab[DescID] = $dep-id
    - $fk[DescID] = $dep-id
    - $tab-target[Type] = '*scpb.Target'
    - $tab-target[Element] = $tab
    - $tab-node[Type] = '*scpb.Node'
    - $tab-node[Target] = $tab-target
    - $tab-target[Direction] = DROP
    - $tab-node[Status] = PUBLIC
    - $fk-target[Type] = '*scpb.Target'
    - $fk-target[Element] = $fk
    - $fk-node[Type] = '*scpb.Node'
    - $fk-node[Target] = $fk-target
    - $fk-target[Direction] = DROP
    - $fk-node[Status] = ABSENT
