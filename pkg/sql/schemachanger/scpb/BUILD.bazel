load("//build/bazelutil/unused_checker:unused.bzl", "get_x_data")
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "scpb",
    srcs = [
        "constants.go",
        "migration.go",
        "state.go",
        "transient.go",
        ":gen-elements-interface",  # keep
    ],
    embed = [":scpb_go_proto"],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/schemachanger/scpb",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/clusterversion",
        "//pkg/security/username",  # keep
        "//pkg/sql/catalog/catpb",  # keep
        "//pkg/sql/privilege",  # keep
        "//pkg/sql/sem/catid",  # keep
        "//pkg/sql/sem/tree",  # keep
        "//pkg/util/protoutil",
        "@com_github_cockroachdb_errors//:errors",
    ],
)

go_proto_library(
    name = "scpb_go_proto",
    compilers = ["//pkg/cmd/protoc-gen-gogoroach:protoc-gen-gogoroach_compiler"],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/schemachanger/scpb",
    proto = ":scpb_proto",
    visibility = ["//visibility:public"],
    deps = [
        "//geo/geoindex:config_proto",
        "//pkg/sql/sem/catid",  # keep
        "//sql/catalog/catenumpb:index_proto",
        "//sql/catalog/catpb:catalog_proto",
        "//sql/catalog/catpb:function_proto",
        "//sql/schemachanger/scpb:elements_proto",
        "//sql/sem/semenumpb:constraint_proto",
        "//sql/types:types_proto",
        "@com_github_gogo_protobuf//gogoproto",
    ],
)

proto_library(
    name = "scpb_proto",
    srcs = [
        "elements.proto",
        "scpb.proto",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//geo/geoindex:geoindex_proto",
        "//sql/catalog/catenumpb:catenumpb_proto",
        "//sql/catalog/catpb:catpb_proto",
        "//sql/schemachanger/scpb:scpb_proto",
        "//sql/sem/semenumpb:semenumpb_proto",
        "//sql/types:types_proto",
        "@com_github_gogo_protobuf//gogoproto:gogo_proto",
    ],
)

go_binary(
    name = "element-generator",
    srcs = ["element_generator.go"],
    gotags = ["generator"],
    deps = ["//pkg/cli/exit"],
)

genrule(
    name = "gen-elements-interface",
    srcs = [
        "elements.proto",
    ],
    outs = ["elements_generated.go"],
    cmd = """
        $(location :element-generator) --in $< --out $(location elements_generated.go)
       """,
    exec_tools = [
        ":element-generator",
    ],
    visibility = [
        ":__pkg__",
        "//pkg/gen:__pkg__",
    ],
)

go_binary(
    name = "element-uml-generator",
    srcs = ["element_uml_generator.go"],
    gotags = ["generator"],
    deps = [
        "//pkg/cli/exit",
        "//pkg/sql/schemachanger/scpb",
    ],
)

genrule(
    name = "gen-elements-uml",
    outs = ["uml/table.puml"],
    cmd = """
        $(location :element-uml-generator) --out $(location uml/table.puml)
       """,
    exec_tools = [
        ":element-uml-generator",
    ],
    visibility = [
        ":__pkg__",
        "//pkg/gen:__pkg__",
    ],
)

get_x_data(name = "get_x_data")
