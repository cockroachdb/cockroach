load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "pgwire",
    srcs = [
        "auth.go",
        "auth_methods.go",
        "command_result.go",
        "conn.go",
        "hba_conf.go",
        "server.go",
        "types.go",
        "write_buffer.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/pgwire",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/base",
        "//pkg/clusterversion",
        "//pkg/security",
        "//pkg/server/telemetry",
        "//pkg/settings",
        "//pkg/settings/cluster",
        "//pkg/sql",
        "//pkg/sql/catalog/catalogkeys",
        "//pkg/sql/catalog/colinfo",
        "//pkg/sql/lex",
        "//pkg/sql/parser",
        "//pkg/sql/pgwire/hba",
        "//pkg/sql/pgwire/pgcode",
        "//pkg/sql/pgwire/pgerror",
        "//pkg/sql/pgwire/pgnotice",
        "//pkg/sql/pgwire/pgwirebase",
        "//pkg/sql/sem/tree",
        "//pkg/sql/sessiondatapb",
        "//pkg/sql/sqltelemetry",
        "//pkg/sql/types",
        "//pkg/util",
        "//pkg/util/contextutil",
        "//pkg/util/duration",
        "//pkg/util/envutil",
        "//pkg/util/errorutil/unimplemented",
        "//pkg/util/humanizeutil",
        "//pkg/util/ipaddr",
        "//pkg/util/log",
        "//pkg/util/log/eventpb",
        "//pkg/util/metric",
        "//pkg/util/mon",
        "//pkg/util/ring",
        "//pkg/util/stop",
        "//pkg/util/syncutil",
        "//pkg/util/timeofday",
        "//pkg/util/timetz",
        "//pkg/util/timeutil",
        "@com_github_cockroachdb_apd_v2//:apd",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_cockroachdb_logtags//:logtags",
        "@com_github_cockroachdb_redact//:redact",
        "@com_github_lib_pq//oid",
    ],
)

go_test(
    name = "pgwire_test",
    size = "medium",
    srcs = [
        "auth_test.go",
        "conn_test.go",
        "encoding_test.go",
        "helpers_test.go",
        "main_test.go",
        "pgtest_test.go",
        "pgwire_test.go",
        "types_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":pgwire"],
    deps = [
        "//pkg/base",
        "//pkg/security",
        "//pkg/security/securitytest",
        "//pkg/server",
        "//pkg/server/telemetry",
        "//pkg/settings/cluster",
        "//pkg/sql",
        "//pkg/sql/catalog/colinfo",
        "//pkg/sql/parser",
        "//pkg/sql/pgwire/hba",
        "//pkg/sql/pgwire/pgcode",
        "//pkg/sql/pgwire/pgerror",
        "//pkg/sql/pgwire/pgwirebase",
        "//pkg/sql/randgen",
        "//pkg/sql/sem/tree",
        "//pkg/sql/sessiondata",
        "//pkg/sql/sessiondatapb",
        "//pkg/sql/sqlutil",
        "//pkg/sql/tests",
        "//pkg/sql/types",
        "//pkg/testutils",
        "//pkg/testutils/pgtest",
        "//pkg/testutils/serverutils",
        "//pkg/testutils/skip",
        "//pkg/testutils/sqlutils",
        "//pkg/testutils/testcluster",
        "//pkg/util",
        "//pkg/util/leaktest",
        "//pkg/util/log",
        "//pkg/util/log/channel",
        "//pkg/util/log/logconfig",
        "//pkg/util/metric",
        "//pkg/util/mon",
        "//pkg/util/randutil",
        "//pkg/util/timeutil",
        "//pkg/util/uuid",
        "@com_github_cockroachdb_apd_v2//:apd",
        "@com_github_cockroachdb_datadriven//:datadriven",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_cockroachdb_errors//stdstrings",
        "@com_github_cockroachdb_redact//:redact",
        "@com_github_jackc_pgproto3_v2//:pgproto3",
        "@com_github_jackc_pgx//:pgx",
        "@com_github_lib_pq//:pq",
        "@com_github_lib_pq//oid",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_sync//errgroup",
    ],
)
