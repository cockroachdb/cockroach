# Verify system-identity to database-user substitutions.

config secure
----


# Set HBA to add an ident map.
set_hba
host  all all  all cert-password map=testing
local all all      password      map=testing
----
# Active authentication configuration on this node:
# Original configuration:
# host  all root all cert-password # CockroachDB mandatory rule
# host  all all  all cert-password map=testing
# local all all      password      map=testing
#
# Interpreted configuration:
# TYPE DATABASE USER ADDRESS METHOD        OPTIONS
host   all      root all     cert-password
host   all      all  all     cert-password map=testing
local  all      all          password      map=testing

set_identity_map
testing testuser carl               # Exact remapping
testing /(.*)@cockroachlabs.com \1  # Generalized domain mapping
testing testuser another_carl       # Verify first-one-wins
testing will_be_carl carl           # Another user for password testing
----
# Active authentication configuration on this node:
# Original configuration:
# host  all root all cert-password # CockroachDB mandatory rule
# host  all all  all cert-password map=testing
# local all all      password      map=testing
#
# Interpreted configuration:
# TYPE DATABASE USER ADDRESS METHOD        OPTIONS
host   all      root all     cert-password
host   all      all  all     cert-password map=testing
local  all      all          password      map=testing
# Active identity mapping on this node:
# Original configuration:
# testing testuser carl               # Exact remapping
# testing /(.*)@cockroachlabs.com \1  # Generalized domain mapping
# testing testuser another_carl       # Verify first-one-wins
# testing will_be_carl carl           # Another user for password testing
# Active configuration:
# map-name system-username        database-username
testing    ^testuser$             carl
testing    (.*)@cockroachlabs.com \1                # substituteAt=0
testing    ^testuser$             another_carl
testing    ^will_be_carl$         carl

sql
CREATE USER carl WITH PASSWORD 'doggo';
CREATE USER will_be_carl WITH PASSWORD 'oggod';
----
ok


subtest password_still_works_with_db_username

# Sanity-check the database user
connect user=carl database=mydb password=doggo
----
ok mydb

authlog 6
.*client_connection_end
----
5 {"EventType":"client_connection_start","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}
6 {"EventType":"client_authentication_info","Info":"HBA rule: host  all all  all cert-password map=testing","InstanceID":1,"Method":"cert-password","Network":"tcp","RemoteAddress":"XXX","SystemIdentity":"carl","Timestamp":"XXX","Transport":"hostssl"}
7 {"EventType":"client_authentication_info","Info":"no client certificate, proceeding with password authentication","InstanceID":1,"Method":"cert-password","Network":"tcp","RemoteAddress":"XXX","SystemIdentity":"carl","Timestamp":"XXX","Transport":"hostssl"}
8 {"EventType":"client_authentication_ok","InstanceID":1,"Method":"cert-password","Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX","Transport":"hostssl","User":"carl"}
9 {"Duration":"NNN","EventType":"client_session_end","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}
10 {"Duration":"NNN","EventType":"client_connection_end","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}

subtest end


# This test verifies that we validate the password of an incoming
# username-based request before any remapping occurs.
subtest password_evaluated_before_remapping

connect user=carl@cockroachlabs.com database=mydb password=doggo
----
ERROR: password authentication failed for user carl@cockroachlabs.com (SQLSTATE 28000)

authlog 5
.*client_connection_end
----
11 {"EventType":"client_connection_start","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}
12 {"EventType":"client_authentication_info","Info":"HBA rule: host  all all  all cert-password map=testing","InstanceID":1,"Method":"cert-password","Network":"tcp","RemoteAddress":"XXX","SystemIdentity":"carl@cockroachlabs.com","Timestamp":"XXX","Transport":"hostssl"}
13 {"EventType":"client_authentication_failed","InstanceID":1,"Method":"cert-password","Network":"tcp","Reason":2,"RemoteAddress":"XXX","SystemIdentity":"carl@cockroachlabs.com","Timestamp":"XXX","Transport":"hostssl"}
14 {"Duration":"NNN","EventType":"client_session_end","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}
15 {"Duration":"NNN","EventType":"client_connection_end","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}

subtest end

# Verify the good path, where we verify the password against the
# system identity and get a remapping.
subtest password_remapped_user_ok

connect user=will_be_carl database=mydb password=oggod
----
ok mydb

authlog 6
.*client_connection_end
----
16 {"EventType":"client_connection_start","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}
17 {"EventType":"client_authentication_info","Info":"HBA rule: host  all all  all cert-password map=testing","InstanceID":1,"Method":"cert-password","Network":"tcp","RemoteAddress":"XXX","SystemIdentity":"will_be_carl","Timestamp":"XXX","Transport":"hostssl"}
18 {"EventType":"client_authentication_info","Info":"no client certificate, proceeding with password authentication","InstanceID":1,"Method":"cert-password","Network":"tcp","RemoteAddress":"XXX","SystemIdentity":"will_be_carl","Timestamp":"XXX","Transport":"hostssl"}
19 {"EventType":"client_authentication_ok","InstanceID":1,"Method":"cert-password","Network":"tcp","RemoteAddress":"XXX","SystemIdentity":"will_be_carl","Timestamp":"XXX","Transport":"hostssl","User":"carl"}
20 {"Duration":"NNN","EventType":"client_session_end","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}
21 {"Duration":"NNN","EventType":"client_connection_end","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}

subtest end

# Connect as the magic "testuser" since that comes pre-equipped with a cert.
subtest certificate

connect user=testuser database=mydb
----
ok mydb

authlog 6
.*client_connection_end
----
22 {"EventType":"client_connection_start","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}
23 {"EventType":"client_authentication_info","Info":"HBA rule: host  all all  all cert-password map=testing","InstanceID":1,"Method":"cert-password","Network":"tcp","RemoteAddress":"XXX","SystemIdentity":"testuser","Timestamp":"XXX","Transport":"hostssl"}
24 {"EventType":"client_authentication_info","Info":"client presented certificate, proceeding with certificate validation","InstanceID":1,"Method":"cert-password","Network":"tcp","RemoteAddress":"XXX","SystemIdentity":"testuser","Timestamp":"XXX","Transport":"hostssl"}
25 {"EventType":"client_authentication_ok","InstanceID":1,"Method":"cert-password","Network":"tcp","RemoteAddress":"XXX","SystemIdentity":"testuser","Timestamp":"XXX","Transport":"hostssl","User":"carl"}
26 {"Duration":"NNN","EventType":"client_session_end","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}
27 {"Duration":"NNN","EventType":"client_connection_end","InstanceID":1,"Network":"tcp","RemoteAddress":"XXX","Timestamp":"XXX"}

subtest end

# Clean up

set_identity_map
----
# Active authentication configuration on this node:
# Original configuration:
# host  all root all cert-password # CockroachDB mandatory rule
# host  all all  all cert-password map=testing
# local all all      password      map=testing
#
# Interpreted configuration:
# TYPE DATABASE USER ADDRESS METHOD        OPTIONS
host   all      root all     cert-password
host   all      all  all     cert-password map=testing
local  all      all          password      map=testing

set_hba
----
# Active authentication configuration on this node:
# Original configuration:
# host  all root all cert-password # CockroachDB mandatory rule
# host  all all  all cert-password # built-in CockroachDB default
# local all all      password      # built-in CockroachDB default
#
# Interpreted configuration:
# TYPE DATABASE USER ADDRESS METHOD        OPTIONS
host   all      root all     cert-password
host   all      all  all     cert-password
local  all      all          password
