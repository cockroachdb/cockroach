# These tests verify that changing a user's password also causes
# further authentications to take the new password into account.

config secure
----

subtest regular_user

sql
CREATE USER userpw WITH PASSWORD 'pass'
----
ok

# sanity check: without a password, auth is denied.
connect user=userpw
----
ERROR: password authentication failed for user userpw

# with the proper pass, auth succeeds.
connect user=userpw password=pass
----
ok defaultdb

# Changing the password causes the previous password to fail
# and the new one to succeed.

sql
ALTER USER userpw WITH PASSWORD 'pass2'
----
ok

connect user=userpw password=pass
----
ERROR: password authentication failed for user userpw

connect user=userpw password=pass2
----
ok defaultdb


# Erasing the password forces cert authentication.

sql
ALTER USER userpw WITH PASSWORD NULL
----
ok

connect user=userpw password=pass2
----
ERROR: password authentication failed for user userpw

connect user=userpw
----
ERROR: password authentication failed for user userpw

subtest end

subtest root_pw

# By default root cannot log in with a password.
connect user=root sslmode=require sslcert= sslkey=
----
ERROR: password authentication failed for user root

connect_unix user=root
----
ERROR: password authentication failed for user root


# However if we give them a password, they can log in with password.
sql
ALTER USER root WITH PASSWORD 'secureabc'
----
ok

# Then they can log in.
connect user=root password=secureabc sslmode=require sslcert= sslkey=
----
ok defaultdb

connect_unix user=root password=secureabc
----
ok defaultdb

subtest end
