# This test relies on a CoockroachDB-specific feature, so everything
# is marked as crdb_only.

send crdb_only
Query {"String": "SELECT pg_sleep(0.1)"}
----

until crdb_only
ReadyForQuery
----
{"Type":"RowDescription","Fields":[{"Name":"pg_sleep","TableOID":0,"TableAttributeNumber":0,"DataTypeOID":16,"DataTypeSize":1,"TypeModifier":-1,"Format":0}]}
{"Type":"DataRow","Values":[{"text":"t"}]}
{"Type":"CommandComplete","CommandTag":"SELECT 1"}
{"Type":"ReadyForQuery","TxStatus":"I"}

send crdb_only
Query {"String": "CREATE TABLE tab(a INT8)"}
----

until crdb_only
ReadyForQuery
----
{"Type":"CommandComplete","CommandTag":"CREATE TABLE"}
{"Type":"ReadyForQuery","TxStatus":"I"}

# Make sure AOST is handled during Parse. Preparing the statement should
# fail since the table did not exist in the past.
send crdb_only
Parse {"Name": "s0", "Query": "SELECT * FROM tab AS OF SYSTEM TIME '-0.05s'"}
Sync
----

until crdb_only
ErrorResponse
ReadyForQuery
----
{"Type":"ErrorResponse","Code":"42P01"}
{"Type":"ReadyForQuery","TxStatus":"I"}

send crdb_only
Query {"String": "SELECT pg_sleep(0.1)"}
----

until crdb_only
ReadyForQuery
----
{"Type":"RowDescription","Fields":[{"Name":"pg_sleep","TableOID":0,"TableAttributeNumber":0,"DataTypeOID":16,"DataTypeSize":1,"TypeModifier":-1,"Format":0}]}
{"Type":"DataRow","Values":[{"text":"t"}]}
{"Type":"CommandComplete","CommandTag":"SELECT 1"}
{"Type":"ReadyForQuery","TxStatus":"I"}


send crdb_only
Query {"String": "INSERT INTO tab VALUES(1)"}
----

until crdb_only
ReadyForQuery
----
{"Type":"CommandComplete","CommandTag":"INSERT 0 1"}
{"Type":"ReadyForQuery","TxStatus":"I"}

# Make sure AOST is handled consistently during Parse/Bind/Execute. This should
# succeed, but should not be able to read the data that was added to the table.
send crdb_only
Parse {"Name": "historical_stmt", "Query": "SELECT * FROM tab AS OF SYSTEM TIME '-0.05s'"}
Bind {"DestinationPortal": "p1", "PreparedStatement": "historical_stmt"}
Execute {"Portal": "p1"}
Sync
----

until crdb_only
ReadyForQuery
----
{"Type":"ParseComplete"}
{"Type":"BindComplete"}
{"Type":"CommandComplete","CommandTag":"SELECT 0"}
{"Type":"ReadyForQuery","TxStatus":"I"}

# Make sure AOST is handled consistently during Bind/Execute. This also should
# not be able to see the data in the table, since this is a historical read.
send crdb_only
Bind {"DestinationPortal": "p2", "PreparedStatement": "historical_stmt"}
Execute {"Portal": "p2"}
Sync
----

until crdb_only
ReadyForQuery
----
{"Type":"BindComplete"}
{"Type":"CommandComplete","CommandTag":"SELECT 0"}
{"Type":"ReadyForQuery","TxStatus":"I"}

send crdb_only
Query {"String": "SELECT pg_sleep(0.1)"}
----

until crdb_only
ReadyForQuery
----
{"Type":"RowDescription","Fields":[{"Name":"pg_sleep","TableOID":0,"TableAttributeNumber":0,"DataTypeOID":16,"DataTypeSize":1,"TypeModifier":-1,"Format":0}]}
{"Type":"DataRow","Values":[{"text":"t"}]}
{"Type":"CommandComplete","CommandTag":"SELECT 1"}
{"Type":"ReadyForQuery","TxStatus":"I"}

# Now, Bind/Execute again should be able to see the data.
send crdb_only
Bind {"DestinationPortal": "p3", "PreparedStatement": "historical_stmt"}
Execute {"Portal": "p3"}
Sync
----

until crdb_only
ReadyForQuery
----
{"Type":"BindComplete"}
{"Type":"DataRow","Values":[{"text":"1"}]}
{"Type":"CommandComplete","CommandTag":"SELECT 1"}
{"Type":"ReadyForQuery","TxStatus":"I"}
