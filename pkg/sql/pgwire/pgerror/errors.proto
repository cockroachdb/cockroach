// Copyright 2016 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

syntax = "proto3";
package cockroach.pgerror;
option go_package = "pgerror";

// Error contains all Postgres wire protocol error fields.
// See https://www.postgresql.org/docs/current/static/protocol-error-fields.html
// for a list of all Postgres error fields, most of which are optional and can
// be used to provide auxiliary error information.
message Error {
  // standard pg error fields. This can be passed
  // over the pg wire protocol.
  string code = 1;
  string message = 2;
  string detail = 3;
  string hint = 4;

  message Source {
      string file = 1;
      int32 line = 2;
      string function = 3;
  }
  Source source = 5;

  // Internal CockroachDB fields. These are used
  // for internal error management.

  // a telemetry key, used as telemetry counter name.
  // Typically of the form [<prefix>.]#issuenum[.details]
  //
  // Note: this field is obsolete. It is preserved for compatibility
  // with nodes running 19.1:
  //
  // - when an error with this field populated is received on a
  //   post-19.1 node, the field is replaced by uses of
  //   errors.WithTelemetryKey. This data is then subsequently used for
  //   troubleshooting reports and telemetry.
  // - Conversely, errors sent towards a 19.1 node will get this field
  //   populated with the first key found in errors.GetTelemetryKeys().
  //
  // TODO(knz): Remove in 19.3.
  string telemetry_key = 6;

  message SafeDetail {
	  string safe_message = 1;
	  string encoded_stack_trace = 2;
  }

  // complement to the detail field that can be reported
  // in sentry reports. This is scrubbed of PII.
  //
  // Note: this field is obsolete. It is preserved for compatibility
  // with nodes running 19.1:
  //
  // - when an error with this field populated is received on a
  //   post-19.1 node, the field is replaced by uses of
  //   errors.WithSafeDetail. This data is then subsequently used for
  //   troubleshooting reports.
  // - Conversely, errors sent towards a 19.1 node will get this field
  //   populated with the data from errors.GetSafeDetails().
  //
  // TODO(knz): Remove in 19.3.
  repeated SafeDetail safe_detail = 7;
};
