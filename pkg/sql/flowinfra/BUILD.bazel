load("//build/bazelutil/unused_checker:unused.bzl", "get_x_data")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("//pkg/testutils/buildutil:buildutil.bzl", "disallowed_imports_test")

go_library(
    name = "flowinfra",
    srcs = [
        "flow.go",
        "flow_registry.go",
        "flow_scheduler.go",
        "inbound.go",
        "outbox.go",
        "stream_decoder.go",
        "stream_encoder.go",
        "testing_knobs.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/flowinfra",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/base",
        "//pkg/kv",
        "//pkg/multitenant",
        "//pkg/roachpb",
        "//pkg/server/telemetry",
        "//pkg/settings",
        "//pkg/settings/cluster",
        "//pkg/sql/catalog/colinfo",
        "//pkg/sql/catalog/descpb",
        "//pkg/sql/execinfra",
        "//pkg/sql/execinfra/execopnode",
        "//pkg/sql/execinfra/execreleasable",
        "//pkg/sql/execinfrapb",
        "//pkg/sql/pgwire/pgcode",
        "//pkg/sql/pgwire/pgerror",
        "//pkg/sql/rowenc",
        "//pkg/sql/sem/tree",
        "//pkg/sql/sqltelemetry",
        "//pkg/sql/types",
        "//pkg/util/admission",
        "//pkg/util/admission/admissionpb",
        "//pkg/util/cancelchecker",
        "//pkg/util/contextutil",
        "//pkg/util/log",
        "//pkg/util/optional",
        "//pkg/util/stop",
        "//pkg/util/syncutil",
        "//pkg/util/timeutil",
        "//pkg/util/tracing",
        "//pkg/util/uuid",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_cockroachdb_redact//:redact",
        "@com_github_gogo_protobuf//proto",
        "@io_opentelemetry_go_otel//attribute",
    ],
)

go_test(
    name = "flowinfra_test",
    size = "medium",
    srcs = [
        "cluster_test.go",
        "flow_registry_test.go",
        "flow_scheduler_test.go",
        "flow_test.go",
        "main_test.go",
        "outbox_test.go",
        "server_test.go",
        "stream_data_test.go",
        "utils_test.go",
    ],
    args = ["-test.timeout=295s"],
    embed = [":flowinfra"],
    tags = ["no-remote"],
    deps = [
        "//pkg/base",
        "//pkg/ccl/kvccl/kvtenantccl",
        "//pkg/gossip",
        "//pkg/keys",
        "//pkg/kv",
        "//pkg/kv/kvserver",
        "//pkg/kv/kvserver/kvserverbase",
        "//pkg/roachpb",
        "//pkg/rpc",
        "//pkg/rpc/nodedialer",
        "//pkg/security/securityassets",
        "//pkg/security/securitytest",
        "//pkg/security/username",
        "//pkg/server",
        "//pkg/settings/cluster",
        "//pkg/sql",
        "//pkg/sql/catalog/descpb",
        "//pkg/sql/catalog/desctestutils",
        "//pkg/sql/distsql",
        "//pkg/sql/execinfra",
        "//pkg/sql/execinfra/execopnode",
        "//pkg/sql/execinfrapb",
        "//pkg/sql/parser",
        "//pkg/sql/pgwire/pgerror",
        "//pkg/sql/randgen",
        "//pkg/sql/rowenc",
        "//pkg/sql/sem/eval",
        "//pkg/sql/sem/tree",
        "//pkg/sql/sessiondatapb",
        "//pkg/sql/sqlstats",
        "//pkg/sql/tests",
        "//pkg/sql/types",
        "//pkg/testutils",
        "//pkg/testutils/distsqlutils",
        "//pkg/testutils/serverutils",
        "//pkg/testutils/sqlutils",
        "//pkg/testutils/testcluster",
        "//pkg/util/cancelchecker",
        "//pkg/util/encoding",
        "//pkg/util/hlc",
        "//pkg/util/leaktest",
        "//pkg/util/log",
        "//pkg/util/randutil",
        "//pkg/util/stop",
        "//pkg/util/timeutil",
        "//pkg/util/uuid",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_cockroachdb_redact//:redact",
        "@com_github_stretchr_testify//require",
    ],
)

disallowed_imports_test(
    "flowinfra",
    ["//pkg/sql/distsql"],
)

get_x_data(name = "get_x_data")
