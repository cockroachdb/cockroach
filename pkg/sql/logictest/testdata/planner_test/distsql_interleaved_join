# LogicTest: 5node-dist

# The following tables form the interleaved hierarchy:
#   name:             primary key:                # rows:   'a' = id mod X :
#   parent1           (pid1)                      40        8
#     child1          (pid1, cid1)                150       66
#       grandchild1   (pid1, cid1, gcid1)         410       201
#     child2          (pid1, cid2, cid3)          15        7
#       grandchild2   (pid1, cid2, cid3, gcid2)   51        13
#   parent2           (pid2)                      5         2
# Additional rows in child1, child2, and grandchild1 with no corresponding
# parent row are also inserted.
#
# All IDs belonging to a table (pid1 --> parent1, cid1 --> child1, cid2,cid3
# --> child2, etc.) start from 1 up to (# rows).
# Foreign keys are modded by their ancestor's (# rows). For example, for child1
# row with cid1=500, we take ((cid1-1) % 200 + 1) = 100 as pid1.
# One exception is cid3, which is taken as cid2 % 15.
# There's a column 'a' that's modded by a factor.
#
# This allows us to test the following edge cases (in order of tests):
#   - one-to-many (parent1 - child1)
#   - one-to-one and one-to-none (parent1 - child2)
#   - parent-grandchild (parent1 - grandchild1)
#   - multiple interleaved columns (child2 - grandchild2)
#   - additional ancestor above (child2 - grandchild2)
#   - no interleaved relationship (parent1 - parent2, parent2 - child1)
#   - TODO(richardwu): sibling-sibling (child1 - child2)

#################
# Create tables #
#################

statement ok
CREATE TABLE parent1 (pid1 INT PRIMARY KEY, pa1 INT)

statement ok
CREATE TABLE parent2 (pid2 INT PRIMARY KEY, pa2 INT)

statement ok
CREATE TABLE child1 (
  pid1 INT,
  cid1 INT,
  ca1 INT,
  PRIMARY KEY(pid1, cid1)
)
INTERLEAVE IN PARENT parent1 (pid1)

statement ok
CREATE TABLE child2 (
  pid1 INT,
  cid2 INT,
  cid3 INT,
  ca2 INT,
  PRIMARY KEY(pid1, cid2, cid3)
)
INTERLEAVE IN PARENT parent1 (pid1)

statement ok
CREATE TABLE grandchild1 (
  pid1 INT,
  cid1 INT,
  gcid1 INT,
  gca1 INT,
  PRIMARY KEY(pid1, cid1, gcid1)
)
INTERLEAVE IN PARENT child1 (pid1, cid1)

# No foreign key since we are permitting the rows to overflow out of child2
# for pid1 > 15.
statement ok
CREATE TABLE grandchild2 (
  pid1 INT,
  cid2 INT,
  cid3 INT,
  gcid2 INT,
  gca2 INT,
  PRIMARY KEY(pid1, cid2, cid3, gcid2)
)
INTERLEAVE IN PARENT child2 (pid1, cid2, cid3)

####################
# Split our ranges #
####################

# Prevent the merge queue from immediately discarding our splits.
statement ok
SET CLUSTER SETTING kv.range_merge.queue_enabled = false;

# Split at parent1 key into five parts.
statement ok
ALTER TABLE parent1 SPLIT AT SELECT i FROM generate_series(8, 32, 8) AS g(i)

# Split at child1 keys in between parent1 parts (total 10 parts).
statement ok
ALTER TABLE child1 SPLIT AT SELECT pid1, pid1 + 40 FROM
generate_series(4, 36, 8) AS g(pid1)

# Split at grandchild2 keys in between the 10 parts (total 20 parts).
statement ok
ALTER TABLE grandchild2 SPLIT AT SELECT pid1, pid1 + 40, pid1, pid1 FROM
generate_series(2, 38, 4) AS g(pid1)

# Relocate the twenty parts to the five nodes.
statement ok
ALTER TABLE grandchild2 EXPERIMENTAL_RELOCATE
  SELECT ARRAY[((i-1)/2)::INT%5+1], i, i+20, i, i FROM generate_series(1, 39, 2) AS g(i)

# Verify data placement.
query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW EXPERIMENTAL_RANGES FROM TABLE parent1]
----
start_key                   end_key                     replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        {5}       5

query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW EXPERIMENTAL_RANGES FROM TABLE child1]
----
start_key                   end_key                     replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        {5}       5

query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW EXPERIMENTAL_RANGES FROM TABLE grandchild1]
----
start_key                   end_key                     replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        {5}       5

statement ok
SET CLUSTER SETTING sql.distsql.interleaved_joins.enabled = true;

#####################
# Interleaved joins #
#####################

# Select over two ranges for parent/child with split at children key.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMkkFr6zAQhO_vVzzm9B7dEstpL4aCryklKbkWH4S1SQSOZFZyaSn570VWoU5oQ9tTb5ZmZscf2hc4b3ip9xxQPUCBUIIwR0PoxbccgpckZePCPKEqCNb1Q8zX0caOUWFwXgwLGxAMR227pDeHhtB6YVTv1qW_9P2sPDES_BDfxjaEEPWWUZUHmlSrSfUHgxcusnSsH3nN2rDceutYZsVRE-54E5Hw7F7Lc91rYRcT-dpud1Ol3dnOJCHPAaHjTfxXq4v_N5K84ycIqyFWf2tFdUn1FdXX-IxGHdGUP6JRv5SmOE-z5tB7F_hLr16ktWGz5bxjwQ_S8r34dqzJx9WYGy8Mh5jVeT4sXJbSD07D6my4OAqr03D5rXBz-PMaAAD__y7yGHk=

# Swap parent1 and child1 tables.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child1 JOIN parent1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMklFL-zAUxd__n-LPeVK8sqbDl4LQ14lsslfpQ2jutkCXlJtUFNl3lzSC3dChPvnW5JxzT3_kvsJ5w0u954DqEQqEEoQ5GkIvvuUQvCQpGxfmGVVBsK4fYr6ONnaMCoPzYljYgGA4atslvTk0hNYLo_qwLv2172fliZHgh_g-tiGEqLeMqjzQpFpNqj8ZvHCRpWP9xGvWhuXOW8cyK46acM-biIRn91pe6nZnO5PA13a7mwq9FnYxKXkOCB1v4kWtri5vJZnHTxBWQ6z-14rqkuo51Tf4ikYd0ZS_olF_lKY4T7Pm0HsX-FuvXqS1YbPlvGPBD9Lyg_h2rMnH1ZgbLwyHmNV5PixcltIPTsPqbLg4CqvTcPmjcHP49xYAAP__IiwYdw==

# Select over two ranges for parent/child with split at grandchild key.
# Also, rows with pid1 <= 30 should have 4 rows whereas pid1 > 30 should
# have 3 rows.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 ON parent1.pid1 = child1.pid1 WHERE parent1.pid1 >= 29 AND parent1.pid1 <= 31 ORDER BY parent1.pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUUcFq6zAQvL-veOypJSqxnOZiKOiaUpKSa_FBWBtH4EhmtS4twf9eJB0Sl6S0vfVm7czs7IyP4LzBtT5ggOoFJAhYQi2gJ99gCJ7iOJNW5g2qQoB1_cBxXAtoPCFUR2DLHUIFK8dIHepX3KI2SI_eOqR5XGuQte2SyxPuGKKHPWh6V70mdBw5W9vuz5FmbzsTgbwHBHS44xslZ7cPFLnpEwRsBq7-KylUKdRCqHuhllCPAvzAp2MD6xahkqO4EuiUw5NBQjM9W8kZ1OOF1Gt_5_t5OWFfcy8n7vJXdRZ_o84LgbYYeu8CfquqInaNpsX8b4IfqMFn8k2yyc9N0qWBwcAZlfmxcglKB56L5ZfixURcfBaXP3Kux38fAQAA__8x_hkU

# Parent-child where pid1 <= 15 have one joined row and pid1 > 15 have no
# joined rows (since child2 only has 15 rows up to pid1 = 15).
# Note this spans all 5 nodes, which makes sense since we want to read all
# parent rows even if child rows are non-existent (so we can support OUTER
# joins).
# TODO(richardwu): we can remove nodes reading from just one table for INNER
# joins or LEFT/RIGHT joins.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 >= 12 ORDER BY pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMlD1rwzAQhvf-ivJOLbkSyx8ZDAWtKSUpWYsHY10Sg2MZSS4twf-92B4Sl6YfzuLN0t3j9x6BdESpFa_SA1vErxAg-CAEIIQgREgIldEZW6tN29IDS_WO2CPkZVW7djshZNow4iNc7gpGjGXp2BScvvGGU8XmSeclm7kHgmKX5kWX-MxbhzYjP6TmQ1ap4dK1Y2zy3f68ku3zQrWz9f8BoeCtu5Nidv9o2t7uE4R17eJbKUj6JEOSEckFkoaga3ca1rp0x4hFQxeETh7aKDashmNLMUPSfGO90g-6mkeD7kvp_iBdjDpOMd3j9EcJ-dMVCkYJBdMVCkcJhdMV-uVJ2rCtdGn5T7fTa683qx33z4HVtcn4xeisi-mX647rNhRb11dFv1iWXakb8BwWP8KLAex9hf1rkoNr4PAaOPoXnDQ3nwEAAP__9wcgdA==

# These rows are all on the same node 1 (gateway).
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 IN (1, 11, 21, 31) ORDER BY pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMUE1LxDAUvPsrZE6KD9ws6iEg5LoirvQqPYTmbTfQTcrLqyhL_7u0OagHwVvmIzOZnJFy4Bd_4gL7BoOWMEruuJQsC1UNu_ABuyHENE660C2hy8KwZ2jUgWGxS8oysH_nhn1gecoxsdxuQAisPg5rwzMfFEtHPHn5dKMXTmpAaGJ__Kl0xziELQg1B4SBD3rlzM31oyze9QjCflJ76Qy5Lbk7cvfkHtDOhDzp92OL-p5hzUz_H9RwGXMq_GvAX8mbuSVw6Ll-WsmTdPwquVtrKtyv91YicNGqmgp2qUpzO198BQAA___Vk4P-

# Parent-grandchild.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM parent1 JOIN grandchild2 USING(pid1) WHERE
    pid1 >= 11 AND pid1 <= 13
    OR pid1 >= 19 AND pid1 <= 21
    OR pid1 >= 31 AND pid1 <= 33
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzslE9r3DAQxe_9FGJOu3RKLDnpH8GCCqXgUrzF9Nb6IKyJI3AkI8mlJfi7F9sk8Yb0X3pIDnuz9ObHG_xGcwXOGyr1JUWQX4ADggCEM6gR-uAbitGHSVoKC_MdZIZgXT-k6bpGaHwgkFeQbOoIJBQuUehIf6OKtKHwwVtH4SQDBENJ2252-kjnCSYPe6nDD9XrQC5N9pPA3tsuUZBss1GcfR2yLG92jOdSyqL8_HrL9tVKoh3jb26kt-U7tqYEv5a2C7fC8hsNECrbXqxbaoN2prmwnRHX6qP0tfw_QOjoPG0Uf77dhamZ-RMQ9kOSTHFUAtUpqjNUL1G9gnpE8EO6zSkm3RJIPuIvsryNcHA-GApkDjKrx3vSLv0L35_kdwrvtxYH1vxBY8SPY_QEx0g8KEtxzPIJZvmH9V5R7L2L9FcvPptWBpmWlv0S_RAa-hR8M9ssx_3MzReGYlpUvhwKN0tzg2uY_xY-PYCzu7D4H-f8n-B6fPYzAAD__4MtKf0=

query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM grandchild2 JOIN parent1 USING(pid1) WHERE
    pid1 >= 11 AND pid1 <= 13
    OR pid1 >= 19 AND pid1 <= 21
    OR pid1 >= 31 AND pid1 <= 33
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzslE-L2zAQxe_9FGJOCZ2ylr1LW0FAhVJwKU4xvbU-CGvWK_BKRpJLy-LvXmyzGyek_9JDc8jN0psfb_AbzQNYp6lQ9xRAfAYOCCkg3ECF0HlXUwjOj9JcmOtvIBIEY7s-jtcVQu08gXiAaGJLICC3kXxL6iuVpDT5985Y8lcJIGiKyrST0we6jTB6mHvlv8vGK6vrO9Pq0X4U2TvTRvKCrVaSsy99kmT1hvFMCJEXn16t2bZcSLRh_PWT9KZ4y5ZUyh-l9cwtsOxJA4TSNHfLtjrlyUb-qPyXnub_Bwgt3caV5M_XGz82M30CwraPgkmOMkWZobxGeYPyJVQDguvjLqcQVUMg-IA_yXIXYW-d1-RJ72VWDUfSLtwL111lB4XHrdM9a37SGPHLGJ3hGKUnZZlesjzDLH-z3ksKnbOB_ujFJ-PKIN3QvF-C631NH72rJ5v5uJ246UJTiLPK50NuJ2lqcAnzX8LXe3ByCKf_4pz9FVwNz34EAAD__zwZKfQ=

query TTT
EXPLAIN SELECT * FROM grandchild2 JOIN parent1 USING(pid1) WHERE
  pid1 >= 11 AND pid1 <= 13
  OR pid1 >= 19 AND pid1 <= 21
  OR pid1 >= 31 AND pid1 <= 33
----
render          ·               ·
 └── join       ·               ·
      │         type            inner
      │         equality        (pid1) = (pid1)
      │         mergeJoinOrder  +"(pid1=pid1)"
      ├── scan  ·               ·
      │         table           grandchild2@primary
      │         spans           /11/#/56/1-/13/#/56/2 /19/#/56/1-/21/#/56/2 /31/#/56/1-/33/#/56/2
      │         filter          ((pid1 <= 13) OR ((pid1 >= 19) AND (pid1 <= 21))) OR (pid1 >= 31)
      └── scan  ·               ·
·               table           parent1@primary
·               spans           /11-/13/# /19-/21/# /31-/33/#
·               parallel        ·
·               filter          ((pid1 <= 13) OR ((pid1 >= 19) AND (pid1 <= 21))) OR (pid1 >= 31)

# Join on multiple interleaved columns with an overarching ancestor (parent1).
# Note there are 5 nodes because the filter cid2 >= 12 AND cid2 <= 14
# creates a giant parent span which requires reading from all rows.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM child2 JOIN grandchild2 ON
    child2.pid1=grandchild2.pid1
    AND child2.cid2=grandchild2.cid2
    AND child2.cid3=grandchild2.cid3
  WHERE
    child2.pid1 >= 5 AND child2.pid1 <= 7
    OR child2.cid2 >= 12 AND child2.cid2 <= 14
    OR gcid2 >= 49 AND gcid2 <= 51
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzslU2L2zAQhu_9FWJODpmylizvhyCgQimklKSE3lofjDWbNXitIMmlZcl_L7ZZ7zqkpU0gvfhovXp4JT-CeYLaGlrlj-RBfQUOCAIQEkCQgJBChrBztiDvrWu39MDS_AAVI5T1rgntcoZQWEegniCUoSJQsKwDuYry77Sh3JD7aMua3FUMCIZCXlZd4ye6D9B2lI-5-6mLh7Iy7Qk25fbhdbB1eW3GKftQVoGcYlEUac6-NXGc0IKlSqnl6svtjL1bvWdDUizYzXMyY-sNiyItBoiLA0oMFJcD9szJgZN3B5wcuJQPHCD0tweEiu5DpPkctZijTuazhWsvM1oChHUTFNMctUCdoJaoU9TXqG9Q36K-g2yPYJvw8vt9yLcEiu_xN4pezDS1dYYcmZGKbH9E4sq-tbur9GDj8WoxquYnvQ4-vY7LvQ5xkiIxKbqcouQkRcmk6HKK5EmK5KTo_4zBI4o25He29vRXUy5uxySZLfUz1dvGFfTZ2aKr6T_XHdctGPKhT3n_say7qDvga5j_Eb4ewfEhLM5pTs6B5Tlw-k9wtn_zKwAA__9OgRn6

query TTT
EXPLAIN
  SELECT * FROM child2 JOIN grandchild2 ON
    child2.pid1=grandchild2.pid1
    AND child2.cid2=grandchild2.cid2
    AND child2.cid3=grandchild2.cid3
  WHERE
    child2.pid1 >= 5 AND child2.pid1 <= 7
    OR child2.cid2 >= 12 AND child2.cid2 <= 14
    OR gcid2 >= 49 AND gcid2 <= 51
----
join       ·               ·
 │         type            inner
 │         equality        (pid1, cid2, cid3) = (pid1, cid2, cid3)
 │         mergeJoinOrder  +"(pid1=pid1)",+"(cid2=cid2)",+"(cid3=cid3)"
 ├── scan  ·               ·
 │         table           child2@primary
 │         spans           ALL
 └── scan  ·               ·
·          table           grandchild2@primary
·          spans           ALL
·          filter          (((pid1 >= 5) AND (pid1 <= 7)) OR ((cid2 >= 12) AND (cid2 <= 14))) OR ((gcid2 >= 49) AND (gcid2 <= 51))

# Aggregation over parent and child keys.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT sum(parent1.pid1), sum(child1.cid1) FROM parent1 JOIN child1 USING(pid1) WHERE
    pid1 >= 10 AND pid1 <= 39
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUlVGrmzAUx9_3KS7n6V4WuEZtbysM3GPHto6OPQ0fgjm1gk0kiWOj-N1HlLVa2jisL74lOefv75z_CeYEQnL8yo6oIfoJFAj4QCAAAiEQWEBCoFQyRa2lsimtYMN_Q-QRyEVZGXucEEilQohOYHJTIESwEQZVgewX7pBxVJ9kLlC9WgRHw_KiIX7GvQHLyI9M_YlLplAYm2MDT9vKRE-x3e7y7NBNTA95wc-Bf4kkttW3JCBQ4N48x_T9ywdls5olEDgnB5DUBGRlLl1owzKEiNbk_zv9mGUKM2akel32u_v-48tzTC2zWfkvd4H-XeCFUwmpOCrkPUhSu0ui3tiagl5NdNS4_RmOe6DTjrdv04zbH2VtMENrBzrtWLuaxtpglLXhDK0d6LRj7Xoaa8NR1noztHag0461i-n__zeAO9SlFBqv3oHbX_bs-4A8w_Yx0bJSKX5TMm0w7Xbb6JoDjtq0UdpuNqIN2QK7YuoU-z0xvRb7bvIAOnCqQ7c4fKTuhVO8dJOXj5DfnOKVm7x6hLx2z8obuCbuS3bNTup3fwMAAP__hy1jzg==

###############
# Outer joins #
###############

# The schema/values for each table are as follows:
# Table:        pkey:                     pkey values (same):   values:
# outer_p1      (pid1)                    {1, 2, 3, ... 20}     100 + pkey
# outer_c1      (pid1, cid1, cid2)        {2, 4, 6, ... 28}     200 + pkey
# outer_gc1     (pid1, cid1, cid2, gcid1) {4, 8, 12, ... 36}    300 + pkey

# Split between 4 nodes based on pkey value (p):
# node 1:       p - 1 mod 20 ∈ [1...5)
# node 2:       p - 1 mod 20 ∈ [5...10)
# node 3:       p - 1 mod 20 ∈ [10...15)
# node 4:       p - 1 mod 20 ∈ [15...20)

statement ok
CREATE TABLE outer_p1 (
  pid1 INT PRIMARY KEY,
  pa1 INT
)

statement ok
CREATE TABLE outer_c1 (
  pid1 INT,
  cid1 INT,
  cid2 INT,
  ca1 INT,
  PRIMARY KEY (pid1, cid1, cid2)
) INTERLEAVE IN PARENT outer_p1 (pid1)

statement ok
CREATE TABLE outer_gc1 (
  pid1 INT,
  cid1 INT,
  cid2 INT,
  gcid1 INT,
  gca1 INT,
  PRIMARY KEY (pid1, cid1, cid2, gcid1)
) INTERLEAVE IN PARENT outer_c1 (pid1, cid1, cid2)

statement ok
ALTER TABLE outer_p1 SPLIT AT
  SELECT i FROM generate_series(0, 40, 5) AS g(i)

statement ok
ALTER TABLE outer_p1 EXPERIMENTAL_RELOCATE
  SELECT ARRAY[(((i-3)/5)%4)::INT + 1], i FROM generate_series(3, 40, 5) AS g(i)

query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW EXPERIMENTAL_RANGES FROM TABLE outer_p1]
----
start_key  end_key  replicas  lease_holder
NULL       /0       {5}       5
/0         /5       {1}       1
/5         /10      {2}       2
/10        /15      {3}       3
/15        /20      {4}       4
/20        /25      {1}       1
/25        /30      {2}       2
/30        /35      {3}       3
/35        /40      {4}       4
/40        NULL     {5}       5

### Begin OUTER queries

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_p1 FULL OUTER JOIN outer_c1 USING (pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzclE2L2zAQhu_9FWJOu3TK-nMPhoIuDTgYp5jkVEwx1iQ1OJKR5NIQ_N-L7EOaNP1Y5-abpdEzr585zBmkEpRXRzKQfAEfEAJACAEhAoQYSoROq5qMUdo9mYBU_IDEQ2hk11t3XSLUShMkZ7CNbQkSSKUl3VL1nQqqBOm1aiTpFxchyFZNOyZmtLfgMppjpU9c9Zb01849KprDt99LtStNrQBhe-ooYatdlrHNbvupYOtNmgNCS3v7xP33zx-16zJ-upYkBemEpat8l2VP3EcePiPjATIeIeMxMv4K5YCgensxM7Y6ECT-gH-wv0j3UmlBmsSVZTncmU-uPqjuJb55eD86uIr2Zw0-WMjgg1n24ULsw1n20ULso1n23kLs_7FwCzKdkob-a6N4biWRONC0v4zqdU2ftarHmOm4GbnxQpCxU9WfDqkcS-MP_gr7f4Vfr2DvFg4eSQ4fgaNH4PhNcDm8-xkAAP__5oReVw==

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_gc1 FULL OUTER JOIN outer_c1 USING (pid1, cid1, cid2)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzklU2LnEAQhu_5FVKnHabC-rlJhEBfsuAiTpCdU5Agdq0R3G7pbkOWwf8eWiEzTiYf6xw9Vlc9_crTUB5ASE5Z-Uwa4i_gAYIPCAEghIAQQYHQKVmR1lLZkQlI-A-IXYRGdL2xxwVCJRVBfADTmJYghkQYUi2V3ymnkpN6kI0gdWsjOJmyacfElJ4M2IzmuVQvTPaG1Ne6slN5U3_7vTe2prsA4fGlo9i536eps9s_fsqdh12SAUJLT-aGeVtk_hZZsN18VPa22ZGNIMFJxU5yn-3T9IZ5yO42-Kv0kb07KQNk7zfosBAdFqHDPkAxIMjeHCVoU9YEsTfgH0Qd_fRCKk6K-ExIMVxQmcm3sruNzgYvR_uzaG_RG_nreyN_kahgfaKCRaLC9YkKF4ly1yfqH_-RnHQnhab_2n6uXZ_Ea5p2rZa9quizktUYM5W7kRsPOGkzdb2pSMTYGj_wFPb-Ct_NYPcc9q9JDq6Bw2vg6FVwMbz5GQAA__8alY8h

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_c1 LEFT OUTER JOIN outer_p1 USING (pid1) WHERE pid1 >= 0 AND pid1 < 40]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUlE-Lo0AQxe_7KeSddtlaYqu7B2HBSwYMIQ6SOQ0yiF3JCMaW7naYEPzug3rIJJP5l5xys_v1q1e_gnKHWkle5Bs2CO8hQPBA8EEIkBEarQo2RuleHh_H8hmhSyjrprX9dUYolGaEO9jSVowQcW1ZV5w_ccq5ZD1TZc164oIg2eZlNaTNeWXRZ5SbXG8j1VrWD0XfQ1quH99KTS-NpUBYbhsOnfn0Zukkd8tp6sySeAFCxSv7MxK_f_3XfZXhE4SktaETCYo8inyKAor-IesIqrV7DmPzNSMUHb3Dukdsa6Ula5YHTFl3YhoL9Uc1k-Do4elo7yBanDVmcZVj9s5i9a6S1T-L1b9K1k9-FSmbRtWGv7Qdbr9eLNc87qJRrS74VqtiiBmPyeAbLiQbO6piPMT1IA0NvjaLD81_D8zusdm7JNm_xBx8y5x1P14CAAD___ca6HA=

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_p1 RIGHT OUTER JOIN outer_gc1 USING (pid1) WHERE pid1 >= 1 AND pid1 <= 20]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUlE9r20AQxe_9FOKdWjrF-ucWBIW9lFamWEW4pyCC0I4VgawVu6sQY_Tdg6SDY8f5Z5980-7bN29-A6MdGiV5mW_YILqBB4IPQgBCiIzQalWwMUoP8vQ4lg-IXELVtJ0drjNCoTQj2sFWtmZEiBvLuub8nlPOJeuFqhrWMxcEyTav6jHtL68thoxqk-utUJ1lfdsOPaRVefdcKotBm2qBsNq2HDlp_PvPykn-r36lziKJlyDUvLafhff1y0891Bk_QUg6GzkiIOGTCEnMSXwn8QNZT1Cd3cMYm5eMyOvpBeA9Z9coLVmzPADL-hMjWapvqp2FRw9PR_sH0d5Zs_aud9b-WcD-9QIHZwEH1wv8xu8jZdOqxvC7lsUdto1lydNqGtXpgv9pVYwx0zEZfeOFZGMn1ZsOcTNKY4NPzd6r5vmB2T02-5ckB5eYww-Zs_7TYwAAAP__Vjbt9A==

########################
# Non-interleaved joins #
########################

# Join on siblings uses merge joiner.
# TODO(richardwu): Update this once sibling joins are implemented.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child1 JOIN child2 USING(pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJy8ls9um0AQh-99Cmt6aZW1ll3-xEaqxDWVmlRRbxUHYqY2ksNaC5YaRX73CpM2CYYdtiu4LTYfM7PzHX7PUKocb7NHrCD-CQIYSGDgA4MAGISQMjhotcGqUrp5pQVu8t8QewyK8nCsm59TBhulEeJnqIt6jxDDj-xhj_eY5ai5BwxyrLNify5z0MVjpp-Sza7Y503NJZf8Iw8jLngg2_OKCy4XWZkv_IWqd6grSE8M1LF-Kfla6eFpscuq3fsaiYD0lDKo6myLEIsT-7_WQ0PrcpbW5WDrr99ROkeNefc7V03hUW_13MI31Fv8qooSNRedDe7xV_0pEVefv-hiu2uPwODuWMeLRLBEssRnSciSiCXXnelfJ_NHTHYs-7rubfhWLdWBi7DzZn_t4F1tMV4IQbg84MOSB805bH4PpvLaYoyI8HreMeTgGDM6LqZ3XI5fkKQ8e7OIJY_-bStqz822oqk8sxjjmvJs1jHk4Bgzeian98wfvyCf8qx_J0u-msoui-ZXlF0zNC8Hm5_RKX96p4Lxawkop1ZLLry_qwm9l4dmN8KbSiuL_teUVvP0Lwf7n9GsYN7k19POPVYHVVY4Ktd5zUCYb7G9pkod9Qa_a7U5l2kf787cOWfkWNXtv7J9uCnbv5oGx8ORC7x2gYVT3yI008LiyqQdHLnAaxdYOPXdubILWnZp7y3tm-_bN8Li_Z15XTpwEdwME4KbYUJwM0wJTtCE4KGL4GaYENwME4KbYUpwgiYEj1wEv3ZR1AwTipphQlEzTClK0ISiKxdFzTChqBkmFDXDlKIETSi6dlFUOOUEgiYkJWjCUoKmNKVwKiu4hQW3tOAWFxzzgltgEE6JQVxEBitbzTRlq5mmbDXTpK0ETtlqE5Yud2aTlmxpylarvGSNU7ZehAejrenpw58AAAD__3fZhY4=

# Join on non-interleaved tables (with key) uses merge joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN parent2 ON pid1=pid2]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJy8lV9r2zwUxu_fTxHOe7NRGVnyn7qGgW87WDvK7oYv3PgsMaSWkRVYKfnuQ3G3NCbRcRDOnWzrp3Oe5zlYb9CqGh-qF-wh_wkCGEhgEAGDGBgkUDLotFpi3ytttwzAff0b8pBB03ZbY1-XDJZKI-RvYBqzQcjhR_W8wSesatQ8BAY1mqrZ7Mt0unmp9GvRVRpbY4sGXPL_eZJywWM5rDMuuFxUbb2IFsqsUfdQ7hiorXmveSj1_LpYV_36uEghoNyVDHpTrRBysWNnej-co3SNGuvxOTe28GHXtj21b19r7ME31Cv8qpoWNU-Pj93gL_OpEDefv-hmtR6WwOBxa_JFIVghWRGxIh5pPuiJJui5oNMHFaiOCzHaebp2fFRbTJ8DQc3BmTEIeGzXiX0fzzUT4vozcTvnTMjpuUgylw_-Bzz9F1I6rG1I6Vy5yOvnks2ZSzQ9l4jM5XQUAc_mSiO6fhp3c6YRT08jJtPIAi7Cv4kk4fuDjUSEcwVygYDEJcD-AwKvvuTZvq40KCK81h17opEn7DvV9jjpBg2tFKxXOLjTq61e4netlvsyw-PjntvfSzX2Zvj6_nDfDp9sg9Ph2AdOfeDMBxaEaDGmw4-0dMPSCYtjOhzTkU9YbpgIyw0TYblhIixCMyE69gkr8bHbDRN2u2HCbjdM2E1oJkSnPnbf-tjthgm73TBhtxsm7CY0E6IzH7vvfOx2w4Tdbpiw2w0TdhOaqT__JZelvJCOvejUi868aEEJv-zGLHf__QkAAP__2EXoAA==

# Join on non-interleaved column uses hash joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 ON pa1 = ca1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJy8ls9r2zAUx-_7K8LbpQUFWZLtJoGBj-sO7Si7DR_cWGsMqWVkBVZK_vfhuFsax9WzJpSbf3383tP7HL6vUKtS3hXPsoXVT2BAgAMBAQRiIJBATqDRai3bVunukx64LX_DKiJQ1c3OdI9zAmulJaxewVRmK2EFP4rHrXyQRSk1jYBAKU1RbQ9lGl09F_olawota9MVnVNOP9MkpYzGvL9eUEb5rKjLmZgps5G6hXxPQO3MW81jqceX2aZoN6dFMg75PifQmuJJwortyf_1noz3vt5U2zJU6-Kkdf5h68f_7GqlS6llefKnvCOxT0bm_1q0m2-qqqWmbLC7rfxlrjJ-_UVXTxtzlYlrIHC_M6tZxkjGSSZIFpMsGUx8nEZ4TDPS6p2aq4ayZDj3aO34pDabLgHDBP5AgjmNu-ukex6HktlhjhSROfQYNrHZhcVmQcXm05fCUbnenf6cpv9WlPbX3YrSUHI5zHGDyRV4DJtc_MJy8aByielLEahc44uY00UopRy6X2BKBWneJpK4sEgiqEjx9FXEqEiLOWXR330k0dtNtxAWhXLJYYAl5lKo_m06xRfWKb5Ymhtp5EG2japbOSmrRd0osnyS_dG0aqfX8rtW60OZ_vb-wB2iQylb07_l_c1t3b_qGpwOpz7w0gdmXn2zxE4zhyPjbnDqAy99YObV9-DIzmg-pKP3tLCft7DC7PTMoiEd-whuhxHB7TAiuB3GBEdoRPDER3A7jAhuhxHB7TAmOEIjgqc-gt_4KGqHEUXtMKKoHcYURWhE0YWPonYYUdQOI4raYUxRhEYUXfooyrxyAkIjkiI0YilCY5piOJYV_MKCX1rwiwueecEvMDCvxMDOIoOTrXYas9VOY7baadRWBMdsdQlL5ztzSUuuNGarU15yxjFbz8KD1dZ8_-lPAAAA__8PHIFg

# Prefix join on interleaved columns uses merge joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child2 JOIN grandchild2 USING(pid1, cid2)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzEls9r2zAUx-_7K8LbZaMKsuQfdQwDXztYO8puwwc31hJDagXZgZWS_3047pbGsfWkiTg3K_En7331PoH3CpUsxH3-LGpIfgIDAhwI-EAgAAIhZAS2Si5FXUvVvtIBd8VvSDwCZbXdNe3HGYGlVAKSV2jKZiMggR_500Y8irwQinpAoBBNXm4OZbaqfM7VS7pcl5uirTennH6kYUQZDXj3HFNG-Syvipk_k81aqBqyPQG5a95KHis9vczWeb0-rZEyknLI9hmBuslXAhK2J__XfTjc_UrlVTFtBD4a4fhTUhVCiaL_Uzck5TdtfeM3B27lm1Ar8VWWlVCU9Ya6Eb-aT2_05y-qXK2PRyDwsGuS2SERSX2SBiS9JWlM0kXvTo5hfYOwu2ooxGDv93Iut5SFvTeHawcntZm5KwwxfcSSOQ3a57D9PLig9RZJIhPrJ4_DR-Nc4R_AJv0HcPPZcczCd-OZ0-jfDKPuuZ1hdEELLZLcGlk4dRw-GucKFvJJLfTNZ-djFg5Pak7jC7pn0X9s5N40IfhoiCsY509qXGA-sQAzLp5T5v0dWOi9HdqJMe-C0llEWBhJN1kOPprjCt4FV9s4Bzp7FPVWVrUw2ie9NpsoVqK7uVru1FJ8V3J5KNMdHw7cYakpRN103_LucFd1X7UNmsORC7xwgZlT3yzU08ziyrgdHLnACxeYOfXdu7Izmvdp7z3t6-_b18Ls9M68Ph24CK6HEcH1MCK4HsYER2hE8NBFcD2MCK6HEcH1MCY4QiOCRy6C37ooqocRRfUwoqgexhRFaETR2EVRPYwoqocRRfUwpihCI4ouXBRlTnsCQiOSIjRiKUJjmmI4tiu4LQtu24LbuuC4L7gtDMxpY2BnK4OVrXoas1VPY7bqadRWBMdstVmWzmdmsy3Z0pitVvuSNY7ZerY8aG3N9h_-BAAA__9zQqjt

# Subset join on interleaved columns uses hash joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child2 JOIN grandchild2 USING(pid1, cid3)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzElk1vmzAYx-_7FNGzyyY5MjYvTZAmcVx3aKdqt4kDDV5ASnFkiLSqynefgHZpCPjBs-LdcMIPPy-_w_8FKpmLu-xJ1BD_BAYEOBDwgUAABEJICeyV3Ii6lqp9pQdu898QewTKan9o2p9TAhupBMQv0JTNTkAMP7LHnXgQWS4U9YBALpqs3HXX7FX5lKnnZFOUu7y9b0k5_UjDiDIa8P55RRnli6zKF_5CNoVQNaRHAvLQvF55uunxeVFkdXF-R8JI4kN6TAnUTbYVELMj-bfqw_Hqtyqrcrct8MkWTp86VFLlQon87GNpS2KvjMzha1YX32RZCUXZYIs78av51NX4-Ysqt8XbAQjcH5p40Z1IwkkSkCQiyYok68EATp35Fp2NlH0nl3JPWTicwejdwdndbL4YDNF6QoklDdrnsP09uKLiBp1EcxR33g6fbMeF7syZ7nz-ojim3LtdLGn0d2FR_9wuLLqicgad3MxSznU7fLIdF8pxZ8r58xflY8qNr2VJV1cUzaD-1SzR3DTBJ5twoZfvTK9g_noCTK_VkjLvbTuh93po18O8Kxpm0MJ6lmHO-uCTfbiQLPgvKXGkqAdR72VVi1kZ0GvbEvlW9GOq5UFtxHclN901_fG-47ogkou66f_l_eG26v9qC5wPRzbw2gZmVnWzUE8zg5FxMziygdc2MLOqezCyC5oPae897evn7Wthdj4zb0gHNoLrYURwPYwIrocxwREaETy0EVwPI4LrYURwPYwJjtCI4JGN4Dc2iuphRFE9jCiqhzFFERpRdGWjqB5GFNXDiKJ6GFMUoRFF1zaKMqucgNCIpAiNWIrQmKYYjmUFu7Bglxbs4oJlXrALDMwqMbCLyGBkq57GbNXTmK16GrUVwTFbTcLS5c5M0pIpjdlqlJeMcczWi_CgtTU9fvgTAAD__6tpm8g=

# Sort node in between join and child nodes produces hash joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN (SELECT * FROM child1 ORDER BY cid1) USING(pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJy8lk1v2koUhvf3V6BzN_fqDhrP-AODdCUvmy6SKu2uYuHgabBEPGhspEYR_70yDk2x8bwMltnZwOM5H8_h-I0Knan79EWVtPhOghhJYuQTo4AYhbRktDV6pcpSm_onDXCX_aSFxygvtruq_njJaKWNosUbVXm1UbSgb-nTRj2qNFOGe8QoU1Wabw7HbE3-kprXZJsaVVT1oVMu-d88jLjggWyuYy64nKRFNvEnulorU9Jyz0jvqvczP456ep2s03J9ekgiaLlfMiqr9FnRQuzZdbGH52NfrfNNdm3oH2FJl7C-alMpw0WrnIn8b1Bp_N4YPp6zK7TJlFHZyZOWNYl-ciaRT2m5_qzzok6mVd-N-lH9k4h__zf58_pwRYwedtVikgiWSJYELAl7yxkMSOVMnPd6qrdceu2kz54dnpwtLjdMoOnoMWzKg_o6rD8PxpoUhzwiMClD0-ibGhDicWrEmFMjbjw10XhTIy_vuITm_tHaKY9-9z9qruv-R2OZ65DHDJk7MI0-c0GIR3PlmObKG5s7G89c__KO-9Dc812e8ngsXx2ij5GvVwXfZykI7GipP6al_o0tjcezNLi8zwG0NJ5y4R2bHXrvN3W3hTeWqA4JzJGo18bf5yqI7ehqMKarwY1dnd_mDfpMFI-q3OqiVBe9H3t1Hip7Vk1dSr0zK_XF6NXhmOb24cAdXqcyVVbNt35zc1c0X9UBXg7HQ2AhB9HREFp6dlq0ae-EPoG9NiwdCi7d4HgI3Cq4Kx0NoVsF79C-teCBvVuBvVvC3q5wyHzYYTAfdhjNB6DBfNhpNB-RteIze8FnQ-bDDoP5sMNoPgAN5sNOo_mIh8zHfIjhdhgYboeR4YAGhttpuAE6C-Sk4gL8qYjOBnGRHNDAckAjzREOPAc4El109oiL6aKzR1xUBzRwHdBIdoQD2wEOdbfvUBEC3V2WaLfnLlvUlYa6O-1RVxzqbt-kSHeXVepKI92dlqkzjnR3Wqdd3L5PxRzo7rJRuz13WamuNNTdaam64kh3ad-qbd2X-79-BQAA__9y6oK-

query TTT
EXPLAIN SELECT * FROM parent1 JOIN (SELECT * FROM child1 ORDER BY cid1) USING (pid1)
----
render               ·         ·
 └── join            ·         ·
      │              type      inner
      │              equality  (pid1) = (pid1)
      ├── scan       ·         ·
      │              table     parent1@primary
      │              spans     ALL
      └── sort       ·         ·
           │         order     +cid1
           └── scan  ·         ·
·                    table     child1@primary
·                    spans     ALL

# Multi-table staggered join uses interleaved joiner on the bottom join
# and a merge joiner.
query T
SELECT url FROM[EXPLAIN (DISTSQL)
  SELECT * FROM grandchild1
  JOIN child1 USING (pid1, cid1)
  JOIN parent1 USING (pid1)
ORDER BY pid1
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzcll1r2zwUx--fTxHOc7NRBVnyS5PAwLcdWzvK7kYu3Pg0MaRWkJWxUvLdh-K0dV6qE0d4gdz57WcdHf0O_F-gVDneZk9YwegXCGAggUEIDCJgEMOYwUKrCVaV0vaTGrjJ_8AoYFCUi6Wxj8cMJkojjF7AFGaOMIKb0qCeY_Yb7zHLUX9VRYmaB8AgR5MV8_WK3_DRgF2jeMr0czrVWZlPZsU8t6XcF9NZ8-3bi_pfwGCOj-ZTKq5YKq8-f9H2-7dbYHC3NKNeKlgqWRqyNGLpNYxXDNTSbAp_r_fhuTfLqtl2eamA8WrMoDLZFGEkVuz4BvzMHuabvfN4-7evG1pkGktjd9Tnkv_P44QLHsn6esAFl72szHthT5kZ6sqrdvlh7e__UTpHjfnuf67swkd9daAN31FPcXP4Yuf0X4-vcXSHjy3eP7n3nYV-OztQ863qqwUX26f20fLR1vLipKkQlzMVRAOaU5FQU_HBUPR5ZK9j-zzqakLEeSZEdD8h8iRF5eUoSjSgqeg1qWhDxT5P3nxN6mvra9KVovI8isruFQ1PUjS8HEWJBjQVHZCKHrayzwddiRmeR8ywezGjk8SMLkdMogFNMYekmIM-F8GrnHGwubF2iqArN6PzuBn92-R7oJx7rBaqrPCoUBvYDWE-xbpNlVrqCf7QarJepr69W3PrpJRjZeq3sr65KetXtsDj4cQHHvrAwqtuEbtp0aJlsh2c-MBDH1h41b3Tsj1a7tJBkw7d_Q6dsNjuWbBLRz6Cu2FCcDdMCO6GKcEJmhA89hHcDROCu2FCcDdMCU7QhOCJj-DXPoq6YUJRN0wo6oYpRQmaUHTgo6gbJhR1w4SibphSlKAJRYc-igqvnEDQhKQETVhK0JSmFE5lBb-w4JcW_OKCZ17wCwzCKzGIvcjQylY3Tdnqpilb3TRpK4FTtrYJS_tn1iYttaUpW1vlpdY4ZeteeHDaOl799zcAAP__jSP2nA==

# Multi-table join with parent1 and child1 at the bottom uses interleaved
# joiner but induces a hash joiner on the higher join.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM parent1
  JOIN child1 USING (pid1)
  JOIN grandchild1 USING (pid1, cid1)
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUls9v2jAUx-_7K9jbZdOMHDs_CkiTclynqp2q7TTlkBIXItEYOWZaVfG_Tya0JED9EiwicSM4n_g9-_Ok7wsUMhO36ZMoYfIHGBDgQMAHAgEQCCEhsFRyKspSKvNKBVxn_2DiEciL5UqbvxMCU6kETF5A53ohYALXhRZqIdK_4l6kmVA_ZF4IRT0gkAmd5ovNjjfiUYPZI39K1XO8TJUotCnjPp_N6yvTeb7IzEL1HSCwEI_6c8y-fvmmzLubn0DgbqUng5iRmJM4IHEIyZqAXOltpbsCH54H87ScN-sxoA_JOiFQ6nQmYMLWpH3Tv9KHxbZfGja__NrITKVF9tbNkHL6iYYRZTTglNOPt79vbmg4oozyQVpkA38g9VyosnsbvNEGf7eN3adWhVSZUCJrfCwxJPbKkbP4npbz7aWzvVvfXh2J_d3lkZg3rs9_vcErEo_2ut-15Tu0daTmWzmUS8rC_QM4unfQ2JudNA7ssscBabo-DlGbcbBMw5AGZi00a8EZR4P1PBqsn9HgJ-nJL1tPpOm6nlet9KwpOKTRm6sRjequRmfUk_esJ-9HT_8kPf3L1hNpuq7nqJWe7xs5pKMzSun3LKXfj5TBSVIGly0l0nRdynErKUdDyrxXMUPPPNTMZN4ZvQx69jLoP-YeqehelEtZlKJViPVMTyKbieqMSrlSU_FTyelmm-rxbsNtolEmSl2t8urhuqiWTIHt4cgFHrvAzKluFtpp1uHIeDc4coHHLjBzqnvvyA5ovk97ddq3n7dvhVnzzLx9OnAR3A4jgtthRHA7jAmO0IjgoYvgdhgR3A4jgtthTHCERgSPXAS_clHUDiOK2mFEUTuMKYrQiKIjF0XtMKKoHUYUtcOYogiNKDp2UZQ55QSERiRFaMRShMY0xXAsK7iFBbe04BYXHPOCW2BgTomBHUSGTrbaacxWO43ZaqdRWxEcs7VLWDq8sy5pqSuN2dopL3XGMVsPwoPV1mT94X8AAAD__26K-oI=
