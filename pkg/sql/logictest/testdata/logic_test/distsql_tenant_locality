# LogicTest: 3node-tenant-multiregion

# Create a table on the secondary tenant.
statement ok
CREATE TABLE t (k INT PRIMARY KEY, v INT)

# Split the ranges in the table.
statement ok
ALTER TABLE t SPLIT AT VALUES (1), (2), (3)

# Relocate ranges in the admin tenant based on node locality.
user host-cluster-root

statement ok
ALTER RANGE RELOCATE LEASE TO 1 FOR SELECT range_id FROM crdb_internal.ranges WHERE start_pretty LIKE '%Tenant%1'

statement ok
ALTER RANGE RELOCATE LEASE TO 2 FOR SELECT range_id FROM crdb_internal.ranges WHERE start_pretty LIKE '%Tenant%2'

statement ok
ALTER RANGE RELOCATE LEASE TO 3 FOR SELECT range_id FROM crdb_internal.ranges WHERE start_pretty LIKE '%Tenant%3'

# Check range lease holders in the admin tenant.
query TI
SELECT start_pretty, lease_holder FROM crdb_internal.ranges WHERE start_pretty LIKE '%Tenant%'
----
/Tenant/10                1
/Tenant/10/Table/106/1/1  1
/Tenant/10/Table/106/1/2  2
/Tenant/10/Table/106/1/3  3

# TODO(harding): Once locality-aware distribution is implemented, run queries in
# the secondary tenant.
user root

# Check sql instance locality in the secondary tenant.
query IT
SELECT id, locality FROM system.sql_instances
----
1  {"Tiers": "region=test"}
2  {"Tiers": "region=test1"}
3  {"Tiers": "region=test2"}
