# LogicTest: !local-mixed-23.1

subtest types

statement error pgcode 42P13 pq: function result type must be int because of OUT parameters
CREATE FUNCTION f(OUT param INT) RETURNS FLOAT AS $$ SELECT 1; $$ LANGUAGE SQL;

statement error pgcode 42P13 pq: function result type must be record because of OUT parameters
CREATE FUNCTION f(OUT param1 INT, OUT param2 INT) RETURNS INT AS $$ SELECT 1, 2; $$ LANGUAGE SQL;

statement error pgcode 42P13 pq: function result type must be int because of OUT parameters
CREATE FUNCTION f(OUT param INT) RETURNS VOID AS $$ SELECT 1; $$ LANGUAGE SQL;

statement error pgcode 42P13 pq: function result type must be int because of OUT parameters
CREATE FUNCTION f(OUT param INT) RETURNS RECORD AS $$ SELECT 1; $$ LANGUAGE SQL;

statement ok
CREATE FUNCTION f(OUT param INT) RETURNS INT AS $$ SELECT 1; $$ LANGUAGE SQL;

statement ok
DROP FUNCTION f;

statement ok
CREATE FUNCTION f(INOUT param1 INT, OUT param2 INT) RETURNS RECORD AS $$ SELECT 1, 2; $$ LANGUAGE SQL;

statement ok
DROP FUNCTION f;

statement error pgcode 42P13 pq: return type mismatch in function declared to return record
CREATE FUNCTION f(INOUT param1 INT, OUT param2 INT) AS $$ SELECT 1, 2, 3; $$ LANGUAGE SQL;

statement error pgcode 42P13 pq: return type mismatch in function declared to return int
CREATE FUNCTION f(INOUT param INT) AS $$ SELECT 'hello'; $$ LANGUAGE SQL;

subtest end

subtest show_create

statement ok
CREATE FUNCTION f_param_types(IN p1 INT, INOUT p2 INT, IN OUT p3 INT, OUT p4 INT) AS $$
SELECT p2, p3, p1;
$$ LANGUAGE SQL;

query T
SELECT create_statement FROM [SHOW CREATE FUNCTION f_param_types];
----
CREATE FUNCTION public.f_param_types(IN p1 INT8, INOUT p2 INT8, INOUT p3 INT8, OUT p4 INT8)
  RETURNS RECORD
  VOLATILE
  NOT LEAKPROOF
  CALLED ON NULL INPUT
  LANGUAGE SQL
  AS $$
  SELECT p2, p3, p1;
$$

statement ok
DROP FUNCTION f_param_types;

statement ok
CREATE FUNCTION f_param_types(OUT param INT) AS $$
SELECT 1;
$$ LANGUAGE SQL;

query T
SELECT create_statement FROM [SHOW CREATE FUNCTION f_param_types];
----
CREATE FUNCTION public.f_param_types(OUT param INT8)
  RETURNS INT8
  VOLATILE
  NOT LEAKPROOF
  CALLED ON NULL INPUT
  LANGUAGE SQL
  AS $$
  SELECT 1;
$$

statement ok
DROP FUNCTION f_param_types;

subtest end
