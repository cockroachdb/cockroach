# LogicTest: 5node-dist-vec

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT)

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i)

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT)

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify data placement.
query TTTI rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv]
----
NULL       /1       {1}       1
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# Verify data placement.
query TTTI rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw]
----
NULL       /1       {5}       5
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# Verify that EXPLAIN ANALYZE works in a distributed setting.
query T
SELECT url FROM [EXPLAIN ANALYZE SELECT count(*) FROM kv]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMlcGLm0AUxu_9K-SdtjBWR002O6ctPeXQpCRZeiiyzOrDSo0jM-Oyy5L_vaiFGmlnBgIbjz7z5fs-fg_fG9Qixw0_ogL2AygQiIBADAQSILCAlEAjRYZKCdn9ZBCs8xdgIYGyblrdjVMCmZAI7A10qSsEBgf-VOEOeY4yCIFAjpqXVW_TyPLI5ev9r2cgsG94rZjnB53xttXM24gagcAT19lPVJ5oddONu3C6barJSGGFmS6fS_3KvPBT2HkpzavK0-URmRcqSE8EBsmfrErzAoHRE3Hv87koJBZcCxkszut82T5sDo-77ff9zcfLcuMLZq0uRW3PHv03-9_IbS1kjhLzs7zpydyOTmjtH74-rjeHm3v6fu3is3bUfdOofdOCyA_iK--apdGIxnJ2uxa504gcaMR-kFyZhqXRiMbt7GjE7jRiBxqJ33_drknD0mhEYzU7Gok7jcSBxsK_MgtLnxGLu9mxsNzzHapG1Aont_Hf_xx2NxPzAocDq0QrM_wmRdbbDI_bXtcPclR6eEuHh3U9vOoCjsXUKI7OxHQqjszOFuvYqE7M4uSS3AujeGl2Xl7ifGsUr8zOq0uc78ysQsuamJds6p2ePvwOAAD__0aN3zM=

query T
SELECT url FROM [EXPLAIN ANALYZE SELECT * FROM kv JOIN kw ON kv.k = kw.k]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUl89vm0oQx-_vr0Bzek9ZP9gFnBipkq-p1KRKe6t8IDC1UQmLliVNFPl_rzCqUmOzA17Vwjfz47M73_FnpeENCpniXfyEFUTfgAMDAQx8YBAAgxBWDEolE6wqqZpXWuA2fYHIY5AVZa2b2ysGiVQI0RvoTOcIEXyNH3N8wDhF5XrAIEUdZ_lum1JlT7F6Xf54BgZfyrioImfmNhs_xjrZYOXIWpe1jpymIF2XeedWhTkmOnvO9GvkeP97zfqVjvPc0dkTRo5XwWrLoEXasn-X9fjqbOJqs1_QksNqu9qtsUaI-JadlnPek_Pne06XTymp6E36vo5UKSpMu-tcNRsPeutI0z6hWuNHmRWoXN6xI8fv-t8lv_rvg8rWm_YnMLhvWrLkbCnY0mfLwK6H-IJJrTNZ9PXxvUf-gB7VxbH8R6PfyZksXR7uh-5GCQ-jhPZRgr0ofLjYnD7Arpi5_mTE5qcmvR5whCeVVPQmPeMR5pd0hMVwG8QA7_2Za5nkr3k_IunNAO8nlVT0Jj2j9-KSvPeH2-AP8D6YueFkbOCnJl0M8H5SSUVv0jN671-S98FwG4IB3oezybjAT80Z0tbPXO7ERepwR-oNqslkFr2Zz-h_cEn-Ex-wD1iVsqiw8-lyfGWvaQ2ma2wbXslaJfhZyWS3TXt5v-N2s2iKlW6fivbitmgfNQUOh-c28MIG5lZ189BM8xEtE-PguQ28sIG5Vd2dlh3Qokt7f9K-ud--Eeb7PfO6dGAjuBkmBDfDhOBmmBKcoAnBQxvBzTAhuBkmBDfDlOAETQg-txH82kZRM0woaoYJRc0wpShBE4re2ChqhglFzTChqBmmFCVoQtGFjaLcak4gaEJSgiYsJWhKUwqnZgW7YcFuWrAbFyznBbuBgVtNDPxgZBhlq5mmbDXTlK1mmrSVwClbxwxLh__ZmGlpLE3ZOmpeGo1Tth4MD0ZbV9t_fgUAAP__VILF4Q==

# Verify execution.
statement ok
SET vectorize = experimental_always

query I rowsort
SELECT kv.k FROM kv JOIN kw ON kv.k = kw.k
----
1
2
3
4
5

statement ok
RESET vectorize

# Regression test for #38919.
statement ok
SET optimizer = on

query B
SELECT EXISTS(SELECT * FROM kv WHERE k > 2)
----
true

statement ok
RESET optimizer

query T
EXPLAIN (VEC, VERBOSE) SELECT count(*) FROM kv
----
│
├ Node 1
│ └ *distsqlrun.materializer
│   └ *exec.orderedAggregator
│     └ *exec.oneShotOp
│       └ *exec.distinctChainOps
│         └ *exec.UnorderedSynchronizer
│           ├ *exec.countOp
│           │ └ *exec.simpleProjectOp
│           │   └ *exec.CancelChecker
│           │     └ *distsqlrun.colBatchScan
│           ├ *colrpc.Inbox
│           ├ *colrpc.Inbox
│           ├ *colrpc.Inbox
│           └ *colrpc.Inbox
├ Node 2
│ └ *colrpc.Outbox
│   └ *exec.deselectorOp
│     └ *exec.countOp
│       └ *exec.simpleProjectOp
│         └ *exec.CancelChecker
│           └ *distsqlrun.colBatchScan
├ Node 3
│ └ *colrpc.Outbox
│   └ *exec.deselectorOp
│     └ *exec.countOp
│       └ *exec.simpleProjectOp
│         └ *exec.CancelChecker
│           └ *distsqlrun.colBatchScan
├ Node 4
│ └ *colrpc.Outbox
│   └ *exec.deselectorOp
│     └ *exec.countOp
│       └ *exec.simpleProjectOp
│         └ *exec.CancelChecker
│           └ *distsqlrun.colBatchScan
└ Node 5
  └ *colrpc.Outbox
    └ *exec.deselectorOp
      └ *exec.countOp
        └ *exec.simpleProjectOp
          └ *exec.CancelChecker
            └ *distsqlrun.colBatchScan

query T
EXPLAIN (VEC, VERBOSE) SELECT count(*) FROM kv NATURAL INNER HASH JOIN kv kv2
----
│
├ Node 1
│ └ *distsqlrun.materializer
│   └ *exec.orderedAggregator
│     └ *exec.oneShotOp
│       └ *exec.distinctChainOps
│         └ *exec.UnorderedSynchronizer
│           ├ *exec.countOp
│           │ └ *exec.simpleProjectOp
│           │   └ *exec.hashJoinEqOp
│           │     ├ *exec.UnorderedSynchronizer
│           │     │ ├ *exec.routerOutputOp
│           │     │ │ └ *exec.HashRouter
│           │     │ │   └ *exec.CancelChecker
│           │     │ │     └ *distsqlrun.colBatchScan
│           │     │ ├ *colrpc.Inbox
│           │     │ ├ *colrpc.Inbox
│           │     │ ├ *colrpc.Inbox
│           │     │ └ *colrpc.Inbox
│           │     └ *exec.UnorderedSynchronizer
│           │       ├ *exec.routerOutputOp
│           │       │ └ *exec.HashRouter
│           │       │   └ *exec.CancelChecker
│           │       │     └ *distsqlrun.colBatchScan
│           │       ├ *colrpc.Inbox
│           │       ├ *colrpc.Inbox
│           │       ├ *colrpc.Inbox
│           │       └ *colrpc.Inbox
│           ├ *colrpc.Inbox
│           ├ *colrpc.Inbox
│           ├ *colrpc.Inbox
│           └ *colrpc.Inbox
├ Node 2
│ └ *colrpc.Outbox
│   └ *exec.deselectorOp
│     └ *exec.countOp
│       └ *exec.simpleProjectOp
│         └ *exec.hashJoinEqOp
│           ├ *exec.UnorderedSynchronizer
│           │ ├ *colrpc.Inbox
│           │ ├ *exec.routerOutputOp
│           │ │ └ *exec.HashRouter
│           │ │   └ *exec.CancelChecker
│           │ │     └ *distsqlrun.colBatchScan
│           │ ├ *colrpc.Inbox
│           │ ├ *colrpc.Inbox
│           │ └ *colrpc.Inbox
│           └ *exec.UnorderedSynchronizer
│             ├ *colrpc.Inbox
│             ├ *exec.routerOutputOp
│             │ └ *exec.HashRouter
│             │   └ *exec.CancelChecker
│             │     └ *distsqlrun.colBatchScan
│             ├ *colrpc.Inbox
│             ├ *colrpc.Inbox
│             └ *colrpc.Inbox
├ Node 3
│ └ *colrpc.Outbox
│   └ *exec.deselectorOp
│     └ *exec.countOp
│       └ *exec.simpleProjectOp
│         └ *exec.hashJoinEqOp
│           ├ *exec.UnorderedSynchronizer
│           │ ├ *colrpc.Inbox
│           │ ├ *colrpc.Inbox
│           │ ├ *exec.routerOutputOp
│           │ │ └ *exec.HashRouter
│           │ │   └ *exec.CancelChecker
│           │ │     └ *distsqlrun.colBatchScan
│           │ ├ *colrpc.Inbox
│           │ └ *colrpc.Inbox
│           └ *exec.UnorderedSynchronizer
│             ├ *colrpc.Inbox
│             ├ *colrpc.Inbox
│             ├ *exec.routerOutputOp
│             │ └ *exec.HashRouter
│             │   └ *exec.CancelChecker
│             │     └ *distsqlrun.colBatchScan
│             ├ *colrpc.Inbox
│             └ *colrpc.Inbox
├ Node 4
│ └ *colrpc.Outbox
│   └ *exec.deselectorOp
│     └ *exec.countOp
│       └ *exec.simpleProjectOp
│         └ *exec.hashJoinEqOp
│           ├ *exec.UnorderedSynchronizer
│           │ ├ *colrpc.Inbox
│           │ ├ *colrpc.Inbox
│           │ ├ *colrpc.Inbox
│           │ ├ *exec.routerOutputOp
│           │ │ └ *exec.HashRouter
│           │ │   └ *exec.CancelChecker
│           │ │     └ *distsqlrun.colBatchScan
│           │ └ *colrpc.Inbox
│           └ *exec.UnorderedSynchronizer
│             ├ *colrpc.Inbox
│             ├ *colrpc.Inbox
│             ├ *colrpc.Inbox
│             ├ *exec.routerOutputOp
│             │ └ *exec.HashRouter
│             │   └ *exec.CancelChecker
│             │     └ *distsqlrun.colBatchScan
│             └ *colrpc.Inbox
└ Node 5
  └ *colrpc.Outbox
    └ *exec.deselectorOp
      └ *exec.countOp
        └ *exec.simpleProjectOp
          └ *exec.hashJoinEqOp
            ├ *exec.UnorderedSynchronizer
            │ ├ *colrpc.Inbox
            │ ├ *colrpc.Inbox
            │ ├ *colrpc.Inbox
            │ ├ *colrpc.Inbox
            │ └ *exec.routerOutputOp
            │   └ *exec.HashRouter
            │     └ *exec.CancelChecker
            │       └ *distsqlrun.colBatchScan
            └ *exec.UnorderedSynchronizer
              ├ *colrpc.Inbox
              ├ *colrpc.Inbox
              ├ *colrpc.Inbox
              ├ *colrpc.Inbox
              └ *exec.routerOutputOp
                └ *exec.HashRouter
                  └ *exec.CancelChecker
                    └ *distsqlrun.colBatchScan
