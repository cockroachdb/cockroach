# LogicTest: default distsql

query TTT colnames
EXPLAIN (PLAN) SELECT 1 FROM system.public.jobs WHERE FALSE
----
Tree         Field  Description
render       ·      ·
 └── norows  ·      ·

query TTT colnames
EXPLAIN (PLAN) SELECT 1 FROM system.public.jobs WHERE NULL
----
Tree         Field  Description
render       ·      ·
 └── norows  ·      ·

query TTT colnames
EXPLAIN (PLAN) SELECT 1 FROM system.public.jobs WHERE TRUE
----
Tree       Field  Description
render     ·      ·
└── scan  ·      ·
·          table  jobs@primary
·          spans  ALL

query TITTTTT colnames
EXPLAIN (PLAN, METADATA) SELECT 1
----
Tree           Level  Type      Field  Description  Columns  Ordering
render         0      render    ·      ·            ("1")    "1"=CONST
 └── emptyrow  1      emptyrow  ·      ·            ()       ·

query TITTTTT colnames
EXPLAIN (METADATA,PLAN) SELECT 1
----
Tree           Level  Type      Field  Description  Columns  Ordering
render         0      render    ·      ·            ("1")    "1"=CONST
 └── emptyrow  1      emptyrow  ·      ·            ()       ·

query T
SELECT message FROM [SHOW KV TRACE FOR SELECT 1]
 WHERE message LIKE 'fetched:%' OR message LIKE 'output row%'
----
output row: [1]

query TITTTTT colnames
EXPLAIN (TYPES) SELECT 1
----
Tree           Level  Type      Field     Description  Columns    Ordering
render         0      render    ·         ·            ("1" int)  "1"=CONST
 │             0      ·         render 0  (1)[int]     ·          ·
 └── emptyrow  1      emptyrow  ·         ·            ()         ·

statement error cannot set EXPLAIN mode more than once
EXPLAIN (PLAN,PLAN) SELECT 1

statement error cannot set EXPLAIN mode more than once
EXPLAIN (PLAN,DISTSQL) SELECT 1

statement error unsupported EXPLAIN option
EXPLAIN (PLAN,UNKNOWN) SELECT 1

statement error could not determine data type of placeholder \$1
EXPLAIN (TYPES) SELECT $1

query TITTTTT colnames
EXPLAIN (TYPES) SELECT $1::INT
----
Tree           Level  Type      Field     Description               Columns          Ordering
render         0      render    ·         ·                         ("$1::INT" int)  "$1::INT"=CONST
 │             0      ·         render 0  (($1)[string]::INT)[int]  ·                ·
 └── emptyrow  1      emptyrow  ·         ·                         ()               ·

# Ensure that tracing results are sorted after gathering
query TITTTTT
EXPLAIN (METADATA) SHOW TRACE FOR SELECT 1
----
sort                                         0  sort            ·      ·             ("timestamp", age, message, tag, loc, operation, span)                                 +"timestamp"
 │                                           0  ·               order  +"timestamp"  ·                                                                                      ·
 └── window                                  1  window          ·      ·             ("timestamp", age, message, tag, loc, operation, span)                                 ·
      └── render                             2  render          ·      ·             ("timestamp", """timestamp""", message, tag, loc, operation, span)                     "timestamp"="""timestamp"""
           └── window                        3  window          ·      ·             ("timestamp", message, tag, loc, operation, span)                                      ·
                └── render                   4  render          ·      ·             ("timestamp", message, tag, loc, operation, span, txn_idx, span_idx, message_idx)      ·
                     └── show trace for      5  show trace for  ·      ·             (txn_idx, span_idx, message_idx, "timestamp", duration, operation, loc, tag, message)  ·
                          └── render         6  render          ·      ·             ("1")                                                                                  "1"=CONST
                               └── emptyrow  7  emptyrow        ·      ·             ()                                                                                     ·

# Ensure that all relevant statement types can be explained
query TTT
EXPLAIN CREATE DATABASE foo
----
create database  ·  ·

query TTT
EXPLAIN CREATE TABLE foo (x INT)
----
create table  ·  ·

statement ok
CREATE TABLE foo (x INT)

query TTT
EXPLAIN CREATE INDEX a ON foo(x)
----
create index  ·  ·

statement ok
CREATE DATABASE foo

query TTT
EXPLAIN DROP DATABASE foo
----
drop database  ·  ·

# explain SHOW JOBS - beware to test this before the CREATE INDEX
# below, otherwise the result becomes non-deterministic.
# Migrations with backfill will affect the number of rows.
query TTT
EXPLAIN SHOW JOBS
----
render       ·     ·
 └── values  ·     ·
·            size  13 columns, 1 row

statement ok
CREATE INDEX a ON foo(x)

query TTT
EXPLAIN DROP INDEX foo@a
----
drop index  ·  ·

query TTT
EXPLAIN ALTER TABLE foo ADD COLUMN y INT
----
alter table  ·  ·

query TTT
EXPLAIN (EXPRS) ALTER TABLE foo SPLIT AT VALUES (42)
----
split        ·              ·
 └── values  ·              ·
·            size           1 column, 1 row
·            row 0, expr 0  42

query TTT
EXPLAIN DROP TABLE foo
----
drop table  ·  ·

query TTT
EXPLAIN SHOW DATABASES
----
sort              ·      ·
 │                order  +"Database"
 └── render       ·      ·
      └── values  ·      ·
·                 size   4 columns, 6 rows

query TTT
EXPLAIN SHOW TABLES
----
sort                   ·      ·
 │                     order  +"Table"
 └── render            ·      ·
      └── filter       ·      ·
           └── values  ·      ·
·                      size   5 columns, 93 rows

query TTT
EXPLAIN SHOW DATABASE
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  2 columns, 24 rows

query TTT
EXPLAIN SHOW TIME ZONE
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  2 columns, 24 rows

query TTT
EXPLAIN SHOW DEFAULT_TRANSACTION_ISOLATION
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  2 columns, 24 rows

query TTT
EXPLAIN SHOW TRANSACTION ISOLATION LEVEL
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  2 columns, 24 rows

query TTT
EXPLAIN SHOW TRANSACTION PRIORITY
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  2 columns, 24 rows

query TTT
EXPLAIN SHOW COLUMNS FROM foo
----
sort                                       ·         ·
 │                                         order     +ordinal_position
 └── render                                ·         ·
      └── group                            ·         ·
           │                               group by  @1-@5
           └── render                      ·         ·
                └── join                   ·         ·
                     │                     type      left outer
                     │                     equality  (column_name) = (column_name)
                     ├── render            ·         ·
                     │    └── filter       ·         ·
                     │         └── values  ·         ·
                     │                     size      17 columns, 783 rows
                     └── render            ·         ·
                          └── filter       ·         ·
                               └── values  ·         ·
·                                          size      13 columns, 37 rows

query TTT
EXPLAIN SHOW GRANTS ON foo
----
sort                   ·      ·
 │                     order  +"Database",+"Table",+"User",+"Privileges"
 └── render            ·      ·
      └── filter       ·      ·
           └── values  ·      ·
·                      size   8 columns, 130 rows


query TTT
EXPLAIN SHOW INDEX FROM foo
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  13 columns, 37 rows

query TTT
EXPLAIN SHOW CONSTRAINTS FROM foo
----
sort         ·      ·
 │           order  +"Table",+"Name"
 └── values  ·      ·
·            size   5 columns, 0 rows

query TTT
EXPLAIN SHOW USERS
----
render     ·      ·
 └── scan  ·      ·
·          table  users@primary
·          spans  ALL
