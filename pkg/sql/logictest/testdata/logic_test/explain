# LogicTest: default distsql distsql-metadata

query TTT colnames
EXPLAIN (PLAN) SELECT 1 FROM system.jobs WHERE FALSE
----
Tree         Field  Description
render       ·      ·
 └── norows  ·      ·

query TTT colnames
EXPLAIN (PLAN) SELECT 1 FROM system.jobs WHERE NULL
----
Tree         Field  Description
render       ·      ·
 └── norows  ·      ·

query TTT colnames
EXPLAIN (PLAN) SELECT 1 FROM system.jobs WHERE TRUE
----
Tree       Field  Description
render     ·      ·
└── scan  ·      ·
·          table  jobs@primary
·          spans  ALL

query TITTTTT colnames
EXPLAIN (PLAN, VERBOSE) SELECT 1
----
Tree           Level  Type      Field     Description  Columns  Ordering
render         0      render    ·         ·            ("1")    "1"=CONST
 │             0      ·         render 0  1            ·        ·
 └── emptyrow  1      emptyrow  ·         ·            ()       ·

query TITTTTT colnames
EXPLAIN (VERBOSE,PLAN) SELECT 1
----
Tree           Level  Type      Field     Description  Columns  Ordering
render         0      render    ·         ·            ("1")    "1"=CONST
 │             0      ·         render 0  1            ·        ·
 └── emptyrow  1      emptyrow  ·         ·            ()       ·

query T
SELECT message FROM [SHOW KV TRACE FOR SELECT 1]
 WHERE message LIKE 'fetched:%' OR message LIKE 'output row%'
----
output row: [1]

query TITTTTT colnames
EXPLAIN (TYPES) SELECT 1
----
Tree           Level  Type      Field     Description  Columns    Ordering
render         0      render    ·         ·            ("1" int)  "1"=CONST
 │             0      ·         render 0  (1)[int]     ·          ·
 └── emptyrow  1      emptyrow  ·         ·            ()         ·

statement error cannot set EXPLAIN mode more than once
EXPLAIN (PLAN,PLAN) SELECT 1

statement error cannot set EXPLAIN mode more than once
EXPLAIN (PLAN,DISTSQL) SELECT 1

statement error unsupported EXPLAIN option
EXPLAIN (PLAN,UNKNOWN) SELECT 1

statement error could not determine data type of placeholder \$1
EXPLAIN (TYPES) SELECT $1

query TITTTTT colnames
EXPLAIN (TYPES) SELECT $1::INT
----
Tree           Level  Type      Field     Description               Columns          Ordering
render         0      render    ·         ·                         ("$1::INT" int)  "$1::INT"=CONST
 │             0      ·         render 0  (($1)[string]::INT)[int]  ·                ·
 └── emptyrow  1      emptyrow  ·         ·                         ()               ·

# Ensure that tracing results are sorted after gathering
query TITTTTT
EXPLAIN (VERBOSE) SHOW TRACE FOR SELECT 1
----
sort                                         0  sort            ·         ·                                                                                                                                                                            ("timestamp", age, message, tag, loc, operation, span)                        +"timestamp"
 │                                           0  ·               order     +"timestamp"                                                                                                                                                                 ·                                                                             ·
 └── window                                  1  window          ·         ·                                                                                                                                                                            ("timestamp", age, message, tag, loc, operation, span)                        ·
      │                                      1  ·               window 0  first_value("timestamp") OVER (ORDER BY "timestamp")                                                                                                                         ·                                                                             ·
      │                                      1  ·               render 1  "timestamp" - first_value("timestamp") OVER (ORDER BY "timestamp")                                                                                                           ·                                                                             ·
      └── render                             2  render          ·         ·                                                                                                                                                                            ("timestamp", """timestamp""", message, tag, loc, operation, span)            "timestamp"="""timestamp"""
           │                                 2  ·               render 0  "timestamp"                                                                                                                                                                  ·                                                                             ·
           │                                 2  ·               render 1  "timestamp"                                                                                                                                                                  ·                                                                             ·
           │                                 2  ·               render 2  message                                                                                                                                                                      ·                                                                             ·
           │                                 2  ·               render 3  tag                                                                                                                                                                          ·                                                                             ·
           │                                 2  ·               render 4  loc                                                                                                                                                                          ·                                                                             ·
           │                                 2  ·               render 5  operation                                                                                                                                                                    ·                                                                             ·
           │                                 2  ·               render 6  span                                                                                                                                                                         ·                                                                             ·
           └── window                        3  window          ·         ·                                                                                                                                                                            ("timestamp", message, tag, loc, operation, span)                             ·
                │                            3  ·               window 0  first_value(test.crdb_internal.session_trace.operation) OVER (PARTITION BY test.crdb_internal.session_trace.span_idx ORDER BY test.crdb_internal.session_trace.message_idx)  ·                                                                             ·
                │                            3  ·               render 4  first_value(test.crdb_internal.session_trace.operation) OVER (PARTITION BY test.crdb_internal.session_trace.span_idx ORDER BY test.crdb_internal.session_trace.message_idx)  ·                                                                             ·
                └── render                   4  render          ·         ·                                                                                                                                                                            ("timestamp", message, tag, loc, operation, span, message_idx)                ·
                     │                       4  ·               render 0  test.crdb_internal.session_trace."timestamp"                                                                                                                                 ·                                                                             ·
                     │                       4  ·               render 1  test.crdb_internal.session_trace.message                                                                                                                                     ·                                                                             ·
                     │                       4  ·               render 2  test.crdb_internal.session_trace.tag                                                                                                                                         ·                                                                             ·
                     │                       4  ·               render 3  test.crdb_internal.session_trace.loc                                                                                                                                         ·                                                                             ·
                     │                       4  ·               render 4  test.crdb_internal.session_trace.operation                                                                                                                                   ·                                                                             ·
                     │                       4  ·               render 5  test.crdb_internal.session_trace.span_idx                                                                                                                                    ·                                                                             ·
                     │                       4  ·               render 6  test.crdb_internal.session_trace.message_idx                                                                                                                                 ·                                                                             ·
                     └── show trace for      5  show trace for  ·         ·                                                                                                                                                                            (span_idx, message_idx, "timestamp", duration, operation, loc, tag, message)  ·
                          └── render         6  render          ·         ·                                                                                                                                                                            ("1")                                                                         "1"=CONST
                               │             6  ·               render 0  1                                                                                                                                                                            ·                                                                             ·
                               └── emptyrow  7  emptyrow        ·         ·                                                                                                                                                                            ()                                                                            ·

# Ensure that all relevant statement types can be explained
query TTT
EXPLAIN CREATE DATABASE foo
----
create database  ·  ·

query TTT
EXPLAIN CREATE TABLE foo (x INT)
----
create table  ·  ·

statement ok
CREATE TABLE foo (x INT)

query TTT
EXPLAIN CREATE INDEX a ON foo(x)
----
create index  ·  ·

statement ok
CREATE DATABASE foo

query TTT
EXPLAIN DROP DATABASE foo
----
drop database  ·  ·

# explain SHOW JOBS - beware to test this before the CREATE INDEX
# below, otherwise the result becomes non-deterministic.
# Migrations with backfill will affect the number of rows.
query TTT
EXPLAIN SHOW JOBS
----
render       ·     ·
 └── values  ·     ·
·            size  13 columns, 0 rows

statement ok
CREATE INDEX a ON foo(x)

query TTT
EXPLAIN DROP INDEX foo@a
----
drop index  ·  ·

query TTT
EXPLAIN ALTER TABLE foo ADD COLUMN y INT
----
alter table  ·  ·

query TTT
SELECT "Tree", "Field", "Description" FROM [EXPLAIN (VERBOSE) ALTER TABLE foo SPLIT AT VALUES (42)]
----
split        ·              ·
 └── values  ·              ·
·            size           1 column, 1 row
·            row 0, expr 0  42

query TTT
EXPLAIN DROP TABLE foo
----
drop table  ·  ·

query TTT
EXPLAIN SHOW DATABASES
----
distinct               ·          ·
 │                     order key  Database
 └── sort              ·          ·
      │                order      +"Database"
      └── render       ·          ·
           └── values  ·          ·
·                      size       4 columns, 12 rows

query TTT
EXPLAIN SHOW TABLES
----
sort                   ·      ·
 │                     order  +table_schema,+"Table"
 └── render            ·      ·
      └── filter       ·      ·
           └── values  ·      ·
·                      size   6 columns, 81 rows

query TTT
EXPLAIN SHOW DATABASE
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  2 columns, 28 rows

query TTT
EXPLAIN SHOW TIME ZONE
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  2 columns, 28 rows

query TTT
EXPLAIN SHOW DEFAULT_TRANSACTION_ISOLATION
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  2 columns, 28 rows

query TTT
EXPLAIN SHOW TRANSACTION ISOLATION LEVEL
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  2 columns, 28 rows

query TTT
EXPLAIN SHOW TRANSACTION PRIORITY
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  2 columns, 28 rows

query TTT
EXPLAIN SHOW COLUMNS FROM foo
----
sort                                       ·            ·
 │                                         order        +ordinal_position
 └── render                                ·            ·
      └── group                            ·            ·
           │                               aggregate 0  column_name
           │                               aggregate 1  data_type
           │                               aggregate 2  is_nullable
           │                               aggregate 3  column_default
           │                               aggregate 4  ordinal_position
           │                               aggregate 5  array_agg(index_name)
           │                               group by     @1-@5
           └── render                      ·            ·
                └── join                   ·            ·
                     │                     type         left outer
                     │                     equality     (column_name) = (column_name)
                     ├── render            ·            ·
                     │    └── filter       ·            ·
                     │         └── values  ·            ·
                     │                     size         17 columns, 744 rows
                     └── render            ·            ·
                          └── filter       ·            ·
                               └── values  ·            ·
·                                          size         13 columns, 3 rows

query TTT
EXPLAIN SHOW GRANTS ON foo
----
sort                   ·      ·
 │                     order  +"Database",+"Schema",+"Table",+"User"
 └── render            ·      ·
      └── filter       ·      ·
           └── values  ·      ·
·                      size   8 columns, 130 rows


query TTT
EXPLAIN SHOW INDEX FROM foo
----
render            ·     ·
 └── filter       ·     ·
      └── values  ·     ·
·                 size  13 columns, 3 rows

query TTT
EXPLAIN SHOW CONSTRAINTS FROM foo
----
sort         ·      ·
 │           order  +"Table",+"Name"
 └── values  ·      ·
·            size   5 columns, 0 rows

query TTT
EXPLAIN SHOW USERS
----
render     ·      ·
 └── scan  ·      ·
·          table  users@primary
·          spans  ALL
