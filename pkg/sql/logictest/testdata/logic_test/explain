# LogicTest: local local-vec-off local-spec-planning

statement ok
CREATE TABLE t (a INT PRIMARY KEY)

# Hide the line with "vectorized:", which differs depending on the config.
query T
SELECT info FROM [EXPLAIN (DISTSQL) SELECT * FROM (SELECT avg(a) OVER () FROM t)] WHERE info NOT LIKE 'vectorized%'
----
distribution: local
·
• window
│
└── • scan
      missing stats
      table: t@t_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUUF9L6zAUf7-fIhy4rL3ksnWPedqYVYt1nW3ZhFEkNsdR7JqapPPP6HeXNgOdMNG3_P4fsgf9VAKDxA_9WUqK6kGS8zi6Jmv_dhFOgzlxzoIkTW5Clxw8_6zBOUC-2zjcJdHSj4njWs24GVld-rFvC-dRSsLgyieDHeZGquINxd8BUKikwDnfoga2Bg8yCrWSOWotVUfte0MgXoCNKBRV3ZiOzijkUiGwPZjClAgMUn5fYoxcoBqOgIJAw4uyrzUTc1c_4itQmMmy2VaaEQ4Ukpp3z_-QtRRkYz7KteEbBOa19OcHrIpKyGdUQ-94fbq8cCaeCxSixjAyGZ-cG_9mLkZdy0rj0dip5lGbUUCxQfunWjYqx4WSeT9jYdTnekKgNlb1LAgqK3UHfg5734bHX8JZ--c9AAD__8sxxS4=

# Test that explaining a query that contains a subquery the result of which is
# needed to make the physical plan is rejected. See #40677.
statement error running EXPLAIN \(DISTSQL\) on this query is unsupported because of the presence of subqueries
EXPLAIN (DISTSQL) SELECT avg(a) OVER (ROWS (SELECT count(*) FROM t) PRECEDING) FROM t

# Test that optsteps is runnable from EXPLAIN.

query T
EXPLAIN(OPTSTEPS) SELECT * from t
----
================================================================================
Initial expression
  Cost: 1114.86
================================================================================
  explain
   ├── columns: info:4(string)
   ├── mode: optsteps
   ├── stats: [rows=10]
   ├── cost: 1114.86
   ├── distribution: test
   └── project
        ├── columns: a:1(int!null)
        ├── stats: [rows=1000]
        ├── cost: 1114.84
        ├── key: (1)
        ├── distribution: test
        ├── prune: (1)
        └── scan test.public.t
             ├── columns: test.public.t.a:1(int!null) test.public.t.crdb_internal_mvcc_timestamp:2(decimal) test.public.t.tableoid:3(oid)
             ├── stats: [rows=1000]
             ├── cost: 1104.82
             ├── key: (1)
             ├── fd: (1)-->(2,3)
             ├── distribution: test
             └── prune: (1-3)
================================================================================
PruneScanCols
  Cost: 1074.46
================================================================================
   explain
    ├── columns: info:4(string)
    ├── mode: optsteps
    ├── stats: [rows=10]
  - ├── cost: 1114.86
  + ├── cost: 1074.46
    ├── distribution: test
    └── project
         ├── columns: a:1(int!null)
         ├── stats: [rows=1000]
  -      ├── cost: 1114.84
  +      ├── cost: 1074.44
         ├── key: (1)
         ├── distribution: test
         ├── prune: (1)
         └── scan test.public.t
  -           ├── columns: test.public.t.a:1(int!null) test.public.t.crdb_internal_mvcc_timestamp:2(decimal) test.public.t.tableoid:3(oid)
  +           ├── columns: test.public.t.a:1(int!null)
              ├── stats: [rows=1000]
  -           ├── cost: 1104.82
  +           ├── cost: 1064.42
              ├── key: (1)
  -           ├── fd: (1)-->(2,3)
              ├── distribution: test
  -           └── prune: (1-3)
  +           └── prune: (1)
================================================================================
EliminateProject
  Cost: 1064.44
================================================================================
   explain
    ├── columns: info:4(string)
    ├── mode: optsteps
    ├── stats: [rows=10]
  - ├── cost: 1074.46
  + ├── cost: 1064.44
    ├── distribution: test
  - └── project
  + └── scan test.public.t
         ├── columns: a:1(int!null)
         ├── stats: [rows=1000]
  -      ├── cost: 1074.44
  +      ├── cost: 1064.42
         ├── key: (1)
         ├── distribution: test
  -      ├── prune: (1)
  -      └── scan test.public.t
  -           ├── columns: test.public.t.a:1(int!null)
  -           ├── stats: [rows=1000]
  -           ├── cost: 1064.42
  -           ├── key: (1)
  -           ├── distribution: test
  -           └── prune: (1)
  +      └── prune: (1)
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
================================================================================
Final best expression
  Cost: 1064.44
================================================================================
  explain
   ├── columns: info:4(string)
   ├── mode: optsteps
   ├── stats: [rows=10]
   ├── cost: 1064.44
   ├── distribution: test
   └── scan test.public.t
        ├── columns: a:1(int!null)
        ├── stats: [rows=1000]
        ├── cost: 1064.42
        ├── key: (1)
        ├── distribution: test
        └── prune: (1)
·
