# LogicTest: local

statement ok
CREATE TABLE json_tab (
  a INT PRIMARY KEY,
  b JSONB
)

statement ok
CREATE INVERTED INDEX foo_inv ON json_tab(b)

statement ok
CREATE TABLE array_tab (
  a INT PRIMARY KEY,
  b INT[]
)

statement ok
CREATE INVERTED INDEX foo_inv ON array_tab(b)

# This query performs an inverted join.
query TTT
EXPLAIN SELECT * FROM json_tab@foo_inv AS j1, json_tab AS j2 WHERE j1.b @> j2.b ORDER BY j1.a, j2.a
----
·                        distribution           local
·                        vectorized             true
sort                     ·                      ·
 │                       order                  +a,+a
 └── lookup join         ·                      ·
      │                  table                  json_tab@primary
      │                  equality               (a) = (a)
      │                  equality cols are key  ·
      │                  pred                   b @> b
      └── inverted join  ·                      ·
           │             table                  json_tab@foo_inv
           └── scan      ·                      ·
·                        missing stats          ·
·                        table                  json_tab@primary
·                        spans                  FULL SCAN

# This query performs a cross join followed by a filter.
query TTT
EXPLAIN SELECT * FROM json_tab@primary AS j1, json_tab AS j2 WHERE j1.b @> j2.b ORDER BY j1.a, j2.a
----
·                distribution   local
·                vectorized     true
sort             ·              ·
 │               order          +a,+a
 └── cross join  ·              ·
      │          pred           b @> b
      ├── scan   ·              ·
      │          missing stats  ·
      │          table          json_tab@primary
      │          spans          FULL SCAN
      └── scan   ·              ·
·                missing stats  ·
·                table          json_tab@primary
·                spans          FULL SCAN

# This query performs an inverted join with an additional filter.
query TTT
EXPLAIN SELECT * FROM json_tab@foo_inv AS j1, json_tab AS j2
WHERE j1.b @> j2.b AND j1.b @> '{"a": {}}' AND j2.a < 20
ORDER BY j1.a, j2.a
----
·                        distribution           local
·                        vectorized             true
sort                     ·                      ·
 │                       order                  +a,+a
 └── lookup join         ·                      ·
      │                  table                  json_tab@primary
      │                  equality               (a) = (a)
      │                  equality cols are key  ·
      │                  pred                   (b @> b) AND (b @> '{"a": {}}')
      └── inverted join  ·                      ·
           │             table                  json_tab@foo_inv
           └── scan      ·                      ·
·                        missing stats          ·
·                        table                  json_tab@primary
·                        spans                  [ - /19]

# This query performs a cross join followed by a filter.
query TTT
EXPLAIN SELECT * FROM json_tab@primary AS j1, json_tab AS j2
WHERE j1.b @> j2.b AND j1.b @> '{"a": {}}' AND j2.a < 20
ORDER BY j1.a, j2.a
----
·                    distribution   local
·                    vectorized     true
sort                 ·              ·
 │                   order          +a,+a
 └── cross join      ·              ·
      │              pred           b @> b
      ├── scan       ·              ·
      │              missing stats  ·
      │              table          json_tab@primary
      │              spans          [ - /19]
      └── filter     ·              ·
           │         filter         b @> '{"a": {}}'
           └── scan  ·              ·
·                    missing stats  ·
·                    table          json_tab@primary
·                    spans          FULL SCAN

# This query performs an inverted join.
query TTT
EXPLAIN SELECT * FROM array_tab@foo_inv AS a1, array_tab AS a2 WHERE a1.b @> a2.b ORDER BY a1.a, a2.a
----
·                        distribution           local
·                        vectorized             true
sort                     ·                      ·
 │                       order                  +a,+a
 └── lookup join         ·                      ·
      │                  table                  array_tab@primary
      │                  equality               (a) = (a)
      │                  equality cols are key  ·
      │                  pred                   b @> b
      └── inverted join  ·                      ·
           │             table                  array_tab@foo_inv
           └── scan      ·                      ·
·                        missing stats          ·
·                        table                  array_tab@primary
·                        spans                  FULL SCAN

# This query performs a cross join followed by a filter.
query TTT
EXPLAIN SELECT * FROM array_tab@primary AS a1, array_tab AS a2 WHERE a1.b @> a2.b ORDER BY a1.a, a2.a
----
·                distribution   local
·                vectorized     true
sort             ·              ·
 │               order          +a,+a
 └── cross join  ·              ·
      │          pred           b @> b
      ├── scan   ·              ·
      │          missing stats  ·
      │          table          array_tab@primary
      │          spans          FULL SCAN
      └── scan   ·              ·
·                missing stats  ·
·                table          array_tab@primary
·                spans          FULL SCAN

# This query performs an inverted join with an additional filter.
query TTT
EXPLAIN SELECT * FROM array_tab@primary AS a2
INNER INVERTED JOIN array_tab@foo_inv AS a1
ON a1.b @> a2.b AND a1.b @> '{1}' AND a2.a < 5
ORDER BY a1.a, a2.a
----
·                        distribution           local
·                        vectorized             true
sort                     ·                      ·
 │                       order                  +a,+a
 └── lookup join         ·                      ·
      │                  table                  array_tab@primary
      │                  equality               (a) = (a)
      │                  equality cols are key  ·
      │                  pred                   (b @> b) AND (b @> ARRAY[1])
      └── inverted join  ·                      ·
           │             table                  array_tab@foo_inv
           └── scan      ·                      ·
·                        missing stats          ·
·                        table                  array_tab@primary
·                        spans                  [ - /4]

# This query performs a cross join followed by a filter.
query TTT
EXPLAIN SELECT * FROM array_tab@primary AS a1, array_tab AS a2
WHERE a1.b @> a2.b AND a1.b @> '{1}' AND a2.a < 5
ORDER BY a1.a, a2.a
----
·                    distribution   local
·                    vectorized     true
sort                 ·              ·
 │                   order          +a,+a
 └── cross join      ·              ·
      │              pred           b @> b
      ├── scan       ·              ·
      │              missing stats  ·
      │              table          array_tab@primary
      │              spans          [ - /4]
      └── filter     ·              ·
           │         filter         b @> ARRAY[1]
           └── scan  ·              ·
·                    missing stats  ·
·                    table          array_tab@primary
·                    spans          FULL SCAN
