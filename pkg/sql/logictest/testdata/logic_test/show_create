statement ok
SET experimental_enable_unique_without_index_constraints = true

statement ok
CREATE TABLE c (
  a INT NOT NULL,
  b INT NULL,
  INDEX c_a_b_idx (a ASC, b ASC),
  UNIQUE WITHOUT INDEX (a, b),
  CONSTRAINT unique_a_partial UNIQUE WITHOUT INDEX (a) WHERE b > 0,
  FAMILY fam_0_a_rowid (a, rowid),
  FAMILY fam_1_b (b)
)

statement ok
COMMENT ON TABLE c IS 'table'

statement ok
COMMENT ON COLUMN c.a IS 'column'

statement ok
COMMENT ON INDEX c_a_b_idx IS 'index'

statement ok
CREATE TABLE d (d INT PRIMARY KEY)

query TT colnames
SHOW CREATE c
----
table_name  create_statement
c           CREATE TABLE public.c (
            a INT8 NOT NULL,
            b INT8 NULL,
            rowid INT8 NOT VISIBLE NOT NULL DEFAULT unique_rowid(),
            CONSTRAINT "primary" PRIMARY KEY (rowid ASC),
            INDEX c_a_b_idx (a ASC, b ASC),
            FAMILY fam_0_a_rowid (a, rowid),
            FAMILY fam_1_b (b),
            CONSTRAINT unique_a_b UNIQUE WITHOUT INDEX (a, b),
            CONSTRAINT unique_a_partial UNIQUE WITHOUT INDEX (a) WHERE b > 0:::INT8
);
COMMENT ON TABLE public.c IS 'table';
COMMENT ON COLUMN public.c.a IS 'column';
COMMENT ON INDEX public.c@c_a_b_idx IS 'index'

# TODO(rytaft): adding a NOT VALID unique constraint in PostgreSQL returns
# an error. We should consider doing the same unless the constraint is UNIQUE
# WITHOUT INDEX.
statement ok
ALTER TABLE c ADD CONSTRAINT check_b CHECK (b IN (1, 2, 3)) NOT VALID;
ALTER TABLE c ADD CONSTRAINT fk_a FOREIGN KEY (a) REFERENCES d (d) NOT VALID;
ALTER TABLE c ADD CONSTRAINT unique_a UNIQUE (a) NOT VALID;
ALTER TABLE c ADD CONSTRAINT unique_b UNIQUE WITHOUT INDEX (b) NOT VALID;
ALTER TABLE c ADD CONSTRAINT unique_b_partial UNIQUE WITHOUT INDEX (b) WHERE a > 0 NOT VALID;

query TT
SHOW CREATE c
----
c  CREATE TABLE public.c (
   a INT8 NOT NULL,
   b INT8 NULL,
   rowid INT8 NOT VISIBLE NOT NULL DEFAULT unique_rowid(),
   CONSTRAINT "primary" PRIMARY KEY (rowid ASC),
   CONSTRAINT fk_a FOREIGN KEY (a) REFERENCES public.d(d) NOT VALID,
   INDEX c_a_b_idx (a ASC, b ASC),
   UNIQUE INDEX unique_a (a ASC),
   FAMILY fam_0_a_rowid (a, rowid),
   FAMILY fam_1_b (b),
   CONSTRAINT check_b CHECK (b IN (1:::INT8, 2:::INT8, 3:::INT8)) NOT VALID,
   CONSTRAINT unique_a_b UNIQUE WITHOUT INDEX (a, b),
   CONSTRAINT unique_a_partial UNIQUE WITHOUT INDEX (a) WHERE b > 0:::INT8,
   CONSTRAINT unique_b UNIQUE WITHOUT INDEX (b) NOT VALID,
   CONSTRAINT unique_b_partial UNIQUE WITHOUT INDEX (b) WHERE a > 0:::INT8 NOT VALID
);
COMMENT ON TABLE public.c IS 'table';
COMMENT ON COLUMN public.c.a IS 'column';
COMMENT ON INDEX public.c@c_a_b_idx IS 'index'

statement ok
ALTER TABLE c VALIDATE CONSTRAINT check_b;
ALTER TABLE c VALIDATE CONSTRAINT fk_a;
ALTER TABLE c VALIDATE CONSTRAINT unique_a;
ALTER TABLE c VALIDATE CONSTRAINT unique_b;
ALTER TABLE c VALIDATE CONSTRAINT unique_a_b;
ALTER TABLE c VALIDATE CONSTRAINT unique_b_partial;

query TT
SHOW CREATE c
----
c  CREATE TABLE public.c (
   a INT8 NOT NULL,
   b INT8 NULL,
   rowid INT8 NOT VISIBLE NOT NULL DEFAULT unique_rowid(),
   CONSTRAINT "primary" PRIMARY KEY (rowid ASC),
   CONSTRAINT fk_a FOREIGN KEY (a) REFERENCES public.d(d),
   INDEX c_a_b_idx (a ASC, b ASC),
   UNIQUE INDEX unique_a (a ASC),
   FAMILY fam_0_a_rowid (a, rowid),
   FAMILY fam_1_b (b),
   CONSTRAINT check_b CHECK (b IN (1:::INT8, 2:::INT8, 3:::INT8)),
   CONSTRAINT unique_a_b UNIQUE WITHOUT INDEX (a, b),
   CONSTRAINT unique_a_partial UNIQUE WITHOUT INDEX (a) WHERE b > 0:::INT8,
   CONSTRAINT unique_b UNIQUE WITHOUT INDEX (b),
   CONSTRAINT unique_b_partial UNIQUE WITHOUT INDEX (b) WHERE a > 0:::INT8
);
COMMENT ON TABLE public.c IS 'table';
COMMENT ON COLUMN public.c.a IS 'column';
COMMENT ON INDEX public.c@c_a_b_idx IS 'index'

# Regression test for #60701. In the SHOW CREATE output of a table with a
# partial interleaved index, the INTERLEAVE clause should precede the WHERE
# clause. This matches the accepted syntax for creating partial interleaved
# indexes.
statement ok
CREATE TABLE t60701_a (a INT PRIMARY KEY, FAMILY (a));
CREATE TABLE t60701_b (b INT PRIMARY KEY, a INT REFERENCES t60701_a (a), FAMILY (b, a));
CREATE INDEX i ON t60701_b (a) INTERLEAVE IN PARENT t60701_a (a) WHERE b > 0;

query T
SELECT create_statement FROM [SHOW CREATE TABLE t60701_b]
----
CREATE TABLE public.t60701_b (
   b INT8 NOT NULL,
   a INT8 NULL,
   CONSTRAINT "primary" PRIMARY KEY (b ASC),
   CONSTRAINT fk_a_ref_t60701_a FOREIGN KEY (a) REFERENCES public.t60701_a(a),
   INDEX i (a ASC) INTERLEAVE IN PARENT public.t60701_a (a) WHERE b > 0:::INT8,
   FAMILY fam_0_b_a (b, a)
)
