statement ok
CREATE TABLE c (
	a INT NOT NULL,
	b INT NULL,
	INDEX c_a_b_idx (a ASC, b ASC),
	FAMILY fam_0_a_rowid (a, rowid),
	FAMILY fam_1_b (b)
)

statement ok
COMMENT ON TABLE c IS 'table'

statement ok
COMMENT ON COLUMN c.a IS 'column'

statement ok
COMMENT ON INDEX c_a_b_idx IS 'index'

statement ok
CREATE TABLE d (d INT PRIMARY KEY)

query TT colnames
SHOW CREATE c
----
table_name  create_statement
c           CREATE TABLE public.c (
            a INT8 NOT NULL,
            b INT8 NULL,
            INDEX c_a_b_idx (a ASC, b ASC),
            FAMILY fam_0_a_rowid (a, rowid),
            FAMILY fam_1_b (b)
);
COMMENT ON TABLE public.c IS 'table';
COMMENT ON COLUMN public.c.a IS 'column';
COMMENT ON INDEX public.c@c_a_b_idx IS 'index'

statement ok
ALTER TABLE c ADD CONSTRAINT check_b CHECK (b IN (1, 2, 3)) NOT VALID;
ALTER TABLE c ADD CONSTRAINT fk_a FOREIGN KEY (a) REFERENCES d (d) NOT VALID;

query TT
SHOW CREATE c
----
c  CREATE TABLE public.c (
   a INT8 NOT NULL,
   b INT8 NULL,
   CONSTRAINT fk_a FOREIGN KEY (a) REFERENCES public.d(d) NOT VALID,
   INDEX c_a_b_idx (a ASC, b ASC),
   FAMILY fam_0_a_rowid (a, rowid),
   FAMILY fam_1_b (b),
   CONSTRAINT check_b CHECK (b IN (1:::INT8, 2:::INT8, 3:::INT8)) NOT VALID
);
COMMENT ON TABLE public.c IS 'table';
COMMENT ON COLUMN public.c.a IS 'column';
COMMENT ON INDEX public.c@c_a_b_idx IS 'index'

statement ok
ALTER TABLE c VALIDATE CONSTRAINT check_b;
ALTER TABLE c VALIDATE CONSTRAINT fk_a;

query TT
SHOW CREATE c
----
c  CREATE TABLE public.c (
   a INT8 NOT NULL,
   b INT8 NULL,
   CONSTRAINT fk_a FOREIGN KEY (a) REFERENCES public.d(d),
   INDEX c_a_b_idx (a ASC, b ASC),
   FAMILY fam_0_a_rowid (a, rowid),
   FAMILY fam_1_b (b),
   CONSTRAINT check_b CHECK (b IN (1:::INT8, 2:::INT8, 3:::INT8))
);
COMMENT ON TABLE public.c IS 'table';
COMMENT ON COLUMN public.c.a IS 'column';
COMMENT ON INDEX public.c@c_a_b_idx IS 'index'
