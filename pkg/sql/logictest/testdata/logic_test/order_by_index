statement ok
CREATE TABLE kv(k INT PRIMARY KEY, v INT); CREATE INDEX foo ON kv(v DESC)

query ITTTTT
EXPLAIN (METADATA) SELECT v FROM kv ORDER BY PRIMARY KEY kv
----
0  nosort   (empty)  (empty)     (v)      (empty)
0  (empty)  order    +k          (empty)  (empty)
1  render   (empty)  (empty)     (v, k)   +k,unique
2  scan     (empty)  (empty)     (k, v)   +k,unique
2  (empty)  table    kv@primary  (empty)  (empty)
2  (empty)  spans    ALL         (empty)  (empty)

query ITTTTT
EXPLAIN (METADATA) SELECT v FROM kv ORDER BY PRIMARY KEY kv ASC
----
0  nosort   (empty)  (empty)     (v)      (empty)
0  (empty)  order    +k          (empty)  (empty)
1  render   (empty)  (empty)     (v, k)   +k,unique
2  scan     (empty)  (empty)     (k, v)   +k,unique
2  (empty)  table    kv@primary  (empty)  (empty)
2  (empty)  spans    ALL         (empty)  (empty)

query ITTTTT
EXPLAIN (METADATA) SELECT v FROM kv ORDER BY PRIMARY KEY kv DESC
----
0  nosort   (empty)  (empty)     (v)      (empty)
0  (empty)  order    -k          (empty)  (empty)
1  render   (empty)  (empty)     (v, k)   -k,unique
2  revscan  (empty)  (empty)     (k, v)   -k,unique
2  (empty)  table    kv@primary  (empty)  (empty)
2  (empty)  spans    ALL         (empty)  (empty)

query ITTTTT
EXPLAIN (METADATA) SELECT k FROM kv ORDER BY v, PRIMARY KEY kv, v-2
----
0  sort     (empty)  (empty)         (k)              (empty)
0  (empty)  order    +v,+k,+"v - 2"  (empty)          (empty)
1  render   (empty)  (empty)         (k, v, "v - 2")  +v
2  revscan  (empty)  (empty)         (k, v)           +v
2  (empty)  table    kv@foo          (empty)          (empty)
2  (empty)  spans    ALL             (empty)          (empty)

query ITTTTT
EXPLAIN (METADATA) SELECT k FROM kv ORDER BY INDEX kv@foo
----
0  nosort   (empty)  (empty)  (k)      (empty)
0  (empty)  order    -v       (empty)  (empty)
1  scan     (empty)  (empty)  (k, v)   -v
1  (empty)  table    kv@foo   (empty)  (empty)
1  (empty)  spans    ALL      (empty)  (empty)

query ITTTTT
EXPLAIN (METADATA) SELECT k FROM kv ORDER BY INDEX kv@foo ASC
----
0  nosort   (empty)  (empty)  (k)      (empty)
0  (empty)  order    -v       (empty)  (empty)
1  scan     (empty)  (empty)  (k, v)   -v
1  (empty)  table    kv@foo   (empty)  (empty)
1  (empty)  spans    ALL      (empty)  (empty)

query ITTTTT
EXPLAIN (METADATA) SELECT k FROM kv ORDER BY INDEX kv@foo DESC
----
0  nosort   (empty)  (empty)  (k)      (empty)
0  (empty)  order    +v       (empty)  (empty)
1  revscan  (empty)  (empty)  (k, v)   +v
1  (empty)  table    kv@foo   (empty)  (empty)
1  (empty)  spans    ALL      (empty)  (empty)

query ITTTTT
EXPLAIN (METADATA) SELECT k FROM kv ORDER BY INDEX kv@foo, k
----
0  nosort   (empty)  (empty)  (k)      (empty)
0  (empty)  order    -v,+k    (empty)  (empty)
1  scan     (empty)  (empty)  (k, v)   -v,+k,unique
1  (empty)  table    kv@foo   (empty)  (empty)
1  (empty)  spans    ALL      (empty)  (empty)

# Check the syntax can be used with joins.
#
# Note: an ORDER BY INDEX clause on the result of the join
# does not imply use of that index by the underlying scan.
#

query ITTTTT
EXPLAIN(METADATA) SELECT k FROM kv JOIN (VALUES (1,2)) AS z(a,b) ON kv.k = z.a ORDER BY INDEX kv@foo
----
0  sort     (empty)   (empty)           (k)                             (empty)
0  (empty)  order     -v                (empty)                         (empty)
1  render   (empty)   (empty)           (k, v)                          (empty)
2  join     (empty)   (empty)           (k, v, a[omitted], b[omitted])  (empty)
2  (empty)  type      inner             (empty)                         (empty)
2  (empty)  equality  (k) = (a)         (empty)                         (empty)
3  scan     (empty)   (empty)           (k, v)                          (empty)
3  (empty)  table     kv@primary        (empty)                         (empty)
3  (empty)  spans     ALL               (empty)                         (empty)
3  values   (empty)   (empty)           (column1, column2[omitted])     (empty)
3  (empty)  size      2 columns, 1 row  (empty)                         (empty)

query ITTTTT
EXPLAIN(METADATA) SELECT k FROM kv a NATURAL JOIN kv ORDER BY INDEX kv@foo
----
0  sort     (empty)   (empty)          (k)                                                                                  (empty)
0  (empty)  order     -v               (empty)                                                                              (empty)
1  render   (empty)   (empty)          (k, v)                                                                               (empty)
2  join     (empty)   (empty)          (k, v[omitted], k[hidden,omitted], v[hidden,omitted], k[hidden,omitted], v[hidden])  (empty)
2  (empty)  type      inner            (empty)                                                                              (empty)
2  (empty)  equality  (k, v) = (k, v)  (empty)                                                                              (empty)
3  scan     (empty)   (empty)          (k, v)                                                                               (empty)
3  (empty)  table     kv@primary       (empty)                                                                              (empty)
3  (empty)  spans     ALL              (empty)                                                                              (empty)
3  scan     (empty)   (empty)          (k, v)                                                                               (empty)
3  (empty)  table     kv@primary       (empty)                                                                              (empty)
3  (empty)  spans     ALL              (empty)                                                                              (empty)

# The underlying index can be forced manually, of course.
query ITTTTT
EXPLAIN(METADATA) SELECT k FROM kv@foo a NATURAL JOIN kv@foo ORDER BY INDEX kv@foo
----
0  sort     (empty)   (empty)          (k)                                                                                  (empty)
0  (empty)  order     -v               (empty)                                                                              (empty)
1  render   (empty)   (empty)          (k, v)                                                                               (empty)
2  join     (empty)   (empty)          (k, v[omitted], k[hidden,omitted], v[hidden,omitted], k[hidden,omitted], v[hidden])  (empty)
2  (empty)  type      inner            (empty)                                                                              (empty)
2  (empty)  equality  (k, v) = (k, v)  (empty)                                                                              (empty)
3  scan     (empty)   (empty)          (k, v)                                                                               (empty)
3  (empty)  table     kv@foo           (empty)                                                                              (empty)
3  (empty)  spans     ALL              (empty)                                                                              (empty)
3  scan     (empty)   (empty)          (k, v)                                                                               (empty)
3  (empty)  table     kv@foo           (empty)                                                                              (empty)
3  (empty)  spans     ALL              (empty)                                                                              (empty)

# Check the extended syntax cannot be used in case of renames.
statement error source name "kv" not found in FROM clause
SELECT * FROM kv AS a, kv AS b ORDER BY PRIMARY KEY kv

# The INDEX/PRIMARY syntax can only be used when the data source
# is a real table, not an alias.
#
statement error source name "kv" not found in FROM clause
SELECT k FROM (SELECT @1, @1 FROM generate_series(1,10)) AS kv(k,v) ORDER BY PRIMARY KEY kv

statement error source name "kv" not found in FROM clause
CREATE TABLE unrelated(x INT); SELECT * FROM unrelated ORDER BY PRIMARY KEY kv
