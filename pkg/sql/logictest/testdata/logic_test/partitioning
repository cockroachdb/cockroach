# LogicTest: default

statement error syntax
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST ()

statement error syntax
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) ()

statement error syntax
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) (
    PARTITION p1 VALUES ()
)

statement error declared columns must be a prefix of index being partitioned
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (b) (
    PARTITION p1 VALUES (0)
)

statement error declared columns must be a prefix of index being partitioned
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (c) (
    PARTITION p1 VALUES (0)
)

statement error declared columns must be a prefix of index being partitioned
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) (
    PARTITION p1 VALUES (0) PARTITION BY LIST (a) (
        PARTITION p1_1 VALUES (0)
    )
)

statement error declared columns must be a prefix of index being partitioned
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) (
    PARTITION p1 VALUES (0) PARTITION BY LIST (c) (
        PARTITION p1_1 VALUES (0)
    )
)

statement error partition name p1 must be unique
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) (
    PARTITION p1 VALUES (1),
    PARTITION p1 VALUES (2)
)

statement error partition name p1 must be unique
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) (
    PARTITION p1 VALUES (1),
    PARTITION P1 VALUES (2)
)

statement error partition name p1 must be unique
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) (
    PARTITION p1 VALUES (1) PARTITION BY LIST (b) (
        PARTITION p1 VALUES (2)
    )
)

statement error partition has 1 columns but 2 values were supplied
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) (
    PARTITION p1 VALUES (0, 1)
)

statement error partition has 2 columns but 1 values were supplied
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a, b) (
    PARTITION p1 VALUES (0)
)

statement error cannot be present in more than one partition
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) (
    PARTITION p1 VALUES (1),
    PARTITION p2 VALUES (1)
)

statement error values must be strictly increasing
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY RANGE (a) (
    PARTITION p1 VALUES LESS THAN (2),
    PARTITION p2 VALUES LESS THAN (1)
)

statement error cannot be present in more than one partition
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY RANGE (a) (
    PARTITION p1 VALUES LESS THAN (1),
    PARTITION p2 VALUES LESS THAN (1)
)

statement error value type decimal doesn't match type INT of column "a"
CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) (
    PARTITION p1 VALUES (1.0)
)

statement error value type int doesn't match type STRING of column "b"
CREATE TABLE t (a INT, b STRING, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) (
    PARTITION p1 VALUES (0) PARTITION BY LIST (b) (
        PARTITION p1_1 VALUES (1)
    )
)

# TODO(dan): This currently panics. Either support placeholders or error.
# statement error TODO
# CREATE TABLE t (a INT, b INT, c INT, PRIMARY KEY (a, b)) PARTITION BY LIST (a) (
#     PARTITION p1 VALUES ($1)
# )

# TODO(dan): Partition names should follow the same foldings and uniqueness
# rules as table names. Add some more tests to the `case_sensitive_names` logic
# test.
