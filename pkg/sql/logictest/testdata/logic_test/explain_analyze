# LogicTest: fakedist-vec-off
#
# TODO(radu): enable other configs when the vectorized stat collector issue
# #56928 is fixed.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

query T
EXPLAIN ANALYZE (PLAN) SELECT k FROM kv WHERE k >= 2
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
·
• scan
  actual row count: 0
  KV rows read: 0
  KV bytes read: 0 B
  missing stats
  table: kv@primary
  spans: [/2 - ]
·
WARNING: this statement is experimental!

statement ok
INSERT INTO kv VALUES (1,10), (2,20), (3,30), (4,40);

query T
EXPLAIN ANALYZE (PLAN) SELECT * FROM kv WHERE k >= 2
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
·
• scan
  actual row count: 3
  KV rows read: 3
  KV bytes read: 24 B
  missing stats
  table: kv@primary
  spans: [/2 - ]
·
WARNING: this statement is experimental!

statement ok
CREATE TABLE ab (a INT PRIMARY KEY, b INT);
INSERT INTO ab VALUES (10,100), (40,400), (50,500);

query T
EXPLAIN ANALYZE (PLAN, VERBOSE) SELECT * FROM kv JOIN ab ON v=a
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
·
• hash join (inner)
│ columns: (k, v, a, b)
│ actual row count: 2
│ estimated row count: 990 (missing stats)
│ equality: (v) = (a)
│ right cols are key
│
├── • scan
│     columns: (k, v)
│     actual row count: 4
│     KV rows read: 4
│     KV bytes read: 32 B
│     estimated row count: 1,000 (missing stats)
│     table: kv@primary
│     spans: FULL SCAN
│
└── • scan
      columns: (a, b)
      actual row count: 3
      KV rows read: 3
      KV bytes read: 24 B
      estimated row count: 1,000 (missing stats)
      table: ab@primary
      spans: FULL SCAN
·
WARNING: this statement is experimental!

# Regression tests for weird explain analyze cases.

statement ok
EXPLAIN ANALYZE (DISTSQL) CREATE TABLE a (a INT PRIMARY KEY)

statement ok
EXPLAIN ANALYZE (DISTSQL) CREATE INDEX ON a(a)

statement ok
EXPLAIN ANALYZE (DISTSQL) INSERT INTO a VALUES (1)

# Make sure failures are okay.
statement error duplicate
EXPLAIN ANALYZE (DISTSQL) INSERT INTO a VALUES (1)

statement error value type string doesn't match type int of column "a"
EXPLAIN ANALYZE (DISTSQL) INSERT INTO a VALUES ('a'::string)

statement ok
EXPLAIN ANALYZE (DISTSQL) INSERT INTO a SELECT a+1 FROM a

statement ok
EXPLAIN ANALYZE (DISTSQL) UPDATE a SET a = a*3

statement ok
EXPLAIN ANALYZE (DISTSQL) UPDATE a SET a = a*3 RETURNING a

statement ok
EXPLAIN ANALYZE (DISTSQL) UPSERT INTO a VALUES(10)

statement ok
EXPLAIN ANALYZE (DISTSQL) SELECT (SELECT 1);

statement ok
EXPLAIN ANALYZE (DISTSQL) DELETE FROM a

statement ok
EXPLAIN ANALYZE (DISTSQL) DROP TABLE a

statement ok
EXPLAIN ANALYZE (PLAN) CREATE TABLE a (a INT PRIMARY KEY)

statement ok
EXPLAIN ANALYZE (PLAN) CREATE INDEX ON a(a)

statement ok
EXPLAIN ANALYZE (PLAN) INSERT INTO a VALUES (1)

# Make sure failures are okay.
statement error duplicate
EXPLAIN ANALYZE (PLAN) INSERT INTO a VALUES (1)

statement error value type string doesn't match type int of column "a"
EXPLAIN ANALYZE (PLAN) INSERT INTO a VALUES ('a'::string)

statement ok
EXPLAIN ANALYZE (PLAN) INSERT INTO a SELECT a+1 FROM a

statement ok
EXPLAIN ANALYZE (PLAN) UPDATE a SET a = a*3

statement ok
EXPLAIN ANALYZE (PLAN) UPDATE a SET a = a*3 RETURNING a

statement ok
EXPLAIN ANALYZE (PLAN) UPSERT INTO a VALUES(10)

statement ok
EXPLAIN ANALYZE (PLAN) SELECT (SELECT 1);

statement ok
EXPLAIN ANALYZE (PLAN) DELETE FROM a

statement ok
EXPLAIN ANALYZE (PLAN) DROP TABLE a

# Regression test for #34927.
statement ok
CREATE TABLE a (a INT PRIMARY KEY)

statement ok
EXPLAIN ANALYZE (DISTSQL) DELETE FROM a WHERE true

# Regression test for #45099 (not running postqueries with EXPLAIN ANALYZE).
statement ok
CREATE TABLE p (p INT8 PRIMARY KEY);
CREATE TABLE c (c INT8 PRIMARY KEY, p INT8 REFERENCES p (p))

query error pgcode 23503 insert on table \"c\" violates foreign key constraint \"fk_p_ref_p\"
EXPLAIN ANALYZE (DISTSQL) INSERT INTO c SELECT x, x + 1 FROM (VALUES (1), (2)) AS v (x)
