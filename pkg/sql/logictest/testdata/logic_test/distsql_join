# LogicTest: 5node-distsql

statement ok
CREATE TABLE data (a INT, b INT, c INT, d INT, PRIMARY KEY (a, b, c, d))

# Split into ten parts.
statement ok
ALTER TABLE data SPLIT AT SELECT i FROM GENERATE_SERIES(1, 9) AS g(i)

# Relocate the ten parts to the five nodes.
statement ok
ALTER TABLE data TESTING_RELOCATE
  SELECT ARRAY[i%5+1], i FROM GENERATE_SERIES(0, 9) AS g(i)

# Generate all combinations of values 1 to 10.
statement ok
INSERT INTO data SELECT a, b, c, d FROM
   GENERATE_SERIES(1, 10) AS A(a),
   GENERATE_SERIES(1, 10) AS B(b),
   GENERATE_SERIES(1, 10) AS C(c),
   GENERATE_SERIES(1, 10) AS D(d)

# Verify data placement.
query TTITI colnames
SHOW TESTING_RANGES FROM TABLE data
----
Start Key  End Key  Range ID  Replicas  Lease Holder
NULL       /1       1         {1}       1
/1         /2       2         {2}       2
/2         /3       3         {3}       3
/3         /4       4         {4}       4
/4         /5       5         {5}       5
/5         /6       6         {1}       1
/6         /7       7         {2}       2
/7         /8       8         {3}       3
/8         /9       9         {4}       4
/9         NULL     10        {5}       5

statement ok
SET CLUSTER SETTING sql.distsql.merge_joins.enabled = true;

# ensure merge joins are planned when there's orderings.
query TITTTTT
EXPLAIN (VERBOSE) (SELECT * FROM (SELECT a,b FROM data) NATURAL JOIN (SELECT a,b FROM data AS data2))
----
render               0  render  ·               ·                  (a, b)  a!=NULL; b!=NULL
 │                   0  ·       render 0        a                  ·       ·
 │                   0  ·       render 1        b                  ·       ·
 └── join            1  join    ·               ·                  (a, b)  a!=NULL; b!=NULL
      │              1  ·       type            inner              ·       ·
      │              1  ·       equality        (a, b) = (a, b)    ·       ·
      │              1  ·       mergeJoinOrder  +"(a=a)",+"(b=b)"  ·       ·
      ├── render     2  render  ·               ·                  (a, b)  a!=NULL; b!=NULL
      │    │         2  ·       render 0        test.data.a        ·       ·
      │    │         2  ·       render 1        test.data.b        ·       ·
      │    └── scan  3  scan    ·               ·                  (a, b)  a!=NULL; b!=NULL
      │              3  ·       table           data@primary       ·       ·
      │              3  ·       spans           ALL                ·       ·
      └── render     2  render  ·               ·                  (a, b)  a!=NULL; b!=NULL
           │         2  ·       render 0        data2.a            ·       ·
           │         2  ·       render 1        data2.b            ·       ·
           └── scan  3  scan    ·               ·                  (a, b)  a!=NULL; b!=NULL
·                    3  ·       table           data@primary       ·       ·
·                    3  ·       spans           ALL                ·       ·


# ORDER BY on the mergeJoinOrder columns should not require a SORT node
query TITTTTT
EXPLAIN (VERBOSE) (SELECT * FROM (SELECT a,b FROM data AS data1) JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c AND b=d ORDER BY c,d)
----
join                 0  join    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
 │                   0  ·       type            inner              ·             ·
 │                   0  ·       equality        (a, b) = (c, d)    ·             ·
 │                   0  ·       mergeJoinOrder  +"(a=c)",+"(b=d)"  ·             ·
 ├── render          1  render  ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
 │    │              1  ·       render 0        data1.a            ·             ·
 │    │              1  ·       render 1        data1.b            ·             ·
 │    └── scan       2  scan    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
 │                   2  ·       table           data@primary       ·             ·
 │                   2  ·       spans           ALL                ·             ·
 └── sort            1  sort    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
      │              1  ·       order           +c,+d              ·             ·
      └── render     2  render  ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
           │         2  ·       render 0        data2.c            ·             ·
           │         2  ·       render 1        data2.d            ·             ·
           └── scan  3  scan    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
·                    3  ·       table           data@primary       ·             ·
·                    3  ·       spans           ALL                ·             ·

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) (SELECT * FROM (SELECT a,b FROM data AS data1) JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c AND b=d ORDER BY c,d)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzclk1r20AQhu_9FWFOLdmCdyXnQ1DQNYUmJe2t-KBYW1vgeM1qDQ3B_73YSjGS4nk9rGuMj4r1aEazz-TVK81dae-LZ1tT9os0KTKkKCFFKSka0kjRwruxrWvn17c0wF35h7KBomq-WIb1n0eKxs5byl4pVGFmKaOfxdPMPtqitJ4UlTYU1WxTZOGr58K_5GURClL0sAzZRa5Vbmi0UuSW4e2Z20c9vVxMi3rafsw_ZKSoDsXEUqZX6n-1l6g87bS3rWskdX84H7olc32pcnMZ-_7Jzj62j3K-tN6WO-vvfec7r_bN-on96qp59_1m9nf4-IZ--uKryXR72TJA8YNO41_wnbbv3We3aN2_q_6wVV-ftv8HbU_gP6h7NP_1uftvTtu_g7Yn8A_UPZp_5tz9S07bv4O2J_AP1D2af8m5-5eetn8HbU_gH6h7NP_Sc_cPfOg_2nrh5rXd68tysH4fW05sM63aLf3YfvduvCnTXD5suM2HTWnr0PyaNBd38-andYP7wzcxsDZR9FUMbQY8rbv0oEW34EEXNoKBGxl8EwN3Bi6lr2LozsB7dMIOPOVPK-VPS_PHNYzZDx4G-8HDaD8ADfaDp9F-XLETv-YHfh2zHzwM9oOH0X4AGuwHT6P9uInZj9sYw3kYGM7DyHBAA8N5GiZAL0BaE9fgn4ruJYhEckADywGNNEc48BzgSHTdyxGJ6bqXIxLVAQ1cBzSSHeHAdoBD3fkM1UOguyRE-2cuSVEpDXUX5agUh7rzSYp0l0SplEa6i8JUjCPdRXHax_k81bdAd0mi9s9cEqlSGuouClUpjnQ3fKp2dR-tPvwNAAD__1XEQ9M=

# ORDER BY on the columns equal to the mergeJoinOrder columns should not
# require a terminal SORT node.
query TITTTTT
EXPLAIN (VERBOSE) (SELECT * FROM (SELECT a,b FROM data AS data1) JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c AND b=d ORDER BY a,b)
----
join                 0  join    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
 │                   0  ·       type            inner              ·             ·
 │                   0  ·       equality        (a, b) = (c, d)    ·             ·
 │                   0  ·       mergeJoinOrder  +"(a=c)",+"(b=d)"  ·             ·
 ├── render          1  render  ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
 │    │              1  ·       render 0        data1.a            ·             ·
 │    │              1  ·       render 1        data1.b            ·             ·
 │    └── scan       2  scan    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
 │                   2  ·       table           data@primary       ·             ·
 │                   2  ·       spans           ALL                ·             ·
 └── sort            1  sort    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
      │              1  ·       order           +c,+d              ·             ·
      └── render     2  render  ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
           │         2  ·       render 0        data2.c            ·             ·
           │         2  ·       render 1        data2.d            ·             ·
           └── scan  3  scan    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +a,+b
·                    3  ·       table           data@primary       ·             ·
·                    3  ·       spans           ALL                ·             ·

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) (SELECT * FROM (SELECT a,b FROM data AS data1) JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c AND b=d ORDER BY a,b)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzclk1r20AQhu_9FWFOLdmCdyXnQ1DQNYUmJe2t-KBYW1vgeM1qDQ3B_73YSjGS4nk9rGuMj4r1aEazz-TVK81dae-LZ1tT9os0KTKkKCFFKSka0kjRwruxrWvn17c0wF35h7KBomq-WIb1n0eKxs5byl4pVGFmKaOfxdPMPtqitJ4UlTYU1WxTZOGr58K_5GURClL0sAzZRa5Vbmi0UuSW4e2Z20c9vVxMi3rafsw_ZKSoDsXEUqZX6n-1l6g87bS3rWskdX84H7olc32pcnMZ-_7Jzj62j3K-tN6WO-vvfec7r_bN-on96qp59_1m9nf4-IZ--uKryXR72TJA8YNO41_wnbbv3We3aN2_q_6wVV-ftv8HbU_gP6h7NP_1uftvTtu_g7Yn8A_UPZp_5tz9S07bv4O2J_AP1D2af8m5-5eetn8HbU_gH6h7NP_Sc_cPfOg_2nrh5rXd68tysH4fW05sM63aLf3YfvduvCnTXD5suM2HTWnr0PyaNBd38-andYP7wzcxsDZR9FUMbQY8rbv0oEW34EEXNoKBGxl8EwN3Bi6lr2LozsB7dMIOPOVPK-VPS_PHNYzZDx4G-8HDaD8ADfaDp9F-XLETv-YHfh2zHzwM9oOH0X4AGuwHT6P9uInZj9sYw3kYGM7DyHBAA8N5GiZAL0BaE9fgn4ruJYhEckADywGNNEc48BzgSHTdyxGJ6bqXIxLVAQ1cBzSSHeHAdoBD3fkM1UOguyRE-2cuSVEpDXUX5agUh7rzSYp0l0SplEa6i8JUjCPdRXHax_k81bdAd0mi9s9cEqlSGuouClUpjnQ3fKp2dR-tPvwNAAD__1XEQ9M=

# ORDER BY on a different ordering should require a terminal SORT NODE.
query TITTTTT
EXPLAIN (VERBOSE) (SELECT * FROM (SELECT a,b FROM data AS data1) JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c AND b=d ORDER BY b,a)
----
sort                      0  sort    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +b,+a
 │                        0  ·       order           +b,+a              ·             ·
 └── join                 1  join    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +b,+a
      │                   1  ·       type            inner              ·             ·
      │                   1  ·       equality        (a, b) = (c, d)    ·             ·
      │                   1  ·       mergeJoinOrder  +"(a=c)",+"(b=d)"  ·             ·
      ├── render          2  render  ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +b,+a
      │    │              2  ·       render 0        data1.a            ·             ·
      │    │              2  ·       render 1        data1.b            ·             ·
      │    └── scan       3  scan    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +b,+a
      │                   3  ·       table           data@primary       ·             ·
      │                   3  ·       spans           ALL                ·             ·
      └── sort            2  sort    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +b,+a
           │              2  ·       order           +c,+d              ·             ·
           └── render     3  render  ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +b,+a
                │         3  ·       render 0        data2.c            ·             ·
                │         3  ·       render 1        data2.d            ·             ·
                └── scan  4  scan    ·               ·                  (a, b, c, d)  a=c; b=d; a!=NULL; b!=NULL; +b,+a
·                         4  ·       table           data@primary       ·             ·
·                         4  ·       spans           ALL                ·             ·

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) (SELECT * FROM (SELECT a,b FROM data AS data1) JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c AND b=d ORDER BY b,a)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzcl8GL2kAYxe_9K5bv1OIUnEm0a6CQ6xa6W7a9FQ9ZM9WA68hkhC6L_3vRbBsSdZ6Tz4p4jOY3b_LNe3n6SguT6_vsWZeU_CRJghQJikhQTIIGNBa0tGaiy9LYzS0VcJf_pqQvqFgsV27z8VjQxFhNySu5ws01JfQje5rrR53l2pKgXLusmG9FlrZ4zuxLmmcuI0EPK5fcpFKkisZrQWbl3tasl3p6uZll5ay5zF9kLKh02VRTItfif20vEmnc2l6tq0J0vxvr2pKp7IlU9bjPHx3cR72Usbm2Oj-of_Sdex7tq7ZT_cUUi_bzzfUv9_4N_fDZFtNZfdlwgPAPOmYPWvVEKtuDrgUGnSf4b-E9O7k3H82ycf8h_WFDX152wE66vYCAAd2zBUxee8C6DDooYOqyDX7S7QUYHOiezeDq2g3eZdBBBo8u2-An3V6AwYHu2QweXbvBuww6yODxZRv8pNsLMDjQPZvB42s3eJdBd_4PsEfgUZdLsyj1Ub_u-5uB6Xyqq-MozcpO9DdrJluZ6vJhy21_e-W6dNW3UXVxt6i-2mzweHjEgWXMolnaCmjLNt1v0A2434ZVwMBVGDziwK2Bh9IsbQW0I-_AY__AYy888B_1wH_UQ7_0kBMuPwwM7odRuADN0kbh-uSd-K1_4LeccPlhYHA_jMIFaJY2CtfIO3DZ909c7rxKQ-Ild16lIQkBNLApoFFGEM5ThxW080JtnloETm3njRoSFEADtwIaRQXhPHUUFulvEzkAc_f3CUoLq08AjfzKaxSE89RhWvylIkGrSFatABr5lVcsCOepw7T4u0WBblGsblGsbgE08CugUVoQzlNHaVH-blGgWxSrWwCN_mbwugXhPHWUFuXvFgW6RYV1y3j97k8AAAD__xM-R9Y=

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) (SELECT * FROM (SELECT a,b FROM data AS data1) JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c and b=d ORDER BY a,b)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzclk1r20AQhu_9FWFOLdmCdyXnQ1DQNYUmJe2t-KBYW1vgeM1qDQ3B_73YSjGS4nk9rGuMj4r1aEazz-TVK81dae-LZ1tT9os0KTKkKCFFKSka0kjRwruxrWvn17c0wF35h7KBomq-WIb1n0eKxs5byl4pVGFmKaOfxdPMPtqitJ4UlTYU1WxTZOGr58K_5GURClL0sAzZRa5Vbmi0UuSW4e2Z20c9vVxMi3rafsw_ZKSoDsXEUqZX6n-1l6g87bS3rWskdX84H7olc32pcnMZ-_7Jzj62j3K-tN6WO-vvfec7r_bN-on96qp59_1m9nf4-IZ--uKryXR72TJA8YNO41_wnbbv3We3aN2_q_6wVV-ftv8HbU_gP6h7NP_1uftvTtu_g7Yn8A_UPZp_5tz9S07bv4O2J_AP1D2af8m5-5eetn8HbU_gH6h7NP_Sc_cPfOg_2nrh5rXd68tysH4fW05sM63aLf3YfvduvCnTXD5suM2HTWnr0PyaNBd38-andYP7wzcxsDZR9FUMbQY8rbv0oEW34EEXNoKBGxl8EwN3Bi6lr2LozsB7dMIOPOVPK-VPS_PHNYzZDx4G-8HDaD8ADfaDp9F-XLETv-YHfh2zHzwM9oOH0X4AGuwHT6P9uInZj9sYw3kYGM7DyHBAA8N5GiZAL0BaE9fgn4ruJYhEckADywGNNEc48BzgSHTdyxGJ6bqXIxLVAQ1cBzSSHeHAdoBD3fkM1UOguyRE-2cuSVEpDXUX5agUh7rzSYp0l0SplEa6i8JUjCPdRXHax_k81bdAd0mi9s9cEqlSGuouClUpjnQ3fKp2dR-tPvwNAAD__1XEQ9M=


# Merge joins should be planned for (FULL|LEFT|RIGHT) OUTER joins

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) (SELECT * FROM (SELECT a,b FROM data AS data1) FULL OUTER JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c and b=d ORDER BY a,b)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzcl1GL2kAUhd_7K5b71LJTcCZxuwYKed1Cd8u2b8WHrJlqwHVkEqHL4n8vmi2SaO5xuFkRH6P5cm5uzsnRV1q43N5nz7ak5DdpUmRIUUSKYlI0pLGipXcTW5bOb06pgbv8LyUDRcViuao2H48VTZy3lLxSVVRzSwn9yp7m9tFmufWkKLdVVsy3IktfPGf-Jc2zKiNFD6squUq1Sg2N14rcqnq75u5STy9Xs6ycNS_zHxkrKqtsainRa_Ve40UqjVvj7XRNiO5P56u2ZKqvVWqupfcfdc6xu5TzufU279Q_-swDt_bd-qn95opF-_7m9k_18Q399NUX09nusOEAxS86fp9F7wSG8g0emOTefXbLxvld-jcNfX3eAet1vICAAd2TBUxfesB6W3RXwMx5G7zX8QIMDnRPZnBz6QbvbdFdBo_O2-C9jhdgcKB7MoNHl27w3hbdZfD4vA3e63gBBge6JzN4fOkG723Rx_wHOCDwaMulW5T2qF_3g83CbD619eMo3cpP7A_vJluZ-vBhy21_e-W2rOpvo_rgblF_tRnweHgkgXUsokXaBmjrNj1o0A140IZNwMJNGDySwK2Fh9IibQO0I3bhMb_wmIWH_KMe8o_6hpe-kYSLh4HBeRiFC9AibRSuL-zGb_mF30rCxcPA4DyMwgVokTYK14hduB7wG9d7r9KQeOm9V2lIQgANbApolBGEy9RhBe29UJtPLQJPbe-NGhIUQAO3AhpFBeEydRQWzbeJHoK9832C0iLqE0Ajv8oaBeEydZgWvlQ0aBUtqhVAI7_KigXhMnWYFr5bDOgWI-oWI-oWQAO_AhqlBeEydZQWw3eLAd1iRN0CaPQ3Q9YtCJepo7QYvlsM6BYT1i3j9Yd_AQAA__8TJkfW

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) (SELECT * FROM (SELECT a,b FROM data AS data1) LEFT OUTER JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c and b=d ORDER BY a,b)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzcl1GL2kAUhd_7K5b71LJTcCZxuwYKed1Cd8u2b8WHrJlqwHVkEqHL4n8vmi2SaO5xuFkRH6P5cm5uzsnRV1q43N5nz7ak5DdpUmRIUUSKYlI0pLGipXcTW5bOb06pgbv8LyUDRcViuao2H48VTZy3lLxSVVRzSwn9yp7m9tFmufWkKLdVVsy3IktfPGf-Jc2zKiNFD6squUq1Sg2N14rcqnq75u5STy9Xs6ycNS_zHxkrKqtsainRa_Ve40UqjVvj7XRNiO5P56u2ZKqvVWqupfcfdc6xu5TzufU279Q_-swDt_bd-qn95opF-_7m9k_18Q399NUX09nusOEAxS86fp9F7wSG8g0emOTefXbLxvld-jcNfX3eAet1vICAAd2TBUxfesB6W3RXwMx5G7zX8QIMDnRPZnBz6QbvbdFdBo_O2-C9jhdgcKB7MoNHl27w3hbdZfD4vA3e63gBBge6JzN4fOkG723Rx_wHOCDwaMulW5T2qF_3g83CbD619eMo3cpP7A_vJluZ-vBhy21_e-W2rOpvo_rgblF_tRnweHgkgXUsokXaBmjrNj1o0A140IZNwMJNGDySwK2Fh9IibQO0I3bhMb_wmIWH_KMe8o_6hpe-kYSLh4HBeRiFC9AibRSuL-zGb_mF30rCxcPA4DyMwgVokTYK14hduB7wG9d7r9KQeOm9V2lIQgANbApolBGEy9RhBe29UJtPLQJPbe-NGhIUQAO3AhpFBeEydRQWzbeJHoK9832C0iLqE0Ajv8oaBeEydZgWvlQ0aBUtqhVAI7_KigXhMnWYFr5bDOgWI-oWI-oWQAO_AhqlBeEydZQWw3eLAd1iRN0CaPQ3Q9YtCJepo7QYvlsM6BYT1i3j9Yd_AQAA__8TJkfW

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) (SELECT * FROM (SELECT a,b FROM data AS data1) RIGHT OUTER JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c and b=d ORDER BY a,b)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzcl1GL2kAUhd_7K5b71LJTcCZxuwYKed1Cd8u2b8WHrJlqwHVkEqHL4n8vmi2SaO5xuFkRH6P5cm5uzsnRV1q43N5nz7ak5DdpUmRIUUSKYlI0pLGipXcTW5bOb06pgbv8LyUDRcViuao2H48VTZy3lLxSVVRzSwn9yp7m9tFmufWkKLdVVsy3IktfPGf-Jc2zKiNFD6squUq1Sg2N14rcqnq75u5STy9Xs6ycNS_zHxkrKqtsainRa_Ve40UqjVvj7XRNiO5P56u2ZKqvVWqupfcfdc6xu5TzufU279Q_-swDt_bd-qn95opF-_7m9k_18Q399NUX09nusOEAxS86fp9F7wSG8g0emOTefXbLxvld-jcNfX3eAet1vICAAd2TBUxfesB6W3RXwMx5G7zX8QIMDnRPZnBz6QbvbdFdBo_O2-C9jhdgcKB7MoNHl27w3hbdZfD4vA3e63gBBge6JzN4fOkG723Rx_wHOCDwaMulW5T2qF_3g83CbD619eMo3cpP7A_vJluZ-vBhy21_e-W2rOpvo_rgblF_tRnweHgkgXUsokXaBmjrNj1o0A140IZNwMJNGDySwK2Fh9IibQO0I3bhMb_wmIWH_KMe8o_6hpe-kYSLh4HBeRiFC9AibRSuL-zGb_mF30rCxcPA4DyMwgVokTYK14hduB7wG9d7r9KQeOm9V2lIQgANbApolBGEy9RhBe29UJtPLQJPbe-NGhIUQAO3AhpFBeEydRQWzbeJHoK9832C0iLqE0Ajv8oaBeEydZgWvlQ0aBUtqhVAI7_KigXhMnWYFr5bDOgWI-oWI-oWQAO_AhqlBeEydZQWw3eLAd1iRN0CaPQ3Q9YtCJepo7QYvlsM6BYT1i3j9Yd_AQAA__8TJkfW


# Nested merge joins should be planned on the same ordering
query TITTTTT
EXPLAIN (VERBOSE) (SELECT a,b from data AS data3 NATURAL JOIN ((SELECT a,b FROM data AS data1) JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c AND b=d))
----
render                         0  render  ·               ·                                    (a, b)  a!=NULL; b!=NULL
 │                             0  ·       render 0        data3.a                              ·       ·
 │                             0  ·       render 1        data3.b                              ·       ·
 └── join                      1  join    ·               ·                                    (a, b)  a!=NULL; b!=NULL
      │                        1  ·       type            inner                                ·       ·
      │                        1  ·       equality        (a, b, c, d) = (a, b, c, d)          ·       ·
      │                        1  ·       mergeJoinOrder  +"(a=a)",+"(b=b)",+"(c=c)",+"(d=d)"  ·       ·
      ├── scan                 2  scan    ·               ·                                    (a, b)  a!=NULL; b!=NULL
      │                        2  ·       table           data@primary                         ·       ·
      │                        2  ·       spans           ALL                                  ·       ·
      └── join                 2  join    ·               ·                                    (a, b)  a!=NULL; b!=NULL
           │                   2  ·       type            inner                                ·       ·
           │                   2  ·       equality        (a, b) = (c, d)                      ·       ·
           │                   2  ·       mergeJoinOrder  +"(a=c)",+"(b=d)"                    ·       ·
           ├── render          3  render  ·               ·                                    (a, b)  a!=NULL; b!=NULL
           │    │              3  ·       render 0        data1.a                              ·       ·
           │    │              3  ·       render 1        data1.b                              ·       ·
           │    └── scan       4  scan    ·               ·                                    (a, b)  a!=NULL; b!=NULL
           │                   4  ·       table           data@primary                         ·       ·
           │                   4  ·       spans           ALL                                  ·       ·
           └── sort            3  sort    ·               ·                                    (a, b)  a!=NULL; b!=NULL
                │              3  ·       order           +c,+d                                ·       ·
                └── render     4  render  ·               ·                                    (a, b)  a!=NULL; b!=NULL
                     │         4  ·       render 0        data2.c                              ·       ·
                     │         4  ·       render 1        data2.d                              ·       ·
                     └── scan  5  scan    ·               ·                                    (a, b)  a!=NULL; b!=NULL
·                              5  ·       table           data@primary                         ·       ·
·                              5  ·       spans           ALL                                  ·       ·

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) (SELECT * FROM (SELECT a,b from data AS data3 NATURAL JOIN ((SELECT a,b FROM data AS data1) JOIN (SELECT c,d FROM data AS data2 ORDER BY c,d) ON a=c AND b=d)))]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzsmE1v4kgQhu_7K6I67Sq9Et02H0FaydesNMkoM7cRBwf3ECRCo7aRJory30dAZhi7Sb1U2kECcQT8uKor7cdv-pnmrrA3-aMtafiNNCkypCghRSkp6tJI0cK7sS1L51eXbIDr4gcNO4qm88WyWn09UjR23tLwmappNbM0pK_5_cze2bywnhQVtsqns3WRhZ8-5v4pK_IqJ0W3y2p4kWmVGZUlKktp9KLILavXO29veP908ZCXD_Wb1cGRorLKJ5aG-kV9ZKvvaLLWnvm49nbMcFs3kdT94nzVLJnpS5WZy9j1p2_2sb2V84X1tniz_t5X7ljaJ-sn9n83nTfXN7Pfq79f0X_-89PJw_bjh23WbuQ0VJZcqiwVTOUP4r3T-XWLxpR-f809L9ul9_ZY-nK-ayk7O79x_7pF47Ldhfu1wvp4XNZ6q-26rNX2BC4DdQ_mMn12WdQ0TsZl5niU0nqr7Sql1fYESgF1D6YUc1ZK1DRORinJ8Sil9VbbVUqr7QmUAuoeTCnJWSlR0zgZpaTHo5TWW21XKa22J1AKqHswpaRnpURN42SUAk4V72y5cPPS7nVK01mtzBYTu5lj6ZZ-bD97N16X2Xy8XXPr_zULW1abX7ubD9fzzU-rBveHtYmiBzG0SWPopMPTmqVBaR7WOorux9AmiaKveNo06U5t5DW404QTwcSNDG5MXEr3Y-jGxKX0FU-ngmdbCDeebSk9iKEN-HPzdOPZDuguu017_B7v8Xtc85u8H-NiHkYuBjRwMU8jF_M0cvEgxsU8jFwMaOBinkYuBjRw8RW7T3WH36eaf3uCxxPQSMcIBz4GOBIywoGRNf8KBUoGNHIywoGUAY6sDHCkZc3HB-Blzb9IgVoBjdyKcCBXgCO7AhxGXf5tioqDHIDCLsBR2gU5AsVdgAPHaj5J6B6QbJAlRJLlaShZgCPJ8jiULMCRZCU5SkpDyYqSlBSHkhVlqRAPUoVIskGqEEmWp6FkAY4ky-NQsjyOJGskgUpKI8kiHEgW4EiyCEeHCkGqqO1YY3jJmiBVSCQLaCRZhAPJAhxJFuFAskaSqKQ0kizCgWQBjiQLcCRZE8QKiWRNkCokkgU0kizCgWQBjiQLcChZSaCS0lCyokAlxaFkRYEqxINUUZfsAEhWckQTPi6iMxoxjiQrOqUR40iykkQlpaFkRYlKikPJihJVeHAexApWsqOXv34GAAD___sgIII=


# Test that the distSQL MergeJoiner follows SQL NULL semantics for ON predicate equivilance.
# The use of sorts here force

statement ok
CREATE TABLE distsql_mj_test (k INT, v INT)

statement ok
INSERT INTO distsql_mj_test VALUES (0, NULL), (0, 1), (2, 4), (NULL, 4)

# If SQL NULL semantics are not followed, NULL = NULL is truthy. This makes the rows with NULL also appear in the inner join.

query IIII rowsort
SELECT l.k, l.v, r.k, r.v FROM (SELECT * FROM distsql_mj_test ORDER BY k, v) l INNER JOIN (SELECT * FROM distsql_mj_test ORDER BY k, v) r ON l.k = r.k AND l.v = r.v
----
0  1  0  1
2  4  2  4

statement ok
DELETE FROM distsql_mj_test WHERE TRUE;

statement ok
INSERT INTO distsql_mj_test VALUES (0, NULL), (1, NULL), (2, NULL)

# We should not have any results for values with NULLs
query IIII rowsort
SELECT l.k, l.v, r.k, r.v FROM (SELECT * FROM distsql_mj_test ORDER BY k, v) l INNER JOIN (SELECT * FROM distsql_mj_test ORDER BY k, v) r ON l.k = r.k AND l.v = r.v
----

statement ok
DELETE FROM distsql_mj_test WHERE TRUE;

statement ok
INSERT INTO distsql_mj_test VALUES (NULL)

# We shouldn't expect a row of (NULL, NULL), otherwise NULL = NULL was joined.
query II rowsort
SELECT l.k, r.k FROM (SELECT * FROM distsql_mj_test ORDER BY k) l INNER JOIN (SELECT * FROM distsql_mj_test ORDER BY k) r ON l.k = r.k
----

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) (SELECT l.k, r.k FROM (SELECT * FROM distsql_mj_test ORDER BY k) l INNER JOIN (SELECT * FROM distsql_mj_test ORDER BY k) r ON l.k = r.k)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzEkkFr4zAQhe_7K5Y57RIVIifOwVDwNYUmJe2thOBaU1fF8bijMbSE_Pdi65DE1EpzKL1Jo_nemydmBxUZXGRbdJA8ggYFMawV1Ew5Okfcln3T3LxDMlZgq7qRtrxWkBMjJDsQKyVCAgu6ohoUGJTMll3TXgE1ckCcZAVCMturI1kdln3InkpcYWaQT8ShZrvN-CM11ol7Kzfb142gE1CwbCT5m2oY8teX-N8TS9861aNB8eiXw01-Mtx0UPyg2VTEBhlNfxfOt3wx4S1ygTdkq_6YJT7Lv1SP_l-zLV788fA9Ko0GQ8QnIc5s9QpdTZXDby32uE2ApkD_I44azvGOKe9s_HXZcV3BoBP_OvOXeeWf2gGPYR2EozAcBeH4BNZ9eBKEp2Hn6QXOUR-Og_C457ze__kMAAD__4m9mGY=
