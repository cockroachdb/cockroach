statement ok
CREATE TABLE test_simple (p STRING, k STRING ON UPDATE 'regress')

# Simple ON UPDATE usage with explicit UPDATE

statement ok
INSERT INTO test_simple VALUES ('pk1', 'to_be_changed')

query TT
SELECT p, k FROM test_simple
----
pk1  to_be_changed

statement ok
UPDATE test_simple SET p = 'pk2' WHERE p = 'pk1'

query TT
SELECT p, k FROM test_simple
----
pk2  regress

statement ok
CREATE TABLE test_with_default (p STRING, k STRING DEFAULT 'def' ON UPDATE 'regress')

statement ok
INSERT INTO test_with_default VALUES ('pk1')

query TT
SELECT p, k FROM test_with_default
----
pk1  def

statement ok
UPDATE test_with_default SET p = 'pk2' WHERE p = 'pk1'

query TT
SELECT p, k FROM test_with_default
----
pk2  regress

# ON UPDATE usage with UPSERT

statement ok
CREATE TABLE test_upsert (p STRING PRIMARY KEY, j STRING, k STRING DEFAULT 'def' ON UPDATE 'regress')

statement ok
INSERT INTO test_upsert VALUES ('pk1', 'val1')

query TTT
SELECT p, j, k FROM test_upsert
----
pk1  val1  def

statement ok
UPSERT INTO test_upsert (p, j) VALUES ('pk1', 'val2'), ('pk2', 'val3')

query TTT
SELECT p, j, k FROM test_upsert ORDER BY p
----
pk1  val2  regress
pk2  val3  def

# ON UPDATE usage with foreign key cascading

statement ok
CREATE TABLE test_fk_base (p STRING PRIMARY KEY, j STRING UNIQUE)

statement ok
CREATE TABLE test_fk_ref (p STRING PRIMARY KEY, j STRING REFERENCES test_fk_base (j) ON UPDATE CASCADE, k STRING DEFAULT 'def' ON UPDATE 'regress')

statement ok
INSERT INTO test_fk_base VALUES ('pk1', 'val1'), ('pk2', 'val2')

statement ok
UPSERT INTO test_fk_ref (p, j) VALUES ('pk1', 'val1'), ('pk2', 'val2')

statement ok
UPDATE test_fk_base SET j = 'arbitrary' WHERE p = 'pk1'

query TT
SELECT p, j FROM test_fk_base
----
pk1  arbitrary
pk2  val2

query TTT
SELECT p, j, k FROM test_fk_ref ORDER BY p
----
pk1  arbitrary  regress
pk2  val2       def

# ON UPDATE error cases - conflict with a FK ON UPDATE

statement error pq: cannot specify both ON UPDATE expression and a foreign key ON UPDATE action for column j\(2\)
CREATE TABLE test_fk_invalid_inline (p STRING PRIMARY KEY, j STRING REFERENCES test_fk_base (j) ON UPDATE CASCADE ON UPDATE 'test')

statement error pq: cannot specify both ON UPDATE expression and a foreign key ON UPDATE action for column j\(2\)
CREATE TABLE test_fk_invalid (p STRING PRIMARY KEY, j STRING ON UPDATE 'test', CONSTRAINT fk FOREIGN KEY (j) REFERENCES test_fk_base(j) ON UPDATE SET NULL)

statement ok
CREATE TABLE alter_fk (p STRING PRIMARY KEY, j STRING REFERENCES test_fk_base (j) ON UPDATE CASCADE)

statement error pq: column j\(2\) cannot have both an ON UPDATE expression and a foreign key ON UPDATE action
ALTER TABLE alter_fk ALTER COLUMN j SET ON UPDATE 'failure'

statement ok
CREATE TABLE alter_update (p STRING PRIMARY KEY, j STRING DEFAULT 'def' ON UPDATE 'upd')

statement error pq: cannot specify a foreign key update action and an ON UPDATE expression on the same column
ALTER TABLE alter_update ADD CONSTRAINT fk FOREIGN KEY (j) REFERENCES test_fk_base (j) ON UPDATE SET DEFAULT
