# TestConfigs: default distsql distsql-metadata

statement ok
CREATE TABLE t (
  k INT PRIMARY KEY,
  v INT
)

query TTTTT colnames
EXPLAIN (TYPES) INSERT INTO t VALUES (1, 2)
----
Tree              Field          Description       Columns                     Ordering
count             ·              ·                 ()                          ·
 └── insert       ·              ·                 ()                          ·
      │           into           t(k, v)           ·                           ·
      └── values  ·              ·                 (column1 int, column2 int)  ·
·                 size           2 columns, 1 row  ·                           ·
·                 row 0, expr 0  (1)[int]          ·                           ·
·                 row 0, expr 1  (2)[int]          ·                           ·

statement ok
INSERT INTO t VALUES (1, 2)

query TTTTT
EXPLAIN (TYPES) SELECT 42
----
render         ·         ·          ("42" int)  "42"=CONST
 │             render 0  (42)[int]  ·           ·
 └── emptyrow  ·         ·          ()          ·

query TTTTT
EXPLAIN (TYPES) SELECT * FROM t
----
scan  ·      ·          (k int, v int)  k!=NULL; key(k)
·     table  t@primary  ·               ·
·     spans  ALL        ·               ·

query TTTTT
EXPLAIN (TYPES,SYMVARS) SELECT k FROM t
----
render     ·         ·          (k int)                  k!=NULL; key(k)
 │         render 0  (@1)[int]  ·                        ·
 └── scan  ·         ·          (k int, v[omitted] int)  k!=NULL; key(k)
·          table     t@primary  ·                        ·
·          spans     ALL        ·                        ·

query TTTTT
EXPLAIN (TYPES,VERBOSE) SELECT k FROM t
----
render     ·         ·                       (k int)                  k!=NULL; key(k)
 │         render 0  (test.public.t.k)[int]  ·                        ·
 └── scan  ·         ·                       (k int, v[omitted] int)  k!=NULL; key(k)
·          table     t@primary               ·                        ·
·          spans     ALL                     ·                        ·

query TTTTT
EXPLAIN (TYPES,NOEXPAND) SELECT * FROM t WHERE v > 123
----
render     ·         ·                              (k int, v int)  ·
 │         render 0  (k)[int]                       ·               ·
 │         render 1  (v)[int]                       ·               ·
 └── scan  ·         ·                              (k int, v int)  ·
·          table     t@primary                      ·               ·
·          filter    ((v)[int] > (123)[int])[bool]  ·               ·

query TTTTT
EXPLAIN (TYPES) SELECT * FROM t WHERE v > 123
----
scan  ·       ·                              (k int, v int)  k!=NULL; v!=NULL; key(k)
·     table   t@primary                      ·               ·
·     spans   ALL                            ·               ·
·     filter  ((v)[int] > (123)[int])[bool]  ·               ·

query TTTTT
EXPLAIN (TYPES) VALUES (1, 2, 3), (4, 5, 6)
----
values  ·              ·                  (column1 int, column2 int, column3 int)  ·
·       size           3 columns, 2 rows  ·                                        ·
·       row 0, expr 0  (1)[int]           ·                                        ·
·       row 0, expr 1  (2)[int]           ·                                        ·
·       row 0, expr 2  (3)[int]           ·                                        ·
·       row 1, expr 0  (4)[int]           ·                                        ·
·       row 1, expr 1  (5)[int]           ·                                        ·
·       row 1, expr 2  (6)[int]           ·                                        ·

query TTTTT
EXPLAIN (TYPES,NOEXPAND) SELECT 2*COUNT(k) as z, v FROM t WHERE v>123 GROUP BY v HAVING v<2 AND COUNT(k)>1
----
render                    ·            ·                                                                          (z int, v int)        ·
 │                        render 0     ((2)[int] * (agg1)[int])[int]                                              ·                     ·
 │                        render 1     (agg0)[int]                                                                ·                     ·
 └── filter               ·            ·                                                                          (agg0 int, agg1 int)  ·
      │                   filter       ((agg1)[int] > (1)[int])[bool]                                             ·                     ·
      └── group           ·            ·                                                                          (agg0 int, agg1 int)  ·
           │              aggregate 0  v                                                                          ·                     ·
           │              aggregate 1  count(k)                                                                   ·                     ·
           │              group by     @1                                                                         ·                     ·
           └── render     ·            ·                                                                          (v int, k int)        ·
                │         render 0     (v)[int]                                                                   ·                     ·
                │         render 1     (k)[int]                                                                   ·                     ·
                └── scan  ·            ·                                                                          (k int, v int)        ·
·                         table        t@primary                                                                  ·                     ·
·                         filter       ((((v)[int] > (123)[int])[bool]) AND (((v)[int] < (2)[int])[bool]))[bool]  ·                     ·


query TTTTT
EXPLAIN (TYPES) SELECT 2*COUNT(k) as z, v FROM t WHERE v>123 GROUP BY v HAVING v<2 AND COUNT(k)>1
----
render                    ·            ·                                                                          (z int, v int)        v!=NULL; key(v)
 │                        render 0     ((2)[int] * (agg1)[int])[int]                                              ·                     ·
 │                        render 1     (agg0)[int]                                                                ·                     ·
 └── filter               ·            ·                                                                          (agg0 int, agg1 int)  agg0!=NULL; agg1!=NULL; key(agg0)
      │                   filter       ((agg1)[int] > (1)[int])[bool]                                             ·                     ·
      └── group           ·            ·                                                                          (agg0 int, agg1 int)  agg0!=NULL; key(agg0)
           │              aggregate 0  v                                                                          ·                     ·
           │              aggregate 1  count(k)                                                                   ·                     ·
           │              group by     @1                                                                         ·                     ·
           └── render     ·            ·                                                                          (v int, k int)        v!=NULL; k!=NULL; key(k)
                │         render 0     (v)[int]                                                                   ·                     ·
                │         render 1     (k)[int]                                                                   ·                     ·
                └── scan  ·            ·                                                                          (k int, v int)        k!=NULL; v!=NULL; key(k)
·                         table        t@primary                                                                  ·                     ·
·                         spans        ALL                                                                        ·                     ·
·                         filter       ((((v)[int] > (123)[int])[bool]) AND (((v)[int] < (2)[int])[bool]))[bool]  ·                     ·

query TTTTT
EXPLAIN (TYPES,NOEXPAND) DELETE FROM t WHERE v > 1
----
count                ·         ·                            ()              ·
 └── delete          ·         ·                            ()              ·
      │              from      t                            ·               ·
      └── render     ·         ·                            (k int)         ·
           │         render 0  (k)[int]                     ·               ·
           └── scan  ·         ·                            (k int, v int)  ·
·                    table     t@primary                    ·               ·
·                    filter    ((v)[int] > (1)[int])[bool]  ·               ·

query TTTTT
EXPLAIN (TYPES) DELETE FROM t WHERE v > 1
----
count                ·         ·                            ()              ·
 └── delete          ·         ·                            ()              ·
      │              from      t                            ·               ·
      └── render     ·         ·                            (k int)         k!=NULL; key(k)
           │         render 0  (k)[int]                     ·               ·
           └── scan  ·         ·                            (k int, v int)  k!=NULL; v!=NULL; key(k)
·                    table     t@primary                    ·               ·
·                    spans     ALL                          ·               ·
·                    filter    ((v)[int] > (1)[int])[bool]  ·               ·

query TTTTT
EXPLAIN (TYPES) UPDATE t SET v = k + 1 WHERE v > 123
----
count                ·         ·                              ()                           ·
 └── update          ·         ·                              ()                           ·
      │              table     t                              ·                            ·
      │              set       v                              ·                            ·
      └── render     ·         ·                              (k int, v int, "k + 1" int)  k!=NULL; v!=NULL; key(k)
           │         render 0  (k)[int]                       ·                            ·
           │         render 1  (v)[int]                       ·                            ·
           │         render 2  ((k)[int] + (1)[int])[int]     ·                            ·
           └── scan  ·         ·                              (k int, v int)               k!=NULL; v!=NULL; key(k)
·                    table     t@primary                      ·                            ·
·                    spans     ALL                            ·                            ·
·                    filter    ((v)[int] > (123)[int])[bool]  ·                            ·

query TTTTT
EXPLAIN (TYPES,NOEXPAND) UPDATE t SET v = k + 1 WHERE v > 123
----
count                ·         ·                              ()                           ·
 └── update          ·         ·                              ()                           ·
      │              table     t                              ·                            ·
      │              set       v                              ·                            ·
      └── render     ·         ·                              (k int, v int, "k + 1" int)  ·
           │         render 0  (k)[int]                       ·                            ·
           │         render 1  (v)[int]                       ·                            ·
           │         render 2  ((k)[int] + (1)[int])[int]     ·                            ·
           └── scan  ·         ·                              (k int, v int)               ·
·                    table     t@primary                      ·                            ·
·                    filter    ((v)[int] > (123)[int])[bool]  ·                            ·

query TTTTT
EXPLAIN (TYPES) VALUES (1) UNION VALUES (2)
----
union        ·              ·                (column1 int)  ·
 ├── values  ·              ·                (column1 int)  ·
 │           size           1 column, 1 row  ·              ·
 │           row 0, expr 0  (2)[int]         ·              ·
 └── values  ·              ·                (column1 int)  ·
·            size           1 column, 1 row  ·              ·
·            row 0, expr 0  (1)[int]         ·              ·

query TTTTT
EXPLAIN (TYPES) SELECT DISTINCT k FROM t
----
render     ·         ·          (k int)                  k!=NULL; key(k)
 │         render 0  (k)[int]   ·                        ·
 └── scan  ·         ·          (k int, v[omitted] int)  k!=NULL; key(k)
·          table     t@primary  ·                        ·
·          spans     ALL        ·                        ·

query TTTTT
EXPLAIN (TYPES,NOEXPAND) SELECT DISTINCT k FROM t
----
distinct        ·         ·          (k int)                  weak-key(k)
 └── render     ·         ·          (k int)                  ·
      │         render 0  (k)[int]   ·                        ·
      └── scan  ·         ·          (k int, v[omitted] int)  ·
·               table     t@primary  ·                        ·

query TTTTT
EXPLAIN (TYPES) SELECT v FROM t ORDER BY v
----
sort            ·         ·          (v int)                  +v
 │              order     +v         ·                        ·
 └── render     ·         ·          (v int)                  ·
      │         render 0  (v)[int]   ·                        ·
      └── scan  ·         ·          (k[omitted] int, v int)  k!=NULL; key(k)
·               table     t@primary  ·                        ·
·               spans     ALL        ·                        ·

query TTTTT
EXPLAIN (TYPES,NOEXPAND) SELECT v FROM t ORDER BY v
----
nosort          ·         ·          (v int)                  ·
 │              order     +v         ·                        ·
 └── render     ·         ·          (v int)                  ·
      │         render 0  (v)[int]   ·                        ·
      └── scan  ·         ·          (k[omitted] int, v int)  ·
·               table     t@primary  ·                        ·

query TTTTT
EXPLAIN (TYPES) SELECT v FROM t LIMIT 1
----
limit           ·         ·          (v int)                  ·
 │              count     (1)[int]   ·                        ·
 └── render     ·         ·          (v int)                  ·
      │         render 0  (v)[int]   ·                        ·
      └── scan  ·         ·          (k[omitted] int, v int)  k!=NULL; key(k)
·               table     t@primary  ·                        ·
·               spans     ALL        ·                        ·
·               limit     1          ·                        ·

query TTTTT
EXPLAIN (TYPES,NOEXPAND) SELECT v FROM t LIMIT 1
----
limit           ·         ·          (v int)                  ·
 │              count     (1)[int]   ·                        ·
 └── render     ·         ·          (v int)                  ·
      │         render 0  (v)[int]   ·                        ·
      └── scan  ·         ·          (k[omitted] int, v int)  ·
·               table     t@primary  ·                        ·

statement ok
CREATE TABLE tt (x INT, y INT, INDEX a(x), INDEX b(y))

query TTTTT
EXPLAIN (TYPES) SELECT * FROM tt WHERE x < 10 AND y > 10
----
render           ·         ·                             (x int, y int)                                       x!=NULL; y!=NULL
 │               render 0  (x)[int]                      ·                                                    ·
 │               render 1  (y)[int]                      ·                                                    ·
 └── index-join  ·         ·                             (x int, y int, rowid[hidden,omitted] int)            x!=NULL; y!=NULL; rowid!=NULL; key(x,rowid)
      ├── scan   ·         ·                             (x[omitted] int, y[omitted] int, rowid[hidden] int)  x!=NULL; y!=NULL; rowid!=NULL; key(x,rowid)
      │          table     tt@a                          ·                                                    ·
      │          spans     /!NULL-/10                    ·                                                    ·
      └── scan   ·         ·                             (x int, y int, rowid[hidden,omitted] int)            ·
·                table     tt@primary                    ·                                                    ·
·                filter    ((y)[int] > (10)[int])[bool]  ·                                                    ·

query TTTTT
EXPLAIN (TYPES,NOEXPAND) SELECT * FROM tt WHERE x < 10 AND y > 10
----
render     ·         ·                                                                          (x int, y int)                             ·
 │         render 0  (x)[int]                                                                   ·                                          ·
 │         render 1  (y)[int]                                                                   ·                                          ·
 └── scan  ·         ·                                                                          (x int, y int, rowid[hidden,omitted] int)  ·
·          table     tt@primary                                                                 ·                                          ·
·          filter    ((((x)[int] < (10)[int])[bool]) AND (((y)[int] > (10)[int])[bool]))[bool]  ·                                          ·

query TTTTT
EXPLAIN (TYPES) SELECT $1 + 2 AS a
----
render         ·         ·                            (a int)  a=CONST
 │             render 0  (($1)[int] + (2)[int])[int]  ·        ·
 └── emptyrow  ·         ·                            ()       ·

query TTTTT
EXPLAIN (TYPES,NONORMALIZE) SELECT ABS(2-3) AS a
----
render         ·         ·                      (a int)  a=CONST
 │             render 0  (abs((-1)[int]))[int]  ·        ·
 └── emptyrow  ·         ·                      ()       ·

query TTTTT
EXPLAIN (TYPES) SELECT ABS(2-3) AS a
----
render         ·         ·         (a int)  a=CONST
 │             render 0  (1)[int]  ·        ·
 └── emptyrow  ·         ·         ()       ·

# Check array subscripts (#13811)
query TTTTT
EXPLAIN (TYPES) SELECT x[1] FROM (SELECT ARRAY[1,2,3] AS x)
----
render              ·         ·                                           ("x[1]" int)  ·
 │                  render 0  ((x)[int[]][(1)[int]])[int]                 ·             ·
 └── render         ·         ·                                           (x int[])     x=CONST
      │             render 0  (ARRAY[(1)[int],(2)[int],(3)[int]])[int[]]  ·             ·
      └── emptyrow  ·         ·                                           ()            ·
