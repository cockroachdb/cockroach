statement ok
CREATE TABLE u (token uuid PRIMARY KEY,
                token2 uuid,
                token3 uuid,
                UNIQUE INDEX i_token2 (token2))

statement ok
INSERT INTO u VALUES
  ('63616665-6630-3064-6465-616462656562', '{63616665-6630-3064-6465-616462656563}', b'kafef00ddeadbeed'),
  ('urn:uuid:63616665-6630-3064-6465-616462656564', '63616665-6630-3064-6465-616462656565'::uuid, b'kafef00ddeadbeee'),
  (b'cafef00ddeadbeef', '63616665-6630-3064-6465-616462656567', b'kafef00ddeadbeef')

query TTT
SELECT * FROM u ORDER BY token
----
63616665-6630-3064-6465-616462656562 63616665-6630-3064-6465-616462656563 6b616665-6630-3064-6465-616462656564
63616665-6630-3064-6465-616462656564 63616665-6630-3064-6465-616462656565 6b616665-6630-3064-6465-616462656565
63616665-6630-3064-6465-616462656566 63616665-6630-3064-6465-616462656567 6b616665-6630-3064-6465-616462656566

query TTT
SELECT * FROM u WHERE token < '63616665-6630-3064-6465-616462656564'::uuid
----
63616665-6630-3064-6465-616462656562 63616665-6630-3064-6465-616462656563 6b616665-6630-3064-6465-616462656564

query TTT
SELECT * FROM u WHERE token <= '63616665-6630-3064-6465-616462656564'::uuid ORDER BY token
----
63616665-6630-3064-6465-616462656562 63616665-6630-3064-6465-616462656563 6b616665-6630-3064-6465-616462656564
63616665-6630-3064-6465-616462656564 63616665-6630-3064-6465-616462656565 6b616665-6630-3064-6465-616462656565

statement error duplicate key value
INSERT INTO u VALUES ('63616665-6630-3064-6465-616462656566')

statement error duplicate key value
INSERT INTO u VALUES ('63616665-6630-3064-6465-616462656569', '63616665-6630-3064-6465-616462656565')

statement error UUID must be exactly 16 bytes long, got 15 bytes
INSERT INTO u VALUES (b'cafef00ddeadbee')

statement error UUID must be exactly 16 bytes long, got 17 bytes
INSERT INTO u VALUES (b'cafef00ddeadbeefs')

statement error uuid: incorrect UUID format
INSERT INTO u VALUES ('63616665-6630-3064-6465-61646265656')

statement error uuid: incorrect UUID format
INSERT INTO u VALUES ('63616665-6630-3064-6465-6164626565620')

statement error unsupported comparison operator: <uuid> = <bytes>
SELECT token FROM u WHERE token=b'cafef00ddeadbeef'::bytes

statement error unsupported comparison operator: <uuid> = <string>
SELECT token FROM u WHERE token='63616665-6630-3064-6465-616462656562'::string

statement ok
SELECT token FROM u WHERE token='63616665-6630-3064-6465-616462656562'::uuid

query T
SELECT token FROM u WHERE token='urn:uuid:63616665-6630-3064-6465-616462656562'
----
63616665-6630-3064-6465-616462656562

query T
SELECT token FROM u WHERE token=b'cafef00ddeadbeef'
----
63616665-6630-3064-6465-616462656566

query T
SELECT token2 FROM u WHERE token2='63616665-6630-3064-6465-616462656563'
----
63616665-6630-3064-6465-616462656563

query T
SELECT token FROM u WHERE token IN ('63616665-6630-3064-6465-616462656562', '63616665-6630-3064-6465-616462656564') ORDER BY token
----
63616665-6630-3064-6465-616462656562
63616665-6630-3064-6465-616462656564

statement ok
INSERT INTO u VALUES ('63616665-6630-3064-6465-616462656567'::uuid)

statement ok
INSERT INTO u VALUES ('urn:uuid:63616665-6630-3064-6465-616462656568'::uuid)

statement ok
INSERT INTO u VALUES (uuid_v4()::uuid)

statement error value type bytes doesn't match type uuid
INSERT INTO u VALUES ('cafef00ddeadbeef'::bytes)

statement error value type string doesn't match type uuid
INSERT INTO u VALUES ('63616665-6630-3064-6465-616462656562'::string)

statement error value type bytes doesn't match type uuid
INSERT INTO u VALUES (uuid_v4())

query T
SELECT token::uuid FROM u WHERE token=b'cafef00ddeadbeef'
----
63616665-6630-3064-6465-616462656566

query T
SELECT token::string FROM u WHERE token=b'cafef00ddeadbeef'
----
63616665-6630-3064-6465-616462656566

query T
SELECT token::bytes FROM u WHERE token=b'cafef00ddeadbeef'
----
cafef00ddeadbeef

statement error invalid cast: uuid -> int
SELECT token::int FROM u

query T
SELECT ('63616665-6630-3064-6465-616462656562' COLLATE en)::uuid
----
63616665-6630-3064-6465-616462656562

query T
SELECT uuid_nil()
----
00000000-0000-0000-0000-000000000000

query T
SELECT uuid_ns_dns()
----
6ba7b810-9dad-11d1-80b4-00c04fd430c8

query T
SELECT uuid_ns_url()
----
6ba7b811-9dad-11d1-80b4-00c04fd430c8

query T
SELECT uuid_ns_oid()
----
6ba7b812-9dad-11d1-80b4-00c04fd430c8

query T
SELECT uuid_ns_x500()
----
6ba7b814-9dad-11d1-80b4-00c04fd430c8

query B
SELECT uuid_generate_v1() = uuid_generate_v1()
----
false

query B
SELECT uuid_generate_v1mc() = uuid_generate_v1mc()
----
false

# Verify that uuid_generate_v1 does not return deterministic output for the MAC
# address bits.
query B
SELECT substr(uuid_generate_v1()::TEXT, 24) = substr(uuid_generate_v1()::TEXT, 24)
----
false

query B
SELECT substr(uuid_generate_v1mc()::TEXT, 24) = substr(uuid_generate_v1mc()::TEXT, 24)
----
false

query T
SELECT uuid_generate_v3(uuid_ns_x500(), 'cat')
----
6505abc6-6166-351d-b8f6-ce179e9cf79d

query T
SELECT uuid_generate_v5(uuid_ns_oid(), 'dog')
----
9a8b57c4-73a4-5dfb-b888-6fff478edf63

# Regression test for incorrect concatenation of a UUID with a STRING in the
# vectorized engine (#83093).
statement ok
CREATE TABLE t83093 (u) AS SELECT 'eb64afe6-ade7-40ce-8352-4bb5eec39075'::UUID

query T
SELECT u || 'foo' FROM t83093
----
eb64afe6-ade7-40ce-8352-4bb5eec39075foo
