statement ok
SET experimental_enable_virtual_columns = true

# Test that we don't allow FAMILY constraints with virtual columns.
statement error virtual computed column "v" cannot be part of a family
CREATE TABLE t (
  a INT PRIMARY KEY,
  b INT,
  v INT AS (a+b) VIRTUAL,
  FAMILY (a, b, v)
)

statement error virtual computed column "v" cannot be part of a family
CREATE TABLE t (
  a INT PRIMARY KEY,
  b INT,
  v INT AS (a+b) VIRTUAL,
  FAMILY (a),
  FAMILY (b),
  FAMILY (v)
)

statement ok
CREATE TABLE t (
  a INT PRIMARY KEY,
  b INT,
  v INT AS (a+b) VIRTUAL,
  FAMILY (a,b)
)

statement ok
INSERT INTO t VALUES (1, 1)

statement ok
INSERT INTO t(a,b) VALUES (2, 2)

statement error cannot write directly to computed column
INSERT INTO t(a,b,v) VALUES (2, 2, 0)

# Ensure that the virtual column is produced.
query III colnames,rowsort
SELECT * FROM t
----
a  b  v
1  1  2
2  2  4

statement ok
CREATE TABLE t_idx (
  a INT PRIMARY KEY,
  b INT,
  v INT AS (a+b) VIRTUAL,
  INDEX (v)
)

statement ok
INSERT INTO t_idx VALUES (1, 1), (2, 8), (3, 3), (4, 6), (5, 2)

# Queries which should use the index on v. Note that there are corresponding
# execbuilder tests which verify the query plans.
query I rowsort
SELECT a FROM t_idx WHERE a+b=10
----
2
4

query I rowsort
SELECT a FROM t_idx WHERE v=10
----
2
4

statement ok
DELETE FROM t WHERE a > 0

statement ok
INSERT INTO t VALUES (1, 10), (2, 20), (3, 30), (4, 40)

query I rowsort
DELETE FROM t WHERE a = 1 RETURNING v
----
11

query III rowsort
SELECT * FROM t
----
2  20  22
3  30  33
4  40  44

statement ok
DELETE FROM t WHERE v = 33

query III rowsort
SELECT * FROM t
----
2  20  22
4  40  44

statement ok
DELETE FROM t_idx WHERE v = 6

query III rowsort
SELECT * FROM t_idx
----
1  1  2
2  8  10
4  6  10
5  2  7

statement ok
DELETE FROM t_idx WHERE a+b = 10

query III rowsort
SELECT * FROM t_idx
----
1  1  2
5  2  7
