# LogicTest: local

# SRID of the geometry column is unspecified, so default index bounds are used.
statement ok
CREATE TABLE geo_table(
  k int primary key,
  geom geometry,
  INVERTED INDEX geom_index(geom)
)

# Shapes with SRID 26918. We've taken small X, Y values and added 400,000 to the X coordinate
# and 4,000,000 to the Y coordinate to place them inside the bounds of SRID 26918.
statement ok
INSERT INTO geo_table VALUES
  (1, 'SRID=26918;POINT(400001 4000001)'),
  (2, 'SRID=26918;LINESTRING(400001 4000001, 400002 4000002)'),
  (3, 'SRID=26918;POINT(400003 4000003)'),
  (4, 'SRID=26918;LINESTRING(400004 4000004, 400005 4000005)'),
  (5, 'SRID=26918;LINESTRING(400040 4000040, 400041 4000041)'),
  (6, 'SRID=26918;POLYGON((400001 4000001, 400005 4000001, 400005 4000005, 400001 4000005, 400001 4000001))')

query I
SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
3
6

query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 6 (48 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 2
│ order: +k
│
└── • filter
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 2
    │ filter: st_intersects('010100002026690000000000000C6A18410000008081844E41', geom)
    │
    └── • index join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 2
        │ KV time: 0µs
        │ KV contention time: 0µs
        │ KV rows read: 2
        │ KV bytes read: 16 B
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 2
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  nodes: <hidden>
                  regions: <hidden>
                  actual row count: 4
                  KV time: 0µs
                  KV contention time: 0µs
                  KV rows read: 4
                  KV bytes read: 32 B
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzMVeFO40YQ_t-nGM0fQHWVXdukYatKKWDatIUgJ2qF6ggt9jRY2F6zu7kzQnmse4F7spNt4AhRDDn-XH44mm_yTWa-b3Z9j-Y2Q4GT4O_gaAo3cBKOT2FO6tLKq4zg3z-CMABjL9PCkjYUW7O7MwlHx7-6_QM--OV8PDqb7vqMMeZB88W8vR0hfg_Gp8E0vHDqWvkejMPjIITDC7hBBwuV0JnMyaD4DznOHCy1iskYpWvovvnBKKlQMAfTolzYGp45GCtNKO7RpjYjFDitewxJJqR7DB1MyMo0a8o-jTCsG7hMi4QqdHBSysII6EV4GEXV_0kUVZxFUcVee-BP23J4hCCLBDwGyl6TNujgX_-ATXMSwD5_eohjVVgqbKqKtZRWHw1okokAv0Wu7iw9Qp4Lh-hgLivIKVf6DmSWqVhaSgSwJnclbXxNBtTClgsroNaoKfoI-DhbOthGDxobK-eEgi-dt_swKj6QtpScpJklTbrHV814zAdVqUEVMOQCTO0EGCu1FY2y3s_7UcRcFkWMvfZAoCLZllYbsubIuJZhWPfbDNho3srdxsbKLFt1hiqKF-uGdRlR58xtBpbyEpLU3MDCyDm92Sd3o0_uNj79qdLi4bi4m45LqdNc6ruv0jhD9z2b665vLu-_f3M3K-Jto8jTxnqrerS4eHnzMc54fce5zO33D9jzz1H_Nz7weRsM2IAPfD_w-Y54fhkO3b2NO-d-w869QyZ_G5kmSlvSPX9VpCH_8Xs7DvvbTBWSKVVhaGWqTZXZcuYgJXNqX1FGLXRM51rFzd-04bjhNUBCxrZZ3gajok3VDT4n806y2012O8leN9nrJPvdZL-TvP-CPFv-8CUAAP__Wwmyxw==

statement ok
DROP TABLE geo_table

# SRID of the geometry column is specified, so SRID specific bounds are used.
statement ok
CREATE TABLE geo_table(
  k int primary key,
  geom geometry(geometry, 26918),
  INVERTED INDEX geom_index(geom)
)

# Same shapes.
statement ok
INSERT INTO geo_table VALUES
  (1, 'SRID=26918;POINT(400001 4000001)'),
  (2, 'SRID=26918;LINESTRING(400001 4000001, 400002 4000002)'),
  (3, 'SRID=26918;POINT(400003 4000003)'),
  (4, 'SRID=26918;LINESTRING(400004 4000004, 400005 4000005)'),
  (5, 'SRID=26918;LINESTRING(400040 4000040, 400041 4000041)'),
  (6, 'SRID=26918;POLYGON((400001 4000001, 400005 4000001, 400005 4000005, 400001 4000005, 400001 4000001))')


# Same result.
query I
SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
3
6

# The InvertedFilterer stats show "rows read: 2" since all the above shapes are within the index
# bounds.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 4 (32 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 2
│ order: +k
│
└── • filter
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 2
    │ filter: st_intersects('010100002026690000000000000C6A18410000008081844E41', geom)
    │
    └── • index join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 2
        │ KV time: 0µs
        │ KV contention time: 0µs
        │ KV rows read: 2
        │ KV bytes read: 16 B
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 2
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  nodes: <hidden>
                  regions: <hidden>
                  actual row count: 2
                  KV time: 0µs
                  KV contention time: 0µs
                  KV rows read: 2
                  KV bytes read: 16 B
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzUVeFO40YQ_t-nGM0fQHWVXdukYatKKWDatIUgJ2qFzhFa7LlgYXvN7uYuCOWx7gXuyU5rA0dA-C46ftzlx0bzjb_xzPftrm_RXBcocBL9Gx1M4QqO4vExzEmdW3lREPz_VxRHYOx5XlnShlJrtrcm8ejwd7-_xwe_nY5HJ9PtkDHGAmj-WLCzJcSf0fg4msZnnqtV7sA4Poxi2D-DK_SwUhmdyJIMijfIceZhrVVKxijtoNvmgVG2RME8zKt6YR088zBVmlDcos1tQShw6nqMSWakeww9zMjKvGjKPowwdA2c51VGS_RwUsvKCOgluJ8ky7dZkixZ4Bb2hQV_2ZTDEwRZZRAwUPaStEEP__kPbF6SAPbxw12cqspSZXNVPUtp9d6AJpkJ8Fvk4sbSPcT7sI8elnIJJZVK34AsCpVKS5kA1uQupE0vyYBa2HphBTiNmqL3gI-zlYdtdKexsXJOKPjK-3ofRtU70payo7ywpEn3-LoZ9_loWWtQFQy5AOOcAGOltqJRNvh1N0mYU5Y5ATsXBKqyTWnOkGeOjJ0MQ9dvM2CjeSt3Gxsri2LdGVpSunhuWJcRLmeuC7BU1pDl5goWRs7pFXzyN_Hpb5VXd8fFf-m41Dovpb75LI039H-onRtsosjDjg3W9Whx8fTmY5xxd8f5zO_399jj30H_Dz4IeRsM2IAPwjAK-ZZ4fBkO_Z1X3XPfIFO4iUwTpS3pXrgu0pD__L0dh91NporJ1KoytDbVS5XZauYhZXNqP1FGLXRKp1qlzWvacNzwGiAjY9ssb4NR1aZcg4_JvJPsd5P9TnLQTQ46yWE3Oewk7z4hz1Y_fQoAAP__bAayyQ==

# Also works when creating an index.
statement ok
DROP INDEX geo_table@geom_index

statement ok
CREATE INVERTED INDEX geom_index ON geo_table(geom)

query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 4 (32 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 2
│ order: +k
│
└── • filter
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 2
    │ filter: st_intersects('010100002026690000000000000C6A18410000008081844E41', geom)
    │
    └── • index join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 2
        │ KV time: 0µs
        │ KV contention time: 0µs
        │ KV rows read: 2
        │ KV bytes read: 16 B
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 2
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  nodes: <hidden>
                  regions: <hidden>
                  actual row count: 2
                  KV time: 0µs
                  KV contention time: 0µs
                  KV rows read: 2
                  KV bytes read: 16 B
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzUVeFO40YQ_t-nGM0fQHWVXdukYatKKWDatIUgJ2qFzhFa7LlgYXvN7uYuCOWx7gXuyU5rA0dA-C46ftzlx0bzjb_xzPftrm_RXBcocBL9Gx1M4QqO4vExzEmdW3lREPz_VxRHYOx5XlnShlJrtrcm8ejwd7-_xwe_nY5HJ9PtkDHGAmj-WLCzJcSf0fg4msZnnqtV7sA4Poxi2D-DK_SwUhmdyJIMijfIceZhrVVKxijtoNvmgVG2RME8zKt6YR088zBVmlDcos1tQShw6nqMSWakeww9zMjKvGjKPowwdA2c51VGS_RwUsvKCOgluJ8ky7dZkixZ4Bb2hQV_2ZTDEwRZZRAwUPaStEEP__kPbF6SAPbxw12cqspSZXNVPUtp9d6AJpkJ8Fvk4sbSPcT7sI8elnIJJZVK34AsCpVKS5kA1uQupE0vyYBa2HphBTiNmqL3gI-zlYdtdKexsXJOKPjK-3ofRtU70payo7ywpEn3-LoZ9_loWWtQFQy5AOOcAGOltqJRNvh1N0mYU5Y5ATsXBKqyTWnOkGeOjJ0MQ9dvM2CjeSt3Gxsri2LdGVpSunhuWJcRLmeuC7BU1pDl5goWRs7pFXzyN_Hpb5VXd8fFf-m41Dovpb75LI039H-onRtsosjDjg3W9Whx8fTmY5xxd8f5zO_399jj30H_Dz4IeRsM2IAPwjAK-ZZ4fBkO_Z1X3XPfIFO4iUwTpS3pXrgu0pD__L0dh91NporJ1KoytDbVS5XZauYhZXNqP1FGLXRKp1qlzWvacNzwGiAjY9ssb4NR1aZcg4_JvJPsd5P9TnLQTQ46yWE3Oewk7z4hz1Y_fQoAAP__bAayyQ==
