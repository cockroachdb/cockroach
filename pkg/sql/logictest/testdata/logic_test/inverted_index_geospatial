# LogicTest: local

# SRID of the geometry column is unspecified, so default index bounds are used.
statement ok
CREATE TABLE geo_table(
  k int primary key,
  geom geometry,
  INVERTED INDEX geom_index(geom)
)

# Shapes with SRID 26918. We've taken small X, Y values and added 400,000 to the X coordinate
# and 4,000,000 to the Y coordinate to place them inside the bounds of SRID 26918.
statement ok
INSERT INTO geo_table VALUES
  (1, 'SRID=26918;POINT(400001 4000001)'),
  (2, 'SRID=26918;LINESTRING(400001 4000001, 400002 4000002)'),
  (3, 'SRID=26918;POINT(400003 4000003)'),
  (4, 'SRID=26918;LINESTRING(400004 4000004, 400005 4000005)'),
  (5, 'SRID=26918;LINESTRING(400040 4000040, 400041 4000041)'),
  (6, 'SRID=26918;POLYGON((400001 4000001, 400005 4000001, 400005 4000005, 400001 4000005, 400001 4000001))')

query I
SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
3
6

query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 6 (48 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 2
│ order: +k
│
└── • filter
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 2
    │ filter: st_intersects('010100002026690000000000000C6A18410000008081844E41', geom)
    │
    └── • index join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 2
        │ KV time: 0µs
        │ KV contention time: 0µs
        │ KV rows read: 2
        │ KV bytes read: 16 B
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 2
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  nodes: <hidden>
                  regions: <hidden>
                  actual row count: 4
                  KV time: 0µs
                  KV contention time: 0µs
                  KV rows read: 4
                  KV bytes read: 32 B
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzMleFO20gQx7_fU4zmC6DzKbu2yYU9nZQDzF2uhSAnaoXqCC32NFjYXrO7aY1QHqsv0CerbBNKiBKa8qX5sNHM-L-e-c3s-h7NbYYCR8Hb4GgMN3ASDk9hSurSyquM4P1_QRiAsZdpYUkbiq3Z3RmFg-O_3e4B7_11PhycjXd9xhjzoPlj3t6OEP8Gw9NgHF449V75HgzD4yCEwwu4QQcLldCZzMmg-IAcJw6WWsVkjNK16755YJBUKJiDaVHObO2eOBgrTSju0aY2IxQ4rnMMSSakOwwdTMjKNGu2fSyhXydwmRYJVejgqJSFEdCJ8DCKqo9JFFWcRVHFXlrwj201PEKQRQIeA2WvSRt08M07sGlOAtjXLw92rApLhU1VsRLS6rMBTTIR4LeeqztLC5fnwiE6eCVtfE0G1MyWMyug5tAIFw4fJ3MHW-uBo7FySij43Plx1oPiE2lLyUmaWdKkO3wZ-CIeVKUGVUCfCzA1bTBWaisaet6f-1HEXBZFjL20IFCRbCuroa9QH9YY-nW-TYEN1xZpaxsrs2yZPlUUz1abkssKcsqVvgOZZSqWlhIBrGlEHTO3GVjKS0hScwMzI6e0CL_YJ3dtn9xt-vS_SouHI-GuOxKlTnOp776jcfrua6bTXZ1O3n1t1d42VT9Opbdcc-sXz28wxhmv7yqXud3uAXv6O-r-w3s-b40e6_Ge7wc-3xFPL7W-u7d2rtyfmKtXYPK3wTRS2pLu-MuQ-vz3X23k97epKiRTqsLQUlXrdmbziYOUTKn91Bg10zGdaxU3r2nNYaNrHAkZ20Z5awyKNlQn-FTMN4rdzWJ3o9jbLPY2iv3NYn-jeP-ZeDL_7VsAAAD__2dToH8=

statement ok
DROP TABLE geo_table

# SRID of the geometry column is specified, so SRID specific bounds are used.
statement ok
CREATE TABLE geo_table(
  k int primary key,
  geom geometry(geometry, 26918),
  INVERTED INDEX geom_index(geom)
)

# Same shapes.
statement ok
INSERT INTO geo_table VALUES
  (1, 'SRID=26918;POINT(400001 4000001)'),
  (2, 'SRID=26918;LINESTRING(400001 4000001, 400002 4000002)'),
  (3, 'SRID=26918;POINT(400003 4000003)'),
  (4, 'SRID=26918;LINESTRING(400004 4000004, 400005 4000005)'),
  (5, 'SRID=26918;LINESTRING(400040 4000040, 400041 4000041)'),
  (6, 'SRID=26918;POLYGON((400001 4000001, 400005 4000001, 400005 4000005, 400001 4000005, 400001 4000001))')


# Same result.
query I
SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
3
6

# The InvertedFilterer stats show "rows read: 2" since all the above shapes are within the index
# bounds.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 4 (32 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 2
│ order: +k
│
└── • filter
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 2
    │ filter: st_intersects('010100002026690000000000000C6A18410000008081844E41', geom)
    │
    └── • index join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 2
        │ KV time: 0µs
        │ KV contention time: 0µs
        │ KV rows read: 2
        │ KV bytes read: 16 B
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 2
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  nodes: <hidden>
                  regions: <hidden>
                  actual row count: 2
                  KV time: 0µs
                  KV contention time: 0µs
                  KV rows read: 2
                  KV bytes read: 16 B
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzMleFO40YQx7_3KUbzBVBdZdc2adiqUgqYNm0hyIlaoTpCiz0NFrbX7G7aIJTHuhe4JzutTTgCwncR94F82Ghm_F_P_GZ2fY_mtkCBk-jP6GgKN3ASj09hTurSyquC4O_fojgCYy_zypI2lFqzuzOJR8c_-_0DPvjpfDw6m-6GjDEWQPPHgr0dIX6NxqfRNL7w3F7lHozj4yiGwwu4QQ8rldGZLMmg-Ac5zjystUrJGKWd6755YJQtUTAP86peWOeeeZgqTSju0ea2IBQ4dTnGJDPSPYYeZmRlXjTbPpYwdAlc5lVGS_RwUsvKCOgleJgky3-zJFmywC3sCwv-sK2GJwiyyiBgoOw1aYMe_vEX2LwkAezjhwc7VZWlyuaqehHS6n8DmmQmwG89V3eW1i7eh0P08Era9JoMqIWtF1aA49AI1w4fZysPW-uBo7FyTij4yvt61qPqP9KWspO8sKRJ9_gm8HU8WtYaVAVDLsA42mCs1FY09IIf95OEOXrMQepcEKjKtpU56C-ojx2Gocu3KbDh2iJtbWNlUWzSpyWli5dNKeUSSiqVvgNZFCqVljIBrGmEi5nbAiyVNWS5uYGFkXNah9_QJ3-bPv2u8urhSPivHYla56XUd5_ReEP_3U1nsE3Vj1MZbNbc-sXzG4xxxt1d5TO_3z9gT39H_V_4IOStMWADPgjDKOQ74umlNvT3vulcvQFTuA2midKWdC_chDTk37-3kd_fpqqYTK0qQxtVvbYzW808pGxO7afGqIVO6VyrtHlNa44bXePIyNg2yltjVLUhl-BTMe8U-91iv1McdIuDTnHYLQ47xfvPxLPVd58CAAD__3eooIE=

# Also works when creating an index.
statement ok
DROP INDEX geo_table@geom_index

statement ok
CREATE INVERTED INDEX geom_index ON geo_table(geom)

query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 4 (32 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 2
│ order: +k
│
└── • filter
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 2
    │ filter: st_intersects('010100002026690000000000000C6A18410000008081844E41', geom)
    │
    └── • index join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 2
        │ KV time: 0µs
        │ KV contention time: 0µs
        │ KV rows read: 2
        │ KV bytes read: 16 B
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 2
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  nodes: <hidden>
                  regions: <hidden>
                  actual row count: 2
                  KV time: 0µs
                  KV contention time: 0µs
                  KV rows read: 2
                  KV bytes read: 16 B
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzMleFO40YQx7_3KUbzBVBdZdc2adiqUgqYNm0hyIlaoTpCiz0NFrbX7G7aIJTHuhe4JzutTTgCwncR94F82Ghm_F_P_GZ2fY_mtkCBk-jP6GgKN3ASj09hTurSyquC4O_fojgCYy_zypI2lFqzuzOJR8c_-_0DPvjpfDw6m-6GjDEWQPPHgr0dIX6NxqfRNL7w3F7lHozj4yiGwwu4QQ8rldGZLMmg-Ac5zjystUrJGKWd6755YJQtUTAP86peWOeeeZgqTSju0ea2IBQ4dTnGJDPSPYYeZmRlXjTbPpYwdAlc5lVGS_RwUsvKCOgleJgky3-zJFmywC3sCwv-sK2GJwiyyiBgoOw1aYMe_vEX2LwkAezjhwc7VZWlyuaqehHS6n8DmmQmwG89V3eW1i7eh0P08Era9JoMqIWtF1aA49AI1w4fZysPW-uBo7FyTij4yvt61qPqP9KWspO8sKRJ9_gm8HU8WtYaVAVDLsA42mCs1FY09IIf95OEOXrMQepcEKjKtpU56C-ojx2Gocu3KbDh2iJtbWNlUWzSpyWli5dNKeUSSiqVvgNZFCqVljIBrGmEi5nbAiyVNWS5uYGFkXNah9_QJ3-bPv2u8urhSPivHYla56XUd5_ReEP_3U1nsE3Vj1MZbNbc-sXzG4xxxt1d5TO_3z9gT39H_V_4IOStMWADPgjDKOQ74umlNvT3vulcvQFTuA2midKWdC_chDTk37-3kd_fpqqYTK0qQxtVvbYzW808pGxO7afGqIVO6VyrtHlNa44bXePIyNg2yltjVLUhl-BTMe8U-91iv1McdIuDTnHYLQ47xfvPxLPVd58CAAD__3eooIE=
