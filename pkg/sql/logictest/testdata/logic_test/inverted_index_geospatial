# LogicTest: local

# SRID of the geometry column is unspecified, so default index bounds are used.
statement ok
CREATE TABLE geo_table(
  k int primary key,
  geom geometry,
  INVERTED INDEX geom_index(geom)
)

# Shapes with SRID 26918. We've taken small X, Y values and added 400,000 to the X coordinate
# and 4,000,000 to the Y coordinate to place them inside the bounds of SRID 26918.
statement ok
INSERT INTO geo_table VALUES
  (1, 'SRID=26918;POINT(400001 4000001)'),
  (2, 'SRID=26918;LINESTRING(400001 4000001, 400002 4000002)'),
  (3, 'SRID=26918;POINT(400003 4000003)'),
  (4, 'SRID=26918;LINESTRING(400004 4000004, 400005 4000005)'),
  (5, 'SRID=26918;LINESTRING(400040 4000040, 400041 4000041)'),
  (6, 'SRID=26918;POLYGON((400001 4000001, 400005 4000001, 400005 4000005, 400001 4000005, 400001 4000001))')

query I
SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
3
6

query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 6 (48 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 2
│ order: +k
│
└── • filter
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 2
    │ filter: st_intersects('010100002026690000000000000C6A18410000008081844E41', geom)
    │
    └── • index join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 2
        │ KV time: 0µs
        │ KV contention time: 0µs
        │ KV rows read: 2
        │ KV bytes read: 16 B
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 2
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  nodes: <hidden>
                  regions: <hidden>
                  actual row count: 4
                  KV time: 0µs
                  KV contention time: 0µs
                  KV rows read: 4
                  KV bytes read: 32 B
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzMVeFO40YQ_t-nGM0fQHWVXdukYatKKWDatIUgJ2qF6ggt9jRY2F6zu7kzQnmse4F7spNt4AhRDDn-XH44mpl8k_m-b3Z9j-Y2Q4GT4O_gaAo3cBKOT2FO6tLKq4zg3z-CMABjL9PCkjYUW7O7MwlHx7-6_QM--OV8PDqb7vqMMeZB88W8vR0hfg_Gp8E0vHDqXvkejMPjIITDC7hBBwuV0JnMyaD4DznOHCy1iskYpevUffODUVKhYA6mRbmwdXrmYKw0obhHm9qMUOC0njEkmZDuMXQwISvTrGn7RGFYD3CZFglV6OCklIUR0IvwMIqq_5MoqjiLooq99sCftsXwCEEWCXgMlL0mbdDBv_4Bm-YkgH3-9BDHqrBU2FQVayWtPhrQJBMBfpu5urP0mPJcOEQHc1lBTrnSdyCzTMXSUiKANbUraeNrMqAWtlxYAbVGTdPHhI-zpYNt9KCxsXJOKPjSebsPo-IDaUvJSZpZ0qR7fNWMx3pQlRpUAUMuwNROgLFSW9Eo6_28H0XMZVHE2GsPBCqSbWG1IWuOjGsZhvW8DcFG81buNjZWZtmqM1RRvFg3rMuIumZuM7CUl5Ck5gYWRs7pzT65G31yt_HpT5UWD8fF3XRcSp3mUt99lcYZuu_ZXHd9c3n_vay9bVg_baW3yrnNi5e3G-OM1_eYy9x-_4A9_xz1f-MDn7fBgA34wPcDn--I5xfe0N3buFfuN-zVO2Tyt5FporQl3fNXRRryH7-3ld_fhlVIplSFoRVWmzqz5cxBSubUvoaMWuiYzrWKm79pw3GDaxIJGdtWeRuMirZUD_gczDvBbjfY7QR73WCvE-x3g_1O8P4L8Gz5w5cAAAD__ywSqaM=

statement ok
DROP TABLE geo_table

# SRID of the geometry column is specified, so SRID specific bounds are used.
statement ok
CREATE TABLE geo_table(
  k int primary key,
  geom geometry(geometry, 26918),
  INVERTED INDEX geom_index(geom)
)

# Same shapes.
statement ok
INSERT INTO geo_table VALUES
  (1, 'SRID=26918;POINT(400001 4000001)'),
  (2, 'SRID=26918;LINESTRING(400001 4000001, 400002 4000002)'),
  (3, 'SRID=26918;POINT(400003 4000003)'),
  (4, 'SRID=26918;LINESTRING(400004 4000004, 400005 4000005)'),
  (5, 'SRID=26918;LINESTRING(400040 4000040, 400041 4000041)'),
  (6, 'SRID=26918;POLYGON((400001 4000001, 400005 4000001, 400005 4000005, 400001 4000005, 400001 4000001))')


# Same result.
query I
SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
3
6

# The InvertedFilterer stats show "rows read: 2" since all the above shapes are within the index
# bounds.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 4 (32 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 2
│ order: +k
│
└── • filter
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 2
    │ filter: st_intersects('010100002026690000000000000C6A18410000008081844E41', geom)
    │
    └── • index join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 2
        │ KV time: 0µs
        │ KV contention time: 0µs
        │ KV rows read: 2
        │ KV bytes read: 16 B
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 2
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  nodes: <hidden>
                  regions: <hidden>
                  actual row count: 2
                  KV time: 0µs
                  KV contention time: 0µs
                  KV rows read: 2
                  KV bytes read: 16 B
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzMVeFO40YQ_t-nGM0fQHWVXdukYatKKWDatIUgJ2qF6ggt9jRY2F6zu7kLQnmse4F7stPawBEQvovgpMuPjWYm32S-7xuvb9FcFyhwEv0dHUzhCo7i8THMSZ1beVEQ_PtHFEdg7HleWdKGUmu2tybx6PBXv7_HB7-cjkcn0-2QMcYCaL5YsLMlxO_R-Diaxmee61XuwDg-jGLYP4Mr9LBSGZ3IkgyK_5DjzMNaq5SMUdqlbpsfjLIlCuZhXtUL69IzD1OlCcUt2twWhAKnbsaYZEa6x9DDjKzMi6btA4WhG-A8rzJaooeTWlZGQC_B_SRZ_p8lyZIF7mBfOPCnTTE8QZBVBgEDZS9JG_Twr3_A5iUJYB8_3MWpqixVNlfVs5JW7w1okpkAv81c3Fi6T_E-7KOHpVxCSaXSNyCLQqXSUiaANbULadNLMqAWtl5YAU6jpul9wsfZysM2utPYWDknFHzlfb0Po-odaUvZUV5Y0qR7fN2M-3q0rDWoCoZcgHFOgLFSW9EoG_y8myTMKcucgJ0HAlXZpjBnyDNHxk6GoZu3Idho3srdxsbKolh3hpaULp4b1mWEq5nrAiyVNWS5uYKFkXN6A5_8TXz6U-XV3ePiv_S41Dovpb75LI039L_N5r6CdbAJ64etDNY5t3nx9HZjnHF3j_nM7_f32OPPQf83Pgh5GwzYgA_CMAr5lnh84Q39nTfdq1fIFG4i00RpS7oXros05D9-byu_uwmrmEytKkNrrF7qzFYzDymbU_saMmqhUzrVKm3-pg3HDa5JZGRsW-VtMKrakhvwMZh3gv1usN8JDrrBQSc47AaHneDdJ-DZ6odPAQAA__8816ml

# Also works when creating an index.
statement ok
DROP INDEX geo_table@geom_index

statement ok
CREATE INVERTED INDEX geom_index ON geo_table(geom)

query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 4 (32 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 2
│ order: +k
│
└── • filter
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 2
    │ filter: st_intersects('010100002026690000000000000C6A18410000008081844E41', geom)
    │
    └── • index join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 2
        │ KV time: 0µs
        │ KV contention time: 0µs
        │ KV rows read: 2
        │ KV bytes read: 16 B
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 2
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  nodes: <hidden>
                  regions: <hidden>
                  actual row count: 2
                  KV time: 0µs
                  KV contention time: 0µs
                  KV rows read: 2
                  KV bytes read: 16 B
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzMVeFO40YQ_t-nGM0fQHWVXdukYatKKWDatIUgJ2qF6ggt9jRY2F6zu7kLQnmse4F7stPawBEQvovgpMuPjWYm32S-7xuvb9FcFyhwEv0dHUzhCo7i8THMSZ1beVEQ_PtHFEdg7HleWdKGUmu2tybx6PBXv7_HB7-cjkcn0-2QMcYCaL5YsLMlxO_R-Diaxmee61XuwDg-jGLYP4Mr9LBSGZ3IkgyK_5DjzMNaq5SMUdqlbpsfjLIlCuZhXtUL69IzD1OlCcUt2twWhAKnbsaYZEa6x9DDjKzMi6btA4WhG-A8rzJaooeTWlZGQC_B_SRZ_p8lyZIF7mBfOPCnTTE8QZBVBgEDZS9JG_Twr3_A5iUJYB8_3MWpqixVNlfVs5JW7w1okpkAv81c3Fi6T_E-7KOHpVxCSaXSNyCLQqXSUiaANbULadNLMqAWtl5YAU6jpul9wsfZysM2utPYWDknFHzlfb0Po-odaUvZUV5Y0qR7fN2M-3q0rDWoCoZcgHFOgLFSW9EoG_y8myTMKcucgJ0HAlXZpjBnyDNHxk6GoZu3Idho3srdxsbKolh3hpaULp4b1mWEq5nrAiyVNWS5uYKFkXN6A5_8TXz6U-XV3ePiv_S41Dovpb75LI039L_N5r6CdbAJ64etDNY5t3nx9HZjnHF3j_nM7_f32OPPQf83Pgh5GwzYgA_CMAr5lnh84Q39nTfdq1fIFG4i00RpS7oXros05D9-byu_uwmrmEytKkNrrF7qzFYzDymbU_saMmqhUzrVKm3-pg3HDa5JZGRsW-VtMKrakhvwMZh3gv1usN8JDrrBQSc47AaHneDdJ-DZ6odPAQAA__8816ml
