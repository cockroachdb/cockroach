# LogicTest: local

# SRID of the geometry column is unspecified, so default index bounds are used.
statement ok
CREATE TABLE geo_table(
  k int primary key,
  geom geometry,
  INVERTED INDEX geom_index(geom)
)

# Shapes with SRID 26918. We've taken small X, Y values and added 400,000 to the X coordinate
# and 4,000,000 to the Y coordinate to place them inside the bounds of SRID 26918.
statement ok
INSERT INTO geo_table VALUES
  (1, 'SRID=26918;POINT(400001 4000001)'),
  (2, 'SRID=26918;LINESTRING(400001 4000001, 400002 4000002)'),
  (3, 'SRID=26918;POINT(400003 4000003)'),
  (4, 'SRID=26918;LINESTRING(400004 4000004, 400005 4000005)'),
  (5, 'SRID=26918;LINESTRING(400040 4000040, 400041 4000041)'),
  (6, 'SRID=26918;POLYGON((400001 4000001, 400005 4000001, 400005 4000005, 400001 4000005, 400001 4000001))')

query I
SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
3
6

# The InvertedFilterer stats show "rows read: 6" since all the above shapes overflow
# the default index bounds.
query T
SELECT url FROM [EXPLAIN ANALYZE SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkWGL004Qxt__P8Uwb9rC_nW3V2tvRWjvmtNAr6lpQesRjlwy1HDbbNydqKX0u0uSU6oimDdhnnnmt_vMHtF_NqhxHSyC6w3UzsBNHN3CXfBhtZiFS5gtZ4vtxwD683C9Wb9bDODJ-tgZd2TvOX0wBO_fBnEAnu-Lksl5ytj3e-s4nL8eji_V5NUqCpeb_khKKS-g_cmLQU_rN0F0G2zirWhY-wFE8TyI4WoLjwkKLG1Oy3RPHvUdKkwEVs5m5L11jXRsDWH-DbUUWJRVzY2cCMysI9RH5IINocZNc8mY0pzcc4kCc-K0MC22csU-dYfpzywocF2lpdfwPwq8KQyT079Hk0qqJsRQDsfjS3n-XY9najJSXTGREzUZjYKR6unztNPhAAVGNWuYKhTo7FcPjtJcwxgFek6NAS72pEF6FPhwYPphePlCwVWjpZx9Ig-25qoBNcG4rsyZNGxYZCjj4kvBBw3ymZR_8pOTwG7kaX-e0x2hVifx7zuOyVe29PTLev9GlqdEIOU76t7R29pltHI2a4_pyqida4WcPHdd1RVh2bVOyem_7wEAAP__rHrZbQ==

statement ok
DROP TABLE geo_table

# SRID of the geometry column is specified, so SRID specific bounds are used.
statement ok
CREATE TABLE geo_table(
  k int primary key,
  geom geometry(geometry, 26918),
  INVERTED INDEX geom_index(geom)
)

# Same shapes.
statement ok
INSERT INTO geo_table VALUES
  (1, 'SRID=26918;POINT(400001 4000001)'),
  (2, 'SRID=26918;LINESTRING(400001 4000001, 400002 4000002)'),
  (3, 'SRID=26918;POINT(400003 4000003)'),
  (4, 'SRID=26918;LINESTRING(400004 4000004, 400005 4000005)'),
  (5, 'SRID=26918;LINESTRING(400040 4000040, 400041 4000041)'),
  (6, 'SRID=26918;POLYGON((400001 4000001, 400005 4000001, 400005 4000005, 400001 4000005, 400001 4000001))')


# Same result.
query I
SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k
----
3
6

# The InvertedFilterer stats show "rows read: 2" since all the above shapes are within the index
# bounds.
query T
SELECT url FROM [EXPLAIN ANALYZE SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkWGL004Qxt__P8Uwb9rC_nW3V2tvRWjvmtNAr6lpQesRjlwy1HDbbNydqKX0u0uSU6oimDdhnnnmt_vMHtF_NqhxHSyC6w3UzsBNHN3CXfBhtZiFS5gtZ4vtxwD683C9Wb9bDODJ-tgZd2TvOX0wBO_fBnEAnu-Lksl5ytj3e-s4nL8eji_V5NUqCpeb_khKKS-g_cmLQU_rN0F0G2zirWhY-wFE8TyI4WoLjwkKLG1Oy3RPHvUdKkwEVs5m5L11jXRsDWH-DbUUWJRVzY2cCMysI9RH5IINocZNc8mY0pzcc4kCc-K0MC22csU-dYfpzywocF2lpdfwPwq8KQyT079Hk0qqJsRQDsfjS3n-XY9najJSXTGREzUZjYKR6unztNPhAAVGNWuYKhTo7FcPjtJcwxgFek6NAS72pEF6FPhwYPphePlCwVWjpZx9Ig-25qoBNcG4rsyZNGxYZCjj4kvBBw3ymZR_8pOTwG7kaX-e0x2hVifx7zuOyVe29PTLev9GlqdEIOU76t7R29pltHI2a4_pyqida4WcPHdd1RVh2bVOyem_7wEAAP__rHrZbQ==

# Also works when creating an index.
statement ok
DROP INDEX geo_table@geom_index

statement ok
CREATE INVERTED INDEX geom_index ON geo_table(geom)

query T
SELECT url FROM [EXPLAIN ANALYZE SELECT k FROM geo_table WHERE ST_Intersects('SRID=26918;POINT(400003 4000003)'::geometry, geom) ORDER BY k]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkWGL004Qxt__P8Uwb9rC_nW3V2tvRWjvmtNAr6lpQesRjlwy1HDbbNydqKX0u0uSU6oimDdhnnnmt_vMHtF_NqhxHSyC6w3UzsBNHN3CXfBhtZiFS5gtZ4vtxwD683C9Wb9bDODJ-tgZd2TvOX0wBO_fBnEAnu-Lksl5ytj3e-s4nL8eji_V5NUqCpeb_khKKS-g_cmLQU_rN0F0G2zirWhY-wFE8TyI4WoLjwkKLG1Oy3RPHvUdKkwEVs5m5L11jXRsDWH-DbUUWJRVzY2cCMysI9RH5IINocZNc8mY0pzcc4kCc-K0MC22csU-dYfpzywocF2lpdfwPwq8KQyT079Hk0qqJsRQDsfjS3n-XY9najJSXTGREzUZjYKR6unztNPhAAVGNWuYKhTo7FcPjtJcwxgFek6NAS72pEF6FPhwYPphePlCwVWjpZx9Ig-25qoBNcG4rsyZNGxYZCjj4kvBBw3ymZR_8pOTwG7kaX-e0x2hVifx7zuOyVe29PTLev9GlqdEIOU76t7R29pltHI2a4_pyqida4WcPHdd1RVh2bVOyem_7wEAAP__rHrZbQ==
