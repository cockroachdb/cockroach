# LogicTest: 5node-distsql

# The following tables form the interleaved hierarchy:
#   name:             primary key:                # rows:   'a' = id mod X :
#   parent1           (pid1)                      40        8
#     child1          (pid1, cid1)                150       66
#       grandchild1   (pid1, cid1, gcid1)         410       201
#     child2          (pid1, cid2, cid3)          15        7
#       grandchild2   (pid1, cid2, cid3, gcid2)   51        13
#   parent2           (pid2)                      5         2
# Additional rows in child1, child2, and grandchild1 with no corresponding
# parent row are also inserted.
#
# All IDs belonging to a table (pid1 --> parent1, cid1 --> child1, cid2,cid3
# --> child2, etc.) start from 1 up to (# rows).
# Foreign keys are modded by their ancestor's (# rows). For example, for child1
# row with cid1=500, we take ((cid1-1) % 200 + 1) = 100 as pid1.
# One exception is cid3, which is taken as cid2 % 15.
# There's a column 'a' that's modded by a factor.
#
# This allows us to test the following edge cases (in order of tests):
#   - one-to-many (parent1 - child1)
#   - one-to-one and one-to-none (parent1 - child2)
#   - parent-grandchild (parent1 - grandchild1)
#   - multiple interleaved columns (child2 - grandchild2)
#   - additional ancestor above (child2 - grandchild2)
#   - no interleaved relationship (parent1 - parent2, parent2 - child1)
#   - TODO(richardwu): sibling-sibling (child1 - child2)

#################
# Create tables #
#################

statement ok
CREATE TABLE parent1 (pid1 INT PRIMARY KEY, pa1 INT)

statement ok
CREATE TABLE parent2 (pid2 INT PRIMARY KEY, pa2 INT)

statement ok
CREATE TABLE child1 (
  pid1 INT,
  cid1 INT,
  ca1 INT,
  PRIMARY KEY(pid1, cid1)
)
INTERLEAVE IN PARENT parent1 (pid1)

statement ok
CREATE TABLE child2 (
  pid1 INT,
  cid2 INT,
  cid3 INT,
  ca2 INT,
  PRIMARY KEY(pid1, cid2, cid3)
)
INTERLEAVE IN PARENT parent1 (pid1)

statement ok
CREATE TABLE grandchild1 (
  pid1 INT,
  cid1 INT,
  gcid1 INT,
  gca1 INT,
  PRIMARY KEY(pid1, cid1, gcid1)
)
INTERLEAVE IN PARENT child1 (pid1, cid1)

# No foreign key since we are permitting the rows to overflow out of child2
# for pid1 > 15.
statement ok
CREATE TABLE grandchild2 (
  pid1 INT,
  cid2 INT,
  cid3 INT,
  gcid2 INT,
  gca2 INT,
  PRIMARY KEY(pid1, cid2, cid3, gcid2)
)
INTERLEAVE IN PARENT child2 (pid1, cid2, cid3)

####################
# Insert some rows #
####################

statement ok
INSERT INTO parent1 SELECT
  pid,
  mod(pid, 8)
FROM
  GENERATE_SERIES(1, 40) AS ID(pid)

statement ok
INSERT INTO parent2 SELECT
  pid,
  mod(pid, 2)
FROM
  GENERATE_SERIES(1, 5) AS ID(pid)

# child1 has more rows than parent1.
statement ok
INSERT INTO child1 SELECT
  mod(cid-1, 40) + 1,
  cid,
  mod(cid, 66)
FROM
  GENERATE_SERIES(1, 150) AS ID(cid)

# Insert additional rows with no correspond parent rows to check for correctness.
statement ok
INSERT INTO child1 VALUES
  (-1, -1, -1),
  (0, 0, 0),
  (41, 41, 41),
  (151, 151, 19),
  (160, 160, 28)

# child2 has fewer rows than parent1.
statement ok
INSERT INTO child2 SELECT
  mod(cid-1, 40) + 1,
  cid,
  mod(cid, 14),
  mod(cid, 7)
FROM
  GENERATE_SERIES(1, 15) AS ID(cid)

statement ok
INSERT INTO child2 VALUES
  (-1, -1, -1, -1),
  (0, 0, 0, 0),
  (16, 16, 2, 2),
  (20, 20, 6, 6)

statement ok
INSERT INTO grandchild1 SELECT
  mod(mod(gcid-1, 150), 40) + 1,
  mod(gcid-1, 150) + 1,
  gcid,
  mod(gcid, 201)
FROM
  GENERATE_SERIES(1, 410) AS ID(gcid)

statement ok
INSERT INTO grandchild1 VALUES
  (-1, -1, -1, -1),
  (0, 0, 0, 0),
  (200, 200, 200, 200),
  (411, 411, 411, 9)


# We let grandchild2.pid1 exceed child2.pid1 (one of the interleaved keys).
# So instead of
#     (gcid1 - 1) % 15 % 40 + 1
# we choose to only mod by 40 (nrows of parent1) instead of first modding
# by 15 (nrows of child2).
statement ok
INSERT INTO grandchild2 SELECT
  mod(gcid-1, 40) + 1,
  mod(gcid-1, 15) + 1,
  mod(mod(gcid-1, 15) + 1, 14),
  gcid,
  mod(gcid, 13)
FROM
  GENERATE_SERIES(1, 51) AS ID(gcid)

####################
# Split our ranges #
####################

# Split at parent1 key into five parts.
statement ok
ALTER TABLE parent1 SPLIT AT SELECT i FROM GENERATE_SERIES(8, 32, 8) AS g(i)

# Split at child1 keys in between parent1 parts (total 10 parts).
statement ok
ALTER TABLE child1 SPLIT AT SELECT pid1, pid1 + 40 FROM
GENERATE_SERIES(4, 36, 8) AS g(pid1)

# Split at grandchild2 keys in between the 10 parts (total 20 parts).
statement ok
ALTER TABLE grandchild2 SPLIT AT SELECT pid1, pid1 + 40, pid1, pid1 FROM
GENERATE_SERIES(2, 38, 4) AS g(pid1)

# Relocate the twenty parts to the five nodes.
statement ok
ALTER TABLE grandchild2 TESTING_RELOCATE
  SELECT ARRAY[((i-1)/2)::INT%5+1], i, i+20, i, i FROM GENERATE_SERIES(1, 39, 2) AS g(i)

# Verify data placement.
query TTITI colnames
SHOW TESTING_RANGES FROM TABLE parent1
----
Start Key                   End Key                     Range ID  Replicas  Lease Holder
NULL                        /2/#/54/1/42/2/#/56/1/2     1         {1}       1
/2/#/54/1/42/2/#/56/1/2     /4/#/53/1/44                11        {2}       2
/4/#/53/1/44                /6/#/54/1/46/6/#/56/1/6     6         {3}       3
/6/#/54/1/46/6/#/56/1/6     /8                          12        {4}       4
/8                          /10/#/54/1/50/10/#/56/1/10  2         {5}       5
/10/#/54/1/50/10/#/56/1/10  /12/#/53/1/52               13        {1}       1
/12/#/53/1/52               /14/#/54/1/54/14/#/56/1/14  7         {2}       2
/14/#/54/1/54/14/#/56/1/14  /16                         14        {3}       3
/16                         /18/#/54/1/58/18/#/56/1/18  3         {4}       4
/18/#/54/1/58/18/#/56/1/18  /20/#/53/1/60               15        {5}       5
/20/#/53/1/60               /22/#/54/1/62/22/#/56/1/22  8         {1}       1
/22/#/54/1/62/22/#/56/1/22  /24                         16        {2}       2
/24                         /26/#/54/1/66/26/#/56/1/26  4         {3}       3
/26/#/54/1/66/26/#/56/1/26  /28/#/53/1/68               17        {4}       4
/28/#/53/1/68               /30/#/54/1/70/30/#/56/1/30  9         {5}       5
/30/#/54/1/70/30/#/56/1/30  /32                         18        {1}       1
/32                         /34/#/54/1/74/34/#/56/1/34  5         {2}       2
/34/#/54/1/74/34/#/56/1/34  /36/#/53/1/76               19        {3}       3
/36/#/53/1/76               /38/#/54/1/78/38/#/56/1/38  10        {4}       4
/38/#/54/1/78/38/#/56/1/38  NULL                        20        {5}       5

query TTITI colnames
SHOW TESTING_RANGES FROM TABLE child1
----
Start Key                   End Key                     Range ID  Replicas  Lease Holder
NULL                        /2/#/54/1/42/2/#/56/1/2     1         {1}       1
/2/#/54/1/42/2/#/56/1/2     /4/#/53/1/44                11        {2}       2
/4/#/53/1/44                /6/#/54/1/46/6/#/56/1/6     6         {3}       3
/6/#/54/1/46/6/#/56/1/6     /8                          12        {4}       4
/8                          /10/#/54/1/50/10/#/56/1/10  2         {5}       5
/10/#/54/1/50/10/#/56/1/10  /12/#/53/1/52               13        {1}       1
/12/#/53/1/52               /14/#/54/1/54/14/#/56/1/14  7         {2}       2
/14/#/54/1/54/14/#/56/1/14  /16                         14        {3}       3
/16                         /18/#/54/1/58/18/#/56/1/18  3         {4}       4
/18/#/54/1/58/18/#/56/1/18  /20/#/53/1/60               15        {5}       5
/20/#/53/1/60               /22/#/54/1/62/22/#/56/1/22  8         {1}       1
/22/#/54/1/62/22/#/56/1/22  /24                         16        {2}       2
/24                         /26/#/54/1/66/26/#/56/1/26  4         {3}       3
/26/#/54/1/66/26/#/56/1/26  /28/#/53/1/68               17        {4}       4
/28/#/53/1/68               /30/#/54/1/70/30/#/56/1/30  9         {5}       5
/30/#/54/1/70/30/#/56/1/30  /32                         18        {1}       1
/32                         /34/#/54/1/74/34/#/56/1/34  5         {2}       2
/34/#/54/1/74/34/#/56/1/34  /36/#/53/1/76               19        {3}       3
/36/#/53/1/76               /38/#/54/1/78/38/#/56/1/38  10        {4}       4
/38/#/54/1/78/38/#/56/1/38  NULL                        20        {5}       5

query TTITI colnames
SHOW TESTING_RANGES FROM TABLE grandchild1
----
Start Key                   End Key                     Range ID  Replicas  Lease Holder
NULL                        /2/#/54/1/42/2/#/56/1/2     1         {1}       1
/2/#/54/1/42/2/#/56/1/2     /4/#/53/1/44                11        {2}       2
/4/#/53/1/44                /6/#/54/1/46/6/#/56/1/6     6         {3}       3
/6/#/54/1/46/6/#/56/1/6     /8                          12        {4}       4
/8                          /10/#/54/1/50/10/#/56/1/10  2         {5}       5
/10/#/54/1/50/10/#/56/1/10  /12/#/53/1/52               13        {1}       1
/12/#/53/1/52               /14/#/54/1/54/14/#/56/1/14  7         {2}       2
/14/#/54/1/54/14/#/56/1/14  /16                         14        {3}       3
/16                         /18/#/54/1/58/18/#/56/1/18  3         {4}       4
/18/#/54/1/58/18/#/56/1/18  /20/#/53/1/60               15        {5}       5
/20/#/53/1/60               /22/#/54/1/62/22/#/56/1/22  8         {1}       1
/22/#/54/1/62/22/#/56/1/22  /24                         16        {2}       2
/24                         /26/#/54/1/66/26/#/56/1/26  4         {3}       3
/26/#/54/1/66/26/#/56/1/26  /28/#/53/1/68               17        {4}       4
/28/#/53/1/68               /30/#/54/1/70/30/#/56/1/30  9         {5}       5
/30/#/54/1/70/30/#/56/1/30  /32                         18        {1}       1
/32                         /34/#/54/1/74/34/#/56/1/34  5         {2}       2
/34/#/54/1/74/34/#/56/1/34  /36/#/53/1/76               19        {3}       3
/36/#/53/1/76               /38/#/54/1/78/38/#/56/1/38  10        {4}       4
/38/#/54/1/78/38/#/56/1/38  NULL                        20        {5}       5

statement ok
SET CLUSTER SETTING sql.distsql.interleaved_joins.enabled = true;

#####################
# Interleaved joins #
#####################

# Select over two ranges for parent/child with split at children key.
# Returns:
#   pid1    pa1         cid1      ca1
#           (pid1 % 8)           (cid1 % 66)
query IIII rowsort,colnames
SELECT * FROM parent1 JOIN child1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5
----
pid1  pa1  cid1  ca1
3     3    3     3
3     3    43    43
3     3    83    17
3     3    123   57
4     4    4     4
4     4    44    44
4     4    84    18
4     4    124   58
5     5    5     5
5     5    45    45
5     5    85    19
5     5    125   59

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzkks9K9DAUxfffUwxn9YlXaDq6KQjduKhIR7qVLkJzZybQSUqSiiLz7pLGP51BB127a3LO756ecF9grOJa7tijeIAAIQdhiZYwONux99ZFKRkr9YQiI2gzjCFdBx16RoHRWKfYsQJBcZC6j3q7bwmddYzi01rbCzsc2Qh2DG9DW4IPcsMo8j3NgsUs-IuxlQnsepaP3LBU7G6tNuwOcnDH64BYTe-key4H6diE2DoKi9UYikUpqIxv0OjNdu7ttrpX4l2YealcgvCRVtX1TQNCz-vwvxTnZ9cuAtMnCHPuksorfNddHHTP_3D37HT3hv1gjecfbVQWF5LVhtP2eju6ju-d7aaYdFxN3HSh2IekLtOhMkmKPziHxUk4O4DFMZz_Cm73_14DAAD__5HcMEU=

# Swap parent1 and child1 tables.

query IIII rowsort,colnames
SELECT * FROM child1 JOIN parent1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5
----
pid1  cid1  ca1  pa1
3     3     3    3
3     43    43   3
3     83    17   3
3     123   57   3
4     4     4    4
4     44    44   4
4     84    18   4
4     124   58   4
5     5     5    5
5     45    45   5
5     85    19   5
5     125   59   5

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM child1 JOIN parent1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzkUk1r6zAQvL9fEeb0Hm8LlkMvhoIvPbgUp_hafBDWJhE4kpHk0lLy34usftihDe25N-3OzI4G5hnGKq7lgT2KewgQchDWaAmDsx17b12EErFSjygygjbDGNI66NAzCozGOsWOFQiKg9R9xNtjS-isYxQf1Npe2OGERrBjeD3aEnyQO0aRH2lmLGbGn5ytTGDXs3zghqVid2O1YbfwwS1vA2I0fZDuqez2ulcxdNyvNmMoVqWgMqdyDUKjd_s5e5COTRBvyIwPwrtbVdfXDQg9b8PfUvz_d-Uie3qCsDCh8hJfZReL7Pkvzp6dz96wH6zx_K1GZbGQrHac2uvt6Dq-c7abbNK4mXTTQrEPCV2noTIJih-ci8VZcbYQi1Nx_iNxe_zzEgAA__9fJjBD

# Select over two ranges for parent/child with split at grandchild key.
# Also, rows with pid1 <= 30 should have 4 rows whereas pid1 > 30 should
# have 3 rows.
# Returns:
#   parent1.pid1 pa1          child1.pid1     cid1        ca1
#                (pid1 % 8)                             (cid1 % 66)
query IIIII colnames
SELECT * FROM parent1 JOIN child1 ON parent1.pid1 = child1.pid1 WHERE parent1.pid1 >= 29 AND parent1.pid1 <= 31 ORDER BY parent1.pid1
----
pid1 pa1 pid1 cid1 ca1
29    5    29    29    29
29    5    29    69    3
29    5    29    109   43
29    5    29    149   17
30    6    30    30    30
30    6    30    70    4
30    6    30    110   44
30    6    30    150   18
31    7    31    31    31
31    7    31    71    5
31    7    31    111   45

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 ON parent1.pid1 = child1.pid1 WHERE parent1.pid1 >= 29 AND parent1.pid1 <= 31 ORDER BY parent1.pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzskUFr6zAQhO_vV4Q5vUf2QZQ0F0NBlx5cilN8LT4Ya5MIHMlIcmkJ_u9FMm3i0oT23pu1M8Pn2T3CWMVFfWCP7AkChDUqQudsw95bF8ejKVcvyBYEbbo-xHFFaKxjZEcEHVpGhtwEdi3Xz1xyrdjdW23YgaA41LpNjAfeBkSCPtTuVXa1YxMiOAqzTR-ymRQklyCUerc_9zZ73SrxLpx5Sa5A-KDlRXFXgtDyNvyVYv7v1sVA-gRhkiN5Q3KNaiDYPpyq-VDvGJkY6EL9U2vrFDtW05pSzFENX-yosP9tN_FeYi8nbPG7-iv1S_adNZ6_tdhFvAurHY939LZ3DT862yTM-NykXBoo9mFUxfjITZLSD56HxdXwahJefA4vf0Suhj9vAQAA__9KqzDg

# parent-child where pid1 <= 15 have one joined row and pid1 > 15 have no
# joined rows (since child2 only has 15 rows up to pid1 = 15).
# Returns:
#   pid1    pa1           cid2      cid3              ca2
#           (pid1 % 8)              (cid2 % 14)       (cid2 % 7)
query IIIII rowsort,colnames
SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 >= 12
----
pid1 pa1 cid2 cid3 ca2
12  4  12  12  5
13  5  13  13  6
14  6  14  0   0
15  7  15  1   1
16  0  16  2   2
20  4  20  6   6

# Note this spans all 5 nodes, which makes sense since we want to read all
# parent rows even if child rows are non-existent (so we can support OUTER
# joins).
# TODO(richardwu): we can remove nodes reading from just one table for INNER
# joins or LEFT/RIGHT joins.
query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 >= 12 ORDER BY pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzklD-L20AQxft8CvOqBE_AK8kuBIFtUigEOagNKoR2bAtkrdhdhRxG3_1YCWzpON8fXKrbnZkfb-YV74JGK06LM1vEfyFACEAIQYhA2CIntEaXbK02fmQEEvUf8YZQNW3nfDknlNow4gtc5WpGjKRxbGou_nHGhWLzS1cNGxAUu6KqB73ffHDwCtW5ME-yLQw3zi_hG6t95-KVFCT9Sll1PE1ny1NVq2tjMksyJOmXvwomafozA6Hmg_sqxfrbD-OZ4QnCFI1IbknukPcE3bnbddYVR0YserrjwO1wbRQbVvNLpVgj71-xKdXfdTubvacdzLTF4t0PFu9AuHgHosU78E4KZ2xb3Vj-UMJsfECxOvIYaFZ3puQ_RpeDzPjdD9xQUGzd2BXjJ2mG1rDgFBZvwrsZvHkJB48oh4_A0SPw9lNw3n95DgAA__-WtF-Z

# Single gateway node query (node 1).
# Returns:
#   pid1    pa1           cid2      cid3              ca2
#           (pid1 % 8)              (cid2 % 14)       (cid2 % 7)
# Note pid=21, 31 has no joined rows since child2 only has pid1 <= 15.
query IIIII rowsort,colnames
SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 IN (1, 11, 21, 31)
----
pid1  pa1  cid2  cid3  ca2
1     1    1     1     1
11    3    11    11    4

# These rows are all on the same node 1 (gateway).
query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 IN (1, 11, 21, 31) ORDER BY pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJyMUE1Lw0AQvfsryjspzqHR6mFB2IuHiLSSq-SwZKftQrobdieilPx3yS7UeBC8zbyPecw7wwfLW3PiBPWOCi1hiKHjlEKcoSKo7SfUmuD8MMoMt4QuRIY6Q5z0DIXaC8eezQc3bCzHl-A8RxAsi3F9vv_Ke8Gc4E4mfunBRPZSgTKx2o2iVroifQdC4w7HpbY7ut5eiIWW9D3pDQiXwHq7fW5A6Hkv17q6vXmKsyePICytG9IPpB_RToQwys93ScyBoaqJ_t9Aw2kIPvGvn_-6vJ5aAtsDl5ZTGGPHbzF0Oaasu-zLgOUkha3KUvtCTe109R0AAP__qU-QtQ==

# Parent-grandchild.
# Returns:
#   pid1    pa2           cid2    cid3          gcid2       gca2
#           (pid1 % 8)            (cid2 % 14)               (gcid2 % 13)
# Where clause is on ranges that overlap children, grandchildren, and parent
# key splits, respectively.
# Rows with pid >= 11 have only one joined row since there are only 51
# granchild2 rows.
query IIIIII rowsort,colnames
SELECT * FROM parent1 JOIN grandchild2 USING(pid1) WHERE
  pid1 >= 11 AND pid1 <= 13
  OR pid1 >= 19 AND pid1 <= 21
  OR pid1 >= 31 AND pid1 <= 33
----
pid1  pa1  cid2  cid3  gcid2  gca2
11    3    6     6     51     12
11    3    11    11    11     11
12    4    12    12    12     12
13    5    13    13    13     0
19    3    4     4     19     6
20    4    5     5     20     7
21    5    6     6     21     8
31    7    1     1     31     5
32    0    2     2     32     6
33    1    3     3     33     7

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL)
  SELECT * FROM parent1 JOIN grandchild2 USING(pid1) WHERE
    pid1 >= 11 AND pid1 <= 13
    OR pid1 >= 19 AND pid1 <= 21
    OR pid1 >= 31 AND pid1 <= 33
]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzslV-L1DAUxd_9FOE-zeAVmnZXMTAQQYWKdKT4pn0Izd1uoJuUJBVl6XeXtM5OZ1n_Ifiy89bk3B_ntudyewvWaarUDQUQn4ADQg4Il9AgDN61FILzSVoKS_0VRIZg7DDGdN0gtM4TiFuIJvYEAkobyfekvlBNSpN_54wlDwiaojL97POeriIkB3Oj_Dc5KE82JvMksLemj-QF22wkZ5_HLCvaHeOFEKKsPm7Zvl4ptGP85UF5Vb1maybnP5TtQq2g4iAdTPdjFExylOn9a9NdrxvsvLK6vTa9vlP_e5eL67FNlAXKC5SXgHD3jcuqelMDQk9XcSP50-3OJ2x-BIQ1nVCUz1G-gGZCcGM8Zhqi6ggEn_AnuR_jHq3zmjzpk4Sb6YHJqNwzN9wre9g4PzHm54F7lAOXn3N_lLn_5gdTUxicDfRHmyRLi4h0R8vWCm70LX3wrp1tluN-5uYLTSEuKl8OpZ2lucE1zH8JX5zA2X04_xfn4q_gZnryPQAA__8Qm0xg

query TTT
EXPLAIN SELECT * FROM parent1 JOIN grandchild2 USING(pid1) WHERE
  pid1 >= 11 AND pid1 <= 13
  OR pid1 >= 19 AND pid1 <= 21
  OR pid1 >= 31 AND pid1 <= 33
----
render          ·               ·
 └── join       ·               ·
      │         type            inner
      │         equality        (pid1) = (pid1)
      │         mergeJoinOrder  +"(pid1=pid1)"
      ├── scan  ·               ·
      │         table           parent1@primary
      │         spans           /11-/13/# /19-/21/# /31-/33/#
      └── scan  ·               ·
·               table           grandchild2@primary
·               spans           /11/#/54/1-/13/#/54/2 /19/#/54/1-/21/#/54/2 /31/#/54/1-/33/#/54/2

# Swap parent1 and grandchild2 positions.
query IIIIII rowsort,colnames
SELECT * FROM grandchild2 JOIN parent1 USING(pid1) WHERE
  pid1 >= 11 AND pid1 <= 13
  OR pid1 >= 19 AND pid1 <= 21
  OR pid1 >= 31 AND pid1 <= 33
----
pid1  cid2  cid3  gcid2  gca2 pa1
11    6     6     51     12   3
11    11    11    11     11   3
12    12    12    12     12   4
13    13    13    13     0    5
19    4     4     19     6    3
20    5     5     20     7    4
21    6     6     21     8    5
31    1     1     31     5    7
32    2     2     32     6    0
33    3     3     33     7    1

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL)
  SELECT * FROM grandchild2 JOIN parent1 USING(pid1) WHERE
    pid1 >= 11 AND pid1 <= 13
    OR pid1 >= 19 AND pid1 <= 21
    OR pid1 >= 31 AND pid1 <= 33
]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzslV-r1DAQxd_9FGGednGEpr0XMbAQQYWKdKX4pn0IzdzeQG9SklSUS7-7tLVud1n_Ifiy-9bkzOE37Rmmj2CdpkI9UADxETggpIBwCxVC511NITg_SnNhrr-ASBCM7fo4XlcItfME4hGiiS2BgNxG8i2pz1SS0uTfOmPJA4KmqEw7cd7RXYSRYB6U_yobr6yu702rR_gosjemjeQF22wkZ5_6JMnqHeOZECIvPmzZvlwptGP8xaK8LF6xtSfl35Xt7FqZskVaoPs-CiY5yhRlhvIG5S0glKa5X3fbKU828kX5763O1EOvgPDjG-dF8boEhJbu4kbyp9udH6unR0A484Ion0M1ILg-HjINUTUEgg_4k9wPcffWeU2e9FHC1XBmMgr3zHUnZefB6RGYXwfuIgcuveZ-kbn_5gdTUuicDfRHmyQZFxHphuatFVzva3rvXT1h5uN-8k0XmkKcVT4fcjtJU4NrM_-l-ebInJya038hZ39lroYn3wIAAP__6FdMVw==

query TTT
EXPLAIN SELECT * FROM grandchild2 JOIN parent1 USING(pid1) WHERE
  pid1 >= 11 AND pid1 <= 13
  OR pid1 >= 19 AND pid1 <= 21
  OR pid1 >= 31 AND pid1 <= 33
----
render          ·               ·
 └── join       ·               ·
      │         type            inner
      │         equality        (pid1) = (pid1)
      │         mergeJoinOrder  +"(pid1=pid1)"
      ├── scan  ·               ·
      │         table           grandchild2@primary
      │         spans           /11/#/54/1-/13/#/54/2 /19/#/54/1-/21/#/54/2 /31/#/54/1-/33/#/54/2
      └── scan  ·               ·
·               table           parent1@primary
·               spans           /11-/13/# /19-/21/# /31-/33/#

# Join on multiple interleaved columns with an overarching ancestor (parent1).
# Returns:
#   child2.pid1   gc2.pid1        child2.cid2   gc2.cid2  child2.cid3   gc2.cid3      child2.ca2        gcid2         gca2
#                 (gcid2 % 40)                            (cid2 % 14)                                                 (gcid2 % 13)
query IIIIIIIII colnames,rowsort
SELECT * FROM child2 JOIN grandchild2 ON
  child2.pid1=grandchild2.pid1
  AND child2.cid2=grandchild2.cid2
  AND child2.cid3=grandchild2.cid3
WHERE
  child2.pid1 >= 5 AND child2.pid1 <= 7
  OR child2.cid2 >= 12 AND child2.cid2 <= 14
  OR gcid2 >= 49 AND gcid2 <= 51
----
pid1  cid2  cid3  ca2  pid1  cid2  cid3  gcid2  gca2
5     5     5     5    5     5     5     5      5
6     6     6     6    6     6     6     6      6
7     7     7     0    7     7     7     7      7
12    12    12    5    12    12    12    12     12
13    13    13    6    13    13    13    13     0
14    14    0     0    14    14    0     14     1

# Note there are 5 nodes because the filter cid2 >= 12 AND cid2 <= 14
# creates a giant parent span which requires reading from all rows.
query T
SELECT "URL" FROM [EXPLAIN (DISTSQL)
  SELECT * FROM child2 JOIN grandchild2 ON
    child2.pid1=grandchild2.pid1
    AND child2.cid2=grandchild2.cid2
    AND child2.cid3=grandchild2.cid3
  WHERE
    child2.pid1 >= 5 AND child2.pid1 <= 7
    OR child2.cid2 >= 12 AND child2.cid2 <= 14
    OR gcid2 >= 49 AND gcid2 <= 51
]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzsls-K2zAQh-99CjEnh0zBku3driCgQltwKU4xvbU-GGs2a_BaQZZLy5J3L7YbbRzSP0tuIUfN6Mtv4k8gPUFrNGXlI3UgvwIHBAEIESDEgJBAgbC1pqKuM3bYMgGp_gEyRKjbbe-GcoFQGUsgn8DVriGQkLaObEPld8qp1GQ_mrolCwiaXFk3Y94nuncwJNSPpf2pqoe60UP-UGfr3kmmOCqBKkI1zJPXm4dDYGPLVntq7LIPdePIShYEgeLsWx-GEa1YIqVMsy8L9jZ7x3yjWrHb340FW-csCJTwCBdzRniGx3toT8Weiu_mVOyphO8pP-vxX0SVAIL_UmmWvc8BoaF7Fyi-RCWWqKLlYmUHfFYChBO_huoG1S2qN6juoNghmN49K-tcuSGQfId_0Ppss2-N1WRJzwQWuxPiM_PabI-2nQ4Ws2B-PU-XeJ7EVeslao2uWi9Ra3zVeola__FWy6nbmraj_7q1w-HSJ72h6YXQmd5W9NmaaoyZluuRGwuaOjd1-bRI27E1DngI87_CNzM4PIbFOcnROXB8Dpy8CC52r34FAAD__1FcW-8=

query TTT
EXPLAIN
  SELECT * FROM child2 JOIN grandchild2 ON
    child2.pid1=grandchild2.pid1
    AND child2.cid2=grandchild2.cid2
    AND child2.cid3=grandchild2.cid3
  WHERE
    child2.pid1 >= 5 AND child2.pid1 <= 7
    OR child2.cid2 >= 12 AND child2.cid2 <= 14
    OR gcid2 >= 49 AND gcid2 <= 51
----
join       ·               ·
 │         type            inner
 │         equality        (pid1, cid2, cid3) = (pid1, cid2, cid3)
 │         mergeJoinOrder  +"(pid1=pid1)",+"(cid2=cid2)",+"(cid3=cid3)"
 ├── scan  ·               ·
 │         table           child2@primary
 │         spans           ALL
 └── scan  ·               ·
·          table           grandchild2@primary
·          spans           ALL

# Aggregation over parent and child keys.
# There are 4 rows for each 10 <= pid1 <= 30 and 3 rows for each 30 < pid1 <=
# 39.
# We thus have 3 arithmetic series of 10 + ... + 39 and 1 arithmetic series
# of 10 + ... + 30 or
#     SUM(pid1) = 3 * (39 - 10 + 1) * (10 + 39)/2 + (30 - 10 + 1) * (10 + 30)/2 = 2625
# For SUM(cid1), we notice that pid1 = cid1 % 40, thus for every additional
# round of rows under a pid1, cid1 is increased by 40.
# For each additional round up to the 3rd (2 rounds after the first where 50 <= cid1 <= 79,
# 90 <= cid1 <= 119) , we have an additional
#     40 * (1 + 2) * (39 - 10 + 1) = 3600
# For the 4th round, we have 150 - 130 + 1 = 21 rows (130 <= cid1 <= 150) each
# additional row adds 120, thus
#     SUM(cid1) = SUM(pid1) + 3600 + 21 * 120 = 8745
# For each
query RR
SELECT SUM(parent1.pid1), SUM(child1.cid1) FROM parent1 JOIN child1 USING(pid1) WHERE
  pid1 >= 10 AND pid1 <= 39
----
2625 8745

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL)
  SELECT SUM(parent1.pid1), SUM(child1.cid1) FROM parent1 JOIN child1 USING(pid1) WHERE
    pid1 >= 10 AND pid1 <= 39
]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzklc-K2zAQxu99ijCnhOoQ2U6aGgruoQeXNikuPRUfhDVxDI5kJLl0CX73RTabPyaRF5KcfLM08_k334xgDiAkxzXbo4bwL1Ag4AEBHwgEQGABKYFKyQy1lsqmdIKY_4dwTqAQVW3sdUogkwohPIApTIkQQiwMqhLZP0yQcVTfZSFQAQGOhhVly_uBWwOWUOyZeokqplAYW4QNTDa1CSeRPSZFvjtPzHZFyY-Bt0QS2dqPnHi9_pYAgRK3ZhrRj7Mvyma3n0DgKPIhbQjI2py8aMNyhJA25P1-v-a5wpwZ2fP4-8_PaUQtsf3yZjdx3k3ciVILqTgq5BeQtHlKQf5FQXRk8x7w--h5eyNr74DfR7fXH1l7B_w-ur3ByNo74PeZy-AKLkFdSaGxtxSu_3lulwXyHLvNomWtMvylZNZiuuOm1bUXHLXporQ7xKIL2QLPxdQp9i7EtC_23OQBtO9UB25xcE_dC6d46SYv7yF_copXbvLqHvJn96zmA8_E_cj67LT58BoAAP__4W1o9w==

###############
# Outer joins #
###############

# The schema/values for each table are as follows:
# Table:        pkey:                     pkey values (same):   values:
# outer_p1      (pid1)                    {1, 2, 3, ... 20}     100 + pkey
# outer_c1      (pid1, cid1, cid2)        {2, 4, 6, ... 28}     200 + pkey
# outer_gc1     (pid1, cid1, cid2, gcid1) {4, 8, 12, ... 36}    300 + pkey

# Split between 4 nodes based on pkey value (p):
# node 1:       p - 1 mod 20 ∈ [1...5)
# node 2:       p - 1 mod 20 ∈ [5...10)
# node 3:       p - 1 mod 20 ∈ [10...15)
# node 4:       p - 1 mod 20 ∈ [15...20)

statement ok
CREATE TABLE outer_p1 (
  pid1 INT PRIMARY KEY,
  pa1 INT
)

statement ok
CREATE TABLE outer_c1 (
  pid1 INT,
  cid1 INT,
  cid2 INT,
  ca1 INT,
  PRIMARY KEY (pid1, cid1, cid2)
) INTERLEAVE IN PARENT outer_p1 (pid1)

statement ok
CREATE TABLE outer_gc1 (
  pid1 INT,
  cid1 INT,
  cid2 INT,
  gcid1 INT,
  gca1 INT,
  PRIMARY KEY (pid1, cid1, cid2, gcid1)
) INTERLEAVE IN PARENT outer_c1 (pid1, cid1, cid2)

statement ok
INSERT INTO outer_p1
  SELECT i, i+100 FROM generate_series(1, 20) AS g(i)

statement ok
INSERT INTO outer_c1
  SELECT i, i, i, i+200 FROM generate_series(-2, 28, 2) AS g(i)

statement ok
INSERT INTO outer_gc1
  SELECT i, i, i, i, i+300 FROM generate_series(-4, 36, 4) AS g(i)

statement ok
ALTER TABLE outer_p1 SPLIT AT
  SELECT i FROM generate_series(0, 40, 5) AS g(i)

statement ok
ALTER TABLE outer_p1 TESTING_RELOCATE
  SELECT ARRAY[(((i-3)/5)%4)::INT + 1], i FROM generate_series(3, 40, 5) AS g(i)

query TTITI colnames
SHOW TESTING_RANGES FROM TABLE outer_p1
----
Start Key  End Key  Range ID  Replicas  Lease Holder
NULL       /0       20        {5}       5
/0         /5       31        {1}       1
/5         /10      32        {2}       2
/10        /15      33        {3}       3
/15        /20      34        {4}       4
/20        /25      35        {1}       1
/25        /30      36        {2}       2
/30        /35      37        {3}       3
/35        /40      38        {4}       4
/40        NULL     39        {5}       5

### Begin OUTER queries

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_p1 FULL OUTER JOIN outer_c1 USING (pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzslM-K2zAQh-99CjOnhE4hsp0cDAVdGnAxSTHNqZhgrElqcCQjycsuwe--yGY3fzZesuTqW6yZT7_JJ5gjSCVolR_IQPQPGCD4gBAAQggIc8gQaq0KMkZp19IDsXiGaIZQyrqx7jhDKJQmiI5gS1sRRBBLS7qi_IlSygXp36qUpAFBkM3LqstLaGfBJZSHXL9w1VjS29pN4SreurGRxxlyN1Na7v9_bC7YW-msG3mA3M3_nrncJMl2vfn7KwWEinZ2wtn36U_twO6nu4WkIB158XK1SZKJuymYosd99HiIHp-jxxeQtQiqsaf_bWy-J4hYiwNuTkoaqbQgTeLCQtbesLdSP1R91XY72L8IZuOjDD6KP7oZdBOMbgbdhKObuxbdDTcpmVpJQ3dtsplbhCT21G9Noxpd0B-tii6m_1x3XHcgyNi-yvqPWHalbsBzmH0KLy7g2TXsP5IcPAKHj8DzL8FZ--01AAD__w_4hJ8=

query IIIII rowsort,colnames
SELECT * FROM outer_p1 FULL OUTER JOIN outer_c1 USING (pid1)
----
pid1  pa1  cid1  cid2  ca1
-2    NULL  -2    -2    198
0     NULL  0     0     200
1     101   NULL  NULL  NULL
2     102   2     2     202
3     103   NULL  NULL  NULL
4     104   4     4     204
5     105   NULL  NULL  NULL
6     106   6     6     206
7     107   NULL  NULL  NULL
8     108   8     8     208
9     109   NULL  NULL  NULL
10    110   10    10    210
11    111   NULL  NULL  NULL
12    112   12    12    212
13    113   NULL  NULL  NULL
14    114   14    14    214
15    115   NULL  NULL  NULL
16    116   16    16    216
17    117   NULL  NULL  NULL
18    118   18    18    218
19    119   NULL  NULL  NULL
20    120   20    20    220
22    NULL  22    22    222
24    NULL  24    24    224
26    NULL  26    26    226
28    NULL  28    28    228

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_gc1 FULL OUTER JOIN outer_c1 USING (pid1, cid1, cid2)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzslV1r2zAUhu_3K8x71ZAziD_SbYaBblbIMMkIy9UwxVinmSGVjCSPjeL_PiRDWzfZ2Eh658uj4-e84hEcP0Bpyevqni3yb4hBSEBIQchAWKIktEbXbK02_pMBWMmfyBeERrWd88clodaGkT_ANe7AyLFSjs2Bqx-85Uqy-awbxQYEya5qDiGv4DsHn9DcV-aX0J1jc7uv_TV8K9p0Lo9ETCIhkZLISCxB2Db778dYoELrCAPhMf1mVxS3m93XT1sQDnznrkQ8J5HMSaTz2UfjB4yO_FRWkk0erW7Wu6K48pOvZ_RYJiTePStTEu9nFImMIrGkSHxA2RN0555cWVftGXnc0x98PmnslDaSDcuRubI_YXyt3-r2xWeng5NRcDw95EUfMpl8XtRnOvm8qM9s8vlqi_uEzy3bVivL_7SZF36xs9zz8BewujM1fzG6DjFDuQlcOJBs3dCNh2KlQitc8Dkc_xW-HsGLl3ByTnJ6DpydAy__Cy77N78DAAD__0hXvsk=

query IIIIII rowsort,colnames
SELECT * FROM outer_gc1 FULL OUTER JOIN outer_c1 USING (pid1, cid1, cid2)
----
pid1  cid1  cid2  gcid1  gca1  ca1
-4    -4    -4    -4     296   NULL
-2    -2    -2    NULL   NULL  198
0     0     0     0      300   200
2     2     2     NULL   NULL  202
4     4     4     4      304   204
6     6     6     NULL   NULL  206
8     8     8     8      308   208
10    10    10    NULL   NULL  210
12    12    12    12     312   212
14    14    14    NULL   NULL  214
16    16    16    16     316   216
18    18    18    NULL   NULL  218
20    20    20    20     320   220
22    22    22    NULL   NULL  222
24    24    24    24     324   224
26    26    26    NULL   NULL  226
28    28    28    28     328   228
32    32    32    32     332   NULL
36    36    36    36     336   NULL

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_c1 LEFT OUTER JOIN outer_p1 USING (pid1) WHERE pid1 >= 0 AND pid1 < 40]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzslE9r4zAQxe_7KcI77bJTiOy0B0PBlxRSQlJMeiomGGuSGhzLSHJpCf7uRXLa_GlaUnLNzdKbH2_mmdEalZI8yVZsED1BgBCAEIIwQEqotcrZGKWd3BWP5CuiPqGo6sa665SQK82I1rCFLRkRRpVlXXL2wglnkvW9KirWIEi2WVF6rzEvLJxDscr0W6way3qeuw6c0ps2NurFguKA4pDiAQhJsXz-itTiQ9phQPj0HA_vZvPp42yYgFDywv6Nxf9_t9oh_hOEQzeKb5C2BNXY7ZTGZktGJFr6JoltAE2ltGTNcm_mtD2S1URdqfqg7LhxsGcsLr9gk0RwSWKTRHhJ4rQHKmFTq8rwSXvXd2vLcsndjhvV6JwftMq9TXeces5fSDa2U0V3GFVe8g3uwuJH-HoP7h_CwTnO4Tnw4Fdw2v55DwAA___1_QcO

query IIIII rowsort,colnames
SELECT * FROM outer_c1 LEFT OUTER JOIN outer_p1 USING (pid1) WHERE pid1 >= 0 AND pid1 < 40
----
pid1  cid1  cid2  ca1  pa1
0     0     0     200  NULL
2     2     2     202  102
4     4     4     204  104
6     6     6     206  106
8     8     8     208  108
10    10    10    210  110
12    12    12    212  112
14    14    14    214  114
16    16    16    216  116
18    18    18    218  118
20    20    20    220  120
22    22    22    222  NULL
24    24    24    224  NULL
26    26    26    226  NULL
28    28    28    228  NULL

query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_p1 RIGHT OUTER JOIN outer_gc1 USING (pid1) WHERE pid1 >= 1 AND pid1 <= 20]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzsU8Gq2zAQvPcrwpxauoXITlowFHQprUtJiklPxQRjbVyDYxlJLi3B_14k05fELy-8R665SZqdndUsc0CrFa-KPVskPyFAiECIQVggJ3RGl2ytNh4ei1P1B8mcULdd7_xzTii1YSQHuNo1jARp69g0XPzmjAvF5quuWzYgKHZF3QStb7xz8Ar1vjB_pe4dm23nJ_DIbN27ZCYFST9PVle_HhdXpfiPnZSTjEkuSC5BeNDN0s9fNtv1j82nDISGd-61FG_ffDSeHI4gjD3i0MM3IPme5AfkA0H37vhb64qKkYiBnnDkaETfaqPYsDr7ez5c8Gyl3-luUnZZODoTFvdVTFYR3R2ZOBLfHbkS1wuOZGw73Vp-Vh7nPs6sKh6zb3VvSv5udBlkxus68MKDYutGVIyXtA1QGPCULK6Sl2fk-ZQc3aIc30JevIicD6_-BQAA__8gXA8W

query IIIIII rowsort,colnames
SELECT * FROM outer_p1 RIGHT OUTER JOIN outer_gc1 USING (pid1) WHERE pid1 >= 1 AND pid1 <= 20
----
pid1  pa1  cid1  cid2  gcid1  gca1
4     104  4     4     4      304
8     108  8     8     8      308
12    112  12    12    12     312
16    116  16    16    16     316
20    120  20    20    20     320

########################
# Non-interleaved joins #
########################

# Join on siblings uses merge joiner.
# TODO(richardwu): Update this once sibling joins are implemented.
query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM child1 JOIN child2 USING(pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzclkGLm0AUx-_9FMs7tewUMmqyXaHgpYcUmi2ht-LB1ddEcB0ZR-iy5LsXYyGNpu9FnoGQW4zzm_nPyw_yf4PSZLhKXrCG8CdoUOCBAh8UBKBgDrGCypoU69rYdkkHLLPfEM4U5GXVuPbrWEFqLEL4Bi53BUIIP5LnAteYZGhBQYYuyYv9IZXNXxL7GqXbvMjaE58aF95FWkWeinyIdwpM4_5ufNjv-fVum9Tb470iDfEuVlC7ZIMQ6p2aOqDXD6iiQJTR-2_Gwz7GZmgx6-9z3x581qoT1_2GdoNfTV72r7tcrb6sQUGBv9z7SN9_-Gzzzbb7OLz8XEULFT30RnC4nn_G9ZryVPSTqVfmo6l6y04fHBwdrK9dzkkCXlhOfdtyetfuyCQBL-yId9uO-NfuyCQBL-yIf9uOBNfuyCQBL-xIcNuOMF10jXVlyhrPajqz9laYbbCbVW0am-J3a9L9Md3j057b_4VnWLvurdc9LMvuVRvwfHghgR8lsBbl1nOa1iNG5o2DFxL4UQJrUe7eyAa016dn_9I-PW-fhPXxzGZ9OpAITsOM4DTMCE7DnOAMzQg-lwhOw4zgNMwITsOc4AzNCL6QCP4gUZSGGUVpmFGUhjlFGZpR9JNEURpmFKVhRlEa5hRlaEbRR4miWtQTGJqRlKEZSxma05TDua4gKwuytiCrC8K-ICsMWtQY9KAyjLKVpjlbaZqzlaZZWxmcs3VMWRr-ZmPa0lias3VUXxqNc7YOygNpa7x79ycAAP__dNdG7A==

# Join on non-interleaved tables (with key) uses merge joiner.
query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN parent2 ON pid1=pid2]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzclkFr2zAUx-_7FOWdNqpBJLtZZhj4skMGS0fYbfigRm-JIbWMJMNK8XcftguuTasXoxyMb3Wt33vv_3shyjMUWuFOPqKF5A9wYCCAQQQMYmBwBxmD0ugDWqtNc6QDtuofJCsGeVFWrvl3xuCgDULyDC53Z4QEfsuHM-5RKjTAQKGT-bltUpr8UZqntJQGC9e0vK9ccpNylgrIaga6ci9l-2oPTzcnaU_DSimHrM4YWCePCAmv2Tvj9XW0UWhQjevcNo37U1Xx1rm21zjmTzRH_KHzYhxzu9t93wODM_51H1N---mbyY-n7s9BZpZGLI1HyftU0QWpJsy70591OTr2duN40JjPe9t8kdsW85YuFik9mrf0aJHS43lLv8544nrjiXfHW85ngviBsUdb6sLiRZfZqsmD6oidIqsrc8BfRh_aNt3jfcu1d4lC67q3Lw_bonvVDHg5HIfA6xB4EwJzIjQf06vXtPDDwgvzIb0a01HIsvwwsSw_TCzLDxPLIjIToeOQZd2F6PbDhG4_TOj2w4RuIjMReh2i-0uIbj9M6PbDhG4_TOgmMhOhNyG6v4bo9sOEbj9M6PbDhG4iM_XNP-WyFBPpOIheB9GbIJpTwafdmFn94X8AAAD__49zyes=

# Join on non-interleaved column uses hash joiner.
query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 ON pa1 = ca1]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzclkGLm0AUx-_9FMs77cIUMmrSRih4KTQ9ZEvorXhw42siuI7MjNBlyXcvaiHVpO-tvAZCjsb5zfzf5Af-X6EyOa6zZ3QQ_wANCgJQEIKCCBTMIVVQW7NF54xtl_TAKv8F8UxBUdWNb39OFWyNRYhfwRe-RIjhe_ZU4gazHC0oyNFnRdkdUtviObMvSZ1ZrHx75GPj47tEqySA9KDANP7Ptsfdnl7u9pnbD3fq1qcKnM92CLE-qP8Yb7svynyYTiXhxIDhIGDwz4DHfZrK2Bwt5oOd0pbklpyZ8kvm9l9NUY2HXK3XnzegoMSf_j4JHj7ZYrf390n4MB5YJZFK5qOxjyOFgpHO5F2b96YeT3724GhwsL5uF6XxLu6ivj0Xg-tWQhrv4koEt6dEeN1KSONdXInw9pSIrlsJabyLKxHdnhJMcdygq03l8E0tZdbOg_kO-_txprFb_GbNtjumf3zsuO4bnKPz_dugf1hV_as24NvhhQReSmAtyq3nNK0nXFkwDV5I4KUE1qLcoys7oYMxPfubDun7DklYD-9sNqYjieA0zAhOw4zgNMwJztCM4HOJ4DTMCE7DjOA0zAnO0IzgC4ngHySK0jCjKA0zitIwpyhDM4p-lChKw4yiNMwoSsOcogzNKLqUKKpFPYGhGUkZmrGUoTlNOZzrCrKyIGsLsrog7AuywqBFjUGfVIZJttI0ZytNc7bSNGsrg3O2TilLp__ZlLY0leZsndSXJuOcrSflgbQ1Pbz7HQAA__-nzTyD

# Prefix join on interleaved columns uses merge joiner.
query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM child2 JOIN grandchild2 USING(pid1, cid2)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzklsFq20AQhu99ijCnlmzBK8lJLCjo0oMLdYrpreigeKeyQNGKlQQNwe9eJAVcy8qMxRSD8XGt_WZmx9_hf4XCGlwlz1hB-As0KPBAgQ8KAlAwh1hB6ewGq8q69koPLM0fCGcKsqJs6vbnWMHGOoTwFeqszhFC-Jk85bjGxKADBQbrJMu7JqXLnhP3Em22WW7abo9NHd5EWkWeinwVBRDvFNimfqu9L_n0crNNqu1huQ6EeBcrqOokRQj1Tv3HMVOXFObdWVU0l47rvTvuvpR1Bh2aYalbFXm3bf-Tb45s4Du6FL_ZrBhuYLlafV2Dghx_1x_fSnz64rJ0uz-OruReRQ8qWgwWs3-xf8KLm2LsJaMPWNnPthxcG28cHDTWlyGwdMwzC6yvTmDvMjySjnlmj7yr88i_DI-kY57ZI__qPAouwyPpmGf2KLg6j5jkvMaqtEWFJyWvWftANCn266ts4zb4w9lN16Y_PnZclyAMVnX_1esPy6L_1A54OnwngRcSWIvm1nOa1hNW5k2D7yTwQgJr0dyDlR3R3pCe_Uv79L59EtaHO5sN6UAiOA0zgtMwIzgNc4IzNCP4XCI4DTOC0zAjOA1zgjM0I_idRPB7iaI0zChKw4yiNMwpytCMog8SRWmYUZSGGUVpmFOUoRlFFxJFtSgnMDQjKUMzljI0pymHc1lBFhZkaUEWF4R5QRYYtCgx6KPIMMlWmuZspWnOVppmbWVwztYpYen4P5uSlqbSnK2T8tJknLP1KDyQtsa7D38DAAD__8UqcJA=

# Subset join on interleaved columns uses hash joiner.
query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM child2 JOIN grandchild2 USING(pid1, cid3)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzclsFq20AQhu99ijCnFrbglWQ3FhR0KTQ9OMX0VnRQvFNLoGjFrgQNwe9eJLU4lp2ZiCkG-6hI3-4_kw_8P0NlDa6yR_QQ_wQNCgJQEIKCCBTMIVVQO7tB763rPhmAO_Mb4pmCoqrbpvtzqmBjHUL8DE3RlAgx_MgeSlxjZtCBAoNNVpT9JbUrHjP3lGzyojTdbfdtE98kWiWBSkKVRJDuFNi2-Xv2_siHp5s88_nhcR0YQrpLFfgm2yLEeqf-Y8ytyyrzalaVzKVxg1fj7o9qK-sMOjQHh6UdyX1yYuavmc-_2aIaj3y3Wn1Zg4ISfzXv-6AfPrtim_97eDl_2K8gUslCJbcqWY62sB8vFIx3IvvKfrT1eAsnL44OLtaXYas05plt1ddta3AZ0khjnlma4LqlCS9DGmnMM0sTXrc00WVII415Zmmi65aGqbZr9LWtPL6pLc262dBscdiVt63b4HdnN_01w-N9z_W_-gZ9M7wNhoe7anjVBXw7vJDASwmsRbn1nKb1hJUF0-CFBF5KYC3KPVrZER2M6dlLOqT3HZKwPtzZbExHEsFpmBGchhnBaZgTnKEZwecSwWmYEZyGGcFpmBOcoRnBFxLBP0kUpWFGURpmFKVhTlGGZhS9lShKw4yiNMwoSsOcogzNKLqUKKpFPYGhGUkZmrGUoTlNOZzrCrKyIGsLsrog7AuywqBFjUEfVYZJttI0ZytNc7bSNGsrg3O2TilLx_-zKW1pKs3ZOqkvTcY5W4_KA2lrunv3JwAA___5CWNr

# Sort node in between join and child nodes produces hash joiner.
query T
SELECT "URL" FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN (SELECT * FROM child1 ORDER BY cid1) USING(pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzclsFq20AQhu99ijCnlm7Bu5ITR1DQpVD34BS3t6KDYm1tgaMVqzU0BL97kVUwkpz9M2wNxre69qeZnf0mv16oMoVe5E-6oeQXSRKkSFBEgmISNKVMUG3NSjeNse1POmBe_KFkIqis6p1r_zsTtDJWU_JCrnRbTQn9zB-3eqnzQlsSVGiXl9tDkdqWT7l9Tuvc6sq1JR92LrlJpUgVZXtBZuf-Pfb4tMfnm03ebPpPSiVl-0xQ4_K1pkTuxX9sb7Upt0W_O5FGgwaPxRWn-A9j3bBuqj4GnT56tYHjc3aVsYW2uug9KWtJ9JMTp_iaN5tvpqyGJ5kvFl-WJGirf7v3qfzw2ZbrzeFfg2nGIp2-OtA44Dwnml2YT6YeHvtk4WmvsLxsy0PbC7IcFD-_5fLKLFeXLVtoe0GygeLnl01dmWzRZcsW2l6QbKD4-WWLrky2-LJlC20vSDZQ_PyyxVcmG3j7XuqmNlWj3_Q2OGkPo4u17obTmJ1d6e_WrA5luo8PB-7wOlLoxnXfRt2HedV91Tb4dngWAksVRN-G0Grip-WQnvToHjwZwooxcMWDZyHwYOBc-jaEHgx8REfegcf-24r9tyX91zUN2Q8_DPbDD6P9ADTYDz-N9uPWO_E7_8DvQvbDD4P98MNoPwAN9sNPo_2YhezHfYjhfhgY7oeR4YAGhvtpmACjAOlNXII_KnKUIBzJAQ0sBzTSHOHAc4Aj0eUoRzimy1GOcFQHNHAd0Eh2hAPbAQ5192eonALdOSE6vnNOinJpqDsrR7k41N2fpEh3TpRyaaQ7K0zZONKdFadj3J-n8h7ozknU8Z1zIpVLQ91ZocrFke7Kn6pD3bP9u78BAAD__3jhOvI=

query TTT
EXPLAIN SELECT * FROM parent1 JOIN (SELECT * FROM child1 ORDER BY cid1) USING (pid1)
----
render               ·         ·
 └── join            ·         ·
      │              type      inner
      │              equality  (pid1) = (pid1)
      ├── scan       ·         ·
      │              table     parent1@primary
      │              spans     ALL
      └── sort       ·         ·
           │         order     +cid1
           └── scan  ·         ·
·                    table     child1@primary
·                    spans     ALL

# Multi-table staggered join uses interleaved joiner on the bottom join
# and a merge joiner.
query T
SELECT "URL" FROM[EXPLAIN (DISTSQL)
  SELECT * FROM grandchild1
  JOIN child1 USING (pid1, cid1)
  JOIN parent1 USING (pid1)
ORDER BY pid1
]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzsl8-L2kAUx-_9K-SdWpyCk6hbA4VcerC0bpHeSg5Z81YD2YxMxtJl8X8vY3bVJO48h3cQxGNMPnk_5hP4-gKlynCWPmEF0R-QICAAASEIGIKAESQC1lotsKqUto_UwDT7B9FAQF6uN8b-nAhYKI0QvYDJTYEQwbQ0qAtM_-Ic0wz1d5WXqEFAhibNi129H_howFbIn1L9HC91WmaLVV5kthF7s3e_MVEvliIORByK2DY1z5erY2oP7G40CRCwrzudzb7NQUCBj-ZjLPsiDvqfvmoL7S9BQLuiiO8g2QpQG_M67GHGh-feKq1WzaFiCck2EVCZdIkQya04f2m_04fidV_Nl74Nu041lkY2-mS1F7zb3uE9SmeoMWu_p28Ln_XUiUl_ol7iKSfax3R0RKePZ9Q9ocN4IW-8E43P1Ge1bjz7Xu1ho7a8fS7-nwuxtEt_LvK6P5fgpqy_ssTSLq1scN3Khjdl_ZUllnZpZcPrVnZ4U9ZfWWJpl1Z2eN3KEv9i5litVVnhWSl5YKfCbIn1riq10Qv8pdViV6a-vN9xu7yVYWXqu0F9MS3rW7bB8-ExB55wYMnqW47ctPRYWeAHjznwhANLVt-tlXXooE0PjunQve_QCcvmzgZtesgR3A0TgrthQnA3TAlO0ITgI47gbpgQ3A0TgrthSnCCJgQfcwS_4yjqhglF3TChqBumFCVoQtEvHEXdMKGoGyYUdcOUogRNKDrhKCpZOYGgCUkJmrCUoClNKZzKCrywwEsLvLjAzAu8wCBZiUF2IoOXrW6astVNU7a6adJWAqds9QlL3TPzSUu-NGWrV17yxilbO-HBaWuy_fA_AAD__zUJGF0=

# Multi-table join with parent1 and child1 at the bottom uses interleaved
# joiner but induces a hash joiner on the higher join.
query T
SELECT "URL" FROM [EXPLAIN (DISTSQL)
  SELECT * FROM parent1
  JOIN child1 USING (pid1)
  JOIN grandchild1 USING (pid1, cid1)
]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzsl1Fr2zwUhu-_X1HO1TemQWQ7bWMY-GawjJGOsLvhCzc-TQyuFWRlrJT896G4aWIn0xujmxByV9d6rHOOHsGbV6pUzpPsmWuKf5EkQQEJCklQRIKGlApaajXjulbaLmmAcf6H4oGgolqujP13KmimNFP8SqYwJVNM48qwLjn7zVPOctbfVFGxJkE5m6woN_t95ydDdofiOdMvyTLTXBlbhH1x87Ay8U0iRWJLmhbzxf7a2aIoc7l9sbdWJLb6993Gk8mXKQkq-cn8n8iPHz5rC2z-JEH7XCSSIaVrQWpl3vratfP4crPI6kW7fguGlK5TQbXJ5kyxXIvTR_QzeyzfptP-7rbJuc6q_L3TVo8iifrXGrRqDf5Z6-5Tq0rpnDXnrY-llkRLjjT8NasXxzzoHJJIwt0xiSRoHVS4Pas7kdx3RrDrLfTo7UjhE_VJLbsjOLpx1NpYXu8IuiNgRGd1R-QF35HgqipSFYzorFQNLljV8KoqUhWM6KxUDS9Y1eiqKlIVjOisVI0uWFXwY2XK9VJVNZ-Ugge2Mc7n3AyqVis94x9azTbbNI8PG24TqnKuTfM2aB7GVfPKFng6fOsDj3xg6VW3HLpp2WNkQT_41gce-cDSq-7OyA7ooEsP9unQPe_QCcv2zAZdOvIR3A0Dwd0wENwNI8EBDQQf-gjuhoHgbhgI7oaR4IAGgt_6CH7no6gbBoq6YaCoG0aKAhooeu-jqBsGirphoKgbRooCGig68lFUeuUEQANJAQ0sBTTSFOEoK_iFBb-04BcXPPOCX2CQXolBHkSGXra6aWSrm0a2umloK8CRrX3C0uGZ9UlLfWlka6-81BtHth6EB6et6fq_vwEAAP__pFcWJg==
