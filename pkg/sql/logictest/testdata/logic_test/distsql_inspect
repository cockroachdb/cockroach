# LogicTest: 5node-default-configs

subtest setup

statement ok
SET enable_scrub_job = true;

statement ok
SET enable_inspect_command = true;

statement ok
CREATE VIEW last_inspect_job AS
SELECT status, COALESCE(jsonb_array_length(
    crdb_internal.pb_to_json('cockroach.sql.jobs.jobspb.Payload', payload)->'inspectDetails'->'checks'
  ), 0) AS num_checks
FROM crdb_internal.system_jobs
WHERE job_type = 'INSPECT'
ORDER BY created DESC
LIMIT 1

statement ok
CREATE TABLE data (a INT, b INT, c FLOAT, d DECIMAL, e BOOL, PRIMARY KEY (a, b, c, d), INDEX c_idx (c, d))

# Split into ten parts.
statement ok
ALTER TABLE data SPLIT AT SELECT i FROM generate_series(1, 9) AS g(i)

# Relocate the ten parts to the five nodes.
retry
statement ok
ALTER TABLE data EXPERIMENTAL_RELOCATE
  SELECT ARRAY[i%5+1], i FROM generate_series(0, 9) AS g(i)

# Generate all combinations of values 1 to 10.
statement ok
INSERT INTO data SELECT a, b, c::FLOAT, d::DECIMAL FROM
   generate_series(1, 10) AS a(a),
   generate_series(1, 10) AS b(b),
   generate_series(1, 10) AS c(c),
   generate_series(1, 10) AS d(d)

# Verify data placement.
query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW RANGES FROM TABLE data WITH DETAILS] ORDER BY 1
----
start_key           end_key       replicas  lease_holder
<before:/Table/76>  …/1/1         {1}       1
…/1/1               …/1/2         {2}       2
…/1/2               …/1/3         {3}       3
…/1/3               …/1/4         {4}       4
…/1/4               …/1/5         {5}       5
…/1/5               …/1/6         {1}       1
…/1/6               …/1/7         {2}       2
…/1/7               …/1/8         {3}       3
…/1/8               …/1/9         {4}       4
…/1/9               <after:/Max>  {5}       5

subtest end

subtest scrub_job_implicit_txn

statement ok
EXPERIMENTAL SCRUB TABLE data AS OF SYSTEM TIME '-1us';

query TTB
SELECT description, status, finished IS NOT NULL AS finished FROM [SHOW JOBS] WHERE job_type = 'INSPECT' ORDER BY created DESC LIMIT 1
----
EXPERIMENTAL SCRUB TABLE data AS OF SYSTEM TIME '-1us'  succeeded  true

subtest end

subtest ltree_array_pk_column

statement ok
CREATE TABLE table_ltree_array_leading (
    pk_ltree_array LTREE[] NOT NULL,
    pk_name NAME NOT NULL,
    val INT,
    PRIMARY KEY (pk_ltree_array, pk_name),
    INDEX idx_val (val)
);

statement ok
INSERT INTO table_ltree_array_leading VALUES
    (ARRAY['a.b.c']::LTREE[], 'key1', 1),
    (ARRAY['d.e.f']::LTREE[], 'key2', 2),
    (ARRAY['g.h.i']::LTREE[], 'key3', 3),
    (ARRAY['j.k.l']::LTREE[], 'key4', 4),
    (ARRAY['m.n.o']::LTREE[], 'key5', 5),
    (ARRAY['p.q.r']::LTREE[], 'key6', 6);

# Split the table into multiple ranges to force distributed INSPECT queries.
statement ok
ALTER TABLE table_ltree_array_leading SPLIT AT VALUES (ARRAY['d.e.f']::LTREE[], 'key2');

statement ok
ALTER TABLE table_ltree_array_leading SPLIT AT VALUES (ARRAY['j.k.l']::LTREE[], 'key4');

statement ok
ALTER TABLE table_ltree_array_leading SCATTER;

statement ok
INSPECT TABLE table_ltree_array_leading;

query TI
SELECT * FROM last_inspect_job;
----
succeeded 0

statement ok
DROP TABLE table_ltree_array_leading;

subtest end

subtest cleanup

statement ok
DROP TABLE data;

subtest end
