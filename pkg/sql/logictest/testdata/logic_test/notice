# Test multiple notices all display at once.
query T noticetrace
SELECT crdb_internal.notice('hi'), crdb_internal.notice('i am....'), crdb_internal.notice('otan!!!')
----
NOTICE: hi
NOTICE: i am....
NOTICE: otan!!!

subtest test_notice_severity

query T noticetrace
SELECT crdb_internal.notice('debug1', 'do not see this'), crdb_internal.notice('warning', 'but you see this'), crdb_internal.notice('debug2', 'and never this')
----
WARNING: but you see this

statement ok
SET client_min_messages = 'debug1'

query T noticetrace
SELECT crdb_internal.notice('debug1', 'now you see this'), crdb_internal.notice('warning', 'and you see this'), crdb_internal.notice('debug2', 'and never this')
----
DEBUG1: now you see this
WARNING: and you see this

statement ok
CREATE DATABASE d;
CREATE TABLE d.t (x int)

query T noticetrace
ALTER TABLE d.t RENAME TO d.t2
----
NOTICE: renaming tables with a qualification is deprecated
HINT: use ALTER TABLE d.t RENAME TO t2 instead

# Start off with an empty enum, and add values to it.
statement ok
CREATE TYPE color AS ENUM ()

statement ok
ALTER TYPE color ADD VALUE 'black'

query T noticetrace
ALTER TYPE color ADD VALUE IF NOT EXISTS 'black'
----
NOTICE: enum value "black" already exists, skipping

statement ok
CREATE MATERIALIZED VIEW v AS SELECT 1

query T noticetrace
REFRESH MATERIALIZED VIEW CONCURRENTLY v
----
NOTICE: CONCURRENTLY is not required as views are refreshed concurrently
