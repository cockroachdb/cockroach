# LogicTest: cockroach-go-testserver-24.3 cockroach-go-testserver-25.1

# This is a sanity check that stmt bundle collection works around the
# V25_2_AddUsernameToStmtDiagRequest migration. Note that we don't inspect the
# contents of the bundles (this is done elsewhere), so the check here is simply
# that the bundle can be collected.

# Insert a diagnostics request that won't be completed and never expires.
statement ok
INSERT INTO system.statement_diagnostics_requests(id, completed, statement_fingerprint, requested_at)
    VALUES (1, false, 'SELECT _, _ FROM _', now());

# Speed up the polling goroutine.
#
# In combination with the incomplete request this is used to ensure that the
# polling goroutine gracefully handles the mixed-version state too. We'll also
# sleep for 1s in each state to ensure the polling loop has at least one chance
# to run on each node.
statement ok
SET CLUSTER SETTING sql.stmt_diagnostics.poll_interval = '100ms';

statement ok
CREATE TABLE t (k INT PRIMARY KEY);

# Note that because only 'query' directive supports 'nodeidx' option, we cannot
# control which node we're talking to, so we'll always talk to node 0. As such,
# we upgrade node 1 followed by node 0 followed by node 2 so that we test the
# following states:
# - cluster is at old version
# - cluster is at mixed version, gateway is at old version
# - cluster is at mixed version, gateway is at new version
# - cluster is at new version.

statement ok
EXPLAIN ANALYZE (DEBUG) SELECT * FROM t;

upgrade 1

statement ok
SELECT pg_sleep(1);

statement ok
EXPLAIN ANALYZE (DEBUG) SELECT * FROM t;

statement ok
SELECT crdb_internal.request_statement_bundle('SELECT _, _, _ FROM _', 0::FLOAT, 0::INTERVAL, 0::INTERVAL);

upgrade 0

statement ok
SELECT pg_sleep(1);

statement ok
EXPLAIN ANALYZE (DEBUG) SELECT * FROM t;

statement ok
GRANT SYSTEM VIEWACTIVITY TO testuser;
GRANT SELECT ON t TO testuser;

user testuser

# Request a statement bundle as testuser. The user won't be captured since
# the cluster setting is not yet active.
statement ok
SELECT crdb_internal.request_statement_bundle('SELECT _, _, _, _ FROM _', 0::FLOAT, 0::INTERVAL, 0::INTERVAL);

user root

upgrade 2

# Block until upgrade is complete.
statement ok
SET CLUSTER SETTING version = crdb_internal.node_executable_version();

query B retry
SELECT crdb_internal.is_at_least_version('25.1-08')
----
true

statement ok
SELECT pg_sleep(1);

user testuser

# Request a statement bundle as testuser. Since it's an explicit
# EXPLAIN ANALYZE (DEBUG) invocation, we don't store the username in
# system.statement_diagnostics_requests.
statement ok
EXPLAIN ANALYZE (DEBUG) SELECT * FROM t;

# Request a statement bundle as testuser. The user should be captured since
# the cluster setting is now active.
statement ok
SELECT crdb_internal.request_statement_bundle('SELECT _, _, _, _, _ FROM _', 0::FLOAT, 0::INTERVAL, 0::INTERVAL);

user root

# Currently the user is not set for requests added with EXPLAIN ANALYZE (DEBUG).
# For other requests, the user is only set once the cluster setting is active,
# in this case for the final invocation of crdb_internal.request_statement_bundle.
query TT
SELECT statement_fingerprint, username FROM system.statement_diagnostics_requests
ORDER BY statement_fingerprint;
----
EXPLAIN ANALYZE (DEBUG) SELECT * FROM t  ·
EXPLAIN ANALYZE (DEBUG) SELECT * FROM t  ·
EXPLAIN ANALYZE (DEBUG) SELECT * FROM t  ·
EXPLAIN ANALYZE (DEBUG) SELECT * FROM t  ·
SELECT _, _ FROM _                       ·
SELECT _, _, _ FROM _                    ·
SELECT _, _, _, _ FROM _                 ·
SELECT _, _, _, _, _ FROM _              testuser
