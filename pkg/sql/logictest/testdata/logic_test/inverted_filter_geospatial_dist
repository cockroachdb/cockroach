# LogicTest: 5node

statement ok
CREATE TABLE geo_table(
  k int primary key,
  geom geometry,
  INVERTED INDEX geom_index(geom)
)

statement ok
INSERT INTO geo_table VALUES
  (1, 'POINT(1 1)'),
  (2, 'LINESTRING(1 1, 2 2)'),
  (3, 'POINT(3 3)'),
  (4, 'LINESTRING(4 4, 5 5)'),
  (5, 'LINESTRING(40 40, 41 41)'),
  (6, 'POLYGON((1 1, 5 1, 5 5, 1 5, 1 1))'),
  (7, 'LINESTRING(1 1, 3 3)')

query I
SELECT k FROM geo_table WHERE ST_Intersects('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
3
6
7

query I
SELECT k FROM geo_table WHERE ST_CoveredBy('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
6
7

# Not distributed.
query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_Intersects('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: full
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_intersects('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlFFP2zAQx9_3Kax7odW81naCNvxUGGHLVChLO21orlDW3FhEsTPbnTKhfvcpCQNa1ED84PbO_v3P_7OcW3C_lyAh-nY-PozPSO84ns6mn8d9Mo3G0fsZuSYnyeSUXKG59OmPJZKvH6MkIs5f5tqjdbjwrrd3-mU8i88n8dms1xMDQcRA9CnpBQNGggHr9_ek_BBNTqNZckErrZs-mSTHUUKOLsg1UNAmw7P0Bh3I78BhTqGwZoHOGVulbusNcVaCZBRyXax8lZ5TWBiLIG_B536JIGFWnTHBNEM7ZEAhQ5_my1r23sKoOsBlrjMsgcK0SLWTZKjgSKnyZ6ZUyZlSJXtugjddGa6ApDojASPG_0LrYL6mYFb-wY_z6RWC5Gv6cs-x_oPWY3aSLz1atEO-afz_elQWlhhNRlwSV7kmzqfWy9pF8HZfKSaYUow9NwFBnXXFKvNb7ilMVl6SEd_ZB9GlD59Mru-uXuy6-sLmN6n9-1CajsTO6kGX6vfdDzZrN3m5_WIYZyFrhrj75Yw3fw4OD-4H4-GT-GHnxngXPon35OOHNxL9F_Q87OJ6aqxHOww3PY_4653y-13kE3SF0Q435Hcps_WcAmZX2HwynFnZBZ5bs6jLNOGk5upEhs43q7wJYt0sVQd8DPNWWLTDohUO2uGgFQ7b4bAV3t-C5-tX_wIAAP__VL3gzA==

# The inverted filterer handles five inverted index rows with decoded
# datums, where the first column is the PK (k) and the second is the cellid
# and is sorted in cellid order.
#  7, 1152921521786716160
#  2, 1152921526081683456
#  6, 1152921573326323712
#  7, 1152921574400065536
#  3, 1152921574740070469
# To test distribution, we inject a split after the third row and relocate
# the second part of the inverted index. Both inverted filterers will produce 7,
# which will need to be de-duplicated.

statement ok
ALTER INDEX geo_table@geom_index SPLIT AT VALUES (1152921574000000000)

query TI colnames,rowsort
SELECT replicas, lease_holder FROM [SHOW RANGES FROM INDEX geo_table@geom_index]
----
replicas  lease_holder
{1}       1
{1}       1

# Not distributed, since both ranges of the index are on the same node,
# which is also the gateway node.
query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_Intersects('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: full
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_intersects('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlFFP2zAQx9_3Kax7odW81naCNvxUGGHLVChLO21orlDW3FhEsTPbnTKhfvcpCQNa1ED84PbO_v3P_7OcW3C_lyAh-nY-PozPSO84ns6mn8d9Mo3G0fsZuSYnyeSUXKG59OmPJZKvH6MkIs5f5tqjdbjwrrd3-mU8i88n8dms1xMDQcRA9CnpBQNGggHr9_ek_BBNTqNZckErrZs-mSTHUUKOLsg1UNAmw7P0Bh3I78BhTqGwZoHOGVulbusNcVaCZBRyXax8lZ5TWBiLIG_B536JIGFWnTHBNEM7ZEAhQ5_my1r23sKoOsBlrjMsgcK0SLWTZKjgSKnyZ6ZUyZlSJXtugjddGa6ApDojASPG_0LrYL6mYFb-wY_z6RWC5Gv6cs-x_oPWY3aSLz1atEO-afz_elQWlhhNRlwSV7kmzqfWy9pF8HZfKSaYUow9NwFBnXXFKvNb7ilMVl6SEd_ZB9GlD59Mru-uXuy6-sLmN6n9-1CajsTO6kGX6vfdDzZrN3m5_WIYZyFrhrj75Yw3fw4OD-4H4-GT-GHnxngXPon35OOHNxL9F_Q87OJ6aqxHOww3PY_4653y-13kE3SF0Q435Hcps_WcAmZX2HwynFnZBZ5bs6jLNOGk5upEhs43q7wJYt0sVQd8DPNWWLTDohUO2uGgFQ7b4bAV3t-C5-tX_wIAAP__VL3gzA==

statement ok
ALTER INDEX geo_table@geom_index EXPERIMENTAL_RELOCATE VALUES (ARRAY[2], 1152921574000000000)

query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW RANGES FROM INDEX geo_table@geom_index]
----
start_key             end_key               replicas  lease_holder
NULL                  /1152921574000000000  {1}       1
/1152921574000000000  NULL                  {2}       2

# Distributed.
query I
SELECT k FROM geo_table WHERE ST_Intersects('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
3
6
7

query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_Intersects('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: full
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_intersects('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlFFP2zAQx9_3Kax7odW81naCNvxUGGHLVChLO21orlDW3FhEsTPbnTKhfvcpCQNa1ED84PbO_v3P_7OcW3C_lyAh-nY-PozPSO84ns6mn8d9Mo3G0fsZuSYnyeSUXKG59OmPJZKvH6MkIs5f5tqjdbjwrrd3-mU8i88n8dms1xMDQcRA9CnpBQNGggHr9_ek_BBNTqNZckErrZs-mSTHUUKOLsg1UNAmw7P0Bh3I78BhTqGwZoHOGVulbusNcVaCZBRyXax8lZ5TWBiLIG_B536JIGFWnTHBNEM7ZEAhQ5_my1r23sKoOsBlrjMsgcK0SLWTZKjgSKnyZ6ZUyZlSJXtugjddGa6ApDojASPG_0LrYL6mYFb-wY_z6RWC5Gv6cs-x_oPWY3aSLz1atEO-afz_elQWlhhNRlwSV7kmzqfWy9pF8HZfKSaYUow9NwFBnXXFKvNb7ilMVl6SEd_ZB9GlD59Mru-uXuy6-sLmN6n9-1CajsTO6kGX6vfdDzZrN3m5_WIYZyFrhrj75Yw3fw4OD-4H4-GT-GHnxngXPon35OOHNxL9F_Q87OJ6aqxHOww3PY_4653y-13kE3SF0Q435Hcps_WcAmZX2HwynFnZBZ5bs6jLNOGk5upEhs43q7wJYt0sVQd8DPNWWLTDohUO2uGgFQ7b4bAV3t-C5-tX_wIAAP__VL3gzA==

# Data is distributed, but the filterer can't be distributed since it is not a union.
query I
SELECT k FROM geo_table WHERE ST_CoveredBy('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
6
7

query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_CoveredBy('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: full
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_coveredby('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlFFP2zwUhu-_X2GdG1p9Xms7QRu-KoywZSqUpZ02NFco1GcsosSZ7aIg1P8-JWFAQQ3EF27PsZ_3-D2WcwfuzxIkRD9Ox_vxCekdxtPZ9Ou4T6bROPo4I1fkKJkck0s05z69WCL5_jlKIuL8-cLcoEV9cdvbOf42nsWnk_hk1uuJgSBiIPqU9IIBI8GA9fs7Un6KJsfRLDmjldR1n0ySwyghB2fkCijkRuNJeo0O5E_gMKdQWLNA54ytUnf1hliXIBmFLC9WvkrPKSyMRZB34DO_RJAwq46YYKrRDhlQ0OjTbFnLPjgYVQc4z3KNJVCYFmnuJBkqOFCq_KWVKjlTqmSvTfCuK8MVkDTXJGDE-N9oHczXFMzKP_pxPr1EkHxN3-45zm_QetRH2dKjRTvkm8b_rUdlYYnJyYhL4irXxPnUelm7CN7vKsUEU4qx1yYgmOuuWGX-mXsKk5WXZMS39kF06cMXk-X3Vy-2XX1hs-vU3j6WpiOxtXrQpfpD94PN2k1ePnswjLOQNUPc_3LGmz97-3sPg_HwRfy4c2N8CF_EO_LpuxuJ_htaHnYxPTXWox2Gm5ZH_P-t8rtd5BN0hckdbshvU2brOQXUl9h8MZxZ2QWeWrOoyzThpObqhEbnm1XeBHHeLFUHfArzVli0w6IVDtrhoBUO2-GwFd59Bs_X__0NAAD___MV38o=

# Move all the index data that will be read to node 2 while the query executes
# at node 1. The filtering moves to node 2 when it is distributable.

statement ok
ALTER INDEX geo_table@geom_index EXPERIMENTAL_RELOCATE VALUES (ARRAY[2], 1)

query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW RANGES FROM INDEX geo_table@geom_index]
----
start_key             end_key               replicas  lease_holder
NULL                  /1152921574000000000  {2}       2
/1152921574000000000  NULL                  {2}       2

query I
SELECT k FROM geo_table WHERE ST_Intersects('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
3
6
7

# Filtering is placed at node 2.
query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_Intersects('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: full
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_intersects('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlFFP2zwUhu-_X2GdG1p9prWdlA1fFUbYMpWWpZ02NFcoa85YRLEz2506of73KQ0DAmogvnB7jv2ck_e17Ftwv5YgIfp6PjqKx6RzEk9n00-jLplGo-jdjFyT02RyRq7QXPr0-xLJlw9REhHnL3Pt0TpceNfZO_s8msXnk3g863RETxDRE11KOkGPkaDHut09Kd9Hk7NollzQstZNl0ySkyghxxfkGihok-E4vUEH8htwoCBgTqGwZoHOGVumb7eb4mwNklHIdbHyZXpOYWEsgrwFn_slgoSx2TdFfwAUMvRpvtxu21AwK_8AOZ9eIciDDX1UmDcXnpUGJJhmaPusVh7u_RmW6i5zneEaKEyLVDtJ-gqOlVr_yJRac6bUmr00wX5bhisgqc5IwIjxP9E62KWZt9Ec699oPWan-dKjRdvndeH_1qN1YYnRZMglcaVq4nxqvdyqCN4MlGKCKcXYSxMQ1FlbrBT_RD2FycpLMuQ7fRBtfPhocn139GLX0Rc2v0ntn4fWdCh2dg_adL93P6j3rvLy6XVknIWsGuLulzNe_Tk8OrwfjIfP4oedtfE2fBbvyce3eii6r_A8bKN6aqxH2w_rmof8_53lB7XyL7wTCbrCaIeveijYZk4Bsyus3iJnVnaB59Ystm2qcLLltokMna9WD6og1tVS-YGPYd4Ii2ZYNMJBMxw0wmEzHDbCg2Z40AizJ_B889_fAAAA___nMRL3

query I
SELECT k FROM geo_table WHERE ST_CoveredBy('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
6
7

# Filtering is at gateway node since the filter is not distributable.
query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_CoveredBy('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: full
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_coveredby('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@primary
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlFFP2zAQx9_3Kax7odVMazspG34qjLBlKi1LO21orlCobyyixJntoiLU7z6lYUBBDcQPbu_s3__yP8u-A_d3DhKin6eDg3hIWkfxeDL-NmiTcTSIPk3IFTlORifkEs25Ty_mSH58iZKIOH8-MzdoUV_ctnZOvg8m8ekoHk5aLdERRHREm5JW0GEk6LB2e0fKz9HoJJokZ7SUum6TUXIUJeTwjFwBhdxoHKbX6ED-Ag4UBEwpFNbM0Dljy_TdelOslyAZhSwvFr5MTynMjEWQd-AzP0eQMDS7puj2gIJGn2bz9bYVBbPwj5Dz6SWC3FvRJ8K8XnhS-k8w1Wi7bEMeHtrTL92dZ7nGJVAYF2nuJOkqOFRq-VsrteRMqSV7bYLdpgxXQNJck4AR4_-gdbDNM2_iOc5v0HrUx9nco0Xb5ZvG_69Hy8ISk5M-l8SVronzqfVy7SL40FOKCaYUY69NQDDXTbHS_DP3FEYLL0mfb-2DaNKHrybL749ebDv6wmbXqb19LE37Ymv1oEn1h-4Hm7WrvHx2GxlnIauGuP_ljFd_9g_2Hwbj4Yv4cefG-Bi-iHfk00vdF-03tDxsYnpsrEfbDTct9_n7rfK9DflXnokEXWFyh296J9hqSgH1JVZPkTMLO8NTa2brMlU4WnPrhEbnq9W9Kojzaqn8wKcwr4VFPSxq4aAeDmrhsB4Oa-FePdyrhdkzeLp69y8AAP__-8wR9Q==

# Bounding box operations.
statement ok
SET CLUSTER SETTING sql.spatial.experimental_box2d_comparison_operators.enabled = on

query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE geom && 'POINT(3.0 3.0)'::geometry
----
distribution: full
vectorized: true
·
• filter
│ filter: geom && '010100000000000000000008400000000000000840'
│
└── • index join
    │ table: geo_table@primary
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table@geom_index
              spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUk99v0zAQx9_5K6x72SZ5q520gPxUfmQQ1LWlrQQIV1OojxLR2sF2UVDV_x0lga3plFTJg6U75-Pvfe90e3C_NiAg-jwdvYrH5PJtPF_MP46uyDwaRW8W5Ce5nU3uyBrNvU--bZB8eh_NoiLeErljLHheneRiOonHi8vwhpHwhl1dCPEumtxFi9kXoKCNwnGyRQfiK3CgEMCSQmbNCp0ztkjvy59ilYNgFFKd7XyRXlJYGYsg9uBTv0EQMDbXJuv1gYJCn6Sb8tHJzgsy5LA8UDA7_0g7n6wRxOBAjxR4u8KicDrDRKHtsbrOQyOGRQvuU60wBwrzLNFOkJ6E11Lm35WUOWdS5uzcAdddGS6BJFqRkBHjf6B1jZ55F8-x_o3Wo7pNNx4t2h6vG_9_H-WZJUaTIRfEFa6J84n1onQRvhhIyQImJWPnDiCoVVesMH_inp6dfdClDx9Mqv-NPmgafWbTbWL_PErTYdCoHnZRf-h-WNeu8oIMg5OtY5xx9vR72X8SX4ijlWwqtl8r9swiztBlRjusldr0MjssKaBaY7XszuzsCqfWrEqZKpyUXJlQ6Hx1O6iCWFdXRYHHMG-Fg3Y4aIXDdjhshfvtcL8VZifw8vDsbwAAAP__lpfHaw==

query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE 'POINT(3.0 3.0)'::geometry::box2d && geom
----
distribution: full
vectorized: true
·
• filter
│ filter: 'BOX(3 3,3 3)' && geom
│
└── • index join
    │ table: geo_table@primary
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table@geom_index
              spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUk1Fv2jAQx9_3KU73Qiu5wk5gm_zEWFONiUEHSEOaUZXhG4sGdmabKRPiu09Jtra0JYg8WPI5v_vf_063Q_9rjRKT-e3w3WAEF9eD6Wz6eXgJ02SYvJ_BT7iZjD_BiuxdSL-tCb58SCYJtLjggj__3nae3VtS9sfz6BrUlvPodX2WCTfI0FhNo3RDHuVXFMgwwgXD3NkleW9dGd5VPw10gZIzzEy-DWV4wXBpHaHcYcjCmlDiyF7ZvN1BhppCmq2rpONtkNATuNgztNvwQPuQrghld88eKYhmhVnZggmlmlybH-rcd6hXWrvLjKYCGU7z1HgJbYV9pYrvWqlCcKUKfurAq3MZoRBSoyHmYMMPcv6oZ3GO54H5TS6QvsnWgRy5tjg0_v89KXIH1kBPSPCla_AhdUFWLuI3XaV4xJXi_NSBQEafi5Xmn7hnJ2cfndOHjzYz_0YfHRt97rJN6v48SLNedFQ9Pkf9vvvxoXYdl9Dqj-cXMcQshviyJV_cuYZaOge1nNizCfncGk8HlRzLzPcLhqRXVO-yt1u3pFtnl5VMfR1XXBXQ5EP92q0vA1M_lQU-hkUjHDXDUSMcN8NxI9xphjuNMH8CL_av_gYAAP__Fg3Epg==

query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE 'LINESTRING(1.0 1.0, 5.0 5.0)'::geometry ~ geom
----
distribution: full
vectorized: true
·
• filter
│ filter: '010200000002000000000000000000F03F000000000000F03F00000000000014400000000000001440' ~ geom
│
└── • index join
    │ table: geo_table@primary
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 33
        │
        └── • scan
              missing stats
              table: geo_table@geom_index
              spans: 33 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlG9v2j4Qx5__XoV1T2glt9hJ0E_yI_YndJkodAFpm2ZUZfjGooGd2WbKhNhrn5KsLUEiCEsY3V0-_uZ7J2cH7ucaBMSfHsavkgm5epvM5rMP42syi8fxmzn5QUbp9J6s0Dz67Osaycd3cRqT3jiZxLN5mkzurvgtI_yWUTK4ZdXvuifEXTy9j-fpZ_KnQjdAQRuFk2yDDsQX4EAhgAWFwpolOmdsld7VDyWqBMEo5LrY-iq9oLA0FkHswOd-jSBgYm5M0Y-AgkKf5ev60OnWCzLksNhTMFv_QjufrRDEYE8PFHi3wrwym2Km0PZZW-e5F8PK2mOuFZZAYVZk2gnSl_BayvKbkrLkTMqSndvg5lKGSyCZViQMiPHf0bqTnvklnhP9C61HNcrXHi3aPm8bf6rHZWGJ0WTIBXGVa-J8Zr2oXYT_D6RkAZOSsXMbENTqUqwyf-Senp19cEkf3ptc_xt9cGr0hc03mf39Ik2HwUn18BL15-6Hbe0mL0iPcRawZj39H6wRC0ddMY8idhz3ROvGdjiJWk7O3NIUXWG0w5aPUyez_YICqhU2XwJntnaJD9Ysa5kmnNZcnVDofFMdNEGim1L1gocw74SDbjjohMNuOOyEo2446oTZEbzY__c3AAD__zmbzOU=

query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE geom ~ 'LINESTRING(1.0 1.0, 5.0 5.0)'::geometry::box2d
----
distribution: full
vectorized: true
·
• filter
│ filter: geom ~ 'BOX(1 1,5 5)'
│
└── • index join
    │ table: geo_table@primary
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 30
        │
        └── • scan
              missing stats
              table: geo_table@geom_index
              spans: 30 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUk9GLGj8Qx99_f0WYF-8gh0l25UfzZO2t1GL1qkKFRo6tmdqlmmyTWLaI_dvL7tY7FVwxD1lmsp98851hduB_rkFCMn8avh2MyN3jYDqbfhrek2kyTN7NyA_Sn4w_khXa55B-XSP5_D6ZJGW8IX9Ii3EmWL0O36PVZ1G_KeZxzM7jlpS98Vw8AgVjNY7SDXqQX4ADBQELCrmzS_TeujK9q34a6AIko5CZfBvK9ILC0joEuYOQhTWChJF9sHk7BgoaQ5qtq0vH2yBJl8NiT8FuwyvtQ7pCkJ09PVLgzQqzsj4TTDW6NjvVeSlftyzcc2Y0FkBhmqfGS9JW0FOq-KaVKjhTqmDXNni4leEKSGo0EW-IDd_R-Yue-S2eB-YXuoC6n60DOnRtfmr8cJ4UuSPWkC6XxJeuiQ-pC7JyEf3fUYoJphRj1zYgaPStWGn-zD292ntxSx0-2Mz8a7241PrcZZvU_X6Vpl1xUT26Rf2l-tGpdp2XpCvKWe2N53eccNohnfuWPIzZpQfEJw-4MlwT9Lk1Hk_kL93M9gsKqFdYD7C3W7fEJ2eXlUwdjiuuSmj0oT7t1MHA1EflA49h3giLZlg0wlEzHDXCcTMcN8LsDF7s__sbAAD__-W2xyk=
