query T
SELECT aclexplode(NULL)
----

query T
SELECT aclexplode(ARRAY[]::text[])
----

query T
SELECT aclexplode(ARRAY['foo'])
----

query O
SELECT pg_my_temp_schema()
----
0

# Regression test for #49072.
statement ok
SELECT has_table_privilege('root'::NAME, 0, 'select')

# Regression test for #53684.
statement ok
CREATE TYPE typ AS ENUM ('hello')

query T
SELECT format_type(oid, 0) FROM pg_catalog.pg_type WHERE typname = 'typ'
----
typ

# Nothing breaks if we put a non-existing oid into format_type.
query T
SELECT format_type(152100, 0)
----
unknown (OID=152100)

subtest pg_column_size

query I
SELECT pg_column_size(1::float)
----
9

query I
SELECT pg_column_size(1::int)
----
2

query I
SELECT pg_column_size((1, 1))
----
7

query I
SELECT pg_column_size('{}'::json)
----
7

query I
SELECT pg_column_size('')
----
2

query I
SELECT pg_column_size('a')
----
3

query I
SELECT pg_column_size((1,'a'))
----
8

query I
SELECT pg_column_size(true)
----
1

query I
SELECT pg_column_size(NULL::int)
----
NULL

statement ok
CREATE TABLE is_visible(a int primary key);
CREATE SCHEMA other;
CREATE TABLE other.not_visible(a int primary key);
CREATE DATABASE db2;
SET DATABASE = db2;
CREATE TABLE table_in_db2(a int primary key);

let $table_in_db2_id
SELECT c.oid FROM pg_class c WHERE c.relname = 'table_in_db2';

statement ok
SET DATABASE = test;

query B
SELECT pg_table_is_visible(c.oid)
FROM pg_class c
WHERE c.relname = 'is_visible'
----
true

query B
SELECT pg_table_is_visible(c.oid)
FROM pg_class c
WHERE c.relname = 'pg_type'
----
true

query B
SELECT pg_table_is_visible(c.oid)
FROM pg_class c
WHERE c.relname = 'not_visible'
----
false

# Looking up a table in a different database should return NULL.
query B
SELECT pg_table_is_visible($table_in_db2_id)
----
NULL

# Looking up a non-existent OID should return NULL.
query B
SELECT pg_table_is_visible(1010101010)
----
NULL

statement ok
CREATE TABLE size_tester (a PRIMARY KEY, b string) AS SELECT g, 'preston' FROM generate_series(1,100) g(g)

# In tests, this returns NULL because ranges don't appear properly in
# crdb_internal.ranges in the logic test context.
# Make sure also that a non-existent table id returns null.
query II
SELECT pg_total_relation_size('size_tester'::regclass), pg_total_relation_size(387438)
----
NULL  NULL
