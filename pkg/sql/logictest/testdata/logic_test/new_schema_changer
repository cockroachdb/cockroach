subtest add_column
subtest multi_add_column
subtest add_column_default
subtest add_column_computed
subtest add_column_families
subtest multi_table
subtest view_user_defined_types
subtest view_sanity

statement ok
CREATE TABLE t1 (id INT PRIMARY KEY, name varchar(256));

statement ok
CREATE VIEW v1Dep AS (SELECT name FROM t1);

statement ok
CREATE VIEW v2Dep AS (SELECT name AS N1, name AS N2 FROM v1Dep);

statement ok
CREATE VIEW v3Dep AS (SELECT name, n1 FROM v1Dep, v2Dep);

statement ok
CREATE VIEW v4Dep AS (SELECT n2, n1 FROM v2Dep);

query T
EXPLAIN (DDL) DROP VIEW v1Dep CASCADE;
----
Schema change plan for DROP VIEW ‹test›.public.‹v1dep› CASCADE;
 ├── StatementPhase
 │    └── Stage 1 of 1 in StatementPhase
 │         ├── 4 elements transitioning toward ABSENT
 │         │    ├── PUBLIC → TXN_DROPPED View:{DescID: 107}
 │         │    ├── PUBLIC → TXN_DROPPED View:{DescID: 108}
 │         │    ├── PUBLIC → TXN_DROPPED View:{DescID: 109}
 │         │    └── PUBLIC → TXN_DROPPED View:{DescID: 110}
 │         └── 4 Mutation operations
 │              ├── MarkDescriptorAsDroppedSynthetically {"DescID":107}
 │              ├── MarkDescriptorAsDroppedSynthetically {"DescID":108}
 │              ├── MarkDescriptorAsDroppedSynthetically {"DescID":109}
 │              └── MarkDescriptorAsDroppedSynthetically {"DescID":110}
 ├── PreCommitPhase
 │    └── Stage 1 of 1 in PreCommitPhase
 │         ├── 56 elements transitioning toward ABSENT
 │         │    ├── PUBLIC      → ABSENT     Namespace:{DescID: 107, Name: v1dep, ReferencedDescID: 104}
 │         │    ├── PUBLIC      → ABSENT     Owner:{DescID: 107}
 │         │    ├── PUBLIC      → ABSENT     UserPrivileges:{DescID: 107, Name: admin}
 │         │    ├── PUBLIC      → ABSENT     UserPrivileges:{DescID: 107, Name: root}
 │         │    ├── TXN_DROPPED → DROPPED    View:{DescID: 107}
 │         │    ├── PUBLIC      → ABSENT     ObjectParent:{DescID: 107, ReferencedDescID: 105}
 │         │    ├── PUBLIC      → ABSENT     TableComment:{DescID: 107}
 │         │    ├── PUBLIC      → WRITE_ONLY Column:{DescID: 107, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnName:{DescID: 107, Name: name, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnType:{DescID: 107, ColumnFamilyID: 0, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnComment:{DescID: 107, PgAttributeNum: 1}
 │         │    ├── PUBLIC      → ABSENT     Namespace:{DescID: 108, Name: v2dep, ReferencedDescID: 104}
 │         │    ├── PUBLIC      → ABSENT     Owner:{DescID: 108}
 │         │    ├── PUBLIC      → ABSENT     UserPrivileges:{DescID: 108, Name: admin}
 │         │    ├── PUBLIC      → ABSENT     UserPrivileges:{DescID: 108, Name: root}
 │         │    ├── TXN_DROPPED → DROPPED    View:{DescID: 108}
 │         │    ├── PUBLIC      → ABSENT     ObjectParent:{DescID: 108, ReferencedDescID: 105}
 │         │    ├── PUBLIC      → ABSENT     TableComment:{DescID: 108}
 │         │    ├── PUBLIC      → WRITE_ONLY Column:{DescID: 108, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnName:{DescID: 108, Name: n1, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnType:{DescID: 108, ColumnFamilyID: 0, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnComment:{DescID: 108, PgAttributeNum: 1}
 │         │    ├── PUBLIC      → WRITE_ONLY Column:{DescID: 108, ColumnID: 2}
 │         │    ├── PUBLIC      → ABSENT     ColumnName:{DescID: 108, Name: n2, ColumnID: 2}
 │         │    ├── PUBLIC      → ABSENT     ColumnType:{DescID: 108, ColumnFamilyID: 0, ColumnID: 2}
 │         │    ├── PUBLIC      → ABSENT     ColumnComment:{DescID: 108, PgAttributeNum: 2}
 │         │    ├── PUBLIC      → ABSENT     Namespace:{DescID: 109, Name: v3dep, ReferencedDescID: 104}
 │         │    ├── PUBLIC      → ABSENT     Owner:{DescID: 109}
 │         │    ├── PUBLIC      → ABSENT     UserPrivileges:{DescID: 109, Name: admin}
 │         │    ├── PUBLIC      → ABSENT     UserPrivileges:{DescID: 109, Name: root}
 │         │    ├── TXN_DROPPED → DROPPED    View:{DescID: 109}
 │         │    ├── PUBLIC      → ABSENT     ObjectParent:{DescID: 109, ReferencedDescID: 105}
 │         │    ├── PUBLIC      → ABSENT     TableComment:{DescID: 109}
 │         │    ├── PUBLIC      → WRITE_ONLY Column:{DescID: 109, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnName:{DescID: 109, Name: name, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnType:{DescID: 109, ColumnFamilyID: 0, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnComment:{DescID: 109, PgAttributeNum: 1}
 │         │    ├── PUBLIC      → WRITE_ONLY Column:{DescID: 109, ColumnID: 2}
 │         │    ├── PUBLIC      → ABSENT     ColumnName:{DescID: 109, Name: n1, ColumnID: 2}
 │         │    ├── PUBLIC      → ABSENT     ColumnType:{DescID: 109, ColumnFamilyID: 0, ColumnID: 2}
 │         │    ├── PUBLIC      → ABSENT     ColumnComment:{DescID: 109, PgAttributeNum: 2}
 │         │    ├── PUBLIC      → ABSENT     Namespace:{DescID: 110, Name: v4dep, ReferencedDescID: 104}
 │         │    ├── PUBLIC      → ABSENT     Owner:{DescID: 110}
 │         │    ├── PUBLIC      → ABSENT     UserPrivileges:{DescID: 110, Name: admin}
 │         │    ├── PUBLIC      → ABSENT     UserPrivileges:{DescID: 110, Name: root}
 │         │    ├── TXN_DROPPED → DROPPED    View:{DescID: 110}
 │         │    ├── PUBLIC      → ABSENT     ObjectParent:{DescID: 110, ReferencedDescID: 105}
 │         │    ├── PUBLIC      → ABSENT     TableComment:{DescID: 110}
 │         │    ├── PUBLIC      → WRITE_ONLY Column:{DescID: 110, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnName:{DescID: 110, Name: n2, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnType:{DescID: 110, ColumnFamilyID: 0, ColumnID: 1}
 │         │    ├── PUBLIC      → ABSENT     ColumnComment:{DescID: 110, PgAttributeNum: 1}
 │         │    ├── PUBLIC      → WRITE_ONLY Column:{DescID: 110, ColumnID: 2}
 │         │    ├── PUBLIC      → ABSENT     ColumnName:{DescID: 110, Name: n1, ColumnID: 2}
 │         │    ├── PUBLIC      → ABSENT     ColumnType:{DescID: 110, ColumnFamilyID: 0, ColumnID: 2}
 │         │    └── PUBLIC      → ABSENT     ColumnComment:{DescID: 110, PgAttributeNum: 2}
 │         └── 29 Mutation operations
 │              ├── DrainDescriptorName {"Namespace":{"DatabaseID":104,"DescriptorID":107,"Name":"v1dep","SchemaID":105}}
 │              ├── RemoveDroppedColumnType {"ColumnID":1,"TableID":107}
 │              ├── DrainDescriptorName {"Namespace":{"DatabaseID":104,"DescriptorID":108,"Name":"v2dep","SchemaID":105}}
 │              ├── RemoveDroppedColumnType {"ColumnID":1,"TableID":108}
 │              ├── RemoveDroppedColumnType {"ColumnID":2,"TableID":108}
 │              ├── DrainDescriptorName {"Namespace":{"DatabaseID":104,"DescriptorID":109,"Name":"v3dep","SchemaID":105}}
 │              ├── RemoveDroppedColumnType {"ColumnID":1,"TableID":109}
 │              ├── RemoveDroppedColumnType {"ColumnID":2,"TableID":109}
 │              ├── DrainDescriptorName {"Namespace":{"DatabaseID":104,"DescriptorID":110,"Name":"v4dep","SchemaID":105}}
 │              ├── RemoveDroppedColumnType {"ColumnID":1,"TableID":110}
 │              ├── RemoveDroppedColumnType {"ColumnID":2,"TableID":110}
 │              ├── MarkDescriptorAsDropped {"DescID":109}
 │              ├── RemoveViewBackReferencesInRelations {"BackReferencedViewID":109}
 │              ├── RemoveAllTableComments {"TableID":109}
 │              ├── MarkDescriptorAsDropped {"DescID":110}
 │              ├── RemoveViewBackReferencesInRelations {"BackReferencedViewID":110}
 │              ├── RemoveAllTableComments {"TableID":110}
 │              ├── MarkDescriptorAsDropped {"DescID":108}
 │              ├── RemoveViewBackReferencesInRelations {"BackReferencedViewID":108}
 │              ├── RemoveAllTableComments {"TableID":108}
 │              ├── MarkDescriptorAsDropped {"DescID":107}
 │              ├── RemoveViewBackReferencesInRelations {"BackReferencedViewID":107}
 │              ├── RemoveAllTableComments {"TableID":107}
 │              ├── SetJobStateOnDescriptor {"DescriptorID":106,"Initialize":true}
 │              ├── SetJobStateOnDescriptor {"DescriptorID":107,"Initialize":true}
 │              ├── SetJobStateOnDescriptor {"DescriptorID":108,"Initialize":true}
 │              ├── SetJobStateOnDescriptor {"DescriptorID":109,"Initialize":true}
 │              ├── SetJobStateOnDescriptor {"DescriptorID":110,"Initialize":true}
 │              └── CreateSchemaChangerJob {"NonCancelable":true,"RunningStatus":"PostCommitNonRev..."}
 └── PostCommitNonRevertiblePhase
      └── Stage 1 of 1 in PostCommitNonRevertiblePhase
           ├── 11 elements transitioning toward ABSENT
           │    ├── DROPPED    → ABSENT View:{DescID: 107}
           │    ├── WRITE_ONLY → ABSENT Column:{DescID: 107, ColumnID: 1}
           │    ├── DROPPED    → ABSENT View:{DescID: 108}
           │    ├── WRITE_ONLY → ABSENT Column:{DescID: 108, ColumnID: 1}
           │    ├── WRITE_ONLY → ABSENT Column:{DescID: 108, ColumnID: 2}
           │    ├── DROPPED    → ABSENT View:{DescID: 109}
           │    ├── WRITE_ONLY → ABSENT Column:{DescID: 109, ColumnID: 1}
           │    ├── WRITE_ONLY → ABSENT Column:{DescID: 109, ColumnID: 2}
           │    ├── DROPPED    → ABSENT View:{DescID: 110}
           │    ├── WRITE_ONLY → ABSENT Column:{DescID: 110, ColumnID: 1}
           │    └── WRITE_ONLY → ABSENT Column:{DescID: 110, ColumnID: 2}
           └── 21 Mutation operations
                ├── LogEvent {"Statement":"DROP VIEW ‹test›...","StatementTag":"DROP VIEW","TargetStatus":1}
                ├── DeleteDescriptor {"DescriptorID":107}
                ├── MakeColumnAbsent {"ColumnID":1,"TableID":107}
                ├── LogEvent {"Statement":"DROP VIEW ‹test›...","StatementTag":"DROP VIEW","TargetStatus":1}
                ├── DeleteDescriptor {"DescriptorID":108}
                ├── MakeColumnAbsent {"ColumnID":1,"TableID":108}
                ├── MakeColumnAbsent {"ColumnID":2,"TableID":108}
                ├── LogEvent {"Statement":"DROP VIEW ‹test›...","StatementTag":"DROP VIEW","TargetStatus":1}
                ├── DeleteDescriptor {"DescriptorID":109}
                ├── MakeColumnAbsent {"ColumnID":1,"TableID":109}
                ├── MakeColumnAbsent {"ColumnID":2,"TableID":109}
                ├── LogEvent {"Statement":"DROP VIEW ‹test›...","StatementTag":"DROP VIEW","TargetStatus":1}
                ├── DeleteDescriptor {"DescriptorID":110}
                ├── MakeColumnAbsent {"ColumnID":1,"TableID":110}
                ├── MakeColumnAbsent {"ColumnID":2,"TableID":110}
                ├── RemoveJobStateFromDescriptor {"DescriptorID":106}
                ├── RemoveJobStateFromDescriptor {"DescriptorID":107}
                ├── RemoveJobStateFromDescriptor {"DescriptorID":108}
                ├── RemoveJobStateFromDescriptor {"DescriptorID":109}
                ├── RemoveJobStateFromDescriptor {"DescriptorID":110}
                └── UpdateSchemaChangerJob {"IsNonCancelable":true,"RunningStatus":"all stages compl..."}



statement error pq: cannot drop relation "v1dep" because view "v3dep" depends on it
DROP VIEW v1Dep RESTRICT;

statement error pq: "v1dep" is not a materialized view
DROP MATERIALIZED VIEW v1Dep

statement ok
DROP VIEW v1Dep CASCADE;

statement error pq: relation "v4dep" does not exist
SELECT * FROM v4Dep;

statement error pq: relation "v3dep" does not exist
SELECT * FROM v3Dep;

statement error pq: relation "v2dep" does not exist
SELECT * FROM v2Dep;

statement error pq: relation "v1dep" does not exist
SELECT * FROM v1Dep;

statement ok
CREATE MATERIALIZED VIEW mv AS SELECT name FROM t1

statement error pq: "mv" is a materialized view
DROP VIEW mv

statement ok
DROP MATERIALIZED VIEW mv

statement ok
CREATE TABLE defaultdb.customers (id INT PRIMARY KEY, email STRING UNIQUE);

statement ok
CREATE TABLE IF NOT EXISTS defaultdb.orders (
    id INT PRIMARY KEY,
    customer INT UNIQUE NOT NULL REFERENCES defaultdb.customers (id),
    orderTotal DECIMAL(9,2),
    INDEX (customer)
  );

statement ok
CREATE SEQUENCE defaultdb.sq2;

statement ok
CREATE TABLE defaultdb.shipments (
    tracking_number UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    carrier STRING,
    status STRING,
    customer_id INT,
    rand_col INT DEFAULT nextval('defaultdb.sq2'),
    CONSTRAINT fk_customers FOREIGN KEY (customer_id) REFERENCES defaultdb.customers(id),
    CONSTRAINT fk_orders FOREIGN KEY (customer_id) REFERENCES defaultdb.orders(customer)
 );

statement error "customers" is referenced by foreign key from table "shipments"
DROP TABLE defaultdb.customers;

statement ok
CREATE SEQUENCE defaultdb.sq1 OWNED BY defaultdb.shipments.carrier;

statement ok
CREATE TABLE defaultdb.sq1dep (
	rand_col INT8 DEFAULT nextval('defaultdb.sq1')
);

statement error cannot drop table shipments because other objects depend on it
DROP TABLE defaultdb.shipments;

statement ok
DROP TABLE defaultdb.sq1dep;
DROP TABLE defaultdb.shipments;

statement ok
CREATE TABLE defaultdb.shipments (
    tracking_number UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    carrier STRING,
    status STRING,
    customer_id INT,
    rand_col INT DEFAULT nextval('defaultdb.sq2'),
    CONSTRAINT fk_customers FOREIGN KEY (customer_id) REFERENCES defaultdb.customers(id),
    CONSTRAINT fk_orders FOREIGN KEY (customer_id) REFERENCES defaultdb.orders(customer)
 );

statement ok
CREATE VIEW defaultdb.v1 as (select customer_id, carrier from defaultdb.shipments);

statement error pq: cannot drop relation "shipments" because view "v1" depends on it
DROP TABLE defaultdb.shipments;

statement ok
DROP TABLE defaultdb.shipments CASCADE;

# Back references for shipments should be cleaned up for any foreign
# keys so dropping customers and orders should be safe.
statement ok
DROP TABLE defaultdb.customers CASCADE;

statement ok
CREATE TABLE p2 (i INT PRIMARY KEY, s STRING)

statement ok
SET use_declarative_schema_changer = 'unsafe_always'

statement ok
SET use_declarative_schema_changer = 'unsafe'

# Basic test -- create and drop a type.
statement ok
CREATE TYPE typ8 AS ENUM ('hello');
DROP TYPE typ8

statement ok
CREATE TYPE typ8 AS ENUM ('hello');

# Now check all of the fun cases around object dependencies.
# Test a simple column dependency.
statement ok
CREATE TABLE t8 (x typ8)

statement error cannot drop type "typ8" because other objects \(\[test.public.t8\]\) still depend on it
DROP TYPE typ8

# Now add a column with the using the type.
statement ok
ALTER TABLE t8 ADD COLUMN y typ8

statement error cannot drop type "typ8" because other objects \(\[test.public.t8\]\) still depend on it
DROP TYPE typ8

# If we drop the original column x, t8 should still depend on t.
statement ok
ALTER TABLE t8 DROP COLUMN x

statement error cannot drop type "typ8" because other objects \(\[test.public.t8\]\) still depend on it
DROP TYPE typ8

# Now remove the other column.
statement ok
ALTER TABLE t8 DROP COLUMN y

statement ok
DROP TYPE typ8

# Ensure that references to the array type are tracked.
statement ok
CREATE TYPE typ8 AS ENUM ('hello');
ALTER TABLE t8 ADD COLUMN x typ8[]

statement error cannot drop type "typ8" because other objects \(\[test.public.t8\]\) still depend on it
DROP TYPE typ8

statement ok
ALTER TABLE t8 DROP COLUMN x;

statement ok
DROP TYPE typ8

subtest drop_type_in_single_transaction
subtest drop_schema
subtest drop_database
subtest create-index
subtest create_index_on_dropping_column
subtest drop-type-sanity
subtest event-log
subtest names-with-escaped-chars
subtest drop-multiple-in-builder
subtest seq-back-ref
subtest fk-backref-cleanup
subtest validate-drops-with-multiple-constraints
subtest schema-dep-sanity
subtest validate-sequence-owner
subtest drop-type-closure
subtest empty-database
subtest schema-permission-error
