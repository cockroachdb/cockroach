subtest add_column

statement ok
SET use_declarative_schema_changer = 'on'

statement ok
CREATE TABLE foo (i INT PRIMARY KEY)

# Declarative is not fully enabled for this statement,
# so it should error out.
statement error pgcode 0A000 cannot explain a statement which is not supported by the declarative schema changer
EXPLAIN (DDL) ALTER TABLE foo ADD COLUMN j INT

statement ok
SET use_declarative_schema_changer = 'unsafe'

query T
EXPLAIN (DDL, VERBOSE) ALTER TABLE foo ADD COLUMN j INT
----
• Schema change plan for ALTER TABLE ‹test›.public.‹foo› ADD COLUMN ‹j› INT8;
│
├── • PreCommitPhase
│   │
│   └── • Stage 1 of 1 in PreCommitPhase
│       │
│       ├── • 3 elements transitioning toward PUBLIC
│       │   │
│       │   ├── • Column:{DescID: 106, ColumnID: 2}
│       │   │     ABSENT → DELETE_ONLY
│       │   │
│       │   ├── • ColumnType:{DescID: 106, ColumnFamilyID: 0, ColumnID: 2}
│       │   │   │ ABSENT → PUBLIC
│       │   │   │
│       │   │   └── • SameStagePrecedence dependency from DELETE_ONLY Column:{DescID: 106, ColumnID: 2}
│       │   │         rule: "column type set right after column existence"
│       │   │
│       │   └── • PrimaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 1}
│       │       │ ABSENT → DELETE_ONLY
│       │       │
│       │       └── • Precedence dependency from DELETE_ONLY Column:{DescID: 106, ColumnID: 2}
│       │             rule: "column existence precedes index existence"
│       │
│       └── • 6 Mutation operations
│           │
│           ├── • MakeAddedColumnDeleteOnly
│           │     Column:
│           │       ColumnID: 2
│           │       PgAttributeNum: 2
│           │       TableID: 106
│           │
│           ├── • LogEvent
│           │     Authorization:
│           │       UserName: root
│           │     Element:
│           │       Column:
│           │         columnId: 2
│           │         pgAttributeNum: 2
│           │         tableId: 106
│           │     Statement: ALTER TABLE ‹test›.public.‹foo› ADD COLUMN ‹j› INT8
│           │     StatementTag: ALTER TABLE
│           │     TargetMetadata:
│           │       SourceElementID: 1
│           │       SubWorkID: 1
│           │     TargetStatus: 2
│           │
│           ├── • SetAddedColumnType
│           │     ColumnType:
│           │       ColumnID: 2
│           │       IsNullable: true
│           │       TableID: 106
│           │       TypeT:
│           │         Type:
│           │           family: IntFamily
│           │           oid: 20
│           │           width: 64
│           │
│           ├── • MakeAddedIndexDeleteOnly
│           │     Index:
│           │       ConstraintID: 1
│           │       IndexID: 2
│           │       IsUnique: true
│           │       KeyColumnDirections:
│           │       - 0
│           │       KeyColumnIDs:
│           │       - 1
│           │       SourceIndexID: 1
│           │       StoringColumnIDs:
│           │       - 2
│           │       TableID: 106
│           │
│           ├── • SetJobStateOnDescriptor
│           │     DescriptorID: 106
│           │     Initialize: true
│           │
│           └── • CreateSchemaChangerJob
│                 Authorization:
│                   UserName: root
│                 DescriptorIDs:
│                 - 106
│                 JobID: 1
│                 RunningStatus: PostCommitPhase stage 1 of 4 with 2 MutationType ops pending
│                 Statements:
│                 - statement: ALTER TABLE foo ADD COLUMN j INT8
│                   redactedstatement: ALTER TABLE ‹test›.public.‹foo› ADD COLUMN ‹j› INT8
│                   statementtag: ALTER TABLE
│
├── • PostCommitPhase
│   │
│   ├── • Stage 1 of 4 in PostCommitPhase
│   │   │
│   │   ├── • 2 elements transitioning toward PUBLIC
│   │   │   │
│   │   │   ├── • Column:{DescID: 106, ColumnID: 2}
│   │   │   │   │ DELETE_ONLY → WRITE_ONLY
│   │   │   │   │
│   │   │   │   └── • Precedence dependency from WRITE_ONLY PrimaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 1}
│   │   │   │         rule: "column depends on primary index"
│   │   │   │
│   │   │   └── • PrimaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 1}
│   │   │         DELETE_ONLY → WRITE_ONLY
│   │   │
│   │   └── • 4 Mutation operations
│   │       │
│   │       ├── • MakeAddedIndexDeleteAndWriteOnly
│   │       │     IndexID: 2
│   │       │     TableID: 106
│   │       │
│   │       ├── • MakeAddedColumnDeleteAndWriteOnly
│   │       │     ColumnID: 2
│   │       │     TableID: 106
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 106
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 2 of 4 with 1 BackfillType op pending
│   │
│   ├── • Stage 2 of 4 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • PrimaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 1}
│   │   │         WRITE_ONLY → BACKFILLED
│   │   │
│   │   └── • 1 Backfill operation
│   │       │
│   │       └── • BackfillIndex
│   │             IndexID: 2
│   │             SourceIndexID: 1
│   │             TableID: 106
│   │
│   ├── • Stage 3 of 4 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • PrimaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 1}
│   │   │         BACKFILLED → VALIDATED
│   │   │
│   │   └── • 1 Validation operation
│   │       │
│   │       └── • ValidateUniqueIndex
│   │             IndexID: 2
│   │             TableID: 106
│   │
│   └── • Stage 4 of 4 in PostCommitPhase
│       │
│       ├── • 2 elements transitioning toward ABSENT
│       │   │
│       │   ├── • PrimaryIndex:{DescID: 106, IndexID: 1, ConstraintID: 1}
│       │   │     PUBLIC → VALIDATED
│       │   │
│       │   └── • IndexName:{DescID: 106, Name: foo_pkey, IndexID: 1}
│       │       │ PUBLIC → ABSENT
│       │       │
│       │       └── • Precedence dependency from VALIDATED PrimaryIndex:{DescID: 106, IndexID: 1, ConstraintID: 1}
│       │             rule: "dependents removed after index no longer public"
│       │
│       ├── • 4 elements transitioning toward PUBLIC
│       │   │
│       │   ├── • Column:{DescID: 106, ColumnID: 2}
│       │   │   │ WRITE_ONLY → PUBLIC
│       │   │   │
│       │   │   ├── • SameStagePrecedence dependency from PUBLIC ColumnName:{DescID: 106, Name: j, ColumnID: 2}
│       │   │   │     rule: "column named right before column becomes public"
│       │   │   │
│       │   │   └── • Precedence dependency from PUBLIC PrimaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 1}
│       │   │         rule: "column depends on primary index"
│       │   │
│       │   ├── • ColumnName:{DescID: 106, Name: j, ColumnID: 2}
│       │   │   │ ABSENT → PUBLIC
│       │   │   │
│       │   │   └── • Precedence dependency from DELETE_ONLY Column:{DescID: 106, ColumnID: 2}
│       │   │         rule: "column existence precedes column dependents"
│       │   │
│       │   ├── • PrimaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 1}
│       │   │   │ VALIDATED → PUBLIC
│       │   │   │
│       │   │   ├── • SameStagePrecedence dependency from VALIDATED PrimaryIndex:{DescID: 106, IndexID: 1, ConstraintID: 1}
│       │   │   │     rule: "primary index swap"
│       │   │   │
│       │   │   └── • SameStagePrecedence dependency from PUBLIC IndexName:{DescID: 106, Name: foo_pkey, IndexID: 2}
│       │   │         rule: "index named right before index becomes public"
│       │   │
│       │   └── • IndexName:{DescID: 106, Name: foo_pkey, IndexID: 2}
│       │       │ ABSENT → PUBLIC
│       │       │
│       │       └── • Precedence dependency from DELETE_ONLY PrimaryIndex:{DescID: 106, IndexID: 2, ConstraintID: 1}
│       │             rule: "index existence precedes index dependents"
│       │
│       └── • 8 Mutation operations
│           │
│           ├── • MakeDroppedPrimaryIndexDeleteAndWriteOnly
│           │     IndexID: 1
│           │     TableID: 106
│           │
│           ├── • SetIndexName
│           │     IndexID: 1
│           │     Name: crdb_internal_index_1_name_placeholder
│           │     TableID: 106
│           │
│           ├── • SetIndexName
│           │     IndexID: 2
│           │     Name: foo_pkey
│           │     TableID: 106
│           │
│           ├── • MakeAddedPrimaryIndexPublic
│           │     IndexID: 2
│           │     TableID: 106
│           │
│           ├── • SetColumnName
│           │     ColumnID: 2
│           │     Name: j
│           │     TableID: 106
│           │
│           ├── • MakeColumnPublic
│           │     ColumnID: 2
│           │     TableID: 106
│           │
│           ├── • SetJobStateOnDescriptor
│           │     DescriptorID: 106
│           │
│           └── • UpdateSchemaChangerJob
│                 IsNonCancelable: true
│                 JobID: 1
│                 RunningStatus: PostCommitNonRevertiblePhase stage 1 of 2 with 1 MutationType op pending
│
└── • PostCommitNonRevertiblePhase
    │
    ├── • Stage 1 of 2 in PostCommitNonRevertiblePhase
    │   │
    │   ├── • 1 element transitioning toward ABSENT
    │   │   │
    │   │   └── • PrimaryIndex:{DescID: 106, IndexID: 1, ConstraintID: 1}
    │   │         VALIDATED → DELETE_ONLY
    │   │
    │   └── • 3 Mutation operations
    │       │
    │       ├── • MakeDroppedIndexDeleteOnly
    │       │     IndexID: 1
    │       │     TableID: 106
    │       │
    │       ├── • SetJobStateOnDescriptor
    │       │     DescriptorID: 106
    │       │
    │       └── • UpdateSchemaChangerJob
    │             IsNonCancelable: true
    │             JobID: 1
    │             RunningStatus: PostCommitNonRevertiblePhase stage 2 of 2 with 2 MutationType ops pending
    │
    └── • Stage 2 of 2 in PostCommitNonRevertiblePhase
        │
        ├── • 1 element transitioning toward ABSENT
        │   │
        │   └── • PrimaryIndex:{DescID: 106, IndexID: 1, ConstraintID: 1}
        │       │ DELETE_ONLY → ABSENT
        │       │
        │       └── • Precedence dependency from ABSENT IndexName:{DescID: 106, Name: foo_pkey, IndexID: 1}
        │             rule: "dependents removed before index"
        │
        └── • 4 Mutation operations
            │
            ├── • CreateGcJobForIndex
            │     IndexID: 1
            │     StatementForDropJob:
            │       Statement: ALTER TABLE test.public.foo ADD COLUMN j INT8
            │     TableID: 106
            │
            ├── • MakeIndexAbsent
            │     IndexID: 1
            │     TableID: 106
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 106
            │     JobID: 1
            │
            └── • UpdateSchemaChangerJob
                  IsNonCancelable: true
                  JobID: 1
                  RunningStatus: all stages completed




statement ok
ALTER TABLE foo ADD COLUMN j INT

statement ok
INSERT INTO foo VALUES (1, 1)

query II rowsort
SELECT * FROM foo
----
1  1

statement ok
DROP TABLE foo;

subtest multi_add_column

statement ok
CREATE TABLE foo (i INT PRIMARY KEY)

statement ok
SET use_declarative_schema_changer = 'unsafe_always'

statement ok
BEGIN

statement ok
ALTER TABLE foo ADD COLUMN j INT

statement ok
ALTER TABLE foo ADD COLUMN k INT

statement ok
COMMIT

statement ok
INSERT INTO foo VALUES (1, 2, 3)

query III rowsort
SELECT * FROM foo
----
1  2  3

statement ok
SET use_declarative_schema_changer = 'unsafe'

statement ok
DROP TABLE foo;

subtest add_column_default

statement ok
CREATE TABLE foo (i INT PRIMARY KEY)

statement ok
INSERT INTO foo(i) VALUES (0)

query I rowsort
SELECT * FROM foo
----
0

statement ok
ALTER TABLE foo ADD COLUMN j INT DEFAULT 1

statement ok
INSERT INTO foo VALUES (1, 1)

statement ok
INSERT INTO foo(i) VALUES (2)

query II rowsort
SELECT * FROM foo
----
0  1
1  1
2  1

statement ok
DROP TABLE foo

subtest add_column_computed

statement ok
CREATE TABLE foo (i INT PRIMARY KEY)

statement ok
INSERT INTO foo VALUES (0);

statement ok
ALTER TABLE foo ADD COLUMN j INT AS (i+1) STORED

statement ok
INSERT INTO foo(i) VALUES (1)

query II rowsort
SELECT * FROM foo
----
0  1
1  2

statement ok
DROP TABLE foo

subtest add_column_families

statement ok
CREATE TABLE foo (i INT PRIMARY KEY)

statement ok
ALTER TABLE foo ADD COLUMN j INT CREATE FAMILY f2

statement ok
ALTER TABLE foo ADD COLUMN k INT FAMILY f2

statement ok
INSERT INTO foo VALUES (1, 2, 3)

query III rowsort
SELECT * FROM foo
----
1  2  3

statement ok
DROP TABLE foo

subtest multi_table
subtest view_user_defined_types
subtest view_sanity
subtest drop_type_in_single_transaction
subtest drop_schema
subtest drop_database
subtest create-index
subtest create_index_on_dropping_column
subtest drop-type-sanity
subtest event-log
subtest names-with-escaped-chars
subtest drop-multiple-in-builder
subtest seq-back-ref
subtest fk-backref-cleanup
subtest validate-drops-with-multiple-constraints
subtest schema-dep-sanity
subtest validate-sequence-owner
subtest drop-type-closure
subtest empty-database
subtest schema-permission-error
