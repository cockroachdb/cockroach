# LogicTest: local local-vec-off

# TODO(sumeer): move these to opt/exec/execbuilder/testdata since logic tests
# are not supposed to change when a plan changes.

# EXPLAIN test cases for using invertedFilterer on an inverted geospatial index.

statement ok
CREATE TABLE geo_table2(
  k int,
  geom geometry,
  k_plus_one int,
  PRIMARY KEY (k, k_plus_one),
  INVERTED INDEX geom_index(geom)
)

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT k FROM geo_table2 WHERE ST_Intersects('POINT(3.0 3.0)'::geometry, geom)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMUNFK60AUfL9fscxLG9jbu2nvg-xTRVMNtE1NAiollJgcSjDNxt0NKCX_LkmEqkVw32bOnNmZc4R5KSEReUvvKmaNLtkiDFZs6z1slpf-mo2v_SiO7pYO-5A8D4I9qZ1Nn0qasvtbL_SYsbuisqQNZdaMR5vAX8fj2USw2UQ4IylvvGDlxeEj71YPTgKOSuW0Tg9kILdwkXDUWmVkjNIddewFfv4KKTiKqm5sRyccmdIEeYQtbEmQiLsgIaU56X8CHDnZtCh721oXh1S_zU95wRHVaWUk-wuORVFa0vJ7fOEKV5y_i_9neCQ_d5tPHXAEjZVs7iJpOVRjT8GNTfcE6bb89-VCMrWqDH3p9ZOzaBMOyvc0HNCoRme00Srrvxlg0O_1RE7GDlN3AH41jNqk_fMeAAD__yTPpoA=

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT k, k_plus_one FROM geo_table2 WHERE ST_Intersects('POINT(3.0 3.0)'::geometry, geom)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMUNFqo0AUfd-vGO5LIsxmx2QflnlyaU0rJDFVoS1BxOolSMyMnTtCS_Dfi1pI21DovJ1zzz1zzj0BPdcgIfZX_lXCWlOzZRSu2c5_2K7-Bxs2vQ7iJL5bOexdcuDskDV1S5lWOIr3qDObP9U4Z_e3fuQzslmlLBrCwtJ0sg2DTTJdzARbzIQzkfLGD9d-Ej3yfvXopMBB6RI3-REJ5A5cSDk0RhdIpE1PnQZBUL6AFBwq1bS2p1MOhTYI8gS2sjWChKQPEmFeovkjgEOJNq_qwbYx1TE3r945L3CIm1yRZL-Bw7KqLRr5Nb5whSsu37-_F3giP3bz5g5wCFsrmedybwFpx0G39pydbL5HkG7Hf94vQmq0IvxU7Ttn0aUcsNzjeEPSrSlwa3QxfDPCcNgbiBLJjlN3BIEaR13a_XoLAAD__zbMq5o=

query TTT
EXPLAIN SELECT k, k_plus_one FROM geo_table2 WHERE ST_Intersects('POINT(3.0 3.0)'::geometry, geom)
----
·               distribution  local
·               vectorized    false
render          ·             ·
 └── filter     ·             ·
      │         filter        st_intersects('010100000000000000000008400000000000000840', geom)
      └── scan  ·             ·
·               table         geo_table2@primary
·               spans         FULL SCAN

query TTT
EXPLAIN SELECT k, k_plus_one FROM geo_table2 WHERE ST_DFullyWithin('POINT(3.0 3.0)'::geometry, geom, 1)
----
·               distribution  local
·               vectorized    false
render          ·             ·
 └── filter     ·             ·
      │         filter        st_dfullywithin('010100000000000000000008400000000000000840', geom, 1.0)
      └── scan  ·             ·
·               table         geo_table2@primary
·               spans         FULL SCAN
