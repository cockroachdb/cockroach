# LogicTest: multiregion-9node-3region-3azs

query TT colnames
SHOW REGIONS FROM CLUSTER
----
region  zones
test1   {test1-az1,test1-az2,test1-az3}
test2   {test2-az1,test2-az2,test2-az3}
test3   {test3-az1,test3-az2,test3-az3}

statement ok
CREATE DATABASE region_test_db PRIMARY REGION "test1" SURVIVE ZONE FAILURE

statement ok
CREATE DATABASE multi_region_test_db PRIMARY REGION "test2" REGIONS "test1", "test3" SURVIVE REGION FAILURE

statement ok
CREATE DATABASE multi_region_test_explicit_primary_region_db PRIMARY REGION "test1" REGIONS "test1", "test2", "test3" SURVIVE REGION FAILURE


# Ensure that the region types were created for all the MR databases above.
query IITI colnames
SELECT * FROM system.namespace WHERE name='crdb_internal_region'
----
parentID  parentSchemaID  name                   id
53        29              crdb_internal_region  54
56        29              crdb_internal_region  57
59        29              crdb_internal_region  60

query TTTT colnames
SHOW ENUMS FROM region_test_db.public
----
schema  name                   values   owner
public  crdb_internal_region  {test1}  root

query TTTT colnames
SHOW ENUMS FROM multi_region_test_db.public
----
schema  name                   values               owner
public  crdb_internal_region  {test1,test2,test3}  root

query TTTT colnames
SHOW ENUMS FROM multi_region_test_explicit_primary_region_db.public
----
schema  name                   values               owner
public  crdb_internal_region  {test1,test2,test3}  root

statement ok
SELECT 'test1'::region_test_db.public.crdb_internal_region

statement error invalid input value for enum crdb_internal_region: "test2"
SELECT 'test2'::region_test_db.public.crdb_internal_region

statement ok
SELECT 'test1'::multi_region_test_db.public.crdb_internal_region

statement ok
SELECT 'test2'::multi_region_test_db.public.crdb_internal_region

statement error "multi_region_test_db.public.crdb_internal_region" is a multi-region enum and cannot be modified directly
DROP TYPE multi_region_test_db.public.crdb_internal_region

statement error "multi_region_test_db.public.crdb_internal_region" is a multi-region enum and can't be modified using the alter type command
ALTER TYPE multi_region_test_db.public.crdb_internal_region ADD VALUE 'test3'

statement error region "region_no_exists" does not exist\nHINT:.*valid regions: test1, test2, test3
CREATE DATABASE invalid_region_db PRIMARY REGION "region_no_exists" REGION "region_no_exists"

statement ok
CREATE DATABASE multi_region_test_survive_zone_failure_db PRIMARY REGION "test3" REGIONS "test1", "test2", "test3" SURVIVE ZONE FAILURE

query TTTTT colnames
SHOW DATABASES
----
database_name                                 owner  primary_region  regions              survival_goal
defaultdb                                     root   NULL            {}                   NULL
multi_region_test_db                          root   test2           {test1,test2,test3}  region
multi_region_test_explicit_primary_region_db  root   test1           {test1,test2,test3}  region
multi_region_test_survive_zone_failure_db     root   test3           {test1,test2,test3}  zone
postgres                                      root   NULL            {}                   NULL
region_test_db                                root   test1           {test1}              zone
system                                        node   NULL            {}                   NULL
test                                          root   NULL            {}                   NULL

statement ok
USE multi_region_test_db

query TTBBT colnames
SHOW REGIONS FROM DATABASE
----
database              region  primary  is_region_active  zones
multi_region_test_db  test1   false    true              {test1-az1,test1-az2,test1-az3}
multi_region_test_db  test2   true     true              {test2-az1,test2-az2,test2-az3}
multi_region_test_db  test3   false    true              {test3-az1,test3-az2,test3-az3}

query TT
SHOW SURVIVAL GOAL FROM DATABASE
----
multi_region_test_db  region

query TTBBT colnames
SHOW REGIONS FROM DATABASE region_test_db
----
database        region  primary  is_region_active  zones
region_test_db  test1   true     true              {test1-az1,test1-az2,test1-az3}

query TT
SHOW SURVIVAL GOAL FROM DATABASE region_test_db
----
region_test_db  zone

statement error PRIMARY REGION must be specified if REGIONS are specified
CREATE DATABASE no_primary_region_db REGIONS "test1"

statement error at least 3 regions are required for surviving a region failure
CREATE DATABASE not_enough_regions_db PRIMARY REGION "test1" REGIONS "test1", "test2" SURVIVE REGION FAILURE

statement error region "region_no_exists" does not exist\nHINT:.*valid regions: test1, test2, test3
CREATE DATABASE invalid_region_db PRIMARY REGION "region_no_exists"

statement error region "test1" defined multiple times
CREATE DATABASE duplicate_region_name_db PRIMARY REGION "test1" REGIONS "test1", "test1"

statement ok
CREATE TABLE regional_primary_region_table (a int) LOCALITY REGIONAL BY TABLE IN PRIMARY REGION

statement ok
CREATE TABLE regional_implicit_primary_region_table (a int) LOCALITY REGIONAL BY TABLE

statement ok
CREATE TABLE regional_test3_table (a int) LOCALITY REGIONAL BY TABLE IN "test3"

statement error region "test4" is not available on database "multi_region_test_db"
CREATE TABLE regional_test4_table (a int) LOCALITY REGIONAL BY TABLE IN "test4"

statement ok
CREATE TABLE regional_by_row_table (a int) LOCALITY REGIONAL BY ROW

statement ok
CREATE TABLE global_table (a int) LOCALITY GLOBAL

statement ok
CREATE DATABASE new_db

statement ok
USE new_db

statement error cannot set locality on table with no multi-region configuration on the database
CREATE TABLE cannot_create_table_no_multiregion (a int) LOCALITY GLOBAL

statement error implementation pending
ALTER DATABASE new_db ADD REGION "us-west-1"

statement error implementation pending
ALTER DATABASE new_db DROP REGION "us-west-1"

statement error implementation pending
ALTER TABLE a SET LOCALITY REGIONAL BY ROW

statement error implementation pending
ALTER DATABASE primary_region_db PRIMARY REGION "test"
