# LogicTest: multiregion-9node-3region-3azs

query TTTT colnames
SHOW REGIONS
----
region          zones                   database_names  primary_region_of
ap-southeast-2  {ap-az1,ap-az2,ap-az3}  {}              {}
ca-central-1    {ca-az1,ca-az2,ca-az3}  {}              {}
us-east-1       {us-az1,us-az2,us-az3}  {}              {}

query TT colnames
SHOW REGIONS FROM CLUSTER
----
region          zones
ap-southeast-2  {ap-az1,ap-az2,ap-az3}
ca-central-1    {ca-az1,ca-az2,ca-az3}
us-east-1       {us-az1,us-az2,us-az3}

statement ok
CREATE DATABASE region_test_db PRIMARY REGION "ap-southeast-2" SURVIVE ZONE FAILURE

statement ok
CREATE DATABASE multi_region_test_db PRIMARY REGION "ca-central-1" REGIONS "ap-southeast-2", "us-east-1" SURVIVE REGION FAILURE

statement ok
CREATE DATABASE multi_region_test_explicit_primary_region_db PRIMARY REGION "ap-southeast-2" REGIONS "ap-southeast-2", "ca-central-1", "us-east-1" SURVIVE REGION FAILURE

query T
SELECT gateway_region()
----
ap-southeast-2

query T nodeidx=3
SELECT gateway_region()
----
ca-central-1

query T nodeidx=6
SELECT gateway_region()
----
us-east-1

# Ensure that the region types were created for all the MR databases above.
query IITI colnames
SELECT * FROM system.namespace WHERE name='crdb_internal_region'
----
parentID  parentSchemaID  name                   id
53        29              crdb_internal_region  54
56        29              crdb_internal_region  57
59        29              crdb_internal_region  60

query TTTT colnames
SHOW ENUMS FROM region_test_db.public
----
schema  name                   values   owner
public  crdb_internal_region  {ap-southeast-2}  root

query TTTT colnames
SHOW ENUMS FROM multi_region_test_db.public
----
schema  name                   values               owner
public  crdb_internal_region  {ap-southeast-2,ca-central-1,us-east-1}  root

query TTTT colnames
SHOW ENUMS FROM multi_region_test_explicit_primary_region_db.public
----
schema  name                   values               owner
public  crdb_internal_region  {ap-southeast-2,ca-central-1,us-east-1}  root

statement ok
SELECT 'ap-southeast-2'::region_test_db.public.crdb_internal_region

statement error invalid input value for enum crdb_internal_region: "ca-central-1"
SELECT 'ca-central-1'::region_test_db.public.crdb_internal_region

statement ok
SELECT 'ap-southeast-2'::multi_region_test_db.public.crdb_internal_region

statement ok
SELECT 'ca-central-1'::multi_region_test_db.public.crdb_internal_region

statement error "multi_region_test_db.public.crdb_internal_region" is a multi-region enum and cannot be modified directly
DROP TYPE multi_region_test_db.public.crdb_internal_region

statement error "multi_region_test_db.public.crdb_internal_region" is a multi-region enum and can't be modified using the alter type command
ALTER TYPE multi_region_test_db.public.crdb_internal_region ADD VALUE 'us-east-1'

statement error region "region_no_exists" does not exist\nHINT:.*valid regions: ap-southeast-2, ca-central-1, us-east-1
CREATE DATABASE invalid_region_db PRIMARY REGION "region_no_exists" REGION "region_no_exists"

statement ok
CREATE DATABASE multi_region_test_survive_zone_failure_db PRIMARY REGION "us-east-1" REGIONS "ap-southeast-2", "ca-central-1", "us-east-1" SURVIVE ZONE FAILURE

query TTTTT colnames
SHOW DATABASES
----
database_name                                 owner  primary_region  regions              survival_goal
defaultdb                                     root   NULL            {}                   NULL
multi_region_test_db                          root   ca-central-1           {ap-southeast-2,ca-central-1,us-east-1}  region
multi_region_test_explicit_primary_region_db  root   ap-southeast-2           {ap-southeast-2,ca-central-1,us-east-1}  region
multi_region_test_survive_zone_failure_db     root   us-east-1           {ap-southeast-2,ca-central-1,us-east-1}  zone
postgres                                      root   NULL            {}                   NULL
region_test_db                                root   ap-southeast-2           {ap-southeast-2}              zone
system                                        node   NULL            {}                   NULL
test                                          root   NULL            {}                   NULL

query TTT colnames
SHOW REGIONS FROM ALL DATABASES
----
database_name                                 regions              primary_region
defaultdb                                     {}                   NULL
multi_region_test_db                          {ap-southeast-2,ca-central-1,us-east-1}  ca-central-1
multi_region_test_explicit_primary_region_db  {ap-southeast-2,ca-central-1,us-east-1}  ap-southeast-2
multi_region_test_survive_zone_failure_db     {ap-southeast-2,ca-central-1,us-east-1}  us-east-1
postgres                                      {}                   NULL
region_test_db                                {ap-southeast-2}              ap-southeast-2
system                                        {}                   NULL
test                                          {}                   NULL

statement ok
USE multi_region_test_db

query TTBBT colnames
SHOW REGIONS FROM DATABASE
----
database              region          primary  is_region_active  zones
multi_region_test_db  ap-southeast-2  false    true              {ap-az1,ap-az2,ap-az3}
multi_region_test_db  ca-central-1    true     true              {ca-az1,ca-az2,ca-az3}
multi_region_test_db  us-east-1       false    true              {us-az1,us-az2,us-az3}

query TTTT colnames
SHOW REGIONS
----
region          zones                   database_names                                                                                                                primary_region_of
ap-southeast-2  {ap-az1,ap-az2,ap-az3}  {multi_region_test_db,multi_region_test_explicit_primary_region_db,multi_region_test_survive_zone_failure_db,region_test_db}  {multi_region_test_explicit_primary_region_db,region_test_db}
ca-central-1    {ca-az1,ca-az2,ca-az3}  {multi_region_test_db,multi_region_test_explicit_primary_region_db,multi_region_test_survive_zone_failure_db}                 {multi_region_test_db}
us-east-1       {us-az1,us-az2,us-az3}  {multi_region_test_db,multi_region_test_explicit_primary_region_db,multi_region_test_survive_zone_failure_db}                 {multi_region_test_survive_zone_failure_db}

query TT
SHOW SURVIVAL GOAL FROM DATABASE
----
multi_region_test_db  region

query TTBBT colnames
SHOW REGIONS FROM DATABASE region_test_db
----
database        region          primary  is_region_active  zones
region_test_db  ap-southeast-2  true     true              {ap-az1,ap-az2,ap-az3}

query TT
SHOW SURVIVAL GOAL FROM DATABASE region_test_db
----
region_test_db  zone

query TT
SHOW ZONE CONFIGURATION FOR DATABASE region_test_db
----
DATABASE region_test_db  ALTER DATABASE region_test_db CONFIGURE ZONE USING
                         range_min_bytes = 134217728,
                         range_max_bytes = 536870912,
                         gc.ttlseconds = 90000,
                         num_replicas = 3,
                         constraints = '{+region=ap-southeast-2: 1}',
                         lease_preferences = '[[+region=ap-southeast-2]]'

# copy of the previous test but using FROM instead of FOR
query TT
SHOW ZONE CONFIGURATION FROM DATABASE region_test_db
----
DATABASE region_test_db  ALTER DATABASE region_test_db CONFIGURE ZONE USING
                         range_min_bytes = 134217728,
                         range_max_bytes = 536870912,
                         gc.ttlseconds = 90000,
                         num_replicas = 3,
                         constraints = '{+region=ap-southeast-2: 1}',
                         lease_preferences = '[[+region=ap-southeast-2]]'

query TT
SHOW ZONE CONFIGURATION FOR DATABASE multi_region_test_db
----
DATABASE multi_region_test_db  ALTER DATABASE multi_region_test_db CONFIGURE ZONE USING
                               range_min_bytes = 134217728,
                               range_max_bytes = 536870912,
                               gc.ttlseconds = 90000,
                               num_replicas = 3,
                               constraints = '{+region=ap-southeast-2: 1, +region=ca-central-1: 1, +region=us-east-1: 1}',
                               lease_preferences = '[[+region=ca-central-1]]'

query TT
SHOW ZONE CONFIGURATION FOR DATABASE multi_region_test_explicit_primary_region_db
----
DATABASE multi_region_test_explicit_primary_region_db  ALTER DATABASE multi_region_test_explicit_primary_region_db CONFIGURE ZONE USING
                                                       range_min_bytes = 134217728,
                                                       range_max_bytes = 536870912,
                                                       gc.ttlseconds = 90000,
                                                       num_replicas = 3,
                                                       constraints = '{+region=ap-southeast-2: 1, +region=ca-central-1: 1, +region=us-east-1: 1}',
                                                       lease_preferences = '[[+region=ap-southeast-2]]'

query TT
SHOW ZONE CONFIGURATION FOR DATABASE multi_region_test_survive_zone_failure_db
----
DATABASE multi_region_test_survive_zone_failure_db  ALTER DATABASE multi_region_test_survive_zone_failure_db CONFIGURE ZONE USING
                                                    range_min_bytes = 134217728,
                                                    range_max_bytes = 536870912,
                                                    gc.ttlseconds = 90000,
                                                    num_replicas = 3,
                                                    constraints = '{+region=ap-southeast-2: 1, +region=ca-central-1: 1, +region=us-east-1: 1}',
                                                    lease_preferences = '[[+region=us-east-1]]'

statement error PRIMARY REGION must be specified if REGIONS are specified
CREATE DATABASE no_primary_region_db REGIONS "ap-southeast-2"

statement error at least 3 regions are required for surviving a region failure
CREATE DATABASE not_enough_regions_db PRIMARY REGION "ap-southeast-2" REGIONS "ap-southeast-2", "ca-central-1" SURVIVE REGION FAILURE

statement error region "region_no_exists" does not exist\nHINT:.*valid regions: ap-southeast-2, ca-central-1, us-east-1
CREATE DATABASE invalid_region_db PRIMARY REGION "region_no_exists"

statement error region "ap-southeast-2" defined multiple times
CREATE DATABASE duplicate_region_name_db PRIMARY REGION "ap-southeast-2" REGIONS "ap-southeast-2", "ap-southeast-2"

statement ok
CREATE TABLE regional_primary_region_table (a int) LOCALITY REGIONAL BY TABLE IN PRIMARY REGION

query T
SELECT create_statement FROM [SHOW CREATE TABLE regional_primary_region_table]
----
CREATE TABLE public.regional_primary_region_table (
                                                a INT8 NULL,
                                                FAMILY "primary" (a, rowid)
) LOCALITY REGIONAL BY TABLE IN PRIMARY REGION

query TT
SHOW ZONE CONFIGURATION FOR TABLE regional_primary_region_table
----
DATABASE multi_region_test_db  ALTER DATABASE multi_region_test_db CONFIGURE ZONE USING
                               range_min_bytes = 134217728,
                               range_max_bytes = 536870912,
                               gc.ttlseconds = 90000,
                               num_replicas = 3,
                               constraints = '{+region=ap-southeast-2: 1, +region=ca-central-1: 1, +region=us-east-1: 1}',
                               lease_preferences = '[[+region=ca-central-1]]'

statement ok
CREATE TABLE regional_implicit_primary_region_table (a int) LOCALITY REGIONAL BY TABLE

query T
SELECT create_statement FROM [SHOW CREATE TABLE regional_implicit_primary_region_table]
----
CREATE TABLE public.regional_implicit_primary_region_table (
                                                a INT8 NULL,
                                                FAMILY "primary" (a, rowid)
) LOCALITY REGIONAL BY TABLE IN PRIMARY REGION

query TT
SHOW ZONE CONFIGURATION FOR TABLE regional_implicit_primary_region_table
----
DATABASE multi_region_test_db  ALTER DATABASE multi_region_test_db CONFIGURE ZONE USING
                               range_min_bytes = 134217728,
                               range_max_bytes = 536870912,
                               gc.ttlseconds = 90000,
                               num_replicas = 3,
                               constraints = '{+region=ap-southeast-2: 1, +region=ca-central-1: 1, +region=us-east-1: 1}',
                               lease_preferences = '[[+region=ca-central-1]]'

statement ok
CREATE TABLE "regional_us-east-1_table" (a int) LOCALITY REGIONAL BY TABLE IN "us-east-1"

query T
SELECT create_statement FROM [SHOW CREATE TABLE "regional_us-east-1_table"]
----
CREATE TABLE public."regional_us-east-1_table" (
                                            a INT8 NULL,
                                            FAMILY "primary" (a, rowid)
) LOCALITY REGIONAL BY TABLE IN "us-east-1"

query TT
SHOW ZONE CONFIGURATION FOR TABLE "regional_us-east-1_table"
----
TABLE "regional_us-east-1_table"  ALTER TABLE "regional_us-east-1_table" CONFIGURE ZONE USING
                                 range_min_bytes = 134217728,
                                 range_max_bytes = 536870912,
                                 gc.ttlseconds = 90000,
                                 num_replicas = 3,
                                 constraints = '{+region=us-east-1: 1}',
                                 lease_preferences = '[[+region=us-east-1]]'

statement error region "test4" has not been added to database "multi_region_test_db"\nHINT: available regions: ap-southeast-2, ca-central-1, us-east-1
CREATE TABLE regional_test4_table (a int) LOCALITY REGIONAL BY TABLE IN "test4"

statement error REGIONAL BY ROW ON name is not yet supported
CREATE TABLE regional_by_row_table_on_col (a int) LOCALITY REGIONAL BY ROW ON a

statement ok
CREATE TABLE regional_by_row_table (a int) LOCALITY REGIONAL BY ROW

query T
SELECT create_statement FROM [SHOW CREATE TABLE regional_by_row_table]
----
CREATE TABLE public.regional_by_row_table (
                            a INT8 NULL,
                            FAMILY "primary" (a, rowid)
) LOCALITY REGIONAL BY ROW

query TT
SHOW ZONE CONFIGURATION FOR TABLE regional_by_row_table
----
TABLE regional_by_row_table  ALTER TABLE regional_by_row_table CONFIGURE ZONE USING
                             range_min_bytes = 134217728,
                             range_max_bytes = 536870912,
                             gc.ttlseconds = 90000,
                             num_replicas = 3,
                             constraints = '[]',
                             lease_preferences = '[]'

statement ok
CREATE TABLE global_table (a int) LOCALITY GLOBAL

query T
SELECT create_statement FROM [SHOW CREATE TABLE global_table]
----
CREATE TABLE public.global_table (
                   a INT8 NULL,
                   FAMILY "primary" (a, rowid)
) LOCALITY GLOBAL

query TT
SHOW ZONE CONFIGURATION FOR TABLE global_table
----
TABLE global_table  ALTER TABLE global_table CONFIGURE ZONE USING
                    range_min_bytes = 134217728,
                    range_max_bytes = 536870912,
                    gc.ttlseconds = 90000,
                    num_replicas = 3,
                    constraints = '{+region=ap-southeast-2: 1, +region=ca-central-1: 1, +region=us-east-1: 1}',
                    lease_preferences = '[[+region=ca-central-1]]'

query TTTTIT colnames
SHOW TABLES
----
schema_name  table_name                              type   owner  estimated_row_count  locality
public       global_table                            table  root   0                    GLOBAL
public       regional_by_row_table                   table  root   0                    REGIONAL BY ROW
public       regional_implicit_primary_region_table  table  root   0                    REGIONAL BY TABLE IN PRIMARY REGION
public       regional_primary_region_table           table  root   0                    REGIONAL BY TABLE IN PRIMARY REGION
public       regional_us-east-1_table                table  root   0                    REGIONAL BY TABLE IN "us-east-1"

statement ok
CREATE DATABASE new_db

statement ok
USE new_db

statement error database new_db is not multi-region enabled, but table cannot_create_table_no_multiregion has locality GLOBAL set
CREATE TABLE cannot_create_table_no_multiregion (a int) LOCALITY GLOBAL

statement ok
CREATE DATABASE alter_test_db primary region "ca-central-1"

statement ok
USE alter_test_db

query TTTT colnames
SHOW ENUMS FROM alter_test_db.public
----
schema  name                  values   owner
public  crdb_internal_region  {ca-central-1}  root

# Test adding regions before first region.
statement ok
ALTER DATABASE alter_test_db ADD REGION "ap-southeast-2"

query TTBBT colnames
show regions from database alter_test_db
----
database       region          primary  is_region_active  zones
alter_test_db  ap-southeast-2  false    true              {ap-az1,ap-az2,ap-az3}
alter_test_db  ca-central-1    true     true              {ca-az1,ca-az2,ca-az3}

query TTTT colnames
SHOW ENUMS FROM alter_test_db.public
----
schema  name                  values         owner
public  crdb_internal_region  {ap-southeast-2,ca-central-1}  root

query TT
SHOW ZONE CONFIGURATION FOR DATABASE alter_test_db
----
DATABASE alter_test_db  ALTER DATABASE alter_test_db CONFIGURE ZONE USING
                         range_min_bytes = 134217728,
                         range_max_bytes = 536870912,
                         gc.ttlseconds = 90000,
                         num_replicas = 3,
                         constraints = '{+region=ap-southeast-2: 1, +region=ca-central-1: 1}',
                         lease_preferences = '[[+region=ca-central-1]]'

# Test adding a region after first region.
statement ok
ALTER DATABASE alter_test_db ADD REGION "us-east-1"

query TTBBT colnames
show regions from database alter_test_db
----
database       region          primary  is_region_active  zones
alter_test_db  ap-southeast-2  false    true              {ap-az1,ap-az2,ap-az3}
alter_test_db  ca-central-1    true     true              {ca-az1,ca-az2,ca-az3}
alter_test_db  us-east-1       false    true              {us-az1,us-az2,us-az3}

query TTTT colnames
SHOW ENUMS FROM alter_test_db.public
----
schema  name                  values               owner
public  crdb_internal_region  {ap-southeast-2,ca-central-1,us-east-1}  root

query TT
SHOW ZONE CONFIGURATION FOR DATABASE alter_test_db
----
DATABASE alter_test_db  ALTER DATABASE alter_test_db CONFIGURE ZONE USING
                         range_min_bytes = 134217728,
                         range_max_bytes = 536870912,
                         gc.ttlseconds = 90000,
                         num_replicas = 3,
                         constraints = '{+region=ap-southeast-2: 1, +region=ca-central-1: 1, +region=us-east-1: 1}',
                         lease_preferences = '[[+region=ca-central-1]]'

# Failure testing for ADD REGION.
statement error region "test" does not exist
ALTER DATABASE alter_test_db ADD REGION "test"

statement error region "ap-southeast-2" already added to database
ALTER DATABASE alter_test_db ADD REGION "ap-southeast-2"

statement error cannot add region
ALTER DATABASE new_db ADD REGION "us-west-1"

statement error implementation pending
ALTER DATABASE new_db DROP REGION "us-west-1"

statement error implementation pending
ALTER TABLE a SET LOCALITY REGIONAL BY ROW

statement error implementation pending
ALTER DATABASE primary_region_db PRIMARY REGION "test"
