statement error value type void cannot be used for table columns
CREATE TABLE invalid_void_table(col void)

query T
SELECT 'this will be ignored'::void
----
路

query T
select row (''::void, 2::int)
----
("",2)

query T
SELECT ('this will disappear too'::text)::void
----
路

query T
SELECT ('gone'::void)::text
----
路

query T
SELECT crdb_internal.void_func()
----
路
# Regression test for #83754. Note that Postgres is inconsistent
# in evaluation. For example, `SELECT ''::VOID IS DISTINCT FROM NULL::UNKNOWN;`
# errors out, but `SELECT ''::VOID IS DISTINCT FROM NULL;` does not.
# This is due to normalization into an IS NOT NULL op when one operand is NULL.
# The NULL with type cast is not recognized as NULL.
query B
SELECT ''::VOID IS DISTINCT FROM NULL
----
true

query B
SELECT ''::VOID IS DISTINCT FROM NULL::UNKNOWN
----
true

# Regression test for #93572. This should not fail with an internal error.
query B
WITH tab(x) AS (VALUES ('':::VOID)) SELECT x IS NULL FROM tab
----
false

query B
WITH tab(x) AS (VALUES (NULL:::VOID)) SELECT x IS NULL FROM tab
----
true

query B
WITH tab(x) AS (VALUES ('':::VOID)) SELECT x IS NOT NULL FROM tab
----
true

query B
WITH tab(x) AS (VALUES (NULL:::VOID)) SELECT x IS NOT NULL FROM tab
----
false
