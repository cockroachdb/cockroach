# LogicTest: local

statement ok
CREATE TABLE alternate (
    a INT,
    b INT,
    c INT,
    d INT,
    e INT,
    f INT,
    PRIMARY KEY (d, a, b),
    INDEX second (d, e, f),
    INDEX third (a, d, e, f)
)

statement ok
CREATE TABLE simple (
    a INT PRIMARY KEY, 
    b INT,
    c INT,
    d INT,
    INDEX second (b),
    INDEX third (b, c)
)

statement ok
INSERT INTO alternate values (1, 1, 1, 1, 1, 1), (2, 2, 2, 2, 1, 2), (3, 2, 2, 2, 1, 5)

query IIIIII
SELECT a, b, c, d, e, f FROM alternate where d > 1 and d < 3 and e = 1
----
2  2  2  2  1  2
3  2  2  2  1  5

query T
EXPLAIN (OPT) SELECT * FROM simple where b > 1
----
select
 ├── scan simple
 └── filters
      └── b > 1

query T
EXPLAIN (OPT, VERBOSE) SELECT a, b, c, d, e, f FROM alternate where d > 1 and d < 3 and e = 1
----
index-join alternate
 ├── columns: a:1 b:2 c:3 d:4 e:5 f:6
 ├── stats: [rows=0.099, distinct(1)=0.099, null(1)=0, distinct(2)=0.099, null(2)=0, distinct(4)=0.099, null(4)=0, distinct(5)=0.099, null(5)=0]
 ├── cost: 0.55955
 ├── key: (1,2)
 ├── fd: ()-->(4,5), (1,2)-->(3,6)
 ├── prune: (1-3,6)
 └── scan alternate@second
      ├── columns: a:1 b:2 d:4 e:5 f:6
      ├── constraint: /4/5/6/1/2: [/2/1 - /2/1]
      ├── stats: [rows=0.099, distinct(1)=0.099, null(1)=0, distinct(2)=0.099, null(2)=0, distinct(4)=0.099, null(4)=0, distinct(5)=0.099, null(5)=0]
      ├── cost: 0.1288
      ├── key: (1,2)
      └── fd: ()-->(4,5), (1,2)-->(6)

statement ok
SET OPTIMIZER_ALTERNATE = 1

query IIIIII
SELECT a, b, c, d, e, f FROM alternate where d > 1 and d < 3 and e = 1
----
2  2  2  2  1  2
3  2  2  2  1  5

query T
EXPLAIN (OPT) SELECT * FROM simple where b > 1
----
index-join simple
 └── scan simple@second
      └── constraint: /2/1: [/2 - ]

query T
EXPLAIN (OPT, VERBOSE) SELECT a, b, c, d, e, f FROM alternate where d > 1 and d < 3 and e = 1
----
select
 ├── columns: a:1 b:2 c:3 d:4 e:5 f:6
 ├── stats: [rows=0.099, distinct(1)=0.099, null(1)=0, distinct(2)=0.099, null(2)=0, distinct(4)=0.099, null(4)=0, distinct(5)=0.099, null(5)=0]
 ├── cost: 12.52
 ├── key: (1,2)
 ├── fd: ()-->(4,5), (1,2)-->(3,6)
 ├── prune: (1-3,6)
 ├── scan alternate
 │    ├── columns: a:1 b:2 c:3 d:4 e:5 f:6
 │    ├── constraint: /4/1/2: [/2 - /2]
 │    ├── stats: [rows=10, distinct(1)=9.5617925, null(1)=0, distinct(2)=9.5617925, null(2)=0, distinct(4)=1, null(4)=0]
 │    ├── cost: 12.41
 │    ├── key: (1,2)
 │    └── fd: ()-->(4), (1,2)-->(3,5,6)
 └── filters
      └── e = 1 [outer=(5), constraints=(/5: [/1 - /1]; tight), fd=()-->(5)]


statement ok
SET OPTIMIZER_ALTERNATE = 2

query T
EXPLAIN (OPT, VERBOSE) SELECT a, b, c, d, e, f FROM alternate where d > 1 and d < 3 and e = 1
----
select
 ├── columns: a:1 b:2 c:3 d:4 e:5 f:6
 ├── stats: [rows=0.099, distinct(1)=0.099, null(1)=0, distinct(2)=0.099, null(2)=0, distinct(4)=0.099, null(4)=0, distinct(5)=0.099, null(5)=0]
 ├── cost: 1250.03
 ├── key: (1,2)
 ├── fd: ()-->(4,5), (1,2)-->(3,6)
 ├── prune: (1-3,6)
 ├── scan alternate
 │    ├── columns: a:1 b:2 c:3 d:4 e:5 f:6
 │    ├── stats: [rows=1000, distinct(1)=100, null(1)=0, distinct(2)=100, null(2)=0, distinct(4)=100, null(4)=0, distinct(5)=100, null(5)=10]
 │    ├── cost: 1240.02
 │    ├── key: (1,2,4)
 │    ├── fd: (1,2,4)-->(3,5,6)
 │    └── prune: (1-6)
 └── filters
      ├── (d > 1) AND (d < 3) [outer=(4), constraints=(/4: [/2 - /2]; tight), fd=()-->(4)]
      └── e = 1 [outer=(5), constraints=(/5: [/1 - /1]; tight), fd=()-->(5)]


query IIIIII
SELECT a, b, c, d, e, f FROM alternate where d > 1 and d < 3 and e = 1
----
2  2  2  2  1  2
3  2  2  2  1  5

query T
EXPLAIN (OPT) SELECT * FROM simple where b > 1
----
index-join simple
 └── scan simple@third
      └── constraint: /2/3/1: [/2 - ]
