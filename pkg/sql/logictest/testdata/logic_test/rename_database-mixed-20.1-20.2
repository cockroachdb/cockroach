# TestLogic: local-mixed-20.1-20.2

statement ok
SET CLUSTER SETTING sql.cross_db_views.enabled = TRUE

query TT
SHOW DATABASES
----
defaultdb  root
postgres   root
system     node
test       root

query TTTT
SHOW GRANTS ON DATABASE test
----
test  crdb_internal       admin  ALL
test  crdb_internal       root   ALL
test  information_schema  admin  ALL
test  information_schema  root   ALL
test  pg_catalog          admin  ALL
test  pg_catalog          root   ALL
test  pg_extension        admin  ALL
test  pg_extension        root   ALL
test  public              admin  ALL
test  public              root   ALL

statement ok
CREATE TABLE kv (
  k INT PRIMARY KEY,
  v INT
)

statement ok
INSERT INTO kv VALUES (1, 2), (3, 4), (5, 6), (7, 8)

query II rowsort
SELECT * FROM kv
----
1 2
3 4
5 6
7 8

statement ok
SET sql_safe_updates = TRUE;

statement error RENAME DATABASE on current database
ALTER DATABASE test RENAME TO u

statement ok
SET sql_safe_updates = FALSE;
 ALTER DATABASE test RENAME TO u

statement error pgcode 42P01 relation "kv" does not exist
SELECT * FROM kv

statement error target database or schema does not exist
SHOW GRANTS ON DATABASE test

query TT
SHOW DATABASES
----
defaultdb  root
postgres   root
system     node
u          root

# check the name in descriptor is also changed
query TTTT
SHOW GRANTS ON DATABASE u
----
u  crdb_internal       admin  ALL
u  crdb_internal       root   ALL
u  information_schema  admin  ALL
u  information_schema  root   ALL
u  pg_catalog          admin  ALL
u  pg_catalog          root   ALL
u  pg_extension        admin  ALL
u  pg_extension        root   ALL
u  public              admin  ALL
u  public              root   ALL

statement ok
SET DATABASE = u

query II rowsort
SELECT * FROM kv
----
1 2
3 4
5 6
7 8

statement error empty database name
ALTER DATABASE "" RENAME TO u

statement error empty database name
ALTER DATABASE u RENAME TO ""

statement ok
ALTER DATABASE u RENAME TO u

statement ok
CREATE DATABASE t

statement error the new database name "u" already exists
ALTER DATABASE t RENAME TO u

statement ok
GRANT ALL ON DATABASE t TO testuser

user testuser

statement error must be owner of database t
ALTER DATABASE t RENAME TO v

query TT
SHOW DATABASES
----
t          root

user root

# Test that renames aren't allowed while views refer to any of a DB's tables,
# both for views in that database and for views in a different database.

statement ok
CREATE VIEW t.v AS SELECT k,v FROM u.kv

query TTTTI
SHOW TABLES FROM u
----
public  kv  table  root  0

statement error cannot rename database because relation "t.public.v" depends on relation "u.public.kv"
ALTER DATABASE u RENAME TO v

statement ok
DROP VIEW t.v

statement ok
ALTER DATABASE u RENAME TO v

statement ok
CREATE VIEW v.v AS SELECT k,v FROM v.kv

statement error cannot rename database because relation "v.public.v" depends on relation "v.public.kv"\s.*you can drop "v.public.v" instead
ALTER DATABASE v RENAME TO u

# Check that the default databases can be renamed like any other.
statement ok
ALTER DATABASE defaultdb RENAME TO w;
  ALTER DATABASE postgres RENAME TO defaultdb;
  ALTER DATABASE w RENAME TO postgres

query TT
SHOW DATABASES
----
defaultdb  root
postgres   root
system     node
t          root
v          root

query TTT
EXPLAIN ALTER DATABASE v RENAME TO x
----
路                distribution  local
路                vectorized    false
rename database  路             路

# Verify that the EXPLAIN above does not actually rename the database (#30543)
query TT colnames
SHOW DATABASES
----
database_name  owner
defaultdb      root
postgres       root
system         node
t              root
v              root

# Test dependent sequences on different databases upon renames
# return the appropriate error message, as well as testing
# renaming databases with sequences in the same DB is successful.
subtest regression_45411

statement ok
CREATE DATABASE db1; CREATE SEQUENCE db1.seq

statement ok
CREATE DATABASE db2; CREATE TABLE db2.tbl (a int DEFAULT nextval('db1.seq'))

statement error cannot rename database because relation "db2.public.tbl" depends on relation "db1.public.seq"\s.*you can drop the column default "a" of "db1.public.seq" referencing "db2.public.tbl"
ALTER DATABASE db1 RENAME TO db3

statement ok
DROP DATABASE db2 CASCADE; DROP DATABASE db1 CASCADE

statement ok
CREATE DATABASE db1; CREATE SEQUENCE db1.a_seq; CREATE SEQUENCE db1.b_seq; USE db1;

statement ok
CREATE TABLE db1.a (a int default nextval('a_seq') + nextval('b_seq') + 1); ALTER DATABASE db1 RENAME TO db2; USE db2;

statement error cannot rename database because relation "db2.public.a" depends on relation "db2.public.a_seq"\s.*you can drop the column default "a" of "db2.public.a_seq" referencing "db2.public.a" or modify the default to not reference the database name "db2"
DROP TABLE db2.a; CREATE TABLE db2.a (a int default nextval('a_seq') + nextval('db2.b_seq') + 1); ALTER DATABASE db2 RENAME TO db1

statement error cannot rename database because relation "db2.public.a" depends on relation "db2.public.a_seq"\s.*you can drop the column default "a" of "db2.public.a_seq" referencing "db2.public.a" or modify the default to not reference the database name "db2"
DROP TABLE db2.a; CREATE TABLE db2.a (a int default nextval('a_seq') + nextval('db2.public.b_seq') + 1); ALTER DATABASE db2 RENAME TO db1

statement ok
DROP TABLE db2.a; CREATE TABLE db2.a (a int default nextval('a_seq') + nextval('public.b_seq') + 1); ALTER DATABASE db2 RENAME TO db1

statement ok
USE defaultdb; DROP DATABASE db1 CASCADE
