# LogicTest: default distsql distsql-metadata

statement ok
CREATE TABLE t (
  k INT PRIMARY KEY,
  v INT
)

query TTT
EXPLAIN INSERT INTO t VALUES (1, 2)
----
count             ·     ·
 └── insert       ·     ·
      │           into  t(k, v)
      └── values  ·     ·
·                 size  2 columns, 1 row

query I
SELECT MAX("Level") FROM [EXPLAIN (VERBOSE) INSERT INTO t VALUES (1, 2)]
----
2

statement ok
INSERT INTO t VALUES (1, 2)

query TTT
EXPLAIN SELECT * FROM t
----
scan  ·      ·
·     table  t@primary
·     spans  ALL

query TITTTTT
EXPLAIN (VERBOSE) SELECT * FROM t
----
scan  0  scan  ·      ·          (k, v)  k!=NULL; key(k)
·     0  ·     table  t@primary  ·       ·
·     0  ·     spans  ALL        ·       ·

query TTT
EXPLAIN SELECT * FROM t WHERE k = 1 OR k = 3
----
scan  ·      ·
·     table  t@primary
·     spans  /1-/1/# /3-/3/#

query TITTTTT
EXPLAIN (VERBOSE) SELECT * FROM t WHERE k % 2 = 0
----
scan  0  scan  ·       ·            (k, v)  k!=NULL; key(k)
·     0  ·     table   t@primary    ·       ·
·     0  ·     spans   ALL          ·       ·
·     0  ·     filter  (k % 2) = 0  ·       ·

query TTT
EXPLAIN VALUES (1, 2, 3), (4, 5, 6)
----
values  ·     ·
·       size  3 columns, 2 rows

query TTT
EXPLAIN VALUES (1)
----
values  ·     ·
·       size  1 column, 1 row

query TTT
SELECT "Tree", "Field", "Description" FROM [EXPLAIN (VERBOSE) SELECT * FROM t WITH ORDINALITY LIMIT 1 OFFSET 1]
----
limit            ·       ·
 │               count   1
 │               offset  1
 └── ordinality  ·       ·
      └── scan   ·       ·
·                table   t@primary
·                spans   ALL
·                limit   2

query TTT
EXPLAIN SELECT DISTINCT v FROM t
----
distinct        ·      ·
 └── render     ·      ·
      └── scan  ·      ·
·               table  t@primary
·               spans  ALL

query TTT
SELECT "Tree", "Field", "Description" FROM [EXPLAIN (VERBOSE) SELECT DISTINCT v FROM t LIMIT 1 OFFSET 1]
----
limit                ·         ·
 │                   count     1
 │                   offset    1
 └── distinct        ·         ·
      └── render     ·         ·
           │         render 0  test.public.t.v
           └── scan  ·         ·
·                    table     t@primary
·                    spans     ALL

# Ensure EXPLAIN EXECUTE works properly

statement ok
PREPARE x AS SELECT DISTINCT v from t LIMIT $1

query TTT
SELECT "Tree", "Field", "Description" FROM [EXPLAIN (VERBOSE) EXECUTE x(3)]
----
limit                ·         ·
 │                   count     3
 └── distinct        ·         ·
      └── render     ·         ·
           │         render 0  test.public.t.v
           └── scan  ·         ·
·                    table     t@primary
·                    spans     ALL

query TTT
SELECT "Tree", "Field", "Description" FROM [
EXPLAIN (VERBOSE) SELECT * FROM [EXECUTE x(3)]
]
----
limit                ·         ·
 │                   count     3
 └── distinct        ·         ·
      └── render     ·         ·
           │         render 0  test.public.t.v
           └── scan  ·         ·
·                    table     t@primary
·                    spans     ALL

statement ok
CREATE TABLE tc (a INT, b INT, INDEX c(a))

query TITTTTT
EXPLAIN (VERBOSE) SELECT * FROM tc WHERE a = 10 ORDER BY b
----
sort                  0  sort        ·         ·                 (a, b)                                   a=CONST; +b
 │                    0  ·           order     +b                ·                                        ·
 └── render           1  render      ·         ·                 (a, b)                                   a=CONST
      │               1  ·           render 0  test.public.tc.a  ·                                        ·
      │               1  ·           render 1  test.public.tc.b  ·                                        ·
      └── index-join  2  index-join  ·         ·                 (a, b, rowid[hidden,omitted])            a=CONST; rowid!=NULL; key(rowid)
           ├── scan   3  scan        ·         ·                 (a[omitted], b[omitted], rowid[hidden])  a=CONST; rowid!=NULL; key(rowid)
           │          3  ·           table     tc@c              ·                                        ·
           │          3  ·           spans     /10-/11           ·                                        ·
           └── scan   3  scan        ·         ·                 (a, b, rowid[hidden,omitted])            ·
·                     3  ·           table     tc@primary        ·                                        ·
