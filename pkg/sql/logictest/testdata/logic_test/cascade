# LogicTest: default parallel-stmts distsql

### Basic Delete Cascade
#     a
#    / \
#   b1 b2
#  / \
# c1  c2

statement ok
CREATE TABLE a (
  id STRING PRIMARY KEY
);

statement ok
CREATE TABLE b1 (
  id STRING PRIMARY KEY
 ,delete_cascade STRING NOT NULL REFERENCES a ON DELETE CASCADE
);

statement ok
CREATE TABLE b2 (
  id STRING PRIMARY KEY
 ,delete_cascade STRING NOT NULL REFERENCES a ON DELETE CASCADE
);

statement ok
CREATE TABLE c1 (
  id STRING PRIMARY KEY
 ,delete_cascade STRING NOT NULL REFERENCES b1 ON DELETE CASCADE
);

statement ok
INSERT INTO a VALUES ('a-pk1');

statement ok
INSERT INTO b1 VALUES ('b1-pk1', 'a-pk1');

statement ok
INSERT INTO b1 VALUES ('b1-pk2', 'a-pk1');

statement ok
INSERT INTO b2 VALUES ('b2-pk1', 'a-pk1');

statement ok
INSERT INTO b2 VALUES ('b2-pk2', 'a-pk1');

statement ok
INSERT INTO c1 VALUES ('c1-pk1-b1-pk1', 'b1-pk1');

statement ok
INSERT INTO c1 VALUES ('c1-pk2-b1-pk1', 'b1-pk1');

statement ok
INSERT INTO c1 VALUES ('c1-pk3-b1-pk2', 'b1-pk2');

statement ok
INSERT INTO c1 VALUES ('c1-pk4-b1-pk1', 'b1-pk2');

# ON DELETE CASCADE
statement ok
DELETE FROM a WHERE id = 'a-pk1';

## Self Delete Cascade
# self <- self

statement ok
CREATE TABLE self (
  id INT PRIMARY KEY
 ,other_id INT REFERENCES self ON DELETE CASCADE
);

statement ok
INSERT INTO self VALUES (1, NULL);

statement ok
INSERT INTO self VALUES (2, 1);

statement ok
INSERT INTO self VALUES (3, 2);

statement ok
INSERT INTO self VALUES (4, 3);

statement ok
DELETE FROM self WHERE id = 1;

## Delete cascade loop between two tables
# loop_a <- loop_b
# loop_b <- loop_a

statement ok
CREATE TABLE loop_a (
  id STRING PRIMARY KEY
 ,cascade_delete STRING
 ,INDEX(cascade_delete)
);

statement ok
CREATE TABLE loop_b (
  id STRING PRIMARY KEY
 ,cascade_delete STRING REFERENCES loop_a ON DELETE CASCADE
);

statement ok
ALTER TABLE loop_a ADD CONSTRAINT cascade_delete_constraint
  FOREIGN KEY (cascade_delete) REFERENCES loop_b (id)
  ON DELETE CASCADE;

statement ok
INSERT INTO loop_a (id, cascade_delete) VALUES ('loop_a-pk1', NULL);

statement ok
INSERT INTO loop_b (id, cascade_delete) VALUES ('loop_b-pk1', 'loop_a-pk1');

statement ok
INSERT INTO loop_a (id, cascade_delete) VALUES ('loop_a-pk2', 'loop_b-pk1');

statement ok
INSERT INTO loop_b (id, cascade_delete) VALUES ('loop_b-pk2', 'loop_a-pk2');

statement ok
INSERT INTO loop_a (id, cascade_delete) VALUES ('loop_a-pk3', 'loop_b-pk2');

statement ok
INSERT INTO loop_b (id, cascade_delete) VALUES ('loop_b-pk3', 'loop_a-pk3');

statement ok
DELETE FROM loop_a WHERE id = 'loop_a-pk1';

## Delete cascade double self reference
# skipped until #20045 is fixed
# statement ok
# CREATE TABLE self_x2 (
#   x STRING PRIMARY KEY
#  ,y STRING UNIQUE REFERENCES self_x2(x) ON DELETE CASCADE
#  ,z STRING REFERENCES self_x2(y) ON DELETE CASCADE
#  ,INDEX(z)
# );

# statement ok
# INSERT INTO self_x2 (x, y, z) VALUES ('pk1', NULL, NULL);

# statement ok
# INSERT INTO self_x2 (x, y, z) VALUES ('pk2', 'pk1', NULL);

# statement ok
# INSERT INTO self_x2 (x, y, z) VALUES ('pk3', 'pk2', 'pk1');

# statement ok
# DELETE FROM self_x2 WHERE x = 'pk1';

## Delete cascade race
#         a
#        / \
#       b   c
#       |   |
#       |   d
#        \ /
#         e
statement ok
CREATE TABLE race_a (
  id STRING PRIMARY KEY
);

statement ok
CREATE TABLE race_b (
  id STRING PRIMARY KEY
 ,a_id STRING REFERENCES race_a ON DELETE CASCADE
);

statement ok
CREATE TABLE race_c (
  id STRING PRIMARY KEY
 ,a_id STRING REFERENCES race_a ON DELETE CASCADE
);

statement ok
CREATE TABLE race_d (
  id STRING PRIMARY KEY
 ,c_id STRING REFERENCES race_c ON DELETE CASCADE
);

statement ok
CREATE TABLE race_e (
  id STRING PRIMARY KEY
 ,b_id STRING REFERENCES race_b ON DELETE CASCADE
 ,d_id STRING REFERENCES race_d ON DELETE CASCADE
);

statement ok
INSERT INTO race_a (id) VALUES ('a1');

statement ok
INSERT INTO race_b (id, a_id) VALUES ('b1', 'a1');

statement ok
INSERT INTO race_c (id, a_id) VALUES ('c1', 'a1');

statement ok
INSERT INTO race_d (id, c_id) VALUES ('d1', 'c1');

statement ok
INSERT INTO race_e (id, b_id, d_id) VALUES ('e1', 'b1', 'd1');

statement ok
DELETE FROM race_a WHERE id = 'a1';