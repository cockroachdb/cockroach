# LogicTest: 5node

# These tests are different from explain_analyze because they require manual
# data placement.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i);

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT, FAMILY (k, w))

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify that EXPLAIN ANALYZE (DISTSQL) annotates plans with collected
# statistics.

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {1}       1
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {5}       5
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# This query verifies stat collection for the tableReader, mergeJoiner, and
# aggregator.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT kv.k, avg(kw.k) FROM kv JOIN kw ON kv.k=kw.k GROUP BY kv.k]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzkWVtv4kYYfe-vGM1TVmvWzNgkxNJKZLdpxZZAGpKq6QpFDp4SC2PT8ZBLo_z3ylwSYvB8hi3YHr_hy2Cf831zxmfOMw7_8bCFu6et06-XaMI99MtF5wx9P_3zvHXSbKOT9knr-q9TdPBzs3vZ_b31Ac1vHd5_GmrIvh8cDB8-DT_Mhg3v0bdOs42GD6jTnt6CPqPoOvr1onN1jr5cT0_2sIb9wGFte8RCbH3HBGuYYg0bWMMm1nAN9zQ85kGfhWHAo1uepwOaziO2qhp2_fFERKd7Gu4HnGHrGQtXeAxb-NK-9dgFsx3G9SrWsMOE7XrTxwzvG2Pujmz-hDXcHdt-aKGKHj24MxEWakSv8dsfSLgjZqFqOD-ajD0WIs5sx0LzO26fxOupOvqCNXxri_4dC1EwEePov6Inz0cuThHce9Hw7GgGafHKt0_ozg7v3r9sI7q_p-FQ2AOGLfKibcfBYYyDh1UOdFIUFmgiC2__E3CHcebE_-dj9OBUd60h9IzxAfsWuD7jOol1lcf-FgcN8vHDZ-4O7mY_38jUGhGz7JH1J8IN_GVaR_YjGrFRwJ-Q7XlB3xbMsVB1ymR0LezziE_kuOFw9Y4tuH7j0dikm04GA84Gtgi4Tmor5dFwZ0blvHVO2tc37c7lTfuq1TpokIiK7tXZQYNGv752rtqX899rOdl5B5k_1kFyemj1x-jpXp3dNCOCjOjogvkO49MmQg2qN4z_kbQ3QmopCJn46yhZy0Y7qARjncb6ZNvXriW-9uG71ybp9ZDAa4JOK7pRCD0k27JwlGJVKAwLNJGFPa4KRLVVAeim5VXhUK1VYeMOAlYFUvRVgaYXFppCXo2KbhZCWMi2LNRTyGthWKCJLOxRXqlq8gp007K8Hqklrxt3ECCvtOjyaqQXFiOFvJoVvVYIYSHbsnCcQl4LwwJNZGGP8mqoJq9ANy3La10ted24gwB5NYour2Z6YTFTyGutUghZIdtyUIPFtaITZPsOIigQd4wXgg-ayMceZdZUTWaBvlqW2WO1ZHbjDgJk1iy6zAIpwgULx4EfstgW8vp_rkZsMWfAZuyGwYT32TkP-tPHzA4703HT3RqHhWJ2lc4Omv7iUihskbwFvfN5VJ1JR3oA9UQAPhMPAR8izxbM7z_NESzOPtiuWEbmsJBx1_bcf-046MWQV2HuM_d-imrp4kKhX6_tDDExMoRMJJA3W5g2gly-KtMsq7wryGQDLaJ51CI5gHoiAFVLFtOi_ULelRYBkMtXZZpllXcFmcYhV5chv0dcjQ82pHyZOfuoWtPjcgCkquDiA0CulQ4yLV-VqYpVNqVKFkMcH1yTDqaH73UwcylbA_9wS4Nb3ILLESd7pYKULFODm03NlDS4wMRUcRvjaEuDW9wiyxEne6XcaJEcQKYGN5uaKWlwgYmp4jZGXfpldyw3uMdbGtzidogcscQR58bTAwhUtD5yyEoaXACyilUmK1GJzOEqId5kk6hEkSpvEq6UArLECOfm8xmCkGXZspqcKu5fkJW8RHlrC0BW0SYBkCVuOD-CBEDIsmw7EyRgcqq4iUFWkp53H4XElBtcspKaKO9wAchKhr4Q5mTvkBtbD0BQ0uRCmJV0ufIoVkmXW77sFoCspF0qYdwLYS5ASA9NTiXLVr4AF4CspF0qYeYLYS5AUg9NTiXLJk9xCRDjkvLluABkNV1uCaNfALPEFufH2Zcwy6Xly3JpfrPcjCCrmOUCkJV0uRDmEtZZYotz8yFN85vl7kyQypflApCVdLkQ5hLWWWKL8yNI8iyXAlkuLV-WC0BW0uVCmJW0SyUMfyHMBcjsaQmy3N7LT_8FAAD__wLHOYE=

# This query verifies stats collection for the hashJoiner, distinct and sorter.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT DISTINCT(kw.w) FROM kv JOIN kw ON kv.k = kw.w ORDER BY kw.w]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzkm9FzosgTx99_f8XUPG3qh4szoEms2qpkN7k693K6l6Subm_LByJzkVLBgzEml8r_fgXGGESmwSvD0HkLAsq3u_k03-nwSKO_J7RDr84vzr9ck3k4IT9d9n8lP87_-HZx2u2R097pxfc_z8mHs-7V9dVvFwfk-dB4u9v7ck0-jBcfFwfL08Z35Gu_2yPjBen3yPju45h8IvF-0r88O78kn78nWwNqUD9wRc-Zioh2flBGDcqpQS1qUJsatEUHBp2FwVBEURDGhzwmJ3Tde9ppGtTzZ3MZfzww6DAIBe08UunJiaAdeu3cTMSlcFwRmk1qUFdIx5skPzO-O5mF3tQJH6hBr2aOH3VIw4x_uD-XHXISX8YvvxPpTUWHNKPnrflsIiISCsftkOcjbh7ky0dH5DM16I0jhyMRkWAuZ_F3xb_8fObqI0YHTwZdbi0lrS755oGMnGiUvtiT-PiBQSPp3AraYU_GbjFob8RgkY2ByV5HgWscBZ4bhfX3zP0gdEUo3NQ3DeIzoUO2hPJnJxp9DTxfhCbbKKeJ-Et-OGEHn0LvdpT8lYqhuBfDufQC_3Uop849mYppED4QZzIJho4Uboc0k-jF-6JhGMeQuF40zh6xQ3zXsbPKVNCZF0nPH0qTtTIJ2UHa3gvD_g-FoZLPmxXJX0trlcnbVRBKEZo8k7X_a1iR7QJJ25ayRM7WvPWCRjAzrY2kbdVd4MpbuVd-mLpyVpzGDO5IJm-YVg17UokoHBboSako1KcnsTfuSQxRTwIqaN2T2jXsSeUKQ9mTmGY9CcjbqidlsqZ_T-LFmcYLkN1qmHYNyV4iCkcFyJ6KQn3Izt-Y7BwR2YEKWpP9sIZkL1cYSrJzzcgO5G1F9kzW9Ce7VZxpVgGy2w2zVUOyl4jCcQGyp6JQH7Jbb0x2CxHZgQpak_2ohmQvVxhKsluakR3I24rsmazpT3a7ONPsAmRvNWrI9RIxaMFcb5iMOL5LGAnkSIQ1JLz9xoS3EREeqKU14Y9rSPhyhaEkvK0Z4YG8rQifyZr-hAdmIJcimgV-JDbv6q3f3IyTKtxbsayAKJiHQ_EtDIbJzyw3-8l5yTqXKyK53MuXG11_tSuSjswfN-w9eE2agKu4gONcAb6QiyAck4kjhT98eFaw-nThePK1MldEIvScifePsyl6dcpLTxgK7y5R9Wrnqjm87NubYtaqUDJTSC7XE0tVKXt3WeaHCCWzEiziOrJILeA4VwDWlG2w6G0l74tFQJWyd5flDRbhkMw3JTdfS7ZSipubJ1vKeNmaPVRtqXG1AIax3wKSMfZbtWRuvT_JGO2CrSRZS02ylvLkdjpcmye31QxNU6RZOQe3xO5wR3dc32pRK86_P2qSskrdcTU5Q-mOAclVdut9-Y6jHd1xfZOsVpxvp7VhkVpApe64mpyhdMeA5Crd8b5YdKx8smNN9UMlU69t5vvj-tYIIFnhqLVZE4AkYHTIgGaUFhnSjNEjs8wKZxpoHACaerWwjfBplAErKRiLRC0Z5X0BrIrmu2ltnsGhQq3SHVd1c6Js1Zl1TvT-GJCMct6slqyw1PoACSjUKi3y3oAEaMY4QWbq2QlrA8-UmekJfpOsloxy7Axpzm_V-iwMqCXgNMmAZpRmIDN0SQPtCABaZp0Uv0nOrJPiN8lqyVXeFxVlGeXIGaps3dazd5CA0STzMq974HgMByRXaZL3BSRAMsq5M1TZ-a5aGyBBEjCaZK4evHBg8MIzgxf0JhmQjNIkQ5pRtmq1ZoWr1mZhAJKA0STzzOglDTQbAJr6v7UxmmSeWSfVxiRXJBnlfaGWjNIkQ5WNslUDmnVbz94mAVjbxegY1ZIxTpIByThNMlDZGP87G9Kc76r1AZJ68MKBwQtX_4M6SpMMvHmBsvMCmlGaZODdC4yjZ0izbu9obnvcUL8_YgHvj1iZhVJ8Jnnw9L9_AwAA__9oRax-

# This query verifies stats collection for WITH ORDINALITY and the hashJoiner.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT * FROM kv WITH ORDINALITY AS a, kv WITH ORDINALITY AS b]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMUc-P0kAUvvtXvLyTmjFLS_Ewp6KL2SrCCo26bnoYOi-7E9pOnZluIIT_3bRFBQRcNCYe3_feN9-PWaH9miHH6WA4eB1DZTJ4Mxm_h9vB5-thPxpBf9Qf3nwZwNPLaBpPPwyfweb0eXs4f4BPUXwF48llNOoPo_gG-lMQ7MhiliDDQksaiZws8lv0MGFYGp2StdrU0Ko5iOQCeYehKsrK1XDCMNWGkK_QKZcRcozFLKMJCUnmooMMJTmhsubZ-UNYGpULs0SG01IUlsMLZPjuIziVE4eO3UxVmZEFQ0Jy6LXYbOl-QEEHXiHDmXDpPVnQlSsrx6GW21C_Qz1M1gzbaWPYOnFHyL01e3yosZGqEJlyywtvNxMtKK2c0sV2hL8y5p9jbLtt_z9uu_uHbXf_ddvBUWM__VSFNpIMyR0zSc383cmBdFfC3r_VqiBzEeymG9dWQ4-FPgu7LAxY2GPhS2SHY-diATnl2ixBZJlOhSPJof2remdTUxcDUtn5rxePKM0_3lrvnO-ckC11YWm_vYMvd-rKSN5R-wVWVyala6PTRqYdxw2vASRZ1269doiKdlUb3CZ7J8nBDtnbJ_snyd3Tyt0zlP19cnCS3NtTTtZPvgUAAP__PpkGpQ==

# Verify that EXPLAIN ANALYZE on an unsupported query doesn't return an error.
statement ok
EXPLAIN ANALYZE (DISTSQL) SHOW QUERIES;

statement ok
EXPLAIN ANALYZE (DISTSQL) EXPLAIN SELECT 1

# This query verifies support for zeroNode in DistSQL.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT sum(k) FROM kv WHERE FALSE]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkF9LwzAUxd_9FOE-dRBY42OenFqxsH-u8w-MPIT2WseyZuYmIpR-d2kj6ISJPt5zzzm_5LZArwYkFNk0u1qz4Ay7WS1mbJM9LaeTfM6S67xYF3fTEfu0UNgnu1F07d7Y4222ytizNoQKODS2wrneI4HcgADF4eBsiUTW9VI7GPLqHWTKYdscgu9lxaG0DkG24LfeIEh40CYgjVPgUKHXWzM0puySJSkrX0KzoxGojoMN_quFvK4RZNrxv5Mmde2w1t66sTimFfez5EKcxoj_YFZIB9sQHiFOf0BxwKrGeDSywZW4dLYcMHFcDLlBqJB83Io45E1c9Q_8Hha_hs9_hFV39hEAAP__TsavHw==

# This query verifies stat collection for the tableReader and windower.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT avg(k) OVER () FROM kv]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzklN9v2jAQx9_3V1j3BJIRBMI0-alsYxMaKx1U3Y8qD2586iycOLMdWlbxv09xEga0XdM3tD76zl9__bk73R3YXwoYLMbT8btzkhtFPsxnn8nl-NvZdDQ5JaPT0fT7jzFpvZ8szhdfpm1SXeWr69ayTWYX4zlptUvVchUBhVQLPOUJWmCXEACFPlAYAIUQKAwhopAZHaO12hRX7rxgIm6B9SjINMtdEY4oxNogsDtw0ikEBuf8SuEcuUDT7QEFgY5L5W2Wq5PMyISbNVBYZDy1jHS6hfEsd4ycFN_4dEGcTJCRnq1OeabQEoNcMFLduFq7begNeQsUrriLf6IlOndZ8VbhXCnrUADRhkJ5qv5uHb9GYMGGPsL3FytPtRFoUOwhRZsHKvBVpkLfoOkO9_FHFx9bJ0F7i1uAe6eKkZHhNmIdV2q3Egm_JQkm2qwJV0rH3KFgpOfhi5yNTVECIqRd3r9xUIrCB28xzp3U6a7L_TI-VrP-Xs2C5jMRPD0T3X6nOziyqeg3J-w3IBx0uuGREQ6aEw4aEIYdP__HRBg2JwwbEA47R8b3xGaeo810avFggz38cq_YbCiusVyDVucmxjOjY29THmde5wMCrSuzQXmYpD7lP7grDv4pfr0n7h2K-89x9iieClJ0N9osieIO03hdtaiO3nDpdlsn0KKRXMnf_HA_1pJta2OUK6zaWyfrHte55_V5n3jw4ojDF0c8_P-Jo82rPwEAAP__YXJ_wA==

# Very simple query to make it easier to spot regressions when rewriting results
# in test files.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT k FROM kv WHERE k = 0];
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkE9r4zAQxe_7KYbZyy6oWL4KCklbl5q6SWqH_gs-KPaQGjuWKsmhIfi7F1uG0EOhx_ebN096c0L70aDALEqi6zV0poHbdPkAm-hllczjBcwX8-T1LYJ_N3G2zh6T_zBZa2-sD_B8F6UR1HAJPEeGrSppIfdkUWwwxJyhNqoga5UZ0Gk0xOUnCs6wanXnBpwzLJQhFCd0lWsIBa7ltqGUZEkm4MiwJCerZoytDzNtqr00R2SYadlaAQG_CHjwFxkuOydgFiLD-ydw1Z4EcDupTjdkwZAsBXDPtkd3RnCFDLfSFe9kQXVOD1mDcdo8o7xn6NX0f-vkjlCEPft9x5SsVq2lb_V-SuZ9zpDKHfk7WtWZglZGFeMzXi7HvRGUZJ2fhl7ErR_1ef_nKwAA__9iwp6v
