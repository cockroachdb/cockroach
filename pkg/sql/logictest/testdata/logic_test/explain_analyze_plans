# LogicTest: 5node

# These tests are different from explain_analyze because they require manual
# data placement.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i);

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT, FAMILY (k, w))

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify that EXPLAIN ANALYZE (DISTSQL) annotates plans with collected
# statistics.

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {1}       1
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {5}       5
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# This query verifies stat collection for the tableReader, mergeJoiner, and
# aggregator.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT kv.k, avg(kw.k) FROM kv JOIN kw ON kv.k=kw.k GROUP BY kv.k]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzkWV1v4kYUfe-vGM1TVmvWzBiyxNJKZLdpxZbANiRV0xWKHHtKLIxNx0M-GuW_V8aQEIPnGrbE9vgNfwz2OffOGZ85jzj8x8MmHpx0T76coxn30C9n_VP0_eTPb93jTg8d9467l3-doIOfO4Pzwe_dd2hx6_j2w1hD1u3oYHz3YfwuHja-RV_7nR4a36F-b34L-oSi6-jXs_7FN_T5cn5yiDXsBw7rWRMWYvM7JljDFGvYwBpuYA038VDDUx7YLAwDHt3yOB_Qce6xWdew609nIjo91LAdcIbNRyxc4TFs4nPr2mNnzHIY1-tYww4TluvNHzO-bU-5O7H4A9bwYGr5oYlqevTg_kyYqB29xm9_IOFOmInqYXxkB75gvnADP3FBzKYeCxFnlmOixdDrB_F8qoU-Yw1fW8K-YSEKZmIaPSR6pcXI5SmCh08ajo9irEss1w_oxgpvXqNoR_cPNRwKa8SwSZ603cg5TJBzt06OTkpPD02l5-V_Au4wzpzk_7yPHpzprg1MnzI-Yl8D12dcJ4k-9Njf4qBN3r_7xN3RTfzzhWWtHVHO7pk9S9I6se7RhE0C_oAszwtsSzDHRPU5k9G10OYRn8hxw_H6HTtw_cKjsU2bHY9GnI0sEXCdNNfKo-F-TOWip457l1e9_vlV76LbPWiTiIrBxelBm0a_vvQveueL3xs52XsHNX6sg-T00PqP0TO4OL3qRAQZ0dEZ8x3G502E2lRvG_8jaS-ENDMQMvM3UbKRjV5QC6Y6TfTJrq_dTH3tw1evTbILJYFXEZ3WdKPcQkl2pedjhnWk_PTQVHrecB0hqq0jQJutriOHaq0jW3cQsI6Qsq8jNLvi0AyCbNT0RrkVh-xKTyuDIJefHppKzxsKMlVNkIE2WxXkj2oJ8tYdBAgyLbsgG9kVx8ggyI2a3iy34pBd6TnKIMjlp4em0vOGgmyoJshAm60KckstQd66gwBBNsouyI3sitPIIMjNWrn1huxKThOW45pOkOU7iKBA3DBebqJoKlFvKMwN1YQZaLhVYT5SS5i37iBAmBtlF2YgDTlj4TTwQ5bYCt_8z_WILeaMWMxuGMy4zb7xwJ4_Jj7sz8fN95AcFor4Ko0POv7yUigskb6Vvvd5VI-lIzuAVioAn4m7gI-RZwnm2w8LBMuzd5YrVpE5LGTctTz3XysJejnkWZht5t7OUa1cXCr087W9ISZGjpCJBPJ2C9NWkKtXZZpnlfcFmWyhRbSIWiQH0EoFoGrJElr0tpD3pUUA5OpVmeZZ5X1BpknI9VXIrxHXk4MNKV-Ngn1UbehxOQBSV3DxASA3KweZVq_KVMUqN6RKlkCcHNyUDqaHr3UwdynbAP9wR4Nb3oLLEad7pZKULFeDm0_NlDS4wMRUcRvj444Gt7xFliNO90qF0SI5gFwNbj41U9LgAhNTxW2MlvTL7khucI92NLjl7RA5YokjLoynBxCoaH3kkJU0uABkFatM1qISmcNVQrzJNlGJIlXeJlypBGSJES7M5zMEIc-y5TU5Vdy_IGt5ifLWFoCsok0CIEvccHEECYCQZ9n2JkjA5FRxE4OsJT2vPgpJQ25wyVpqorzDBSArGfpCmNO9Q2FsPQBBSZMLYVbS5cqjWCVdbvWyWwCyknapgnEvhLkEIT00OZUsW_UCXACyknapgpkvhLkEST00OZUsmzzFJUCMS6qX4wKQ1XS5FYx-AcwSW1wcZ1_BLJdWL8ulxc1yc4KsYpYLQFbS5UKYK1hniS0uzIc0LW6WuzdBql6WC0BW0uVCmCtYZ4ktLo4gybNcCmS5tHpZLgBZSZcLYVbSLlUw_IUwlyCzpxXIcodPP_0XAAD__-OLi-0=

# This query verifies stats collection for the hashJoiner, distinct and sorter.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT DISTINCT(kw.w) FROM kv JOIN kw ON kv.k = kw.w ORDER BY kw.w]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzkm9Fv4sYTx99_f8Vqny76mTO7NiRBOim5S6pyTeGaRFWvJx4cexsswKb2EpJG-d8rQwixjXdsKuJl8hZjNvCZGc_X3x38SOO_x7RDr84vzr9ck1k0Jj9d9n8lP87_-HZx2u2R097pxfc_z8mHs-7V9dVvFwfk-a3Jcbf35Zp8GM0_zg-Wy0Z35Gu_2yOjOen3yOju44h8Isl50r88O78kn78vjgbUoEHoiZ4zETHt_KCMGpRTg1rUoDY1aIsODDqNQlfEcRglb3lcLOh697TTNKgfTGcyeXlgUDeMBO08UunLsaAdeu3cjMWlcDwRmU1qUE9Ixx8vPmZ0dzKN_IkTPVCDXk2dIO6Qhpl8cH8mO-Qk-Rq__E6kPxEd0oyXR24YSBFIPwwyJ-RsOhYxiYTjdcjz0psH-fLSEflMDXrjSHcoYhLO5DT5kOQrPa9cvcTo4Mmgy6Ml64rl5oEMnXiYpjhJ3j8waCydW0E77MnYLjjtTHDm-eCY7HV4-D6GhxeGZ_1_ZkEYeSISXuo_DZKV0Fs2xPhnJx5-Df1ARCbLFOBY_CU_nLCDT5F_O1z8lQquuBfuLBvKiXNPJmISRg_EGY9D15HC65DmInrJudiNkhgSz49H-XdsEd917KwqpXXmx9IPXGmyVi4hW6DtvDDs_1AYKnzerAl_jdaqkrerMJIiMnkua__XsCLbJZK2KWULnI1564WNcGpamaRt5C7xzVuF3_ww9c1Z-TbNYA0zecO0MKlYhfAcllCxVHgQqBh7YxVjiFQMKK21irX3UMWqFYZSxZhmKgbkbaViuazpr2K8fLPjJbTAapg2Ji2oEJ6jElqQCg8CLeBvrAUckRYApbXWgsM91IJqhaHUAq6ZFgB5W2lBLmv6a4FVvtlZJbTAbpgtTFpQITzHJbQgFR4EWmC9sRZYiLQAKK21FhztoRZUKwylFliaaQGQt5UW5LKmvxbY5ZudXUILWg1MSlAhOC1YCRomI07gEUZCORQRJk2w31gTbESaABTZWhOO91ATqhWGUhNszTQByNtKE3JZ018TgFnOpYinYRCL7FW98T83k6QK71YsKyAOZ5ErvkWhu_iY5WF_sW6x--aJWC7P8uVBN1idiqUji8cmOw9eky4aV3mA40KAQMh5GI3I2JEicB-eCVavzh1fvibzRCwi3xn7_zhZ6NWSF01whX-3oHp1ciUOL-d2RsxaNSIzBXI1TaxUpezdZZkfIkRmFXoR17EXqQGOCwGwpizTi94WeVe9CKhS9u6ynOlFOJB5Frn5GtlKETeziy1lvGzNbqo21LgagGHUWwAZo96qkbn1_pAx2gVb2cla6k7WUi5up8OVXdxW99B0F2nW3gc3xO5wS3e8v9WiJi6-PvYkZbW643pyhtIdA8h1qvWufMfRlu54f5OsJi6209r0IjVAre64npyhdMcAcp3ueFe96Fh5Z8ea6ptKpt7bLPbH-1sjALLCUWuzJwAhYHTIADNKiwwxY_TILLfDmW5oHGho6t3CNsK7UQbspGAsEjUyyusC2BUtdtPa3INDhVqnO67r4kQp1bl9TvT-GEBGOW9WIysstT4NCSjUOi3yzhoSwIxxgszUsxPWBu4pc9MT_CZZjYxy7AwxF0u1PhsDagScJhlgRmkGckOXdEM7Ahpabp8Uv0nO7ZPiN8lq5Dqvi5qyjHLkDFW2bvvZWyBgNMm8yuMeOG7DAeQ6TfKuGhKAjHLuDFV2savWpiFBCBhNMlcPXjgweOG5wQt6kwwgozTJEDNKqVYzK1y1NhsDEAJGk8xzo5d0Q7OBhqb-tTZGk8xz-6TamOSakFFeF2pklCYZqmyUUg0w67afvQkB2NvF6BjVyBgnyQAyTpMMVDbGX2dDzMWuWp-GpB68cGDwwtU_UEdpkoEnL1AqL8CM0iQDz15gHD1DzLo9o7npdkP9_IgFPD9i5TZK8ZnkwdP__g0AAP__Foz-6g==

# This query verifies stats collection for WITH ORDINALITY and the hashJoiner.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT * FROM kv WITH ORDINALITY AS a, kv WITH ORDINALITY AS b]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUUcGS0kAQvfsVXX1SayxICB7mFHSxNoqwAqWuWzkMma7dFMlMnJlsQVH8u5UEdYmAi5YHj_26X_d7_TZov2bIcTYcDV_PoTQZvJlO3sPN8PPVaBCNYTAejK6_DOHpRTSbzz6MnsFu9HkzuLyHT9H8EibTi2g8GEXzaxjMQLAjjUWMDJWWNBY5WeQ36GHMsDA6IWu1qaBNPRDJFfIuw1QVpavgmGGiDSHfoEtdRshxLhYZTUlIMp0uMpTkRJrVa5f3YWHSXJg1MpwVQlkOL5Dhu4_g0pw4dG1TJVo5Ui7VqtVwZZGRBUNCcug32GLtfkBBF14hw4VwyR1Z0KUrSseh0rGjfof6GG8ZNtXOiXXilpB7W_Z4txMjUyWy1K073r5ZWlFSti38lTD_HGEPY_D_xxh6fxhD71_HEBwV9lNPqbSRZEjuiYkr5u9GDri7FPburU4VmU6w725SSQ09Fvos7LEwYGGfhS-RHbadixXklGuzBpFlOhGOJIcmq6pnE1M9BmRql79OPOJp_vGv9c-Jc0q20MpS-3sHN3erl5G8pSYCq0uT0JXRSX2mKSc1rwYkWdd0vaaIVNOqBD4keyfJwR7Za5P9k-Te6cu9My77bXJwktxvXY63T74FAAD__yCVFyE=

# Verify that EXPLAIN ANALYZE on an unsupported query doesn't return an error.
statement ok
EXPLAIN ANALYZE (DISTSQL) SHOW QUERIES;

statement ok
EXPLAIN ANALYZE (DISTSQL) EXPLAIN SELECT 1

# This query verifies support for zeroNode in DistSQL.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT sum(k) FROM kv WHERE FALSE]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkF9LwzAUxd_9FOE-dRBY42OenFqxsH-u8w-MPIT2WseyZuYmIpR-d2kj6ISJPt5zzzm_5LZArwYkFNk0u1qz4Ay7WS1mbJM9LaeTfM6S67xYF3fTEfu0UNgnu1F07d7Y4222ytizNoQKODS2wrneI4HcgADF4eBsiUTW9VI7GPLqHWTKYdscgu9lxaG0DkG24LfeIEh40CYgjVPgUKHXWzM0puySJSkrX0KzoxGojoMN_quFvK4RZNrxv5Mmde2w1t66sTimFfez5EKcxoj_YFZIB9sQHiFOf0BxwKrGeDSywZW4dLYcMHFcDLlBqJB83Io45E1c9Q_8Hha_hs9_hFV39hEAAP__TsavHw==

# This query verifies stat collection for the tableReader and windower.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT avg(k) OVER () FROM kv]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzklV9v2jAUxd_3Kaz7BJIRhD_T5KeyjU1orHRQdX8qHtz4qrMwdmY7tKziu09xEgZpu6aPrI--14fr3znGuQP3SwGD-WgyendOUqvIh9n0M7kcfTubDMenZHg6nHz_MSKN9-P5-fzLpEmKrXx93Vg2yfRiNCONZq5arhdAQRuBp3yFDtglREChCxR6QKEPFAawoJBYE6NzxmZb7oJgLG6BdShInaQ-Ky8oxMYisDvw0isEBuf8SuEMuUDb7gAFgZ5LFcYs1yeJlStuN0BhnnDtGGm1s8HT1DNykh3j0wXxcoWMdFy-io32qL00utLwaaLQEYtcMFJIrzZ-V3pD3gKFK-7jn-iISX2SDcmOVCjLUgSLLYV8VUA5z68RWLSlj4D_5U21sQItigPWxfYBa75KLcwN2vbg0JfhxcfGSdTc-ZA5EiYVjIwMdhXnuVL7Tqz4LVnhytgN4UqZmHsUjHQCfNZzsc0sIEK65f0dFSuyOXiLcVr1-76Nj3nWPfAsqn9ZoqcvS7vbaveO5bp066N3a6D3Wu3-saD36qP3aqD3W-EfcxTo_fro_Rrog9axgD_xWZihS4x2WHklH_7lTvZ6orjG_Kl1JrUxnlkThzH5chp0oSDQ-bwb5YuxDq1wwH1x9E_x6wNxpyruPmdyQAlUoNHfGLskinvU8aaIqKzecOn3oxPo0Equ5G9eTbWU7KKNUa6xiLdslhmXveflfEjce3HE_RdHPPj_iRfbV38CAAD___0SqPY=

# Very simple query to make it easier to spot regressions when rewriting results
# in test files.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT k FROM kv WHERE k = 0];
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkN9K80AQxe-_pxjmu1FYyeZ2QWjViMHY1qT4r-Rimww1JN2Nu5tiKXl3SbZQFAQvz--cmeHMAe1HgwKzKImul9CZBm7T-QOsopdFMo1nMJ1Nk9e3CM5u4myZPSbncIzWPljv4PkuSiOo4RJ4jgyVLmkmt2RRrDDEnGFrdEHWajOgwxiIy08UnGGl2s4NOGdYaEMoDugq1xAKXMp1QynJkkzAkWFJTlbNuLbeTVpTbaXZI8OslcoKCPhFwIP_yHDeOQGTEBneP4GrtiSAW68KrRwpV2n1w3Bd25AFQ7IUwD1b790JwRUyXEtXvJMF3bl2ODIEj5MnlPcMvToWs05uCEXYs7-XT8m2Wln61vu3zbzPGVK5If9gqztT0MLoYjzj5XycG0FJ1nk39CJW3urz_t9XAAAA__9YoKbt
