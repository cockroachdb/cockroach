# LogicTest: 5node

# These tests are different from explain_analyze because they require manual
# data placement.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i);

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT, FAMILY (k, w))

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify that EXPLAIN ANALYZE (DISTSQL) annotates plans with collected
# statistics.

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {1}       1
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {5}       5
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# This query verifies stat collection for the tableReader, mergeJoiner, and
# aggregator.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT kv.k, avg(kw.k) FROM kv JOIN kw ON kv.k=kw.k GROUP BY kv.k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
·
• group
│ cluster nodes: <hidden>
│ actual row count: 5
│ group by: k
│ ordered: +k
│
└── • merge join
    │ cluster nodes: <hidden>
    │ actual row count: 5
    │ equality: (k) = (k)
    │ left cols are key
    │ right cols are key
    │
    ├── • scan
    │     cluster nodes: <hidden>
    │     actual row count: 5
    │     KV rows read: 5
    │     KV bytes read: 40 B
    │     KV MVCC keys read: 0
    │     KV MVCC seeks: 0
    │     missing stats
    │     table: kv@primary
    │     spans: FULL SCAN
    │
    └── • scan
          cluster nodes: <hidden>
          actual row count: 5
          KV rows read: 5
          KV bytes read: 40 B
          KV MVCC keys read: 0
          KV MVCC seeks: 0
          missing stats
          table: kw@primary
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsm-9u4jgXxr-_V2H5U0cTJtiBDkUaiZnRvKvOtjDqn5VGK1SlyVkaAQkTGyhb9bL2BvbKVoHSAiF2wnRqF-dbiWNy8vPjx_j49A6zHwPcxOdfTr58vkD9ybu-hdxJ76A_fdd_g_5_1jlF_Qn62jluo_4UddrzW9AHlLSj3846l9_Qp-_zi9jCYeRD2x0Cw80_McEWptjCDrZwDVu4jrsWHsWRB4xFcXLL3bzDsX-Lm1ULB-FozJPLXQt7UQy4eYd5wAeAm_jCvR7AGbg-xHYVW9gH7gaD-WP6k9YoDoZuPMMWPh-5IWuiip08uDPmTdRKwvj9D8SDITRR9d9_2OKzF4UcQh5EYappOPE81IcZQzG4fhNVVy4zgD57vBRH0-VND4-5nnFYXmqgT9jC1y73boChaMxHSUBJ13m_5QWCu_cWXnxaUFm-9fUM3bjsZv19W8n9XQsz7vYAN8m9tRvGww2M0zRGmxgEkmaCfPqeKPYhBn_ze94mD85115YxOYW4B1-jIITYJhvaHsBf_KBF3r75EAe9m8WfT-NhtZLBgVvwxmn8Q_cWDWEYxTPkDgaR53JIRmBOMmljPwaIw3CE_ID10Zi5PVg2Fwb9BNEposaPvV4MPZdHsU3qqbGxcGfB8UF6H9vfr9qdi6v25cnJQYskHM4vTw9aNPnrc-eyffHwdwaQXyyf2s_JR4yHVn8Oz_nl6dVxAshJPp1B6EM8VxBqUbvlPCO0JyD1HEDG4TYkW2m0o0o0sumGTnYNu54Z9uFa2CS_nxL5smTTiu2Y4qdkV5DvcyxMJoGkmSBfcGEie7UwSdS4ujAd7tfCVFg-koWJvPaFieY3JprD4Z2KXTPFmMiuIBs5HN4kkDQT5As6PN0rh5eocdXh3--XwxeWj8Th6Wt3eCe_MTk5HL5WseumGBPZFeRRDoc3CSTNBPmCDu_slcNL1Ljq8I39cvjC8pE4vPPaHb6W35hqORy-XjHFlsiuGOtyf6_YBLmhjwiK-A3EpiClmUhf0Olre-X0El2uOv3Rfjl9YflInL722p1ecqJ0BmwUhQw2jhO2f3M1oQV-DxZ0WTSOPfgWR978MYuPnXm_edrMB8YXrXTx4ThcNjHuctFxxK-cRNWFaeSPvpEZfQh8GsV9NHA5hN7sMfzl9akb8PUX84FBHLiD4G83_dbLbg-m7EEwgQf3XjYt3fmxbf7Oy9YhsATFZufnR0IcxUyIgEnjWZiQwkxKnaQnvmqdKGFCCpgh1c4MxdE3MqM3dkA3zPDlmSgxQwmTUicyMzSECd1kUl1lso6kutnZEQKt6fSzcssUEUdPqiaujRIm9ZJJyjZKnaSZGKmTmtBKN5Bsdq4LO9PDdSPW7lfp4Y4Jhj2WgxhJ9m70NQyo8gSDhiNqZoJBMvFV60TJ3uv9jgmGPZaJGEn2blQPMxRHrzzBoOGImplgkEx81TpRYoYN4Q_bI3GC4WjHBMMea0yMRJC10CPpIgnfyI2jmImZCQYJEyN1QlKneaIMgxnLCylymmeKToqcEZZMJAkNPbYgsvhVD6qWk1919kGN0lNHemX6QcLEyM2qhIkgq6GJI0riVz2oahxRMvlVpyDUKD11Wrn2u5nUxEkIkjrYK7MQEiZmFk_IoGRv0PTIzUjiNzMRIYOietetBoq4XEE1EzVLb1kDUZSJmZvWsrSiOBTdy2Vkk9_MQS0LIYoyMXPTWtZXFIeie82MbPKbOajiaggiKYcgZT1EGunOBREGQ1G9QdMRiiC9oUl6pqyJ2PL_a2VNRJqJ3jUROjJRnYlQM3d2rokwGEqplELpDT02I1Tvmgg1jljWRBRlYmYmQgalVEqh9IYmjiiuiaCSmgha1kSkkZY1EcWhqN6g6QjFzEILGRTdq2doWRPRve_e_--_AAAA__8G7GxU

# This query verifies stats collection for the hashJoiner, distinct and sorter.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT DISTINCT(kw.w) FROM kv JOIN kw ON kv.k = kw.w ORDER BY kw.w
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
·
• sort
│ cluster nodes: <hidden>
│ actual row count: 5
│ order: +w
│
└── • distinct
    │ cluster nodes: <hidden>
    │ actual row count: 5
    │ distinct on: w
    │
    └── • hash join
        │ cluster nodes: <hidden>
        │ actual row count: 5
        │ equality: (k) = (w)
        │ left cols are key
        │
        ├── • scan
        │     cluster nodes: <hidden>
        │     actual row count: 5
        │     KV rows read: 5
        │     KV bytes read: 40 B
        │     KV MVCC keys read: 0
        │     KV MVCC seeks: 0
        │     missing stats
        │     table: kv@primary
        │     spans: FULL SCAN
        │
        └── • scan
              cluster nodes: <hidden>
              actual row count: 5
              KV rows read: 5
              KV bytes read: 40 B
              KV MVCC keys read: 0
              KV MVCC seeks: 0
              missing stats
              table: kw@primary
              spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsm-9u6jYYxr_vKix_OkcLJ7ETKEU6UnX-TOvZVqa2mjRNfEgTr0RAwolNKat6WbuBXdmU0JSGEL9Je1Z7mG8lxsX-va_fx3mc3GH-dYoH-OLzz58_XqJPpxeXp2cfL9GbyfLd8i364Xz4C5rcoC_D0zM0WaLhGZrcvJug9yhrR8PzT5_P0Yff80_YwnESsjN_xjge_IEJtjDFFnaxhT1s4S4eWXieJgHjPEmzr9zlHU7DWzxwLBzF84XILo8sHCQpw4M7LCIxZXiAL_2rKTtnfshS28EWDpnwo2n-M5Obk3kazfx0hS18MfdjPkAdO_vh4UIM0Ek2jJ9-QyKasQFy_vmbrz8HSSxYLKIkrjTNboIATdiKo5T54QA5Ty5zxib88VKaLIsvPfzM1Uqw4lIffcAWvvJFMGYcJQsxzwaUdc37FRcIHt1beP1pTaWY9dUKjX0-Ls_3JPv-yMJc-NcMD8i99TyMvS2MyypGmzwFSfcbJK0Fufk_izhJQ5aysPSfRllP6Cs7ovGjz8dfkihmqU22knrK_hRvTsjb92l0Pc7_KoWB3bJgUUU-82_RjM2SdIX86TQJfMEy6jm9rI1_nSLBZnMURnyCFty_ZkVza7gbcG6bDPwUcRHFgbBJtxINLebVLmm8FySNjA519KSzmXm3TdQvklSw1KaVmH-v27R6DQK6K5z5XHbG9CzpJHPb3QpozaTBkXdrR35UGjlpLgQE1lObdmzXTEVtAfKogaKWQBqlqOSVFZXsi6ICGbhR1J6emvESRW2XNFJFJXrSqVNUIOqFolZirrmi0ubllDbQJbdje2bqUguQ_Qa6VAJplC7RV9Ylui-6BGTgRpeO9Ky8L9Gldkkj1SWqJ506XQKiXuhSJeaa65LbvJy6DXTJ69hdM3WpBcjjBrpUAmmULrmvrEvuvugSkIEbXerrWXlfokvtkkaqS66edOp0CYh6oUuVmGuuS17zcuo10KVux0xVaoGxC6tSxybIj0NEUCLGLDVTn7xX1idvX_QJyMWNPh3rWYFfok_tkkaqT56edOr0CYh6oU-VmGuuT8DB3znj8yTmbLsa7PzPThZwFl6zdXbwZJEG7Nc0CfKfWX8c5v1yezRkXKxb6frDaVw0ceEL2THbf0nOwXm1az7649rRx0wsk3SCpr5gcbB6HH5xfelHojyxkHGWRv40-suvzrro9iAlAYtu2IPmFE2Fpjy25XMuWmeMZyi2O397JKSrmAmRMOl_EyakLRNKDnlSYXJkIhPSohhS7YqhfPTHtaM3NqBbxfD1mSgphkCSk0OeAMXQECZ0m4nzlIlbQuJsd3alQD2dtpU7loh89MTI_QLAxMj9gpwJdQ9MKkyMvCfzpKW0Ky-lXWnnXpnndueevIiXK5mj3Zb26JnuxB7nkhxJ_fL6PwRUuTuhYUTNdCcAJqp3G0pu3PrPdCf2OE3kSOotDz2KoXz0yt0JDSNqpjsBMFHtTigphsfSjS1x5HtqIne_6_2JPc4ygInE9dDDtIHGr3rPoGNQzbQoIChGehSk4oGXKyoFKqrcLu6ZuGEngBdmZJrJmZi59ABvvd4V0eM-Bspz1Q6GlovfzO1IxQk_eBgAEzOf25AzkVgjmlREIM9V2xhqKiIARbWPoSbT5cd7pAdsuysHfAcjA2Bi5uMbEJT67Ygm7o58_IYaGQAUM--mKmeH5YraBypqxW0_GBmk4rYfjAyAieqlp2OemPl4B7R4tDpXecb4jTQyaJv35gy5lQGYqDYylFREgImZz3hAi6feHdGjIkLjN9LIoPLzQwqcH9LK-eHByACYmGlkQFDM3I7IoUjcET3cHWj8qu-m1AS1coJYrqgeUFHlb50YaWTQituulZGhIxMzl56ciZlGBrR4zNyOAFC0OlfZNX7gCMHIm3Y5E9VGhpo8B84PzTQygMWj-jEPLaHUuyOaVET5-SEFzg-p_G0dM40M4E03M3cOABQzjQzgXTcjH_OAoGj10v-u_ZT8ZT0XeFnPrdjtBhoZo_vv_g0AAP__Sg8--w==

# This query verifies stats collection for WITH ORDINALITY and the hashJoiner.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT * FROM kv WITH ORDINALITY AS a, kv WITH ORDINALITY AS b
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
·
• cross join
│ cluster nodes: <hidden>
│ actual row count: 25
│
├── • ordinality
│   │ cluster nodes: <hidden>
│   │ actual row count: 5
│   │
│   └── • scan
│         cluster nodes: <hidden>
│         actual row count: 5
│         KV rows read: 5
│         KV bytes read: 40 B
│         KV MVCC keys read: 0
│         KV MVCC seeks: 0
│         missing stats
│         table: kv@primary
│         spans: FULL SCAN
│
└── • ordinality
    │ cluster nodes: <hidden>
    │ actual row count: 5
    │
    └── • scan
          cluster nodes: <hidden>
          actual row count: 5
          KV rows read: 5
          KV bytes read: 40 B
          KV MVCC keys read: 0
          KV MVCC seeks: 0
          missing stats
          table: kv@primary
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzcUcGO0zAQvfMVozkioyZpyiGnLLBoC8sWtRUIoR5ce9S1kthZ2ymNqn4WP8CXoSQU2u62S0FcOM57fp43763R3eWY4OTy-vLlFJ7C6_HoHWRL-DicXsFo_Gp4c3E9nH6CiwlwdoSYI0NtJN3wghwmnzHEGcPSGkHOGdtA6_bBUK4wCRgqXVa-gWcMhbGEyRq98jlhglM-z2lMXJLtBchQkucqb7_NlmlpVcFtjQwnJdcugWfI8O0H8KqgBIJvX103C6M9aa-MvkcVSyEgo9qBJS4TCHZgR5S5n5A1X7aPBh0yrz1toTiAF8hwzr24JQem8mXlO20r3AIDnG0YdtOPm53nC8Ik3LDfz2VkpdI8V77uhfux0IpEdf_UvzAWnWNst7Do_y6s_4eF9f91YfFRY7_8VNpYSZbknplZo3zsyQPXXXF3-8YoTbYX7183aqymIUsjlvZZGrN0wNLnyI6dXfAVFFQYWwPPcyO4p6bktquGc3c5eCpKkMplUDm-oC39aGLR8cgG53Q5Jlca7egwugd_Dpq8SC6oy9-Zygp6b41o13TjqNW1gCTnOzbshqHuqMbgrjg8KY73xOGhODop7p_e3D9jc3Qojk-KBwebZ5sn3wMAAP__Ni4nKw==

# Verify that EXPLAIN ANALYZE on an unsupported query doesn't return an error.
statement ok
EXPLAIN ANALYZE (DISTSQL) SHOW QUERIES;

statement ok
EXPLAIN ANALYZE (DISTSQL) EXPLAIN SELECT 1

# This query verifies support for zeroNode in DistSQL.
query T
EXPLAIN (DISTSQL) SELECT sum(k) FROM kv WHERE FALSE
----
distribution: full
vectorized: true
·
• group (scalar)
│ estimated row count: 1
│
└── • norows
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkE1LxDAQhu_-ijCnLgS28ZiTq1YsdD9s1w-QHkI71tJuUzOJCKX_XZoeVoUVPc47eebJzAD01oKE6GmXrOINC67jbJ_dJQuWRUl0tWfkDkGzYDfpds2ad_Z4G6URe1EtIXDodIkbdUAC-QwCcg690QUSaTNFg38Qlx8gQw511zs7xTmHQhsEOYCtbYsg4UG1DmkZAocSrapbPzFklywIWfHquoYWkI8ctLPHKWRVhSDDkf_dtKoqg5Wy2izFd1t2vw4uxGmN-I8mRep15490VJxeIOeAZYXz0Ug7U-DO6MJr5nLrOR-USHbuirmIu7k1ffArLH6Fz3_A-Xj2GQAA__8VEanA

# This query verifies stat collection for the tableReader and windower.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT avg(k) OVER () FROM kv
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 5 (40 B)
maximum memory usage: <hidden>
network usage: <hidden>
·
• window
│ cluster nodes: <hidden>
│ actual row count: 5
│
└── • scan
      cluster nodes: <hidden>
      actual row count: 5
      KV rows read: 5
      KV bytes read: 40 B
      KV MVCC keys read: 0
      KV MVCC seeks: 0
      missing stats
      table: kv@primary
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzslU1u2zwQhvffKYhZJQAN_X8otEpbpEXQHxdOkC4KLxhy4BKSSIWk7LiBj9UL9GSFKMuNnKRRt4aXMy9fD-eZsXgP9raEHC7PP56_vSJsuTgpTsn0-nxGTk7Ju9n0EymWQEFpgZ9ZhRbybxABhRgoJEAhBQoZzCnURnO0Vpv2yL03XIg7yEMKUtWNa9NzClwbhPwenHQlQg5X7KbEGTKBJgiBgkDHZOnLFMuz2siKmTVQuKyZsjmZBG3haeNyctZe48M1cbLCnIS_ftou5lo5VE5q9UiqlpyTAteWGGQiJ-GDtEUs7C5l9Ko_tC1zs3bYp16RN0Dhhjn-HS3RjavbC7VW7-sTEcw3FLpo2751bIGQRxv6DKI_ZBqljUCDYkBlvnkC4lephF6hCbIhwdfX70_OotMdsZadr-T7y0m2i61jZTnkhXfIm8cYK3ZHKqy0WRNWlpozhy1JT6TV7G1JHFY1EdIWpLFsgb38IrDsWWDxAFg0fqeil3cqiCdBcnhbFY-HFI-AlEyC9PAgJeMhJSMgpRP_FzwwSOl4SOkISNnk8BC98MrN0NZaWdz7lD_9y2H7iUexwO49sLoxHL8YzX2ZLpx6n08ItK5Toy64UF7yF3xojv5q_n9gDvfN8b9U9q34rkChW2lTkJI5VHy9G2WfXzHphkMWaNFIVsof7PEG9LbtcDnKJW4H3Ev9lHutm3SvVmjbJ-nhgXD0IgyRJEck-0jSI5J9JNkRyWa--e93AAAA__-kGRip

# Very simple query to make it easier to spot regressions when rewriting results
# in test files.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM kv WHERE k = 0
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
maximum memory usage: <hidden>
network usage: <hidden>
·
• scan
  cluster nodes: <hidden>
  actual row count: 0
  KV rows read: 0
  KV bytes read: 0 B
  KV MVCC keys read: 0
  KV MVCC seeks: 0
  missing stats
  table: kv@primary
  spans: [/0 - /0]
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkcFO4zAQhu_7FKM5e5XkammlaldZUVFalBY4oBxcZ1SiJHbwOIWqymPxAjwZig1FgJC4RPq_-eeP_fuIfN-ixHW-yP9toIH_xeoCmj3cnOVFDg38gRQFGlvRUnXEKG8xw1Jg76wmZusmdAyGefWIMhVYm37wEy4FausI5RF97VtCiRu1bakgVZFLpuCKvKrbENvsZ72rO-UOKHDdK8MSkjRJf0-fZHm1WKDA1eAlzDIUeH4Nvu5IQvr8xFFrazwZX1vzZdTttYaGDgyOVCXDpd4wEzV8Qs4-fDJtD55OCP6iwK3y-o4Y7OD76UCTMey9g3IUGNVrE-zVjlBmo_h5WwVxbw3Th6K-S07HUiBVO4ovwnZwmi6d1eE3Ua7CXgAVsY_TLIq5iaOxHH-9BAAA___Gx6pP

# Test a query that has a subquery and a postquery.
statement ok
CREATE TABLE parent (p INT PRIMARY KEY);
INSERT INTO parent VALUES (1), (2);
CREATE TABLE child (c INT PRIMARY KEY, p INT REFERENCES parent(p))

query T
EXPLAIN ANALYZE (DISTSQL) INSERT INTO child VALUES (1, (SELECT min(p) FROM parent))
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 2 (16 B)
maximum memory usage: <hidden>
network usage: <hidden>
·
• root
│
├── • insert
│   │ cluster nodes: <hidden>
│   │ actual row count: 1
│   │ into: child(c, p)
│   │
│   └── • buffer
│       │ label: buffer 1
│       │
│       └── • values
│             size: 2 columns, 1 row
│
├── • subquery
│   │ id: @S1
│   │ original sql: (SELECT min(p) FROM parent)
│   │ exec mode: one row
│   │
│   └── • group (scalar)
│       │ cluster nodes: <hidden>
│       │ actual row count: 1
│       │
│       └── • scan
│             cluster nodes: <hidden>
│             actual row count: 1
│             KV rows read: 1
│             KV bytes read: 8 B
│             KV MVCC keys read: 0
│             KV MVCC seeks: 0
│             missing stats
│             table: parent@primary
│             spans: LIMITED SCAN
│             limit: 1
│
└── • constraint-check
    │
    └── • error if rows
        │ cluster nodes: <hidden>
        │ actual row count: 0
        │
        └── • lookup join (anti)
            │ cluster nodes: <hidden>
            │ actual row count: 0
            │ KV rows read: 1
            │ KV bytes read: 8 B
            │ KV MVCC keys read: 0
            │ KV MVCC seeks: 0
            │ table: parent@primary
            │ equality: (column2) = (p)
            │ equality cols are key
            │
            └── • filter
                │ cluster nodes: <hidden>
                │ actual row count: 1
                │ estimated row count: 1
                │ filter: column2 IS NOT NULL
                │
                └── • scan buffer
                      cluster nodes: <hidden>
                      actual row count: 1
                      label: buffer 1
·
Diagram 1 (subquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJysUtGK2zAQfO9XLPuUgI7YOQrFT5eWFEJSpyS-QCnmUOTFJ2JLriRfLg35rP5Av6zYiq9njqYt7aNmd7Szs3NE-6XACGfxerpKYBYnSxD3sshgM1ncTtcwCBkM1tPF9F0CpVSDagjvV8sPUHFDyg2HyFDpjGJeksXoM4bI8DWmDCujBVmrTQMf26ZZ9ohRwFCqqnYNnDIU2hBGR3TSFYQRxvpKV6MxMszIcVm0n9IjidpJrcDJkiIIvn-zyHDLnbgnC7p2Ve0iCJCh0fufQIjpiaF_nedZx3PC6PrEnmkKL2tK-LagFfGMzCjoK_M23FRGltwckOG64spGcIUMF7KUDhpD5pu-8PkGhFaO1Mud5hsoH4SAHR0sGOKZX6uDLdHOPkHtsr7pPGZ7cNRBb-Dtv5kU_o1Jkzw3lHOnzSjsezSJP93Fy-Quvl0sBjdhE5n_f9BxT-tvQrYiW2llqafzVz8Hp5QhZTn5IFtdG0EfjRbtGP9ctrwWyMg6X732j5nypUbgc3J4kTy-TB5fJAd9crtKuxUqcnttdlBwR0ocnpzv8D2Xrn-TjCwZyQv5lb88WEc7B1GQfKBzGLtSl8iu5lPZVUuylue9huBPg5CeXv0IAAD__7cekc0=
Diagram 2 (main-query): https://cockroachdb.github.io/distsqlplan/decode.html#eJyMj89K80AUxfffU1zOqoWBL9nOTiRCoLbSVjeSRZxc2oF0bpy5wULJY_kCPpk0I4gLweX53Tl_5oL02sOiXu-q7Z7q9X5D7uj7jp5uVo_VjhalocWuWlW3ezr5sBiWdLfd3NPQRg66XMIgSMfr9sQJ9hklGoMhiuOUJF7RZX5Qd2fYwsCHYdQrbgycRIa9QL32DIteXNuTkzEoFf8LGHSsre_nYD6zG9VLIPUntlR8vCcYvLTqjpxIRh1GtXR1RXn7BiWaySCrr96k7YFhy8n8fduW0yAh8Y9RvyUXU2PA3YHz_5OM0fFDFDfXZLmZfTPoOGm-llnUIZ-mZvr3GQAA__9Sm4hi
Diagram 3 (postquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJy0k8GO2jAQhu99itGcQLJEAnuofGJbgZTdNKkgy6XiYJxh1yXYqe20ixCP1Rfok1WJl7Z0taio7S3ze3778_zxHt2nCjkm2XwyKyDJihzkg6pKWFynd5M59GIGvfkknbwtYKt0r-7DdJa_g1pY0r7fR4balJSJLTnkHzDGJcPaGknOGdtK-64hKR-RRwyVrhvfykuG0lhCvkevfEXIsTJSVOCk0LBq1muyEA0iZFiSF6rqts8bz2E8RIb0SLLxymjwakscom9fHTJcCS8fyIFpfN32tn5rvvwUYlweGIbqicN5cU_I4wP7c9apqjxZsoP4FDDoHMYxJHPI8gKyuzT9L7zDS3hvjNIzEiXZwfCUuNjVxCGdTAu4zooEbvIkQ4Yh4HFt1VbYHTJMjdk0NXw0SoPR7Q2RPeXRfnWHQ4veMh9r50VVnd74dvGslkZ70s-Hc7uA7WcpYUM7B5ZEGeZzlB3Rxv2QuqmFpjgoq52no_Qa3vxFCNGLIYwuCSH84GStsaDWgTgejE7z-PeMV5cwzsjVRjs6gXpp5-iwZEjlPYWH7kxjJb23RnbHhDLvfJ1QkvNhNQ5FosNSC_irOT5rHp43D8-aR-fNo7Pmq9_My8Or7wEAAP__Km-5mA==
