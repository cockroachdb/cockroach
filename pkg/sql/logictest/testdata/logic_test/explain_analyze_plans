# LogicTest: 5node

# These tests are different from explain_analyze because they require manual
# data placement.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i);

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT, FAMILY (k, w))

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify that EXPLAIN ANALYZE (DISTSQL) annotates plans with collected
# statistics.

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {1}       1
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {5}       5
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# This query verifies stat collection for the tableReader, mergeJoiner, and
# aggregator.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT kv.k, avg(kw.k) FROM kv JOIN kw ON kv.k=kw.k GROUP BY kv.k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
·
• group
│ cluster nodes: <hidden>
│ actual row count: 5
│ group by: k
│ ordered: +k
│
└── • merge join
    │ cluster nodes: <hidden>
    │ actual row count: 5
    │ equality: (k) = (k)
    │ left cols are key
    │ right cols are key
    │
    ├── • scan
    │     cluster nodes: <hidden>
    │     actual row count: 5
    │     KV rows read: 5
    │     KV bytes read: 40 B
    │     missing stats
    │     table: kv@primary
    │     spans: FULL SCAN
    │
    └── • scan
          cluster nodes: <hidden>
          actual row count: 5
          KV rows read: 5
          KV bytes read: 40 B
          missing stats
          table: kw@primary
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsm29vmzgcx5_fq7D8qNPIiE3SpZEmZZt2p-7WZOqfk6ZTVLngS1ESyBmnaa_qy7o3cK_sBGnWBIINrKsB8yxgHPh9_PXX8Y9f7mHw9wz24dmnL58-noPpzZupAcjN5GC6ejN9BX49HZ2A6Q34PDoegukKjIbRJeAdCNvBb6eji6_gw7foJDSg5zt0SOY0gP0_IYIGxNCAFjRgBxqwC8cGXDDfpkHgs_CS-6jDsXML-20Dut5iycPTYwPaPqOwfw-5y2cU9uE5uZrRU0ocysw2NKBDOXFn0W2mN4MFc-eE3UEDni2IF_RBywxvPFryPhiEj_H7H4C7c9oH7f_-DdbHtu9x6nHX9xJNzF8FgFHi9MFj56s7TjeneuADNOAV4fY1DYC_5IvwNuFDRf02JxAcPxhwfbSOdRPL1R24JsH1bhSD8PqxAQNOJhT20YNRDM5hDM4qCcdElceDU_E8fY_PHMqoE_-e1-GNM121h_QJZRP62Xc9ykwU0-GM_sUPBuj1q3fMnVyvPz5RNgYhcnpL7WUS6pzcgjmd--wOkNnMtwmnTh-0I5JhW2CzkCdw3GCavCI36yeOVh6ZvZ9MGJ0Q7jMTdRPDY8DRGuWjpt4Pv10OR-eXw4svXw4GKERxdnFyMMDhp4-ji-H54-cUJj9ZQZ0fU5AYD27_GJ6zi5PL4xCQFR6dUs-hLBIRGGBzYD0jtCcg3QxAlt4-JHtpDP2WvzBxTCdFH7ub-tiHO4-Nshslkq8iJm6ZVrWNEhXF8zbDOlJ9PDgVzwuuI6hu64hEZtvryGG91pHcCpKsI6jq6wjO7jg4gyFbLbNTbcdBRfH0Mhhy9fHgVDwvaMi4boYskdm2Ib-tlyHnVpDEkHHVDdnK7jhWBkPutMxutR0HFcVzlMGQq48Hp-J5QUO26mbIEpltG3KvXoacW0ESQ7aqbsid7I7TyWDI3Va1_QYVhdOV23HLRIB4DkDA59eUVRsUTgX1gsbcqZsxSwS3bcxH9TLm3AqSGHOn6sYseRtySoOF7wU0lgrf_83tkBZ1JnRNN_CXzKZfmW9Ht1kfjqJ-UQ7JoQFft-L1wbG3aQo44aJU-k-eR-21dWQPoJcagEf5ymdTMCOcevbd9wg251fE5buxOTSgzCUz9x-SDHzT7dGabereRHFtNW08-ntbFPOmdU6DgExovPPzI0GWYiZIwKT3LExQbiaNTpJzX7VOlDBBOfwQl9EPxQH0UgPQdkxjfvjyTJT4oYRJoxOZH2rCBMeZtLeZ7CJpxztbQqCdkv243DNLxAGgto4rpIRJt2GScI5GJ0kmWuqkI3TTGJJ4566wMz7c9WLldron_MOCyYYaK0KMJH1bWpExVZ5sKOGg6plskMx91TpRsgl7WzDZUGOZiJGkb0tL44fiAJQnG0o4qHomGyRzX7VOlPhhT_gL90icbDgqmGyoscbESATpi9IkYCQRaLmJFDPRM9kgYaKlTlDi_Z4o26DHCoPyvN_TRSd5Xhk2TCRpjdJsRGQhqB7XUs5_1WkINWJPvORr8hASJlpuWSVMBLmN8piiJATV46rGFCXzX3UuQo3YE-8vd349o444G4ESr_qadISEiZ7lFDIo6du00iRpJCHomZGQQVG9_VYDRVzDoJqJmtW3qYrIy0TPrWtTaZEfSgUKaGTzX89xbUoj8jLRc-valFvkh1KBKhrZ_NdzXMX1EUhSIIGaCokk0sIlEhpDUb1NKyMUQZKjPHmapkpizx_cmiqJJJNyV0mUkYnqlISauVO4SkJjKI1SciU5SrMlweWuklBjik2VRF4meqYkZFAapeRKcpTHFMVVElhSJYGbKokk0qZKIj8U1du0MkLRs-5CBqUC9TS4qZIYP4wffvk_AAD__w-cClQ=

# This query verifies stats collection for the hashJoiner, distinct and sorter.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT DISTINCT(kw.w) FROM kv JOIN kw ON kv.k = kw.w ORDER BY kw.w
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
·
• sort
│ cluster nodes: <hidden>
│ actual row count: 5
│ order: +w
│
└── • distinct
    │ cluster nodes: <hidden>
    │ actual row count: 5
    │ distinct on: w
    │
    └── • hash join
        │ cluster nodes: <hidden>
        │ actual row count: 5
        │ equality: (k) = (w)
        │ left cols are key
        │
        ├── • scan
        │     cluster nodes: <hidden>
        │     actual row count: 5
        │     KV rows read: 5
        │     KV bytes read: 40 B
        │     missing stats
        │     table: kv@primary
        │     spans: FULL SCAN
        │
        └── • scan
              cluster nodes: <hidden>
              actual row count: 5
              KV rows read: 5
              KV bytes read: 40 B
              missing stats
              table: kw@primary
              spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsnN9uo0YUxu_7FKO52lXx4hmw4yCtFO2fqtm2cZVElarKFwSmMbINLozjpFEeqy_QJ6vAyzp4zBxItplZxneL8cSc3zlzvuEb2Huc_TXHHr74-PPH95fow-nF5enZ-0v0arZ-s36Nfjgf_4JmN-jT-PQMzdZofIZmN29m6C3Kz6Px-YeP5-jd78URtnCchOzMX7AMe39ggi1MsYUdbGEXW3iAJxZepknAsixJ86_cFwNOw1vs9S0cxcsVzz-eWDhIUoa9e8wjPmfYw5f-1ZydMz9kqd3HFg4Z96N58TOzm5NlGi389A5b-GLpx5mHenb-w-MV99BJfhk__YZ4tGAe6v_7T7Y5DpKYs5hHSSycSpN1hlLmhx76PPjqjrPyoxF6hy185fNgyjKUrPgy_5n8oopx5QcETx4svDnaxFrGcnWHpn42rUZxkn9_YuGM-9cMe-TBehqc4Q6ctQjHJo_x0G8RD63Fs_07qzhJQ5aysPKXJvlI6Ct7GP_oZ9NPSRSz1CY7BThnf_JXJ-T12zS6nhb_qsBltyxYiSAX_i1asEWS3iF_Pk8Cn7PQQ_2CXn4uC9KcIQqjbCZ-ozXfLTunTWl9iDIexQG3yUBIiC6htSsd9xmlIwNE-9oC2gY_aJP7iyTlLLWpkPnvNYxs2CCt-5JahLM3s2dJL1nazk5aa-IGr3xQe-VHlSsnzVs9gXXQpj3b6ZIStsBz1EAJK3g6oITkhZWQdEgJgdLaKuFQ20b_HCVsVzpSJSTaAqpTQiD3pRIKmddfCWnzhkkb6InTs90u6UkLPKMGelLB0wE9oS-sJ7RDegKU1lZPjrRtl8_Rk3alI9UTqi2gOj0Bcl_qiZB5_fXEad4wnQZ64vbsQZf0pAWe4wZ6UsHTAT1xXlhPnA7pCVBaWz0Zadsun6Mn7UpHqieOtoDq9ATIfaknQub11xO3ecN0G-jJoNclNWkBZwCrSc8myI9DRFDCpyztkq64L6wrbod0BSiyra4ca9s2n6Mr7UpHqiuutoDqdAXIfakrQub11xVgb-ucZcskzthuZ9j7l_t52ll4zTY1kiWrNGC_pklQ_MzmcFyMK5zEkGV8c5ZuDk7j8lTGfS7bRvqf4fVx0fyaB3BcG0DM-DpJZ2jucxYHd18iKD9f-xGvxhayjKWRP4_-9sXAy2GflSVg0U0R16NTpcR8OVfEXJ5dsCzzr9nu4K-PhAwUMyESJqOvwoS0ZULJoU4EJkcmMiEt-iHVsR_KAziuDcDYnO70w5dnoqQfAnVODnUC9ENDmNBdJv3HTJwKkv7uYEcK1NVscblnlsgDIEauGgAmRq4a5Eyoc2AiMDHyzsyVdtOBvJsOpIOHVZ67g4fyPl7tZH3lvXgPu6MnOhUdLic5kvoZ9o3kVLlToWFSzXQqACaq1xxK7uBGT3QqOlwmciT13oc2_VAegHKnQsOkmulUAExUOxVK-uGxdIVL-vLFNZGb4fVeRYerDGAisT-0MXCgEFSvHHTMq5l2BQTFSL-CCJZ4talSoKnK3eOhict2AvhiRpaZnImZUw_w2eu9EW3uZqBSV21laDn_zVyRCMb4wcwAmJj5JIecicQg0acpAqWu2s9Q0xQBKKoNDTXFLt_wI0Ng8S1s-R0cDYCJmQ90QFDqVyT62DzyEAx1NAAoZt5WCVuJ1aY6Apqq4LwfHA0iOO8HRwNgonrq6VgnZj7tAU0e3fZYnhCCkY4GbfNinSE3NAAT1Y6GkqYIMDHzkQ9o8tR7JNo0RSgEIx0NKt9OpMB2IhW2Ew-OBsDETEcDgmLmikQOReKRaGPzQCGovq1Sk1dhQ7HaVF2gqcrfSTHS0aCC866Vo6EjEzOnnpyJmY4GNHnMXJEAUHTbY9kXArCdYOTdu5yJakdDTakD24lmOhrA5FH91IeWUOo9En2aonw7kQLbiVT-Io-ZjgbwEpyZ6wcAipmOBvAanJFPfUBQdPtfAfatquSv8jnAq3yOYL0b6GhMHr77LwAA__8ssvD2

# This query verifies stats collection for WITH ORDINALITY and the hashJoiner.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT * FROM kv WITH ORDINALITY AS a, kv WITH ORDINALITY AS b
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
·
• cross join
│ cluster nodes: <hidden>
│ actual row count: 25
│
├── • ordinality
│   │ cluster nodes: <hidden>
│   │ actual row count: 5
│   │
│   └── • scan
│         cluster nodes: <hidden>
│         actual row count: 5
│         KV rows read: 5
│         KV bytes read: 40 B
│         missing stats
│         table: kv@primary
│         spans: FULL SCAN
│
└── • ordinality
    │ cluster nodes: <hidden>
    │ actual row count: 5
    │
    └── • scan
          cluster nodes: <hidden>
          actual row count: 5
          KV rows read: 5
          KV bytes read: 40 B
          missing stats
          table: kv@primary
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzUUc1u00AQvvMUozmiRYn_OOzJBYpqKDVKIhBCPmy8o3YVe9fsrkuiKI_FC_BkyDYVTdKkBMSB43yz3873s0b3pUKO0_PL85czeAqvJ_k7WNzCx2x2AfnkVXZ1dpnNPsHZFAQ7sJgjQ20kXYmaHPLPGGDBsLGmJOeM7aB1_yCTS-Rjhko3re_ggmFpLCFfo1e-IuQ4E_OKJiQk2dEYGUryQlX9t4vbtLGqFnaFDKeN0I7DM2T49gN4VROH8fdvbphLoz1pr4zeW1nz1YElITkkAzJfebqD4jG8QIZz4csbcmBa37SeQ6ekJ94BCRYbhsP004nz4pqQBxv2-25zK5UWlfKrUbBtlpZUtvsG_kJYeIqw-zWE_2MN0R_WEP3rGuKDwn7pabWxkizJLTFFx3zsyQPuLoS7eWOUJjuKt93lndQ0YGnI0oilMUsTlj5Hdsh2LZZQU23sCkRVmVJ4khyGrrqdK20XDEjlFvsvHg0tPJxackqdE3KN0Y5203vw53EXGclrGipwprUlvbem7M8MY97zekCS88M2GIZMD6tO4H1ycJQcb5GDXXJ4lBwdvxydcDncJcdHycnO5WLz5EcAAAD__yk3D0s=

# Verify that EXPLAIN ANALYZE on an unsupported query doesn't return an error.
statement ok
EXPLAIN ANALYZE (DISTSQL) SHOW QUERIES;

statement ok
EXPLAIN ANALYZE (DISTSQL) EXPLAIN SELECT 1

# This query verifies support for zeroNode in DistSQL.
query T
EXPLAIN (DISTSQL) SELECT sum(k) FROM kv WHERE FALSE
----
distribution: full
vectorized: true
·
• group (scalar)
│ estimated row count: 1
│
└── • norows
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkE1LxDAQhu_-ijCnLgS28ZiTq1YsdD9s1w-QHkI71tJuUzOJCKX_XZoeVoUVPc47eebJzAD01oKE6GmXrOINC67jbJ_dJQuWRUl0tWfkDkGzYDfpds2ad_Z4G6URe1EtIXDodIkbdUAC-QwCcg690QUSaTNFg38Qlx8gQw511zs7xTmHQhsEOYCtbYsg4UG1DmkZAocSrapbPzFklywIWfHquoYWkI8ctLPHKWRVhSDDkf_dtKoqg5Wy2izFd1t2vw4uxGmN-I8mRep15490VJxeIOeAZYXz0Ug7U-DO6MJr5nLrOR-USHbuirmIu7k1ffArLH6Fz3_A-Xj2GQAA__8VEanA

# This query verifies stat collection for the tableReader and windower.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT avg(k) OVER () FROM kv
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 5 (40 B)
maximum memory usage: <hidden>
network usage: <hidden>
·
• window
│ cluster nodes: <hidden>
│ actual row count: 5
│
└── • scan
      cluster nodes: <hidden>
      actual row count: 5
      KV rows read: 5
      KV bytes read: 40 B
      missing stats
      table: kv@primary
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzslU1u2zwQhvffKYhZJQAN_X8ouEpbpEXQHxdOkC4KLxhx4BKWSJWk7LiGj9UL9GSFKMut7KRWlwa8nBm-Hr7PjKk12G8FMLi9fn_9-o7wxexifknG99cTcnFJ3kzGH8h8ARSUFviRl2iBfYEIKMRAIQEKKVDIYEqhMjpHa7Vpjqy94EY8AgspSFXVrklPKeTaILA1OOkKBAZ3_KHACXKBJgiBgkDHZeHbzBdXlZElNyugcFtxZRkZBU3jce0YuWqu8e6eOFkiI-HPH7aNc60cKie1OigZvbTEIBeMbMUPK4dd6gV5BRQeuMu_oiW6dlXTprmU13WJCKYbCm20NWUdnyGwaEOfMf7bb620EWhQ9LxON0-g-SyV0Es0Qdbn8vL-7cVVdLnj0BDxnbw_RrJdbB0vij4FfMS8PoRT8kdSYqnNivCi0Dl3KBgJPZGmZnPTcCFC2vnhiaPMsmeZxT1m0fBliY4vSxCPguRU1iUebj0eYD0ZBempWE-GW08GWE9H_h9zEtbT4dbTAdaz0akYP_JZmKCttLK490o-_cth83qimGH71Fpdmxw_GZ37Nm049jqfEGhdW43a4Eb5kr_gn-Lor-L_e-JwXxz_S2dvxbsChW6pzZwU3KHKV7sBdfkll64_OoEWjeSF_M4P59rJtsPNUS5wO-Cu1E25q7WT7qolWstnvQPh4EXoI0nOSPaRpGck-0iyM5LNdPPfrwAAAP__Rova6Q==

# Very simple query to make it easier to spot regressions when rewriting results
# in test files.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM kv WHERE k = 0
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
maximum memory usage: <hidden>
network usage: <hidden>
·
• scan
  cluster nodes: <hidden>
  actual row count: 0
  KV rows read: 0
  KV bytes read: 0 B
  missing stats
  table: kv@primary
  spans: [/0 - /0]
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkFFLwzAUhd_9FZfzHGn7GhCGUnFsbtLN-SB9yNrLLO2SmqTTMfqz_AP-MmkjiojgS-B8J_dczj3BPTeQWKXz9GpNNV1ny1uqD_Rwk2Yp1XRBMQS0KXmh9uwgH5EgF2itKdg5Ywd0Gj9My1fIWKDSbecHnAsUxjLkCb7yDUNirbYNZ6xKttEQXLJXVTPG1odJa6u9skcIrFqlnaQojuLz4YkW9_M5BJadlzRJIDDbkK_2LCl-f3NBF0Z71r4y-pdlzYsjy6qUY5_ZhrZHz1-ILiGwVb54Ykem8-2wZvg4zn2DvBcI6rOf82rHkEkv_n-DjF1rtOMf9f9KjvtcgMsdhzs709mC76wpxjVBLse5EZTsfHCTIKY6WH3en30EAAD___6pnbQ=

# Test a query that has a subquery and a postquery.
statement ok
CREATE TABLE parent (p INT PRIMARY KEY);
INSERT INTO parent VALUES (1), (2);
CREATE TABLE child (c INT PRIMARY KEY, p INT REFERENCES parent(p))

query T
EXPLAIN ANALYZE (DISTSQL) INSERT INTO child VALUES (1, (SELECT min(p) FROM parent))
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 2 (16 B)
maximum memory usage: <hidden>
network usage: <hidden>
·
• root
│
├── • insert
│   │ cluster nodes: <hidden>
│   │ actual row count: 1
│   │ into: child(c, p)
│   │
│   └── • buffer
│       │ label: buffer 1
│       │
│       └── • values
│             size: 2 columns, 1 row
│
├── • subquery
│   │ id: @S1
│   │ original sql: (SELECT min(p) FROM parent)
│   │ exec mode: one row
│   │
│   └── • group (scalar)
│       │ cluster nodes: <hidden>
│       │ actual row count: 1
│       │
│       └── • scan
│             cluster nodes: <hidden>
│             actual row count: 1
│             KV rows read: 1
│             KV bytes read: 8 B
│             missing stats
│             table: parent@primary
│             spans: LIMITED SCAN
│             limit: 1
│
└── • constraint-check
    │
    └── • error if rows
        │ cluster nodes: <hidden>
        │ actual row count: 0
        │
        └── • lookup join (anti)
            │ cluster nodes: <hidden>
            │ actual row count: 0
            │ KV rows read: 1
            │ KV bytes read: 8 B
            │ table: parent@primary
            │ equality: (column2) = (p)
            │ equality cols are key
            │
            └── • filter
                │ cluster nodes: <hidden>
                │ actual row count: 1
                │ estimated row count: 1
                │ filter: column2 IS NOT NULL
                │
                └── • scan buffer
                      cluster nodes: <hidden>
                      actual row count: 1
                      label: buffer 1
·
Diagram 1 (subquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJysUtGK2zAQfO9XiH1KQEfsHIWip0tLCiGuUxJfoBRzKPLiE7UlV1o3l4Z8Vn-gX1Zsx-2Zo2lL71EzGmlmd47gPxcgYBFv5uuELeJkxdS9LjK2nUW38w0bhZyNNvNo_iZhpTajaszerlfvWCUdGhqPgYOxGcayRA_iI4TA4SWkHCpnFXpvXQMf20uL7AFEwEGbqqYGTjko6xDEEUhTgSAgtle2mkyBQ4YkddE-ig-oatLWMNIlChZ8_-aBw06SukfPbE1VTYIFwMHZ_S8ghPTEoTud__MkcwRxfeKPPIWXPSVyV-AaZYZuEgyddWO4qZwupTsAh00ljRfsCjhEutTEmoEst0Pjyy1T1hCap5mWW9ZGcCgz0Yt3B8IeesVe_1_08F-iz_LcYS7Jukk4TD6LP9zFq-Quvo2i0U3YFOH51zQdeP1DddboK2s8Dnz-7uXglHLALMeunt7WTuF7Z1X7TXdctboWyNBTx153h4XpqMbgY3F4UTy9LJ5eFAdDcRulTQUGaW_dJ1ZIQqMOPyff43upabiTDD06LQv9VT5dWC87F1Gh_oLnMvZU38ie61rZsyV6L_PBheBvi5CeXvwIAAD__2aUhTI=
Diagram 2 (main-query): https://cockroachdb.github.io/distsqlplan/decode.html#eJyMj89K80AUxfffU1zOqoWBL9nOTiRCoLbSVjeSRZxc2oF0bpy5wULJY_kCPpk0I4gLweX53Tl_5oL02sOiXu-q7Z7q9X5D7uj7jp5uVo_VjhalocWuWlW3ezr5sBiWdLfd3NPQRg66XMIgSMfr9sQJ9hklGoMhiuOUJF7RZX5Qd2fYwsCHYdQrbgycRIa9QL32DIteXNuTkzEoFf8LGHSsre_nYD6zG9VLIPUntlR8vCcYvLTqjpxIRh1GtXR1RXn7BiWaySCrr96k7YFhy8n8fduW0yAh8Y9RvyUXU2PA3YHz_5OM0fFDFDfXZLmZfTPoOGm-llnUIZ-mZvr3GQAA__9Sm4hi
Diagram 3 (postquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJy0k9Fu2jAUhu_3FEfnCiRLJNCLyVd0E0gpWTJBys3EhXEOrbdgZ7ajFSEeay-wJ5sSt9pY1Who6x3_b__Hn3-TI7qvFXJMstVsWUCSFTnIe1WVsL5Ob2crGMQMBqtZOntfwF7pQT2E-TL_ALWwpP1wiAy1KSkTe3LIP2GMG4a1NZKcM7a1jt2GpHxAHjFUum58a28YSmMJ-RG98hUhx8pIUYGTQsO22e3IQjSKkGFJXqiqG583nsN0jAzpgWTjldHg1Z44RD--O2S4FV7ekwPT-Lrd2-at-fbLiHFzYhjUI4fz4o6Qxyf296xzVXmyZEfxOWDwOUxjSFaQ5QVkt2n6KrzjS3hvjNJLEiXZ0ficuDjUxCGdzQu4zooEbvIkQ4bhgae1VXthD8gwNeZLU8NnozQY3d4Q2eN7tL-6w6FFb5mftPOiqs5vvFg_09JoT_p5OYt1NxAsiTJMXaxhe_D0ZL2Fd_9QbfRitZNLqg1_W7LWWFC7QByPJuct_3_Gq0sYl-Rqox2dQb00OTptGFJ5R-Hzdaaxkj5aI7tjgsy7XGeU5HxYjYNIdFhqAX8Px73hcX943Bue9IcnveGrP8Kb05ufAQAA__9GX6z9
