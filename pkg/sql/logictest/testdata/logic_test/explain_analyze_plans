# LogicTest: 5node 5node-spec-planning

# These tests are different from explain_analyze because they require manual
# data placement.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i);

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT, FAMILY (k, w))

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify that EXPLAIN ANALYZE (DISTSQL) annotates plans with collected
# statistics.

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {1}       1
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {5}       5
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# This query verifies stat collection for the tableReader, mergeJoiner, and
# aggregator.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT kv.k, avg(kw.k) FROM kv JOIN kw ON kv.k=kw.k GROUP BY kv.k]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzcWV1v4jgUfd9fYfmpowkT7ECHRhqJzmx3xSyFbmlX2x2hKiVeGgEJ64TSbtX_vgppVRqIb6BLyPVbPuzE59zrYx_fRxr-M6Y27Z20T75dkJkck1_Ou6fkx8mfZ-3jVoccd47bV3-dkIOfW72L3u_tD-S56eju08ggzt3wYDT_NPqQdBvdke_dVoeM5qTbWTQhX0j8nvx63r08I1-vFg_71KB-4IqOMxEhtX9QRg3KqUEtatAaNWid9g06lcFAhGEg4yaPiw4t957aVYN6_nQWxY_7Bh0EUlD7kUZeNBbUphfOzVicC8cV0qxSg7oicrzx4jeju-ZUehNHPlCD9qaOH9qkYsY_7s4imzTjYbS6JPImwibVkBr0tz-IDOYhkcJxbcKSJzcPkXh51CBfqUFvnGhwK0ISzKJp_KX4v9FsOl56xGj_yaDJXQLoZcA3D-TWCW_fDrUZt-8bNIycoaA2ezK2Y-AwxcB8lQGT4eCAZ3Lw-p1AukIKN_2dj_GPc7VaQ-epkEPxPfB8IU2Wyqix-Ds6aLKPH75Ib3ibXL5SaTRjXsW9GMwiL_CXSZ0492QiJoF8IM54HAycSLg2qS6YjN-FAxnzSVwvHK222ILrVx6tTXLpeDiUYuhEgTRZfSU8Bu0mVD4nznHn6rrTvbjuXLbbB00WU9G7PD1o8vjqW_eyc_F8vZaTnWdQ7X0ZpKaHV99HT-_y9LoVE2TFd-fCd4VcJBFpcrNp_Y-kvRJSz0HIzF9HyVo2OkElmJo8lSfbDrueOezDN8Nm-dWQweuBySumhUAN2bYcfM6xIiDhgGdyUOCKwHRbEYBcWl4RDvVaETbOIGBFYNhXBJ5fVngOabUqZg2BrLBtOWjkkFYkHPBMDgqUVq6btAK5tCytn_WS1o0zCJBWjl1arfyyYuWQ1lrFrCOQFbYtB0c5pBUJBzyTgwKl1dJNWoFcWpbWhl7SunEGAdJqYZfWWn5ZqeWQ1noFgaiwbRmow8JaMRlxfJcwEkS3QiJgg2eyUaDE1nSTWCCrliX2SC-J3TiDAImtYZdYoGpwLsJp4IcidWS8_svVmC3hDkXCbhjM5ECcyWCw-E1y2130W5zQuCKMkrc8uWn5L6_CyImyj5x3Po-qiXTkB9DIBOCLaB7IEZk7XrSMwRWhkJ4z9v510vBeujwL8EB4d4vRL716UeLld7vAxawCgLH3A2MbA9M1YryIiO0GGNtAI3gZNUINoJEJAHdgUhqxG2C70QgAmK4R40VEbDfAeBpYdRnYW1zVdGdLyUqtZJuQNfmqBsCqaKUfAFbXFBjXNWIcb8RqSoVJ4Up3ris788O3-rR3iVkD_3BLo1b2sKpxZbsBJIEpxKjtIzKIjRowlfBa689bGrWyB0yNK9sNlEYj1AAKMWr7iAxiowZMJbzWuqHcCR2pjdrRlkat7NFW41L4t9I4UAAB3m2_GhhiowYAwxsxtnIQrnJqiKSTbXIQjipimxyQawRMYc5Ks3WEIBQRnP1MJ7zOma2chmtixABgeLf7ADCFQyuPUAAQigjOjoQCmE547TNbOa1_s1ViNbUdYytn4pr4MQAY4oIahCx7d1waqwlAQGzJIGSIPZm6AIbYk-laFwOAId72a1swg5AhKGZC0wlxcHQtjgHAEG_7ta2aQcgQVDSh6YQ4OOoKGQNKZEzXGhkADLMn07Z4BiBTWLXyuE1t62Rc1zoZ33-dbC_A8NbJAGCIPRmETNuYKaxaaTaRfP91sh0Jha51MgAYYk8GIdM2ZgqrVh6hUNfJOFAn47rWyQBgiD0ZhAzxtl_b8hmEDEFtk2tTJ-s__fRfAAAA__9V2QGl

# This query verifies stats collection for the hashJoiner, distinct and sorter.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT DISTINCT(kw.w) FROM kv JOIN kw ON kv.k = kw.w ORDER BY kw.w]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzcm99v4kYQx9_7V6z26aKaM7s2JEE6KblLqnJN4ZpEVa8nHhy8DRY_TNdLSBrlf68Mh8AY79icMDt-O2Mb_J2ZfGa_s75XGv07oi16d31z_emezOSI_HLb_Z18u_7ry81lu0MuO5c3X_--Ju-u2nf3d3_cnJDvl8bH7c6ne_JuOH8_P1neNnwin7vtDhnOSbdDhk_vh-QDic-T7u3V9S35-HVx1KMWnYS-6HhjEdHWN8qoRTm1qEMt6lKLNmjPolMZ9kUUhTK-5HVxQ9t_pq26RYPJdKbij3sW7YdS0NYrVYEaCdqi997DSNwKzxfSrlOL-kJ5wWjxM8Oni6kMxp58oRa9m3qTqEVqdvzD3ZlqkYv4MdpdooKxaJF6RC36259EhvOISOH5LcKWnzy8KLH66Ix8pBZ98FR_ICISztQ0_qb4d9VsOtr4iNHem0WXR0tBqwd-eCEDLxokH_Uivr5n0Uh5j4K22Ju1XwSaWxGYpyNgs80YcGNjwDNjsP6e2SSUvpDCT3xTL74TumRHIH_1osHnMJgIabOtUhqJf9S7C3byQQaPg8W_EhEUz6I_U0E42Qzk2HsmYzEO5QvxRqOw7ynht0h9Eb34XNSXcQyJH0TD9BV7xHcdO6dI_VwFkQomfWWzRiohe0g7eGG4P1AYOvm8fiT5a2mNInm7C6US0uaprP1sYEU2cyRtV8oWcnbmrRPWwqntbCVtp-4cT97IfPLTxJOz_CxmcDeyec120PWjAjE4zdGPEjHA0o9Yyf2IVagfAfWz7kdNhP2oWGFo-xEzrB8BeVv1o1TWzO9HPD_ReA6qOzXbRUf1AjE4y0H1RAywUJ2XTHVeIaoD9bOm-ilCqhcrDC3VuWFUB_K2onoqa-ZT3clPNCcH1d2a3UBH9QIxOM9B9UQMsFDdKZnqToWoDtTPmupnCKlerDC0VHcMozqQtxXVU1kzn-pufqK5OajeqKFjeoEINGCm12xGvIlPGAnVQEh0dHdLprtbIboDlbSm-zlCuhcrDC3dXcPoDuRtRfdU1synO7DncSuiaTiJxPZf9c5vrsdJFf6jWFZAFM5kX3yRYX_xM8vD7uK-xWzLF5FanuXLg_ZkdSpSnsreXjh48Op0Aa78As4zBUyEmodySOZeoDY1-CISMvBGwX_etrzVLd_Z3xfB0-LpN06tmsDmuUPoYo0ShLEfF8aKCuOsohnjp2iFsQKM4CYyQi_gPFMA7sRsMeIwwg7DCKDiWEUztsUITML4trD6pjAnoau-fbOjjYpr2CJkR73qBTC8PQ0Qhren6YVxp6rC8C6IXS1hGnrCNLQ3N5NB2b65qWdb8q-7fnQ-7Yjd6Z4uz_Sa0OvKrnUkiSnF5R0jM4hdHiCsjI54mDX32Z4uz_SE6XVlmz9jGKEXUIrLO0ZmELs8QFgZLu8wjDjXroRYXb8IY_oJWbbPMz3fgDCN_zPGwUIS8Do9QBliqwcpw-v1WGpOlgQNB0Cjn0Y10a7RGODu8SZcLwxxJQMTtGyHZ8z6Eyq6Mrzccf6cEDe91LSsIm4OEIZ4L08vTGPzzAEFUHRlGLoDgQJQhnffjukn46wJrLRSs_GqWDq9MMRbepCy7KZnjlnVS8Bs6QBliBfCqcF5EjRnAGhSM7WqWLrUTK0qlk4vrIxKPkrGEG_aQbVo2hxzDwl4LR0v8qo2piUoIKwMS3cYUADCEO_cQbWY7fSMAQUkAa-l4_rhOQeG5zw1PK-IpQOEIbZ0kDLETU-vTOP0jDGrkAS8lo6nxudJ0LgAaPRvdOK1dDw1Uyvd0h1FGOJK1gtDbOmgWkTc9ABlps0xd0kApn14nY9eGN5dOkAYZksH1CLetzEhZdlOzxxQ6IfnHBiec_0LqYgtHfBuNOLuBihDbOmAt6Pxbt5Bykz7_0i7Grf-DW8HeMPbSQ3VsFq63ttP_wcAAP__VHp0og==

# This query verifies stats collection for WITH ORDINALITY and the hashJoiner.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT * FROM kv WITH ORDINALITY AS a, kv WITH ORDINALITY AS b]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMUc-P0kAUvvtXvLyTmjHQUjzMqehitop0BaKumx6GzsvuhLZTZ6YrhPC_m7ZrBARcNCYe53vvm-_HW6P9miHH6XA0fD2DymTwZhK_h5vh56vRIBrDYDwYXX8ZwtOLaDqbfhg9g4fV5-3i4h4-RbNLiCcX0XgwimbXMJiCYEcG8wQZFlrSWORkkd-ghwnD0uiUrNWmhtbNQiSXyLsMVVFWroYThqk2hHyNTrmMkONMzDOakJBkOl1kKMkJlTXfLu7D0qhcmBUynJaisBxeIMMoBqdy4tC1yPDdRzD6mwVDQnLot8h85egHFHThFTKcC5fekQVdubJyHGoxV5XZFtTHZMOwfT3YtU7cEnJvwx4fKTZSFSJTbtXxdhPRktLKKV1sB_grY_45xra79v_brnt_2HXvX3cdHDX2009VaCPJkNwxk9TM360cSHcp7N1brQoynWA3XVxbDT0W-izssTBgYZ-FL5Edjp2LJeSUa7MCkWU6FY4kh_ZW9cympi4GpLKLXzceUZp_vLX-OeeckC11YWm_vYM_d-vKSN5SewKrK5PSldFpI9M-44bXAJKsa6de-4iKdlQb3CZ7J8nBDtnbJ_snyb3Tyr0zlP19cnCS3N9TTjZPvgcAAP__YwsE7w==

# Verify that EXPLAIN ANALYZE on an unsupported query doesn't return an error.
statement ok
EXPLAIN ANALYZE (DISTSQL) SHOW QUERIES;

statement ok
EXPLAIN ANALYZE (DISTSQL) EXPLAIN SELECT 1

# This query verifies support for zeroNode in DistSQL.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT sum(k) FROM kv WHERE FALSE]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkF9LwzAUxd_9FOE-dRBY42OenFqxsH-u8w-MPIT2WseyZuYmIpR-d2kj6ISJPt5zzzm_5LZArwYkFNk0u1qz4Ay7WS1mbJM9LaeTfM6S67xYF3fTEfu0UNgnu1F07d7Y4222ytizNoQKODS2wrneI4HcgADF4eBsiUTW9VI7GPLqHWTKYdscgu9lxaG0DkG24LfeIEh40CYgjVPgUKHXWzM0puySJSkrX0KzoxGojoMN_quFvK4RZNrxv5Mmde2w1t66sTimFfez5EKcxoj_YFZIB9sQHiFOf0BxwKrGeDSywZW4dLYcMHFcDLlBqJB83Io45E1c9Q_8Hha_hs9_hFV39hEAAP__TsavHw==

# This query verifies stat collection for the tableReader and windower.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT avg(k) OVER () FROM kv]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzclE2P2jwQx-_Pp7DmBJJRXnlU5bS0pRVaCltA9GWVg4lH1CKJU9vhpYjvXiWBNqDdbvaGOHpm_pn5zT-aPeifMQQw7Q_772YkVzH5MBl_Io_9rw_D3mBEeqPe8Nv3Pmm9H0xn08_DNjmWsvWytWqT8bw_Ia12pVqtQ6CQSo4jlqCG4BEcoOACBQ8o-EChCyGFTMkItZaqKNmXggHfQmBTEGmWmyIcUoikQgj2YISJEQKYsUWME2QclWUDBY6Gibhss1rfZUokTO2AwjRjqQ5Ixyoaj3MTkLtijMGYGJFgQGwNFO7nRMmNJgoZD4hTRRY7g6fQG_IWKCyYiX6gJjI3WfGloq_Js7gWciA8UKhex8m1YUuEwDnQZ-j-QuWpVBwV8jOg8PAE_xeRcrlBZXXP4Xvzj607p_0HtsCusRXV2rA4ruMnbEsSTKTakVwjD4hvk3tREOMWo9wImdbLG6yh--wa3LM1OM1Ndl422XI7lndVNrvN-dwGfF7H8q-Kz2vO5zXg8zvl73w9fH5zPr8BX7dzVXQvnNgJ6kymGi-O0dNftosjhXyJ1UXTMlcRPigZlW2q57jUlQGO2lRZp3oM0jJVDlgXO_8U_38mti_F7ms6lyglFaRoNlKtyIYJU7eIo0YlWCx-scujeJIcLYxQrPFo4yl18vKUs1_h5jmXd6Nc_o1ydW-FKzz89zsAAP__lLBIaQ==

# Very simple query to make it easier to spot regressions when rewriting results
# in test files.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT k FROM kv WHERE k = 0];
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkF_L0zAUxu_9FIfHG4VI09uA8E6tWKzrazv8N3qRtYdZ2jU1Sadj9LtLmyHsQngvn9_55UlOrnC_eiiUSZa83dFke3pf5J9on3x7zDbpljbbTfb9R0Iv3qXlrvycvaSb2gWxO9PXD0mRUEevSVYQGEzDW31iB7VHjEpgtKZm54xd0HUV0uYPlBRoh3HyC64EamMZ6grf-p6hsNOHngvWDdtIQqBhr9t-re3OD6NtT9peIFCOenCKIvkqktFzCOSTV_QQQyDNybcnViQdBD5-IWt-O7KsG0UykMPF8z9EbyBw0L7-yY7M5MelaRH9NPZ3qJoFQrq93nl9ZKh4Fk_fsGA3msHx3XL_a5ZzJcDNkcMvOjPZmh-tqddrQszXcyto2PkwjUNIhzCaq_nZ3wAAAP__8UOd1A==
