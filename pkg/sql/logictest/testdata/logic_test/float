# LogicTest: default parallel-stmts distsql

# -0 and 0 should not be possible in a unique index.

statement ok
CREATE TABLE p (f float null, unique index (f))

statement ok
INSERT INTO p VALUES (NULL), ('NaN'::float), ('Inf'::float), ('-Inf'::float), ('0'::float), (1), (-1)

# -0 and 0 should both equate to zero with or without an index.

statement error duplicate key value
INSERT INTO p VALUES ('-0'::float)

# Verify that lookups for NaN use indices when possible:
# - `WHERE f IS NaN` should perform a point lookup.
# - `WHERE f = 'NaN'` should also perform a point lookup.
# - `WHERE isnan(f)` is a function so it can't perform a point lookup.

query TTT
EXPLAIN SELECT * FROM p WHERE f IS NaN
----
render     ·      ·
 └── scan  ·      ·
·          table  p@p_f_key
·          spans  /NaN-/NaN/PrefixEnd

query TTT
EXPLAIN SELECT * FROM p WHERE f = 'NaN'
----
render     ·      ·
 └── scan  ·      ·
·          table  p@p_f_key
·          spans  /NaN-/NaN/PrefixEnd

query TTT
EXPLAIN SELECT * FROM p WHERE isnan(f)
----
render     ·      ·
 └── scan  ·      ·
·          table  p@p_f_key
·          spans  ALL

query R
SELECT * FROM p WHERE f = 'NaN'
----
NaN

query RBBB
SELECT f, f IS NaN, f = 'NaN', isnan(f) FROM p@{FORCE_INDEX=primary} ORDER BY 1
----
NULL  NULL   NULL   NULL
NaN   true   true   true
-Inf  false  false  false
-1    false  false  false
0     false  false  false
1     false  false  false
+Inf  false  false  false

query RBBB
SELECT f, f IS NaN, f = 'NaN', isnan(f) FROM p@{FORCE_INDEX=p_f_key} ORDER BY 1
----
NULL  NULL   NULL   NULL
NaN   true   true   true
-Inf  false  false  false
-1    false  false  false
0     false  false  false
1     false  false  false
+Inf  false  false  false

query RB rowsort
select f, f > 'NaN' from p@{FORCE_INDEX=primary} where f > 'NaN' ORDER BY f
----
-Inf  true
-1    true
0     true
1     true
+Inf  true

query RB rowsort
select f, f > 'NaN' from p@{FORCE_INDEX=p_f_key} where f > 'NaN' ORDER BY f
----
-Inf  true
-1    true
0     true
1     true
+Inf  true

statement ok
CREATE TABLE i (f float)

statement ok
INSERT INTO i VALUES (0), ('-0'::float)

query R rowsort
SELECT * FROM i WHERE f = 0
----
-0
0

statement ok
CREATE INDEX ON i (f)

query R rowsort
SELECT * FROM i WHERE f = 0
----
-0
0

statement error duplicate key value
CREATE UNIQUE INDEX ON i (f)
