# Basic IPv4 tests

query T
SELECT '192.168.1.2/24':::CIDR;
----
192.168.1.2/24

query T
SELECT '192.168.1.2/32':::CIDR;
----
192.168.1.2

query T
SELECT '192.168.1.2':::CIDR;
----
192.168.1.2

query T
SELECT '192.168.1.2/24':::CIDR;
----
192.168.1.2/24

query T
SELECT '0.0.0.0':::CIDR;
----
0.0.0.0

query T
SELECT '::/0'::cidr::text::cidr;
----
::/0

# Basic IPv6 tests

query T
SELECT '::ffff:192.168.1.2':::CIDR;
----
::ffff:192.168.1.2

query T
SELECT '::ffff:192.168.1.2/120':::CIDR;
----
::ffff:192.168.1.2/120

query T
SELECT '::ffff':::CIDR;
----
::ffff

query T
SELECT '2001:4f8:3:ba:2e0:81ff:fe22:d1f1/120':::CIDR;
----
2001:4f8:3:ba:2e0:81ff:fe22:d1f1/120

query T
SELECT '2001:4f8:3:ba:2e0:81ff:fe22:d1f1':::CIDR;
----
2001:4f8:3:ba:2e0:81ff:fe22:d1f1

# Test casting

query T
SELECT '192.168.1.2/24'::CIDR;
----
192.168.1.2/24


query T
SELECT '192.168.1.200/10':::CIDR
----
192.168.1.200/10

# Test for less than 4 octets with mask

query T
SELECT '192.168.1/10':::CIDR
----
192.168.1.0/10

query T
SELECT '192.168/10':::CIDR
----
192.168.0.0/10

query T
SELECT '192/10':::CIDR
----
192.0.0.0/10

# Test for preservation of masked bits

query T
SELECT '255/10':::CIDR
----
255.0.0.0/10

# Test that less than 4 octets requires a mask

statement error could not parse
SELECT '192':::CIDR

statement error could not parse
SELECT '19.0':::CIDR

# Test that the mask can't be larger than the provided octet bits

statement error could not parse
SELECT '19.0/32':::CIDR

statement error could not parse
SELECT '19/32':::CIDR

statement error could not parse
SELECT '19/16':::CIDR

query T
SELECT '19/15':::CIDR
----
19.0.0.0/15

# Misc tests

statement error could not parse
SELECT '192.168/24/1':::CIDR

statement error could not parse
SELECT '':::CIDR

statement error could not parse
SELECT '0':::CIDR

query T
SELECT '0.0.0.0':::CIDR
----
0.0.0.0

# Testing equivilance

query B
SELECT '::ffff:192.168.0.1/24'::CIDR = '::ffff:192.168.0.1/24'::CIDR
----
true

query B
SELECT '::ffff:192.168.0.1/24'::CIDR = '::ffff:192.168.0.1/25'::CIDR
----
false

query B
SELECT '::ffff:192.168.0.1/24'::CIDR = '::ffff:192.168.0.1'::CIDR
----
false

query B
SELECT '::ffff:192.168.0.1'::CIDR = '::ffff:192.168.0.1'::CIDR
----
true

# Ensure IPv4-mapped IPv6 is not equal to its mapped IPv4

query B
SELECT '::ffff:192.168.0.1'::CIDR = '192.168.0.1'::CIDR
----
false

query B
SELECT '192.168.0.1'::CIDR = '192.168.0.1'::CIDR
----
true

query B
SELECT '192.168.0.1/0'::CIDR = '192.168.0.1'::CIDR
----
false

query B
SELECT '192.168.0.1/0'::CIDR = '192.168.0.1/0'::CIDR
----
true

query B
SELECT '192.168.0.1/0'::CIDR = '192.168.0.1/0'::CIDR
----
true

# Testing basic comparisons

query B
SELECT '192.168.0.2/24'::CIDR < '192.168.0.1/25'::CIDR
----
true

query B
SELECT '1.2.3.4':::CIDR < '1.2.3.5':::CIDR
----
true

query B
SELECT '192.168.0.1/0'::CIDR > '192.168.0.1/0'::CIDR
----
false

query B
SELECT '192.168.0.0'::CIDR > '192.168.0.1/0'::CIDR
----
true

query B
SELECT '::ffff:1.2.3.4':::CIDR > '1.2.3.4':::CIDR
----
true

# Testing contains/contained by logic

query B
SELECT '192.168.200.95/17'::CIDR >> '192.168.162.1'::CIDR
----
true

query B
SELECT '192.168.200.95/8'::CIDR >> '192.168.2.1/8'::CIDR
----
false

query B
SELECT '2001:0db8:0000:0000:0500:5000:0000:0001/50'::CIDR >> '2001:0db8:0000:0000:0500:5000:0000:0001/50'::CIDR
----
false

query B
SELECT '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR >> '2001:0db8:0000:0000:0000:0000:0000:0001/100'::CIDR
----
false

query B
SELECT '192.168.200.95/8'::CIDR >>= '192.168.2.1/8'::CIDR
----
true

query B
SELECT '192.168.200.95/17'::CIDR >>= '192.168.2.1/24'::CIDR
----
false

query B
SELECT '192.168.200.95/8'::CIDR >>= '192.168.2.1/8'::CIDR
----
true

query B
SELECT '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR >>= '2001:0db8:0000:0000:0000:0000:0000:0001/100'::CIDR
----
false

query B
SELECT '2001:0db8:0000:0000:0500:5000:0000:0001/50'::CIDR >>= '2001:0db8:0000:0000:0500:5000:0000:0001/50'::CIDR
----
true

query B
SELECT '192.168.200.95'::CIDR << '192.168.2.1/8'::CIDR
----
true

query B
SELECT '192.168.200.95/8'::CIDR << '192.168.2.1/8'::CIDR
----
false

query B
SELECT '192.168.200.95'::CIDR <<= '192.168.2.1/8'::CIDR
----
true

query B
SELECT '192.168.200.95/8'::CIDR <<= '192.168.2.1/8'::CIDR
----
true

query B
SELECT '2001:0db8:0000:0000:0500:5000:0000:0001/50'::CIDR << '2001:0db8:0000:0000:0000:0000:0000:0001/100'::CIDR
----
false

query B
SELECT '2001:0db8:0000:0000:0500:5000:0000:0001/50'::CIDR << '2001:0db8:0000:0000:0500:5000:0000:0001/50'::CIDR
----
false

query B
SELECT '2001:0db8:0000:0000:0500:5000:0000:0001/50'::CIDR <<= '2001:0db8:0000:0000:0000:0000:0000:0001/100'::CIDR
----
false

query B
SELECT '2001:0db8:0000:0000:0500:5000:0000:0001/50'::CIDR <<= '2001:0db8:0000:0000:0500:5000:0000:0001/50'::CIDR
----
true

query B
SELECT '192.168.200.95/16'::CIDR && '192.168.2.1/24'::CIDR
----
true

query B
SELECT '192.168.200.95/17'::CIDR && '192.168.2.1/24'::CIDR
----
false

query B
SELECT '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR && '2001:0db8:0000:0000:0000:0000:0000:0001/100'::CIDR
----
false

query B
SELECT '2001:0db8:0000:0000:0500:5000:0000:0001/50'::CIDR && '2001:0db8:0000:0000:0000:0000:0000:0001/100'::CIDR
----
true

query B
SELECT '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR >> '192.168.2.1/8'::CIDR
----
false

query B
SELECT '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR >>= '192.168.2.1/8'::CIDR
----
false

query B
SELECT '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR << '192.168.2.1/8'::CIDR
----
false

query B
SELECT '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR <<= '192.168.2.1/8'::CIDR
----
false

query B
SELECT '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR && '192.168.2.1/8'::CIDR
----
false

query B
SELECT '192.168.2.1/8'::CIDR >> '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR
----
false

query B
SELECT '192.168.2.1/8'::CIDR >>= '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR
----
false

query B
SELECT '192.168.2.1/8'::CIDR << '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR
----
false

query B
SELECT '192.168.2.1/8'::CIDR <<= '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR
----
false

query B
SELECT '192.168.2.1/8'::CIDR && '2001:0db8:0500:0000:0500:5000:0000:0001/50'::CIDR
----
false

# Binary operations

query T
SELECT ~'192.168.1.2/10':::CIDR
----
63.87.254.253/10

query T
SELECT ~'192.168.1.2/0':::CIDR
----
63.87.254.253/0

query T
SELECT ~'2001:4f8:3:ba::/64':::CIDR
----
dffe:fb07:fffc:ff45:ffff:ffff:ffff:ffff/64

query T
SELECT '255.255.255.250/2':::CIDR & '0.5.0.5/17':::CIDR
----
0.5.0.0/17

query T
SELECT '0000:0564:0000:0aab:0000:0000:0060:0005/23':::CIDR & 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:0005/123':::CIDR
----
0:564:0:aab::60:5/123

query T
SELECT '192.168.1.2/1':::CIDR | '192.168.1.3/17':::CIDR
----
192.168.1.3/17

query T
SELECT '6e32:8a01:373b:c9ce:8ed5:9f7f:dc7e:5cfc/99':::CIDR | 'c33e:9867:5c98:f0a2:2b2:abf9:c7a5:67d':::CIDR
----
ef3e:9a67:7fbb:f9ee:8ef7:bfff:dfff:5efd

statement error pq: cannot AND inet values of different sizes
SELECT '0000:0564:0000:0aab:0000:0000:0060:0005/23':::CIDR & '192.168.1.2/1':::CIDR

statement error pq: cannot OR inet values of different sizes
SELECT '0000:0564:0000:0aab:0000:0000:0060:0005/23':::CIDR | '192.168.1.2/1':::CIDR

# Addition and Subtraction

query T
SELECT '192.168.1.2':::CIDR + 184836468
----
203.172.98.118

query T
SELECT '0.0.0.5':::CIDR - 5
----
0.0.0.0

query T
SELECT '203.172.98.118/23':::CIDR - 184836468
----
192.168.1.2/23

query T
SELECT '0.0.0.5':::CIDR - -5
----
0.0.0.10

query T
SELECT '::4104:4066:5de7:b1fa':::CIDR - 4684658846864486648
----
::ffff:192.168.1.2

query T
SELECT '::4104:4066:5de7:b1fa/121':::CIDR + -4684658846864486648
----
::ffff:192.168.1.2/121

query T
SELECT '::4104:4066:5de7:b1fa/101':::CIDR + 2
----
::4104:4066:5de7:b1fc/101

query T
SELECT '::5/128':::CIDR - -2
----
::7

query I
SELECT '203.172.98.118/17':::CIDR - '192.168.1.2/1':::CIDR
----
184836468

query I
SELECT '::4104:4066:5de7:b1fa/79':::CIDR - '::ffff:192.168.1.2/44':::CIDR
----
4684658846864486648

statement error pq: result out of range
SELECT '255.255.0.5':::CIDR + 2000000000

statement error pq: result out of range
SELECT '0.0.0.5':::CIDR - 10

statement error pq: result out of range
SELECT '::5/128':::CIDR - 10

statement error pq: result out of range
SELECT 'ff00:5::/128':::CIDR - '::ff00:5/128':::CIDR

# Edge case: postgres compatibility

query T
SELECT '0.0.0.0.':::CIDR
----
0.0.0.0

statement error could not parse
SELECT '.0.0.0.0.':::CIDR

statement error could not parse
SELECT '0.0.0.0.0':::CIDR

# Test storage round-trip

statement ok
CREATE TABLE u (ip cidr PRIMARY KEY,
                ip2 cidr)

statement ok
INSERT INTO u VALUES ('192.168.0.1', '192.168.0.1')

statement error duplicate key value
INSERT INTO u VALUES ('192.168.0.1', '192.168.0.2')

statement ok
INSERT INTO u VALUES ('192.168.0.2', '192.168.0.2')

statement ok
INSERT INTO u VALUES ('192.168.0.5/24', '192.168.0.5')

statement ok
INSERT INTO u VALUES ('192.168.0.1/31', '192.168.0.1')

statement ok
INSERT INTO u VALUES ('192.168.0.0', '192.168.0.1')

statement ok
INSERT INTO u VALUES ('192.0.0.0', '127.0.0.1')

statement ok
INSERT INTO u (ip) VALUES ('::1')

statement ok
INSERT INTO u (ip) VALUES ('::ffff:1.2.3.4')

query TT
SELECT * FROM u ORDER BY ip
----
192.168.0.5/24  192.168.0.5
192.168.0.1/31  192.168.0.1
192.0.0.0       127.0.0.1
192.168.0.0     192.168.0.1
192.168.0.1     192.168.0.1
192.168.0.2     192.168.0.2
::1             NULL
::ffff:1.2.3.4  NULL

statement ok
CREATE TABLE arrays (ips cidr[])

statement ok
INSERT INTO arrays VALUES
    (ARRAY[]),
    (ARRAY['192.168.0.1/10', '::1']),
    (ARRAY['192.168.0.1', '192.168.0.1/10', '::1', '::ffff:1.2.3.4'])

query T rowsort
SELECT * FROM arrays
----
{}
{192.168.0.1/10,::1}
{192.168.0.1,192.168.0.1/10,::1,::ffff:1.2.3.4}


# Testing builtins

# TODO(jeb) look at this
# Test abbrev
# For INET, abbev has the same output as ::string. This is not the case for
# CIDR. The input string is not always equal to the output string, e.g.
# abbrev('10.0/16'::CIDR) => '10.0.0.0/16'

query T
SELECT abbrev('10.1.0.0/16'::CIDR)
----
10.1.0.0/16

query T
SELECT abbrev('192.168.0.1/16'::CIDR)
----
192.168.0.1/16

query T
SELECT abbrev('192.168.0.1'::CIDR)
----
192.168.0.1

query T
SELECT abbrev('192.168.0.1/32'::CIDR)
----
192.168.0.1

query T
SELECT abbrev('10.0/16'::CIDR)
----
10.0.0.0/16

query T
SELECT abbrev('::ffff:192.168.0.1'::CIDR)
----
::ffff:192.168.0.1

query T
SELECT abbrev('::ffff:192.168.0.1/24'::CIDR)
----
::ffff:192.168.0.1/24


# Test set_masklen

query T
SELECT set_masklen('10.1.0.0/16'::CIDR, 10)
----
10.1.0.0/10

query T
SELECT set_masklen('192.168.0.1/16'::CIDR, 32)
----
192.168.0.1

statement error invalid mask length
SELECT set_masklen('192.168.0.1'::CIDR, 100)

statement error invalid mask length
SELECT set_masklen('192.168.0.1'::CIDR, 33)

statement error invalid mask length
SELECT set_masklen('192.168.0.1'::CIDR, -1)

query T
SELECT set_masklen('192.168.0.1'::CIDR, 0)
----
192.168.0.1/0

query T
SELECT set_masklen('::ffff:192.168.0.1'::CIDR, 100)
----
::ffff:192.168.0.1/100

statement error invalid mask length
SELECT set_masklen('::ffff:192.168.0.1'::CIDR, -1)

statement error invalid mask length
SELECT set_masklen('::ffff:192.168.0.1'::CIDR, 129)

query T
SELECT set_masklen('::ffff:192.168.0.1/24'::CIDR, 0)
----
::ffff:192.168.0.1/0


# TODO(jeb) need tests for inet_merge (not sure is here or in inet, but whatever)
