# LogicTest: default

# Verify information_schema database handles mutation statements correctly.

query error user root does not have DROP privilege on database information_schema
ALTER DATABASE information_schema RENAME TO not_information_schema

statement error user root does not have CREATE privilege on database information_schema
CREATE TABLE information_schema.t (x INT)

query error user root does not have DROP privilege on database information_schema
DROP DATABASE information_schema


# Verify other databases cant be called "information_schema".

statement ok
CREATE DATABASE other_db

statement error the new database name "information_schema" already exists
ALTER DATABASE other_db RENAME TO information_schema

statement error database "information_schema" already exists
CREATE DATABASE information_schema

statement ok
DROP DATABASE other_db CASCADE


# Verify information_schema tables handle mutation statements correctly.

statement error user root does not have DROP privilege on relation tables
ALTER TABLE information_schema.tables RENAME TO information_schema.bad

statement error user root does not have CREATE privilege on relation tables
ALTER TABLE information_schema.tables RENAME COLUMN x TO y

statement error user root does not have CREATE privilege on relation tables
ALTER TABLE information_schema.tables ADD COLUMN x DECIMAL

statement error user root does not have CREATE privilege on relation tables
ALTER TABLE information_schema.tables DROP COLUMN x

statement error user root does not have CREATE privilege on relation tables
ALTER TABLE information_schema.tables ADD CONSTRAINT foo UNIQUE (b)

statement error user root does not have CREATE privilege on relation tables
ALTER TABLE information_schema.tables DROP CONSTRAINT bar

statement error user root does not have CREATE privilege on relation tables
ALTER TABLE information_schema.tables ALTER COLUMN x SET DEFAULT 'foo'

statement error user root does not have CREATE privilege on relation tables
ALTER TABLE information_schema.tables ALTER x DROP NOT NULL

statement error user root does not have CREATE privilege on relation tables
CREATE INDEX i on information_schema.tables (x)

statement error user root does not have DROP privilege on relation tables
DROP TABLE information_schema.tables

statement error user root does not have CREATE privilege on relation tables
DROP INDEX information_schema.tables@i

statement error user root does not have GRANT privilege on relation tables
GRANT CREATE ON information_schema.tables TO root

statement error user root does not have GRANT privilege on relation tables
REVOKE CREATE ON information_schema.tables FROM root


# Verify information_schema tables handles read-only property correctly.

query error user root does not have DELETE privilege on relation tables
DELETE FROM information_schema.tables

query error user root does not have INSERT privilege on relation tables
INSERT INTO information_schema.tables VALUES ('abc')

statement error user root does not have UPDATE privilege on relation tables
UPDATE information_schema.tables SET a = 'abc'

statement error user root does not have DROP privilege on relation tables
TRUNCATE TABLE information_schema.tables


# Verify information_schema can be used like a normal database.

statement ok
SET DATABASE = information_schema

statement ok
SET DATABASE = test


# Verify information_schema handles reflection correctly.

query T
SHOW DATABASES
----
crdb_internal
information_schema
pg_catalog
system
test

query T
SHOW TABLES FROM information_schema
----
column_privileges
columns
key_column_usage
referential_constraints
schema_privileges
schemata
sequences
statistics
table_constraints
table_privileges
tables
user_privileges
views

query TT colnames
SHOW CREATE TABLE information_schema.tables
----
Table                      CreateTable
information_schema.tables  CREATE TABLE tables (
                           table_catalog STRING NOT NULL,
                           table_schema STRING NOT NULL,
                           table_name STRING NOT NULL,
                           table_type STRING NOT NULL,
                           version INT NULL
)

query TTBTT colnames
SHOW COLUMNS FROM information_schema.tables
----
Field          Type    Null   Default  Indices
table_catalog  STRING  false  NULL     {}
table_schema   STRING  false  NULL     {}
table_name     STRING  false  NULL     {}
table_type     STRING  false  NULL     {}
version        INT     true   NULL     {}

query TTBITTBB colnames
SHOW INDEXES FROM information_schema.tables
----
Table  Name  Unique  Seq  Column  Direction  Storing  Implicit

query TTTTT colnames
SHOW CONSTRAINTS FROM information_schema.tables
----
Table   Name     Type  Column(s)  Details

query TTTT colnames
SHOW GRANTS ON information_schema.tables
----
Database  Table  User  Privileges


# Verify selecting from information_schema.

## information_schema.schemata

query TTTT colnames
SELECT * FROM information_schema.schemata
----
catalog_name  schema_name         default_character_set_name  sql_path
def           crdb_internal       NULL                        NULL
def           information_schema  NULL                        NULL
def           pg_catalog          NULL                        NULL
def           system              NULL                        NULL
def           test                NULL                        NULL

query TTTT colnames
SELECT * FROM INFormaTION_SCHEMa.schemata
----
catalog_name  schema_name         default_character_set_name  sql_path
def           crdb_internal       NULL                        NULL
def           information_schema  NULL                        NULL
def           pg_catalog          NULL                        NULL
def           system              NULL                        NULL
def           test                NULL                        NULL

statement ok
CREATE DATABASE other_db

query TTTT colnames
SELECT * FROM information_schema.schemata
----
catalog_name  schema_name         default_character_set_name  sql_path
def           crdb_internal       NULL                        NULL
def           information_schema  NULL                        NULL
def           other_db            NULL                        NULL
def           pg_catalog          NULL                        NULL
def           system              NULL                        NULL
def           test                NULL                        NULL

statement ok
DROP DATABASE other_db CASCADE

## information_schema.tables

# Check the default contents of information_schema.tables (incl. the
# special system tables)
query TT
select table_schema, table_name FROM information_schema.tables ORDER BY 1, 2
----
crdb_internal       backward_dependencies
crdb_internal       builtin_functions
crdb_internal       cluster_queries
crdb_internal       cluster_sessions
crdb_internal       cluster_settings
crdb_internal       create_statements
crdb_internal       forward_dependencies
crdb_internal       gossip_liveness
crdb_internal       gossip_nodes
crdb_internal       index_columns
crdb_internal       jobs
crdb_internal       kv_node_status
crdb_internal       kv_store_status
crdb_internal       leases
crdb_internal       node_build_info
crdb_internal       node_queries
crdb_internal       node_runtime_info
crdb_internal       node_sessions
crdb_internal       node_statement_statistics
crdb_internal       partitions
crdb_internal       ranges
crdb_internal       schema_changes
crdb_internal       session_trace
crdb_internal       session_variables
crdb_internal       table_columns
crdb_internal       table_indexes
crdb_internal       tables
crdb_internal       zones
information_schema  column_privileges
information_schema  columns
information_schema  key_column_usage
information_schema  referential_constraints
information_schema  schema_privileges
information_schema  schemata
information_schema  sequences
information_schema  statistics
information_schema  table_constraints
information_schema  table_privileges
information_schema  tables
information_schema  user_privileges
information_schema  views
pg_catalog          pg_am
pg_catalog          pg_attrdef
pg_catalog          pg_attribute
pg_catalog          pg_auth_members
pg_catalog          pg_class
pg_catalog          pg_collation
pg_catalog          pg_constraint
pg_catalog          pg_database
pg_catalog          pg_depend
pg_catalog          pg_description
pg_catalog          pg_enum
pg_catalog          pg_extension
pg_catalog          pg_foreign_data_wrapper
pg_catalog          pg_foreign_server
pg_catalog          pg_foreign_table
pg_catalog          pg_index
pg_catalog          pg_indexes
pg_catalog          pg_inherits
pg_catalog          pg_namespace
pg_catalog          pg_operator
pg_catalog          pg_proc
pg_catalog          pg_range
pg_catalog          pg_rewrite
pg_catalog          pg_roles
pg_catalog          pg_sequence
pg_catalog          pg_settings
pg_catalog          pg_tables
pg_catalog          pg_tablespace
pg_catalog          pg_trigger
pg_catalog          pg_type
pg_catalog          pg_user
pg_catalog          pg_user_mapping
pg_catalog          pg_views
system              descriptor
system              eventlog
system              jobs
system              lease
system              locations
system              namespace
system              rangelog
system              role_members
system              settings
system              table_statistics
system              ui
system              users
system              web_sessions
system              zones

statement ok
CREATE DATABASE other_db

statement ok
CREATE TABLE other_db.xyz (i INT)

statement ok
CREATE SEQUENCE other_db.seq

statement ok
CREATE VIEW other_db.abc AS SELECT i from other_db.xyz

statement ok
GRANT UPDATE ON other_db.xyz TO testuser

user testuser

# Check the output with the current database set to 'test' (the
# defaults in tests). This will make the tables in other_db invisible to
# a non-root user.
query T
SELECT table_name FROM information_schema.tables WHERE table_schema = 'other_db'
----

# Check that the other_db tables become visible when a prefix is specified
query T
SELECT table_name FROM other_db.information_schema.tables WHERE table_schema = 'other_db'
----
xyz

# Check that the non-root user can also query all databases with an explicit empty prefix
query T
SELECT table_name FROM "".information_schema.tables WHERE table_schema = 'other_db'
----
xyz

# Check that the other_db tables become visible to non-root when the current database is changed.
query T
SET DATABASE = other_db; SELECT table_name FROM information_schema.tables WHERE table_schema = 'other_db'
----
xyz

user root

# Check that root sees everything when there is no current database
query T
SET DATABASE = ''; SELECT table_name FROM information_schema.tables WHERE table_schema = 'other_db'
----
abc
xyz

# Check that root doesn't see other things when there is a current database
query T
SET DATABASE = test; SELECT table_name FROM information_schema.tables WHERE table_schema = 'other_db'
----

# Check that a query cannot use prefixes for regular tables
query error invalid table name
SELECT * FROM other_db.other_db.xyz

statement ok
SET DATABASE = other_db

# Check that filtering works.
query T
SELECT table_name FROM information_schema.tables WHERE table_name > 't'  ORDER BY 1 DESC
----
zones
zones
xyz
web_sessions
views
users
user_privileges
ui
tables
tables
table_statistics
table_privileges
table_indexes
table_constraints
table_columns

# Check that the metadata is reported properly.
query TTTTI colnames
SELECT * FROM information_schema.tables
----
table_catalog  table_schema        table_name                 table_type   version
def            crdb_internal       backward_dependencies      SYSTEM VIEW  1
def            crdb_internal       builtin_functions          SYSTEM VIEW  1
def            crdb_internal       cluster_queries            SYSTEM VIEW  1
def            crdb_internal       cluster_sessions           SYSTEM VIEW  1
def            crdb_internal       cluster_settings           SYSTEM VIEW  1
def            crdb_internal       create_statements          SYSTEM VIEW  1
def            crdb_internal       forward_dependencies       SYSTEM VIEW  1
def            crdb_internal       gossip_liveness            SYSTEM VIEW  1
def            crdb_internal       gossip_nodes               SYSTEM VIEW  1
def            crdb_internal       index_columns              SYSTEM VIEW  1
def            crdb_internal       jobs                       SYSTEM VIEW  1
def            crdb_internal       kv_node_status             SYSTEM VIEW  1
def            crdb_internal       kv_store_status            SYSTEM VIEW  1
def            crdb_internal       leases                     SYSTEM VIEW  1
def            crdb_internal       node_build_info            SYSTEM VIEW  1
def            crdb_internal       node_queries               SYSTEM VIEW  1
def            crdb_internal       node_runtime_info          SYSTEM VIEW  1
def            crdb_internal       node_sessions              SYSTEM VIEW  1
def            crdb_internal       node_statement_statistics  SYSTEM VIEW  1
def            crdb_internal       partitions                 SYSTEM VIEW  1
def            crdb_internal       ranges                     SYSTEM VIEW  1
def            crdb_internal       schema_changes             SYSTEM VIEW  1
def            crdb_internal       session_trace              SYSTEM VIEW  1
def            crdb_internal       session_variables          SYSTEM VIEW  1
def            crdb_internal       table_columns              SYSTEM VIEW  1
def            crdb_internal       table_indexes              SYSTEM VIEW  1
def            crdb_internal       tables                     SYSTEM VIEW  1
def            crdb_internal       zones                      SYSTEM VIEW  1
def            information_schema  column_privileges          SYSTEM VIEW  1
def            information_schema  columns                    SYSTEM VIEW  1
def            information_schema  key_column_usage           SYSTEM VIEW  1
def            information_schema  referential_constraints    SYSTEM VIEW  1
def            information_schema  schema_privileges          SYSTEM VIEW  1
def            information_schema  schemata                   SYSTEM VIEW  1
def            information_schema  sequences                  SYSTEM VIEW  1
def            information_schema  statistics                 SYSTEM VIEW  1
def            information_schema  table_constraints          SYSTEM VIEW  1
def            information_schema  table_privileges           SYSTEM VIEW  1
def            information_schema  tables                     SYSTEM VIEW  1
def            information_schema  user_privileges            SYSTEM VIEW  1
def            information_schema  views                      SYSTEM VIEW  1
def            other_db            abc                        VIEW         1
def            other_db            xyz                        BASE TABLE   3
def            pg_catalog          pg_am                      SYSTEM VIEW  1
def            pg_catalog          pg_attrdef                 SYSTEM VIEW  1
def            pg_catalog          pg_attribute               SYSTEM VIEW  1
def            pg_catalog          pg_auth_members            SYSTEM VIEW  1
def            pg_catalog          pg_class                   SYSTEM VIEW  1
def            pg_catalog          pg_collation               SYSTEM VIEW  1
def            pg_catalog          pg_constraint              SYSTEM VIEW  1
def            pg_catalog          pg_database                SYSTEM VIEW  1
def            pg_catalog          pg_depend                  SYSTEM VIEW  1
def            pg_catalog          pg_description             SYSTEM VIEW  1
def            pg_catalog          pg_enum                    SYSTEM VIEW  1
def            pg_catalog          pg_extension               SYSTEM VIEW  1
def            pg_catalog          pg_foreign_data_wrapper    SYSTEM VIEW  1
def            pg_catalog          pg_foreign_server          SYSTEM VIEW  1
def            pg_catalog          pg_foreign_table           SYSTEM VIEW  1
def            pg_catalog          pg_index                   SYSTEM VIEW  1
def            pg_catalog          pg_indexes                 SYSTEM VIEW  1
def            pg_catalog          pg_inherits                SYSTEM VIEW  1
def            pg_catalog          pg_namespace               SYSTEM VIEW  1
def            pg_catalog          pg_operator                SYSTEM VIEW  1
def            pg_catalog          pg_proc                    SYSTEM VIEW  1
def            pg_catalog          pg_range                   SYSTEM VIEW  1
def            pg_catalog          pg_rewrite                 SYSTEM VIEW  1
def            pg_catalog          pg_roles                   SYSTEM VIEW  1
def            pg_catalog          pg_sequence                SYSTEM VIEW  1
def            pg_catalog          pg_settings                SYSTEM VIEW  1
def            pg_catalog          pg_tables                  SYSTEM VIEW  1
def            pg_catalog          pg_tablespace              SYSTEM VIEW  1
def            pg_catalog          pg_trigger                 SYSTEM VIEW  1
def            pg_catalog          pg_type                    SYSTEM VIEW  1
def            pg_catalog          pg_user                    SYSTEM VIEW  1
def            pg_catalog          pg_user_mapping            SYSTEM VIEW  1
def            pg_catalog          pg_views                   SYSTEM VIEW  1
def            system              descriptor                 BASE TABLE   1
def            system              eventlog                   BASE TABLE   2
def            system              jobs                       BASE TABLE   1
def            system              lease                      BASE TABLE   1
def            system              locations                  BASE TABLE   1
def            system              namespace                  BASE TABLE   1
def            system              rangelog                   BASE TABLE   1
def            system              role_members               BASE TABLE   1
def            system              settings                   BASE TABLE   1
def            system              table_statistics           BASE TABLE   1
def            system              ui                         BASE TABLE   1
def            system              users                      BASE TABLE   4
def            system              web_sessions               BASE TABLE   1
def            system              zones                      BASE TABLE   1

statement ok
ALTER TABLE other_db.xyz ADD COLUMN j INT

query TTI colnames
SELECT TABLE_SCHEMA, TABLE_NAME, VERSION FROM information_schema.tables WHERE version > 1
----
table_schema  table_name  version
other_db      xyz         6
system        eventlog    2
system        users       4

user testuser

# Check that another user cannot see other_db.adbc any more because they
# don't have privileges on it.
query TTTTI colnames
SELECT * FROM information_schema.tables WHERE table_schema = 'other_db'
----
table_catalog  table_schema  table_name  table_type  version
def            other_db      xyz         BASE TABLE  6

user root

statement ok
GRANT SELECT ON other_db.abc TO testuser

user testuser

# Check the user can see the tables now that they have privilege.
query TTTTI colnames
SELECT * FROM information_schema.tables WHERE table_schema = 'other_db'
----
table_catalog  table_schema  table_name  table_type  version
def            other_db      abc         VIEW        2
def            other_db      xyz         BASE TABLE  6

user root

statement ok
DROP DATABASE other_db CASCADE

statement ok
SET DATABASE = test

## information_schema.table_constraints

query TTTTTTTTT colnames
SELECT *
FROM information_schema.table_constraints
ORDER BY TABLE_NAME, CONSTRAINT_TYPE, CONSTRAINT_NAME
----
constraint_catalog  constraint_schema  constraint_name  table_catalog  table_schema  table_name        constraint_type  is_deferrable  initially_deferred
def                 system             primary          def            system        descriptor        PRIMARY KEY      NO             NO
def                 system             primary          def            system        eventlog          PRIMARY KEY      NO             NO
def                 system             primary          def            system        jobs              PRIMARY KEY      NO             NO
def                 system             primary          def            system        lease             PRIMARY KEY      NO             NO
def                 system             primary          def            system        locations         PRIMARY KEY      NO             NO
def                 system             primary          def            system        namespace         PRIMARY KEY      NO             NO
def                 system             primary          def            system        rangelog          PRIMARY KEY      NO             NO
def                 system             primary          def            system        role_members      PRIMARY KEY      NO             NO
def                 system             primary          def            system        settings          PRIMARY KEY      NO             NO
def                 system             primary          def            system        table_statistics  PRIMARY KEY      NO             NO
def                 system             primary          def            system        ui                PRIMARY KEY      NO             NO
def                 system             primary          def            system        users             PRIMARY KEY      NO             NO
def                 system             primary          def            system        web_sessions      PRIMARY KEY      NO             NO
def                 system             primary          def            system        zones             PRIMARY KEY      NO             NO

statement ok
CREATE DATABASE constraint_db

statement ok
CREATE TABLE constraint_db.t1 (
  p FLOAT PRIMARY KEY,
  a INT UNIQUE CHECK (a > 4),
  CONSTRAINT c2 CHECK (a < 99)
)

statement ok
CREATE TABLE constraint_db.t2 (
    t1_ID INT,
    CONSTRAINT fk FOREIGN KEY (t1_ID) REFERENCES constraint_db.t1(a),
    INDEX (t1_ID)
)

statement ok
SET DATABASE = constraint_db

query TTTTTTTTT colnames
SELECT *
FROM information_schema.table_constraints
WHERE constraint_schema = 'constraint_db'
ORDER BY TABLE_NAME, CONSTRAINT_TYPE, CONSTRAINT_NAME
----
constraint_catalog  constraint_schema  constraint_name  table_catalog  table_schema   table_name  constraint_type  is_deferrable  initially_deferred
def                 constraint_db      c2               def            constraint_db  t1          CHECK            NO             NO
def                 constraint_db      check_a          def            constraint_db  t1          CHECK            NO             NO
def                 constraint_db      primary          def            constraint_db  t1          PRIMARY KEY      NO             NO
def                 constraint_db      t1_a_key         def            constraint_db  t1          UNIQUE           NO             NO
def                 constraint_db      fk               def            constraint_db  t2          FOREIGN KEY      NO             NO

statement ok
DROP DATABASE constraint_db CASCADE

## information_schema.columns

query TTTTI colnames
SELECT table_catalog, table_schema, table_name, column_name, ordinal_position
FROM information_schema.columns
WHERE table_schema != 'information_schema' AND table_schema != 'pg_catalog' AND table_schema != 'crdb_internal'
----
table_catalog  table_schema  table_name        column_name     ordinal_position
def            system        descriptor        id              1
def            system        descriptor        descriptor      2
def            system        eventlog          timestamp       1
def            system        eventlog          eventType       2
def            system        eventlog          targetID        3
def            system        eventlog          reportingID     4
def            system        eventlog          info            5
def            system        eventlog          uniqueID        6
def            system        jobs              id              1
def            system        jobs              status          2
def            system        jobs              created         3
def            system        jobs              payload         4
def            system        lease             descID          1
def            system        lease             version         2
def            system        lease             nodeID          3
def            system        lease             expiration      4
def            system        locations         localityKey     1
def            system        locations         localityValue   2
def            system        locations         latitude        3
def            system        locations         longitude       4
def            system        namespace         parentID        1
def            system        namespace         name            2
def            system        namespace         id              3
def            system        rangelog          timestamp       1
def            system        rangelog          rangeID         2
def            system        rangelog          storeID         3
def            system        rangelog          eventType       4
def            system        rangelog          otherRangeID    5
def            system        rangelog          info            6
def            system        rangelog          uniqueID        7
def            system        role_members      role            1
def            system        role_members      member          2
def            system        role_members      isAdmin         3
def            system        settings          name            1
def            system        settings          value           2
def            system        settings          lastUpdated     3
def            system        settings          valueType       4
def            system        table_statistics  tableID         1
def            system        table_statistics  statisticID     2
def            system        table_statistics  name            3
def            system        table_statistics  columnIDs       4
def            system        table_statistics  createdAt       5
def            system        table_statistics  rowCount        6
def            system        table_statistics  distinctCount   7
def            system        table_statistics  nullCount       8
def            system        table_statistics  histogram       9
def            system        ui                key             1
def            system        ui                value           2
def            system        ui                lastUpdated     3
def            system        users             username        1
def            system        users             hashedPassword  2
def            system        users             isRole          3
def            system        web_sessions      id              1
def            system        web_sessions      hashedSecret    2
def            system        web_sessions      username        3
def            system        web_sessions      createdAt       4
def            system        web_sessions      expiresAt       5
def            system        web_sessions      revokedAt       6
def            system        web_sessions      lastUsedAt      7
def            system        web_sessions      auditInfo       8
def            system        zones             id              1
def            system        zones             config          2

statement ok
SET DATABASE = test

statement ok
CREATE TABLE with_defaults (a INT DEFAULT 9, b STRING DEFAULT 'default', c INT, d STRING)

query TTT colnames
SELECT table_name, column_name, column_default
FROM information_schema.columns
WHERE table_schema = 'test' AND table_name = 'with_defaults'
----
table_name     column_name  column_default
with_defaults  a            9:::INT
with_defaults  b            'default':::STRING
with_defaults  c            NULL
with_defaults  d            NULL

statement ok
DROP TABLE with_defaults

statement ok
CREATE TABLE nullability (a INT NOT NULL, b STRING NOT NULL, c INT, d STRING)

query TTT colnames
SELECT table_name, column_name, is_nullable
FROM information_schema.columns
WHERE table_schema = 'test' AND table_name = 'nullability'
----
table_name   column_name  is_nullable
nullability  a            NO
nullability  b            NO
nullability  c            YES
nullability  d            YES

statement ok
DROP TABLE nullability

statement ok
CREATE TABLE data_types (a INT, b FLOAT, c DECIMAL, d STRING, e BYTES, f TIMESTAMP, g TIMESTAMPTZ)

query TTT colnames
SELECT table_name, column_name, data_type
FROM information_schema.columns
WHERE table_schema = 'test' AND table_name = 'data_types'
----
table_name  column_name  data_type
data_types  a            INT
data_types  b            FLOAT
data_types  c            DECIMAL
data_types  d            STRING
data_types  e            BYTES
data_types  f            TIMESTAMP
data_types  g            TIMESTAMP WITH TIME ZONE

statement ok
DROP TABLE data_types

statement ok
CREATE TABLE char_len (a INT, b BIT, c BIT(12), d STRING, e STRING(12), f FLOAT)

query TTII colnames
SELECT table_name, column_name, character_maximum_length, character_octet_length
FROM information_schema.columns
WHERE table_schema = 'test' AND table_name = 'char_len'
----
table_name  column_name  character_maximum_length  character_octet_length
char_len    a            NULL                      NULL
char_len    b            1                         NULL
char_len    c            12                        NULL
char_len    d            NULL                      NULL
char_len    e            12                        48
char_len    f            NULL                      NULL

statement ok
DROP TABLE char_len

statement ok
CREATE TABLE num_prec (a INT, b FLOAT, c FLOAT(23), d DECIMAL, e DECIMAL(12), f DECIMAL(12, 6), g BOOLEAN)

query TTIII colnames
SELECT table_name, column_name, numeric_precision, numeric_scale, datetime_precision
FROM information_schema.columns
WHERE table_schema = 'test' AND table_name = 'num_prec'
----
table_name  column_name  numeric_precision  numeric_scale  datetime_precision
num_prec    a            64                 0              NULL
num_prec    b            53                 NULL           NULL
num_prec    c            23                 NULL           NULL
num_prec    d            NULL               NULL           NULL
num_prec    e            12                 0              NULL
num_prec    f            12                 6              NULL
num_prec    g            NULL               NULL           NULL

statement ok
DROP TABLE num_prec

## information_schema.key_column_usage
## information_schema.referential_constraints

statement ok
CREATE DATABASE constraint_column

statement ok
CREATE TABLE constraint_column.t1 (
  p FLOAT PRIMARY KEY,
  a INT UNIQUE,
  b INT,
  c INT CHECK(c > 0),
  UNIQUE INDEX index_key(b, c)
)

statement ok
CREATE TABLE constraint_column.t2 (
    t1_ID INT PRIMARY KEY,
    CONSTRAINT fk FOREIGN KEY (t1_ID) REFERENCES constraint_column.t1(a) ON DELETE RESTRICT
)

statement ok
CREATE TABLE constraint_column.t3 (
    a INT,
    b INT,
    CONSTRAINT fk2 FOREIGN KEY (a, b) REFERENCES constraint_column.t1(b, c) ON UPDATE CASCADE,
    INDEX (a, b)
)

statement ok
SET DATABASE = constraint_column

query TTTTTTTII colnames
SELECT * FROM information_schema.key_column_usage WHERE constraint_schema = 'constraint_column' ORDER BY TABLE_NAME, CONSTRAINT_NAME, ORDINAL_POSITION
----
constraint_catalog  constraint_schema  constraint_name  table_catalog  table_schema       table_name  column_name  ordinal_position  position_in_unique_constraint
def                 constraint_column  index_key        def            constraint_column  t1          b            1                 NULL
def                 constraint_column  index_key        def            constraint_column  t1          c            2                 NULL
def                 constraint_column  primary          def            constraint_column  t1          p            1                 NULL
def                 constraint_column  t1_a_key         def            constraint_column  t1          a            1                 NULL
def                 constraint_column  fk               def            constraint_column  t2          t1_id        1                 1
def                 constraint_column  primary          def            constraint_column  t2          t1_id        1                 NULL
def                 constraint_column  fk2              def            constraint_column  t3          a            1                 1
def                 constraint_column  fk2              def            constraint_column  t3          b            2                 2

query TTTTTTTTTTT colnames
SELECT * FROM information_schema.referential_constraints WHERE constraint_schema = 'constraint_column' ORDER BY TABLE_NAME, CONSTRAINT_NAME
----
constraint_catalog  constraint_schema  constraint_name  unique_constraint_catalog  unique_constraint_schema  unique_constraint_name  match_option  update_rule  delete_rule  table_name  referenced_table_name
def                 constraint_column  fk               def                        constraint_column         t1_a_key                FULL          NO ACTION    RESTRICT     t2          t1
def                 constraint_column  fk2              def                        constraint_column         index_key               FULL          CASCADE      NO ACTION    t3          t1

statement ok
DROP DATABASE constraint_column CASCADE

## information_schema.schema_privileges

statement ok
CREATE DATABASE other_db; SET DATABASE = other_db

query TTTTT colnames
SELECT * FROM information_schema.schema_privileges
----
grantee  table_catalog  table_schema  privilege_type  is_grantable
admin    def            other_db      ALL             NULL
root     def            other_db      ALL             NULL
admin    def            system        GRANT           NULL
admin    def            system        SELECT          NULL
root     def            system        GRANT           NULL
root     def            system        SELECT          NULL
admin    def            test          ALL             NULL
root     def            test          ALL             NULL

statement ok
GRANT SELECT ON DATABASE other_db TO testuser

query TTTTT colnames
SELECT * FROM information_schema.schema_privileges
----
grantee   table_catalog  table_schema  privilege_type  is_grantable
admin     def            other_db      ALL             NULL
root      def            other_db      ALL             NULL
testuser  def            other_db      SELECT          NULL
admin     def            system        GRANT           NULL
admin     def            system        SELECT          NULL
root      def            system        GRANT           NULL
root      def            system        SELECT          NULL
admin     def            test          ALL             NULL
root      def            test          ALL             NULL

## information_schema.table_privileges

# root can see everything
query TTTTTTTT colnames
SELECT * FROM information_schema.table_privileges
----
grantor  grantee  table_catalog  table_schema  table_name        privilege_type  is_grantable  with_hierarchy
NULL     admin    def            system        descriptor        GRANT           NULL          NULL
NULL     admin    def            system        descriptor        SELECT          NULL          NULL
NULL     root     def            system        descriptor        GRANT           NULL          NULL
NULL     root     def            system        descriptor        SELECT          NULL          NULL
NULL     admin    def            system        eventlog          DELETE          NULL          NULL
NULL     admin    def            system        eventlog          GRANT           NULL          NULL
NULL     admin    def            system        eventlog          INSERT          NULL          NULL
NULL     admin    def            system        eventlog          SELECT          NULL          NULL
NULL     admin    def            system        eventlog          UPDATE          NULL          NULL
NULL     root     def            system        eventlog          DELETE          NULL          NULL
NULL     root     def            system        eventlog          GRANT           NULL          NULL
NULL     root     def            system        eventlog          INSERT          NULL          NULL
NULL     root     def            system        eventlog          SELECT          NULL          NULL
NULL     root     def            system        eventlog          UPDATE          NULL          NULL
NULL     admin    def            system        jobs              DELETE          NULL          NULL
NULL     admin    def            system        jobs              GRANT           NULL          NULL
NULL     admin    def            system        jobs              INSERT          NULL          NULL
NULL     admin    def            system        jobs              SELECT          NULL          NULL
NULL     admin    def            system        jobs              UPDATE          NULL          NULL
NULL     root     def            system        jobs              DELETE          NULL          NULL
NULL     root     def            system        jobs              GRANT           NULL          NULL
NULL     root     def            system        jobs              INSERT          NULL          NULL
NULL     root     def            system        jobs              SELECT          NULL          NULL
NULL     root     def            system        jobs              UPDATE          NULL          NULL
NULL     admin    def            system        lease             DELETE          NULL          NULL
NULL     admin    def            system        lease             GRANT           NULL          NULL
NULL     admin    def            system        lease             INSERT          NULL          NULL
NULL     admin    def            system        lease             SELECT          NULL          NULL
NULL     admin    def            system        lease             UPDATE          NULL          NULL
NULL     root     def            system        lease             DELETE          NULL          NULL
NULL     root     def            system        lease             GRANT           NULL          NULL
NULL     root     def            system        lease             INSERT          NULL          NULL
NULL     root     def            system        lease             SELECT          NULL          NULL
NULL     root     def            system        lease             UPDATE          NULL          NULL
NULL     admin    def            system        locations         DELETE          NULL          NULL
NULL     admin    def            system        locations         GRANT           NULL          NULL
NULL     admin    def            system        locations         INSERT          NULL          NULL
NULL     admin    def            system        locations         SELECT          NULL          NULL
NULL     admin    def            system        locations         UPDATE          NULL          NULL
NULL     root     def            system        locations         DELETE          NULL          NULL
NULL     root     def            system        locations         GRANT           NULL          NULL
NULL     root     def            system        locations         INSERT          NULL          NULL
NULL     root     def            system        locations         SELECT          NULL          NULL
NULL     root     def            system        locations         UPDATE          NULL          NULL
NULL     admin    def            system        namespace         GRANT           NULL          NULL
NULL     admin    def            system        namespace         SELECT          NULL          NULL
NULL     root     def            system        namespace         GRANT           NULL          NULL
NULL     root     def            system        namespace         SELECT          NULL          NULL
NULL     admin    def            system        rangelog          DELETE          NULL          NULL
NULL     admin    def            system        rangelog          GRANT           NULL          NULL
NULL     admin    def            system        rangelog          INSERT          NULL          NULL
NULL     admin    def            system        rangelog          SELECT          NULL          NULL
NULL     admin    def            system        rangelog          UPDATE          NULL          NULL
NULL     root     def            system        rangelog          DELETE          NULL          NULL
NULL     root     def            system        rangelog          GRANT           NULL          NULL
NULL     root     def            system        rangelog          INSERT          NULL          NULL
NULL     root     def            system        rangelog          SELECT          NULL          NULL
NULL     root     def            system        rangelog          UPDATE          NULL          NULL
NULL     admin    def            system        role_members      DELETE          NULL          NULL
NULL     admin    def            system        role_members      GRANT           NULL          NULL
NULL     admin    def            system        role_members      INSERT          NULL          NULL
NULL     admin    def            system        role_members      SELECT          NULL          NULL
NULL     admin    def            system        role_members      UPDATE          NULL          NULL
NULL     root     def            system        role_members      DELETE          NULL          NULL
NULL     root     def            system        role_members      GRANT           NULL          NULL
NULL     root     def            system        role_members      INSERT          NULL          NULL
NULL     root     def            system        role_members      SELECT          NULL          NULL
NULL     root     def            system        role_members      UPDATE          NULL          NULL
NULL     admin    def            system        settings          DELETE          NULL          NULL
NULL     admin    def            system        settings          GRANT           NULL          NULL
NULL     admin    def            system        settings          INSERT          NULL          NULL
NULL     admin    def            system        settings          SELECT          NULL          NULL
NULL     admin    def            system        settings          UPDATE          NULL          NULL
NULL     root     def            system        settings          DELETE          NULL          NULL
NULL     root     def            system        settings          GRANT           NULL          NULL
NULL     root     def            system        settings          INSERT          NULL          NULL
NULL     root     def            system        settings          SELECT          NULL          NULL
NULL     root     def            system        settings          UPDATE          NULL          NULL
NULL     admin    def            system        table_statistics  DELETE          NULL          NULL
NULL     admin    def            system        table_statistics  GRANT           NULL          NULL
NULL     admin    def            system        table_statistics  INSERT          NULL          NULL
NULL     admin    def            system        table_statistics  SELECT          NULL          NULL
NULL     admin    def            system        table_statistics  UPDATE          NULL          NULL
NULL     root     def            system        table_statistics  DELETE          NULL          NULL
NULL     root     def            system        table_statistics  GRANT           NULL          NULL
NULL     root     def            system        table_statistics  INSERT          NULL          NULL
NULL     root     def            system        table_statistics  SELECT          NULL          NULL
NULL     root     def            system        table_statistics  UPDATE          NULL          NULL
NULL     admin    def            system        ui                DELETE          NULL          NULL
NULL     admin    def            system        ui                GRANT           NULL          NULL
NULL     admin    def            system        ui                INSERT          NULL          NULL
NULL     admin    def            system        ui                SELECT          NULL          NULL
NULL     admin    def            system        ui                UPDATE          NULL          NULL
NULL     root     def            system        ui                DELETE          NULL          NULL
NULL     root     def            system        ui                GRANT           NULL          NULL
NULL     root     def            system        ui                INSERT          NULL          NULL
NULL     root     def            system        ui                SELECT          NULL          NULL
NULL     root     def            system        ui                UPDATE          NULL          NULL
NULL     admin    def            system        users             DELETE          NULL          NULL
NULL     admin    def            system        users             GRANT           NULL          NULL
NULL     admin    def            system        users             INSERT          NULL          NULL
NULL     admin    def            system        users             SELECT          NULL          NULL
NULL     admin    def            system        users             UPDATE          NULL          NULL
NULL     root     def            system        users             DELETE          NULL          NULL
NULL     root     def            system        users             GRANT           NULL          NULL
NULL     root     def            system        users             INSERT          NULL          NULL
NULL     root     def            system        users             SELECT          NULL          NULL
NULL     root     def            system        users             UPDATE          NULL          NULL
NULL     admin    def            system        web_sessions      DELETE          NULL          NULL
NULL     admin    def            system        web_sessions      GRANT           NULL          NULL
NULL     admin    def            system        web_sessions      INSERT          NULL          NULL
NULL     admin    def            system        web_sessions      SELECT          NULL          NULL
NULL     admin    def            system        web_sessions      UPDATE          NULL          NULL
NULL     root     def            system        web_sessions      DELETE          NULL          NULL
NULL     root     def            system        web_sessions      GRANT           NULL          NULL
NULL     root     def            system        web_sessions      INSERT          NULL          NULL
NULL     root     def            system        web_sessions      SELECT          NULL          NULL
NULL     root     def            system        web_sessions      UPDATE          NULL          NULL
NULL     admin    def            system        zones             DELETE          NULL          NULL
NULL     admin    def            system        zones             GRANT           NULL          NULL
NULL     admin    def            system        zones             INSERT          NULL          NULL
NULL     admin    def            system        zones             SELECT          NULL          NULL
NULL     admin    def            system        zones             UPDATE          NULL          NULL
NULL     root     def            system        zones             DELETE          NULL          NULL
NULL     root     def            system        zones             GRANT           NULL          NULL
NULL     root     def            system        zones             INSERT          NULL          NULL
NULL     root     def            system        zones             SELECT          NULL          NULL
NULL     root     def            system        zones             UPDATE          NULL          NULL

statement ok
CREATE TABLE other_db.xyz (i INT)

statement ok
CREATE VIEW other_db.abc AS SELECT i from other_db.xyz

query TTTTTTTT colnames
SELECT * FROM information_schema.table_privileges WHERE TABLE_SCHEMA = 'other_db'
----
grantor  grantee   table_catalog  table_schema  table_name  privilege_type  is_grantable  with_hierarchy
NULL     admin     def            other_db      abc         ALL             NULL          NULL
NULL     root      def            other_db      abc         ALL             NULL          NULL
NULL     testuser  def            other_db      abc         SELECT          NULL          NULL
NULL     admin     def            other_db      xyz         ALL             NULL          NULL
NULL     root      def            other_db      xyz         ALL             NULL          NULL
NULL     testuser  def            other_db      xyz         SELECT          NULL          NULL

statement ok
GRANT UPDATE ON other_db.xyz TO testuser

query TTTTTTTT colnames
SELECT * FROM information_schema.table_privileges WHERE TABLE_SCHEMA = 'other_db'
----
grantor  grantee   table_catalog  table_schema  table_name  privilege_type  is_grantable  with_hierarchy
NULL     admin     def            other_db      abc         ALL             NULL          NULL
NULL     root      def            other_db      abc         ALL             NULL          NULL
NULL     testuser  def            other_db      abc         SELECT          NULL          NULL
NULL     admin     def            other_db      xyz         ALL             NULL          NULL
NULL     root      def            other_db      xyz         ALL             NULL          NULL
NULL     testuser  def            other_db      xyz         SELECT          NULL          NULL
NULL     testuser  def            other_db      xyz         UPDATE          NULL          NULL

# testuser can read permissions as well
user testuser

statement ok
SET DATABASE = other_db

query TTTTTTTT colnames
SELECT * FROM information_schema.table_privileges WHERE TABLE_SCHEMA = 'other_db'
----
grantor  grantee   table_catalog  table_schema  table_name  privilege_type  is_grantable  with_hierarchy
NULL     admin     def            other_db      abc         ALL             NULL          NULL
NULL     root      def            other_db      abc         ALL             NULL          NULL
NULL     testuser  def            other_db      abc         SELECT          NULL          NULL
NULL     admin     def            other_db      xyz         ALL             NULL          NULL
NULL     root      def            other_db      xyz         ALL             NULL          NULL
NULL     testuser  def            other_db      xyz         SELECT          NULL          NULL
NULL     testuser  def            other_db      xyz         UPDATE          NULL          NULL

user root

## information_schema.statistics

statement ok
CREATE TABLE other_db.teststatics(id INT PRIMARY KEY, c INT, d INT, e STRING, INDEX idx_c(c), UNIQUE INDEX idx_cd(c,d))

query TTTTTTITIITTT colnames
SELECT * FROM information_schema.statistics WHERE table_schema='other_db' AND table_name='teststatics' ORDER BY INDEX_SCHEMA,INDEX_NAME,SEQ_IN_INDEX
----
table_catalog  table_schema  table_name   non_unique  index_schema  index_name  seq_in_index  column_name  COLLATION  cardinality  direction  storing  implicit
def            other_db      teststatics  YES         other_db      idx_c       1             c            NULL       NULL         ASC        NO       NO
def            other_db      teststatics  YES         other_db      idx_c       2             id           NULL       NULL         ASC        NO       YES
def            other_db      teststatics  NO          other_db      idx_cd      1             c            NULL       NULL         ASC        NO       NO
def            other_db      teststatics  NO          other_db      idx_cd      2             d            NULL       NULL         ASC        NO       NO
def            other_db      teststatics  NO          other_db      idx_cd      3             id           NULL       NULL         ASC        NO       YES
def            other_db      teststatics  NO          other_db      primary     1             id           NULL       NULL         ASC        NO       NO

# Verify information_schema.views
statement ok
CREATE VIEW other_db.v_xyz AS SELECT i FROM other_db.xyz

query TTTTT colnames
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, VIEW_DEFINITION, CHECK_OPTION
FROM information_schema.views
WHERE TABLE_NAME='v_xyz'
----
table_catalog  table_schema  table_name  view_definition             check_option
def            other_db      v_xyz       SELECT i FROM other_db.xyz  NULL

query BBBBB colnames
SELECT IS_UPDATABLE, IS_INSERTABLE_INTO, IS_TRIGGER_UPDATABLE, IS_TRIGGER_DELETABLE, IS_TRIGGER_INSERTABLE_INTO
FROM information_schema.views
WHERE TABLE_NAME='v_xyz'
----
is_updatable  is_insertable_into  is_trigger_updatable  is_trigger_deletable  is_trigger_insertable_into
NULL          NULL                NULL                  NULL                  NULL

statement ok
DROP DATABASE other_db CASCADE

#Verify  information_schema.user_privileges

query TTTT colnames rowsort
SELECT * FROM information_schema.user_privileges ORDER BY grantee,privilege_type
----
grantee  table_catalog  privilege_type  is_grantable
admin    def            ALL             NULL
admin    def            CREATE          NULL
admin    def            DELETE          NULL
admin    def            DROP            NULL
admin    def            GRANT           NULL
admin    def            INSERT          NULL
admin    def            SELECT          NULL
admin    def            UPDATE          NULL
root     def            ALL             NULL
root     def            CREATE          NULL
root     def            DELETE          NULL
root     def            DROP            NULL
root     def            GRANT           NULL
root     def            INSERT          NULL
root     def            SELECT          NULL
root     def            UPDATE          NULL

# information_schema.sequences

statement ok
SET DATABASE = test

query TTTTIIITTTTT
SELECT * FROM information_schema.sequences
----

statement ok
CREATE SEQUENCE test_seq

statement ok
CREATE SEQUENCE test_seq_2 INCREMENT -1 MINVALUE 5 MAXVALUE 1000 START WITH 15


query TTTTIIITTTTT colnames
SELECT * FROM information_schema.sequences
----
sequence_catalog sequence_schema sequence_name data_type numeric_precision numeric_precision_radix numeric_scale start_value minimum_value    maximum_value    increment cycle_option
def              test            test_seq      INT                      64                       2             0           1             1 9223372036854775807         1 NO
def              test            test_seq_2    INT                      64                       2             0          15             5                1000        -1 NO

statement ok
CREATE DATABASE other_db

statement ok
SET DATABASE = other_db

# Sequences in one database can't be seen from another database.

query TTTTIIITTTTT
SELECT * FROM information_schema.sequences
----

statement ok
DROP DATABASE other_db CASCADE

# test infomration_schema.colunm_privileges
query TTBTT colnames
SHOW COLUMNS FROM information_schema.column_privileges
----
Field           Type    Null   Default  Indices
grantor         STRING  false  NULL     {}
grantee         STRING  false  NULL     {}
table_catalog   STRING  false  NULL     {}
table_schema    STRING  false  NULL     {}
table_name      STRING  false  NULL     {}
column_name     STRING  false  NULL     {}
privilege_type  STRING  false  NULL     {}
is_grantable    STRING  false  NULL     {}


query TTTTTTTT colnames
SELECT * FROM information_schema.column_privileges WHERE table_name = 'eventlog'
----
grantor  grantee  table_catalog  table_schema  table_name  column_name  privilege_type  is_grantable
NULL     admin    def            system        eventlog    timestamp    SELECT          NULL
NULL     admin    def            system        eventlog    eventType    SELECT          NULL
NULL     admin    def            system        eventlog    targetID     SELECT          NULL
NULL     admin    def            system        eventlog    reportingID  SELECT          NULL
NULL     admin    def            system        eventlog    info         SELECT          NULL
NULL     admin    def            system        eventlog    uniqueID     SELECT          NULL
NULL     admin    def            system        eventlog    timestamp    INSERT          NULL
NULL     admin    def            system        eventlog    eventType    INSERT          NULL
NULL     admin    def            system        eventlog    targetID     INSERT          NULL
NULL     admin    def            system        eventlog    reportingID  INSERT          NULL
NULL     admin    def            system        eventlog    info         INSERT          NULL
NULL     admin    def            system        eventlog    uniqueID     INSERT          NULL
NULL     admin    def            system        eventlog    timestamp    UPDATE          NULL
NULL     admin    def            system        eventlog    eventType    UPDATE          NULL
NULL     admin    def            system        eventlog    targetID     UPDATE          NULL
NULL     admin    def            system        eventlog    reportingID  UPDATE          NULL
NULL     admin    def            system        eventlog    info         UPDATE          NULL
NULL     admin    def            system        eventlog    uniqueID     UPDATE          NULL
NULL     root     def            system        eventlog    timestamp    SELECT          NULL
NULL     root     def            system        eventlog    eventType    SELECT          NULL
NULL     root     def            system        eventlog    targetID     SELECT          NULL
NULL     root     def            system        eventlog    reportingID  SELECT          NULL
NULL     root     def            system        eventlog    info         SELECT          NULL
NULL     root     def            system        eventlog    uniqueID     SELECT          NULL
NULL     root     def            system        eventlog    timestamp    INSERT          NULL
NULL     root     def            system        eventlog    eventType    INSERT          NULL
NULL     root     def            system        eventlog    targetID     INSERT          NULL
NULL     root     def            system        eventlog    reportingID  INSERT          NULL
NULL     root     def            system        eventlog    info         INSERT          NULL
NULL     root     def            system        eventlog    uniqueID     INSERT          NULL
NULL     root     def            system        eventlog    timestamp    UPDATE          NULL
NULL     root     def            system        eventlog    eventType    UPDATE          NULL
NULL     root     def            system        eventlog    targetID     UPDATE          NULL
NULL     root     def            system        eventlog    reportingID  UPDATE          NULL
NULL     root     def            system        eventlog    info         UPDATE          NULL
NULL     root     def            system        eventlog    uniqueID     UPDATE          NULL
