statement ok
SET experimental_enable_temp_tables=true

subtest test_meta_tables

statement ok
CREATE TEMP TABLE temp_table_test (a timetz PRIMARY KEY)

statement ok
CREATE TEMP TABLE temp_table_ref (a timetz PRIMARY KEY)

statement ok
ALTER TABLE temp_table_ref ADD CONSTRAINT fk_temp FOREIGN KEY (a) REFERENCES temp_table_test(a)

query TT
SHOW CREATE TABLE temp_table_test
----
temp_table_test  CREATE TEMP TABLE temp_table_test (
                 a TIMETZ NOT NULL,
                 CONSTRAINT "primary" PRIMARY KEY (a ASC),
                 FAMILY "primary" (a)
)

query TT
SELECT table_name, table_type FROM information_schema.tables WHERE table_name = 'temp_table_test' AND table_schema LIKE 'pg_temp_%'
----
temp_table_test  LOCAL TEMPORARY

# query changes names, so we can only grab a count to be sure.
query I
SELECT count(1) FROM pg_namespace WHERE nspname LIKE 'pg_temp_%'
----
1

query T
SELECT * FROM [SHOW TABLES FROM pg_temp] ORDER BY 1
----
temp_table_ref
temp_table_test

statement ok
DROP TABLE temp_table_ref CASCADE; DROP TABLE temp_table_test CASCADE

# Tests foreign key errors with tables resolve to the correct name.
subtest foreign_key_errors

statement ok
CREATE TEMP TABLE a (a int)

statement error cannot add a SET NULL cascading action on column "test\.pg_temp.*\.b\.c" which has a NOT NULL constraint
CREATE TEMP TABLE b (c int NOT NULL PRIMARY KEY, FOREIGN KEY (c) REFERENCES a ON UPDATE SET NULL)

statement error cannot add a SET DEFAULT cascading action on column "test\.pg_temp_.*\.b\.c" which has a NOT NULL constraint and a NULL default expression
CREATE TEMP TABLE b (c int DEFAULT NULL PRIMARY KEY, FOREIGN KEY (c) REFERENCES a ON UPDATE SET DEFAULT)

statement ok
DROP TABLE a

# Test uncommitted temp tables do not clash with existing tables
subtest test_uncommitted_tables

statement ok
BEGIN;
CREATE TABLE table_a (a int); CREATE TEMP TABLE table_a (a int);
INSERT INTO table_a VALUES (1); INSERT INTO pg_temp.table_a VALUES (2); INSERT INTO public.table_a VALUES (3);
COMMIT

query I
SELECT * FROM pg_temp.table_a ORDER BY a
----
1
2

query I
SELECT * FROM public.table_a ORDER BY a
----
3

statement ok
DROP TABLE pg_temp.table_a; DROP TABLE public.table_a

# Test operations on a database with temp tables inside them.
subtest test_database_operations

statement ok
CREATE DATABASE bob; USE bob; CREATE TEMP TABLE a(a int); USE defaultdb

statement ok
SET sql_safe_updates = true

statement error DROP DATABASE on non-empty database without explicit CASCADE
DROP DATABASE bob

statement ok
CREATE TEMP VIEW a_view AS SELECT a FROM bob.pg_temp.a

statement error cannot rename database because view "defaultdb.pg_temp_.*.a_view" depends on table "a"
ALTER DATABASE bob RENAME TO alice

statement ok
DROP VIEW a_view; ALTER DATABASE bob RENAME TO alice

statement ok
DROP DATABASE alice CASCADE

# Test for temporary views.
subtest temporary_views

statement ok
CREATE TABLE permanent_table(a int); CREATE TEMP TABLE temp_table(a int)

statement ok
INSERT INTO permanent_table VALUES (1); INSERT INTO temp_table VALUES (2)

statement ok
CREATE TEMP VIEW view_on_permanent AS SELECT a FROM permanent_table

query I
SELECT * from pg_temp.view_on_permanent
----
1

statement ok
CREATE TEMP VIEW view_on_temp AS SELECT a FROM temp_table

query I
SELECT * from pg_temp.view_on_temp
----
2

# A "permanent" view on a temporary table gets upgraded to temporary.
statement ok
CREATE VIEW upgrade_temp_view AS SELECT a FROM temp_table

query I
SELECT * from pg_temp.upgrade_temp_view
----
2

statement ok
DROP VIEW view_on_temp; DROP VIEW view_on_permanent; DROP VIEW upgrade_temp_view

statement ok
DROP TABLE permanent_table; DROP TABLE temp_table
