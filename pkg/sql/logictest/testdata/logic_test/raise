# Test different log levels.
query T noticetrace
SELECT crdb_internal.plpgsql_raise('DEBUG1', 'foo', '', '', '');
----

query T noticetrace
SELECT crdb_internal.plpgsql_raise('LOG', 'foo', '', '', '');
----

query T noticetrace
SELECT crdb_internal.plpgsql_raise('INFO', 'foo', '', '', '');
----
INFO: foo
SQLSTATE: XXUUU

query T noticetrace
SELECT crdb_internal.plpgsql_raise('NOTICE', 'foo', '', '', '');
----
NOTICE: foo
SQLSTATE: XXUUU

query T noticetrace
SELECT crdb_internal.plpgsql_raise('WARNING', 'foo', '', '', '');
----
WARNING: foo
SQLSTATE: XXUUU

statement ok
SET client_min_messages = 'debug1';

query T noticetrace
SELECT crdb_internal.plpgsql_raise('DEBUG1', 'foo', '', '', '');
----
DEBUG1: foo
SQLSTATE: XXUUU

query T noticetrace
SELECT crdb_internal.plpgsql_raise('LOG', 'foo', '', '', '');
----
LOG: foo
SQLSTATE: XXUUU

query T noticetrace
SELECT crdb_internal.plpgsql_raise('INFO', 'foo', '', '', '');
----
INFO: foo
SQLSTATE: XXUUU

query T noticetrace
SELECT crdb_internal.plpgsql_raise('NOTICE', 'foo', '', '', '');
----
NOTICE: foo
SQLSTATE: XXUUU

query T noticetrace
SELECT crdb_internal.plpgsql_raise('WARNING', 'foo', '', '', '');
----
WARNING: foo
SQLSTATE: XXUUU

statement ok
SET client_min_messages = 'WARNING';

query T noticetrace
SELECT crdb_internal.plpgsql_raise('DEBUG1', 'foo', '', '', '');
----

query T noticetrace
SELECT crdb_internal.plpgsql_raise('LOG', 'foo', '', '', '');
----

# INFO-level notices are always sent to the client.
query T noticetrace
SELECT crdb_internal.plpgsql_raise('INFO', 'foo', '', '', '');
----
INFO: foo
SQLSTATE: XXUUU

query T noticetrace
SELECT crdb_internal.plpgsql_raise('NOTICE', 'foo', '', '', '');
----

query T noticetrace
SELECT crdb_internal.plpgsql_raise('WARNING', 'foo', '', '', '');
----
WARNING: foo
SQLSTATE: XXUUU

statement ok
RESET client_min_messages;

# Test RAISE options.
query T noticetrace
SELECT crdb_internal.plpgsql_raise('NOTICE', 'bar', 'this is a detail', '', '');
----
NOTICE: bar
DETAIL: this is a detail
SQLSTATE: XXUUU

query T noticetrace
SELECT crdb_internal.plpgsql_raise('NOTICE', 'baz', '', 'this is a hint', '');
----
NOTICE: baz
HINT: this is a hint
SQLSTATE: XXUUU

query T noticetrace
SELECT crdb_internal.plpgsql_raise('NOTICE', 'division by zero', '', '', '22012');
----
NOTICE: division by zero
SQLSTATE: 22012

query T noticetrace
SELECT crdb_internal.plpgsql_raise('WARNING', 'invalid password', '', '', '28P01');
----
WARNING: invalid password
SQLSTATE: 28P01

query T noticetrace
SELECT crdb_internal.plpgsql_raise('NOTICE', 'this is a message', 'this is a detail', 'this is a hint', 'P0001');
----
NOTICE: this is a message
DETAIL: this is a detail
HINT: this is a hint
SQLSTATE: P0001

query T noticetrace
SELECT crdb_internal.plpgsql_raise('NOTICE', 'division by zero msg', '', '', 'division_by_zero');
----
NOTICE: division by zero msg
SQLSTATE: 22012

query T noticetrace
SELECT crdb_internal.plpgsql_raise('NOTICE', '', 'message is empty', '', 'P0001');
----
NOTICE:
DETAIL: message is empty
SQLSTATE: P0001

query T noticetrace
SELECT crdb_internal.plpgsql_raise('NOTICE', '', '', '', '');
----
NOTICE:
SQLSTATE: XXUUU

query error pgcode 42704 pq: unrecognized exception condition: \"this_is_not_valid\"
SELECT crdb_internal.plpgsql_raise('NOTICE', '', '', '', 'this_is_not_valid');

query error pgcode 42704 pq: unrecognized exception condition: \"-50\"
SELECT crdb_internal.plpgsql_raise('NOTICE', '', '', '', '-50');

query error pgcode 22023 pq: severity NOTE is invalid
SELECT crdb_internal.plpgsql_raise('NOTE', '', '', '', '-50');

# Test severity ERROR.
query error pgcode XXUUU pq: foo
SELECT crdb_internal.plpgsql_raise('ERROR', 'foo', '', '', '');

query error pgcode 12345 pq: foo
SELECT crdb_internal.plpgsql_raise('ERROR', 'foo', '', '', '12345');

query error pgcode 12345 pq: msg\nHINT: hint\nDETAIL: detail
SELECT crdb_internal.plpgsql_raise('ERROR', 'msg', 'detail', 'hint', '12345');

query error pgcode XXUUU pq:
SELECT crdb_internal.plpgsql_raise('ERROR', '', '', '', '');
