parse
DECLARE
BEGIN
CASE hello
WHEN world THEN
END CASE;
END
----
----
DECLARE
BEGIN
CASE hello

WHEN world  THEN
END CASE
END
----
----

parse
DECLARE
BEGIN
CASE order_cnt
WHEN 1, 2, 3 THEN
END CASE;
END
----
----
DECLARE
BEGIN
CASE order_cnt

WHEN 1, 2, 3  THEN
END CASE
END
----
----

parse
DECLARE
BEGIN
CASE order_cnt
WHEN 1, 2, 3 THEN
WHEN 5 THEN
END CASE;
END
----
----
DECLARE
BEGIN
CASE order_cnt

WHEN 1, 2, 3  THEN
WHEN 5  THEN
END CASE
END
----
----

parse
DECLARE
BEGIN
CASE
WHEN true THEN
END CASE;
END
----
DECLARE
BEGIN
CASE
WHEN true  THEN
END CASE
END

parse
DECLARE
  order_cnt integer := 10;
BEGIN
CASE
WHEN order_cnt BETWEEN 0 AND 100 THEN
WHEN order_cnt > 100 THEN
END CASE;
END
----
DECLARE
order_cnt INT8 := 10;
BEGIN
CASE
WHEN order_cnt BETWEEN 0 AND 100  THEN
WHEN order_cnt > 100  THEN
END CASE
END

parse
DECLARE
  order_cnt integer := 10;
BEGIN
  CASE
  WHEN order_cnt BETWEEN 0 AND 100 THEN
    CALL fn(1);
  WHEN order_cnt > 100 THEN
    CALL fn(2);
  ELSE
    CALL fn(3);
END CASE;
END
----
DECLARE
order_cnt INT8 := 10;
BEGIN
CASE
WHEN order_cnt BETWEEN 0 AND 100  THEN
  CALL a function/procedure
WHEN order_cnt > 100  THEN
  CALL a function/procedure
ELSE
  CALL a function/procedure
END CASE
END


feature-count
DECLARE
  order_cnt integer := 10;
BEGIN
  CASE
  WHEN order_cnt BETWEEN 0 AND 100 THEN
    CALL fn(1);
  WHEN order_cnt > 100 THEN
    CALL fn(2);
  ELSE
    CALL fn(3);
END CASE;
END
----
stmt_block: 1
stmt_call: 3
stmt_case: 1
stmt_when: 2
