# =============================================================================
# select.opt contains exploration rules for the Select operator.
# =============================================================================


# ConstrainScan generates a set of constrained Scan expressions, one for each
# matching index on the scanned table. The expressions consist of either a
# standalone Scan operator (if no remaining filter), or else a Scan wrapped by a
# Select (with a remaining filter). Or, if a secondary index cannot provide all
# the output columns, an IndexJoin is introduced to supply them. See the comment
# for the ConstrainScans custom method for more details and examples.
[ConstrainScans, Explore]
(Select
  (Scan $def:* & (IsFullPrimaryScan $def))
  $filter:*
)
=>
(ConstrainScans $def $filter)

# GenerateInvertedIndexScans creates alternate expressions for filters that can
# be serviced by an inverted index.
[GenerateInvertedIndexScans, Explore]
(Select
  (Scan $def:* & (IsFullPrimaryScan $def) & (HasInvertedIndexes $def))
  $filter:*
)
=>
(GenerateInvertedIndexScans $def $filter)
