# =============================================================================
# select.opt contains exploration rules for the Select operator.
# =============================================================================

# ConstrainScan matches a Select over an unconstrained Scan and tries to push
# down the filter (or part of it) as index constraints. The result is either
# a constrained Scan or a Select (with a remaining filter) on top of a
# constrained Scan.
[ConstrainScan, Explore]
(Select
  (Scan $def:* & (CanConstrainScan $def))
  $filter:*
)
=>
(ConstrainScan $filter $def)

# PushFilterIntoLookupJoinNoRemainder matches a Select over a lookup join in
# which the Select filter condition is fully bound by the input to the lookup
# join. If this rule matches, it pushes the Select fully below the lookup join.
[PushFilterIntoLookupJoinNoRemainder, Explore]
(Select
  (LookupJoin
    $input:*
    $def:*
  )
  $filter:* & (IsBoundBy $filter $input)
)
=>
(LookupJoin
  (Select
    $input
    $filter
  )
  $def
)


# PushFilterIntoLookupJoin matches a Select over a lookup join in which some of
# the Select filter conditions are bound by the input to the lookup join, and
# some are not. If this rule matches, it pushes the bound conditions below the
# lookup join.
[PushFilterIntoLookupJoin, Explore]
(Select
  (LookupJoin
    $input:*
    $def:*
  )
  $filter:(Filters $list:[ ... $condition:* & (IsBoundBy $condition $input) ... ]) & ^(IsBoundBy $filter $input)
)
=>
(Select
  (LookupJoin
    (Select
      $input
      (Filters (ExtractBoundConditions $list $input))
    )
    $def
  )
  (Filters (ExtractUnboundConditions $list $input))
)

# ConstrainLookupJoinIndexScan matches a Select over a lookup join with an
# unconstrained Scan and tries to push down the filter (or part of it) as
# index constraints. The result is either a lookup join with a constrained
# index Scan or a Select (with a remaining filter) on top of a lookup join with
# a constrained index Scan.
[ConstrainLookupJoinIndexScan, Explore]
(Select
  (LookupJoin
    (Scan $def:* & (CanConstrainScan $def))
    $outerdef:*
  )
  $filter:*
)
=>
(ConstrainLookupJoinIndexScan $filter $def $outerdef)
