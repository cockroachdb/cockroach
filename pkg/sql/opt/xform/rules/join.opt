# =============================================================================
# join.opt contains exploration rules for the Join operator.
# =============================================================================

# CommuteJoin creates a Join with the left and right inputs swapped. This is
# useful for other rules that convert joins to other operators (like merge
# join).
[CommuteJoin, Explore]
(InnerJoin | FullJoin
  $left:*
  $right:*
  $on:*
)
=>
((OpName) $right $left $on)

# CommuteLeftJoin creates a Join with the left and right inputs swapped.
[CommuteLeftJoin, Explore]
(LeftJoin
  $left:*
  $right:*
  $on:*
)
=>
(RightJoin $right $left $on)

# CommuteRightJoin creates a Join with the left and right inputs swapped.
[CommuteRightJoin, Explore]
(RightJoin
  $left:*
  $right:*
  $on:*
)
=>
(LeftJoin $right $left $on)

# GenerateMergeJoins creates MergeJoin operators for the join, using the
# interesting orderings property.
[GenerateMergeJoins, Explore]
(JoinNonApply $left:* $right:* $on:*)
=>
(ConstructMergeJoins (OpName) $left $right $on)
