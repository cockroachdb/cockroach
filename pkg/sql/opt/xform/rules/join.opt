# =============================================================================
# join.opt contains normalization rules for Join operators.
# =============================================================================


# NormalizeJoinNullOn maps a Null condition to a False condition.
[NormalizeJoinNullOn, Normalize]
(Join
    $left:*
    $right:*
    (Null)
)
=>
((OpName)
    $left
    $right
    (False)
)

# EnsureJoinFiltersAnd replaces an And operator in a Join's On condition with
# the Filters operator. This allows other rules to rely upon the presence of
# the Filters when matching. See comment at top of bool.opt for more details.
[EnsureJoinFiltersAnd, Normalize]
(Join
    $left:*
    $right:*
    (And $conditions:*)
)
=>
((OpName)
    $left
    $right
    (Filters $conditions)
)

# EnsureJoinFilters adds a Filters operator to a Join's On condition if it does
# not already exist. This allows other rules to rely upon the presence of the
# Filters when matching. See comment at top of bool.opt for more details.
[EnsureJoinFilters, Normalize]
(Join
    $left:*
    $right:*
    $filter:^(Filters | And | True | False)
)
=>
((OpName)
    $left
    $right
    (Filters [ $filter ])
)
