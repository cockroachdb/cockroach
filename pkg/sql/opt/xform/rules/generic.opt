# =============================================================================
# generic.opt contains exploration rules for optimizing generic query plans.
# =============================================================================

# GenerateParameterizedJoin converts a Select expression with placeholders and
# stable filter expressions into a join. This rule allows generic query plans,
# in which placeholder values are not known and stable expressions are not
# folded, to be optimized.
#
# This rule can result in either an IndexJoin or a LookupJoin. It only generates
# an IndexJoin if the Select filters hold all PK columns equal to a placeholder
# value, and there are no other filters. An IndexJoin is preferred over a
# LookupJoin because the former is more efficient. IndexJoins are optimized for
# a narrow set of capabilities and there is a vectorized implementation for
# them.
#
# As an example, consider a schema and query like:
#
#   CREATE TABLE t (k INT PRIMARY KEY, i INT)
#   SELECT * FROM t WHERE k = $1
#
# GenerateParameterizedJoin will perform the transformation below, from a
# Select into a IndexJoin.
#
#   Select (i=$1)         IndexJoin (t)
# 	    |           ->          |
# 	    |                       |
# 	  Scan t                 Values ($1)
#
#
# As another example, consider a schema and query like:
#
#   CREATE TABLE t (k INT PRIMARY KEY, i INT, INDEX i_idx (i))
#   SELECT k FROM t WHERE i = $1
#
# GenerateParameterizedJoin will perform the first transformation below, from a
# Select into a Join. GenerateLookupJoins will perform the second transformation
# from a (hash) Join into a LookupJoin. The LookupJoin will have similar
# performance characteristics to the constrained Scan that would be planned if
# the placeholder values were known.
#
#   Select (i=$1)              Join (i=col_$1)         LookupJoin (t@i_idx)
# 	    |           ->            /   \           ->          |
# 	    |                        /     \                      |
# 	  Scan t             Values ($1)   Scan t              Values ($1)
#
[GenerateParameterizedJoin, Explore]
(Select
    $scan:(Scan $scanPrivate:*) &
        (GenericRulesEnabled) &
        (IsCanonicalScan $scanPrivate)
    $filters:* & (HasPlaceholdersOrStableExprs (Root))
)
=>
(GenerateParameterizedJoin $scan $filters)
