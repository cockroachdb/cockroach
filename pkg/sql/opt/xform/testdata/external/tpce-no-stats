import file=tpce_schema
----

# TPC-E consists of 12 transactions with varying numbers of queries.

# --------------------------------------------------
# T1
# Broker-Volume
# Emulates a brokerage house’s “up-to-the-minute" internal business processing.
# An example of a Broker-Volume Transaction would be a manager generating a
# report on the current performance potential of various brokers.
# --------------------------------------------------

# Q1
#
# TODO:
#   1. The project under the groupby could be eliminated if the explorer
#      supported norm rules.
#
opt
SELECT b_name, sum(tr_qty * tr_bid_price)::FLOAT8
FROM sector, industry, company, security, trade_request, broker
WHERE tr_b_id = b_id
 AND s_symb = tr_s_symb
 AND co_id = s_co_id
 AND in_id = co_in_id
 AND sc_id = in_sc_id
 AND b_name = ANY ARRAY[
                    'Broker1', 'Broker2', 'Broker3', 'Broker4', 'Broker5',
                    'Broker6', 'Broker7', 'Broker8', 'Broker9', 'Broker10',
                    'Broker11', 'Broker12', 'Broker13', 'Broker14', 'Broker15',
                    'Broker16', 'Broker17', 'Broker18', 'Broker19', 'Broker20',
                    'Broker21', 'Broker22', 'Broker23', 'Broker24', 'Broker25',
                    'Broker26', 'Broker27', 'Broker28', 'Broker29', 'Broker30'
                  ]
 AND sc_name = 'Energy'
GROUP BY b_name
ORDER BY 2 DESC
----
sort
 ├── columns: b_name:49!null sum:56!null
 ├── immutable
 ├── key: (49)
 ├── fd: (49)-->(56)
 ├── ordering: -56
 └── project
      ├── columns: sum:56!null b_name:49!null
      ├── immutable
      ├── key: (49)
      ├── fd: (49)-->(56)
      ├── group-by
      │    ├── columns: b_name:49!null sum:55!null
      │    ├── grouping columns: b_name:49!null
      │    ├── immutable
      │    ├── key: (49)
      │    ├── fd: (49)-->(55)
      │    ├── project
      │    │    ├── columns: column54:54!null b_name:49!null
      │    │    ├── immutable
      │    │    ├── inner-join (lookup broker)
      │    │    │    ├── columns: sc_id:1!null sc_name:2!null in_id:5!null in_sc_id:7!null co_id:10!null co_in_id:13!null s_symb:21!null s_co_id:26!null tr_s_symb:41!null tr_qty:42!null tr_bid_price:43!null tr_b_id:44!null b_id:47!null b_name:49!null
      │    │    │    ├── key columns: [44] = [47]
      │    │    │    ├── lookup columns are key
      │    │    │    ├── fd: ()-->(1,2,7), (10)-->(13), (21)-->(26), (47)-->(49), (49)-->(47), (44)==(47), (47)==(44), (21)==(41), (41)==(21), (10)==(26), (26)==(10), (5)==(13), (13)==(5), (1)==(7), (7)==(1)
      │    │    │    ├── inner-join (lookup trade_request@secondary)
      │    │    │    │    ├── columns: sc_id:1!null sc_name:2!null in_id:5!null in_sc_id:7!null co_id:10!null co_in_id:13!null s_symb:21!null s_co_id:26!null tr_s_symb:41!null tr_qty:42!null tr_bid_price:43!null tr_b_id:44!null
      │    │    │    │    ├── key columns: [21] = [41]
      │    │    │    │    ├── fd: ()-->(1,2,7), (10)-->(13), (21)-->(26), (21)==(41), (41)==(21), (10)==(26), (26)==(10), (5)==(13), (13)==(5), (1)==(7), (7)==(1)
      │    │    │    │    ├── inner-join (lookup security@secondary)
      │    │    │    │    │    ├── columns: sc_id:1!null sc_name:2!null in_id:5!null in_sc_id:7!null co_id:10!null co_in_id:13!null s_symb:21!null s_co_id:26!null
      │    │    │    │    │    ├── key columns: [10] = [26]
      │    │    │    │    │    ├── key: (21)
      │    │    │    │    │    ├── fd: ()-->(1,2,7), (10)-->(13), (21)-->(26), (10)==(26), (26)==(10), (5)==(13), (13)==(5), (1)==(7), (7)==(1)
      │    │    │    │    │    ├── inner-join (hash)
      │    │    │    │    │    │    ├── columns: sc_id:1!null sc_name:2!null in_id:5!null in_sc_id:7!null co_id:10!null co_in_id:13!null
      │    │    │    │    │    │    ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
      │    │    │    │    │    │    ├── key: (10)
      │    │    │    │    │    │    ├── fd: ()-->(1,2,7), (10)-->(13), (5)==(13), (13)==(5), (1)==(7), (7)==(1)
      │    │    │    │    │    │    ├── scan company
      │    │    │    │    │    │    │    ├── columns: co_id:10!null co_in_id:13!null
      │    │    │    │    │    │    │    ├── key: (10)
      │    │    │    │    │    │    │    └── fd: (10)-->(13)
      │    │    │    │    │    │    ├── inner-join (hash)
      │    │    │    │    │    │    │    ├── columns: sc_id:1!null sc_name:2!null in_id:5!null in_sc_id:7!null
      │    │    │    │    │    │    │    ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
      │    │    │    │    │    │    │    ├── key: (5)
      │    │    │    │    │    │    │    ├── fd: ()-->(1,2,7), (1)==(7), (7)==(1)
      │    │    │    │    │    │    │    ├── scan industry
      │    │    │    │    │    │    │    │    ├── columns: in_id:5!null in_sc_id:7!null
      │    │    │    │    │    │    │    │    ├── key: (5)
      │    │    │    │    │    │    │    │    └── fd: (5)-->(7)
      │    │    │    │    │    │    │    ├── scan sector@secondary
      │    │    │    │    │    │    │    │    ├── columns: sc_id:1!null sc_name:2!null
      │    │    │    │    │    │    │    │    ├── constraint: /2: [/'Energy' - /'Energy']
      │    │    │    │    │    │    │    │    ├── cardinality: [0 - 1]
      │    │    │    │    │    │    │    │    ├── key: ()
      │    │    │    │    │    │    │    │    └── fd: ()-->(1,2)
      │    │    │    │    │    │    │    └── filters
      │    │    │    │    │    │    │         └── sc_id:1 = in_sc_id:7 [outer=(1,7), constraints=(/1: (/NULL - ]; /7: (/NULL - ]), fd=(1)==(7), (7)==(1)]
      │    │    │    │    │    │    └── filters
      │    │    │    │    │    │         └── in_id:5 = co_in_id:13 [outer=(5,13), constraints=(/5: (/NULL - ]; /13: (/NULL - ]), fd=(5)==(13), (13)==(5)]
      │    │    │    │    │    └── filters (true)
      │    │    │    │    └── filters (true)
      │    │    │    └── filters
      │    │    │         └── b_name:49 IN ('Broker1', 'Broker10', 'Broker11', 'Broker12', 'Broker13', 'Broker14', 'Broker15', 'Broker16', 'Broker17', 'Broker18', 'Broker19', 'Broker2', 'Broker20', 'Broker21', 'Broker22', 'Broker23', 'Broker24', 'Broker25', 'Broker26', 'Broker27', 'Broker28', 'Broker29', 'Broker3', 'Broker30', 'Broker4', 'Broker5', 'Broker6', 'Broker7', 'Broker8', 'Broker9') [outer=(49), constraints=(/49: [/'Broker1' - /'Broker1'] [/'Broker10' - /'Broker10'] [/'Broker11' - /'Broker11'] [/'Broker12' - /'Broker12'] [/'Broker13' - /'Broker13'] [/'Broker14' - /'Broker14'] [/'Broker15' - /'Broker15'] [/'Broker16' - /'Broker16'] [/'Broker17' - /'Broker17'] [/'Broker18' - /'Broker18'] [/'Broker19' - /'Broker19'] [/'Broker2' - /'Broker2'] [/'Broker20' - /'Broker20'] [/'Broker21' - /'Broker21'] [/'Broker22' - /'Broker22'] [/'Broker23' - /'Broker23'] [/'Broker24' - /'Broker24'] [/'Broker25' - /'Broker25'] [/'Broker26' - /'Broker26'] [/'Broker27' - /'Broker27'] [/'Broker28' - /'Broker28'] [/'Broker29' - /'Broker29'] [/'Broker3' - /'Broker3'] [/'Broker30' - /'Broker30'] [/'Broker4' - /'Broker4'] [/'Broker5' - /'Broker5'] [/'Broker6' - /'Broker6'] [/'Broker7' - /'Broker7'] [/'Broker8' - /'Broker8'] [/'Broker9' - /'Broker9']; tight)]
      │    │    └── projections
      │    │         └── tr_qty:42::INT8 * tr_bid_price:43::DECIMAL [as=column54:54, outer=(42,43), immutable]
      │    └── aggregations
      │         └── sum [as=sum:55, outer=(54)]
      │              └── column54:54
      └── projections
           └── sum:55::FLOAT8 [as=sum:56, outer=(55), immutable]

# --------------------------------------------------
# T2
# Customer-Position
# Emulates the process of retrieving the customer’s profile and summarizing
# their overall standing based on current market values for all assets. This is
# representative of the work performed when a customer asks the question “What
# am I worth today?”
# --------------------------------------------------

# Q1
opt
SELECT c_id
  FROM customer
 WHERE c_tax_id = ''
----
project
 ├── columns: c_id:1!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(1)
 └── scan customer@secondary
      ├── columns: c_id:1!null c_tax_id:2!null
      ├── constraint: /2: [/'' - /'']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,2)

# Q2
opt
SELECT c_id,
       c_st_id,
       c_l_name,
       c_f_name,
       c_m_name,
       c_gndr,
       c_tier,
       c_dob,
       c_ad_id,
       c_ctry_1,
       c_area_1,
       c_local_1,
       c_ext_1,
       c_ctry_2,
       c_area_2,
       c_local_2,
       c_ext_2,
       c_ctry_3,
       c_area_3,
       c_local_3,
       c_ext_3,
       c_email_1,
       c_email_2
  FROM customer
 WHERE c_id = 0
----
scan customer
 ├── columns: c_id:1!null c_st_id:3!null c_l_name:4!null c_f_name:5!null c_m_name:6 c_gndr:7 c_tier:8!null c_dob:9!null c_ad_id:10!null c_ctry_1:11 c_area_1:12 c_local_1:13 c_ext_1:14 c_ctry_2:15 c_area_2:16 c_local_2:17 c_ext_2:18 c_ctry_3:19 c_area_3:20 c_local_3:21 c_ext_3:22 c_email_1:23 c_email_2:24
 ├── constraint: /1: [/0 - /0]
 ├── cardinality: [0 - 1]
 ├── key: ()
 └── fd: ()-->(1,3-24)

# Q3
opt
   SELECT ca_id,
          ca_bal::FLOAT8,
          IFNULL((sum(hs_qty * lt_price)), 0)::FLOAT8
     FROM customer_account
LEFT JOIN holding_summary ON hs_ca_id = ca_id
     JOIN last_trade ON lt_s_symb = hs_s_symb
    WHERE ca_c_id = 0
 GROUP BY ca_id, ca_bal
 ORDER BY 3 ASC
    LIMIT 10
----
limit
 ├── columns: ca_id:1!null ca_bal:23!null coalesce:24
 ├── internal-ordering: +24
 ├── cardinality: [0 - 10]
 ├── immutable
 ├── key: (1)
 ├── fd: (1)-->(23,24)
 ├── ordering: +24
 ├── sort
 │    ├── columns: ca_id:1!null ca_bal:23!null coalesce:24
 │    ├── immutable
 │    ├── key: (1)
 │    ├── fd: (1)-->(23,24)
 │    ├── ordering: +24
 │    ├── limit hint: 10.00
 │    └── project
 │         ├── columns: ca_bal:23!null coalesce:24 ca_id:1!null
 │         ├── immutable
 │         ├── key: (1)
 │         ├── fd: (1)-->(23,24)
 │         ├── group-by
 │         │    ├── columns: ca_id:1!null customer_account.ca_bal:6!null sum:22!null
 │         │    ├── grouping columns: ca_id:1!null
 │         │    ├── internal-ordering: +1
 │         │    ├── immutable
 │         │    ├── key: (1)
 │         │    ├── fd: (1)-->(6,22)
 │         │    ├── project
 │         │    │    ├── columns: column21:21!null ca_id:1!null customer_account.ca_bal:6!null
 │         │    │    ├── immutable
 │         │    │    ├── fd: (1)-->(6)
 │         │    │    ├── ordering: +1
 │         │    │    ├── inner-join (lookup last_trade)
 │         │    │    │    ├── columns: ca_id:1!null ca_c_id:3!null customer_account.ca_bal:6!null hs_ca_id:9!null hs_s_symb:10!null hs_qty:11!null lt_s_symb:14!null lt_price:16!null
 │         │    │    │    ├── key columns: [10] = [14]
 │         │    │    │    ├── lookup columns are key
 │         │    │    │    ├── key: (9,14)
 │         │    │    │    ├── fd: ()-->(3), (1)-->(6), (9,10)-->(11), (1)==(9), (9)==(1), (14)-->(16), (10)==(14), (14)==(10)
 │         │    │    │    ├── ordering: +(1|9) opt(3) [actual: +1]
 │         │    │    │    ├── inner-join (lookup holding_summary)
 │         │    │    │    │    ├── columns: ca_id:1!null ca_c_id:3!null customer_account.ca_bal:6!null hs_ca_id:9!null hs_s_symb:10!null hs_qty:11!null
 │         │    │    │    │    ├── key columns: [1] = [9]
 │         │    │    │    │    ├── key: (9,10)
 │         │    │    │    │    ├── fd: ()-->(3), (1)-->(6), (9,10)-->(11), (1)==(9), (9)==(1)
 │         │    │    │    │    ├── ordering: +(1|9) opt(3) [actual: +1]
 │         │    │    │    │    ├── select
 │         │    │    │    │    │    ├── columns: ca_id:1!null ca_c_id:3!null customer_account.ca_bal:6!null
 │         │    │    │    │    │    ├── key: (1)
 │         │    │    │    │    │    ├── fd: ()-->(3), (1)-->(6)
 │         │    │    │    │    │    ├── ordering: +1 opt(3) [actual: +1]
 │         │    │    │    │    │    ├── scan customer_account
 │         │    │    │    │    │    │    ├── columns: ca_id:1!null ca_c_id:3!null customer_account.ca_bal:6!null
 │         │    │    │    │    │    │    ├── check constraint expressions
 │         │    │    │    │    │    │    │    └── ca_tax_st:5 IN (0, 1, 2) [outer=(5), constraints=(/5: [/0 - /0] [/1 - /1] [/2 - /2]; tight)]
 │         │    │    │    │    │    │    ├── key: (1)
 │         │    │    │    │    │    │    ├── fd: (1)-->(3,6)
 │         │    │    │    │    │    │    └── ordering: +1
 │         │    │    │    │    │    └── filters
 │         │    │    │    │    │         └── ca_c_id:3 = 0 [outer=(3), constraints=(/3: [/0 - /0]; tight), fd=()-->(3)]
 │         │    │    │    │    └── filters (true)
 │         │    │    │    └── filters (true)
 │         │    │    └── projections
 │         │    │         └── hs_qty:11::INT8 * lt_price:16::DECIMAL [as=column21:21, outer=(11,16), immutable]
 │         │    └── aggregations
 │         │         ├── sum [as=sum:22, outer=(21)]
 │         │         │    └── column21:21
 │         │         └── const-agg [as=customer_account.ca_bal:6, outer=(6)]
 │         │              └── customer_account.ca_bal:6
 │         └── projections
 │              ├── customer_account.ca_bal:6::FLOAT8 [as=ca_bal:23, outer=(6), immutable]
 │              └── COALESCE(sum:22, 0)::FLOAT8 [as=coalesce:24, outer=(22), immutable]
 └── 10

# Q4
opt
SELECT t_id, t_s_symb, t_qty, st_name, th_dts
FROM (
          SELECT t_id, t_s_symb, t_qty
            FROM trade
           WHERE t_ca_id = 0
        ORDER BY t_dts DESC
           LIMIT 10
     ) AS t,
     trade_history,
     status_type
WHERE th_t_id = t_id AND st_id = th_st_id
ORDER BY th_dts DESC
LIMIT 30
----
project
 ├── columns: t_id:1!null t_s_symb:6!null t_qty:7!null st_name:24!null th_dts:19!null
 ├── cardinality: [0 - 30]
 ├── fd: (1)-->(6,7)
 ├── ordering: -19
 └── limit
      ├── columns: t_id:1!null t_dts:2!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null th_t_id:18!null th_dts:19!null th_st_id:20!null st_id:23!null st_name:24!null
      ├── internal-ordering: -19 opt(9)
      ├── cardinality: [0 - 30]
      ├── key: (18,23)
      ├── fd: ()-->(9), (1)-->(2,6,7), (18,20)-->(19), (23)-->(24), (20)==(23), (23)==(20), (1)==(18), (18)==(1)
      ├── ordering: -19 opt(9) [actual: -19]
      ├── inner-join (lookup status_type)
      │    ├── columns: t_id:1!null t_dts:2!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null th_t_id:18!null th_dts:19!null th_st_id:20!null st_id:23!null st_name:24!null
      │    ├── key columns: [20] = [23]
      │    ├── lookup columns are key
      │    ├── key: (18,23)
      │    ├── fd: ()-->(9), (1)-->(2,6,7), (18,20)-->(19), (23)-->(24), (20)==(23), (23)==(20), (1)==(18), (18)==(1)
      │    ├── ordering: -19 opt(9) [actual: -19]
      │    ├── limit hint: 30.00
      │    ├── sort
      │    │    ├── columns: t_id:1!null t_dts:2!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null th_t_id:18!null th_dts:19!null th_st_id:20!null
      │    │    ├── key: (18,20)
      │    │    ├── fd: ()-->(9), (1)-->(2,6,7), (18,20)-->(19), (1)==(18), (18)==(1)
      │    │    ├── ordering: -19 opt(9) [actual: -19]
      │    │    ├── limit hint: 100.00
      │    │    └── inner-join (lookup trade_history)
      │    │         ├── columns: t_id:1!null t_dts:2!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null th_t_id:18!null th_dts:19!null th_st_id:20!null
      │    │         ├── key columns: [1] = [18]
      │    │         ├── key: (18,20)
      │    │         ├── fd: ()-->(9), (1)-->(2,6,7), (18,20)-->(19), (1)==(18), (18)==(1)
      │    │         ├── scan trade@secondary
      │    │         │    ├── columns: t_id:1!null t_dts:2!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null
      │    │         │    ├── constraint: /9/-2/1: [/0 - /0]
      │    │         │    ├── limit: 10
      │    │         │    ├── key: (1)
      │    │         │    └── fd: ()-->(9), (1)-->(2,6,7)
      │    │         └── filters (true)
      │    └── filters (true)
      └── 30

# --------------------------------------------------
# T3
# Market-Feed
# Emulates the process of tracking the current market activity. This is
# representative of the brokerage house processing the “ticker-tape” from the
# market exchange.
# --------------------------------------------------

# Q1
opt
UPDATE last_trade
   SET lt_price = '100.00':::FLOAT8::DECIMAL,
       lt_vol = lt_vol + 20,
       lt_dts = '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP
 WHERE lt_s_symb = 'SYMB'
----
update last_trade
 ├── columns: <none>
 ├── fetch columns: lt_s_symb:8 lt_dts:9 lt_price:10 lt_open_price:11 lt_vol:12
 ├── update-mapping:
 │    ├── lt_dts_new:17 => lt_dts:2
 │    ├── lt_price_new:18 => lt_price:3
 │    └── lt_vol_new:16 => lt_vol:5
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: lt_price_new:18!null lt_vol_new:16!null lt_dts_new:17!null lt_s_symb:8!null lt_dts:9!null lt_price:10!null lt_open_price:11!null lt_vol:12!null
      ├── cardinality: [0 - 1]
      ├── immutable
      ├── key: ()
      ├── fd: ()-->(8-12,16-18)
      ├── scan last_trade
      │    ├── columns: lt_s_symb:8!null lt_dts:9!null lt_price:10!null lt_open_price:11!null lt_vol:12!null
      │    ├── constraint: /8: [/'SYMB' - /'SYMB']
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(8-12)
      └── projections
           ├── 1E+2 [as=lt_price_new:18]
           ├── lt_vol:12 + 20 [as=lt_vol_new:16, outer=(12), immutable]
           └── '2020-06-17 22:27:42.148484' [as=lt_dts_new:17]

# Q2
opt
SELECT tr_t_id, tr_bid_price::FLOAT8, tr_tt_id, tr_qty
  FROM trade_request
 WHERE tr_s_symb = 'SYMB'
   AND (
        (tr_tt_id = 'Stop-Loss' AND tr_bid_price >= '100.00':::FLOAT8::DECIMAL)
        OR (tr_tt_id = 'Limit-Sell' AND tr_bid_price <= '100.00':::FLOAT8::DECIMAL)
        OR (tr_tt_id = 'Limit-Buy' AND tr_bid_price >= '100.00':::FLOAT8::DECIMAL)
       )
----
project
 ├── columns: tr_t_id:1!null tr_bid_price:9!null tr_tt_id:2!null tr_qty:4!null
 ├── immutable
 ├── key: (1)
 ├── fd: (1)-->(2,4,9)
 ├── select
 │    ├── columns: tr_t_id:1!null tr_tt_id:2!null tr_s_symb:3!null tr_qty:4!null trade_request.tr_bid_price:5!null
 │    ├── immutable
 │    ├── key: (1)
 │    ├── fd: ()-->(3), (1)-->(2,4,5)
 │    ├── index-join trade_request
 │    │    ├── columns: tr_t_id:1!null tr_tt_id:2!null tr_s_symb:3!null tr_qty:4!null trade_request.tr_bid_price:5!null
 │    │    ├── key: (1)
 │    │    ├── fd: ()-->(3), (1)-->(2,4,5)
 │    │    └── scan trade_request@secondary
 │    │         ├── columns: tr_t_id:1!null tr_s_symb:3!null tr_qty:4!null trade_request.tr_bid_price:5!null
 │    │         ├── constraint: /3/6/1: [/'SYMB' - /'SYMB']
 │    │         ├── key: (1)
 │    │         └── fd: ()-->(3), (1)-->(4,5)
 │    └── filters
 │         └── (((tr_tt_id:2 = 'Stop-Loss') AND (trade_request.tr_bid_price:5 >= 1E+2)) OR ((tr_tt_id:2 = 'Limit-Sell') AND (trade_request.tr_bid_price:5 <= 1E+2))) OR ((tr_tt_id:2 = 'Limit-Buy') AND (trade_request.tr_bid_price:5 >= 1E+2)) [outer=(2,5), immutable, constraints=(/2: [/'Limit-Buy' - /'Limit-Buy'] [/'Limit-Sell' - /'Limit-Sell'] [/'Stop-Loss' - /'Stop-Loss']; /5: (/NULL - ])]
 └── projections
      └── trade_request.tr_bid_price:5::FLOAT8 [as=tr_bid_price:9, outer=(5), immutable]

# Q3
opt
UPDATE trade
   SET t_dts = '2020-06-15 22:27:42.148484+00:00'::TIMESTAMP, t_st_id = 'SBMT'
 WHERE t_id = 0
----
update trade
 ├── columns: <none>
 ├── fetch columns: t_id:18 t_dts:19 trade.t_st_id:20 t_tt_id:21 t_is_cash:22 t_s_symb:23 t_qty:24 t_bid_price:25 t_ca_id:26 t_exec_name:27 t_trade_price:28 t_chrg:29 t_comm:30 t_tax:31 t_lifo:32
 ├── update-mapping:
 │    ├── t_dts_new:35 => t_dts:2
 │    └── t_st_id_new:36 => trade.t_st_id:3
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── project
 │    ├── columns: t_dts_new:35!null t_st_id_new:36!null t_id:18!null t_dts:19!null trade.t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(18-32,35,36)
 │    ├── scan trade
 │    │    ├── columns: t_id:18!null t_dts:19!null trade.t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
 │    │    ├── constraint: /18: [/0 - /0]
 │    │    ├── cardinality: [0 - 1]
 │    │    ├── key: ()
 │    │    └── fd: ()-->(18-32)
 │    └── projections
 │         ├── '2020-06-15 22:27:42.148484' [as=t_dts_new:35]
 │         └── 'SBMT' [as=t_st_id_new:36]
 └── f-k-checks
      └── f-k-checks-item: trade(t_st_id) -> status_type(st_id)
           └── anti-join (lookup status_type)
                ├── columns: t_st_id:42!null
                ├── key columns: [42] = [43]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(42)
                ├── with-scan &1
                │    ├── columns: t_st_id:42!null
                │    ├── mapping:
                │    │    └──  t_st_id_new:36 => t_st_id:42
                │    ├── cardinality: [0 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(42)
                └── filters (true)

# Q4
opt
DELETE FROM trade_request WHERE tr_t_id = 0
----
delete trade_request
 ├── columns: <none>
 ├── fetch columns: tr_t_id:9 tr_s_symb:11 tr_b_id:14
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── scan trade_request
      ├── columns: tr_t_id:9!null tr_s_symb:11!null tr_b_id:14!null
      ├── constraint: /9: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(9,11,14)

# Q5
opt
INSERT INTO trade_history (th_t_id, th_dts, th_st_id)
VALUES (0, '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP, 'SBMT')
----
insert trade_history
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:6 => trade_history.th_t_id:1
 │    ├── column2:7 => th_dts:2
 │    └── column3:8 => trade_history.th_st_id:3
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:6!null column2:7!null column3:8!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(6-8)
 │    └── (0, '2020-06-17 22:27:42.148484', 'SBMT')
 └── f-k-checks
      ├── f-k-checks-item: trade_history(th_t_id) -> trade(t_id)
      │    └── anti-join (lookup trade)
      │         ├── columns: th_t_id:9!null
      │         ├── key columns: [9] = [10]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(9)
      │         ├── with-scan &1
      │         │    ├── columns: th_t_id:9!null
      │         │    ├── mapping:
      │         │    │    └──  column1:6 => th_t_id:9
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(9)
      │         └── filters (true)
      └── f-k-checks-item: trade_history(th_st_id) -> status_type(st_id)
           └── anti-join (lookup status_type)
                ├── columns: th_st_id:27!null
                ├── key columns: [27] = [28]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(27)
                ├── with-scan &1
                │    ├── columns: th_st_id:27!null
                │    ├── mapping:
                │    │    └──  column3:8 => th_st_id:27
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(27)
                └── filters (true)

# --------------------------------------------------
# T4
# Market-Watch
# Emulates the process of monitoring the overall performance of the market by
# allowing a customer to track the current daily trend (up or down) of a
# collection of securities. The collection of securities being monitored may be
# based upon a customer’s current holdings, a customer’s watch list of
# prospective securities, or a particular industry.
# --------------------------------------------------

# Q1
opt
SELECT wi_s_symb
  FROM watch_item, watch_list
 WHERE wi_wl_id = wl_id AND wl_c_id = 0
----
project
 ├── columns: wi_s_symb:2!null
 └── inner-join (lookup watch_item)
      ├── columns: wi_wl_id:1!null wi_s_symb:2!null wl_id:5!null wl_c_id:6!null
      ├── key columns: [5] = [1]
      ├── key: (2,5)
      ├── fd: ()-->(6), (1)==(5), (5)==(1)
      ├── select
      │    ├── columns: wl_id:5!null wl_c_id:6!null
      │    ├── key: (5)
      │    ├── fd: ()-->(6)
      │    ├── scan watch_list
      │    │    ├── columns: wl_id:5!null wl_c_id:6!null
      │    │    ├── key: (5)
      │    │    └── fd: (5)-->(6)
      │    └── filters
      │         └── wl_c_id:6 = 0 [outer=(6), constraints=(/6: [/0 - /0]; tight), fd=()-->(6)]
      └── filters (true)

# Q2
opt
SELECT
  s_symb
FROM
  industry,
  company,
  security
WHERE
  in_name = 'Software' AND
  co_in_id = in_id AND
  co_id >= 1 AND
  co_id <= 5000 AND
  s_co_id = co_id
----
project
 ├── columns: s_symb:17!null
 ├── key: (17)
 └── inner-join (hash)
      ├── columns: in_id:1!null in_name:2!null co_id:6!null co_in_id:9!null s_symb:17!null s_co_id:22!null
      ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
      ├── key: (17)
      ├── fd: ()-->(2), (6)-->(9), (17)-->(22), (6)==(22), (22)==(6), (1)==(9), (9)==(1)
      ├── scan security@secondary
      │    ├── columns: s_symb:17!null s_co_id:22!null
      │    ├── constraint: /22/18: [/1 - /5000]
      │    ├── key: (17)
      │    └── fd: (17)-->(22)
      ├── inner-join (hash)
      │    ├── columns: in_id:1!null in_name:2!null co_id:6!null co_in_id:9!null
      │    ├── cardinality: [0 - 5000]
      │    ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
      │    ├── key: (6)
      │    ├── fd: ()-->(2), (6)-->(9), (1)==(9), (9)==(1)
      │    ├── scan company
      │    │    ├── columns: co_id:6!null co_in_id:9!null
      │    │    ├── constraint: /6: [/1 - /5000]
      │    │    ├── cardinality: [0 - 5000]
      │    │    ├── key: (6)
      │    │    └── fd: (6)-->(9)
      │    ├── select
      │    │    ├── columns: in_id:1!null in_name:2!null
      │    │    ├── key: (1)
      │    │    ├── fd: ()-->(2)
      │    │    ├── scan industry
      │    │    │    ├── columns: in_id:1!null in_name:2!null
      │    │    │    ├── key: (1)
      │    │    │    └── fd: (1)-->(2)
      │    │    └── filters
      │    │         └── in_name:2 = 'Software' [outer=(2), constraints=(/2: [/'Software' - /'Software']; tight), fd=()-->(2)]
      │    └── filters
      │         └── co_in_id:9 = in_id:1 [outer=(1,9), constraints=(/1: (/NULL - ]; /9: (/NULL - ]), fd=(1)==(9), (9)==(1)]
      └── filters
           └── s_co_id:22 = co_id:6 [outer=(6,22), constraints=(/6: (/NULL - ]; /22: (/NULL - ]), fd=(6)==(22), (22)==(6)]

# Q3
opt
SELECT hs_s_symb FROM holding_summary WHERE hs_ca_id = 0
----
project
 ├── columns: hs_s_symb:2!null
 ├── key: (2)
 └── scan holding_summary
      ├── columns: hs_ca_id:1!null hs_s_symb:2!null
      ├── constraint: /1/2: [/0 - /0]
      ├── key: (2)
      └── fd: ()-->(1)

# Q4
opt
SELECT lt_price FROM last_trade WHERE lt_s_symb = 'SYMB'
----
project
 ├── columns: lt_price:3!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(3)
 └── scan last_trade
      ├── columns: lt_s_symb:1!null lt_price:3!null
      ├── constraint: /1: [/'SYMB' - /'SYMB']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,3)

# Q5
opt
SELECT s_num_out FROM security WHERE s_symb = 'SYMB'
----
project
 ├── columns: s_num_out:7!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(7)
 └── scan security
      ├── columns: s_symb:1!null s_num_out:7!null
      ├── constraint: /1: [/'SYMB' - /'SYMB']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,7)

# Q6
opt
SELECT dm_close
  FROM daily_market
 WHERE dm_s_symb = 'SYMB' AND
       dm_date = '2020-06-17'::DATE
----
project
 ├── columns: dm_close:3!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(3)
 └── scan daily_market
      ├── columns: dm_date:1!null dm_s_symb:2!null dm_close:3!null
      ├── constraint: /1/2: [/'2020-06-17'/'SYMB' - /'2020-06-17'/'SYMB']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1-3)

# --------------------------------------------------
# T5
# Security-Detail
# Emulates the process of accessing detailed information on a particular
# security. This is representative of a customer doing research on a security
# prior to making a decision about whether or not to execute a trade.
# --------------------------------------------------

# Q1 Version 1
opt
SELECT s_name,
      co_id,
      co_name,
      co_sp_rate,
      co_ceo,
      co_desc,
      co_open_date,
      co_st_id,
      ca.ad_line1,
      ca.ad_line2,
      zca.zc_town,
      zca.zc_div,
      ca.ad_zc_code,
      ca.ad_ctry,
      s_num_out,
      s_start_date,
      s_exch_date,
      s_pe::FLOAT8,
      s_52wk_high::FLOAT8,
      s_52wk_high_date,
      s_52wk_low::FLOAT8,
      s_52wk_low_date,
      s_dividend::FLOAT8,
      s_yield::FLOAT8,
      zea.zc_div,
      ea.ad_ctry,
      ea.ad_line1,
      ea.ad_line2,
      zea.zc_town,
      ea.ad_zc_code,
      ex_close,
      ex_desc,
      ex_name,
      ex_num_symb,
      ex_open
 FROM security,
      company,
      address AS ca,
      zip_code AS zca,
      exchange,
      address AS ea,
      zip_code AS zea
WHERE s_symb = 'SYMB' AND
      co_id = s_co_id AND
      ca.ad_id = co_ad_id and
      ea.ad_id = ex_ad_id and
      ex_id = s_ex_id and
      ca.ad_zc_code = zca.zc_code and
      ea.ad_zc_code =zea.zc_code
----
project
 ├── columns: s_name:4!null co_id:19!null co_name:21!null co_sp_rate:23!null co_ceo:24!null co_desc:26!null co_open_date:27!null co_st_id:20!null ad_line1:31 ad_line2:32 zc_town:38!null zc_div:39!null ad_zc_code:33!null ad_ctry:34 s_num_out:7!null s_start_date:8!null s_exch_date:9!null s_pe:63!null s_52wk_high:64!null s_52wk_high_date:12!null s_52wk_low:65!null s_52wk_low_date:14!null s_dividend:66!null s_yield:67!null zc_div:60!null ad_ctry:55 ad_line1:52 ad_line2:53 zc_town:59!null ad_zc_code:54!null ex_close:46!null ex_desc:47 ex_name:43!null ex_num_symb:44!null ex_open:45!null
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(4,7-9,12,14,19-21,23,24,26,27,31-34,38,39,43-47,52-55,59,60,63-67)
 ├── inner-join (lookup zip_code [as=zca])
 │    ├── columns: s_symb:1!null s_name:4!null s_ex_id:5!null s_co_id:6!null s_num_out:7!null s_start_date:8!null s_exch_date:9!null security.s_pe:10!null security.s_52wk_high:11!null s_52wk_high_date:12!null security.s_52wk_low:13!null s_52wk_low_date:14!null security.s_dividend:15!null security.s_yield:16!null co_id:19!null co_st_id:20!null co_name:21!null co_sp_rate:23!null co_ceo:24!null co_ad_id:25!null co_desc:26!null co_open_date:27!null ca.ad_id:30!null ca.ad_line1:31 ca.ad_line2:32 ca.ad_zc_code:33!null ca.ad_ctry:34 zca.zc_code:37!null zca.zc_town:38!null zca.zc_div:39!null ex_id:42!null ex_name:43!null ex_num_symb:44!null ex_open:45!null ex_close:46!null ex_desc:47 ex_ad_id:48!null ea.ad_id:51!null ea.ad_line1:52 ea.ad_line2:53 ea.ad_zc_code:54!null ea.ad_ctry:55 zea.zc_code:58!null zea.zc_town:59!null zea.zc_div:60!null
 │    ├── key columns: [33] = [37]
 │    ├── lookup columns are key
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(1,4-16,19-21,23-27,30-34,37-39,42-48,51-55,58-60), (25)==(30), (30)==(25), (6)==(19), (19)==(6), (33)==(37), (54)==(58), (58)==(54), (48)==(51), (51)==(48), (5)==(42), (42)==(5), (37)==(33)
 │    ├── inner-join (lookup address [as=ca])
 │    │    ├── columns: s_symb:1!null s_name:4!null s_ex_id:5!null s_co_id:6!null s_num_out:7!null s_start_date:8!null s_exch_date:9!null security.s_pe:10!null security.s_52wk_high:11!null s_52wk_high_date:12!null security.s_52wk_low:13!null s_52wk_low_date:14!null security.s_dividend:15!null security.s_yield:16!null co_id:19!null co_st_id:20!null co_name:21!null co_sp_rate:23!null co_ceo:24!null co_ad_id:25!null co_desc:26!null co_open_date:27!null ca.ad_id:30!null ca.ad_line1:31 ca.ad_line2:32 ca.ad_zc_code:33!null ca.ad_ctry:34 ex_id:42!null ex_name:43!null ex_num_symb:44!null ex_open:45!null ex_close:46!null ex_desc:47 ex_ad_id:48!null ea.ad_id:51!null ea.ad_line1:52 ea.ad_line2:53 ea.ad_zc_code:54!null ea.ad_ctry:55 zea.zc_code:58!null zea.zc_town:59!null zea.zc_div:60!null
 │    │    ├── key columns: [25] = [30]
 │    │    ├── lookup columns are key
 │    │    ├── cardinality: [0 - 1]
 │    │    ├── key: ()
 │    │    ├── fd: ()-->(1,4-16,19-21,23-27,30-34,42-48,51-55,58-60), (51)==(48), (5)==(42), (42)==(5), (54)==(58), (6)==(19), (19)==(6), (58)==(54), (25)==(30), (30)==(25), (48)==(51)
 │    │    ├── inner-join (lookup company)
 │    │    │    ├── columns: s_symb:1!null s_name:4!null s_ex_id:5!null s_co_id:6!null s_num_out:7!null s_start_date:8!null s_exch_date:9!null security.s_pe:10!null security.s_52wk_high:11!null s_52wk_high_date:12!null security.s_52wk_low:13!null s_52wk_low_date:14!null security.s_dividend:15!null security.s_yield:16!null co_id:19!null co_st_id:20!null co_name:21!null co_sp_rate:23!null co_ceo:24!null co_ad_id:25!null co_desc:26!null co_open_date:27!null ex_id:42!null ex_name:43!null ex_num_symb:44!null ex_open:45!null ex_close:46!null ex_desc:47 ex_ad_id:48!null ea.ad_id:51!null ea.ad_line1:52 ea.ad_line2:53 ea.ad_zc_code:54!null ea.ad_ctry:55 zea.zc_code:58!null zea.zc_town:59!null zea.zc_div:60!null
 │    │    │    ├── key columns: [6] = [19]
 │    │    │    ├── lookup columns are key
 │    │    │    ├── cardinality: [0 - 1]
 │    │    │    ├── key: ()
 │    │    │    ├── fd: ()-->(1,4-16,19-21,23-27,42-48,51-55,58-60), (48)==(51), (51)==(48), (5)==(42), (42)==(5), (54)==(58), (6)==(19), (19)==(6), (58)==(54)
 │    │    │    ├── inner-join (lookup zip_code [as=zea])
 │    │    │    │    ├── columns: s_symb:1!null s_name:4!null s_ex_id:5!null s_co_id:6!null s_num_out:7!null s_start_date:8!null s_exch_date:9!null security.s_pe:10!null security.s_52wk_high:11!null s_52wk_high_date:12!null security.s_52wk_low:13!null s_52wk_low_date:14!null security.s_dividend:15!null security.s_yield:16!null ex_id:42!null ex_name:43!null ex_num_symb:44!null ex_open:45!null ex_close:46!null ex_desc:47 ex_ad_id:48!null ea.ad_id:51!null ea.ad_line1:52 ea.ad_line2:53 ea.ad_zc_code:54!null ea.ad_ctry:55 zea.zc_code:58!null zea.zc_town:59!null zea.zc_div:60!null
 │    │    │    │    ├── key columns: [54] = [58]
 │    │    │    │    ├── lookup columns are key
 │    │    │    │    ├── cardinality: [0 - 1]
 │    │    │    │    ├── key: ()
 │    │    │    │    ├── fd: ()-->(1,4-16,42-48,51-55,58-60), (58)==(54), (48)==(51), (51)==(48), (5)==(42), (42)==(5), (54)==(58)
 │    │    │    │    ├── inner-join (lookup address [as=ea])
 │    │    │    │    │    ├── columns: s_symb:1!null s_name:4!null s_ex_id:5!null s_co_id:6!null s_num_out:7!null s_start_date:8!null s_exch_date:9!null security.s_pe:10!null security.s_52wk_high:11!null s_52wk_high_date:12!null security.s_52wk_low:13!null s_52wk_low_date:14!null security.s_dividend:15!null security.s_yield:16!null ex_id:42!null ex_name:43!null ex_num_symb:44!null ex_open:45!null ex_close:46!null ex_desc:47 ex_ad_id:48!null ea.ad_id:51!null ea.ad_line1:52 ea.ad_line2:53 ea.ad_zc_code:54!null ea.ad_ctry:55
 │    │    │    │    │    ├── key columns: [48] = [51]
 │    │    │    │    │    ├── lookup columns are key
 │    │    │    │    │    ├── cardinality: [0 - 1]
 │    │    │    │    │    ├── key: ()
 │    │    │    │    │    ├── fd: ()-->(1,4-16,42-48,51-55), (51)==(48), (5)==(42), (42)==(5), (48)==(51)
 │    │    │    │    │    ├── inner-join (lookup exchange)
 │    │    │    │    │    │    ├── columns: s_symb:1!null s_name:4!null s_ex_id:5!null s_co_id:6!null s_num_out:7!null s_start_date:8!null s_exch_date:9!null security.s_pe:10!null security.s_52wk_high:11!null s_52wk_high_date:12!null security.s_52wk_low:13!null s_52wk_low_date:14!null security.s_dividend:15!null security.s_yield:16!null ex_id:42!null ex_name:43!null ex_num_symb:44!null ex_open:45!null ex_close:46!null ex_desc:47 ex_ad_id:48!null
 │    │    │    │    │    │    ├── key columns: [5] = [42]
 │    │    │    │    │    │    ├── lookup columns are key
 │    │    │    │    │    │    ├── cardinality: [0 - 1]
 │    │    │    │    │    │    ├── key: ()
 │    │    │    │    │    │    ├── fd: ()-->(1,4-16,42-48), (42)==(5), (5)==(42)
 │    │    │    │    │    │    ├── scan security
 │    │    │    │    │    │    │    ├── columns: s_symb:1!null s_name:4!null s_ex_id:5!null s_co_id:6!null s_num_out:7!null s_start_date:8!null s_exch_date:9!null security.s_pe:10!null security.s_52wk_high:11!null s_52wk_high_date:12!null security.s_52wk_low:13!null s_52wk_low_date:14!null security.s_dividend:15!null security.s_yield:16!null
 │    │    │    │    │    │    │    ├── constraint: /1: [/'SYMB' - /'SYMB']
 │    │    │    │    │    │    │    ├── cardinality: [0 - 1]
 │    │    │    │    │    │    │    ├── key: ()
 │    │    │    │    │    │    │    └── fd: ()-->(1,4-16)
 │    │    │    │    │    │    └── filters (true)
 │    │    │    │    │    └── filters (true)
 │    │    │    │    └── filters (true)
 │    │    │    └── filters (true)
 │    │    └── filters (true)
 │    └── filters (true)
 └── projections
      ├── security.s_pe:10::FLOAT8 [as=s_pe:63, outer=(10), immutable]
      ├── security.s_52wk_high:11::FLOAT8 [as=s_52wk_high:64, outer=(11), immutable]
      ├── security.s_52wk_low:13::FLOAT8 [as=s_52wk_low:65, outer=(13), immutable]
      ├── security.s_dividend:15::FLOAT8 [as=s_dividend:66, outer=(15), immutable]
      └── security.s_yield:16::FLOAT8 [as=s_yield:67, outer=(16), immutable]

# Q2
opt
SELECT co_name, in_name
  FROM company_competitor, company, industry
 WHERE cp_co_id = 0 AND co_id = cp_comp_co_id AND in_id = cp_in_id
 LIMIT 3
----
project
 ├── columns: co_name:8!null in_name:18!null
 ├── cardinality: [0 - 3]
 └── inner-join (lookup industry)
      ├── columns: cp_co_id:1!null cp_comp_co_id:2!null cp_in_id:3!null co_id:6!null co_name:8!null in_id:17!null in_name:18!null
      ├── key columns: [3] = [17]
      ├── lookup columns are key
      ├── cardinality: [0 - 3]
      ├── key: (6,17)
      ├── fd: ()-->(1), (6)-->(8), (8)-->(6), (2)==(6), (6)==(2), (17)-->(18), (3)==(17), (17)==(3)
      ├── inner-join (lookup company)
      │    ├── columns: cp_co_id:1!null cp_comp_co_id:2!null cp_in_id:3!null co_id:6!null co_name:8!null
      │    ├── key columns: [2] = [6]
      │    ├── lookup columns are key
      │    ├── cardinality: [0 - 3]
      │    ├── key: (3,6)
      │    ├── fd: ()-->(1), (6)-->(8), (8)-->(6), (2)==(6), (6)==(2)
      │    ├── scan company_competitor
      │    │    ├── columns: cp_co_id:1!null cp_comp_co_id:2!null cp_in_id:3!null
      │    │    ├── constraint: /1/2/3: [/0 - /0]
      │    │    ├── limit: 3
      │    │    ├── key: (2,3)
      │    │    └── fd: ()-->(1)
      │    └── filters (true)
      └── filters (true)

# Q3
opt
  SELECT fi_year,
         fi_qtr,
         fi_qtr_start_date,
         fi_revenue::FLOAT8,
         fi_net_earn::FLOAT8,
         fi_basic_eps::FLOAT8,
         fi_dilut_eps::FLOAT8,
         fi_margin::FLOAT8,
         fi_inventory::FLOAT8,
         fi_assets::FLOAT8,
         fi_liability::FLOAT8,
         fi_out_basic,
         fi_out_dilut
    FROM financial
   WHERE fi_co_id = 0
ORDER BY fi_year ASC, fi_qtr ASC
   LIMIT 20
----
project
 ├── columns: fi_year:2!null fi_qtr:3!null fi_qtr_start_date:4!null fi_revenue:17!null fi_net_earn:18!null fi_basic_eps:19!null fi_dilut_eps:20!null fi_margin:21!null fi_inventory:22!null fi_assets:23!null fi_liability:24!null fi_out_basic:13!null fi_out_dilut:14!null
 ├── cardinality: [0 - 20]
 ├── immutable
 ├── key: (2,3)
 ├── fd: (2,3)-->(4,13,14,17-24)
 ├── ordering: +2,+3
 ├── scan financial
 │    ├── columns: fi_co_id:1!null fi_year:2!null fi_qtr:3!null fi_qtr_start_date:4!null financial.fi_revenue:5!null financial.fi_net_earn:6!null financial.fi_basic_eps:7!null financial.fi_dilut_eps:8!null financial.fi_margin:9!null financial.fi_inventory:10!null financial.fi_assets:11!null financial.fi_liability:12!null fi_out_basic:13!null fi_out_dilut:14!null
 │    ├── constraint: /1/2/3: [/0 - /0]
 │    ├── limit: 20
 │    ├── key: (2,3)
 │    ├── fd: ()-->(1), (2,3)-->(4-14)
 │    └── ordering: +2,+3 opt(1) [actual: +2,+3]
 └── projections
      ├── financial.fi_revenue:5::FLOAT8 [as=fi_revenue:17, outer=(5), immutable]
      ├── financial.fi_net_earn:6::FLOAT8 [as=fi_net_earn:18, outer=(6), immutable]
      ├── financial.fi_basic_eps:7::FLOAT8 [as=fi_basic_eps:19, outer=(7), immutable]
      ├── financial.fi_dilut_eps:8::FLOAT8 [as=fi_dilut_eps:20, outer=(8), immutable]
      ├── financial.fi_margin:9::FLOAT8 [as=fi_margin:21, outer=(9), immutable]
      ├── financial.fi_inventory:10::FLOAT8 [as=fi_inventory:22, outer=(10), immutable]
      ├── financial.fi_assets:11::FLOAT8 [as=fi_assets:23, outer=(11), immutable]
      └── financial.fi_liability:12::FLOAT8 [as=fi_liability:24, outer=(12), immutable]

# Q4
opt
  SELECT dm_date, dm_close::FLOAT8, dm_high::FLOAT8, dm_low::FLOAT8, dm_vol
    FROM daily_market
   WHERE dm_s_symb = 'SYMB' AND dm_date >= '2020-06-17'::DATE
ORDER BY dm_date ASC
   LIMIT 10
----
project
 ├── columns: dm_date:1!null dm_close:9!null dm_high:10!null dm_low:11!null dm_vol:6!null
 ├── cardinality: [0 - 10]
 ├── immutable
 ├── key: (1)
 ├── fd: (1)-->(6,9-11)
 ├── ordering: +1
 ├── scan daily_market@secondary
 │    ├── columns: dm_date:1!null dm_s_symb:2!null daily_market.dm_close:3!null daily_market.dm_high:4!null daily_market.dm_low:5!null dm_vol:6!null
 │    ├── constraint: /2/1: [/'SYMB'/'2020-06-17' - /'SYMB']
 │    ├── limit: 10
 │    ├── key: (1)
 │    ├── fd: ()-->(2), (1)-->(3-6)
 │    └── ordering: +1 opt(2) [actual: +1]
 └── projections
      ├── daily_market.dm_close:3::FLOAT8 [as=dm_close:9, outer=(3), immutable]
      ├── daily_market.dm_high:4::FLOAT8 [as=dm_high:10, outer=(4), immutable]
      └── daily_market.dm_low:5::FLOAT8 [as=dm_low:11, outer=(5), immutable]

# Q5
opt
SELECT lt_price::FLOAT8, lt_open_price::FLOAT8, lt_vol
  FROM last_trade
 WHERE lt_s_symb = 'SYMB'
----
project
 ├── columns: lt_price:8!null lt_open_price:9!null lt_vol:5!null
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(5,8,9)
 ├── scan last_trade
 │    ├── columns: lt_s_symb:1!null last_trade.lt_price:3!null last_trade.lt_open_price:4!null lt_vol:5!null
 │    ├── constraint: /1: [/'SYMB' - /'SYMB']
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    └── fd: ()-->(1,3-5)
 └── projections
      ├── last_trade.lt_price:3::FLOAT8 [as=lt_price:8, outer=(3), immutable]
      └── last_trade.lt_open_price:4::FLOAT8 [as=lt_open_price:9, outer=(4), immutable]

# Q6
opt
SELECT ni_dts, ni_source, ni_author, ni_item
  FROM news_xref, news_item
 WHERE ni_id = nx_ni_id AND nx_co_id = 0
 LIMIT 2
----
project
 ├── columns: ni_dts:9!null ni_source:10!null ni_author:11 ni_item:8!null
 ├── cardinality: [0 - 2]
 └── inner-join (lookup news_item)
      ├── columns: nx_ni_id:1!null nx_co_id:2!null ni_id:5!null ni_item:8!null ni_dts:9!null ni_source:10!null ni_author:11
      ├── key columns: [1] = [5]
      ├── lookup columns are key
      ├── cardinality: [0 - 2]
      ├── key: (5)
      ├── fd: ()-->(2), (5)-->(8-11), (1)==(5), (5)==(1)
      ├── limit
      │    ├── columns: nx_ni_id:1!null nx_co_id:2!null
      │    ├── cardinality: [0 - 2]
      │    ├── key: (1)
      │    ├── fd: ()-->(2)
      │    ├── select
      │    │    ├── columns: nx_ni_id:1!null nx_co_id:2!null
      │    │    ├── key: (1)
      │    │    ├── fd: ()-->(2)
      │    │    ├── limit hint: 2.00
      │    │    ├── scan news_xref
      │    │    │    ├── columns: nx_ni_id:1!null nx_co_id:2!null
      │    │    │    ├── key: (1,2)
      │    │    │    └── limit hint: 200.00
      │    │    └── filters
      │    │         └── nx_co_id:2 = 0 [outer=(2), constraints=(/2: [/0 - /0]; tight), fd=()-->(2)]
      │    └── 2
      └── filters (true)

# Q7
opt
SELECT ni_dts, ni_source, ni_author, ni_headline, ni_summary
  FROM news_xref, news_item
 WHERE ni_id = nx_ni_id AND nx_co_id = 0
 LIMIT 2
----
project
 ├── columns: ni_dts:9!null ni_source:10!null ni_author:11 ni_headline:6!null ni_summary:7!null
 ├── cardinality: [0 - 2]
 └── inner-join (lookup news_item)
      ├── columns: nx_ni_id:1!null nx_co_id:2!null ni_id:5!null ni_headline:6!null ni_summary:7!null ni_dts:9!null ni_source:10!null ni_author:11
      ├── key columns: [1] = [5]
      ├── lookup columns are key
      ├── cardinality: [0 - 2]
      ├── key: (5)
      ├── fd: ()-->(2), (5)-->(6,7,9-11), (1)==(5), (5)==(1)
      ├── limit
      │    ├── columns: nx_ni_id:1!null nx_co_id:2!null
      │    ├── cardinality: [0 - 2]
      │    ├── key: (1)
      │    ├── fd: ()-->(2)
      │    ├── select
      │    │    ├── columns: nx_ni_id:1!null nx_co_id:2!null
      │    │    ├── key: (1)
      │    │    ├── fd: ()-->(2)
      │    │    ├── limit hint: 2.00
      │    │    ├── scan news_xref
      │    │    │    ├── columns: nx_ni_id:1!null nx_co_id:2!null
      │    │    │    ├── key: (1,2)
      │    │    │    └── limit hint: 200.00
      │    │    └── filters
      │    │         └── nx_co_id:2 = 0 [outer=(2), constraints=(/2: [/0 - /0]; tight), fd=()-->(2)]
      │    └── 2
      └── filters (true)

# --------------------------------------------------
# T6
# Trade-Lookup
# Emulates information retrieval by either a customer or a broker to satisfy
# their questions regarding a set of trades. The various sets of trades are
# chosen such that the work is representative of:
#   * performing general market analysis
#   * reviewing trades for a period of time prior to the most recent account
#     statement
#   * analyzing past performance of a particular security
#   * analyzing the history of a particular customer holding
# --------------------------------------------------

# Q1
opt
SELECT t_bid_price::FLOAT8,
       t_exec_name,
       t_is_cash,
       tt_is_mrkt,
       t_trade_price::FLOAT8
  FROM trade, trade_type
 WHERE t_id = 0 AND t_tt_id = tt_id
----
project
 ├── columns: t_bid_price:24 t_exec_name:10!null t_is_cash:5!null tt_is_mrkt:21!null t_trade_price:25
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(5,10,21,24,25)
 ├── inner-join (lookup trade_type)
 │    ├── columns: t_id:1!null t_tt_id:4!null t_is_cash:5!null trade.t_bid_price:8 t_exec_name:10!null trade.t_trade_price:11 tt_id:18!null tt_is_mrkt:21!null
 │    ├── key columns: [4] = [18]
 │    ├── lookup columns are key
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(1,4,5,8,10,11,18,21), (18)==(4), (4)==(18)
 │    ├── scan trade
 │    │    ├── columns: t_id:1!null t_tt_id:4!null t_is_cash:5!null trade.t_bid_price:8 t_exec_name:10!null trade.t_trade_price:11
 │    │    ├── constraint: /1: [/0 - /0]
 │    │    ├── cardinality: [0 - 1]
 │    │    ├── key: ()
 │    │    └── fd: ()-->(1,4,5,8,10,11)
 │    └── filters (true)
 └── projections
      ├── trade.t_bid_price:8::FLOAT8 [as=t_bid_price:24, outer=(8), immutable]
      └── trade.t_trade_price:11::FLOAT8 [as=t_trade_price:25, outer=(11), immutable]

# Q2
opt
SELECT se_amt::FLOAT8, se_cash_due_date, se_cash_type
  FROM settlement
 WHERE se_t_id = 0
----
project
 ├── columns: se_amt:7!null se_cash_due_date:3!null se_cash_type:2!null
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(2,3,7)
 ├── scan settlement
 │    ├── columns: se_t_id:1!null se_cash_type:2!null se_cash_due_date:3!null settlement.se_amt:4!null
 │    ├── constraint: /1: [/0 - /0]
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    └── fd: ()-->(1-4)
 └── projections
      └── settlement.se_amt:4::FLOAT8 [as=se_amt:7, outer=(4), immutable]

# Q3
opt
SELECT ct_amt::FLOAT8, ct_dts, ct_name FROM cash_transaction WHERE ct_t_id = 0
----
project
 ├── columns: ct_amt:7!null ct_dts:2!null ct_name:4
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(2,4,7)
 ├── scan cash_transaction
 │    ├── columns: ct_t_id:1!null ct_dts:2!null cash_transaction.ct_amt:3!null ct_name:4
 │    ├── constraint: /1: [/0 - /0]
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    └── fd: ()-->(1-4)
 └── projections
      └── cash_transaction.ct_amt:3::FLOAT8 [as=ct_amt:7, outer=(3), immutable]

# Q4
opt
  SELECT th_dts, th_st_id
    FROM trade_history
   WHERE th_t_id = 0
ORDER BY th_dts
   LIMIT 3
----
project
 ├── columns: th_dts:2!null th_st_id:3!null
 ├── cardinality: [0 - 3]
 ├── key: (3)
 ├── fd: (3)-->(2)
 ├── ordering: +2
 └── limit
      ├── columns: th_t_id:1!null th_dts:2!null th_st_id:3!null
      ├── internal-ordering: +2 opt(1)
      ├── cardinality: [0 - 3]
      ├── key: (3)
      ├── fd: ()-->(1), (3)-->(2)
      ├── ordering: +2 opt(1) [actual: +2]
      ├── sort
      │    ├── columns: th_t_id:1!null th_dts:2!null th_st_id:3!null
      │    ├── key: (3)
      │    ├── fd: ()-->(1), (3)-->(2)
      │    ├── ordering: +2 opt(1) [actual: +2]
      │    ├── limit hint: 3.00
      │    └── scan trade_history
      │         ├── columns: th_t_id:1!null th_dts:2!null th_st_id:3!null
      │         ├── constraint: /1/3: [/0 - /0]
      │         ├── key: (3)
      │         └── fd: ()-->(1), (3)-->(2)
      └── 3

# Q5
opt
  SELECT t_id,
         t_bid_price::FLOAT8,
         t_exec_name,
         t_is_cash,
         t_trade_price::FLOAT8
    FROM trade
   WHERE t_ca_id = 0 AND
         t_dts >= '2020-06-15 22:27:42.148484+00:00'::TIMESTAMP AND
         t_dts <= '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP
ORDER BY t_dts ASC
   LIMIT 20
----
project
 ├── columns: t_id:1!null t_bid_price:18 t_exec_name:10!null t_is_cash:5!null t_trade_price:19  [hidden: t_dts:2!null]
 ├── cardinality: [0 - 20]
 ├── immutable
 ├── key: (1)
 ├── fd: (1)-->(2,5,10,18,19)
 ├── ordering: +2
 ├── scan trade@secondary,rev
 │    ├── columns: t_id:1!null t_dts:2!null t_is_cash:5!null trade.t_bid_price:8 t_ca_id:9!null t_exec_name:10!null trade.t_trade_price:11
 │    ├── constraint: /9/-2/1: [/0/'2020-06-17 22:27:42.148484' - /0/'2020-06-15 22:27:42.148484']
 │    ├── limit: 20(rev)
 │    ├── key: (1)
 │    ├── fd: ()-->(9), (1)-->(2,5,8,10,11)
 │    └── ordering: +2 opt(9) [actual: +2]
 └── projections
      ├── trade.t_bid_price:8::FLOAT8 [as=t_bid_price:18, outer=(8), immutable]
      └── trade.t_trade_price:11::FLOAT8 [as=t_trade_price:19, outer=(11), immutable]

# Q6
opt
SELECT se_amt, se_cash_due_date, se_cash_type
  FROM settlement
 WHERE se_t_id = 0
----
project
 ├── columns: se_amt:4!null se_cash_due_date:3!null se_cash_type:2!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(2-4)
 └── scan settlement
      ├── columns: se_t_id:1!null se_cash_type:2!null se_cash_due_date:3!null se_amt:4!null
      ├── constraint: /1: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1-4)

# Q7
opt
SELECT ct_amt, ct_dts, ct_name
  FROM cash_transaction
 WHERE ct_t_id = 0
----
project
 ├── columns: ct_amt:3!null ct_dts:2!null ct_name:4
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(2-4)
 └── scan cash_transaction
      ├── columns: ct_t_id:1!null ct_dts:2!null ct_amt:3!null ct_name:4
      ├── constraint: /1: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1-4)

# Q8
opt
  SELECT t_id,
         t_ca_id,
         t_exec_name,
         t_is_cash,
         t_trade_price::FLOAT8,
         t_qty,
         t_dts,
         t_tt_id
    FROM trade
   WHERE t_s_symb = 'SYMB' AND
         t_dts >= '2020-06-15 22:27:42.148484+00:00'::TIMESTAMP AND
         t_dts <= '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP
ORDER BY t_dts ASC
   LIMIT 20
----
project
 ├── columns: t_id:1!null t_ca_id:9!null t_exec_name:10!null t_is_cash:5!null t_trade_price:18 t_qty:7!null t_dts:2!null t_tt_id:4!null
 ├── cardinality: [0 - 20]
 ├── immutable
 ├── key: (1)
 ├── fd: (1)-->(2,4,5,7,9,10,18)
 ├── ordering: +2
 ├── scan trade@secondary
 │    ├── columns: t_id:1!null t_dts:2!null t_tt_id:4!null t_is_cash:5!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null t_exec_name:10!null trade.t_trade_price:11
 │    ├── constraint: /6/2/1: [/'SYMB'/'2020-06-15 22:27:42.148484' - /'SYMB'/'2020-06-17 22:27:42.148484']
 │    ├── limit: 20
 │    ├── key: (1)
 │    ├── fd: ()-->(6), (1)-->(2,4,5,7,9-11)
 │    └── ordering: +2 opt(6) [actual: +2]
 └── projections
      └── trade.t_trade_price:11::FLOAT8 [as=t_trade_price:18, outer=(11), immutable]

# Q9
opt
  SELECT t_id
    FROM trade
   WHERE t_ca_id = 0 AND t_dts >= '2020-06-15 22:27:42.148484+00:00'::TIMESTAMP
ORDER BY t_dts ASC
   LIMIT 1
----
project
 ├── columns: t_id:1!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(1)
 └── scan trade@secondary,rev
      ├── columns: t_id:1!null t_dts:2!null t_ca_id:9!null
      ├── constraint: /9/-2/1: [/0 - /0/'2020-06-15 22:27:42.148484']
      ├── limit: 1(rev)
      ├── key: ()
      └── fd: ()-->(1,2,9)

# Q10
#
# TODO:
#   1. Allow limit push-down for semi-joins. Or normalize semi-joins to
#      inner-joins.
#   2. Adding explorer support for norm rules would allow the projects to be
#      merged and the limit to be pushed down.
#
opt
SELECT hh_h_t_id, hh_t_id, hh_before_qty, hh_after_qty
  FROM holding_history
 WHERE hh_h_t_id IN (SELECT hh_h_t_id FROM holding_history WHERE hh_t_id = 0)
 LIMIT 20
----
limit
 ├── columns: hh_h_t_id:1!null hh_t_id:2!null hh_before_qty:3!null hh_after_qty:4!null
 ├── cardinality: [0 - 20]
 ├── key: (1,2)
 ├── fd: (1,2)-->(3,4)
 ├── project
 │    ├── columns: hh_h_t_id:1!null hh_t_id:2!null hh_before_qty:3!null hh_after_qty:4!null
 │    ├── key: (1,2)
 │    ├── fd: (1,2)-->(3,4)
 │    ├── limit hint: 20.00
 │    └── project
 │         ├── columns: hh_h_t_id:1!null hh_t_id:2!null hh_before_qty:3!null hh_after_qty:4!null hh_h_t_id:7!null
 │         ├── key: (2,7)
 │         ├── fd: (1,2)-->(3,4), (1)==(7), (7)==(1)
 │         ├── limit hint: 20.00
 │         └── inner-join (lookup holding_history)
 │              ├── columns: hh_h_t_id:1!null hh_t_id:2!null hh_before_qty:3!null hh_after_qty:4!null hh_h_t_id:7!null hh_t_id:8!null
 │              ├── key columns: [1 14] = [7 8]
 │              ├── lookup columns are key
 │              ├── key: (2,7)
 │              ├── fd: ()-->(8), (1,2)-->(3,4), (1)==(7), (7)==(1)
 │              ├── limit hint: 20.00
 │              ├── project
 │              │    ├── columns: "lookup_join_const_col_@8":14!null hh_h_t_id:1!null hh_t_id:2!null hh_before_qty:3!null hh_after_qty:4!null
 │              │    ├── key: (1,2)
 │              │    ├── fd: ()-->(14), (1,2)-->(3,4)
 │              │    ├── limit hint: 200.00
 │              │    ├── scan holding_history
 │              │    │    ├── columns: hh_h_t_id:1!null hh_t_id:2!null hh_before_qty:3!null hh_after_qty:4!null
 │              │    │    ├── key: (1,2)
 │              │    │    ├── fd: (1,2)-->(3,4)
 │              │    │    └── limit hint: 200.00
 │              │    └── projections
 │              │         └── 0 [as="lookup_join_const_col_@8":14]
 │              └── filters (true)
 └── 20

# --------------------------------------------------
# T7
# Trade-Order
# Emulates the process of buying or selling a security by a Customer, Broker, or
# authorized third-party. If the person executing the trade order is not the
# account owner, the Transaction will verify that the person has the appropriate
# authorization to perform the trade order. The Transaction allows the person
# trading to execute buys at the current market price, sells at the current
# market price, or limit buys and sells at a requested price. The Transaction
# also provides an estimate of the financial impact of the proposed trade by
# providing profit/loss data, tax implications, and anticipated commission fees.
# This allows the trader to evaluate the desirability of the proposed security
# trade before either submitting or canceling the trade.
# --------------------------------------------------

# Q1
opt
SELECT ca_name, ca_b_id, ca_c_id, ca_tax_st
  FROM customer_account
 WHERE ca_id = 0
----
project
 ├── columns: ca_name:4 ca_b_id:2!null ca_c_id:3!null ca_tax_st:5!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(2-5)
 └── scan customer_account
      ├── columns: ca_id:1!null ca_b_id:2!null ca_c_id:3!null ca_name:4 ca_tax_st:5!null
      ├── constraint: /1: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1-5)

# Q2
opt
SELECT c_f_name, c_l_name, c_tier, c_tax_id
  FROM customer
 WHERE c_id = 0
----
project
 ├── columns: c_f_name:5!null c_l_name:4!null c_tier:8!null c_tax_id:2!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(2,4,5,8)
 └── scan customer
      ├── columns: c_id:1!null c_tax_id:2!null c_l_name:4!null c_f_name:5!null c_tier:8!null
      ├── constraint: /1: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,2,4,5,8)

# Q3
opt
SELECT b_name FROM broker WHERE b_id = 0
----
project
 ├── columns: b_name:3!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(3)
 └── scan broker
      ├── columns: b_id:1!null b_name:3!null
      ├── constraint: /1: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,3)

# Q4
opt
SELECT ap_acl
  FROM account_permission
 WHERE ap_ca_id = 0
   AND ap_f_name = 'first'
   AND ap_l_name = 'name'
   AND ap_tax_id = ''
----
project
 ├── columns: ap_acl:2!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(2)
 └── select
      ├── columns: ap_ca_id:1!null ap_acl:2!null ap_tax_id:3!null ap_l_name:4!null ap_f_name:5!null
      ├── cardinality: [0 - 1]
      ├── key: ()
      ├── fd: ()-->(1-5)
      ├── scan account_permission
      │    ├── columns: ap_ca_id:1!null ap_acl:2!null ap_tax_id:3!null ap_l_name:4!null ap_f_name:5!null
      │    ├── constraint: /1/3: [/0/'' - /0/'']
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(1-5)
      └── filters
           ├── ap_f_name:5 = 'first' [outer=(5), constraints=(/5: [/'first' - /'first']; tight), fd=()-->(5)]
           └── ap_l_name:4 = 'name' [outer=(4), constraints=(/4: [/'name' - /'name']; tight), fd=()-->(4)]

# Q5
opt
SELECT co_id FROM company WHERE co_name = 'company'
----
project
 ├── columns: co_id:1!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(1)
 └── scan company@secondary
      ├── columns: co_id:1!null co_name:3!null
      ├── constraint: /3: [/'company' - /'company']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,3)

# Q6
opt
SELECT s_ex_id, s_name, s_symb
  FROM security
 WHERE s_co_id = 0 AND s_issue = 'COMMON'
----
project
 ├── columns: s_ex_id:5!null s_name:4!null s_symb:1!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(1,4,5)
 └── scan security@secondary
      ├── columns: s_symb:1!null s_issue:2!null s_name:4!null s_ex_id:5!null s_co_id:6!null
      ├── constraint: /6/2: [/0/'COMMON' - /0/'COMMON']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,2,4-6)

# Q7
opt
SELECT s_co_id, s_ex_id, s_name FROM security WHERE s_symb = 'SYMB'
----
project
 ├── columns: s_co_id:6!null s_ex_id:5!null s_name:4!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(4-6)
 └── scan security
      ├── columns: s_symb:1!null s_name:4!null s_ex_id:5!null s_co_id:6!null
      ├── constraint: /1: [/'SYMB' - /'SYMB']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,4-6)

# Q8
opt
SELECT co_name FROM company WHERE co_id = 0
----
project
 ├── columns: co_name:3!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(3)
 └── scan company
      ├── columns: co_id:1!null co_name:3!null
      ├── constraint: /1: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,3)

# Q9
opt
SELECT lt_price::FLOAT8 FROM last_trade WHERE lt_s_symb = 'SYMB'
----
project
 ├── columns: lt_price:8!null
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(8)
 ├── scan last_trade
 │    ├── columns: lt_s_symb:1!null last_trade.lt_price:3!null
 │    ├── constraint: /1: [/'SYMB' - /'SYMB']
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    └── fd: ()-->(1,3)
 └── projections
      └── last_trade.lt_price:3::FLOAT8 [as=lt_price:8, outer=(3), immutable]

# Q10
opt
SELECT tt_is_mrkt, tt_is_sell
  FROM trade_type
 WHERE tt_id = 'TMB'
----
project
 ├── columns: tt_is_mrkt:4!null tt_is_sell:3!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(3,4)
 └── scan trade_type
      ├── columns: tt_id:1!null tt_is_sell:3!null tt_is_mrkt:4!null
      ├── constraint: /1: [/'TMB' - /'TMB']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,3,4)

# Q11
opt
SELECT hs_qty
  FROM holding_summary
 WHERE hs_ca_id = 0 AND hs_s_symb = 'SYMB'
----
project
 ├── columns: hs_qty:3!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(3)
 └── scan holding_summary
      ├── columns: hs_ca_id:1!null hs_s_symb:2!null hs_qty:3!null
      ├── constraint: /1/2: [/0/'SYMB' - /0/'SYMB']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1-3)

# Q12
opt
  SELECT h_qty, h_price::FLOAT8
    FROM holding
   WHERE h_ca_id = 0 AND h_s_symb = 'SYMB'
ORDER BY h_dts DESC
----
project
 ├── columns: h_qty:6!null h_price:9!null  [hidden: h_dts:4!null]
 ├── immutable
 ├── ordering: -4
 ├── scan holding@secondary,rev
 │    ├── columns: h_ca_id:2!null h_s_symb:3!null h_dts:4!null holding.h_price:5!null h_qty:6!null
 │    ├── constraint: /2/3/4/1: [/0/'SYMB' - /0/'SYMB']
 │    ├── fd: ()-->(2,3)
 │    └── ordering: -4 opt(2,3) [actual: -4]
 └── projections
      └── holding.h_price:5::FLOAT8 [as=h_price:9, outer=(5), immutable]

# Q13
opt
  SELECT h_qty, h_price::FLOAT8
    FROM holding
   WHERE h_ca_id = 0 AND h_s_symb = 'SYMB'
ORDER BY h_dts ASC
----
project
 ├── columns: h_qty:6!null h_price:9!null  [hidden: h_dts:4!null]
 ├── immutable
 ├── ordering: +4
 ├── scan holding@secondary
 │    ├── columns: h_ca_id:2!null h_s_symb:3!null h_dts:4!null holding.h_price:5!null h_qty:6!null
 │    ├── constraint: /2/3/4/1: [/0/'SYMB' - /0/'SYMB']
 │    ├── fd: ()-->(2,3)
 │    └── ordering: +4 opt(2,3) [actual: +4]
 └── projections
      └── holding.h_price:5::FLOAT8 [as=h_price:9, outer=(5), immutable]

# Q14
opt
SELECT sum(tx_rate)::FLOAT8
  FROM taxrate
 WHERE tx_id IN (SELECT cx_tx_id FROM customer_taxrate WHERE cx_c_id = 0)
----
project
 ├── columns: sum:11
 ├── cardinality: [1 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(11)
 ├── scalar-group-by
 │    ├── columns: sum:10
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(10)
 │    ├── project
 │    │    ├── columns: tx_id:1!null tx_rate:3!null
 │    │    ├── key: (1)
 │    │    ├── fd: (1)-->(3)
 │    │    └── project
 │    │         ├── columns: tx_id:1!null tx_rate:3!null cx_tx_id:6!null
 │    │         ├── key: (6)
 │    │         ├── fd: (1)-->(3), (1)==(6), (6)==(1)
 │    │         └── inner-join (lookup taxrate)
 │    │              ├── columns: tx_id:1!null tx_rate:3!null cx_tx_id:6!null cx_c_id:7!null
 │    │              ├── key columns: [6] = [1]
 │    │              ├── lookup columns are key
 │    │              ├── key: (6)
 │    │              ├── fd: ()-->(7), (1)-->(3), (1)==(6), (6)==(1)
 │    │              ├── select
 │    │              │    ├── columns: cx_tx_id:6!null cx_c_id:7!null
 │    │              │    ├── key: (6)
 │    │              │    ├── fd: ()-->(7)
 │    │              │    ├── scan customer_taxrate
 │    │              │    │    ├── columns: cx_tx_id:6!null cx_c_id:7!null
 │    │              │    │    └── key: (6,7)
 │    │              │    └── filters
 │    │              │         └── cx_c_id:7 = 0 [outer=(7), constraints=(/7: [/0 - /0]; tight), fd=()-->(7)]
 │    │              └── filters (true)
 │    └── aggregations
 │         └── sum [as=sum:10, outer=(3)]
 │              └── tx_rate:3
 └── projections
      └── sum:10::FLOAT8 [as=sum:11, outer=(10), immutable]

# Q15
opt
SELECT cr_rate::FLOAT8
  FROM commission_rate
 WHERE cr_c_tier = 1
   AND cr_tt_id = 'TMB'
   AND cr_ex_id = 'NYSE'
   AND cr_from_qty <= 10
   AND cr_to_qty >= 10
----
project
 ├── columns: cr_rate:9!null
 ├── immutable
 ├── select
 │    ├── columns: cr_c_tier:1!null cr_tt_id:2!null cr_ex_id:3!null cr_from_qty:4!null cr_to_qty:5!null commission_rate.cr_rate:6!null
 │    ├── key: (4)
 │    ├── fd: ()-->(1-3), (4)-->(5,6)
 │    ├── scan commission_rate
 │    │    ├── columns: cr_c_tier:1!null cr_tt_id:2!null cr_ex_id:3!null cr_from_qty:4!null cr_to_qty:5!null commission_rate.cr_rate:6!null
 │    │    ├── constraint: /1/2/3/4: [/1/'TMB'/'NYSE'/0 - /1/'TMB'/'NYSE'/10]
 │    │    ├── cardinality: [0 - 11]
 │    │    ├── key: (4)
 │    │    └── fd: ()-->(1-3), (4)-->(5,6)
 │    └── filters
 │         └── cr_to_qty:5 >= 10 [outer=(5), constraints=(/5: [/10 - ]; tight)]
 └── projections
      └── commission_rate.cr_rate:6::FLOAT8 [as=cr_rate:9, outer=(6), immutable]

# Q16
opt
SELECT ch_chrg::FLOAT8
  FROM charge
 WHERE ch_c_tier = 1 AND ch_tt_id = 'TMB'
----
project
 ├── columns: ch_chrg:6!null
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(6)
 ├── scan charge
 │    ├── columns: ch_tt_id:1!null ch_c_tier:2!null charge.ch_chrg:3!null
 │    ├── constraint: /1/2: [/'TMB'/1 - /'TMB'/1]
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    └── fd: ()-->(1-3)
 └── projections
      └── charge.ch_chrg:3::FLOAT8 [as=ch_chrg:6, outer=(3), immutable]

# Q17
opt
SELECT ca_bal::FLOAT8 FROM customer_account WHERE ca_id = 0
----
project
 ├── columns: ca_bal:9!null
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(9)
 ├── scan customer_account
 │    ├── columns: ca_id:1!null customer_account.ca_bal:6!null
 │    ├── constraint: /1: [/0 - /0]
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    └── fd: ()-->(1,6)
 └── projections
      └── customer_account.ca_bal:6::FLOAT8 [as=ca_bal:9, outer=(6), immutable]

# Q18
opt
SELECT sum(hs_qty * lt_price)::FLOAT8
  FROM holding_summary, last_trade
 WHERE hs_ca_id = 0 AND lt_s_symb = hs_s_symb
----
project
 ├── columns: sum:15
 ├── cardinality: [1 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(15)
 ├── scalar-group-by
 │    ├── columns: sum:14
 │    ├── cardinality: [1 - 1]
 │    ├── immutable
 │    ├── key: ()
 │    ├── fd: ()-->(14)
 │    ├── project
 │    │    ├── columns: column13:13!null
 │    │    ├── immutable
 │    │    ├── inner-join (lookup last_trade)
 │    │    │    ├── columns: hs_ca_id:1!null hs_s_symb:2!null hs_qty:3!null lt_s_symb:6!null lt_price:8!null
 │    │    │    ├── key columns: [2] = [6]
 │    │    │    ├── lookup columns are key
 │    │    │    ├── key: (6)
 │    │    │    ├── fd: ()-->(1), (2)-->(3), (6)-->(8), (2)==(6), (6)==(2)
 │    │    │    ├── scan holding_summary
 │    │    │    │    ├── columns: hs_ca_id:1!null hs_s_symb:2!null hs_qty:3!null
 │    │    │    │    ├── constraint: /1/2: [/0 - /0]
 │    │    │    │    ├── key: (2)
 │    │    │    │    └── fd: ()-->(1), (2)-->(3)
 │    │    │    └── filters (true)
 │    │    └── projections
 │    │         └── hs_qty:3::INT8 * lt_price:8::DECIMAL [as=column13:13, outer=(3,8), immutable]
 │    └── aggregations
 │         └── sum [as=sum:14, outer=(13)]
 │              └── column13:13
 └── projections
      └── sum:14::FLOAT8 [as=sum:15, outer=(14), immutable]

# Q19
opt
INSERT
INTO trade (
              t_id,
              t_dts,
              t_st_id,
              t_tt_id,
              t_is_cash,
              t_s_symb,
              t_qty,
              t_bid_price,
              t_ca_id,
              t_exec_name,
              t_trade_price,
              t_chrg,
              t_comm,
              t_tax,
              t_lifo
           )
VALUES (
          0,
          '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP,
          'SBMT',
          'TMB',
          True,
          'SYMB',
          10,
          '100.00':::FLOAT8::DECIMAL,
          0,
          'Name',
          NULL,
          '1.00':::FLOAT8::DECIMAL,
          '0.00':::FLOAT8::DECIMAL,
          0,
          True
       )
----
insert trade
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:18 => t_id:1
 │    ├── column2:19 => t_dts:2
 │    ├── column3:20 => trade.t_st_id:3
 │    ├── column4:21 => trade.t_tt_id:4
 │    ├── column5:22 => t_is_cash:5
 │    ├── column6:23 => trade.t_s_symb:6
 │    ├── column7:24 => t_qty:7
 │    ├── t_bid_price:33 => trade.t_bid_price:8
 │    ├── column9:26 => trade.t_ca_id:9
 │    ├── column10:27 => t_exec_name:10
 │    ├── t_trade_price:34 => trade.t_trade_price:11
 │    ├── t_chrg:35 => trade.t_chrg:12
 │    ├── t_comm:36 => trade.t_comm:13
 │    ├── t_tax:37 => trade.t_tax:14
 │    └── column15:32 => t_lifo:15
 ├── check columns: check1:38 check2:39 check3:40 check4:41 check5:42
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:18!null column2:19!null column3:20!null column4:21!null column5:22!null column6:23!null column7:24!null column9:26!null column10:27!null column15:32!null t_bid_price:33!null t_trade_price:34 t_chrg:35!null t_comm:36!null t_tax:37!null check1:38!null check2:39!null check3:40!null check4:41!null check5:42!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(18-24,26,27,32-42)
 │    └── (0, '2020-06-17 22:27:42.148484', 'SBMT', 'TMB', true, 'SYMB', 10, 0, 'Name', true, 1E+2, NULL, 1, 0, 0, true, true, true, true, true)
 └── f-k-checks
      ├── f-k-checks-item: trade(t_st_id) -> status_type(st_id)
      │    └── anti-join (lookup status_type)
      │         ├── columns: t_st_id:43!null
      │         ├── key columns: [43] = [44]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(43)
      │         ├── with-scan &1
      │         │    ├── columns: t_st_id:43!null
      │         │    ├── mapping:
      │         │    │    └──  column3:20 => t_st_id:43
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(43)
      │         └── filters (true)
      ├── f-k-checks-item: trade(t_tt_id) -> trade_type(tt_id)
      │    └── anti-join (lookup trade_type)
      │         ├── columns: t_tt_id:48!null
      │         ├── key columns: [48] = [49]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(48)
      │         ├── with-scan &1
      │         │    ├── columns: t_tt_id:48!null
      │         │    ├── mapping:
      │         │    │    └──  column4:21 => t_tt_id:48
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(48)
      │         └── filters (true)
      ├── f-k-checks-item: trade(t_s_symb) -> security(s_symb)
      │    └── anti-join (lookup security)
      │         ├── columns: t_s_symb:55!null
      │         ├── key columns: [55] = [56]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(55)
      │         ├── with-scan &1
      │         │    ├── columns: t_s_symb:55!null
      │         │    ├── mapping:
      │         │    │    └──  column6:23 => t_s_symb:55
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(55)
      │         └── filters (true)
      └── f-k-checks-item: trade(t_ca_id) -> customer_account(ca_id)
           └── anti-join (lookup customer_account)
                ├── columns: t_ca_id:74!null
                ├── key columns: [74] = [75]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(74)
                ├── with-scan &1
                │    ├── columns: t_ca_id:74!null
                │    ├── mapping:
                │    │    └──  column9:26 => t_ca_id:74
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(74)
                └── filters (true)

# Q20
opt
INSERT INTO trade_request (tr_t_id, tr_tt_id, tr_s_symb, tr_qty, tr_bid_price, tr_b_id)
VALUES (0, 'TMB', 'SYMB', 10, '100.00':::FLOAT8::DECIMAL, 0)
----
insert trade_request
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:9 => trade_request.tr_t_id:1
 │    ├── column2:10 => trade_request.tr_tt_id:2
 │    ├── column3:11 => trade_request.tr_s_symb:3
 │    ├── column4:12 => tr_qty:4
 │    ├── tr_bid_price:15 => trade_request.tr_bid_price:5
 │    └── column6:14 => trade_request.tr_b_id:6
 ├── check columns: check1:16 check2:17
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:9!null column2:10!null column3:11!null column4:12!null column6:14!null tr_bid_price:15!null check1:16!null check2:17!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(9-12,14-17)
 │    └── (0, 'TMB', 'SYMB', 10, 0, 1E+2, true, true)
 └── f-k-checks
      ├── f-k-checks-item: trade_request(tr_t_id) -> trade(t_id)
      │    └── anti-join (lookup trade)
      │         ├── columns: tr_t_id:18!null
      │         ├── key columns: [18] = [19]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(18)
      │         ├── with-scan &1
      │         │    ├── columns: tr_t_id:18!null
      │         │    ├── mapping:
      │         │    │    └──  column1:9 => tr_t_id:18
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(18)
      │         └── filters (true)
      ├── f-k-checks-item: trade_request(tr_tt_id) -> trade_type(tt_id)
      │    └── anti-join (lookup trade_type)
      │         ├── columns: tr_tt_id:36!null
      │         ├── key columns: [36] = [37]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(36)
      │         ├── with-scan &1
      │         │    ├── columns: tr_tt_id:36!null
      │         │    ├── mapping:
      │         │    │    └──  column2:10 => tr_tt_id:36
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(36)
      │         └── filters (true)
      ├── f-k-checks-item: trade_request(tr_s_symb) -> security(s_symb)
      │    └── anti-join (lookup security)
      │         ├── columns: tr_s_symb:43!null
      │         ├── key columns: [43] = [44]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(43)
      │         ├── with-scan &1
      │         │    ├── columns: tr_s_symb:43!null
      │         │    ├── mapping:
      │         │    │    └──  column3:11 => tr_s_symb:43
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(43)
      │         └── filters (true)
      └── f-k-checks-item: trade_request(tr_b_id) -> broker(b_id)
           └── anti-join (lookup broker)
                ├── columns: tr_b_id:62!null
                ├── key columns: [62] = [63]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(62)
                ├── with-scan &1
                │    ├── columns: tr_b_id:62!null
                │    ├── mapping:
                │    │    └──  column6:14 => tr_b_id:62
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(62)
                └── filters (true)

# Q21
opt
INSERT INTO trade_history (th_t_id, th_dts, th_st_id)
VALUES (0, '2020-06-15 22:27:42.148484+00:00'::TIMESTAMP, 'SBMT')
----
insert trade_history
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:6 => trade_history.th_t_id:1
 │    ├── column2:7 => th_dts:2
 │    └── column3:8 => trade_history.th_st_id:3
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:6!null column2:7!null column3:8!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(6-8)
 │    └── (0, '2020-06-15 22:27:42.148484', 'SBMT')
 └── f-k-checks
      ├── f-k-checks-item: trade_history(th_t_id) -> trade(t_id)
      │    └── anti-join (lookup trade)
      │         ├── columns: th_t_id:9!null
      │         ├── key columns: [9] = [10]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(9)
      │         ├── with-scan &1
      │         │    ├── columns: th_t_id:9!null
      │         │    ├── mapping:
      │         │    │    └──  column1:6 => th_t_id:9
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(9)
      │         └── filters (true)
      └── f-k-checks-item: trade_history(th_st_id) -> status_type(st_id)
           └── anti-join (lookup status_type)
                ├── columns: th_st_id:27!null
                ├── key columns: [27] = [28]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(27)
                ├── with-scan &1
                │    ├── columns: th_st_id:27!null
                │    ├── mapping:
                │    │    └──  column3:8 => th_st_id:27
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(27)
                └── filters (true)

# --------------------------------------------------
# T8
# Trade-Result
# Emulates the process of completing a stock market trade. This is
# representative of a brokerage house receiving from the market exchange the
# final confirmation and price for the trade. The customer’s holdings are
# updated to reflect that the trade has completed. Estimates generated when the
# trade was ordered for the broker commission and other similar quantities are
# replaced with the actual numbers and historical information about the trade is
# recorded for later reference.
# --------------------------------------------------

# Q1
opt
SELECT t_ca_id, t_tt_id, t_s_symb, t_qty, t_chrg::FLOAT8, t_lifo, t_is_cash
  FROM trade
 WHERE t_id = 0
----
project
 ├── columns: t_ca_id:9!null t_tt_id:4!null t_s_symb:6!null t_qty:7!null t_chrg:18!null t_lifo:15!null t_is_cash:5!null
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(4-7,9,15,18)
 ├── scan trade
 │    ├── columns: t_id:1!null t_tt_id:4!null t_is_cash:5!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null trade.t_chrg:12!null t_lifo:15!null
 │    ├── constraint: /1: [/0 - /0]
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    └── fd: ()-->(1,4-7,9,12,15)
 └── projections
      └── trade.t_chrg:12::FLOAT8 [as=t_chrg:18, outer=(12), immutable]

# Q2
opt
SELECT tt_name, tt_is_sell, tt_is_mrkt
  FROM trade_type
 WHERE tt_id = 'TMB'
----
project
 ├── columns: tt_name:2!null tt_is_sell:3!null tt_is_mrkt:4!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(2-4)
 └── scan trade_type
      ├── columns: tt_id:1!null tt_name:2!null tt_is_sell:3!null tt_is_mrkt:4!null
      ├── constraint: /1: [/'TMB' - /'TMB']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1-4)

# Q3
opt
SELECT hs_qty
  FROM holding_summary
 WHERE hs_ca_id = 0 AND hs_s_symb = 'SYMB'
----
project
 ├── columns: hs_qty:3!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(3)
 └── scan holding_summary
      ├── columns: hs_ca_id:1!null hs_s_symb:2!null hs_qty:3!null
      ├── constraint: /1/2: [/0/'SYMB' - /0/'SYMB']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1-3)

# Q4
opt
SELECT ca_b_id, ca_c_id, ca_tax_st FROM customer_account WHERE ca_id = 0
----
project
 ├── columns: ca_b_id:2!null ca_c_id:3!null ca_tax_st:5!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(2,3,5)
 └── scan customer_account
      ├── columns: ca_id:1!null ca_b_id:2!null ca_c_id:3!null ca_tax_st:5!null
      ├── constraint: /1: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1-3,5)

# Q5
opt
INSERT INTO holding_summary (hs_ca_id, hs_s_symb, hs_qty) VALUES (0, 'SYMB', 10)
----
insert holding_summary
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:6 => holding_summary.hs_ca_id:1
 │    ├── column2:7 => holding_summary.hs_s_symb:2
 │    └── column3:8 => hs_qty:3
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:6!null column2:7!null column3:8!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(6-8)
 │    └── (0, 'SYMB', 10)
 └── f-k-checks
      ├── f-k-checks-item: holding_summary(hs_ca_id) -> customer_account(ca_id)
      │    └── anti-join (lookup customer_account)
      │         ├── columns: hs_ca_id:9!null
      │         ├── key columns: [9] = [10]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(9)
      │         ├── with-scan &1
      │         │    ├── columns: hs_ca_id:9!null
      │         │    ├── mapping:
      │         │    │    └──  column1:6 => hs_ca_id:9
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(9)
      │         └── filters (true)
      └── f-k-checks-item: holding_summary(hs_s_symb) -> security(s_symb)
           └── anti-join (lookup security)
                ├── columns: hs_s_symb:18!null
                ├── key columns: [18] = [19]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(18)
                ├── with-scan &1
                │    ├── columns: hs_s_symb:18!null
                │    ├── mapping:
                │    │    └──  column2:7 => hs_s_symb:18
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(18)
                └── filters (true)

# Q6
opt
UPDATE holding_summary
   SET hs_qty = hs_qty + 10
 WHERE hs_ca_id = 0 AND hs_s_symb = 'SYMB'
----
update holding_summary
 ├── columns: <none>
 ├── fetch columns: hs_ca_id:6 hs_s_symb:7 hs_qty:8
 ├── update-mapping:
 │    └── hs_qty_new:11 => hs_qty:3
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: hs_qty_new:11!null hs_ca_id:6!null hs_s_symb:7!null hs_qty:8!null
      ├── cardinality: [0 - 1]
      ├── immutable
      ├── key: ()
      ├── fd: ()-->(6-8,11)
      ├── scan holding_summary
      │    ├── columns: hs_ca_id:6!null hs_s_symb:7!null hs_qty:8!null
      │    ├── constraint: /6/7: [/0/'SYMB' - /0/'SYMB']
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(6-8)
      └── projections
           └── hs_qty:8::INT8 + 10 [as=hs_qty_new:11, outer=(8), immutable]

# Q7
opt
  SELECT h_t_id, h_qty, h_price::FLOAT8
    FROM holding
   WHERE h_ca_id = 0 AND h_s_symb = 'SYMB'
ORDER BY h_dts DESC
----
project
 ├── columns: h_t_id:1!null h_qty:6!null h_price:9!null  [hidden: h_dts:4!null]
 ├── immutable
 ├── key: (1)
 ├── fd: (1)-->(4,6,9)
 ├── ordering: -4
 ├── scan holding@secondary,rev
 │    ├── columns: h_t_id:1!null h_ca_id:2!null h_s_symb:3!null h_dts:4!null holding.h_price:5!null h_qty:6!null
 │    ├── constraint: /2/3/4/1: [/0/'SYMB' - /0/'SYMB']
 │    ├── key: (1)
 │    ├── fd: ()-->(2,3), (1)-->(4-6)
 │    └── ordering: -4 opt(2,3) [actual: -4]
 └── projections
      └── holding.h_price:5::FLOAT8 [as=h_price:9, outer=(5), immutable]

# Q8
opt
  SELECT h_t_id, h_qty, h_price::FLOAT8
    FROM holding
   WHERE h_ca_id = 0 AND h_s_symb = 'SYMB'
ORDER BY h_dts ASC
----
project
 ├── columns: h_t_id:1!null h_qty:6!null h_price:9!null  [hidden: h_dts:4!null]
 ├── immutable
 ├── key: (1)
 ├── fd: (1)-->(4,6,9)
 ├── ordering: +4
 ├── scan holding@secondary
 │    ├── columns: h_t_id:1!null h_ca_id:2!null h_s_symb:3!null h_dts:4!null holding.h_price:5!null h_qty:6!null
 │    ├── constraint: /2/3/4/1: [/0/'SYMB' - /0/'SYMB']
 │    ├── key: (1)
 │    ├── fd: ()-->(2,3), (1)-->(4-6)
 │    └── ordering: +4 opt(2,3) [actual: +4]
 └── projections
      └── holding.h_price:5::FLOAT8 [as=h_price:9, outer=(5), immutable]

# Q9
opt
INSERT INTO holding_history (hh_h_t_id, hh_t_id, hh_before_qty, hh_after_qty)
VALUES (0, 0, 0, 10)
----
insert holding_history
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:7 => holding_history.hh_h_t_id:1
 │    ├── column2:8 => holding_history.hh_t_id:2
 │    ├── column3:9 => hh_before_qty:3
 │    └── column4:10 => hh_after_qty:4
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(7-10)
 │    └── (0, 0, 0, 10)
 └── f-k-checks
      ├── f-k-checks-item: holding_history(hh_h_t_id) -> trade(t_id)
      │    └── anti-join (lookup trade)
      │         ├── columns: hh_h_t_id:11!null
      │         ├── key columns: [11] = [12]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(11)
      │         ├── with-scan &1
      │         │    ├── columns: hh_h_t_id:11!null
      │         │    ├── mapping:
      │         │    │    └──  column1:7 => hh_h_t_id:11
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(11)
      │         └── filters (true)
      └── f-k-checks-item: holding_history(hh_t_id) -> trade(t_id)
           └── anti-join (lookup trade)
                ├── columns: hh_t_id:29!null
                ├── key columns: [29] = [30]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(29)
                ├── with-scan &1
                │    ├── columns: hh_t_id:29!null
                │    ├── mapping:
                │    │    └──  column2:8 => hh_t_id:29
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(29)
                └── filters (true)

# Q10
opt
UPDATE holding SET h_qty = h_qty + 10 WHERE h_t_id = 0
----
update holding
 ├── columns: <none>
 ├── fetch columns: h_t_id:9 h_ca_id:10 h_s_symb:11 h_dts:12 h_price:13 h_qty:14
 ├── update-mapping:
 │    └── h_qty_new:17 => h_qty:6
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: h_qty_new:17!null h_t_id:9!null h_ca_id:10!null h_s_symb:11!null h_dts:12!null h_price:13!null h_qty:14!null
      ├── cardinality: [0 - 1]
      ├── immutable
      ├── key: ()
      ├── fd: ()-->(9-14,17)
      ├── scan holding
      │    ├── columns: h_t_id:9!null h_ca_id:10!null h_s_symb:11!null h_dts:12!null h_price:13!null h_qty:14!null
      │    ├── constraint: /9: [/0 - /0]
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(9-14)
      └── projections
           └── h_qty:14::INT8 + 10 [as=h_qty_new:17, outer=(14), immutable]

# Q11
opt
DELETE FROM holding WHERE h_t_id = 0
----
delete holding
 ├── columns: <none>
 ├── fetch columns: h_t_id:9 h_ca_id:10 h_s_symb:11 h_dts:12
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── scan holding
      ├── columns: h_t_id:9!null h_ca_id:10!null h_s_symb:11!null h_dts:12!null
      ├── constraint: /9: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(9-12)

# Q12
opt
INSERT INTO holding (h_t_id, h_ca_id, h_s_symb, h_dts, h_price, h_qty)
VALUES (
          0,
          0,
          'SYMB',
          '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP,
          '100.00':::FLOAT8::DECIMAL, 10
       )
----
insert holding
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:9 => holding.h_t_id:1
 │    ├── column2:10 => holding.h_ca_id:2
 │    ├── column3:11 => holding.h_s_symb:3
 │    ├── column4:12 => h_dts:4
 │    ├── h_price:15 => holding.h_price:5
 │    └── column6:14 => h_qty:6
 ├── check columns: check1:16
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:9!null column2:10!null column3:11!null column4:12!null column6:14!null h_price:15!null check1:16!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(9-12,14-16)
 │    └── (0, 0, 'SYMB', '2020-06-17 22:27:42.148484', 10, 1E+2, true)
 └── f-k-checks
      ├── f-k-checks-item: holding(h_t_id) -> trade(t_id)
      │    └── anti-join (lookup trade)
      │         ├── columns: h_t_id:17!null
      │         ├── key columns: [17] = [18]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(17)
      │         ├── with-scan &1
      │         │    ├── columns: h_t_id:17!null
      │         │    ├── mapping:
      │         │    │    └──  column1:9 => h_t_id:17
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(17)
      │         └── filters (true)
      └── f-k-checks-item: holding(h_ca_id,h_s_symb) -> holding_summary(hs_ca_id,hs_s_symb)
           └── anti-join (lookup holding_summary)
                ├── columns: h_ca_id:35!null h_s_symb:36!null
                ├── key columns: [35 36] = [37 38]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(35,36)
                ├── with-scan &1
                │    ├── columns: h_ca_id:35!null h_s_symb:36!null
                │    ├── mapping:
                │    │    ├──  column2:10 => h_ca_id:35
                │    │    └──  column3:11 => h_s_symb:36
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(35,36)
                └── filters (true)

# Q13
opt
DELETE FROM holding_summary WHERE hs_ca_id = 0 AND hs_s_symb = 'SYMB'
----
delete holding_summary
 ├── columns: <none>
 ├── fetch columns: holding_summary.hs_ca_id:6 holding_summary.hs_s_symb:7
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── scan holding_summary
 │    ├── columns: holding_summary.hs_ca_id:6!null holding_summary.hs_s_symb:7!null
 │    ├── constraint: /6/7: [/0/'SYMB' - /0/'SYMB']
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    └── fd: ()-->(6,7)
 └── f-k-checks
      └── f-k-checks-item: holding(h_ca_id,h_s_symb) -> holding_summary(hs_ca_id,hs_s_symb)
           └── semi-join (lookup holding@secondary)
                ├── columns: hs_ca_id:11!null hs_s_symb:12!null
                ├── key columns: [11 12] = [14 15]
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(11,12)
                ├── with-scan &1
                │    ├── columns: hs_ca_id:11!null hs_s_symb:12!null
                │    ├── mapping:
                │    │    ├──  holding_summary.hs_ca_id:6 => hs_ca_id:11
                │    │    └──  holding_summary.hs_s_symb:7 => hs_s_symb:12
                │    ├── cardinality: [0 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(11,12)
                └── filters (true)

# Q14
opt
INSERT INTO holding_summary (hs_ca_id, hs_s_symb, hs_qty)
VALUES (0, 'SYMB', 10)
----
insert holding_summary
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:6 => holding_summary.hs_ca_id:1
 │    ├── column2:7 => holding_summary.hs_s_symb:2
 │    └── column3:8 => hs_qty:3
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:6!null column2:7!null column3:8!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(6-8)
 │    └── (0, 'SYMB', 10)
 └── f-k-checks
      ├── f-k-checks-item: holding_summary(hs_ca_id) -> customer_account(ca_id)
      │    └── anti-join (lookup customer_account)
      │         ├── columns: hs_ca_id:9!null
      │         ├── key columns: [9] = [10]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(9)
      │         ├── with-scan &1
      │         │    ├── columns: hs_ca_id:9!null
      │         │    ├── mapping:
      │         │    │    └──  column1:6 => hs_ca_id:9
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(9)
      │         └── filters (true)
      └── f-k-checks-item: holding_summary(hs_s_symb) -> security(s_symb)
           └── anti-join (lookup security)
                ├── columns: hs_s_symb:18!null
                ├── key columns: [18] = [19]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(18)
                ├── with-scan &1
                │    ├── columns: hs_s_symb:18!null
                │    ├── mapping:
                │    │    └──  column2:7 => hs_s_symb:18
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(18)
                └── filters (true)


# Q15
opt
UPDATE holding_summary
SET hs_qty = hs_qty + 10
WHERE hs_ca_id = 0 and hs_s_symb = 'SYMB'
----
update holding_summary
 ├── columns: <none>
 ├── fetch columns: hs_ca_id:6 hs_s_symb:7 hs_qty:8
 ├── update-mapping:
 │    └── hs_qty_new:11 => hs_qty:3
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: hs_qty_new:11!null hs_ca_id:6!null hs_s_symb:7!null hs_qty:8!null
      ├── cardinality: [0 - 1]
      ├── immutable
      ├── key: ()
      ├── fd: ()-->(6-8,11)
      ├── scan holding_summary
      │    ├── columns: hs_ca_id:6!null hs_s_symb:7!null hs_qty:8!null
      │    ├── constraint: /6/7: [/0/'SYMB' - /0/'SYMB']
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(6-8)
      └── projections
           └── hs_qty:8::INT8 + 10 [as=hs_qty_new:11, outer=(8), immutable]

# Q16
opt
INSERT INTO
HOLDING_HISTORY (hh_h_t_id, hh_t_id, hh_before_qty, hh_after_qty)
VALUES (0, 0, 0, 10)
----
insert holding_history
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:7 => holding_history.hh_h_t_id:1
 │    ├── column2:8 => holding_history.hh_t_id:2
 │    ├── column3:9 => hh_before_qty:3
 │    └── column4:10 => hh_after_qty:4
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(7-10)
 │    └── (0, 0, 0, 10)
 └── f-k-checks
      ├── f-k-checks-item: holding_history(hh_h_t_id) -> trade(t_id)
      │    └── anti-join (lookup trade)
      │         ├── columns: hh_h_t_id:11!null
      │         ├── key columns: [11] = [12]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(11)
      │         ├── with-scan &1
      │         │    ├── columns: hh_h_t_id:11!null
      │         │    ├── mapping:
      │         │    │    └──  column1:7 => hh_h_t_id:11
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(11)
      │         └── filters (true)
      └── f-k-checks-item: holding_history(hh_t_id) -> trade(t_id)
           └── anti-join (lookup trade)
                ├── columns: hh_t_id:29!null
                ├── key columns: [29] = [30]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(29)
                ├── with-scan &1
                │    ├── columns: hh_t_id:29!null
                │    ├── mapping:
                │    │    └──  column2:8 => hh_t_id:29
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(29)
                └── filters (true)

# Q17
#
# TODO:
#   1. The projects under the scalar-group-by can be merged and removed.
#
opt
SELECT sum(tx_rate)::FLOAT8
  FROM taxrate
 WHERE tx_id IN (SELECT cx_tx_id FROM customer_taxrate WHERE cx_c_id = 0)
----
project
 ├── columns: sum:11
 ├── cardinality: [1 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(11)
 ├── scalar-group-by
 │    ├── columns: sum:10
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(10)
 │    ├── project
 │    │    ├── columns: tx_id:1!null tx_rate:3!null
 │    │    ├── key: (1)
 │    │    ├── fd: (1)-->(3)
 │    │    └── project
 │    │         ├── columns: tx_id:1!null tx_rate:3!null cx_tx_id:6!null
 │    │         ├── key: (6)
 │    │         ├── fd: (1)-->(3), (1)==(6), (6)==(1)
 │    │         └── inner-join (lookup taxrate)
 │    │              ├── columns: tx_id:1!null tx_rate:3!null cx_tx_id:6!null cx_c_id:7!null
 │    │              ├── key columns: [6] = [1]
 │    │              ├── lookup columns are key
 │    │              ├── key: (6)
 │    │              ├── fd: ()-->(7), (1)-->(3), (1)==(6), (6)==(1)
 │    │              ├── select
 │    │              │    ├── columns: cx_tx_id:6!null cx_c_id:7!null
 │    │              │    ├── key: (6)
 │    │              │    ├── fd: ()-->(7)
 │    │              │    ├── scan customer_taxrate
 │    │              │    │    ├── columns: cx_tx_id:6!null cx_c_id:7!null
 │    │              │    │    └── key: (6,7)
 │    │              │    └── filters
 │    │              │         └── cx_c_id:7 = 0 [outer=(7), constraints=(/7: [/0 - /0]; tight), fd=()-->(7)]
 │    │              └── filters (true)
 │    └── aggregations
 │         └── sum [as=sum:10, outer=(3)]
 │              └── tx_rate:3
 └── projections
      └── sum:10::FLOAT8 [as=sum:11, outer=(10), immutable]

# Q18
opt
UPDATE trade SET t_tax = '0.00':::FLOAT8::DECIMAL WHERE t_id = 0
----
update trade
 ├── columns: <none>
 ├── fetch columns: t_id:18 t_dts:19 t_st_id:20 t_tt_id:21 t_is_cash:22 t_s_symb:23 t_qty:24 t_bid_price:25 t_ca_id:26 t_exec_name:27 t_trade_price:28 t_chrg:29 t_comm:30 t_tax:31 t_lifo:32
 ├── update-mapping:
 │    └── t_tax_new:36 => t_tax:14
 ├── check columns: check5:41
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: check5:41!null t_tax_new:36!null t_id:18!null t_dts:19!null t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
      ├── cardinality: [0 - 1]
      ├── key: ()
      ├── fd: ()-->(18-32,36,41)
      ├── scan trade
      │    ├── columns: t_id:18!null t_dts:19!null t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
      │    ├── constraint: /18: [/0 - /0]
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(18-32)
      └── projections
           ├── true [as=check5:41]
           └── 0 [as=t_tax_new:36]

# Q19
opt
SELECT s_ex_id, s_name FROM security WHERE s_symb = 'SYMB'
----
project
 ├── columns: s_ex_id:5!null s_name:4!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(4,5)
 └── scan security
      ├── columns: s_symb:1!null s_name:4!null s_ex_id:5!null
      ├── constraint: /1: [/'SYMB' - /'SYMB']
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,4,5)

# Q20
opt
SELECT c_tier FROM customer WHERE c_id = 0
----
project
 ├── columns: c_tier:8!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(8)
 └── scan customer
      ├── columns: c_id:1!null c_tier:8!null
      ├── constraint: /1: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,8)

# Q21
opt
SELECT cr_rate::FLOAT8
  FROM commission_rate
 WHERE cr_c_tier = 1
   AND cr_tt_id = 'TMB'
   AND cr_ex_id = 'NYSE'
   AND cr_from_qty <= 20
   AND cr_to_qty >= 10
 LIMIT 1
----
project
 ├── columns: cr_rate:9!null
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(9)
 ├── limit
 │    ├── columns: cr_c_tier:1!null cr_tt_id:2!null cr_ex_id:3!null cr_from_qty:4!null cr_to_qty:5!null commission_rate.cr_rate:6!null
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(1-6)
 │    ├── select
 │    │    ├── columns: cr_c_tier:1!null cr_tt_id:2!null cr_ex_id:3!null cr_from_qty:4!null cr_to_qty:5!null commission_rate.cr_rate:6!null
 │    │    ├── key: (4)
 │    │    ├── fd: ()-->(1-3), (4)-->(5,6)
 │    │    ├── limit hint: 1.00
 │    │    ├── scan commission_rate
 │    │    │    ├── columns: cr_c_tier:1!null cr_tt_id:2!null cr_ex_id:3!null cr_from_qty:4!null cr_to_qty:5!null commission_rate.cr_rate:6!null
 │    │    │    ├── constraint: /1/2/3/4: [/1/'TMB'/'NYSE'/0 - /1/'TMB'/'NYSE'/20]
 │    │    │    ├── cardinality: [0 - 21]
 │    │    │    ├── key: (4)
 │    │    │    └── fd: ()-->(1-3), (4)-->(5,6)
 │    │    └── filters
 │    │         └── cr_to_qty:5 >= 10 [outer=(5), constraints=(/5: [/10 - ]; tight)]
 │    └── 1
 └── projections
      └── commission_rate.cr_rate:6::FLOAT8 [as=cr_rate:9, outer=(6), immutable]

# Q22
opt
UPDATE trade
   SET t_comm = '0.00':::FLOAT8::DECIMAL,
       t_dts = '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP,
       t_st_id = 'SBMT',
       t_trade_price = '100.00':::FLOAT8::DECIMAL
 WHERE t_id = 0
----
update trade
 ├── columns: <none>
 ├── fetch columns: t_id:18 t_dts:19 trade.t_st_id:20 t_tt_id:21 t_is_cash:22 t_s_symb:23 t_qty:24 t_bid_price:25 t_ca_id:26 t_exec_name:27 t_trade_price:28 t_chrg:29 t_comm:30 t_tax:31 t_lifo:32
 ├── update-mapping:
 │    ├── t_dts_new:36 => t_dts:2
 │    ├── t_st_id_new:37 => trade.t_st_id:3
 │    ├── t_trade_price_new:39 => t_trade_price:11
 │    └── t_comm_new:40 => t_comm:13
 ├── check columns: check4:44
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── project
 │    ├── columns: check4:44!null t_comm_new:40!null t_trade_price_new:39!null t_dts_new:36!null t_st_id_new:37!null t_id:18!null t_dts:19!null trade.t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(18-32,36,37,39,40,44)
 │    ├── scan trade
 │    │    ├── columns: t_id:18!null t_dts:19!null trade.t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
 │    │    ├── constraint: /18: [/0 - /0]
 │    │    ├── cardinality: [0 - 1]
 │    │    ├── key: ()
 │    │    └── fd: ()-->(18-32)
 │    └── projections
 │         ├── true [as=check4:44]
 │         ├── 0 [as=t_comm_new:40]
 │         ├── 1E+2 [as=t_trade_price_new:39]
 │         ├── '2020-06-17 22:27:42.148484' [as=t_dts_new:36]
 │         └── 'SBMT' [as=t_st_id_new:37]
 └── f-k-checks
      └── f-k-checks-item: trade(t_st_id) -> status_type(st_id)
           └── anti-join (lookup status_type)
                ├── columns: t_st_id:46!null
                ├── key columns: [46] = [47]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(46)
                ├── with-scan &1
                │    ├── columns: t_st_id:46!null
                │    ├── mapping:
                │    │    └──  t_st_id_new:37 => t_st_id:46
                │    ├── cardinality: [0 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(46)
                └── filters (true)

# Q23
opt
INSERT INTO trade_history (th_t_id, th_dts, th_st_id)
VALUES (0, '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP, 'SBMT')
----
insert trade_history
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:6 => trade_history.th_t_id:1
 │    ├── column2:7 => th_dts:2
 │    └── column3:8 => trade_history.th_st_id:3
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:6!null column2:7!null column3:8!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(6-8)
 │    └── (0, '2020-06-17 22:27:42.148484', 'SBMT')
 └── f-k-checks
      ├── f-k-checks-item: trade_history(th_t_id) -> trade(t_id)
      │    └── anti-join (lookup trade)
      │         ├── columns: th_t_id:9!null
      │         ├── key columns: [9] = [10]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(9)
      │         ├── with-scan &1
      │         │    ├── columns: th_t_id:9!null
      │         │    ├── mapping:
      │         │    │    └──  column1:6 => th_t_id:9
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(9)
      │         └── filters (true)
      └── f-k-checks-item: trade_history(th_st_id) -> status_type(st_id)
           └── anti-join (lookup status_type)
                ├── columns: th_st_id:27!null
                ├── key columns: [27] = [28]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(27)
                ├── with-scan &1
                │    ├── columns: th_st_id:27!null
                │    ├── mapping:
                │    │    └──  column3:8 => th_st_id:27
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(27)
                └── filters (true)

# Q24
opt
UPDATE broker
   SET b_comm_total = b_comm_total + '0.00':::FLOAT8::DECIMAL,
       b_num_trades = b_num_trades + 1
 WHERE b_id = 0
----
update broker
 ├── columns: <none>
 ├── fetch columns: b_id:8 b_st_id:9 b_name:10 b_num_trades:11 b_comm_total:12
 ├── update-mapping:
 │    ├── b_num_trades_new:16 => b_num_trades:4
 │    └── b_comm_total_new:17 => b_comm_total:5
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: b_comm_total_new:17 b_num_trades_new:16!null b_id:8!null b_st_id:9!null b_name:10!null b_num_trades:11!null b_comm_total:12!null
      ├── cardinality: [0 - 1]
      ├── immutable
      ├── key: ()
      ├── fd: ()-->(8-12,16,17)
      ├── scan broker
      │    ├── columns: b_id:8!null b_st_id:9!null b_name:10!null b_num_trades:11!null b_comm_total:12!null
      │    ├── constraint: /8: [/0 - /0]
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(8-12)
      └── projections
           ├── crdb_internal.round_decimal_values(b_comm_total:12::DECIMAL, 2) [as=b_comm_total_new:17, outer=(12), immutable]
           └── b_num_trades:11 + 1 [as=b_num_trades_new:16, outer=(11), immutable]

# Q25
opt
INSERT INTO settlement (se_t_id, se_cash_type, se_cash_due_date, se_amt)
VALUES (0, 'Cash Account', '2020-06-19'::DATE, '100.00':::FLOAT8::DECIMAL)
----
insert settlement
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:7 => settlement.se_t_id:1
 │    ├── column2:8 => se_cash_type:2
 │    ├── column3:9 => se_cash_due_date:3
 │    └── se_amt:11 => settlement.se_amt:4
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:7!null column2:8!null column3:9!null se_amt:11!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(7-9,11)
 │    └── (0, 'Cash Account', '2020-06-19', 1E+2)
 └── f-k-checks
      └── f-k-checks-item: settlement(se_t_id) -> trade(t_id)
           └── anti-join (lookup trade)
                ├── columns: se_t_id:12!null
                ├── key columns: [12] = [13]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(12)
                ├── with-scan &1
                │    ├── columns: se_t_id:12!null
                │    ├── mapping:
                │    │    └──  column1:7 => se_t_id:12
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(12)
                └── filters (true)

# Q26
opt
   UPDATE customer_account
      SET ca_bal = ca_bal + '100.00':::FLOAT8::DECIMAL
    WHERE ca_id = 0
RETURNING ca_bal::FLOAT8
----
project
 ├── columns: ca_bal:20!null
 ├── cardinality: [0 - 1]
 ├── volatile, mutations
 ├── key: ()
 ├── fd: ()-->(20)
 ├── update customer_account
 │    ├── columns: ca_id:1!null customer_account.ca_bal:6!null
 │    ├── fetch columns: ca_id:9 ca_b_id:10 ca_c_id:11 ca_name:12 ca_tax_st:13 customer_account.ca_bal:14
 │    ├── update-mapping:
 │    │    └── ca_bal_new:18 => customer_account.ca_bal:6
 │    ├── cardinality: [0 - 1]
 │    ├── volatile, mutations
 │    ├── key: ()
 │    ├── fd: ()-->(1,6)
 │    └── project
 │         ├── columns: ca_bal_new:18 ca_id:9!null ca_b_id:10!null ca_c_id:11!null ca_name:12 ca_tax_st:13!null customer_account.ca_bal:14!null
 │         ├── cardinality: [0 - 1]
 │         ├── immutable
 │         ├── key: ()
 │         ├── fd: ()-->(9-14,18)
 │         ├── scan customer_account
 │         │    ├── columns: ca_id:9!null ca_b_id:10!null ca_c_id:11!null ca_name:12 ca_tax_st:13!null customer_account.ca_bal:14!null
 │         │    ├── constraint: /9: [/0 - /0]
 │         │    ├── cardinality: [0 - 1]
 │         │    ├── key: ()
 │         │    └── fd: ()-->(9-14)
 │         └── projections
 │              └── crdb_internal.round_decimal_values(customer_account.ca_bal:14::DECIMAL + 1E+2, 2) [as=ca_bal_new:18, outer=(14), immutable]
 └── projections
      └── customer_account.ca_bal:6::FLOAT8 [as=ca_bal:20, outer=(6), immutable]

# Q27
opt
INSERT INTO cash_transaction (ct_t_id, ct_dts, ct_amt, ct_name)
VALUES (
        0,
        '2020-06-18 22:27:42.148484+00:00'::TIMESTAMP,
        '100.00':::FLOAT8::DECIMAL,
        concat_ws(' ', 'Market Buy', 10:::INT4::STRING, 'shares of', 'SYMB')
       )
----
insert cash_transaction
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:7 => cash_transaction.ct_t_id:1
 │    ├── column2:8 => ct_dts:2
 │    ├── ct_amt:11 => cash_transaction.ct_amt:3
 │    └── column4:10 => ct_name:4
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:7!null column2:8!null column4:10!null ct_amt:11!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(7,8,10,11)
 │    └── (0, '2020-06-18 22:27:42.148484', 'Market Buy 10 shares of SYMB', 1E+2)
 └── f-k-checks
      └── f-k-checks-item: cash_transaction(ct_t_id) -> trade(t_id)
           └── anti-join (lookup trade)
                ├── columns: ct_t_id:12!null
                ├── key columns: [12] = [13]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(12)
                ├── with-scan &1
                │    ├── columns: ct_t_id:12!null
                │    ├── mapping:
                │    │    └──  column1:7 => ct_t_id:12
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(12)
                └── filters (true)

# Q28
opt
SELECT ca_bal::FLOAT8 FROM customer_account WHERE ca_id = 0
----
project
 ├── columns: ca_bal:9!null
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(9)
 ├── scan customer_account
 │    ├── columns: ca_id:1!null customer_account.ca_bal:6!null
 │    ├── constraint: /1: [/0 - /0]
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    └── fd: ()-->(1,6)
 └── projections
      └── customer_account.ca_bal:6::FLOAT8 [as=ca_bal:9, outer=(6), immutable]

# --------------------------------------------------
# T9
# Trade-Status
# Emulates the process of providing an update on the status of a particular set
# of trades. It is representative of a customer reviewing a summary of the
# recent trading activity for one of their accounts.
# --------------------------------------------------

# Q1 Version 1
opt
  SELECT t_id,
         t_dts,
         st_name,
         tt_name,
         t_s_symb,
         t_qty,
         t_exec_name,
         t_chrg::FLOAT8,
         s_name,
         ex_name
    FROM trade, status_type, trade_type, security, exchange
   WHERE t_ca_id = 0
     AND st_id = t_st_id
     AND tt_id = t_tt_id
     AND s_symb = t_s_symb
     AND ex_id = s_ex_id
ORDER BY t_dts DESC
   LIMIT 50
----
project
 ├── columns: t_id:1!null t_dts:2!null st_name:19!null tt_name:23!null t_s_symb:6!null t_qty:7!null t_exec_name:10!null t_chrg:55!null s_name:31!null ex_name:47!null
 ├── cardinality: [0 - 50]
 ├── immutable
 ├── key: (1)
 ├── fd: (1)-->(2,6,7,10,19,23,31,47,55), (6)-->(31,47)
 ├── ordering: -2
 ├── inner-join (lookup exchange)
 │    ├── columns: t_id:1!null t_dts:2!null t_st_id:3!null t_tt_id:4!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null t_exec_name:10!null trade.t_chrg:12!null st_id:18!null st_name:19!null tt_id:22!null tt_name:23!null s_symb:28!null s_name:31!null s_ex_id:32!null ex_id:46!null ex_name:47!null
 │    ├── key columns: [32] = [46]
 │    ├── lookup columns are key
 │    ├── cardinality: [0 - 50]
 │    ├── key: (1)
 │    ├── fd: ()-->(9), (1)-->(2-4,6,7,10,12), (18)-->(19), (3)==(18), (18)==(3), (22)-->(23), (4)==(22), (22)==(4), (28)-->(31,32), (46)-->(47), (32)==(46), (46)==(32), (6)==(28), (28)==(6)
 │    ├── ordering: -2 opt(9) [actual: -2]
 │    ├── inner-join (lookup status_type)
 │    │    ├── columns: t_id:1!null t_dts:2!null t_st_id:3!null t_tt_id:4!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null t_exec_name:10!null trade.t_chrg:12!null st_id:18!null st_name:19!null tt_id:22!null tt_name:23!null s_symb:28!null s_name:31!null s_ex_id:32!null
 │    │    ├── key columns: [3] = [18]
 │    │    ├── lookup columns are key
 │    │    ├── cardinality: [0 - 50]
 │    │    ├── key: (1)
 │    │    ├── fd: ()-->(9), (18)-->(19), (22)-->(23), (1)-->(2-4,6,7,10,12), (28)-->(31,32), (6)==(28), (28)==(6), (4)==(22), (22)==(4), (3)==(18), (18)==(3)
 │    │    ├── ordering: -2 opt(9) [actual: -2]
 │    │    ├── inner-join (lookup trade_type)
 │    │    │    ├── columns: t_id:1!null t_dts:2!null t_st_id:3!null t_tt_id:4!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null t_exec_name:10!null trade.t_chrg:12!null tt_id:22!null tt_name:23!null s_symb:28!null s_name:31!null s_ex_id:32!null
 │    │    │    ├── key columns: [4] = [22]
 │    │    │    ├── lookup columns are key
 │    │    │    ├── cardinality: [0 - 50]
 │    │    │    ├── key: (1)
 │    │    │    ├── fd: ()-->(9), (22)-->(23), (1)-->(2-4,6,7,10,12), (28)-->(31,32), (6)==(28), (28)==(6), (4)==(22), (22)==(4)
 │    │    │    ├── ordering: -2 opt(9) [actual: -2]
 │    │    │    ├── inner-join (lookup security)
 │    │    │    │    ├── columns: t_id:1!null t_dts:2!null t_st_id:3!null t_tt_id:4!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null t_exec_name:10!null trade.t_chrg:12!null s_symb:28!null s_name:31!null s_ex_id:32!null
 │    │    │    │    ├── key columns: [6] = [28]
 │    │    │    │    ├── lookup columns are key
 │    │    │    │    ├── cardinality: [0 - 50]
 │    │    │    │    ├── key: (1)
 │    │    │    │    ├── fd: ()-->(9), (1)-->(2-4,6,7,10,12), (28)-->(31,32), (6)==(28), (28)==(6)
 │    │    │    │    ├── ordering: -2 opt(9) [actual: -2]
 │    │    │    │    ├── scan trade@secondary
 │    │    │    │    │    ├── columns: t_id:1!null t_dts:2!null t_st_id:3!null t_tt_id:4!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null t_exec_name:10!null trade.t_chrg:12!null
 │    │    │    │    │    ├── constraint: /9/-2/1: [/0 - /0]
 │    │    │    │    │    ├── limit: 50
 │    │    │    │    │    ├── key: (1)
 │    │    │    │    │    ├── fd: ()-->(9), (1)-->(2-4,6,7,10,12)
 │    │    │    │    │    └── ordering: -2 opt(9) [actual: -2]
 │    │    │    │    └── filters (true)
 │    │    │    └── filters (true)
 │    │    └── filters (true)
 │    └── filters (true)
 └── projections
      └── trade.t_chrg:12::FLOAT8 [as=t_chrg:55, outer=(12), immutable]

# Q2
opt
SELECT c_l_name, c_f_name, b_name
  FROM customer_account, customer, broker
 WHERE ca_id = 0 AND c_id = ca_c_id AND b_id = ca_b_id
----
project
 ├── columns: c_l_name:12!null c_f_name:13!null b_name:37!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(12,13,37)
 └── inner-join (lookup broker)
      ├── columns: ca_id:1!null ca_b_id:2!null ca_c_id:3!null c_id:9!null c_l_name:12!null c_f_name:13!null b_id:35!null b_name:37!null
      ├── key columns: [2] = [35]
      ├── lookup columns are key
      ├── cardinality: [0 - 1]
      ├── key: ()
      ├── fd: ()-->(1-3,9,12,13,35,37), (3)==(9), (2)==(35), (35)==(2), (9)==(3)
      ├── inner-join (lookup customer)
      │    ├── columns: ca_id:1!null ca_b_id:2!null ca_c_id:3!null c_id:9!null c_l_name:12!null c_f_name:13!null
      │    ├── key columns: [3] = [9]
      │    ├── lookup columns are key
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    ├── fd: ()-->(1-3,9,12,13), (9)==(3), (3)==(9)
      │    ├── scan customer_account
      │    │    ├── columns: ca_id:1!null ca_b_id:2!null ca_c_id:3!null
      │    │    ├── constraint: /1: [/0 - /0]
      │    │    ├── cardinality: [0 - 1]
      │    │    ├── key: ()
      │    │    └── fd: ()-->(1-3)
      │    └── filters (true)
      └── filters (true)

# --------------------------------------------------
# T10
# Trade-Update
# Emulates the process of making minor corrections or updates to a set of
# trades. This is analogous to a customer or broker reviewing a set of trades,
# and discovering that some minor editorial corrections are required. The
# various sets of trades are chosen such that the work is representative of:
#   * reviewing general market trends
#   * reviewing trades for a period of time prior to the most recent account
#     statement
#   * reviewing past performance of a particular security
# --------------------------------------------------

# Q1
opt
SELECT t_exec_name FROM trade WHERE t_id = 0
----
project
 ├── columns: t_exec_name:10!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(10)
 └── scan trade
      ├── columns: t_id:1!null t_exec_name:10!null
      ├── constraint: /1: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,10)

# Q2
opt
UPDATE trade
   SET t_exec_name = IF(
                    t_exec_name LIKE '% X %',
                    replace(t_exec_name, ' X ', ' '),
                    replace(t_exec_name, ' ', ' X ')
                   )
 WHERE t_id = 0
----
update trade
 ├── columns: <none>
 ├── fetch columns: t_id:18 t_dts:19 t_st_id:20 t_tt_id:21 t_is_cash:22 t_s_symb:23 t_qty:24 t_bid_price:25 t_ca_id:26 t_exec_name:27 t_trade_price:28 t_chrg:29 t_comm:30 t_tax:31 t_lifo:32
 ├── update-mapping:
 │    └── t_exec_name_new:35 => t_exec_name:10
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: t_exec_name_new:35 t_id:18!null t_dts:19!null t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
      ├── cardinality: [0 - 1]
      ├── immutable
      ├── key: ()
      ├── fd: ()-->(18-32,35)
      ├── scan trade
      │    ├── columns: t_id:18!null t_dts:19!null t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
      │    ├── constraint: /18: [/0 - /0]
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(18-32)
      └── projections
           └── CASE t_exec_name:27 LIKE '% X %' WHEN true THEN replace(t_exec_name:27, ' X ', ' ') ELSE replace(t_exec_name:27, ' ', ' X ') END [as=t_exec_name_new:35, outer=(27), immutable]

# Q3
opt
SELECT t_bid_price::FLOAT8,
       t_exec_name,
       t_is_cash,
       tt_is_mrkt,
       t_trade_price::FLOAT8
  FROM trade, trade_type
 WHERE t_id = 0 AND t_tt_id = tt_id
----
project
 ├── columns: t_bid_price:24 t_exec_name:10!null t_is_cash:5!null tt_is_mrkt:21!null t_trade_price:25
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(5,10,21,24,25)
 ├── inner-join (lookup trade_type)
 │    ├── columns: t_id:1!null t_tt_id:4!null t_is_cash:5!null trade.t_bid_price:8 t_exec_name:10!null trade.t_trade_price:11 tt_id:18!null tt_is_mrkt:21!null
 │    ├── key columns: [4] = [18]
 │    ├── lookup columns are key
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(1,4,5,8,10,11,18,21), (18)==(4), (4)==(18)
 │    ├── scan trade
 │    │    ├── columns: t_id:1!null t_tt_id:4!null t_is_cash:5!null trade.t_bid_price:8 t_exec_name:10!null trade.t_trade_price:11
 │    │    ├── constraint: /1: [/0 - /0]
 │    │    ├── cardinality: [0 - 1]
 │    │    ├── key: ()
 │    │    └── fd: ()-->(1,4,5,8,10,11)
 │    └── filters (true)
 └── projections
      ├── trade.t_bid_price:8::FLOAT8 [as=t_bid_price:24, outer=(8), immutable]
      └── trade.t_trade_price:11::FLOAT8 [as=t_trade_price:25, outer=(11), immutable]

# Q4
opt
SELECT se_amt::FLOAT8, se_cash_due_date, se_cash_type
  FROM settlement
 WHERE se_t_id = 0
----
project
 ├── columns: se_amt:7!null se_cash_due_date:3!null se_cash_type:2!null
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(2,3,7)
 ├── scan settlement
 │    ├── columns: se_t_id:1!null se_cash_type:2!null se_cash_due_date:3!null settlement.se_amt:4!null
 │    ├── constraint: /1: [/0 - /0]
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    └── fd: ()-->(1-4)
 └── projections
      └── settlement.se_amt:4::FLOAT8 [as=se_amt:7, outer=(4), immutable]

# Q5
opt
SELECT ct_amt::FLOAT8, ct_dts, ct_name FROM cash_transaction WHERE ct_t_id = 0
----
project
 ├── columns: ct_amt:7!null ct_dts:2!null ct_name:4
 ├── cardinality: [0 - 1]
 ├── immutable
 ├── key: ()
 ├── fd: ()-->(2,4,7)
 ├── scan cash_transaction
 │    ├── columns: ct_t_id:1!null ct_dts:2!null cash_transaction.ct_amt:3!null ct_name:4
 │    ├── constraint: /1: [/0 - /0]
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    └── fd: ()-->(1-4)
 └── projections
      └── cash_transaction.ct_amt:3::FLOAT8 [as=ct_amt:7, outer=(3), immutable]

# Q6
opt
  SELECT th_dts, th_st_id
    FROM trade_history
   WHERE th_t_id = 0
ORDER BY th_dts
   LIMIT 3
----
project
 ├── columns: th_dts:2!null th_st_id:3!null
 ├── cardinality: [0 - 3]
 ├── key: (3)
 ├── fd: (3)-->(2)
 ├── ordering: +2
 └── limit
      ├── columns: th_t_id:1!null th_dts:2!null th_st_id:3!null
      ├── internal-ordering: +2 opt(1)
      ├── cardinality: [0 - 3]
      ├── key: (3)
      ├── fd: ()-->(1), (3)-->(2)
      ├── ordering: +2 opt(1) [actual: +2]
      ├── sort
      │    ├── columns: th_t_id:1!null th_dts:2!null th_st_id:3!null
      │    ├── key: (3)
      │    ├── fd: ()-->(1), (3)-->(2)
      │    ├── ordering: +2 opt(1) [actual: +2]
      │    ├── limit hint: 3.00
      │    └── scan trade_history
      │         ├── columns: th_t_id:1!null th_dts:2!null th_st_id:3!null
      │         ├── constraint: /1/3: [/0 - /0]
      │         ├── key: (3)
      │         └── fd: ()-->(1), (3)-->(2)
      └── 3

# Q7
opt
  SELECT t_id,
         t_bid_price::FLOAT8,
         t_exec_name,
         t_is_cash,
         t_trade_price::FLOAT8
    FROM trade
   WHERE t_ca_id = 0 AND
         t_dts >= '2020-06-15 22:27:42.148484+00:00'::TIMESTAMP AND
         t_dts <= '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP
ORDER BY t_dts ASC
   LIMIT 20
----
project
 ├── columns: t_id:1!null t_bid_price:18 t_exec_name:10!null t_is_cash:5!null t_trade_price:19  [hidden: t_dts:2!null]
 ├── cardinality: [0 - 20]
 ├── immutable
 ├── key: (1)
 ├── fd: (1)-->(2,5,10,18,19)
 ├── ordering: +2
 ├── scan trade@secondary,rev
 │    ├── columns: t_id:1!null t_dts:2!null t_is_cash:5!null trade.t_bid_price:8 t_ca_id:9!null t_exec_name:10!null trade.t_trade_price:11
 │    ├── constraint: /9/-2/1: [/0/'2020-06-17 22:27:42.148484' - /0/'2020-06-15 22:27:42.148484']
 │    ├── limit: 20(rev)
 │    ├── key: (1)
 │    ├── fd: ()-->(9), (1)-->(2,5,8,10,11)
 │    └── ordering: +2 opt(9) [actual: +2]
 └── projections
      ├── trade.t_bid_price:8::FLOAT8 [as=t_bid_price:18, outer=(8), immutable]
      └── trade.t_trade_price:11::FLOAT8 [as=t_trade_price:19, outer=(11), immutable]

# Q8
opt
UPDATE settlement
   SET se_cash_type = IF(
                        True,
                        IF(
                            se_cash_type = 'Cash Account',
                            'Cash',
                            'Cash Account'
                        ),
                        IF(
                            se_cash_type = 'Margin Account',
                            'Margin',
                            'Margin Account'
                        )
                    )
 WHERE se_t_id = 0
----
update settlement
 ├── columns: <none>
 ├── fetch columns: se_t_id:7 se_cash_type:8 se_cash_due_date:9 se_amt:10
 ├── update-mapping:
 │    └── se_cash_type_new:13 => se_cash_type:2
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: se_cash_type_new:13!null se_t_id:7!null se_cash_type:8!null se_cash_due_date:9!null se_amt:10!null
      ├── cardinality: [0 - 1]
      ├── key: ()
      ├── fd: ()-->(7-10,13)
      ├── scan settlement
      │    ├── columns: se_t_id:7!null se_cash_type:8!null se_cash_due_date:9!null se_amt:10!null
      │    ├── constraint: /7: [/0 - /0]
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(7-10)
      └── projections
           └── CASE se_cash_type:8 = 'Cash Account' WHEN true THEN 'Cash' ELSE 'Cash Account' END [as=se_cash_type_new:13, outer=(8)]


# Q9
opt
  SELECT th_dts, th_st_id
    FROM trade_history
   WHERE th_t_id = 0
ORDER BY th_dts
   LIMIT 3
----
project
 ├── columns: th_dts:2!null th_st_id:3!null
 ├── cardinality: [0 - 3]
 ├── key: (3)
 ├── fd: (3)-->(2)
 ├── ordering: +2
 └── limit
      ├── columns: th_t_id:1!null th_dts:2!null th_st_id:3!null
      ├── internal-ordering: +2 opt(1)
      ├── cardinality: [0 - 3]
      ├── key: (3)
      ├── fd: ()-->(1), (3)-->(2)
      ├── ordering: +2 opt(1) [actual: +2]
      ├── sort
      │    ├── columns: th_t_id:1!null th_dts:2!null th_st_id:3!null
      │    ├── key: (3)
      │    ├── fd: ()-->(1), (3)-->(2)
      │    ├── ordering: +2 opt(1) [actual: +2]
      │    ├── limit hint: 3.00
      │    └── scan trade_history
      │         ├── columns: th_t_id:1!null th_dts:2!null th_st_id:3!null
      │         ├── constraint: /1/3: [/0 - /0]
      │         ├── key: (3)
      │         └── fd: ()-->(1), (3)-->(2)
      └── 3

# Q10 Version 1
#
# TODO:
#   1. The limit can be pushed into the joins because the filters on the foreign
#      key column imply the filters on the referenced column.
#
opt
  SELECT t_id,
         t_ca_id,
         t_exec_name,
         t_is_cash,
         t_trade_price::FLOAT8,
         t_qty,
         s_name,
         t_dts,
         t_tt_id,
         tt_name
    FROM trade, trade_type, security
   WHERE t_s_symb = 'SYMB'
     AND t_dts >= '2020-06-15 22:27:42.148484+00:00'::TIMESTAMP
     AND t_dts <= '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP
     AND tt_id = t_tt_id
     AND s_symb = t_s_symb
ORDER BY t_dts ASC
   LIMIT 20
----
project
 ├── columns: t_id:1!null t_ca_id:9!null t_exec_name:10!null t_is_cash:5!null t_trade_price:42 t_qty:7!null s_name:27!null t_dts:2!null t_tt_id:4!null tt_name:19!null
 ├── cardinality: [0 - 20]
 ├── immutable
 ├── key: (1)
 ├── fd: ()-->(27), (1)-->(2,4,5,7,9,10,19,42), (4)-->(19)
 ├── ordering: +2 opt(27) [actual: +2]
 ├── limit
 │    ├── columns: t_id:1!null t_dts:2!null t_tt_id:4!null t_is_cash:5!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null t_exec_name:10!null trade.t_trade_price:11 tt_id:18!null tt_name:19!null s_symb:24!null s_name:27!null
 │    ├── internal-ordering: +2 opt(6,24,27)
 │    ├── cardinality: [0 - 20]
 │    ├── key: (1)
 │    ├── fd: ()-->(6,24,27), (1)-->(2,4,5,7,9-11), (18)-->(19), (4)==(18), (18)==(4)
 │    ├── ordering: +2 opt(6,24,27) [actual: +2]
 │    ├── sort
 │    │    ├── columns: t_id:1!null t_dts:2!null t_tt_id:4!null t_is_cash:5!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null t_exec_name:10!null trade.t_trade_price:11 tt_id:18!null tt_name:19!null s_symb:24!null s_name:27!null
 │    │    ├── key: (1)
 │    │    ├── fd: ()-->(6,24,27), (1)-->(2,4,5,7,9-11), (18)-->(19), (4)==(18), (18)==(4)
 │    │    ├── ordering: +2 opt(6,24,27) [actual: +2]
 │    │    ├── limit hint: 20.00
 │    │    └── inner-join (cross)
 │    │         ├── columns: t_id:1!null t_dts:2!null t_tt_id:4!null t_is_cash:5!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null t_exec_name:10!null trade.t_trade_price:11 tt_id:18!null tt_name:19!null s_symb:24!null s_name:27!null
 │    │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │    │         ├── key: (1)
 │    │         ├── fd: ()-->(6,24,27), (1)-->(2,4,5,7,9-11), (18)-->(19), (4)==(18), (18)==(4)
 │    │         ├── inner-join (lookup trade_type)
 │    │         │    ├── columns: t_id:1!null t_dts:2!null t_tt_id:4!null t_is_cash:5!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null t_exec_name:10!null trade.t_trade_price:11 tt_id:18!null tt_name:19!null
 │    │         │    ├── key columns: [4] = [18]
 │    │         │    ├── lookup columns are key
 │    │         │    ├── key: (1)
 │    │         │    ├── fd: ()-->(6), (1)-->(2,4,5,7,9-11), (18)-->(19), (4)==(18), (18)==(4)
 │    │         │    ├── scan trade@secondary
 │    │         │    │    ├── columns: t_id:1!null t_dts:2!null t_tt_id:4!null t_is_cash:5!null t_s_symb:6!null t_qty:7!null t_ca_id:9!null t_exec_name:10!null trade.t_trade_price:11
 │    │         │    │    ├── constraint: /6/2/1: [/'SYMB'/'2020-06-15 22:27:42.148484' - /'SYMB'/'2020-06-17 22:27:42.148484']
 │    │         │    │    ├── key: (1)
 │    │         │    │    └── fd: ()-->(6), (1)-->(2,4,5,7,9-11)
 │    │         │    └── filters (true)
 │    │         ├── scan security
 │    │         │    ├── columns: s_symb:24!null s_name:27!null
 │    │         │    ├── constraint: /24: [/'SYMB' - /'SYMB']
 │    │         │    ├── cardinality: [0 - 1]
 │    │         │    ├── key: ()
 │    │         │    └── fd: ()-->(24,27)
 │    │         └── filters (true)
 │    └── 20
 └── projections
      └── trade.t_trade_price:11::FLOAT8 [as=t_trade_price:42, outer=(11), immutable]

# Q11
opt
UPDATE cash_transaction
   SET ct_name = concat_ws(
                ' ',
                'TMB',
                10:::INT4::STRING,
                IF(ct_name LIKE '% shares of %', 'Shares of', 'shares of'),
                'SYMB'
               )
 WHERE ct_t_id = 0
----
update cash_transaction
 ├── columns: <none>
 ├── fetch columns: ct_t_id:7 ct_dts:8 ct_amt:9 ct_name:10
 ├── update-mapping:
 │    └── ct_name_new:13 => ct_name:4
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: ct_name_new:13 ct_t_id:7!null ct_dts:8!null ct_amt:9!null ct_name:10
      ├── cardinality: [0 - 1]
      ├── immutable
      ├── key: ()
      ├── fd: ()-->(7-10,13)
      ├── scan cash_transaction
      │    ├── columns: ct_t_id:7!null ct_dts:8!null ct_amt:9!null ct_name:10
      │    ├── constraint: /7: [/0 - /0]
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(7-10)
      └── projections
           └── concat_ws(' ', 'TMB', '10', CASE ct_name:10 LIKE '% shares of %' WHEN true THEN 'Shares of' ELSE 'shares of' END, 'SYMB') [as=ct_name_new:13, outer=(10), immutable]

# --------------------------------------------------
# T11
# Data-Maintenance
# Emulates the periodic modifications to data that is mainly static and used for
# reference. This is analogous to updating data that seldom changes.
# --------------------------------------------------

# Q1
opt
SELECT ap_acl
  FROM account_permission
 WHERE ap_ca_id = 0
 ORDER BY ap_acl DESC
 LIMIT 1
----
project
 ├── columns: ap_acl:2!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(2)
 └── limit
      ├── columns: ap_ca_id:1!null ap_acl:2!null
      ├── internal-ordering: -2 opt(1)
      ├── cardinality: [0 - 1]
      ├── key: ()
      ├── fd: ()-->(1,2)
      ├── sort
      │    ├── columns: ap_ca_id:1!null ap_acl:2!null
      │    ├── fd: ()-->(1)
      │    ├── ordering: -2 opt(1) [actual: -2]
      │    ├── limit hint: 1.00
      │    └── scan account_permission
      │         ├── columns: ap_ca_id:1!null ap_acl:2!null
      │         ├── constraint: /1/3: [/0 - /0]
      │         └── fd: ()-->(1)
      └── 1

# Q2
opt
UPDATE account_permission SET ap_acl = '0011' WHERE ap_ca_id = 0 AND ap_acl = NULL
----
update account_permission
 ├── columns: <none>
 ├── fetch columns: ap_ca_id:8 ap_acl:9 ap_tax_id:10 ap_l_name:11 ap_f_name:12
 ├── update-mapping:
 │    └── ap_acl_new:15 => ap_acl:2
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── values
      ├── columns: ap_ca_id:8!null ap_acl:9!null ap_tax_id:10!null ap_l_name:11!null ap_f_name:12!null ap_acl_new:15!null
      ├── cardinality: [0 - 0]
      ├── key: ()
      └── fd: ()-->(8-12,15)

# Q3
opt
SELECT ad_line2, ad_id
  FROM address, customer
 WHERE ad_id = c_ad_id AND c_id = 0
----
project
 ├── columns: ad_line2:3 ad_id:1!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(1,3)
 └── inner-join (lookup address)
      ├── columns: ad_id:1!null ad_line2:3 c_id:8!null c_ad_id:17!null
      ├── key columns: [17] = [1]
      ├── lookup columns are key
      ├── cardinality: [0 - 1]
      ├── key: ()
      ├── fd: ()-->(1,3,8,17), (17)==(1), (1)==(17)
      ├── scan customer
      │    ├── columns: c_id:8!null c_ad_id:17!null
      │    ├── constraint: /8: [/0 - /0]
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(8,17)
      └── filters (true)

# Q4
opt
SELECT ad_line2, ad_id
  FROM address, company
 WHERE ad_id = co_ad_id AND co_id = 0
----
project
 ├── columns: ad_line2:3 ad_id:1!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(1,3)
 └── inner-join (lookup address)
      ├── columns: ad_id:1!null ad_line2:3 co_id:8!null co_ad_id:14!null
      ├── key columns: [14] = [1]
      ├── lookup columns are key
      ├── cardinality: [0 - 1]
      ├── key: ()
      ├── fd: ()-->(1,3,8,14), (14)==(1), (1)==(14)
      ├── scan company
      │    ├── columns: co_id:8!null co_ad_id:14!null
      │    ├── constraint: /8: [/0 - /0]
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(8,14)
      └── filters (true)

# Q5
opt
UPDATE address SET ad_line2 = '' WHERE ad_id = 0
----
update address
 ├── columns: <none>
 ├── fetch columns: ad_id:8 ad_line1:9 ad_line2:10 ad_zc_code:11 ad_ctry:12
 ├── update-mapping:
 │    └── ad_line2_new:15 => ad_line2:3
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: ad_line2_new:15!null ad_id:8!null ad_line1:9 ad_line2:10 ad_zc_code:11!null ad_ctry:12
      ├── cardinality: [0 - 1]
      ├── key: ()
      ├── fd: ()-->(8-12,15)
      ├── scan address
      │    ├── columns: ad_id:8!null ad_line1:9 ad_line2:10 ad_zc_code:11!null ad_ctry:12
      │    ├── constraint: /8: [/0 - /0]
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(8-12)
      └── projections
           └── '' [as=ad_line2_new:15]

# Q6
opt
SELECT co_sp_rate FROM company WHERE co_id = 0
----
project
 ├── columns: co_sp_rate:5!null
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(5)
 └── scan company
      ├── columns: co_id:1!null co_sp_rate:5!null
      ├── constraint: /1: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,5)

# Q7
opt
UPDATE company SET co_sp_rate = 'AAA' WHERE co_id = 0
----
update company
 ├── columns: <none>
 ├── fetch columns: co_id:12 co_st_id:13 co_name:14 co_in_id:15 co_sp_rate:16 co_ceo:17 co_ad_id:18 co_desc:19 co_open_date:20
 ├── update-mapping:
 │    └── co_sp_rate_new:23 => co_sp_rate:5
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: co_sp_rate_new:23!null co_id:12!null co_st_id:13!null co_name:14!null co_in_id:15!null co_sp_rate:16!null co_ceo:17!null co_ad_id:18!null co_desc:19!null co_open_date:20!null
      ├── cardinality: [0 - 1]
      ├── key: ()
      ├── fd: ()-->(12-20,23)
      ├── scan company
      │    ├── columns: co_id:12!null co_st_id:13!null co_name:14!null co_in_id:15!null co_sp_rate:16!null co_ceo:17!null co_ad_id:18!null co_desc:19!null co_open_date:20!null
      │    ├── constraint: /12: [/0 - /0]
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(12-20)
      └── projections
           └── 'AAA' [as=co_sp_rate_new:23]

# Q8
opt
SELECT c_email_2 FROM customer WHERE c_id = 0
----
project
 ├── columns: c_email_2:24
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(24)
 └── scan customer
      ├── columns: c_id:1!null c_email_2:24
      ├── constraint: /1: [/0 - /0]
      ├── cardinality: [0 - 1]
      ├── key: ()
      └── fd: ()-->(1,24)

# Q9
opt
UPDATE customer SET c_email_2 = '' WHERE c_id = 0
----
update customer
 ├── columns: <none>
 ├── fetch columns: c_id:27 c_tax_id:28 c_st_id:29 c_l_name:30 c_f_name:31 c_m_name:32 c_gndr:33 c_tier:34 c_dob:35 c_ad_id:36 c_ctry_1:37 c_area_1:38 c_local_1:39 c_ext_1:40 c_ctry_2:41 c_area_2:42 c_local_2:43 c_ext_2:44 c_ctry_3:45 c_area_3:46 c_local_3:47 c_ext_3:48 c_email_1:49 c_email_2:50
 ├── update-mapping:
 │    └── c_email_2_new:53 => c_email_2:24
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: c_email_2_new:53!null c_id:27!null c_tax_id:28!null c_st_id:29!null c_l_name:30!null c_f_name:31!null c_m_name:32 c_gndr:33 c_tier:34!null c_dob:35!null c_ad_id:36!null c_ctry_1:37 c_area_1:38 c_local_1:39 c_ext_1:40 c_ctry_2:41 c_area_2:42 c_local_2:43 c_ext_2:44 c_ctry_3:45 c_area_3:46 c_local_3:47 c_ext_3:48 c_email_1:49 c_email_2:50
      ├── cardinality: [0 - 1]
      ├── key: ()
      ├── fd: ()-->(27-50,53)
      ├── scan customer
      │    ├── columns: c_id:27!null c_tax_id:28!null c_st_id:29!null c_l_name:30!null c_f_name:31!null c_m_name:32 c_gndr:33 c_tier:34!null c_dob:35!null c_ad_id:36!null c_ctry_1:37 c_area_1:38 c_local_1:39 c_ext_1:40 c_ctry_2:41 c_area_2:42 c_local_2:43 c_ext_2:44 c_ctry_3:45 c_area_3:46 c_local_3:47 c_ext_3:48 c_email_1:49 c_email_2:50
      │    ├── constraint: /27: [/0 - /0]
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(27-50)
      └── projections
           └── '' [as=c_email_2_new:53]

# Q10
opt
SELECT cx_tx_id
  FROM customer_taxrate
 WHERE cx_c_id = 0 AND (cx_tx_id LIKE 'US%' OR cx_tx_id LIKE 'CN%')
----
project
 ├── columns: cx_tx_id:1!null
 ├── key: (1)
 └── select
      ├── columns: cx_tx_id:1!null cx_c_id:2!null
      ├── key: (1)
      ├── fd: ()-->(2)
      ├── scan customer_taxrate
      │    ├── columns: cx_tx_id:1!null cx_c_id:2!null
      │    ├── constraint: /1/2
      │    │    ├── [/'CN'/0 - /'CO')
      │    │    └── [/'US'/0 - /'UT')
      │    └── key: (1,2)
      └── filters
           └── cx_c_id:2 = 0 [outer=(2), constraints=(/2: [/0 - /0]; tight), fd=()-->(2)]

# Q11
opt
UPDATE customer_taxrate
   SET cx_tx_id = 'US12'
 where cx_c_id = 0 and cx_tx_id = 'US13'
----
update customer_taxrate
 ├── columns: <none>
 ├── fetch columns: customer_taxrate.cx_tx_id:5 cx_c_id:6
 ├── update-mapping:
 │    └── cx_tx_id_new:9 => customer_taxrate.cx_tx_id:1
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── project
 │    ├── columns: cx_tx_id_new:9!null customer_taxrate.cx_tx_id:5!null cx_c_id:6!null
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(5,6,9)
 │    ├── scan customer_taxrate
 │    │    ├── columns: customer_taxrate.cx_tx_id:5!null cx_c_id:6!null
 │    │    ├── constraint: /5/6: [/'US13'/0 - /'US13'/0]
 │    │    ├── cardinality: [0 - 1]
 │    │    ├── key: ()
 │    │    └── fd: ()-->(5,6)
 │    └── projections
 │         └── 'US12' [as=cx_tx_id_new:9]
 └── f-k-checks
      └── f-k-checks-item: customer_taxrate(cx_tx_id) -> taxrate(tx_id)
           └── anti-join (lookup taxrate)
                ├── columns: cx_tx_id:10!null
                ├── key columns: [10] = [11]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(10)
                ├── with-scan &1
                │    ├── columns: cx_tx_id:10!null
                │    ├── mapping:
                │    │    └──  cx_tx_id_new:9 => cx_tx_id:10
                │    ├── cardinality: [0 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(10)
                └── filters (true)

# Q12
opt
UPDATE daily_market
   SET dm_vol = dm_vol + 1
 WHERE dm_s_symb = 'SYMB' AND substring (dm_date::CHAR(8),1,2) = 'Thursday'
----
update daily_market
 ├── columns: <none>
 ├── fetch columns: dm_date:9 dm_s_symb:10 dm_close:11 dm_high:12 dm_low:13 dm_vol:14
 ├── update-mapping:
 │    └── dm_vol_new:17 => dm_vol:6
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: dm_vol_new:17!null dm_date:9!null dm_s_symb:10!null dm_close:11!null dm_high:12!null dm_low:13!null dm_vol:14!null
      ├── immutable
      ├── key: (9)
      ├── fd: ()-->(10), (9)-->(11-14), (14)-->(17)
      ├── select
      │    ├── columns: dm_date:9!null dm_s_symb:10!null dm_close:11!null dm_high:12!null dm_low:13!null dm_vol:14!null
      │    ├── immutable
      │    ├── key: (9)
      │    ├── fd: ()-->(10), (9)-->(11-14)
      │    ├── scan daily_market@secondary
      │    │    ├── columns: dm_date:9!null dm_s_symb:10!null dm_close:11!null dm_high:12!null dm_low:13!null dm_vol:14!null
      │    │    ├── constraint: /10/9: [/'SYMB' - /'SYMB']
      │    │    ├── key: (9)
      │    │    └── fd: ()-->(10), (9)-->(11-14)
      │    └── filters
      │         └── substring(dm_date:9::CHAR(8), 1, 2) = 'Thursday' [outer=(9), immutable]
      └── projections
           └── dm_vol:14 + 1 [as=dm_vol_new:17, outer=(14), immutable]

# Q13
opt
UPDATE
  exchange
SET
  ex_desc = IF(
      (
        SELECT count(*)
        FROM exchange
        WHERE ex_desc LIKE '%LAST UPDATED%'
      ) = 0,
      concat(
        ex_desc::STRING,
        ' LAST UPDATED ',
        current_timestamp::STRING
      ),
      concat(
        substring(
          ex_desc,
          1,
          char_length(ex_desc)-char_length(current_timestamp::STRING)
        ),
        current_timestamp::STRING
      )
  )
----
update exchange
 ├── columns: <none>
 ├── fetch columns: ex_id:10 ex_name:11 ex_num_symb:12 ex_open:13 ex_close:14 ex_desc:15 ex_ad_id:16
 ├── update-mapping:
 │    └── ex_desc_new:29 => ex_desc:6
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: ex_desc_new:29 ex_id:10!null ex_name:11!null ex_num_symb:12!null ex_open:13!null ex_close:14!null ex_desc:15 ex_ad_id:16!null
      ├── immutable
      ├── key: (10)
      ├── fd: (10)-->(11-16), (15)-->(29)
      ├── scan exchange
      │    ├── columns: ex_id:10!null ex_name:11!null ex_num_symb:12!null ex_open:13!null ex_close:14!null ex_desc:15 ex_ad_id:16!null
      │    ├── key: (10)
      │    └── fd: (10)-->(11-16)
      └── projections
           └── case [as=ex_desc_new:29, outer=(15), immutable, subquery]
                ├── eq
                │    ├── subquery
                │    │    └── scalar-group-by
                │    │         ├── columns: count_rows:28!null
                │    │         ├── cardinality: [1 - 1]
                │    │         ├── key: ()
                │    │         ├── fd: ()-->(28)
                │    │         ├── select
                │    │         │    ├── columns: ex_desc:24!null
                │    │         │    ├── scan exchange
                │    │         │    │    └── columns: ex_desc:24
                │    │         │    └── filters
                │    │         │         └── ex_desc:24 LIKE '%LAST UPDATED%' [outer=(24), constraints=(/24: (/NULL - ])]
                │    │         └── aggregations
                │    │              └── count-rows [as=count_rows:28]
                │    └── 0
                ├── when
                │    ├── true
                │    └── concat(ex_desc:15::STRING, ' LAST UPDATED ', '2017-05-10 13:00:00+00:00')
                └── concat(substring(ex_desc:15, 1, char_length(ex_desc:15) - 25), '2017-05-10 13:00:00+00:00')

# Q14
opt
UPDATE
  financial
SET
  fi_qtr_start_date = IF(
      (
        SELECT count(*)
          FROM financial
         WHERE fi_co_id = 0 AND
               substring(fi_qtr_start_date::CHAR(8),7,2) = '01'
      ) > 0,
      fi_qtr_start_date + INTEGER '1',
      fi_qtr_start_date - INTEGER '1'
  )
WHERE fi_co_id = 0
----
update financial
 ├── columns: <none>
 ├── fetch columns: fi_co_id:17 fi_year:18 fi_qtr:19 fi_qtr_start_date:20 fi_revenue:21 fi_net_earn:22 fi_basic_eps:23 fi_dilut_eps:24 fi_margin:25 fi_inventory:26 fi_assets:27 fi_liability:28 fi_out_basic:29 fi_out_dilut:30
 ├── update-mapping:
 │    └── fi_qtr_start_date_new:50 => fi_qtr_start_date:4
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: fi_qtr_start_date_new:50 fi_co_id:17!null fi_year:18!null fi_qtr:19!null fi_qtr_start_date:20!null fi_revenue:21!null fi_net_earn:22!null fi_basic_eps:23!null fi_dilut_eps:24!null fi_margin:25!null fi_inventory:26!null fi_assets:27!null fi_liability:28!null fi_out_basic:29!null fi_out_dilut:30!null
      ├── immutable
      ├── key: (18,19)
      ├── fd: ()-->(17), (18,19)-->(20-30), (20)-->(50)
      ├── scan financial
      │    ├── columns: fi_co_id:17!null fi_year:18!null fi_qtr:19!null fi_qtr_start_date:20!null fi_revenue:21!null fi_net_earn:22!null fi_basic_eps:23!null fi_dilut_eps:24!null fi_margin:25!null fi_inventory:26!null fi_assets:27!null fi_liability:28!null fi_out_basic:29!null fi_out_dilut:30!null
      │    ├── constraint: /17/18/19: [/0 - /0]
      │    ├── key: (18,19)
      │    └── fd: ()-->(17), (18,19)-->(20-30)
      └── projections
           └── case [as=fi_qtr_start_date_new:50, outer=(20), immutable, subquery]
                ├── gt
                │    ├── subquery
                │    │    └── scalar-group-by
                │    │         ├── columns: count_rows:49!null
                │    │         ├── cardinality: [1 - 1]
                │    │         ├── immutable
                │    │         ├── key: ()
                │    │         ├── fd: ()-->(49)
                │    │         ├── select
                │    │         │    ├── columns: fi_co_id:33!null fi_qtr_start_date:36!null
                │    │         │    ├── immutable
                │    │         │    ├── fd: ()-->(33)
                │    │         │    ├── scan financial
                │    │         │    │    ├── columns: fi_co_id:33!null fi_qtr_start_date:36!null
                │    │         │    │    ├── constraint: /33/34/35: [/0 - /0]
                │    │         │    │    └── fd: ()-->(33)
                │    │         │    └── filters
                │    │         │         └── substring(fi_qtr_start_date:36::CHAR(8), 7, 2) = '01' [outer=(36), immutable]
                │    │         └── aggregations
                │    │              └── count-rows [as=count_rows:49]
                │    └── 0
                ├── when
                │    ├── true
                │    └── fi_qtr_start_date:20 + 1
                └── fi_qtr_start_date:20 - 1

# Q15
opt
UPDATE
  news_item
SET
  ni_dts = ni_dts + INTERVAL '1 day'
WHERE
  ni_id = (
            SELECT
              nx_ni_id
            FROM
              news_xref
            WHERE
              nx_co_id = 0
          )
----
update news_item
 ├── columns: <none>
 ├── fetch columns: ni_id:10 ni_headline:11 ni_summary:12 ni_dts:14 ni_source:15 ni_author:16
 ├── update-mapping:
 │    └── ni_dts_new:23 => ni_dts:5
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: ni_dts_new:23!null ni_id:10!null ni_headline:11!null ni_summary:12!null ni_dts:14!null ni_source:15!null ni_author:16
      ├── immutable
      ├── key: (10)
      ├── fd: (10)-->(11,12,14-16), (14)-->(23)
      ├── select
      │    ├── columns: ni_id:10!null ni_headline:11!null ni_summary:12!null ni_dts:14!null ni_source:15!null ni_author:16
      │    ├── key: (10)
      │    ├── fd: (10)-->(11,12,14-16)
      │    ├── scan news_item
      │    │    ├── columns: ni_id:10!null ni_headline:11!null ni_summary:12!null ni_dts:14!null ni_source:15!null ni_author:16
      │    │    ├── key: (10)
      │    │    └── fd: (10)-->(11,12,14-16)
      │    └── filters
      │         └── eq [outer=(10), subquery, constraints=(/10: (/NULL - ])]
      │              ├── ni_id:10
      │              └── subquery
      │                   └── max1-row
      │                        ├── columns: nx_ni_id:19!null
      │                        ├── error: "more than one row returned by a subquery used as an expression"
      │                        ├── cardinality: [0 - 1]
      │                        ├── key: ()
      │                        ├── fd: ()-->(19)
      │                        └── project
      │                             ├── columns: nx_ni_id:19!null
      │                             ├── key: (19)
      │                             └── select
      │                                  ├── columns: nx_ni_id:19!null nx_co_id:20!null
      │                                  ├── key: (19)
      │                                  ├── fd: ()-->(20)
      │                                  ├── scan news_xref
      │                                  │    ├── columns: nx_ni_id:19!null nx_co_id:20!null
      │                                  │    └── key: (19,20)
      │                                  └── filters
      │                                       └── nx_co_id:20 = 0 [outer=(20), constraints=(/20: [/0 - /0]; tight), fd=()-->(20)]
      └── projections
           └── ni_dts:14 + '1 day' [as=ni_dts_new:23, outer=(14), immutable]

# Q16
opt
UPDATE security
   SET s_exch_date = s_exch_date + INTEGER '1'
 WHERE s_symb = 'SYMB'
----
update security
 ├── columns: <none>
 ├── fetch columns: s_symb:19 s_issue:20 s_st_id:21 s_name:22 s_ex_id:23 s_co_id:24 s_num_out:25 s_start_date:26 s_exch_date:27 s_pe:28 s_52wk_high:29 s_52wk_high_date:30 s_52wk_low:31 s_52wk_low_date:32 s_dividend:33 s_yield:34
 ├── update-mapping:
 │    └── s_exch_date_new:37 => s_exch_date:9
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: s_exch_date_new:37!null s_symb:19!null s_issue:20!null s_st_id:21!null s_name:22!null s_ex_id:23!null s_co_id:24!null s_num_out:25!null s_start_date:26!null s_exch_date:27!null s_pe:28!null s_52wk_high:29!null s_52wk_high_date:30!null s_52wk_low:31!null s_52wk_low_date:32!null s_dividend:33!null s_yield:34!null
      ├── cardinality: [0 - 1]
      ├── immutable
      ├── key: ()
      ├── fd: ()-->(19-34,37)
      ├── scan security
      │    ├── columns: s_symb:19!null s_issue:20!null s_st_id:21!null s_name:22!null s_ex_id:23!null s_co_id:24!null s_num_out:25!null s_start_date:26!null s_exch_date:27!null s_pe:28!null s_52wk_high:29!null s_52wk_high_date:30!null s_52wk_low:31!null s_52wk_low_date:32!null s_dividend:33!null s_yield:34!null
      │    ├── constraint: /19: [/'SYMB' - /'SYMB']
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(19-34)
      └── projections
           └── s_exch_date:27 + 1 [as=s_exch_date_new:37, outer=(27), immutable]

# Q17
opt
UPDATE
  taxrate
SET
  tx_name = IF (
      (
        SELECT tx_name
        FROM taxrate
        WHERE tx_id = 'US12'
      ) LIKE '% Tax %',
      replace(tx_name, ' TAX ', ' tax '),
      replace(tx_name, ' tax ', ' Tax ')
  )
WHERE tx_id = 'US12'
----
update taxrate
 ├── columns: <none>
 ├── fetch columns: tx_id:6 tx_name:7 tx_rate:8
 ├── update-mapping:
 │    └── tx_name_new:16 => tx_name:2
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── project
      ├── columns: tx_name_new:16 tx_id:6!null tx_name:7!null tx_rate:8!null
      ├── cardinality: [0 - 1]
      ├── immutable
      ├── key: ()
      ├── fd: ()-->(6-8,16)
      ├── scan taxrate
      │    ├── columns: tx_id:6!null tx_name:7!null tx_rate:8!null
      │    ├── constraint: /6: [/'US12' - /'US12']
      │    ├── cardinality: [0 - 1]
      │    ├── key: ()
      │    └── fd: ()-->(6-8)
      └── projections
           └── case [as=tx_name_new:16, outer=(7), immutable, subquery]
                ├── like
                │    ├── subquery
                │    │    └── project
                │    │         ├── columns: tx_name:12!null
                │    │         ├── cardinality: [0 - 1]
                │    │         ├── key: ()
                │    │         ├── fd: ()-->(12)
                │    │         └── scan taxrate
                │    │              ├── columns: tx_id:11!null tx_name:12!null
                │    │              ├── constraint: /11: [/'US12' - /'US12']
                │    │              ├── cardinality: [0 - 1]
                │    │              ├── key: ()
                │    │              └── fd: ()-->(11,12)
                │    └── '% Tax %'
                ├── when
                │    ├── true
                │    └── replace(tx_name:7, ' TAX ', ' tax ')
                └── replace(tx_name:7, ' tax ', ' Tax ')

# Q18
opt
SELECT wi_s_symb
FROM (
  SELECT ORDINALITY AS rownum, wi_s_symb
  FROM watch_item, watch_list
  WITH ORDINALITY
  WHERE wl_c_id = 0 and wi_wl_id = wl_id
  ORDER BY wi_s_symb asc
)
WHERE rownum = (
     SELECT count(*)
     FROM watch_item, watch_list
     WHERE wl_c_id = 0 AND wi_wl_id = wl_id
)
----
project
 ├── columns: wi_s_symb:2!null
 └── inner-join (lookup watch_item)
      ├── columns: wi_wl_id:1!null wi_s_symb:2!null wl_id:5!null wl_c_id:6!null ordinality:9!null
      ├── key columns: [5] = [1]
      ├── key: (2,5)
      ├── fd: ()-->(6), (5)-->(9), (9)-->(5), (1)==(5), (5)==(1)
      ├── select
      │    ├── columns: wl_id:5!null wl_c_id:6!null ordinality:9!null
      │    ├── key: (5)
      │    ├── fd: ()-->(6), (5)-->(9), (9)-->(5)
      │    ├── ordinality
      │    │    ├── columns: wl_id:5!null wl_c_id:6!null ordinality:9!null
      │    │    ├── key: (5)
      │    │    ├── fd: (5)-->(6,9), (9)-->(5,6)
      │    │    └── scan watch_list
      │    │         ├── columns: wl_id:5!null wl_c_id:6!null
      │    │         ├── key: (5)
      │    │         └── fd: (5)-->(6)
      │    └── filters
      │         ├── wl_c_id:6 = 0 [outer=(6), constraints=(/6: [/0 - /0]; tight), fd=()-->(6)]
      │         └── eq [outer=(9), subquery, constraints=(/9: (/NULL - ])]
      │              ├── ordinality:9
      │              └── subquery
      │                   └── scalar-group-by
      │                        ├── columns: count_rows:18!null
      │                        ├── cardinality: [1 - 1]
      │                        ├── key: ()
      │                        ├── fd: ()-->(18)
      │                        ├── inner-join (lookup watch_item)
      │                        │    ├── columns: wi_wl_id:10!null wl_id:14!null wl_c_id:15!null
      │                        │    ├── key columns: [14] = [10]
      │                        │    ├── fd: ()-->(15), (10)==(14), (14)==(10)
      │                        │    ├── select
      │                        │    │    ├── columns: wl_id:14!null wl_c_id:15!null
      │                        │    │    ├── key: (14)
      │                        │    │    ├── fd: ()-->(15)
      │                        │    │    ├── scan watch_list
      │                        │    │    │    ├── columns: wl_id:14!null wl_c_id:15!null
      │                        │    │    │    ├── key: (14)
      │                        │    │    │    └── fd: (14)-->(15)
      │                        │    │    └── filters
      │                        │    │         └── wl_c_id:15 = 0 [outer=(15), constraints=(/15: [/0 - /0]; tight), fd=()-->(15)]
      │                        │    └── filters (true)
      │                        └── aggregations
      │                             └── count-rows [as=count_rows:18]
      └── filters (true)

# Q19
opt
SELECT s_symb
FROM security
WHERE
  s_symb > 'SYMB' AND
  s_symb NOT IN (
       SELECT wi_s_symb
       FROM watch_item, watch_list
       WHERE wl_c_id = 0 AND wi_wl_id = wl_id
  )
ORDER BY s_symb ASC
LIMIT 1
----
limit
 ├── columns: s_symb:1!null
 ├── internal-ordering: +1
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(1)
 ├── anti-join (merge)
 │    ├── columns: s_symb:1!null
 │    ├── left ordering: +1
 │    ├── right ordering: +20
 │    ├── key: (1)
 │    ├── ordering: +1
 │    ├── limit hint: 1.00
 │    ├── scan security
 │    │    ├── columns: s_symb:1!null
 │    │    ├── constraint: /1: [/e'SYMB\x00' - ]
 │    │    ├── key: (1)
 │    │    └── ordering: +1
 │    ├── sort
 │    │    ├── columns: wi_wl_id:19!null wi_s_symb:20!null wl_id:23!null wl_c_id:24!null
 │    │    ├── key: (20,23)
 │    │    ├── fd: ()-->(24), (19)==(23), (23)==(19)
 │    │    ├── ordering: +20 opt(24) [actual: +20]
 │    │    └── inner-join (lookup watch_item)
 │    │         ├── columns: wi_wl_id:19!null wi_s_symb:20!null wl_id:23!null wl_c_id:24!null
 │    │         ├── lookup expression
 │    │         │    └── filters
 │    │         │         ├── wi_wl_id:19 = wl_id:23 [outer=(19,23), constraints=(/19: (/NULL - ]; /23: (/NULL - ]), fd=(19)==(23), (23)==(19)]
 │    │         │         └── wi_s_symb:20 > 'SYMB' [outer=(20), constraints=(/20: [/e'SYMB\x00' - ]; tight)]
 │    │         ├── key: (20,23)
 │    │         ├── fd: ()-->(24), (19)==(23), (23)==(19)
 │    │         ├── select
 │    │         │    ├── columns: wl_id:23!null wl_c_id:24!null
 │    │         │    ├── key: (23)
 │    │         │    ├── fd: ()-->(24)
 │    │         │    ├── scan watch_list
 │    │         │    │    ├── columns: wl_id:23!null wl_c_id:24!null
 │    │         │    │    ├── key: (23)
 │    │         │    │    └── fd: (23)-->(24)
 │    │         │    └── filters
 │    │         │         └── wl_c_id:24 = 0 [outer=(24), constraints=(/24: [/0 - /0]; tight), fd=()-->(24)]
 │    │         └── filters (true)
 │    └── filters (true)
 └── 1

# Q20
opt
UPDATE watch_item
   SET wi_s_symb = 'SYMB'
  FROM watch_list
 WHERE wl_c_id = 0 and wi_wl_id = wl_id and wi_s_symb = 'SYMB'
----
update watch_item
 ├── columns: <none>
 ├── fetch columns: wi_wl_id:5 watch_item.wi_s_symb:6
 ├── update-mapping:
 │    └── wi_s_symb_new:13 => watch_item.wi_s_symb:2
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── project
 │    ├── columns: wi_s_symb_new:13!null wi_wl_id:5!null watch_item.wi_s_symb:6!null wl_id:9!null wl_c_id:10!null watch_list.crdb_internal_mvcc_timestamp:11 watch_list.tableoid:12
 │    ├── key: (9)
 │    ├── fd: ()-->(6,10,13), (9)-->(11,12), (5)==(9), (9)==(5)
 │    ├── inner-join (lookup watch_list)
 │    │    ├── columns: wi_wl_id:5!null watch_item.wi_s_symb:6!null wl_id:9!null wl_c_id:10!null watch_list.crdb_internal_mvcc_timestamp:11 watch_list.tableoid:12
 │    │    ├── key columns: [5] = [9]
 │    │    ├── lookup columns are key
 │    │    ├── key: (9)
 │    │    ├── fd: ()-->(6,10), (9)-->(11,12), (5)==(9), (9)==(5)
 │    │    ├── select
 │    │    │    ├── columns: wi_wl_id:5!null watch_item.wi_s_symb:6!null
 │    │    │    ├── key: (5)
 │    │    │    ├── fd: ()-->(6)
 │    │    │    ├── scan watch_item
 │    │    │    │    ├── columns: wi_wl_id:5!null watch_item.wi_s_symb:6!null
 │    │    │    │    └── key: (5,6)
 │    │    │    └── filters
 │    │    │         └── watch_item.wi_s_symb:6 = 'SYMB' [outer=(6), constraints=(/6: [/'SYMB' - /'SYMB']; tight), fd=()-->(6)]
 │    │    └── filters
 │    │         └── wl_c_id:10 = 0 [outer=(10), constraints=(/10: [/0 - /0]; tight), fd=()-->(10)]
 │    └── projections
 │         └── 'SYMB' [as=wi_s_symb_new:13]
 └── f-k-checks
      └── f-k-checks-item: watch_item(wi_s_symb) -> security(s_symb)
           └── anti-join (lookup security)
                ├── columns: wi_s_symb:14!null
                ├── key columns: [14] = [15]
                ├── lookup columns are key
                ├── fd: ()-->(14)
                ├── with-scan &1
                │    ├── columns: wi_s_symb:14!null
                │    ├── mapping:
                │    │    └──  wi_s_symb_new:13 => wi_s_symb:14
                │    └── fd: ()-->(14)
                └── filters (true)

# --------------------------------------------------
# T12
# Trade-Cleanup
# Cancel any pending or submitted trades from the database.
# --------------------------------------------------

# Q1
opt
SELECT tr_t_id FROM trade_request ORDER BY tr_t_id
----
scan trade_request
 ├── columns: tr_t_id:1!null
 ├── check constraint expressions
 │    ├── tr_qty:4 > 0 [outer=(4), constraints=(/4: [/1 - ]; tight)]
 │    └── tr_bid_price:5 > 0 [outer=(5), immutable, constraints=(/5: (/0 - ]; tight)]
 ├── key: (1)
 └── ordering: +1

# Q2
opt
INSERT INTO trade_history (th_t_id, th_dts, th_st_id)
VALUES (0, '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP, 'SBMT')
----
insert trade_history
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:6 => trade_history.th_t_id:1
 │    ├── column2:7 => th_dts:2
 │    └── column3:8 => trade_history.th_st_id:3
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── values
 │    ├── columns: column1:6!null column2:7!null column3:8!null
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(6-8)
 │    └── (0, '2020-06-17 22:27:42.148484', 'SBMT')
 └── f-k-checks
      ├── f-k-checks-item: trade_history(th_t_id) -> trade(t_id)
      │    └── anti-join (lookup trade)
      │         ├── columns: th_t_id:9!null
      │         ├── key columns: [9] = [10]
      │         ├── lookup columns are key
      │         ├── cardinality: [0 - 1]
      │         ├── key: ()
      │         ├── fd: ()-->(9)
      │         ├── with-scan &1
      │         │    ├── columns: th_t_id:9!null
      │         │    ├── mapping:
      │         │    │    └──  column1:6 => th_t_id:9
      │         │    ├── cardinality: [1 - 1]
      │         │    ├── key: ()
      │         │    └── fd: ()-->(9)
      │         └── filters (true)
      └── f-k-checks-item: trade_history(th_st_id) -> status_type(st_id)
           └── anti-join (lookup status_type)
                ├── columns: th_st_id:27!null
                ├── key columns: [27] = [28]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(27)
                ├── with-scan &1
                │    ├── columns: th_st_id:27!null
                │    ├── mapping:
                │    │    └──  column3:8 => th_st_id:27
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(27)
                └── filters (true)

# Q3
opt
UPDATE trade
SET t_st_id = 'SBMT', t_dts = '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP
WHERE t_id = 0
----
update trade
 ├── columns: <none>
 ├── fetch columns: t_id:18 t_dts:19 trade.t_st_id:20 t_tt_id:21 t_is_cash:22 t_s_symb:23 t_qty:24 t_bid_price:25 t_ca_id:26 t_exec_name:27 t_trade_price:28 t_chrg:29 t_comm:30 t_tax:31 t_lifo:32
 ├── update-mapping:
 │    ├── t_dts_new:36 => t_dts:2
 │    └── t_st_id_new:35 => trade.t_st_id:3
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── project
 │    ├── columns: t_st_id_new:35!null t_dts_new:36!null t_id:18!null t_dts:19!null trade.t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(18-32,35,36)
 │    ├── scan trade
 │    │    ├── columns: t_id:18!null t_dts:19!null trade.t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
 │    │    ├── constraint: /18: [/0 - /0]
 │    │    ├── cardinality: [0 - 1]
 │    │    ├── key: ()
 │    │    └── fd: ()-->(18-32)
 │    └── projections
 │         ├── 'SBMT' [as=t_st_id_new:35]
 │         └── '2020-06-17 22:27:42.148484' [as=t_dts_new:36]
 └── f-k-checks
      └── f-k-checks-item: trade(t_st_id) -> status_type(st_id)
           └── anti-join (lookup status_type)
                ├── columns: t_st_id:42!null
                ├── key columns: [42] = [43]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(42)
                ├── with-scan &1
                │    ├── columns: t_st_id:42!null
                │    ├── mapping:
                │    │    └──  t_st_id_new:35 => t_st_id:42
                │    ├── cardinality: [0 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(42)
                └── filters (true)

# Q4
opt
DELETE FROM trade_request WHERE true
----
delete trade_request
 ├── columns: <none>
 ├── fetch columns: tr_t_id:9 tr_s_symb:11 tr_b_id:14
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── scan trade_request@secondary
      ├── columns: tr_t_id:9!null tr_s_symb:11!null tr_b_id:14!null
      ├── key: (9)
      └── fd: (9)-->(11,14)

# Q5
opt
SELECT t_id FROM trade WHERE t_id > 0 AND t_st_id = 'SBMT'
----
project
 ├── columns: t_id:1!null
 ├── key: (1)
 └── select
      ├── columns: t_id:1!null t_st_id:3!null
      ├── key: (1)
      ├── fd: ()-->(3)
      ├── scan trade
      │    ├── columns: t_id:1!null t_st_id:3!null
      │    ├── constraint: /1: [/1 - ]
      │    ├── key: (1)
      │    └── fd: (1)-->(3)
      └── filters
           └── t_st_id:3 = 'SBMT' [outer=(3), constraints=(/3: [/'SBMT' - /'SBMT']; tight), fd=()-->(3)]

# Q6
opt
UPDATE trade
SET t_st_id = 'CNCL', t_dts = '2020-06-17 22:27:42.148484+00:00'::TIMESTAMP
WHERE t_id = 0
----
update trade
 ├── columns: <none>
 ├── fetch columns: t_id:18 t_dts:19 trade.t_st_id:20 t_tt_id:21 t_is_cash:22 t_s_symb:23 t_qty:24 t_bid_price:25 t_ca_id:26 t_exec_name:27 t_trade_price:28 t_chrg:29 t_comm:30 t_tax:31 t_lifo:32
 ├── update-mapping:
 │    ├── t_dts_new:36 => t_dts:2
 │    └── t_st_id_new:35 => trade.t_st_id:3
 ├── input binding: &1
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 ├── project
 │    ├── columns: t_st_id_new:35!null t_dts_new:36!null t_id:18!null t_dts:19!null trade.t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
 │    ├── cardinality: [0 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(18-32,35,36)
 │    ├── scan trade
 │    │    ├── columns: t_id:18!null t_dts:19!null trade.t_st_id:20!null t_tt_id:21!null t_is_cash:22!null t_s_symb:23!null t_qty:24!null t_bid_price:25 t_ca_id:26!null t_exec_name:27!null t_trade_price:28 t_chrg:29!null t_comm:30!null t_tax:31!null t_lifo:32!null
 │    │    ├── constraint: /18: [/0 - /0]
 │    │    ├── cardinality: [0 - 1]
 │    │    ├── key: ()
 │    │    └── fd: ()-->(18-32)
 │    └── projections
 │         ├── 'CNCL' [as=t_st_id_new:35]
 │         └── '2020-06-17 22:27:42.148484' [as=t_dts_new:36]
 └── f-k-checks
      └── f-k-checks-item: trade(t_st_id) -> status_type(st_id)
           └── anti-join (lookup status_type)
                ├── columns: t_st_id:42!null
                ├── key columns: [42] = [43]
                ├── lookup columns are key
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(42)
                ├── with-scan &1
                │    ├── columns: t_st_id:42!null
                │    ├── mapping:
                │    │    └──  t_st_id_new:35 => t_st_id:42
                │    ├── cardinality: [0 - 1]
                │    ├── key: ()
                │    └── fd: ()-->(42)
                └── filters (true)
