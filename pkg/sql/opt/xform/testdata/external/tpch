exec-ddl
CREATE TABLE public.region
(
    r_regionkey int PRIMARY KEY,
    r_name char(25),
    r_comment varchar(152)
);
----
TABLE region
 ├── r_regionkey int not null
 ├── r_name string
 ├── r_comment string
 └── INDEX primary
      └── r_regionkey int not null

exec-ddl
CREATE TABLE public.nation
(
    n_nationkey int PRIMARY KEY,
    n_name char(25),
    n_regionkey int NOT NULL,
    n_comment varchar(152),
    CONSTRAINT nation_fkey_region FOREIGN KEY (n_regionkey) references public.region (r_regionkey)
);
----
TABLE nation
 ├── n_nationkey int not null
 ├── n_name string
 ├── n_regionkey int not null
 ├── n_comment string
 └── INDEX primary
      └── n_nationkey int not null

exec-ddl
CREATE TABLE public.supplier
(
    s_suppkey int PRIMARY KEY,
    s_name char(25),
    s_address varchar(40),
    s_nationkey int NOT NULL,
    s_phone char(15),
    s_acctbal float,
    s_comment varchar(101),
    CONSTRAINT supplier_fkey_nation FOREIGN KEY (s_nationkey) references public.nation (n_nationkey)
);
----
TABLE supplier
 ├── s_suppkey int not null
 ├── s_name string
 ├── s_address string
 ├── s_nationkey int not null
 ├── s_phone string
 ├── s_acctbal float
 ├── s_comment string
 └── INDEX primary
      └── s_suppkey int not null

exec-ddl
CREATE TABLE public.part
(
    p_partkey int PRIMARY KEY,
    p_name varchar(55),
    p_mfgr char(25),
    p_brand char(10),
    p_type varchar(25),
    p_size int,
    p_container char(10),
    p_retailprice float,
    p_comment varchar(23)
);
----
TABLE part
 ├── p_partkey int not null
 ├── p_name string
 ├── p_mfgr string
 ├── p_brand string
 ├── p_type string
 ├── p_size int
 ├── p_container string
 ├── p_retailprice float
 ├── p_comment string
 └── INDEX primary
      └── p_partkey int not null

exec-ddl
CREATE TABLE public.partsupp
(
    ps_partkey int NOT NULL,
    ps_suppkey int NOT NULL,
    ps_availqty int,
    ps_supplycost float,
    ps_comment varchar(199),
    PRIMARY KEY (ps_partkey, ps_suppkey),
    CONSTRAINT partsupp_fkey_part FOREIGN KEY (ps_partkey) references public.part (p_partkey),
    CONSTRAINT partsupp_fkey_supplier FOREIGN KEY (ps_suppkey) references public.supplier (s_suppkey)
);
----
TABLE partsupp
 ├── ps_partkey int not null
 ├── ps_suppkey int not null
 ├── ps_availqty int
 ├── ps_supplycost float
 ├── ps_comment string
 └── INDEX primary
      ├── ps_partkey int not null
      └── ps_suppkey int not null

exec-ddl
CREATE TABLE public.customer
(
    c_custkey int PRIMARY KEY,
    c_name varchar(25),
    c_address varchar(40),
    c_nationkey int NOT NULL,
    c_phone char(15),
    c_acctbal float,
    c_mktsegment char(10),
    c_comment varchar(117),
    CONSTRAINT customer_fkey_nation FOREIGN KEY (c_nationkey) references public.nation (n_nationkey)
);
----
TABLE customer
 ├── c_custkey int not null
 ├── c_name string
 ├── c_address string
 ├── c_nationkey int not null
 ├── c_phone string
 ├── c_acctbal float
 ├── c_mktsegment string
 ├── c_comment string
 └── INDEX primary
      └── c_custkey int not null

exec-ddl
CREATE TABLE public.orders
(
    o_orderkey int PRIMARY KEY,
    o_custkey int NOT NULL,
    o_orderstatus char(1),
    o_totalprice float,
    o_orderdate date,
    o_orderpriority char(15),
    o_clerk char(15),
    o_shippriority int,
    o_comment varchar(79),
    CONSTRAINT orders_fkey_customer FOREIGN KEY (o_custkey) references public.customer (c_custkey)
);
----
TABLE orders
 ├── o_orderkey int not null
 ├── o_custkey int not null
 ├── o_orderstatus string
 ├── o_totalprice float
 ├── o_orderdate date
 ├── o_orderpriority string
 ├── o_clerk string
 ├── o_shippriority int
 ├── o_comment string
 └── INDEX primary
      └── o_orderkey int not null

exec-ddl
CREATE TABLE public.lineitem
(
    l_orderkey int NOT NULL,
    l_partkey int NOT NULL,
    l_suppkey int NOT NULL,
    l_linenumber int NOT NULL,
    l_quantity float,
    l_extendedprice float,
    l_discount float,
    l_tax float,
    l_returnflag char(1),
    l_linestatus char(1),
    l_shipdate date,
    l_commitdate date,
    l_receiptdate date,
    l_shipinstruct char(25),
    l_shipmode char(10),
    l_comment varchar(44),
    PRIMARY KEY (l_orderkey, l_linenumber),
    CONSTRAINT lineitem_fkey_orders FOREIGN KEY (l_orderkey) references public.orders (o_orderkey),
    CONSTRAINT lineitem_fkey_part FOREIGN KEY (l_partkey) references public.part (p_partkey),
    CONSTRAINT lineitem_fkey_supplier FOREIGN KEY (l_suppkey) references public.supplier (s_suppkey),
    CONSTRAINT lineitem_fkey_partsupp FOREIGN KEY (l_partkey, l_suppkey) references public.partsupp (ps_partkey, ps_suppkey)
);
----
TABLE lineitem
 ├── l_orderkey int not null
 ├── l_partkey int not null
 ├── l_suppkey int not null
 ├── l_linenumber int not null
 ├── l_quantity float
 ├── l_extendedprice float
 ├── l_discount float
 ├── l_tax float
 ├── l_returnflag string
 ├── l_linestatus string
 ├── l_shipdate date
 ├── l_commitdate date
 ├── l_receiptdate date
 ├── l_shipinstruct string
 ├── l_shipmode string
 ├── l_comment string
 └── INDEX primary
      ├── l_orderkey int not null
      └── l_linenumber int not null

# --------------------------------------------------
# Q1
# Pricing Summary Report
# Reports the amount of business that was billed, shipped, and returned.
#
# Provides a summary pricing report for all lineitems shipped as of a given
# date. The date is within 60 - 120 days of the greatest ship date contained in
# the database. The query lists totals for extended price, discounted extended
# price, discounted extended price plus tax, average quantity, average extended
# price, and average discount. These aggregates are grouped by RETURNFLAG and
# LINESTATUS, and listed in ascending order of RETURNFLAG and LINESTATUS. A
# count of the number of lineitems in each group is included.
# --------------------------------------------------
opt
SELECT
    l_returnflag,
    l_linestatus,
    sum(l_quantity) AS sum_qty,
    sum(l_extendedprice) AS sum_base_price,
    sum(l_extendedprice * (1 - l_discount)) AS sum_disc_price,
    sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) AS sum_charge,
    avg(l_quantity) AS avg_qty,
    avg(l_extendedprice) AS avg_price,
    avg(l_discount) AS avg_disc,
    count(*) AS count_order
FROM
    lineitem
WHERE
    l_shipdate <= DATE '1998-12-01' - INTERVAL '90' DAY
GROUP BY
    l_returnflag,
    l_linestatus
ORDER BY
    l_returnflag,
    l_linestatus;
----
sort
 ├── columns: l_returnflag:9(string) l_linestatus:10(string) sum_qty:17(float) sum_base_price:18(float) sum_disc_price:20(float) sum_charge:22(float) avg_qty:23(float) avg_price:24(float) avg_disc:25(float) count_order:26(int)
 ├── key: (9,10)
 ├── fd: (9,10)-->(17,18,20,22-26)
 ├── ordering: +9,+10
 └── group-by
      ├── columns: l_returnflag:9(string) l_linestatus:10(string) sum_qty:17(float) sum_base_price:18(float) sum_disc_price:20(float) sum_charge:22(float) avg_qty:23(float) avg_price:24(float) avg_disc:25(float) count_order:26(int)
      ├── grouping columns: l_returnflag:9(string) l_linestatus:10(string)
      ├── key: (9,10)
      ├── fd: (9,10)-->(17,18,20,22-26)
      ├── project
      │    ├── columns: column19:19(float) column21:21(float) l_quantity:5(float) l_extendedprice:6(float) l_discount:7(float) l_returnflag:9(string) l_linestatus:10(string)
      │    ├── fd: (6,7)-->(19)
      │    ├── select
      │    │    ├── columns: l_quantity:5(float) l_extendedprice:6(float) l_discount:7(float) l_tax:8(float) l_returnflag:9(string) l_linestatus:10(string) l_shipdate:11(date!null)
      │    │    ├── scan lineitem
      │    │    │    └── columns: l_quantity:5(float) l_extendedprice:6(float) l_discount:7(float) l_tax:8(float) l_returnflag:9(string) l_linestatus:10(string) l_shipdate:11(date)
      │    │    └── filters [type=bool, outer=(11), constraints=(/11: (/NULL - ])]
      │    │         └── lineitem.l_shipdate <= ('1998-12-01' - '90d') [type=bool, outer=(11), constraints=(/11: (/NULL - ])]
      │    └── projections [outer=(5-10)]
      │         ├── lineitem.l_extendedprice * (1.0 - lineitem.l_discount) [type=float, outer=(6,7)]
      │         └── (lineitem.l_extendedprice * (1.0 - lineitem.l_discount)) * (lineitem.l_tax + 1.0) [type=float, outer=(6-8)]
      └── aggregations [outer=(5-7,19,21)]
           ├── sum [type=float, outer=(5)]
           │    └── variable: lineitem.l_quantity [type=float, outer=(5)]
           ├── sum [type=float, outer=(6)]
           │    └── variable: lineitem.l_extendedprice [type=float, outer=(6)]
           ├── sum [type=float, outer=(19)]
           │    └── variable: column19 [type=float, outer=(19)]
           ├── sum [type=float, outer=(21)]
           │    └── variable: column21 [type=float, outer=(21)]
           ├── avg [type=float, outer=(5)]
           │    └── variable: lineitem.l_quantity [type=float, outer=(5)]
           ├── avg [type=float, outer=(6)]
           │    └── variable: lineitem.l_extendedprice [type=float, outer=(6)]
           ├── avg [type=float, outer=(7)]
           │    └── variable: lineitem.l_discount [type=float, outer=(7)]
           └── count-rows [type=int]

# --------------------------------------------------
# Q2
# Minimum Cost Supplier
# Finds which supplier should be selected to place an order for a given part in
# a given region.
#
# Finds, in a given region, for each part of a certain type and size, the
# supplier who can supply it at minimum cost. If several suppliers in that
# region offer the desired part type and size at the same (minimum) cost, the
# query lists the parts from suppliers with the 100 highest account balances.
# For each supplier, the query lists the supplier's account balance, name and
# nation; the part's number and manufacturer; the supplier's address, phone
# number and comment information.
#
# TODO:
#   1. Join ordering
#   2. Push down equivalent column comparisons
#   3. Allow Select to be pushed below RowNumber used to add key column
#   4. Add decorrelation rule for RowNumber/RowKey
# --------------------------------------------------
opt
SELECT
    s_acctbal,
    s_name,
    n_name,
    p_partkey,
    p_mfgr,
    s_address,
    s_phone,
    s_comment
FROM
    part,
    supplier,
    partsupp,
    nation,
    region
WHERE
    p_partkey = ps_partkey
    AND s_suppkey = ps_suppkey
    AND p_size = 15
    AND p_type LIKE '%BRASS'
    AND s_nationkey = n_nationkey
    AND n_regionkey = r_regionkey
    AND r_name = 'EUROPE'
    AND ps_supplycost = (
        SELECT
            min(ps_supplycost)
        FROM
            partsupp,
            supplier,
            nation,
            region
        WHERE
            p_partkey = ps_partkey
            AND s_suppkey = ps_suppkey
            AND s_nationkey = n_nationkey
            AND n_regionkey = r_regionkey
            AND r_name = 'EUROPE'
    )
ORDER BY
    s_acctbal DESC,
    n_name,
    s_name,
    p_partkey
LIMIT 100;
----
project
 ├── columns: s_acctbal:15(float) s_name:11(string) n_name:23(string) p_partkey:1(int) p_mfgr:3(string) s_address:12(string) s_phone:14(string) s_comment:16(string)
 ├── cardinality: [0 - 100]
 ├── fd: (1)-->(3)
 ├── ordering: -15,+23,+11,+1
 └── limit
      ├── columns: p_partkey:1(int) p_mfgr:3(string) supplier.s_name:11(string) supplier.s_address:12(string) supplier.s_nationkey:13(int!null) supplier.s_phone:14(string) supplier.s_acctbal:15(float) supplier.s_comment:16(string) nation.n_nationkey:22(int!null) nation.n_name:23(string) nation.n_regionkey:24(int!null) region.r_regionkey:26(int!null) region.r_name:27(string!null)
      ├── cardinality: [0 - 100]
      ├── fd: ()-->(27), (1)-->(3), (22)-->(23,24), (13)==(22), (22)==(13), (24)==(26), (26)==(24)
      ├── ordering: -15,+23,+11,+1 opt(27)
      ├── sort
      │    ├── columns: p_partkey:1(int) p_mfgr:3(string) supplier.s_name:11(string) supplier.s_address:12(string) supplier.s_nationkey:13(int!null) supplier.s_phone:14(string) supplier.s_acctbal:15(float) supplier.s_comment:16(string) nation.n_nationkey:22(int!null) nation.n_name:23(string) nation.n_regionkey:24(int!null) region.r_regionkey:26(int!null) region.r_name:27(string!null)
      │    ├── fd: ()-->(27), (1)-->(3), (22)-->(23,24), (13)==(22), (22)==(13), (24)==(26), (26)==(24)
      │    ├── ordering: -15,+23,+11,+1 opt(27)
      │    └── inner-join
      │         ├── columns: p_partkey:1(int) p_mfgr:3(string) supplier.s_name:11(string) supplier.s_address:12(string) supplier.s_nationkey:13(int!null) supplier.s_phone:14(string) supplier.s_acctbal:15(float) supplier.s_comment:16(string) nation.n_nationkey:22(int!null) nation.n_name:23(string) nation.n_regionkey:24(int!null) region.r_regionkey:26(int!null) region.r_name:27(string!null)
      │         ├── fd: ()-->(27), (1)-->(3), (22)-->(23,24), (13)==(22), (22)==(13), (24)==(26), (26)==(24)
      │         ├── inner-join
      │         │    ├── columns: p_partkey:1(int) p_mfgr:3(string) supplier.s_name:11(string) supplier.s_address:12(string) supplier.s_nationkey:13(int!null) supplier.s_phone:14(string) supplier.s_acctbal:15(float) supplier.s_comment:16(string) nation.n_nationkey:22(int!null) nation.n_name:23(string) nation.n_regionkey:24(int!null)
      │         │    ├── fd: (1)-->(3), (22)-->(23,24), (13)==(22), (22)==(13)
      │         │    ├── scan nation
      │         │    │    ├── columns: nation.n_nationkey:22(int!null) nation.n_name:23(string) nation.n_regionkey:24(int!null)
      │         │    │    ├── key: (22)
      │         │    │    └── fd: (22)-->(23,24)
      │         │    ├── project
      │         │    │    ├── columns: p_partkey:1(int) p_mfgr:3(string) supplier.s_name:11(string) supplier.s_address:12(string) supplier.s_nationkey:13(int) supplier.s_phone:14(string) supplier.s_acctbal:15(float) supplier.s_comment:16(string)
      │         │    │    ├── fd: (1)-->(3)
      │         │    │    └── select
      │         │    │         ├── columns: p_partkey:1(int) p_mfgr:3(string) supplier.s_name:11(string) supplier.s_address:12(string) supplier.s_nationkey:13(int) supplier.s_phone:14(string) supplier.s_acctbal:15(float) supplier.s_comment:16(string) partsupp.ps_partkey:17(int!null) partsupp.ps_suppkey:18(int!null) partsupp.ps_supplycost:20(float!null) min:48(float!null)
      │         │    │         ├── key: (17,18)
      │         │    │         ├── fd: (1)-->(3), (17,18)-->(1,3,11-16,20,48), (1)==(17), (17)==(1), (18)-->(11-16), (20)==(48), (48)==(20)
      │         │    │         ├── group-by
      │         │    │         │    ├── columns: p_partkey:1(int) p_mfgr:3(string) supplier.s_name:11(string) supplier.s_address:12(string) supplier.s_nationkey:13(int) supplier.s_phone:14(string) supplier.s_acctbal:15(float) supplier.s_comment:16(string) partsupp.ps_partkey:17(int!null) partsupp.ps_suppkey:18(int!null) partsupp.ps_supplycost:20(float) min:48(float)
      │         │    │         │    ├── grouping columns: partsupp.ps_partkey:17(int!null) partsupp.ps_suppkey:18(int!null)
      │         │    │         │    ├── key: (17,18)
      │         │    │         │    ├── fd: (1)-->(3), (17,18)-->(1,3,11-16,20,48), (1)==(17), (17)==(1), (18)-->(11-16)
      │         │    │         │    ├── inner-join
      │         │    │         │    │    ├── columns: p_partkey:1(int!null) p_mfgr:3(string) p_type:5(string) p_size:6(int!null) supplier.s_suppkey:10(int!null) supplier.s_name:11(string) supplier.s_address:12(string) supplier.s_nationkey:13(int!null) supplier.s_phone:14(string) supplier.s_acctbal:15(float) supplier.s_comment:16(string) partsupp.ps_partkey:17(int!null) partsupp.ps_suppkey:18(int!null) partsupp.ps_supplycost:20(float) partsupp.ps_partkey:29(int!null) partsupp.ps_suppkey:30(int!null) partsupp.ps_supplycost:32(float!null) supplier.s_suppkey:34(int!null) supplier.s_nationkey:37(int!null) nation.n_nationkey:41(int!null) nation.n_regionkey:43(int!null) region.r_regionkey:45(int!null) region.r_name:46(string!null)
      │         │    │         │    │    ├── key: (18,29,34)
      │         │    │         │    │    ├── fd: ()-->(6,46), (1)-->(3,5), (10)-->(11-16), (17,18)-->(20), (29,30)-->(32), (34)-->(37), (30)==(34), (34)==(30), (41)-->(43), (37)==(41), (41)==(37), (43)==(45), (45)==(43), (1)==(17,29), (17)==(1,29), (29)==(1,17), (10)==(18), (18)==(10)
      │         │    │         │    │    ├── inner-join
      │         │    │         │    │    │    ├── columns: partsupp.ps_partkey:17(int!null) partsupp.ps_suppkey:18(int!null) partsupp.ps_supplycost:20(float) partsupp.ps_partkey:29(int!null) partsupp.ps_suppkey:30(int!null) partsupp.ps_supplycost:32(float!null) supplier.s_suppkey:34(int!null) supplier.s_nationkey:37(int!null) nation.n_nationkey:41(int!null) nation.n_regionkey:43(int!null) region.r_regionkey:45(int!null) region.r_name:46(string!null)
      │         │    │         │    │    │    ├── key: (17,18,29,34)
      │         │    │         │    │    │    ├── fd: ()-->(46), (17,18)-->(20), (29,30)-->(32), (34)-->(37), (30)==(34), (34)==(30), (41)-->(43), (37)==(41), (41)==(37), (43)==(45), (45)==(43)
      │         │    │         │    │    │    ├── inner-join
      │         │    │         │    │    │    │    ├── columns: partsupp.ps_partkey:29(int!null) partsupp.ps_suppkey:30(int!null) partsupp.ps_supplycost:32(float!null) supplier.s_suppkey:34(int!null) supplier.s_nationkey:37(int!null) nation.n_nationkey:41(int!null) nation.n_regionkey:43(int!null) region.r_regionkey:45(int!null) region.r_name:46(string!null)
      │         │    │         │    │    │    │    ├── key: (29,34)
      │         │    │         │    │    │    │    ├── fd: ()-->(46), (29,30)-->(32), (34)-->(37), (30)==(34), (34)==(30), (41)-->(43), (37)==(41), (41)==(37), (43)==(45), (45)==(43)
      │         │    │         │    │    │    │    ├── inner-join
      │         │    │         │    │    │    │    │    ├── columns: partsupp.ps_partkey:29(int!null) partsupp.ps_suppkey:30(int!null) partsupp.ps_supplycost:32(float!null) supplier.s_suppkey:34(int!null) supplier.s_nationkey:37(int!null) nation.n_nationkey:41(int!null) nation.n_regionkey:43(int!null)
      │         │    │         │    │    │    │    │    ├── key: (29,34)
      │         │    │         │    │    │    │    │    ├── fd: (29,30)-->(32), (34)-->(37), (30)==(34), (34)==(30), (41)-->(43), (37)==(41), (41)==(37)
      │         │    │         │    │    │    │    │    ├── inner-join
      │         │    │         │    │    │    │    │    │    ├── columns: partsupp.ps_partkey:29(int!null) partsupp.ps_suppkey:30(int!null) partsupp.ps_supplycost:32(float!null) supplier.s_suppkey:34(int!null) supplier.s_nationkey:37(int!null)
      │         │    │         │    │    │    │    │    │    ├── key: (29,34)
      │         │    │         │    │    │    │    │    │    ├── fd: (29,30)-->(32), (34)-->(37), (30)==(34), (34)==(30)
      │         │    │         │    │    │    │    │    │    ├── scan supplier
      │         │    │         │    │    │    │    │    │    │    ├── columns: supplier.s_suppkey:34(int!null) supplier.s_nationkey:37(int!null)
      │         │    │         │    │    │    │    │    │    │    ├── key: (34)
      │         │    │         │    │    │    │    │    │    │    └── fd: (34)-->(37)
      │         │    │         │    │    │    │    │    │    ├── select
      │         │    │         │    │    │    │    │    │    │    ├── columns: partsupp.ps_partkey:29(int!null) partsupp.ps_suppkey:30(int!null) partsupp.ps_supplycost:32(float!null)
      │         │    │         │    │    │    │    │    │    │    ├── key: (29,30)
      │         │    │         │    │    │    │    │    │    │    ├── fd: (29,30)-->(32)
      │         │    │         │    │    │    │    │    │    │    ├── scan partsupp
      │         │    │         │    │    │    │    │    │    │    │    ├── columns: partsupp.ps_partkey:29(int!null) partsupp.ps_suppkey:30(int!null) partsupp.ps_supplycost:32(float)
      │         │    │         │    │    │    │    │    │    │    │    ├── key: (29,30)
      │         │    │         │    │    │    │    │    │    │    │    └── fd: (29,30)-->(32)
      │         │    │         │    │    │    │    │    │    │    └── filters [type=bool, outer=(32), constraints=(/32: (/NULL - ]; tight)]
      │         │    │         │    │    │    │    │    │    │         └── partsupp.ps_supplycost IS NOT NULL [type=bool, outer=(32), constraints=(/32: (/NULL - ]; tight)]
      │         │    │         │    │    │    │    │    │    └── filters [type=bool, outer=(30,34), constraints=(/30: (/NULL - ]; /34: (/NULL - ]), fd=(30)==(34), (34)==(30)]
      │         │    │         │    │    │    │    │    │         └── supplier.s_suppkey = partsupp.ps_suppkey [type=bool, outer=(30,34), constraints=(/30: (/NULL - ]; /34: (/NULL - ])]
      │         │    │         │    │    │    │    │    ├── scan nation
      │         │    │         │    │    │    │    │    │    ├── columns: nation.n_nationkey:41(int!null) nation.n_regionkey:43(int!null)
      │         │    │         │    │    │    │    │    │    ├── key: (41)
      │         │    │         │    │    │    │    │    │    └── fd: (41)-->(43)
      │         │    │         │    │    │    │    │    └── filters [type=bool, outer=(37,41), constraints=(/37: (/NULL - ]; /41: (/NULL - ]), fd=(37)==(41), (41)==(37)]
      │         │    │         │    │    │    │    │         └── supplier.s_nationkey = nation.n_nationkey [type=bool, outer=(37,41), constraints=(/37: (/NULL - ]; /41: (/NULL - ])]
      │         │    │         │    │    │    │    ├── select
      │         │    │         │    │    │    │    │    ├── columns: region.r_regionkey:45(int!null) region.r_name:46(string!null)
      │         │    │         │    │    │    │    │    ├── key: (45)
      │         │    │         │    │    │    │    │    ├── fd: ()-->(46)
      │         │    │         │    │    │    │    │    ├── scan region
      │         │    │         │    │    │    │    │    │    ├── columns: region.r_regionkey:45(int!null) region.r_name:46(string)
      │         │    │         │    │    │    │    │    │    ├── key: (45)
      │         │    │         │    │    │    │    │    │    └── fd: (45)-->(46)
      │         │    │         │    │    │    │    │    └── filters [type=bool, outer=(46), constraints=(/46: [/'EUROPE' - /'EUROPE']; tight), fd=()-->(46)]
      │         │    │         │    │    │    │    │         └── region.r_name = 'EUROPE' [type=bool, outer=(46), constraints=(/46: [/'EUROPE' - /'EUROPE']; tight)]
      │         │    │         │    │    │    │    └── filters [type=bool, outer=(43,45), constraints=(/43: (/NULL - ]; /45: (/NULL - ]), fd=(43)==(45), (45)==(43)]
      │         │    │         │    │    │    │         └── nation.n_regionkey = region.r_regionkey [type=bool, outer=(43,45), constraints=(/43: (/NULL - ]; /45: (/NULL - ])]
      │         │    │         │    │    │    ├── scan partsupp
      │         │    │         │    │    │    │    ├── columns: partsupp.ps_partkey:17(int!null) partsupp.ps_suppkey:18(int!null) partsupp.ps_supplycost:20(float)
      │         │    │         │    │    │    │    ├── key: (17,18)
      │         │    │         │    │    │    │    └── fd: (17,18)-->(20)
      │         │    │         │    │    │    └── true [type=bool]
      │         │    │         │    │    ├── inner-join
      │         │    │         │    │    │    ├── columns: p_partkey:1(int!null) p_mfgr:3(string) p_type:5(string) p_size:6(int!null) supplier.s_suppkey:10(int!null) supplier.s_name:11(string) supplier.s_address:12(string) supplier.s_nationkey:13(int!null) supplier.s_phone:14(string) supplier.s_acctbal:15(float) supplier.s_comment:16(string)
      │         │    │         │    │    │    ├── key: (1,10)
      │         │    │         │    │    │    ├── fd: ()-->(6), (1)-->(3,5), (10)-->(11-16)
      │         │    │         │    │    │    ├── scan supplier
      │         │    │         │    │    │    │    ├── columns: supplier.s_suppkey:10(int!null) supplier.s_name:11(string) supplier.s_address:12(string) supplier.s_nationkey:13(int!null) supplier.s_phone:14(string) supplier.s_acctbal:15(float) supplier.s_comment:16(string)
      │         │    │         │    │    │    │    ├── key: (10)
      │         │    │         │    │    │    │    └── fd: (10)-->(11-16)
      │         │    │         │    │    │    ├── select
      │         │    │         │    │    │    │    ├── columns: p_partkey:1(int!null) p_mfgr:3(string) p_type:5(string) p_size:6(int!null)
      │         │    │         │    │    │    │    ├── key: (1)
      │         │    │         │    │    │    │    ├── fd: ()-->(6), (1)-->(3,5)
      │         │    │         │    │    │    │    ├── scan part
      │         │    │         │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_mfgr:3(string) p_type:5(string) p_size:6(int)
      │         │    │         │    │    │    │    │    ├── key: (1)
      │         │    │         │    │    │    │    │    └── fd: (1)-->(3,5,6)
      │         │    │         │    │    │    │    └── filters [type=bool, outer=(5,6), constraints=(/6: [/15 - /15]), fd=()-->(6)]
      │         │    │         │    │    │    │         ├── part.p_size = 15 [type=bool, outer=(6), constraints=(/6: [/15 - /15]; tight)]
      │         │    │         │    │    │    │         └── part.p_type LIKE '%BRASS' [type=bool, outer=(5)]
      │         │    │         │    │    │    └── true [type=bool]
      │         │    │         │    │    └── filters [type=bool, outer=(1,10,17,18,29), constraints=(/1: (/NULL - ]; /10: (/NULL - ]; /17: (/NULL - ]; /18: (/NULL - ]; /29: (/NULL - ]), fd=(1)==(17,29), (17)==(1,29), (10)==(18), (18)==(10), (29)==(1,17)]
      │         │    │         │    │         ├── part.p_partkey = partsupp.ps_partkey [type=bool, outer=(1,17), constraints=(/1: (/NULL - ]; /17: (/NULL - ])]
      │         │    │         │    │         ├── supplier.s_suppkey = partsupp.ps_suppkey [type=bool, outer=(10,18), constraints=(/10: (/NULL - ]; /18: (/NULL - ])]
      │         │    │         │    │         └── part.p_partkey = partsupp.ps_partkey [type=bool, outer=(1,29), constraints=(/1: (/NULL - ]; /29: (/NULL - ])]
      │         │    │         │    └── aggregations [outer=(1,3,11-16,20,32)]
      │         │    │         │         ├── min [type=float, outer=(32)]
      │         │    │         │         │    └── variable: partsupp.ps_supplycost [type=float, outer=(32)]
      │         │    │         │         ├── any-not-null [type=float, outer=(20)]
      │         │    │         │         │    └── variable: partsupp.ps_supplycost [type=float, outer=(20)]
      │         │    │         │         ├── any-not-null [type=string, outer=(3)]
      │         │    │         │         │    └── variable: part.p_mfgr [type=string, outer=(3)]
      │         │    │         │         ├── any-not-null [type=string, outer=(11)]
      │         │    │         │         │    └── variable: supplier.s_name [type=string, outer=(11)]
      │         │    │         │         ├── any-not-null [type=string, outer=(12)]
      │         │    │         │         │    └── variable: supplier.s_address [type=string, outer=(12)]
      │         │    │         │         ├── any-not-null [type=int, outer=(13)]
      │         │    │         │         │    └── variable: supplier.s_nationkey [type=int, outer=(13)]
      │         │    │         │         ├── any-not-null [type=string, outer=(14)]
      │         │    │         │         │    └── variable: supplier.s_phone [type=string, outer=(14)]
      │         │    │         │         ├── any-not-null [type=float, outer=(15)]
      │         │    │         │         │    └── variable: supplier.s_acctbal [type=float, outer=(15)]
      │         │    │         │         ├── any-not-null [type=string, outer=(16)]
      │         │    │         │         │    └── variable: supplier.s_comment [type=string, outer=(16)]
      │         │    │         │         └── any-not-null [type=int, outer=(1)]
      │         │    │         │              └── variable: part.p_partkey [type=int, outer=(1)]
      │         │    │         └── filters [type=bool, outer=(20,48), constraints=(/20: (/NULL - ]; /48: (/NULL - ]), fd=(20)==(48), (48)==(20)]
      │         │    │              └── partsupp.ps_supplycost = min [type=bool, outer=(20,48), constraints=(/20: (/NULL - ]; /48: (/NULL - ])]
      │         │    └── filters [type=bool, outer=(13,22), constraints=(/13: (/NULL - ]; /22: (/NULL - ]), fd=(13)==(22), (22)==(13)]
      │         │         └── supplier.s_nationkey = nation.n_nationkey [type=bool, outer=(13,22), constraints=(/13: (/NULL - ]; /22: (/NULL - ])]
      │         ├── select
      │         │    ├── columns: region.r_regionkey:26(int!null) region.r_name:27(string!null)
      │         │    ├── key: (26)
      │         │    ├── fd: ()-->(27)
      │         │    ├── scan region
      │         │    │    ├── columns: region.r_regionkey:26(int!null) region.r_name:27(string)
      │         │    │    ├── key: (26)
      │         │    │    └── fd: (26)-->(27)
      │         │    └── filters [type=bool, outer=(27), constraints=(/27: [/'EUROPE' - /'EUROPE']; tight), fd=()-->(27)]
      │         │         └── region.r_name = 'EUROPE' [type=bool, outer=(27), constraints=(/27: [/'EUROPE' - /'EUROPE']; tight)]
      │         └── filters [type=bool, outer=(24,26), constraints=(/24: (/NULL - ]; /26: (/NULL - ]), fd=(24)==(26), (26)==(24)]
      │              └── nation.n_regionkey = region.r_regionkey [type=bool, outer=(24,26), constraints=(/24: (/NULL - ]; /26: (/NULL - ])]
      └── const: 100 [type=int]

# --------------------------------------------------
# Q3
# Shipping Priority
# Retrieves the 10 unshipped orders with the highest value.
#
# Retrieves the shipping priority and potential revenue, defined as the sum of
# l_extendedprice * (1-l_discount), of the orders having the largest revenue
# among those that had not been shipped as of a given date. Orders are listed in
# decreasing order of revenue. If more than 10 unshipped orders exist, only the
# 10 orders with the largest revenue are listed.
#
# TODO:
#   1. Discard non-primary key columns from grouping columns
# --------------------------------------------------
opt
SELECT
    l_orderkey,
    sum(l_extendedprice * (1 - l_discount)) AS revenue,
    o_orderdate,
    o_shippriority
FROM
    customer,
    orders,
    lineitem
WHERE
    c_mktsegment = 'BUILDING'
    AND c_custkey = o_custkey
    AND l_orderkey = o_orderkey
    AND o_orderDATE < DATE '1995-03-15'
    AND l_shipdate > DATE '1995-03-15'
GROUP BY
    l_orderkey,
    o_orderdate,
    o_shippriority
ORDER BY
    revenue DESC,
    o_orderdate
LIMIT 10;
----
limit
 ├── columns: l_orderkey:18(int!null) revenue:35(float) o_orderdate:13(date) o_shippriority:16(int)
 ├── cardinality: [0 - 10]
 ├── key: (18)
 ├── fd: (18)-->(13,16,35)
 ├── ordering: -35,+13
 ├── sort
 │    ├── columns: o_orderdate:13(date) o_shippriority:16(int) l_orderkey:18(int!null) revenue:35(float)
 │    ├── key: (18)
 │    ├── fd: (18)-->(13,16,35)
 │    ├── ordering: -35,+13
 │    └── group-by
 │         ├── columns: o_orderdate:13(date) o_shippriority:16(int) l_orderkey:18(int!null) revenue:35(float)
 │         ├── grouping columns: l_orderkey:18(int!null)
 │         ├── key: (18)
 │         ├── fd: (18)-->(13,16,35)
 │         ├── project
 │         │    ├── columns: column34:34(float) o_orderdate:13(date!null) o_shippriority:16(int) l_orderkey:18(int!null)
 │         │    ├── fd: (18)-->(13,16)
 │         │    ├── inner-join
 │         │    │    ├── columns: c_custkey:1(int!null) c_mktsegment:7(string!null) o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null) o_shippriority:16(int) l_orderkey:18(int!null) l_extendedprice:23(float) l_discount:24(float) l_shipdate:28(date!null)
 │         │    │    ├── fd: ()-->(7), (9)-->(10,13,16), (1)==(10), (10)==(1), (9)==(18), (18)==(9)
 │         │    │    ├── select
 │         │    │    │    ├── columns: l_orderkey:18(int!null) l_extendedprice:23(float) l_discount:24(float) l_shipdate:28(date!null)
 │         │    │    │    ├── scan lineitem
 │         │    │    │    │    └── columns: l_orderkey:18(int!null) l_extendedprice:23(float) l_discount:24(float) l_shipdate:28(date)
 │         │    │    │    └── filters [type=bool, outer=(28), constraints=(/28: [/'1995-03-16' - ]; tight)]
 │         │    │    │         └── lineitem.l_shipdate > '1995-03-15' [type=bool, outer=(28), constraints=(/28: [/'1995-03-16' - ]; tight)]
 │         │    │    ├── inner-join
 │         │    │    │    ├── columns: c_custkey:1(int!null) c_mktsegment:7(string!null) o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null) o_shippriority:16(int)
 │         │    │    │    ├── key: (9)
 │         │    │    │    ├── fd: ()-->(7), (9)-->(10,13,16), (1)==(10), (10)==(1)
 │         │    │    │    ├── select
 │         │    │    │    │    ├── columns: o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null) o_shippriority:16(int)
 │         │    │    │    │    ├── key: (9)
 │         │    │    │    │    ├── fd: (9)-->(10,13,16)
 │         │    │    │    │    ├── scan orders
 │         │    │    │    │    │    ├── columns: o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date) o_shippriority:16(int)
 │         │    │    │    │    │    ├── key: (9)
 │         │    │    │    │    │    └── fd: (9)-->(10,13,16)
 │         │    │    │    │    └── filters [type=bool, outer=(13), constraints=(/13: (/NULL - /'1995-03-14']; tight)]
 │         │    │    │    │         └── orders.o_orderdate < '1995-03-15' [type=bool, outer=(13), constraints=(/13: (/NULL - /'1995-03-14']; tight)]
 │         │    │    │    ├── select
 │         │    │    │    │    ├── columns: c_custkey:1(int!null) c_mktsegment:7(string!null)
 │         │    │    │    │    ├── key: (1)
 │         │    │    │    │    ├── fd: ()-->(7)
 │         │    │    │    │    ├── scan customer
 │         │    │    │    │    │    ├── columns: c_custkey:1(int!null) c_mktsegment:7(string)
 │         │    │    │    │    │    ├── key: (1)
 │         │    │    │    │    │    └── fd: (1)-->(7)
 │         │    │    │    │    └── filters [type=bool, outer=(7), constraints=(/7: [/'BUILDING' - /'BUILDING']; tight), fd=()-->(7)]
 │         │    │    │    │         └── customer.c_mktsegment = 'BUILDING' [type=bool, outer=(7), constraints=(/7: [/'BUILDING' - /'BUILDING']; tight)]
 │         │    │    │    └── filters [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ]), fd=(1)==(10), (10)==(1)]
 │         │    │    │         └── customer.c_custkey = orders.o_custkey [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ])]
 │         │    │    └── filters [type=bool, outer=(9,18), constraints=(/9: (/NULL - ]; /18: (/NULL - ]), fd=(9)==(18), (18)==(9)]
 │         │    │         └── lineitem.l_orderkey = orders.o_orderkey [type=bool, outer=(9,18), constraints=(/9: (/NULL - ]; /18: (/NULL - ])]
 │         │    └── projections [outer=(13,16,18,23,24)]
 │         │         └── lineitem.l_extendedprice * (1.0 - lineitem.l_discount) [type=float, outer=(23,24)]
 │         └── aggregations [outer=(13,16,34)]
 │              ├── sum [type=float, outer=(34)]
 │              │    └── variable: column34 [type=float, outer=(34)]
 │              ├── any-not-null [type=date, outer=(13)]
 │              │    └── variable: orders.o_orderdate [type=date, outer=(13)]
 │              └── any-not-null [type=int, outer=(16)]
 │                   └── variable: orders.o_shippriority [type=int, outer=(16)]
 └── const: 10 [type=int]

# --------------------------------------------------
# Q4
# Order Priority Checking
# Determines how well the order priority system is working and gives an
# assessment of customer satisfaction.
#
# Counts the number of orders ordered in a given quarter of a given year in
# which at least one lineitem was received by the customer later than its
# committed date. The query lists the count of such orders for each order
# priority sorted in ascending priority order.
# --------------------------------------------------
opt
SELECT
    o_orderpriority,
    count(*) AS order_count
FROM
    orders
WHERE
    o_orderdate >= DATE '1993-07-01'
    AND o_orderdate < DATE '1993-07-01' + INTERVAL '3' MONTH
    AND EXISTS (
        SELECT
            *
        FROM
            lineitem
        WHERE
            l_orderkey = o_orderkey
            AND l_commitDATE < l_receiptdate
    )
GROUP BY
    o_orderpriority
ORDER BY
    o_orderpriority;
----
sort
 ├── columns: o_orderpriority:6(string) order_count:26(int)
 ├── key: (6)
 ├── fd: (6)-->(26)
 ├── ordering: +6
 └── group-by
      ├── columns: o_orderpriority:6(string) order_count:26(int)
      ├── grouping columns: o_orderpriority:6(string)
      ├── key: (6)
      ├── fd: (6)-->(26)
      ├── semi-join (merge)
      │    ├── columns: o_orderkey:1(int!null) o_orderdate:5(date!null) o_orderpriority:6(string)
      │    ├── key: (1)
      │    ├── fd: (1)-->(5,6)
      │    ├── select
      │    │    ├── columns: o_orderkey:1(int!null) o_orderdate:5(date!null) o_orderpriority:6(string)
      │    │    ├── key: (1)
      │    │    ├── fd: (1)-->(5,6)
      │    │    ├── ordering: +1
      │    │    ├── scan orders
      │    │    │    ├── columns: o_orderkey:1(int!null) o_orderdate:5(date) o_orderpriority:6(string)
      │    │    │    ├── key: (1)
      │    │    │    ├── fd: (1)-->(5,6)
      │    │    │    └── ordering: +1
      │    │    └── filters [type=bool, outer=(5), constraints=(/5: [/'1993-07-01' - ])]
      │    │         ├── orders.o_orderdate >= '1993-07-01' [type=bool, outer=(5), constraints=(/5: [/'1993-07-01' - ]; tight)]
      │    │         └── orders.o_orderdate < ('1993-07-01' + '3mon') [type=bool, outer=(5), constraints=(/5: (/NULL - ])]
      │    ├── select
      │    │    ├── columns: l_orderkey:10(int!null) l_commitdate:21(date!null) l_receiptdate:22(date!null)
      │    │    ├── ordering: +10
      │    │    ├── scan lineitem
      │    │    │    ├── columns: l_orderkey:10(int!null) l_commitdate:21(date) l_receiptdate:22(date)
      │    │    │    └── ordering: +10
      │    │    └── filters [type=bool, outer=(21,22), constraints=(/21: (/NULL - ]; /22: (/NULL - ])]
      │    │         └── lineitem.l_commitdate < lineitem.l_receiptdate [type=bool, outer=(21,22), constraints=(/21: (/NULL - ]; /22: (/NULL - ])]
      │    └── merge-on
      │         ├── left ordering: +1
      │         ├── right ordering: +10
      │         └── filters [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ]), fd=(1)==(10), (10)==(1)]
      │              └── lineitem.l_orderkey = orders.o_orderkey [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ])]
      └── aggregations
           └── count-rows [type=int]

# --------------------------------------------------
# Q5
# Local Supplier Volume
# Lists the revenue volume done through local suppliers.
#
# Lists for each nation in a region the revenue volume that resulted from
# lineitem transactions in which the customer ordering parts and the supplier
# filling them were both within that nation. The query is run in order to
# determine whether to institute local distribution centers in a given region.
# The query considers only parts ordered in a given year. The query displays the
# nations and revenue volume in descending order by revenue. Revenue volume for
# all qualifying lineitems in a particular nation is defined as
# sum(l_extendedprice * (1 - l_discount)).
#
# TODO:
#   1. Join ordering
# --------------------------------------------------
opt
SELECT
    n_name,
    sum(l_extendedprice * (1 - l_discount)) AS revenue
FROM
    customer,
    orders,
    lineitem,
    supplier,
    nation,
    region
WHERE
    c_custkey = o_custkey
    AND l_orderkey = o_orderkey
    AND l_suppkey = s_suppkey
    AND c_nationkey = s_nationkey
    AND s_nationkey = n_nationkey
    AND n_regionkey = r_regionkey
    AND r_name = 'ASIA'
    AND o_orderDATE >= DATE '1994-01-01'
    AND o_orderDATE < DATE '1994-01-01' + INTERVAL '1' YEAR
GROUP BY
    n_name
ORDER BY
    revenue DESC;
----
sort
 ├── columns: n_name:42(string) revenue:49(float)
 ├── key: (42)
 ├── fd: (42)-->(49)
 ├── ordering: -49
 └── group-by
      ├── columns: n_name:42(string) revenue:49(float)
      ├── grouping columns: n_name:42(string)
      ├── key: (42)
      ├── fd: (42)-->(49)
      ├── project
      │    ├── columns: column48:48(float) n_name:42(string)
      │    ├── inner-join
      │    │    ├── columns: c_custkey:1(int!null) c_nationkey:4(int!null) o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null) l_orderkey:18(int!null) l_suppkey:20(int!null) l_extendedprice:23(float) l_discount:24(float) s_suppkey:34(int!null) s_nationkey:37(int!null) n_nationkey:41(int!null) n_name:42(string) n_regionkey:43(int!null) r_regionkey:45(int!null) r_name:46(string!null)
      │    │    ├── fd: ()-->(46), (1)-->(4), (9)-->(10,13), (1)==(10), (10)==(1), (9)==(18), (18)==(9), (34)-->(37), (20)==(34), (34)==(20), (4)==(37,41), (37)==(4,41), (41)-->(42,43), (41)==(4,37), (43)==(45), (45)==(43)
      │    │    ├── inner-join
      │    │    │    ├── columns: c_custkey:1(int!null) c_nationkey:4(int!null) o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null) l_orderkey:18(int!null) l_suppkey:20(int!null) l_extendedprice:23(float) l_discount:24(float) s_suppkey:34(int!null) s_nationkey:37(int!null) n_nationkey:41(int!null) n_name:42(string) n_regionkey:43(int!null)
      │    │    │    ├── fd: (1)-->(4), (9)-->(10,13), (1)==(10), (10)==(1), (9)==(18), (18)==(9), (34)-->(37), (20)==(34), (34)==(20), (4)==(37,41), (37)==(4,41), (41)-->(42,43), (41)==(4,37)
      │    │    │    ├── inner-join
      │    │    │    │    ├── columns: c_custkey:1(int!null) c_nationkey:4(int!null) o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null) l_orderkey:18(int!null) l_suppkey:20(int!null) l_extendedprice:23(float) l_discount:24(float) s_suppkey:34(int!null) s_nationkey:37(int!null)
      │    │    │    │    ├── fd: (1)-->(4), (9)-->(10,13), (1)==(10), (10)==(1), (9)==(18), (18)==(9), (34)-->(37), (20)==(34), (34)==(20), (4)==(37), (37)==(4)
      │    │    │    │    ├── inner-join
      │    │    │    │    │    ├── columns: c_custkey:1(int!null) c_nationkey:4(int!null) o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null) l_orderkey:18(int!null) l_suppkey:20(int!null) l_extendedprice:23(float) l_discount:24(float)
      │    │    │    │    │    ├── fd: (1)-->(4), (9)-->(10,13), (1)==(10), (10)==(1), (9)==(18), (18)==(9)
      │    │    │    │    │    ├── inner-join
      │    │    │    │    │    │    ├── columns: c_custkey:1(int!null) c_nationkey:4(int!null) o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null)
      │    │    │    │    │    │    ├── key: (9)
      │    │    │    │    │    │    ├── fd: (1)-->(4), (9)-->(10,13), (1)==(10), (10)==(1)
      │    │    │    │    │    │    ├── scan customer
      │    │    │    │    │    │    │    ├── columns: c_custkey:1(int!null) c_nationkey:4(int!null)
      │    │    │    │    │    │    │    ├── key: (1)
      │    │    │    │    │    │    │    └── fd: (1)-->(4)
      │    │    │    │    │    │    ├── select
      │    │    │    │    │    │    │    ├── columns: o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null)
      │    │    │    │    │    │    │    ├── key: (9)
      │    │    │    │    │    │    │    ├── fd: (9)-->(10,13)
      │    │    │    │    │    │    │    ├── scan orders
      │    │    │    │    │    │    │    │    ├── columns: o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date)
      │    │    │    │    │    │    │    │    ├── key: (9)
      │    │    │    │    │    │    │    │    └── fd: (9)-->(10,13)
      │    │    │    │    │    │    │    └── filters [type=bool, outer=(13), constraints=(/13: [/'1994-01-01' - ])]
      │    │    │    │    │    │    │         ├── orders.o_orderdate >= '1994-01-01' [type=bool, outer=(13), constraints=(/13: [/'1994-01-01' - ]; tight)]
      │    │    │    │    │    │    │         └── orders.o_orderdate < ('1994-01-01' + '1y') [type=bool, outer=(13), constraints=(/13: (/NULL - ])]
      │    │    │    │    │    │    └── filters [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ]), fd=(1)==(10), (10)==(1)]
      │    │    │    │    │    │         └── customer.c_custkey = orders.o_custkey [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ])]
      │    │    │    │    │    ├── scan lineitem
      │    │    │    │    │    │    └── columns: l_orderkey:18(int!null) l_suppkey:20(int!null) l_extendedprice:23(float) l_discount:24(float)
      │    │    │    │    │    └── filters [type=bool, outer=(9,18), constraints=(/9: (/NULL - ]; /18: (/NULL - ]), fd=(9)==(18), (18)==(9)]
      │    │    │    │    │         └── lineitem.l_orderkey = orders.o_orderkey [type=bool, outer=(9,18), constraints=(/9: (/NULL - ]; /18: (/NULL - ])]
      │    │    │    │    ├── scan supplier
      │    │    │    │    │    ├── columns: s_suppkey:34(int!null) s_nationkey:37(int!null)
      │    │    │    │    │    ├── key: (34)
      │    │    │    │    │    └── fd: (34)-->(37)
      │    │    │    │    └── filters [type=bool, outer=(4,20,34,37), constraints=(/4: (/NULL - ]; /20: (/NULL - ]; /34: (/NULL - ]; /37: (/NULL - ]), fd=(20)==(34), (34)==(20), (4)==(37), (37)==(4)]
      │    │    │    │         ├── lineitem.l_suppkey = supplier.s_suppkey [type=bool, outer=(20,34), constraints=(/20: (/NULL - ]; /34: (/NULL - ])]
      │    │    │    │         └── customer.c_nationkey = supplier.s_nationkey [type=bool, outer=(4,37), constraints=(/4: (/NULL - ]; /37: (/NULL - ])]
      │    │    │    ├── scan nation
      │    │    │    │    ├── columns: n_nationkey:41(int!null) n_name:42(string) n_regionkey:43(int!null)
      │    │    │    │    ├── key: (41)
      │    │    │    │    └── fd: (41)-->(42,43)
      │    │    │    └── filters [type=bool, outer=(37,41), constraints=(/37: (/NULL - ]; /41: (/NULL - ]), fd=(37)==(41), (41)==(37)]
      │    │    │         └── supplier.s_nationkey = nation.n_nationkey [type=bool, outer=(37,41), constraints=(/37: (/NULL - ]; /41: (/NULL - ])]
      │    │    ├── select
      │    │    │    ├── columns: r_regionkey:45(int!null) r_name:46(string!null)
      │    │    │    ├── key: (45)
      │    │    │    ├── fd: ()-->(46)
      │    │    │    ├── scan region
      │    │    │    │    ├── columns: r_regionkey:45(int!null) r_name:46(string)
      │    │    │    │    ├── key: (45)
      │    │    │    │    └── fd: (45)-->(46)
      │    │    │    └── filters [type=bool, outer=(46), constraints=(/46: [/'ASIA' - /'ASIA']; tight), fd=()-->(46)]
      │    │    │         └── region.r_name = 'ASIA' [type=bool, outer=(46), constraints=(/46: [/'ASIA' - /'ASIA']; tight)]
      │    │    └── filters [type=bool, outer=(43,45), constraints=(/43: (/NULL - ]; /45: (/NULL - ]), fd=(43)==(45), (45)==(43)]
      │    │         └── nation.n_regionkey = region.r_regionkey [type=bool, outer=(43,45), constraints=(/43: (/NULL - ]; /45: (/NULL - ])]
      │    └── projections [outer=(23,24,42)]
      │         └── lineitem.l_extendedprice * (1.0 - lineitem.l_discount) [type=float, outer=(23,24)]
      └── aggregations [outer=(48)]
           └── sum [type=float, outer=(48)]
                └── variable: column48 [type=float, outer=(48)]

# --------------------------------------------------
# Q6
# Forecasting Revenue Change
# Quantifies the amount of revenue increase that would have resulted from
# eliminating certain companywide discounts in a given percentage range in a
# given year. Asking this type of "what if" query can be used to look for ways
# to increase revenues.
#
# Considers all the lineitems shipped in a given year with discounts between
# DISCOUNT-0.01 and DISCOUNT+0.01. The query lists the amount by which the total
# revenue would have increased if these discounts had been eliminated for
# lineitems with l_quantity less than quantity. Note that the potential revenue
# increase is equal to the sum of [l_extendedprice * l_discount] for all
# lineitems with discounts and quantities in the qualifying range.
# --------------------------------------------------
opt
SELECT
    sum(l_extendedprice * l_discount) AS revenue
FROM
    lineitem
WHERE
    l_shipdate >= DATE '1994-01-01'
    AND l_shipdate < DATE '1994-01-01' + INTERVAL '1' YEAR
    AND l_discount BETWEEN 0.06 - 0.01 AND 0.06 + 0.01
    AND l_quantity < 24;
----
scalar-group-by
 ├── columns: revenue:18(float)
 ├── cardinality: [1 - 1]
 ├── key: ()
 ├── fd: ()-->(18)
 ├── project
 │    ├── columns: column17:17(float)
 │    ├── select
 │    │    ├── columns: l_quantity:5(float!null) l_extendedprice:6(float) l_discount:7(float!null) l_shipdate:11(date!null)
 │    │    ├── scan lineitem
 │    │    │    └── columns: l_quantity:5(float) l_extendedprice:6(float) l_discount:7(float) l_shipdate:11(date)
 │    │    └── filters [type=bool, outer=(5,7,11), constraints=(/5: (/NULL - /23.999999999999996]; /7: [/0.05 - /0.07]; /11: [/'1994-01-01' - ])]
 │    │         ├── lineitem.l_shipdate >= '1994-01-01' [type=bool, outer=(11), constraints=(/11: [/'1994-01-01' - ]; tight)]
 │    │         ├── lineitem.l_shipdate < ('1994-01-01' + '1y') [type=bool, outer=(11), constraints=(/11: (/NULL - ])]
 │    │         ├── lineitem.l_discount >= 0.05 [type=bool, outer=(7), constraints=(/7: [/0.05 - ]; tight)]
 │    │         ├── lineitem.l_discount <= 0.07 [type=bool, outer=(7), constraints=(/7: (/NULL - /0.07]; tight)]
 │    │         └── lineitem.l_quantity < 24.0 [type=bool, outer=(5), constraints=(/5: (/NULL - /23.999999999999996]; tight)]
 │    └── projections [outer=(6,7)]
 │         └── lineitem.l_extendedprice * lineitem.l_discount [type=float, outer=(6,7)]
 └── aggregations [outer=(17)]
      └── sum [type=float, outer=(17)]
           └── variable: column17 [type=float, outer=(17)]

# --------------------------------------------------
# Q7
# Volume Shipping
# Determines the value of goods shipped between certain nations to help in the
# re-negotiation of shipping contracts.
#
# Finds, for two given nations, the gross discounted revenues derived from
# lineitems in which parts were shipped from a supplier in either nation to a
# customer in the other nation during 1995 and 1996. The query lists the
# supplier nation, the customer nation, the year, and the revenue from shipments
# that took place in that year. The query orders the answer by Supplier nation,
# Customer nation, and year (all ascending).
#
# TODO:
#   1. Join ordering
# --------------------------------------------------
opt
SELECT
    supp_nation,
    cust_nation,
    l_year, sum(volume) AS revenue
FROM (
    SELECT
        n1.n_name AS supp_nation,
        n2.n_name AS cust_nation,
        extract(year FROM l_shipdate) AS l_year,
        l_extendedprice * (1 - l_discount) AS volume
    FROM
        supplier,
        lineitem,
        orders,
        customer,
        nation n1,
        nation n2
    WHERE
        s_suppkey = l_suppkey
        AND o_orderkey = l_orderkey
        AND c_custkey = o_custkey
        AND s_nationkey = n1.n_nationkey
        AND c_nationkey = n2.n_nationkey
        AND (
            (n1.n_name = 'FRANCE' AND n2.n_name = 'GERMANY')
            or (n1.n_name = 'GERMANY' AND n2.n_name = 'FRANACE')
        )
        AND l_shipdate BETWEEN DATE '1995-01-01' AND DATE '1996-12-31'
    ) AS shipping
GROUP BY
    supp_nation,
    cust_nation,
    l_year
ORDER BY
    supp_nation,
    cust_nation,
    l_year;
----
sort
 ├── columns: supp_nation:42(string) cust_nation:46(string) l_year:49(int) revenue:51(float)
 ├── key: (42,46,49)
 ├── fd: (42,46,49)-->(51)
 ├── ordering: +42,+46,+49
 └── group-by
      ├── columns: nation.n_name:42(string) nation.n_name:46(string) l_year:49(int) revenue:51(float)
      ├── grouping columns: nation.n_name:42(string) nation.n_name:46(string) l_year:49(int)
      ├── key: (42,46,49)
      ├── fd: (42,46,49)-->(51)
      ├── project
      │    ├── columns: l_year:49(int) volume:50(float) nation.n_name:42(string) nation.n_name:46(string)
      │    ├── inner-join
      │    │    ├── columns: s_suppkey:1(int!null) s_nationkey:4(int!null) l_orderkey:8(int!null) l_suppkey:10(int!null) l_extendedprice:13(float) l_discount:14(float) l_shipdate:18(date!null) o_orderkey:24(int!null) o_custkey:25(int!null) c_custkey:33(int!null) c_nationkey:36(int!null) nation.n_nationkey:41(int!null) nation.n_name:42(string) nation.n_nationkey:45(int!null) nation.n_name:46(string)
      │    │    ├── fd: (1)-->(4), (1)==(10), (10)==(1), (24)-->(25), (8)==(24), (24)==(8), (33)-->(36), (25)==(33), (33)==(25), (41)-->(42), (4)==(41), (41)==(4), (45)-->(46), (36)==(45), (45)==(36)
      │    │    ├── inner-join
      │    │    │    ├── columns: s_suppkey:1(int!null) s_nationkey:4(int!null) l_orderkey:8(int!null) l_suppkey:10(int!null) l_extendedprice:13(float) l_discount:14(float) l_shipdate:18(date!null) o_orderkey:24(int!null) o_custkey:25(int!null) c_custkey:33(int!null) c_nationkey:36(int!null) nation.n_nationkey:41(int!null) nation.n_name:42(string)
      │    │    │    ├── fd: (1)-->(4), (1)==(10), (10)==(1), (24)-->(25), (8)==(24), (24)==(8), (33)-->(36), (25)==(33), (33)==(25), (41)-->(42), (4)==(41), (41)==(4)
      │    │    │    ├── inner-join
      │    │    │    │    ├── columns: s_suppkey:1(int!null) s_nationkey:4(int!null) l_orderkey:8(int!null) l_suppkey:10(int!null) l_extendedprice:13(float) l_discount:14(float) l_shipdate:18(date!null) o_orderkey:24(int!null) o_custkey:25(int!null) c_custkey:33(int!null) c_nationkey:36(int!null)
      │    │    │    │    ├── fd: (1)-->(4), (1)==(10), (10)==(1), (24)-->(25), (8)==(24), (24)==(8), (33)-->(36), (25)==(33), (33)==(25)
      │    │    │    │    ├── inner-join
      │    │    │    │    │    ├── columns: s_suppkey:1(int!null) s_nationkey:4(int!null) l_orderkey:8(int!null) l_suppkey:10(int!null) l_extendedprice:13(float) l_discount:14(float) l_shipdate:18(date!null) o_orderkey:24(int!null) o_custkey:25(int!null)
      │    │    │    │    │    ├── fd: (1)-->(4), (1)==(10), (10)==(1), (24)-->(25), (8)==(24), (24)==(8)
      │    │    │    │    │    ├── inner-join
      │    │    │    │    │    │    ├── columns: s_suppkey:1(int!null) s_nationkey:4(int!null) l_orderkey:8(int!null) l_suppkey:10(int!null) l_extendedprice:13(float) l_discount:14(float) l_shipdate:18(date!null)
      │    │    │    │    │    │    ├── fd: (1)-->(4), (1)==(10), (10)==(1)
      │    │    │    │    │    │    ├── scan supplier
      │    │    │    │    │    │    │    ├── columns: s_suppkey:1(int!null) s_nationkey:4(int!null)
      │    │    │    │    │    │    │    ├── key: (1)
      │    │    │    │    │    │    │    └── fd: (1)-->(4)
      │    │    │    │    │    │    ├── select
      │    │    │    │    │    │    │    ├── columns: l_orderkey:8(int!null) l_suppkey:10(int!null) l_extendedprice:13(float) l_discount:14(float) l_shipdate:18(date!null)
      │    │    │    │    │    │    │    ├── scan lineitem
      │    │    │    │    │    │    │    │    └── columns: l_orderkey:8(int!null) l_suppkey:10(int!null) l_extendedprice:13(float) l_discount:14(float) l_shipdate:18(date)
      │    │    │    │    │    │    │    └── filters [type=bool, outer=(18), constraints=(/18: [/'1995-01-01' - /'1996-12-31']; tight)]
      │    │    │    │    │    │    │         ├── lineitem.l_shipdate >= '1995-01-01' [type=bool, outer=(18), constraints=(/18: [/'1995-01-01' - ]; tight)]
      │    │    │    │    │    │    │         └── lineitem.l_shipdate <= '1996-12-31' [type=bool, outer=(18), constraints=(/18: (/NULL - /'1996-12-31']; tight)]
      │    │    │    │    │    │    └── filters [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ]), fd=(1)==(10), (10)==(1)]
      │    │    │    │    │    │         └── supplier.s_suppkey = lineitem.l_suppkey [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ])]
      │    │    │    │    │    ├── scan orders
      │    │    │    │    │    │    ├── columns: o_orderkey:24(int!null) o_custkey:25(int!null)
      │    │    │    │    │    │    ├── key: (24)
      │    │    │    │    │    │    └── fd: (24)-->(25)
      │    │    │    │    │    └── filters [type=bool, outer=(8,24), constraints=(/8: (/NULL - ]; /24: (/NULL - ]), fd=(8)==(24), (24)==(8)]
      │    │    │    │    │         └── orders.o_orderkey = lineitem.l_orderkey [type=bool, outer=(8,24), constraints=(/8: (/NULL - ]; /24: (/NULL - ])]
      │    │    │    │    ├── scan customer
      │    │    │    │    │    ├── columns: c_custkey:33(int!null) c_nationkey:36(int!null)
      │    │    │    │    │    ├── key: (33)
      │    │    │    │    │    └── fd: (33)-->(36)
      │    │    │    │    └── filters [type=bool, outer=(25,33), constraints=(/25: (/NULL - ]; /33: (/NULL - ]), fd=(25)==(33), (33)==(25)]
      │    │    │    │         └── customer.c_custkey = orders.o_custkey [type=bool, outer=(25,33), constraints=(/25: (/NULL - ]; /33: (/NULL - ])]
      │    │    │    ├── scan nation
      │    │    │    │    ├── columns: nation.n_nationkey:41(int!null) nation.n_name:42(string)
      │    │    │    │    ├── key: (41)
      │    │    │    │    └── fd: (41)-->(42)
      │    │    │    └── filters [type=bool, outer=(4,41), constraints=(/4: (/NULL - ]; /41: (/NULL - ]), fd=(4)==(41), (41)==(4)]
      │    │    │         └── supplier.s_nationkey = nation.n_nationkey [type=bool, outer=(4,41), constraints=(/4: (/NULL - ]; /41: (/NULL - ])]
      │    │    ├── scan nation
      │    │    │    ├── columns: nation.n_nationkey:45(int!null) nation.n_name:46(string)
      │    │    │    ├── key: (45)
      │    │    │    └── fd: (45)-->(46)
      │    │    └── filters [type=bool, outer=(36,42,45,46), constraints=(/36: (/NULL - ]; /45: (/NULL - ]), fd=(36)==(45), (45)==(36)]
      │    │         ├── customer.c_nationkey = nation.n_nationkey [type=bool, outer=(36,45), constraints=(/36: (/NULL - ]; /45: (/NULL - ])]
      │    │         └── ((nation.n_name = 'FRANCE') AND (nation.n_name = 'GERMANY')) OR ((nation.n_name = 'GERMANY') AND (nation.n_name = 'FRANACE')) [type=bool, outer=(42,46)]
      │    └── projections [outer=(13,14,18,42,46)]
      │         ├── extract('year', lineitem.l_shipdate) [type=int, outer=(18)]
      │         └── lineitem.l_extendedprice * (1.0 - lineitem.l_discount) [type=float, outer=(13,14)]
      └── aggregations [outer=(50)]
           └── sum [type=float, outer=(50)]
                └── variable: volume [type=float, outer=(50)]

# --------------------------------------------------
# Q8
# National Market Share
# Determines how the market share of a given nation within a given region has
# changed over two years for a given part type.
#
# The market share for a given nation within a given region is defined as the
# fraction of the revenue, the sum of [l_extendedprice * (1-l_discount)], from
# the products of a specified type in that region that was supplied by suppliers
# from the given nation. The query determines this for the years 1995 and 1996
# presented in this order.
#
# TODO:
#   1. Join ordering
#   2. Push down equivalent column comparisons
# --------------------------------------------------
opt
SELECT
    o_year,
    sum(CASE
        WHEN nation = 'BRAZIL'
            THEN volume
        ELSE 0
    END) / sum(volume) AS mkt_share
FROM (
    SELECT
        extract(year FROM o_orderdate) AS o_year,
        l_extendedprice * (1 - l_discount) AS volume,
        n2.n_name AS nation
    FROM
        part,
        supplier,
        lineitem,
        orders,
        customer,
        nation n1,
        nation n2,
        region
    WHERE
        p_partkey = l_partkey
        AND s_suppkey = l_suppkey
        AND l_orderkey = o_orderkey
        AND o_custkey = c_custkey
        AND c_nationkey = n1.n_nationkey
        AND n1.n_regionkey = r_regionkey
        AND r_name = 'AMERICA'
        AND s_nationkey = n2.n_nationkey
        AND o_orderdate BETWEEN DATE '1995-01-01' AND DATE '1996-12-31'
        AND p_type = 'ECONOMY ANODIZED STEEL'
    ) AS all_nations
GROUP BY
    o_year
ORDER BY
    o_year;
----
sort
 ├── columns: o_year:61(int) mkt_share:66(float)
 ├── key: (61)
 ├── fd: (61)-->(66)
 ├── ordering: +61
 └── project
      ├── columns: mkt_share:66(float) o_year:61(int)
      ├── key: (61)
      ├── fd: (61)-->(66)
      ├── group-by
      │    ├── columns: o_year:61(int) column64:64(float) column65:65(float)
      │    ├── grouping columns: o_year:61(int)
      │    ├── key: (61)
      │    ├── fd: (61)-->(64,65)
      │    ├── project
      │    │    ├── columns: column63:63(float) o_year:61(int) volume:62(float)
      │    │    ├── project
      │    │    │    ├── columns: o_year:61(int) volume:62(float) nation.n_name:55(string)
      │    │    │    ├── inner-join
      │    │    │    │    ├── columns: p_partkey:1(int!null) p_type:5(string!null) s_suppkey:10(int!null) s_nationkey:13(int!null) l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_extendedprice:22(float) l_discount:23(float) o_orderkey:33(int!null) o_custkey:34(int!null) o_orderdate:37(date!null) c_custkey:42(int!null) c_nationkey:45(int!null) nation.n_nationkey:50(int!null) nation.n_regionkey:52(int!null) nation.n_nationkey:54(int!null) nation.n_name:55(string) r_regionkey:58(int!null) r_name:59(string!null)
      │    │    │    │    ├── fd: ()-->(5,59), (10)-->(13), (1)==(18), (18)==(1), (10)==(19), (19)==(10), (33)-->(34,37), (17)==(33), (33)==(17), (42)-->(45), (34)==(42), (42)==(34), (50)-->(52), (45)==(50), (50)==(45), (54)-->(55), (13)==(54), (54)==(13), (52)==(58), (58)==(52)
      │    │    │    │    ├── inner-join
      │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_type:5(string!null) s_suppkey:10(int!null) s_nationkey:13(int!null) l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_extendedprice:22(float) l_discount:23(float) o_orderkey:33(int!null) o_custkey:34(int!null) o_orderdate:37(date!null) c_custkey:42(int!null) c_nationkey:45(int!null) nation.n_nationkey:50(int!null) nation.n_regionkey:52(int!null) nation.n_nationkey:54(int!null) nation.n_name:55(string)
      │    │    │    │    │    ├── fd: ()-->(5), (10)-->(13), (1)==(18), (18)==(1), (10)==(19), (19)==(10), (33)-->(34,37), (17)==(33), (33)==(17), (42)-->(45), (34)==(42), (42)==(34), (50)-->(52), (45)==(50), (50)==(45), (54)-->(55), (13)==(54), (54)==(13)
      │    │    │    │    │    ├── inner-join
      │    │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_type:5(string!null) s_suppkey:10(int!null) s_nationkey:13(int!null) l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_extendedprice:22(float) l_discount:23(float) o_orderkey:33(int!null) o_custkey:34(int!null) o_orderdate:37(date!null) c_custkey:42(int!null) c_nationkey:45(int!null) nation.n_nationkey:50(int!null) nation.n_regionkey:52(int!null)
      │    │    │    │    │    │    ├── fd: ()-->(5), (10)-->(13), (1)==(18), (18)==(1), (10)==(19), (19)==(10), (33)-->(34,37), (17)==(33), (33)==(17), (42)-->(45), (34)==(42), (42)==(34), (50)-->(52), (45)==(50), (50)==(45)
      │    │    │    │    │    │    ├── inner-join
      │    │    │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_type:5(string!null) s_suppkey:10(int!null) s_nationkey:13(int!null) l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_extendedprice:22(float) l_discount:23(float) o_orderkey:33(int!null) o_custkey:34(int!null) o_orderdate:37(date!null) c_custkey:42(int!null) c_nationkey:45(int!null)
      │    │    │    │    │    │    │    ├── fd: ()-->(5), (10)-->(13), (1)==(18), (18)==(1), (10)==(19), (19)==(10), (33)-->(34,37), (17)==(33), (33)==(17), (42)-->(45), (34)==(42), (42)==(34)
      │    │    │    │    │    │    │    ├── inner-join
      │    │    │    │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_type:5(string!null) s_suppkey:10(int!null) s_nationkey:13(int!null) l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_extendedprice:22(float) l_discount:23(float) o_orderkey:33(int!null) o_custkey:34(int!null) o_orderdate:37(date!null)
      │    │    │    │    │    │    │    │    ├── fd: ()-->(5), (10)-->(13), (1)==(18), (18)==(1), (10)==(19), (19)==(10), (33)-->(34,37), (17)==(33), (33)==(17)
      │    │    │    │    │    │    │    │    ├── inner-join
      │    │    │    │    │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_type:5(string!null) s_suppkey:10(int!null) s_nationkey:13(int!null) l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_extendedprice:22(float) l_discount:23(float)
      │    │    │    │    │    │    │    │    │    ├── fd: ()-->(5), (10)-->(13), (1)==(18), (18)==(1), (10)==(19), (19)==(10)
      │    │    │    │    │    │    │    │    │    ├── inner-join
      │    │    │    │    │    │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_type:5(string!null) s_suppkey:10(int!null) s_nationkey:13(int!null)
      │    │    │    │    │    │    │    │    │    │    ├── key: (1,10)
      │    │    │    │    │    │    │    │    │    │    ├── fd: ()-->(5), (10)-->(13)
      │    │    │    │    │    │    │    │    │    │    ├── scan supplier
      │    │    │    │    │    │    │    │    │    │    │    ├── columns: s_suppkey:10(int!null) s_nationkey:13(int!null)
      │    │    │    │    │    │    │    │    │    │    │    ├── key: (10)
      │    │    │    │    │    │    │    │    │    │    │    └── fd: (10)-->(13)
      │    │    │    │    │    │    │    │    │    │    ├── select
      │    │    │    │    │    │    │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_type:5(string!null)
      │    │    │    │    │    │    │    │    │    │    │    ├── key: (1)
      │    │    │    │    │    │    │    │    │    │    │    ├── fd: ()-->(5)
      │    │    │    │    │    │    │    │    │    │    │    ├── scan part
      │    │    │    │    │    │    │    │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_type:5(string)
      │    │    │    │    │    │    │    │    │    │    │    │    ├── key: (1)
      │    │    │    │    │    │    │    │    │    │    │    │    └── fd: (1)-->(5)
      │    │    │    │    │    │    │    │    │    │    │    └── filters [type=bool, outer=(5), constraints=(/5: [/'ECONOMY ANODIZED STEEL' - /'ECONOMY ANODIZED STEEL']; tight), fd=()-->(5)]
      │    │    │    │    │    │    │    │    │    │    │         └── part.p_type = 'ECONOMY ANODIZED STEEL' [type=bool, outer=(5), constraints=(/5: [/'ECONOMY ANODIZED STEEL' - /'ECONOMY ANODIZED STEEL']; tight)]
      │    │    │    │    │    │    │    │    │    │    └── true [type=bool]
      │    │    │    │    │    │    │    │    │    ├── scan lineitem
      │    │    │    │    │    │    │    │    │    │    └── columns: l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_extendedprice:22(float) l_discount:23(float)
      │    │    │    │    │    │    │    │    │    └── filters [type=bool, outer=(1,10,18,19), constraints=(/1: (/NULL - ]; /10: (/NULL - ]; /18: (/NULL - ]; /19: (/NULL - ]), fd=(1)==(18), (18)==(1), (10)==(19), (19)==(10)]
      │    │    │    │    │    │    │    │    │         ├── part.p_partkey = lineitem.l_partkey [type=bool, outer=(1,18), constraints=(/1: (/NULL - ]; /18: (/NULL - ])]
      │    │    │    │    │    │    │    │    │         └── supplier.s_suppkey = lineitem.l_suppkey [type=bool, outer=(10,19), constraints=(/10: (/NULL - ]; /19: (/NULL - ])]
      │    │    │    │    │    │    │    │    ├── select
      │    │    │    │    │    │    │    │    │    ├── columns: o_orderkey:33(int!null) o_custkey:34(int!null) o_orderdate:37(date!null)
      │    │    │    │    │    │    │    │    │    ├── key: (33)
      │    │    │    │    │    │    │    │    │    ├── fd: (33)-->(34,37)
      │    │    │    │    │    │    │    │    │    ├── scan orders
      │    │    │    │    │    │    │    │    │    │    ├── columns: o_orderkey:33(int!null) o_custkey:34(int!null) o_orderdate:37(date)
      │    │    │    │    │    │    │    │    │    │    ├── key: (33)
      │    │    │    │    │    │    │    │    │    │    └── fd: (33)-->(34,37)
      │    │    │    │    │    │    │    │    │    └── filters [type=bool, outer=(37), constraints=(/37: [/'1995-01-01' - /'1996-12-31']; tight)]
      │    │    │    │    │    │    │    │    │         ├── orders.o_orderdate >= '1995-01-01' [type=bool, outer=(37), constraints=(/37: [/'1995-01-01' - ]; tight)]
      │    │    │    │    │    │    │    │    │         └── orders.o_orderdate <= '1996-12-31' [type=bool, outer=(37), constraints=(/37: (/NULL - /'1996-12-31']; tight)]
      │    │    │    │    │    │    │    │    └── filters [type=bool, outer=(17,33), constraints=(/17: (/NULL - ]; /33: (/NULL - ]), fd=(17)==(33), (33)==(17)]
      │    │    │    │    │    │    │    │         └── lineitem.l_orderkey = orders.o_orderkey [type=bool, outer=(17,33), constraints=(/17: (/NULL - ]; /33: (/NULL - ])]
      │    │    │    │    │    │    │    ├── scan customer
      │    │    │    │    │    │    │    │    ├── columns: c_custkey:42(int!null) c_nationkey:45(int!null)
      │    │    │    │    │    │    │    │    ├── key: (42)
      │    │    │    │    │    │    │    │    └── fd: (42)-->(45)
      │    │    │    │    │    │    │    └── filters [type=bool, outer=(34,42), constraints=(/34: (/NULL - ]; /42: (/NULL - ]), fd=(34)==(42), (42)==(34)]
      │    │    │    │    │    │    │         └── orders.o_custkey = customer.c_custkey [type=bool, outer=(34,42), constraints=(/34: (/NULL - ]; /42: (/NULL - ])]
      │    │    │    │    │    │    ├── scan nation
      │    │    │    │    │    │    │    ├── columns: nation.n_nationkey:50(int!null) nation.n_regionkey:52(int!null)
      │    │    │    │    │    │    │    ├── key: (50)
      │    │    │    │    │    │    │    └── fd: (50)-->(52)
      │    │    │    │    │    │    └── filters [type=bool, outer=(45,50), constraints=(/45: (/NULL - ]; /50: (/NULL - ]), fd=(45)==(50), (50)==(45)]
      │    │    │    │    │    │         └── customer.c_nationkey = nation.n_nationkey [type=bool, outer=(45,50), constraints=(/45: (/NULL - ]; /50: (/NULL - ])]
      │    │    │    │    │    ├── scan nation
      │    │    │    │    │    │    ├── columns: nation.n_nationkey:54(int!null) nation.n_name:55(string)
      │    │    │    │    │    │    ├── key: (54)
      │    │    │    │    │    │    └── fd: (54)-->(55)
      │    │    │    │    │    └── filters [type=bool, outer=(13,54), constraints=(/13: (/NULL - ]; /54: (/NULL - ]), fd=(13)==(54), (54)==(13)]
      │    │    │    │    │         └── supplier.s_nationkey = nation.n_nationkey [type=bool, outer=(13,54), constraints=(/13: (/NULL - ]; /54: (/NULL - ])]
      │    │    │    │    ├── select
      │    │    │    │    │    ├── columns: r_regionkey:58(int!null) r_name:59(string!null)
      │    │    │    │    │    ├── key: (58)
      │    │    │    │    │    ├── fd: ()-->(59)
      │    │    │    │    │    ├── scan region
      │    │    │    │    │    │    ├── columns: r_regionkey:58(int!null) r_name:59(string)
      │    │    │    │    │    │    ├── key: (58)
      │    │    │    │    │    │    └── fd: (58)-->(59)
      │    │    │    │    │    └── filters [type=bool, outer=(59), constraints=(/59: [/'AMERICA' - /'AMERICA']; tight), fd=()-->(59)]
      │    │    │    │    │         └── region.r_name = 'AMERICA' [type=bool, outer=(59), constraints=(/59: [/'AMERICA' - /'AMERICA']; tight)]
      │    │    │    │    └── filters [type=bool, outer=(52,58), constraints=(/52: (/NULL - ]; /58: (/NULL - ]), fd=(52)==(58), (58)==(52)]
      │    │    │    │         └── nation.n_regionkey = region.r_regionkey [type=bool, outer=(52,58), constraints=(/52: (/NULL - ]; /58: (/NULL - ])]
      │    │    │    └── projections [outer=(22,23,37,55)]
      │    │    │         ├── extract('year', orders.o_orderdate) [type=int, outer=(37)]
      │    │    │         └── lineitem.l_extendedprice * (1.0 - lineitem.l_discount) [type=float, outer=(22,23)]
      │    │    └── projections [outer=(55,61,62)]
      │    │         └── CASE WHEN nation.n_name = 'BRAZIL' THEN volume ELSE 0.0 END [type=float, outer=(55,62)]
      │    └── aggregations [outer=(62,63)]
      │         ├── sum [type=float, outer=(63)]
      │         │    └── variable: column63 [type=float, outer=(63)]
      │         └── sum [type=float, outer=(62)]
      │              └── variable: volume [type=float, outer=(62)]
      └── projections [outer=(61,64,65)]
           └── column64 / column65 [type=float, outer=(64,65)]

# --------------------------------------------------
# Q9
# Product Type Profit Measure
# Determines how much profit is made on a given line of parts, broken out by
# supplier nation and year.
#
# Finds, for each nation and each year, the profit for all parts ordered in that
# year that contain a specified substring in their names and that were filled by
# a supplier in that nation. The profit is defined as the sum of:
#
#   [(l_extendedprice*(1-l_discount)) - (ps_supplycost * l_quantity)]
#
# for all lineitems describing parts in the specified line. The query lists the
#  nations in ascending alphabetical order and, for each nation, the year and
#  profit in descending order by year (most recent first).
#
# TODO:
#   1. Join ordering
#   2. Push down equivalent column comparisons
# --------------------------------------------------
opt
SELECT
    nation,
    o_year,
    sum(amount) AS sum_profit
FROM (
    SELECT
        n_name AS nation,
        extract(year FROM o_orderdate) AS o_year,
        l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity AS amount
    FROM
        part,
        supplier,
        lineitem,
        partsupp,
        orders,
        nation
    WHERE
        s_suppkey = l_suppkey
        AND ps_suppkey = l_suppkey
        AND ps_partkey = l_partkey
        AND p_partkey = l_partkey
        AND o_orderkey = l_orderkey
        AND s_nationkey = n_nationkey
        AND p_name LIKE '%green%'
    ) AS profit
GROUP BY
    nation,
    o_year
ORDER BY
    nation,
    o_year DESC;
----
sort
 ├── columns: nation:48(string) o_year:51(int) sum_profit:53(float)
 ├── key: (48,51)
 ├── fd: (48,51)-->(53)
 ├── ordering: +48,-51
 └── group-by
      ├── columns: n_name:48(string) o_year:51(int) sum_profit:53(float)
      ├── grouping columns: n_name:48(string) o_year:51(int)
      ├── key: (48,51)
      ├── fd: (48,51)-->(53)
      ├── project
      │    ├── columns: o_year:51(int) amount:52(float) n_name:48(string)
      │    ├── inner-join
      │    │    ├── columns: p_partkey:1(int!null) p_name:2(string) s_suppkey:10(int!null) s_nationkey:13(int!null) l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_quantity:21(float) l_extendedprice:22(float) l_discount:23(float) ps_partkey:33(int!null) ps_suppkey:34(int!null) ps_supplycost:36(float) o_orderkey:38(int!null) o_orderdate:42(date) n_nationkey:47(int!null) n_name:48(string)
      │    │    ├── fd: (1)-->(2), (10)-->(13), (10)==(19,34), (19)==(10,34), (1)==(18,33), (18)==(1,33), (33,34)-->(36), (34)==(10,19), (33)==(1,18), (38)-->(42), (17)==(38), (38)==(17), (47)-->(48), (13)==(47), (47)==(13)
      │    │    ├── inner-join
      │    │    │    ├── columns: p_partkey:1(int!null) p_name:2(string) s_suppkey:10(int!null) s_nationkey:13(int!null) l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_quantity:21(float) l_extendedprice:22(float) l_discount:23(float) ps_partkey:33(int!null) ps_suppkey:34(int!null) ps_supplycost:36(float) o_orderkey:38(int!null) o_orderdate:42(date)
      │    │    │    ├── fd: (1)-->(2), (10)-->(13), (10)==(19,34), (19)==(10,34), (1)==(18,33), (18)==(1,33), (33,34)-->(36), (34)==(10,19), (33)==(1,18), (38)-->(42), (17)==(38), (38)==(17)
      │    │    │    ├── inner-join
      │    │    │    │    ├── columns: p_partkey:1(int!null) p_name:2(string) s_suppkey:10(int!null) s_nationkey:13(int!null) l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_quantity:21(float) l_extendedprice:22(float) l_discount:23(float) ps_partkey:33(int!null) ps_suppkey:34(int!null) ps_supplycost:36(float)
      │    │    │    │    ├── fd: (1)-->(2), (10)-->(13), (10)==(19,34), (19)==(10,34), (1)==(18,33), (18)==(1,33), (33,34)-->(36), (34)==(10,19), (33)==(1,18)
      │    │    │    │    ├── inner-join
      │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_name:2(string) s_suppkey:10(int!null) s_nationkey:13(int!null) l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_quantity:21(float) l_extendedprice:22(float) l_discount:23(float)
      │    │    │    │    │    ├── fd: (1)-->(2), (10)-->(13), (10)==(19), (19)==(10), (1)==(18), (18)==(1)
      │    │    │    │    │    ├── inner-join
      │    │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_name:2(string) s_suppkey:10(int!null) s_nationkey:13(int!null)
      │    │    │    │    │    │    ├── key: (1,10)
      │    │    │    │    │    │    ├── fd: (1)-->(2), (10)-->(13)
      │    │    │    │    │    │    ├── scan supplier
      │    │    │    │    │    │    │    ├── columns: s_suppkey:10(int!null) s_nationkey:13(int!null)
      │    │    │    │    │    │    │    ├── key: (10)
      │    │    │    │    │    │    │    └── fd: (10)-->(13)
      │    │    │    │    │    │    ├── select
      │    │    │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_name:2(string)
      │    │    │    │    │    │    │    ├── key: (1)
      │    │    │    │    │    │    │    ├── fd: (1)-->(2)
      │    │    │    │    │    │    │    ├── scan part
      │    │    │    │    │    │    │    │    ├── columns: p_partkey:1(int!null) p_name:2(string)
      │    │    │    │    │    │    │    │    ├── key: (1)
      │    │    │    │    │    │    │    │    └── fd: (1)-->(2)
      │    │    │    │    │    │    │    └── filters [type=bool, outer=(2)]
      │    │    │    │    │    │    │         └── part.p_name LIKE '%green%' [type=bool, outer=(2)]
      │    │    │    │    │    │    └── true [type=bool]
      │    │    │    │    │    ├── scan lineitem
      │    │    │    │    │    │    └── columns: l_orderkey:17(int!null) l_partkey:18(int!null) l_suppkey:19(int!null) l_quantity:21(float) l_extendedprice:22(float) l_discount:23(float)
      │    │    │    │    │    └── filters [type=bool, outer=(1,10,18,19), constraints=(/1: (/NULL - ]; /10: (/NULL - ]; /18: (/NULL - ]; /19: (/NULL - ]), fd=(10)==(19), (19)==(10), (1)==(18), (18)==(1)]
      │    │    │    │    │         ├── supplier.s_suppkey = lineitem.l_suppkey [type=bool, outer=(10,19), constraints=(/10: (/NULL - ]; /19: (/NULL - ])]
      │    │    │    │    │         └── part.p_partkey = lineitem.l_partkey [type=bool, outer=(1,18), constraints=(/1: (/NULL - ]; /18: (/NULL - ])]
      │    │    │    │    ├── scan partsupp
      │    │    │    │    │    ├── columns: ps_partkey:33(int!null) ps_suppkey:34(int!null) ps_supplycost:36(float)
      │    │    │    │    │    ├── key: (33,34)
      │    │    │    │    │    └── fd: (33,34)-->(36)
      │    │    │    │    └── filters [type=bool, outer=(18,19,33,34), constraints=(/18: (/NULL - ]; /19: (/NULL - ]; /33: (/NULL - ]; /34: (/NULL - ]), fd=(19)==(34), (34)==(19), (18)==(33), (33)==(18)]
      │    │    │    │         ├── partsupp.ps_suppkey = lineitem.l_suppkey [type=bool, outer=(19,34), constraints=(/19: (/NULL - ]; /34: (/NULL - ])]
      │    │    │    │         └── partsupp.ps_partkey = lineitem.l_partkey [type=bool, outer=(18,33), constraints=(/18: (/NULL - ]; /33: (/NULL - ])]
      │    │    │    ├── scan orders
      │    │    │    │    ├── columns: o_orderkey:38(int!null) o_orderdate:42(date)
      │    │    │    │    ├── key: (38)
      │    │    │    │    └── fd: (38)-->(42)
      │    │    │    └── filters [type=bool, outer=(17,38), constraints=(/17: (/NULL - ]; /38: (/NULL - ]), fd=(17)==(38), (38)==(17)]
      │    │    │         └── orders.o_orderkey = lineitem.l_orderkey [type=bool, outer=(17,38), constraints=(/17: (/NULL - ]; /38: (/NULL - ])]
      │    │    ├── scan nation
      │    │    │    ├── columns: n_nationkey:47(int!null) n_name:48(string)
      │    │    │    ├── key: (47)
      │    │    │    └── fd: (47)-->(48)
      │    │    └── filters [type=bool, outer=(13,47), constraints=(/13: (/NULL - ]; /47: (/NULL - ]), fd=(13)==(47), (47)==(13)]
      │    │         └── supplier.s_nationkey = nation.n_nationkey [type=bool, outer=(13,47), constraints=(/13: (/NULL - ]; /47: (/NULL - ])]
      │    └── projections [outer=(21-23,36,42,48)]
      │         ├── extract('year', orders.o_orderdate) [type=int, outer=(42)]
      │         └── (lineitem.l_extendedprice * (1.0 - lineitem.l_discount)) - (partsupp.ps_supplycost * lineitem.l_quantity) [type=float, outer=(21-23,36)]
      └── aggregations [outer=(52)]
           └── sum [type=float, outer=(52)]
                └── variable: amount [type=float, outer=(52)]

# --------------------------------------------------
# Q10
# Returned Item Reporting
# Identifies customers who might be having problems with the parts that are
# shipped to them.
#
# Finds the top 20 customers, in terms of their effect on lost revenue for a
# given quarter, who have returned parts. The query considers only parts that
# were ordered in the specified quarter. The query lists the customer's name,
# address, nation, phone number, account balance, comment information and
# revenue lost. The customers are listed in descending order of lost revenue.
# Revenue lost is defined as sum(l_extendedprice*(1-l_discount)) for all
# qualifying lineitems.
#
# TODO:
#   1. Discard non-primary key columns from grouping columns
# --------------------------------------------------
opt
SELECT
    c_custkey,
    c_name,
    sum(l_extendedprice * (1 - l_discount)) AS revenue,
    c_acctbal,
    n_name,
    c_address,
    c_phone,
    c_comment
FROM
    customer,
    orders,
    lineitem,
    nation
WHERE
    c_custkey = o_custkey
    AND l_orderkey = o_orderkey
    AND o_orderDATE >= DATE '1993-10-01'
    AND o_orderDATE < DATE '1993-10-01' + INTERVAL '3' MONTH
    AND l_returnflag = 'R'
    AND c_nationkey = n_nationkey
GROUP BY
    c_custkey,
    c_name,
    c_acctbal,
    c_phone,
    n_name,
    c_address,
    c_comment
ORDER BY
    revenue DESC
LIMIT 20;
----
limit
 ├── columns: c_custkey:1(int!null) c_name:2(string) revenue:39(float) c_acctbal:6(float) n_name:35(string) c_address:3(string) c_phone:5(string) c_comment:8(string)
 ├── cardinality: [0 - 20]
 ├── key: (1)
 ├── fd: (1)-->(2,3,5,6,8,35,39)
 ├── ordering: -39
 ├── sort
 │    ├── columns: c_custkey:1(int!null) c_name:2(string) c_address:3(string) c_phone:5(string) c_acctbal:6(float) c_comment:8(string) n_name:35(string) revenue:39(float)
 │    ├── key: (1)
 │    ├── fd: (1)-->(2,3,5,6,8,35,39)
 │    ├── ordering: -39
 │    └── group-by
 │         ├── columns: c_custkey:1(int!null) c_name:2(string) c_address:3(string) c_phone:5(string) c_acctbal:6(float) c_comment:8(string) n_name:35(string) revenue:39(float)
 │         ├── grouping columns: c_custkey:1(int!null)
 │         ├── key: (1)
 │         ├── fd: (1)-->(2,3,5,6,8,35,39)
 │         ├── project
 │         │    ├── columns: column38:38(float) c_custkey:1(int!null) c_name:2(string) c_address:3(string) c_phone:5(string) c_acctbal:6(float) c_comment:8(string) n_name:35(string)
 │         │    ├── fd: (1)-->(2,3,5,6,8,35)
 │         │    ├── inner-join
 │         │    │    ├── columns: c_custkey:1(int!null) c_name:2(string) c_address:3(string) c_nationkey:4(int!null) c_phone:5(string) c_acctbal:6(float) c_comment:8(string) o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null) l_orderkey:18(int!null) l_extendedprice:23(float) l_discount:24(float) l_returnflag:26(string!null) n_nationkey:34(int!null) n_name:35(string)
 │         │    │    ├── fd: ()-->(26), (1)-->(2-6,8), (9)-->(10,13), (1)==(10), (10)==(1), (9)==(18), (18)==(9), (34)-->(35), (4)==(34), (34)==(4)
 │         │    │    ├── inner-join
 │         │    │    │    ├── columns: c_custkey:1(int!null) c_name:2(string) c_address:3(string) c_nationkey:4(int!null) c_phone:5(string) c_acctbal:6(float) c_comment:8(string) o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null) l_orderkey:18(int!null) l_extendedprice:23(float) l_discount:24(float) l_returnflag:26(string!null)
 │         │    │    │    ├── fd: ()-->(26), (1)-->(2-6,8), (9)-->(10,13), (1)==(10), (10)==(1), (9)==(18), (18)==(9)
 │         │    │    │    ├── inner-join
 │         │    │    │    │    ├── columns: c_custkey:1(int!null) c_name:2(string) c_address:3(string) c_nationkey:4(int!null) c_phone:5(string) c_acctbal:6(float) c_comment:8(string) o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null)
 │         │    │    │    │    ├── key: (9)
 │         │    │    │    │    ├── fd: (1)-->(2-6,8), (9)-->(10,13), (1)==(10), (10)==(1)
 │         │    │    │    │    ├── scan customer
 │         │    │    │    │    │    ├── columns: c_custkey:1(int!null) c_name:2(string) c_address:3(string) c_nationkey:4(int!null) c_phone:5(string) c_acctbal:6(float) c_comment:8(string)
 │         │    │    │    │    │    ├── key: (1)
 │         │    │    │    │    │    └── fd: (1)-->(2-6,8)
 │         │    │    │    │    ├── select
 │         │    │    │    │    │    ├── columns: o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date!null)
 │         │    │    │    │    │    ├── key: (9)
 │         │    │    │    │    │    ├── fd: (9)-->(10,13)
 │         │    │    │    │    │    ├── scan orders
 │         │    │    │    │    │    │    ├── columns: o_orderkey:9(int!null) o_custkey:10(int!null) o_orderdate:13(date)
 │         │    │    │    │    │    │    ├── key: (9)
 │         │    │    │    │    │    │    └── fd: (9)-->(10,13)
 │         │    │    │    │    │    └── filters [type=bool, outer=(13), constraints=(/13: [/'1993-10-01' - ])]
 │         │    │    │    │    │         ├── orders.o_orderdate >= '1993-10-01' [type=bool, outer=(13), constraints=(/13: [/'1993-10-01' - ]; tight)]
 │         │    │    │    │    │         └── orders.o_orderdate < ('1993-10-01' + '3mon') [type=bool, outer=(13), constraints=(/13: (/NULL - ])]
 │         │    │    │    │    └── filters [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ]), fd=(1)==(10), (10)==(1)]
 │         │    │    │    │         └── customer.c_custkey = orders.o_custkey [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ])]
 │         │    │    │    ├── select
 │         │    │    │    │    ├── columns: l_orderkey:18(int!null) l_extendedprice:23(float) l_discount:24(float) l_returnflag:26(string!null)
 │         │    │    │    │    ├── fd: ()-->(26)
 │         │    │    │    │    ├── scan lineitem
 │         │    │    │    │    │    └── columns: l_orderkey:18(int!null) l_extendedprice:23(float) l_discount:24(float) l_returnflag:26(string)
 │         │    │    │    │    └── filters [type=bool, outer=(26), constraints=(/26: [/'R' - /'R']; tight), fd=()-->(26)]
 │         │    │    │    │         └── lineitem.l_returnflag = 'R' [type=bool, outer=(26), constraints=(/26: [/'R' - /'R']; tight)]
 │         │    │    │    └── filters [type=bool, outer=(9,18), constraints=(/9: (/NULL - ]; /18: (/NULL - ]), fd=(9)==(18), (18)==(9)]
 │         │    │    │         └── lineitem.l_orderkey = orders.o_orderkey [type=bool, outer=(9,18), constraints=(/9: (/NULL - ]; /18: (/NULL - ])]
 │         │    │    ├── scan nation
 │         │    │    │    ├── columns: n_nationkey:34(int!null) n_name:35(string)
 │         │    │    │    ├── key: (34)
 │         │    │    │    └── fd: (34)-->(35)
 │         │    │    └── filters [type=bool, outer=(4,34), constraints=(/4: (/NULL - ]; /34: (/NULL - ]), fd=(4)==(34), (34)==(4)]
 │         │    │         └── customer.c_nationkey = nation.n_nationkey [type=bool, outer=(4,34), constraints=(/4: (/NULL - ]; /34: (/NULL - ])]
 │         │    └── projections [outer=(1-3,5,6,8,23,24,35)]
 │         │         └── lineitem.l_extendedprice * (1.0 - lineitem.l_discount) [type=float, outer=(23,24)]
 │         └── aggregations [outer=(2,3,5,6,8,35,38)]
 │              ├── sum [type=float, outer=(38)]
 │              │    └── variable: column38 [type=float, outer=(38)]
 │              ├── any-not-null [type=string, outer=(2)]
 │              │    └── variable: customer.c_name [type=string, outer=(2)]
 │              ├── any-not-null [type=string, outer=(3)]
 │              │    └── variable: customer.c_address [type=string, outer=(3)]
 │              ├── any-not-null [type=string, outer=(5)]
 │              │    └── variable: customer.c_phone [type=string, outer=(5)]
 │              ├── any-not-null [type=float, outer=(6)]
 │              │    └── variable: customer.c_acctbal [type=float, outer=(6)]
 │              ├── any-not-null [type=string, outer=(8)]
 │              │    └── variable: customer.c_comment [type=string, outer=(8)]
 │              └── any-not-null [type=string, outer=(35)]
 │                   └── variable: nation.n_name [type=string, outer=(35)]
 └── const: 20 [type=int]

# --------------------------------------------------
# Q11
# Important Stock Identification
# Finds the most important subset of suppliers' stock in a given nation.
#
# Finds, from scanning the available stock of suppliers in a given nation, all
# the parts that represent a significant percentage of the total value of all
# available parts. The query displays the part number and the value of those
# parts in descending order of value.
# --------------------------------------------------
opt
SELECT
    ps_partkey,
    sum(ps_supplycost * ps_availqty::float) AS value
FROM
    partsupp,
    supplier,
    nation
WHERE
    ps_suppkey = s_suppkey
    AND s_nationkey = n_nationkey
    AND n_name = 'GERMANY'
GROUP BY
    ps_partkey HAVING
        sum(ps_supplycost * ps_availqty::float) > (
            SELECT
                sum(ps_supplycost * ps_availqty::float) * 0.0001
            FROM
                partsupp,
                supplier,
                nation
            WHERE
                ps_suppkey = s_suppkey
                AND s_nationkey = n_nationkey
                AND n_name = 'GERMANY'
        )
ORDER BY
    value DESC;
----
sort
 ├── columns: ps_partkey:1(int!null) value:37(float!null)
 ├── key: (1)
 ├── fd: (1)-->(37)
 ├── ordering: -37
 └── select
      ├── columns: partsupp.ps_partkey:1(int!null) column37:37(float!null)
      ├── key: (1)
      ├── fd: (1)-->(37)
      ├── group-by
      │    ├── columns: partsupp.ps_partkey:1(int!null) column37:37(float)
      │    ├── grouping columns: partsupp.ps_partkey:1(int!null)
      │    ├── key: (1)
      │    ├── fd: (1)-->(37)
      │    ├── project
      │    │    ├── columns: column36:36(float) partsupp.ps_partkey:1(int!null)
      │    │    ├── inner-join
      │    │    │    ├── columns: partsupp.ps_partkey:1(int!null) partsupp.ps_suppkey:2(int!null) partsupp.ps_availqty:3(int) partsupp.ps_supplycost:4(float) supplier.s_suppkey:6(int!null) supplier.s_nationkey:9(int!null) nation.n_nationkey:13(int!null) nation.n_name:14(string!null)
      │    │    │    ├── key: (1,6)
      │    │    │    ├── fd: ()-->(14), (1,2)-->(3,4), (6)-->(9), (2)==(6), (6)==(2), (9)==(13), (13)==(9)
      │    │    │    ├── inner-join
      │    │    │    │    ├── columns: partsupp.ps_partkey:1(int!null) partsupp.ps_suppkey:2(int!null) partsupp.ps_availqty:3(int) partsupp.ps_supplycost:4(float) supplier.s_suppkey:6(int!null) supplier.s_nationkey:9(int!null)
      │    │    │    │    ├── key: (1,6)
      │    │    │    │    ├── fd: (1,2)-->(3,4), (6)-->(9), (2)==(6), (6)==(2)
      │    │    │    │    ├── scan partsupp
      │    │    │    │    │    ├── columns: partsupp.ps_partkey:1(int!null) partsupp.ps_suppkey:2(int!null) partsupp.ps_availqty:3(int) partsupp.ps_supplycost:4(float)
      │    │    │    │    │    ├── key: (1,2)
      │    │    │    │    │    └── fd: (1,2)-->(3,4)
      │    │    │    │    ├── scan supplier
      │    │    │    │    │    ├── columns: supplier.s_suppkey:6(int!null) supplier.s_nationkey:9(int!null)
      │    │    │    │    │    ├── key: (6)
      │    │    │    │    │    └── fd: (6)-->(9)
      │    │    │    │    └── filters [type=bool, outer=(2,6), constraints=(/2: (/NULL - ]; /6: (/NULL - ]), fd=(2)==(6), (6)==(2)]
      │    │    │    │         └── partsupp.ps_suppkey = supplier.s_suppkey [type=bool, outer=(2,6), constraints=(/2: (/NULL - ]; /6: (/NULL - ])]
      │    │    │    ├── select
      │    │    │    │    ├── columns: nation.n_nationkey:13(int!null) nation.n_name:14(string!null)
      │    │    │    │    ├── key: (13)
      │    │    │    │    ├── fd: ()-->(14)
      │    │    │    │    ├── scan nation
      │    │    │    │    │    ├── columns: nation.n_nationkey:13(int!null) nation.n_name:14(string)
      │    │    │    │    │    ├── key: (13)
      │    │    │    │    │    └── fd: (13)-->(14)
      │    │    │    │    └── filters [type=bool, outer=(14), constraints=(/14: [/'GERMANY' - /'GERMANY']; tight), fd=()-->(14)]
      │    │    │    │         └── nation.n_name = 'GERMANY' [type=bool, outer=(14), constraints=(/14: [/'GERMANY' - /'GERMANY']; tight)]
      │    │    │    └── filters [type=bool, outer=(9,13), constraints=(/9: (/NULL - ]; /13: (/NULL - ]), fd=(9)==(13), (13)==(9)]
      │    │    │         └── supplier.s_nationkey = nation.n_nationkey [type=bool, outer=(9,13), constraints=(/9: (/NULL - ]; /13: (/NULL - ])]
      │    │    └── projections [outer=(1,3,4)]
      │    │         └── partsupp.ps_supplycost * partsupp.ps_availqty::FLOAT [type=float, outer=(3,4)]
      │    └── aggregations [outer=(36)]
      │         └── sum [type=float, outer=(36)]
      │              └── variable: column36 [type=float, outer=(36)]
      └── filters [type=bool, outer=(37), constraints=(/37: (/NULL - ])]
           └── gt [type=bool, outer=(37), constraints=(/37: (/NULL - ])]
                ├── variable: column37 [type=float, outer=(37)]
                └── subquery [type=float]
                     └── project
                          ├── columns: "?column?":35(float)
                          ├── cardinality: [1 - 1]
                          ├── key: ()
                          ├── fd: ()-->(35)
                          ├── scalar-group-by
                          │    ├── columns: column34:34(float)
                          │    ├── cardinality: [1 - 1]
                          │    ├── key: ()
                          │    ├── fd: ()-->(34)
                          │    ├── project
                          │    │    ├── columns: column33:33(float)
                          │    │    ├── inner-join
                          │    │    │    ├── columns: partsupp.ps_suppkey:18(int!null) partsupp.ps_availqty:19(int) partsupp.ps_supplycost:20(float) supplier.s_suppkey:22(int!null) supplier.s_nationkey:25(int!null) nation.n_nationkey:29(int!null) nation.n_name:30(string!null)
                          │    │    │    ├── fd: ()-->(30), (22)-->(25), (18)==(22), (22)==(18), (25)==(29), (29)==(25)
                          │    │    │    ├── inner-join
                          │    │    │    │    ├── columns: partsupp.ps_suppkey:18(int!null) partsupp.ps_availqty:19(int) partsupp.ps_supplycost:20(float) supplier.s_suppkey:22(int!null) supplier.s_nationkey:25(int!null)
                          │    │    │    │    ├── fd: (22)-->(25), (18)==(22), (22)==(18)
                          │    │    │    │    ├── scan partsupp
                          │    │    │    │    │    └── columns: partsupp.ps_suppkey:18(int!null) partsupp.ps_availqty:19(int) partsupp.ps_supplycost:20(float)
                          │    │    │    │    ├── scan supplier
                          │    │    │    │    │    ├── columns: supplier.s_suppkey:22(int!null) supplier.s_nationkey:25(int!null)
                          │    │    │    │    │    ├── key: (22)
                          │    │    │    │    │    └── fd: (22)-->(25)
                          │    │    │    │    └── filters [type=bool, outer=(18,22), constraints=(/18: (/NULL - ]; /22: (/NULL - ]), fd=(18)==(22), (22)==(18)]
                          │    │    │    │         └── partsupp.ps_suppkey = supplier.s_suppkey [type=bool, outer=(18,22), constraints=(/18: (/NULL - ]; /22: (/NULL - ])]
                          │    │    │    ├── select
                          │    │    │    │    ├── columns: nation.n_nationkey:29(int!null) nation.n_name:30(string!null)
                          │    │    │    │    ├── key: (29)
                          │    │    │    │    ├── fd: ()-->(30)
                          │    │    │    │    ├── scan nation
                          │    │    │    │    │    ├── columns: nation.n_nationkey:29(int!null) nation.n_name:30(string)
                          │    │    │    │    │    ├── key: (29)
                          │    │    │    │    │    └── fd: (29)-->(30)
                          │    │    │    │    └── filters [type=bool, outer=(30), constraints=(/30: [/'GERMANY' - /'GERMANY']; tight), fd=()-->(30)]
                          │    │    │    │         └── nation.n_name = 'GERMANY' [type=bool, outer=(30), constraints=(/30: [/'GERMANY' - /'GERMANY']; tight)]
                          │    │    │    └── filters [type=bool, outer=(25,29), constraints=(/25: (/NULL - ]; /29: (/NULL - ]), fd=(25)==(29), (29)==(25)]
                          │    │    │         └── supplier.s_nationkey = nation.n_nationkey [type=bool, outer=(25,29), constraints=(/25: (/NULL - ]; /29: (/NULL - ])]
                          │    │    └── projections [outer=(19,20)]
                          │    │         └── partsupp.ps_supplycost * partsupp.ps_availqty::FLOAT [type=float, outer=(19,20)]
                          │    └── aggregations [outer=(33)]
                          │         └── sum [type=float, outer=(33)]
                          │              └── variable: column33 [type=float, outer=(33)]
                          └── projections [outer=(34)]
                               └── column34 * 0.0001 [type=float, outer=(34)]

# --------------------------------------------------
# Q12
# Shipping Modes and Order Priority
# Determines whether selecting less expensive modes of shipping is negatively
# affecting the critical-priority orders by causing more parts to be received by
# customers after the committed date.
#
# Counts, by ship mode, for lineitems actually received by customers in a given
# year, the number of lineitems belonging to orders for which the l_receiptdate
# exceeds the l_commitdate for two different specified ship modes. Only
# lineitems that were actually shipped before the l_commitdate are considered.
# The late lineitems are partitioned into two groups, those with priority URGENT
# or HIGH, and those with a priority other than URGENT or HIGH.
# --------------------------------------------------
opt
SELECT
    l_shipmode,
    sum(CASE
        WHEN o_orderpriority = '1-URGENT'
            OR o_orderpriority = '2-HIGH'
            THEN 1
        ELSE 0
    END) AS high_line_count,
    sum(CASE
        WHEN o_orderpriority <> '1-URGENT'
            AND o_orderpriority <> '2-HIGH'
            THEN 1
        ELSE 0
    END) AS low_line_count
FROM
    orders,
    lineitem
WHERE
    o_orderkey = l_orderkey
    AND l_shipmode IN ('MAIL', 'SHIP')
    AND l_commitdate < l_receiptdate
    AND l_shipdate < l_commitdate
    AND l_receiptdate >= DATE '1994-01-01'
    AND l_receiptdate < DATE '1994-01-01' + INTERVAL '1' YEAR
GROUP BY
    l_shipmode
ORDER BY
    l_shipmode;
----
sort
 ├── columns: l_shipmode:24(string!null) high_line_count:27(decimal) low_line_count:29(decimal)
 ├── key: (24)
 ├── fd: (24)-->(27,29)
 ├── ordering: +24
 └── group-by
      ├── columns: l_shipmode:24(string!null) high_line_count:27(decimal) low_line_count:29(decimal)
      ├── grouping columns: l_shipmode:24(string!null)
      ├── key: (24)
      ├── fd: (24)-->(27,29)
      ├── project
      │    ├── columns: column26:26(int) column28:28(int) l_shipmode:24(string!null)
      │    ├── inner-join (lookup orders)
      │    │    ├── columns: o_orderkey:1(int!null) o_orderpriority:6(string) l_orderkey:10(int!null) l_shipdate:20(date!null) l_commitdate:21(date!null) l_receiptdate:22(date!null) l_shipmode:24(string!null)
      │    │    ├── key columns: [10] = [1]
      │    │    ├── fd: (1)-->(6), (1)==(10), (10)==(1)
      │    │    ├── select
      │    │    │    ├── columns: l_orderkey:10(int!null) l_shipdate:20(date!null) l_commitdate:21(date!null) l_receiptdate:22(date!null) l_shipmode:24(string!null)
      │    │    │    ├── scan lineitem
      │    │    │    │    └── columns: l_orderkey:10(int!null) l_shipdate:20(date) l_commitdate:21(date) l_receiptdate:22(date) l_shipmode:24(string)
      │    │    │    └── filters [type=bool, outer=(20-22,24), constraints=(/20: (/NULL - ]; /21: (/NULL - ]; /22: [/'1994-01-01' - ]; /24: [/'MAIL' - /'MAIL'] [/'SHIP' - /'SHIP'])]
      │    │    │         ├── lineitem.l_shipmode IN ('MAIL', 'SHIP') [type=bool, outer=(24), constraints=(/24: [/'MAIL' - /'MAIL'] [/'SHIP' - /'SHIP']; tight)]
      │    │    │         ├── lineitem.l_commitdate < lineitem.l_receiptdate [type=bool, outer=(21,22), constraints=(/21: (/NULL - ]; /22: (/NULL - ])]
      │    │    │         ├── lineitem.l_shipdate < lineitem.l_commitdate [type=bool, outer=(20,21), constraints=(/20: (/NULL - ]; /21: (/NULL - ])]
      │    │    │         ├── lineitem.l_receiptdate >= '1994-01-01' [type=bool, outer=(22), constraints=(/22: [/'1994-01-01' - ]; tight)]
      │    │    │         └── lineitem.l_receiptdate < ('1994-01-01' + '1y') [type=bool, outer=(22), constraints=(/22: (/NULL - ])]
      │    │    └── filters [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ]), fd=(1)==(10), (10)==(1)]
      │    │         └── orders.o_orderkey = lineitem.l_orderkey [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ])]
      │    └── projections [outer=(6,24)]
      │         ├── CASE WHEN (orders.o_orderpriority = '1-URGENT') OR (orders.o_orderpriority = '2-HIGH') THEN 1 ELSE 0 END [type=int, outer=(6)]
      │         └── CASE WHEN (orders.o_orderpriority != '1-URGENT') AND (orders.o_orderpriority != '2-HIGH') THEN 1 ELSE 0 END [type=int, outer=(6)]
      └── aggregations [outer=(26,28)]
           ├── sum [type=decimal, outer=(26)]
           │    └── variable: column26 [type=int, outer=(26)]
           └── sum [type=decimal, outer=(28)]
                └── variable: column28 [type=int, outer=(28)]

# --------------------------------------------------
# Q13
# Customer Distribution
# Seeks relationships between customers and the size of their orders.
#
# Determines the distribution of customers by the number of orders they have
# made, including customers who have no record of orders, past or present. It
# counts and reports how many customers have no orders, how many have 1, 2, 3,
# etc. A check is made to ensure that the orders counted do not fall into one of
# several special categories of orders. Special categories are identified in the
# order comment column by looking for a particular pattern.
# --------------------------------------------------
opt
SELECT
    c_count, count(*) AS custdist
FROM (
    SELECT
        c_custkey,
        count(o_orderkey)
    FROM
        customer LEFT OUTER JOIN orders ON
            c_custkey = o_custkey
            AND o_comment NOT LIKE '%special%requests%'
    GROUP BY
        c_custkey
    ) AS c_orders (c_custkey, c_count)
GROUP BY
    c_count
ORDER BY
    custdist DESC,
    c_count DESC;
----
sort
 ├── columns: c_count:18(int) custdist:19(int)
 ├── key: (18)
 ├── fd: (18)-->(19)
 ├── ordering: -19,-18
 └── group-by
      ├── columns: count:18(int) custdist:19(int)
      ├── grouping columns: count:18(int)
      ├── key: (18)
      ├── fd: (18)-->(19)
      ├── group-by
      │    ├── columns: c_custkey:1(int!null) count:18(int)
      │    ├── grouping columns: c_custkey:1(int!null)
      │    ├── key: (1)
      │    ├── fd: (1)-->(18)
      │    ├── left-join
      │    │    ├── columns: c_custkey:1(int!null) o_orderkey:9(int) o_custkey:10(int) o_comment:17(string)
      │    │    ├── key: (1,9)
      │    │    ├── fd: (9)-->(10,17)
      │    │    ├── scan customer
      │    │    │    ├── columns: c_custkey:1(int!null)
      │    │    │    └── key: (1)
      │    │    ├── select
      │    │    │    ├── columns: o_orderkey:9(int!null) o_custkey:10(int!null) o_comment:17(string)
      │    │    │    ├── key: (9)
      │    │    │    ├── fd: (9)-->(10,17)
      │    │    │    ├── scan orders
      │    │    │    │    ├── columns: o_orderkey:9(int!null) o_custkey:10(int!null) o_comment:17(string)
      │    │    │    │    ├── key: (9)
      │    │    │    │    └── fd: (9)-->(10,17)
      │    │    │    └── filters [type=bool, outer=(17)]
      │    │    │         └── orders.o_comment NOT LIKE '%special%requests%' [type=bool, outer=(17)]
      │    │    └── filters [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ]), fd=(1)==(10), (10)==(1)]
      │    │         └── customer.c_custkey = orders.o_custkey [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ])]
      │    └── aggregations [outer=(9)]
      │         └── count [type=int, outer=(9)]
      │              └── variable: orders.o_orderkey [type=int, outer=(9)]
      └── aggregations
           └── count-rows [type=int]

# --------------------------------------------------
# Q14
# Promotion Effect
# Monitors the market response to a promotion such as TV advertisements or a
# special campaign.
#
# Determines what percentage of the revenue in a given year and month was
# derived from promotional parts. The query considers only parts actually
# shipped in that month and gives the percentage. Revenue is defined as
# (l_extendedprice * (1-l_discount)).
# --------------------------------------------------
opt
SELECT
    100.00 * sum(CASE
        WHEN p_type LIKE 'PROMO%'
            THEN l_extendedprice * (1 - l_discount)
        ELSE 0
    END) / sum(l_extendedprice * (1 - l_discount)) AS promo_revenue
FROM
    lineitem,
    part
WHERE
    l_partkey = p_partkey
    AND l_shipdate >= DATE '1995-09-01'
    AND l_shipdate < DATE '1995-09-01' + INTERVAL '1' MONTH;
----
project
 ├── columns: promo_revenue:30(float)
 ├── cardinality: [1 - 1]
 ├── key: ()
 ├── fd: ()-->(30)
 ├── scalar-group-by
 │    ├── columns: column27:27(float) column29:29(float)
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(27,29)
 │    ├── project
 │    │    ├── columns: column26:26(float) column28:28(float)
 │    │    ├── inner-join
 │    │    │    ├── columns: l_partkey:2(int!null) l_extendedprice:6(float) l_discount:7(float) l_shipdate:11(date!null) p_partkey:17(int!null) p_type:21(string)
 │    │    │    ├── fd: (17)-->(21), (2)==(17), (17)==(2)
 │    │    │    ├── scan part
 │    │    │    │    ├── columns: p_partkey:17(int!null) p_type:21(string)
 │    │    │    │    ├── key: (17)
 │    │    │    │    └── fd: (17)-->(21)
 │    │    │    ├── select
 │    │    │    │    ├── columns: l_partkey:2(int!null) l_extendedprice:6(float) l_discount:7(float) l_shipdate:11(date!null)
 │    │    │    │    ├── scan lineitem
 │    │    │    │    │    └── columns: l_partkey:2(int!null) l_extendedprice:6(float) l_discount:7(float) l_shipdate:11(date)
 │    │    │    │    └── filters [type=bool, outer=(11), constraints=(/11: [/'1995-09-01' - ])]
 │    │    │    │         ├── lineitem.l_shipdate >= '1995-09-01' [type=bool, outer=(11), constraints=(/11: [/'1995-09-01' - ]; tight)]
 │    │    │    │         └── lineitem.l_shipdate < ('1995-09-01' + '1mon') [type=bool, outer=(11), constraints=(/11: (/NULL - ])]
 │    │    │    └── filters [type=bool, outer=(2,17), constraints=(/2: (/NULL - ]; /17: (/NULL - ]), fd=(2)==(17), (17)==(2)]
 │    │    │         └── lineitem.l_partkey = part.p_partkey [type=bool, outer=(2,17), constraints=(/2: (/NULL - ]; /17: (/NULL - ])]
 │    │    └── projections [outer=(6,7,21)]
 │    │         ├── CASE WHEN part.p_type LIKE 'PROMO%' THEN lineitem.l_extendedprice * (1.0 - lineitem.l_discount) ELSE 0.0 END [type=float, outer=(6,7,21)]
 │    │         └── lineitem.l_extendedprice * (1.0 - lineitem.l_discount) [type=float, outer=(6,7)]
 │    └── aggregations [outer=(26,28)]
 │         ├── sum [type=float, outer=(26)]
 │         │    └── variable: column26 [type=float, outer=(26)]
 │         └── sum [type=float, outer=(28)]
 │              └── variable: column28 [type=float, outer=(28)]
 └── projections [outer=(27,29)]
      └── (column27 * 100.0) / column29 [type=float, outer=(27,29)]

# --------------------------------------------------
# Q15
# Top Supplier
# Determines the top supplier so it can be rewarded, given more business, or
# identified for special recognition.
#
# Finds the supplier who contributed the most to the overall revenue for parts
# shipped during a given quarter of a given year. In case of a tie, the query
# lists all suppliers whose contribution was equal to the maximum, presented in
# supplier number order.
#
# TODO:
#   1. Support views
# --------------------------------------------------
#opt
#CREATE VIEW revenue0 (supplier_no, total_revenue) AS
#    SELECT
#        l_suppkey,
#        sum(l_extendedprice * (1 - l_discount))
#    FROM
#        lineitem
#    WHERE
#        l_shipdate >= DATE '1996-01-01'
#        AND l_shipdate < DATE '1996-01-01' + INTERVAL '3' MONTH
#    GROUP BY
#        l_suppkey;
#
#SELECT
#    s_suppkey,
#    s_name,
#    s_address,
#    s_phone,
#    total_revenue
#FROM
#    supplier,
#    revenue0
#WHERE
#    s_suppkey = supplier_no
#    AND total_revenue = (
#        SELECT
#            max(total_revenue)
#        FROM
#            revenue0
#    )
#ORDER BY
#    s_suppkey;
#
#DROP VIEW revenue0;
#----

# --------------------------------------------------
# Q16
# Parts/Supplier Relationship
# Finds out how many suppliers can supply parts with given attributes. It might
# be used, for example, to determine whether there is a sufficient number of
# suppliers for heavily ordered parts.
#
# Counts the number of suppliers who can supply parts that satisfy a particular
# customer's requirements. The customer is interested in parts of eight
# different sizes as long as they are not of a given type, not of a given brand,
# and not from a supplier who has had complaints registered at the Better
# Business Bureau. Results must be presented in descending count and ascending
# brand, type, and size.
#
# TODO:
#   1. Support DISTINCT in aggregate function
# --------------------------------------------------
#opt
#SELECT
#    p_brand,
#    p_type,
#    p_size,
#    count(DISTINCT ps_suppkey) AS supplier_cnt
#FROM
#    partsupp,
#    part
#WHERE
#    p_partkey = ps_partkey
#    AND p_brand <> 'Brand#45'
#    AND p_type NOT LIKE 'MEDIUM POLISHED %'
#    AND p_size IN (49, 14, 23, 45, 19, 3, 36, 9)
#    AND ps_suppkey NOT IN (
#        SELECT
#            s_suppkey
#        FROM
#            supplier
#        WHERE
#            s_comment LIKE '%Customer%Complaints%'
#    )
#GROUP BY
#    p_brand,
#    p_type,
#    p_size
#ORDER BY
#    supplier_cnt DESC,
#    p_brand,
#    p_type,
#    p_size;
#----

# --------------------------------------------------
# Q17
# Small-Quantity-Order Revenue
# Determines how much average yearly revenue would be lost if orders were no
# longer filled for small quantities of certain parts. This may reduce overhead
# expenses by concentrating sales on larger shipments.
#
# Considers parts of a given brand and with a given container type and
# determines the average lineitem quantity of such parts ordered for all orders
# (past and pending) in the 7-year database. What would be the average yearly
# gross (undiscounted) loss in revenue if orders for these parts with a quantity
# of less than 20% of this average were no longer taken?
#
# TODO:
#   1. Discard non-primary key columns from grouping columns
#   2. Allow Select to be pushed below RowNumber used to add key column
# --------------------------------------------------
opt
SELECT
    sum(l_extendedprice) / 7.0 AS avg_yearly
FROM
    lineitem,
    part
WHERE
    p_partkey = l_partkey
    AND p_brand = 'Brand#23'
    AND p_container = 'MED BOX'
    AND l_quantity < (
        SELECT
            0.2 * avg(l_quantity)
        FROM
            lineitem
        WHERE
            l_partkey = p_partkey
    );
----
project
 ├── columns: avg_yearly:45(float)
 ├── cardinality: [1 - 1]
 ├── key: ()
 ├── fd: ()-->(45)
 ├── scalar-group-by
 │    ├── columns: column44:44(float)
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(44)
 │    ├── inner-join
 │    │    ├── columns: lineitem.l_partkey:2(int!null) lineitem.l_quantity:5(float!null) lineitem.l_extendedprice:6(float) p_partkey:17(int!null) "?column?":43(float!null)
 │    │    ├── fd: (17)-->(43), (2)==(17), (17)==(2)
 │    │    ├── scan lineitem
 │    │    │    └── columns: lineitem.l_partkey:2(int!null) lineitem.l_quantity:5(float) lineitem.l_extendedprice:6(float)
 │    │    ├── project
 │    │    │    ├── columns: "?column?":43(float) p_partkey:17(int!null)
 │    │    │    ├── key: (17)
 │    │    │    ├── fd: (17)-->(43)
 │    │    │    ├── group-by
 │    │    │    │    ├── columns: p_partkey:17(int!null) column42:42(float)
 │    │    │    │    ├── grouping columns: p_partkey:17(int!null)
 │    │    │    │    ├── key: (17)
 │    │    │    │    ├── fd: (17)-->(42)
 │    │    │    │    ├── right-join
 │    │    │    │    │    ├── columns: p_partkey:17(int!null) p_brand:20(string!null) p_container:23(string!null) lineitem.l_partkey:27(int) lineitem.l_quantity:30(float)
 │    │    │    │    │    ├── fd: ()-->(20,23)
 │    │    │    │    │    ├── scan lineitem
 │    │    │    │    │    │    └── columns: lineitem.l_partkey:27(int!null) lineitem.l_quantity:30(float)
 │    │    │    │    │    ├── select
 │    │    │    │    │    │    ├── columns: p_partkey:17(int!null) p_brand:20(string!null) p_container:23(string!null)
 │    │    │    │    │    │    ├── key: (17)
 │    │    │    │    │    │    ├── fd: ()-->(20,23)
 │    │    │    │    │    │    ├── scan part
 │    │    │    │    │    │    │    ├── columns: p_partkey:17(int!null) p_brand:20(string) p_container:23(string)
 │    │    │    │    │    │    │    ├── key: (17)
 │    │    │    │    │    │    │    └── fd: (17)-->(20,23)
 │    │    │    │    │    │    └── filters [type=bool, outer=(20,23), constraints=(/20: [/'Brand#23' - /'Brand#23']; /23: [/'MED BOX' - /'MED BOX']; tight), fd=()-->(20,23)]
 │    │    │    │    │    │         ├── part.p_brand = 'Brand#23' [type=bool, outer=(20), constraints=(/20: [/'Brand#23' - /'Brand#23']; tight)]
 │    │    │    │    │    │         └── part.p_container = 'MED BOX' [type=bool, outer=(23), constraints=(/23: [/'MED BOX' - /'MED BOX']; tight)]
 │    │    │    │    │    └── filters [type=bool, outer=(17,27), constraints=(/17: (/NULL - ]; /27: (/NULL - ]), fd=(17)==(27), (27)==(17)]
 │    │    │    │    │         └── lineitem.l_partkey = part.p_partkey [type=bool, outer=(17,27), constraints=(/17: (/NULL - ]; /27: (/NULL - ])]
 │    │    │    │    └── aggregations [outer=(30)]
 │    │    │    │         └── avg [type=float, outer=(30)]
 │    │    │    │              └── variable: lineitem.l_quantity [type=float, outer=(30)]
 │    │    │    └── projections [outer=(17,42)]
 │    │    │         └── column42 * 0.2 [type=float, outer=(42)]
 │    │    └── filters [type=bool, outer=(2,5,17,43), constraints=(/2: (/NULL - ]; /5: (/NULL - ]; /17: (/NULL - ]; /43: (/NULL - ]), fd=(2)==(17), (17)==(2)]
 │    │         ├── part.p_partkey = lineitem.l_partkey [type=bool, outer=(2,17), constraints=(/2: (/NULL - ]; /17: (/NULL - ])]
 │    │         └── lineitem.l_quantity < ?column? [type=bool, outer=(5,43), constraints=(/5: (/NULL - ]; /43: (/NULL - ])]
 │    └── aggregations [outer=(6)]
 │         └── sum [type=float, outer=(6)]
 │              └── variable: lineitem.l_extendedprice [type=float, outer=(6)]
 └── projections [outer=(44)]
      └── column44 / 7.0 [type=float, outer=(44)]

# --------------------------------------------------
# Q18
# Large Volume Customer
# Ranks customers based on their having placed a large quantity order. Large
# quantity orders are defined as those orders whose total quantity is above a
# certain level.
#
# Finds a list of the top 100 customers who have ever placed large quantity
# orders. The query lists the customer name, customer key, the order key, date
# and total price and the quantity for the order.
#
# TODO:
#   1. Discard non-primary key columns from grouping columns
# --------------------------------------------------
opt
SELECT
    c_name,
    c_custkey,
    o_orderkey,
    o_orderdate,
    o_totalprice,
    sum(l_quantity)
FROM
    customer,
    orders,
    lineitem
WHERE
    o_orderkey IN (
        SELECT
            l_orderkey
        FROM
            lineitem
        GROUP BY
            l_orderkey HAVING
                sum(l_quantity) > 300
    )
    AND c_custkey = o_custkey
    AND o_orderkey = l_orderkey
GROUP BY
    c_name,
    c_custkey,
    o_orderkey,
    o_orderdate,
    o_totalprice
ORDER BY
    o_totalprice DESC,
    o_orderdate
LIMIT 100;
----
limit
 ├── columns: c_name:2(string) c_custkey:1(int) o_orderkey:9(int!null) o_orderdate:13(date) o_totalprice:12(float) sum:51(float)
 ├── cardinality: [0 - 100]
 ├── key: (9)
 ├── fd: (1)-->(2), (9)-->(1,2,12,13,51)
 ├── ordering: -12,+13
 ├── sort
 │    ├── columns: c_custkey:1(int) c_name:2(string) o_orderkey:9(int!null) o_totalprice:12(float) o_orderdate:13(date) sum:51(float)
 │    ├── key: (9)
 │    ├── fd: (1)-->(2), (9)-->(1,2,12,13,51)
 │    ├── ordering: -12,+13
 │    └── group-by
 │         ├── columns: c_custkey:1(int) c_name:2(string) o_orderkey:9(int!null) o_totalprice:12(float) o_orderdate:13(date) sum:51(float)
 │         ├── grouping columns: o_orderkey:9(int!null)
 │         ├── key: (9)
 │         ├── fd: (1)-->(2), (9)-->(1,2,12,13,51)
 │         ├── inner-join
 │         │    ├── columns: c_custkey:1(int!null) c_name:2(string) o_orderkey:9(int!null) o_custkey:10(int!null) o_totalprice:12(float) o_orderdate:13(date) lineitem.l_orderkey:18(int!null) lineitem.l_quantity:22(float)
 │         │    ├── fd: (1)-->(2), (9)-->(10,12,13), (1)==(10), (10)==(1), (9)==(18), (18)==(9)
 │         │    ├── inner-join
 │         │    │    ├── columns: c_custkey:1(int!null) c_name:2(string) o_orderkey:9(int!null) o_custkey:10(int!null) o_totalprice:12(float) o_orderdate:13(date)
 │         │    │    ├── key: (9)
 │         │    │    ├── fd: (1)-->(2), (9)-->(10,12,13), (1)==(10), (10)==(1)
 │         │    │    ├── semi-join
 │         │    │    │    ├── columns: o_orderkey:9(int!null) o_custkey:10(int!null) o_totalprice:12(float) o_orderdate:13(date)
 │         │    │    │    ├── key: (9)
 │         │    │    │    ├── fd: (9)-->(10,12,13)
 │         │    │    │    ├── scan orders
 │         │    │    │    │    ├── columns: o_orderkey:9(int!null) o_custkey:10(int!null) o_totalprice:12(float) o_orderdate:13(date)
 │         │    │    │    │    ├── key: (9)
 │         │    │    │    │    └── fd: (9)-->(10,12,13)
 │         │    │    │    ├── select
 │         │    │    │    │    ├── columns: lineitem.l_orderkey:34(int!null) column50:50(float!null)
 │         │    │    │    │    ├── key: (34)
 │         │    │    │    │    ├── fd: (34)-->(50)
 │         │    │    │    │    ├── group-by
 │         │    │    │    │    │    ├── columns: lineitem.l_orderkey:34(int!null) column50:50(float)
 │         │    │    │    │    │    ├── grouping columns: lineitem.l_orderkey:34(int!null)
 │         │    │    │    │    │    ├── key: (34)
 │         │    │    │    │    │    ├── fd: (34)-->(50)
 │         │    │    │    │    │    ├── scan lineitem
 │         │    │    │    │    │    │    └── columns: lineitem.l_orderkey:34(int!null) lineitem.l_quantity:38(float)
 │         │    │    │    │    │    └── aggregations [outer=(38)]
 │         │    │    │    │    │         └── sum [type=float, outer=(38)]
 │         │    │    │    │    │              └── variable: lineitem.l_quantity [type=float, outer=(38)]
 │         │    │    │    │    └── filters [type=bool, outer=(50), constraints=(/50: [/300.00000000000006 - ]; tight)]
 │         │    │    │    │         └── column50 > 300.0 [type=bool, outer=(50), constraints=(/50: [/300.00000000000006 - ]; tight)]
 │         │    │    │    └── filters [type=bool, outer=(9,34), constraints=(/9: (/NULL - ]; /34: (/NULL - ]), fd=(9)==(34), (34)==(9)]
 │         │    │    │         └── orders.o_orderkey = lineitem.l_orderkey [type=bool, outer=(9,34), constraints=(/9: (/NULL - ]; /34: (/NULL - ])]
 │         │    │    ├── scan customer
 │         │    │    │    ├── columns: c_custkey:1(int!null) c_name:2(string)
 │         │    │    │    ├── key: (1)
 │         │    │    │    └── fd: (1)-->(2)
 │         │    │    └── filters [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ]), fd=(1)==(10), (10)==(1)]
 │         │    │         └── customer.c_custkey = orders.o_custkey [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ])]
 │         │    ├── scan lineitem
 │         │    │    └── columns: lineitem.l_orderkey:18(int!null) lineitem.l_quantity:22(float)
 │         │    └── filters [type=bool, outer=(9,18), constraints=(/9: (/NULL - ]; /18: (/NULL - ]), fd=(9)==(18), (18)==(9)]
 │         │         └── orders.o_orderkey = lineitem.l_orderkey [type=bool, outer=(9,18), constraints=(/9: (/NULL - ]; /18: (/NULL - ])]
 │         └── aggregations [outer=(1,2,12,13,22)]
 │              ├── sum [type=float, outer=(22)]
 │              │    └── variable: lineitem.l_quantity [type=float, outer=(22)]
 │              ├── any-not-null [type=int, outer=(1)]
 │              │    └── variable: customer.c_custkey [type=int, outer=(1)]
 │              ├── any-not-null [type=string, outer=(2)]
 │              │    └── variable: customer.c_name [type=string, outer=(2)]
 │              ├── any-not-null [type=float, outer=(12)]
 │              │    └── variable: orders.o_totalprice [type=float, outer=(12)]
 │              └── any-not-null [type=date, outer=(13)]
 │                   └── variable: orders.o_orderdate [type=date, outer=(13)]
 └── const: 100 [type=int]

# --------------------------------------------------
# Q19
# Discounted Revenue
# Reports the gross discounted revenue attributed to the sale of selected parts
# handled in a particular manner. This query is an example of code such as might
# be produced programmatically by a data mining tool.
#
# The Discounted Revenue query finds the gross discounted revenue for all orders
# for three different types of parts that were shipped by air and delivered in
# person. Parts are selected based on the combination of specific brands, a list
# of containers, and a range of sizes.
# --------------------------------------------------
opt
SELECT
    sum(l_extendedprice* (1 - l_discount)) AS revenue
FROM
    lineitem,
    part
WHERE
    (
        p_partkey = l_partkey
        AND p_brand = 'Brand#12'
        AND p_container IN ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
        AND l_quantity >= 1 AND l_quantity <= 1 + 10
        AND p_size BETWEEN 1 AND 5
        AND l_shipmode IN ('AIR', 'AIR REG')
        AND l_shipinstruct = 'DELIVER IN PERSON'
    )
    OR
    (
        p_partkey = l_partkey
        AND p_brand = 'Brand#23'
        AND p_container IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
        AND l_quantity >= 10 AND l_quantity <= 10 + 10
        AND p_size BETWEEN 1 AND 10
        AND l_shipmode IN ('AIR', 'AIR REG')
        AND l_shipinstruct = 'DELIVER IN PERSON'
    )
    OR
    (
        p_partkey = l_partkey
        AND p_brand = 'Brand#34'
        AND p_container IN ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
        AND l_quantity >= 20 AND l_quantity <= 20 + 10
        AND p_size BETWEEN 1 AND 15
        AND l_shipmode IN ('AIR', 'AIR REG')
        AND l_shipinstruct = 'DELIVER IN PERSON'
    );
----
scalar-group-by
 ├── columns: revenue:27(float)
 ├── cardinality: [1 - 1]
 ├── key: ()
 ├── fd: ()-->(27)
 ├── project
 │    ├── columns: column26:26(float)
 │    ├── inner-join (lookup part)
 │    │    ├── columns: l_partkey:2(int!null) l_quantity:5(float) l_extendedprice:6(float) l_discount:7(float) l_shipinstruct:14(string!null) l_shipmode:15(string!null) p_partkey:17(int!null) p_brand:20(string) p_size:22(int!null) p_container:23(string)
 │    │    ├── key columns: [2] = [17]
 │    │    ├── fd: ()-->(14), (17)-->(20,22,23), (2)==(17), (17)==(2)
 │    │    ├── select
 │    │    │    ├── columns: l_partkey:2(int!null) l_quantity:5(float) l_extendedprice:6(float) l_discount:7(float) l_shipinstruct:14(string!null) l_shipmode:15(string!null)
 │    │    │    ├── fd: ()-->(14)
 │    │    │    ├── scan lineitem
 │    │    │    │    └── columns: l_partkey:2(int!null) l_quantity:5(float) l_extendedprice:6(float) l_discount:7(float) l_shipinstruct:14(string) l_shipmode:15(string)
 │    │    │    └── filters [type=bool, outer=(14,15), constraints=(/14: [/'DELIVER IN PERSON' - /'DELIVER IN PERSON']; /15: [/'AIR' - /'AIR'] [/'AIR REG' - /'AIR REG']; tight), fd=()-->(14)]
 │    │    │         ├── lineitem.l_shipmode IN ('AIR', 'AIR REG') [type=bool, outer=(15), constraints=(/15: [/'AIR' - /'AIR'] [/'AIR REG' - /'AIR REG']; tight)]
 │    │    │         └── lineitem.l_shipinstruct = 'DELIVER IN PERSON' [type=bool, outer=(14), constraints=(/14: [/'DELIVER IN PERSON' - /'DELIVER IN PERSON']; tight)]
 │    │    └── filters [type=bool, outer=(2,5,17,20,22,23), constraints=(/2: (/NULL - ]; /17: (/NULL - ]; /22: [/1 - ]), fd=(2)==(17), (17)==(2)]
 │    │         ├── part.p_partkey = lineitem.l_partkey [type=bool, outer=(2,17), constraints=(/2: (/NULL - ]; /17: (/NULL - ])]
 │    │         ├── ((((((part.p_brand = 'Brand#12') AND (part.p_container IN ('SM BOX', 'SM CASE', 'SM PACK', 'SM PKG'))) AND (lineitem.l_quantity >= 1.0)) AND (lineitem.l_quantity <= 11.0)) AND (part.p_size <= 5)) OR (((((part.p_brand = 'Brand#23') AND (part.p_container IN ('MED BAG', 'MED BOX', 'MED PACK', 'MED PKG'))) AND (lineitem.l_quantity >= 10.0)) AND (lineitem.l_quantity <= 20.0)) AND (part.p_size <= 10))) OR (((((part.p_brand = 'Brand#34') AND (part.p_container IN ('LG BOX', 'LG CASE', 'LG PACK', 'LG PKG'))) AND (lineitem.l_quantity >= 20.0)) AND (lineitem.l_quantity <= 30.0)) AND (part.p_size <= 15)) [type=bool, outer=(5,20,22,23)]
 │    │         └── part.p_size >= 1 [type=bool, outer=(22), constraints=(/22: [/1 - ]; tight)]
 │    └── projections [outer=(6,7)]
 │         └── lineitem.l_extendedprice * (1.0 - lineitem.l_discount) [type=float, outer=(6,7)]
 └── aggregations [outer=(26)]
      └── sum [type=float, outer=(26)]
           └── variable: column26 [type=float, outer=(26)]

# --------------------------------------------------
# Q20
# Potential Part Promotion
# Identifies suppliers in a particular nation having selected parts that may be
# candidates for a promotional offer.
#
# Identifies suppliers who have an excess of a given part available; an excess
# defined to be more than 50% of the parts like the given part that the supplier
# shipped in a given year for a given nation. Only parts whose names share a
# certain naming convention are considered.
#
# TODO:
#   1. Push 'forest%' prefix filter down into Scan
# --------------------------------------------------
opt
SELECT
    s_name,
    s_address
FROM
    supplier,
    nation
WHERE
    s_suppkey IN (
        SELECT
            ps_suppkey
        FROM
            partsupp
        WHERE
            ps_partkey IN (
                SELECT
                    p_partkey
                FROM
                    part
                WHERE
                    p_name LIKE 'forest%'
            )
            AND ps_availqty > (
                SELECT
                    0.5 * sum(l_quantity)
                FROM
                    lineitem
                WHERE
                    l_partkey = ps_partkey
                    AND l_suppkey = ps_suppkey
                    AND l_shipdate >= DATE '1994-01-01'
                    AND l_shipdate < DATE '1994-01-01' + INTERVAL '1' YEAR
            )
    )
    AND s_nationkey = n_nationkey
    AND n_name = 'CANADA'
ORDER BY
    s_name;
----
sort
 ├── columns: s_name:2(string) s_address:3(string)
 ├── ordering: +2
 └── project
      ├── columns: s_name:2(string) s_address:3(string)
      └── inner-join
           ├── columns: s_suppkey:1(int!null) s_name:2(string) s_address:3(string) s_nationkey:4(int!null) n_nationkey:8(int!null) n_name:9(string!null)
           ├── key: (1)
           ├── fd: ()-->(9), (1)-->(2-4), (4)==(8), (8)==(4)
           ├── semi-join
           │    ├── columns: s_suppkey:1(int!null) s_name:2(string) s_address:3(string) s_nationkey:4(int!null)
           │    ├── key: (1)
           │    ├── fd: (1)-->(2-4)
           │    ├── scan supplier
           │    │    ├── columns: s_suppkey:1(int!null) s_name:2(string) s_address:3(string) s_nationkey:4(int!null)
           │    │    ├── key: (1)
           │    │    └── fd: (1)-->(2-4)
           │    ├── semi-join
           │    │    ├── columns: ps_partkey:12(int!null) ps_suppkey:13(int!null)
           │    │    ├── key: (12,13)
           │    │    ├── project
           │    │    │    ├── columns: ps_partkey:12(int!null) ps_suppkey:13(int!null)
           │    │    │    ├── key: (12,13)
           │    │    │    └── select
           │    │    │         ├── columns: ps_partkey:12(int!null) ps_suppkey:13(int!null) ps_availqty:14(int!null) column42:42(float)
           │    │    │         ├── key: (12,13)
           │    │    │         ├── fd: (12,13)-->(14,42)
           │    │    │         ├── group-by
           │    │    │         │    ├── columns: ps_partkey:12(int!null) ps_suppkey:13(int!null) ps_availqty:14(int) column42:42(float)
           │    │    │         │    ├── grouping columns: ps_partkey:12(int!null) ps_suppkey:13(int!null)
           │    │    │         │    ├── key: (12,13)
           │    │    │         │    ├── fd: (12,13)-->(14,42)
           │    │    │         │    ├── left-join
           │    │    │         │    │    ├── columns: ps_partkey:12(int!null) ps_suppkey:13(int!null) ps_availqty:14(int) l_partkey:27(int) l_suppkey:28(int) l_quantity:30(float) l_shipdate:36(date)
           │    │    │         │    │    ├── fd: (12,13)-->(14)
           │    │    │         │    │    ├── scan partsupp
           │    │    │         │    │    │    ├── columns: ps_partkey:12(int!null) ps_suppkey:13(int!null) ps_availqty:14(int)
           │    │    │         │    │    │    ├── key: (12,13)
           │    │    │         │    │    │    └── fd: (12,13)-->(14)
           │    │    │         │    │    ├── select
           │    │    │         │    │    │    ├── columns: l_partkey:27(int!null) l_suppkey:28(int!null) l_quantity:30(float) l_shipdate:36(date!null)
           │    │    │         │    │    │    ├── scan lineitem
           │    │    │         │    │    │    │    └── columns: l_partkey:27(int!null) l_suppkey:28(int!null) l_quantity:30(float) l_shipdate:36(date)
           │    │    │         │    │    │    └── filters [type=bool, outer=(36), constraints=(/36: [/'1994-01-01' - ])]
           │    │    │         │    │    │         ├── lineitem.l_shipdate >= '1994-01-01' [type=bool, outer=(36), constraints=(/36: [/'1994-01-01' - ]; tight)]
           │    │    │         │    │    │         └── lineitem.l_shipdate < ('1994-01-01' + '1y') [type=bool, outer=(36), constraints=(/36: (/NULL - ])]
           │    │    │         │    │    └── filters [type=bool, outer=(12,13,27,28), constraints=(/12: (/NULL - ]; /13: (/NULL - ]; /27: (/NULL - ]; /28: (/NULL - ]), fd=(12)==(27), (27)==(12), (13)==(28), (28)==(13)]
           │    │    │         │    │         ├── lineitem.l_partkey = partsupp.ps_partkey [type=bool, outer=(12,27), constraints=(/12: (/NULL - ]; /27: (/NULL - ])]
           │    │    │         │    │         └── lineitem.l_suppkey = partsupp.ps_suppkey [type=bool, outer=(13,28), constraints=(/13: (/NULL - ]; /28: (/NULL - ])]
           │    │    │         │    └── aggregations [outer=(14,30)]
           │    │    │         │         ├── sum [type=float, outer=(30)]
           │    │    │         │         │    └── variable: lineitem.l_quantity [type=float, outer=(30)]
           │    │    │         │         └── any-not-null [type=int, outer=(14)]
           │    │    │         │              └── variable: partsupp.ps_availqty [type=int, outer=(14)]
           │    │    │         └── filters [type=bool, outer=(14,42), constraints=(/14: (/NULL - ])]
           │    │    │              └── partsupp.ps_availqty > (column42 * 0.5) [type=bool, outer=(14,42), constraints=(/14: (/NULL - ])]
           │    │    ├── select
           │    │    │    ├── columns: p_partkey:17(int!null) p_name:18(string)
           │    │    │    ├── key: (17)
           │    │    │    ├── fd: (17)-->(18)
           │    │    │    ├── scan part
           │    │    │    │    ├── columns: p_partkey:17(int!null) p_name:18(string)
           │    │    │    │    ├── key: (17)
           │    │    │    │    └── fd: (17)-->(18)
           │    │    │    └── filters [type=bool, outer=(18)]
           │    │    │         └── part.p_name LIKE 'forest%' [type=bool, outer=(18)]
           │    │    └── filters [type=bool, outer=(12,17), constraints=(/12: (/NULL - ]; /17: (/NULL - ]), fd=(12)==(17), (17)==(12)]
           │    │         └── partsupp.ps_partkey = part.p_partkey [type=bool, outer=(12,17), constraints=(/12: (/NULL - ]; /17: (/NULL - ])]
           │    └── filters [type=bool, outer=(1,13), constraints=(/1: (/NULL - ]; /13: (/NULL - ]), fd=(1)==(13), (13)==(1)]
           │         └── supplier.s_suppkey = partsupp.ps_suppkey [type=bool, outer=(1,13), constraints=(/1: (/NULL - ]; /13: (/NULL - ])]
           ├── select
           │    ├── columns: n_nationkey:8(int!null) n_name:9(string!null)
           │    ├── key: (8)
           │    ├── fd: ()-->(9)
           │    ├── scan nation
           │    │    ├── columns: n_nationkey:8(int!null) n_name:9(string)
           │    │    ├── key: (8)
           │    │    └── fd: (8)-->(9)
           │    └── filters [type=bool, outer=(9), constraints=(/9: [/'CANADA' - /'CANADA']; tight), fd=()-->(9)]
           │         └── nation.n_name = 'CANADA' [type=bool, outer=(9), constraints=(/9: [/'CANADA' - /'CANADA']; tight)]
           └── filters [type=bool, outer=(4,8), constraints=(/4: (/NULL - ]; /8: (/NULL - ]), fd=(4)==(8), (8)==(4)]
                └── supplier.s_nationkey = nation.n_nationkey [type=bool, outer=(4,8), constraints=(/4: (/NULL - ]; /8: (/NULL - ])]

# --------------------------------------------------
# Q21
# Suppliers Who Kept Orders Waiting Query
# Identifies certain suppliers who were not able to ship required parts in a
#  timely manner.
#
# Identifies suppliers, for a given nation, whose product was part of a multi-
# supplier order (with current status of 'F') where they were the only supplier
# who failed to meet the committed delivery date.
# --------------------------------------------------
opt
SELECT
    s_name,
    count(*) AS numwait
FROM
    supplier,
    lineitem l1,
    orders,
    nation
WHERE
    s_suppkey = l1.l_suppkey
    AND o_orderkey = l1.l_orderkey
    AND o_orderstatus = 'F'
    AND l1.l_receiptDATE > l1.l_commitdate
    AND EXISTS (
        SELECT
            *
        FROM
            lineitem l2
        WHERE
            l2.l_orderkey = l1.l_orderkey
            AND l2.l_suppkey <> l1.l_suppkey
    )
    AND NOT EXISTS (
        SELECT
            *
        FROM
            lineitem l3
        WHERE
            l3.l_orderkey = l1.l_orderkey
            AND l3.l_suppkey <> l1.l_suppkey
            AND l3.l_receiptDATE > l3.l_commitdate
    )
    AND s_nationkey = n_nationkey
    AND n_name = 'SAUDI ARABIA'
GROUP BY
    s_name
ORDER BY
    numwait DESC,
    s_name
LIMIT 100;
----
limit
 ├── columns: s_name:2(string) numwait:69(int)
 ├── cardinality: [0 - 100]
 ├── key: (2)
 ├── fd: (2)-->(69)
 ├── ordering: -69,+2
 ├── sort
 │    ├── columns: s_name:2(string) numwait:69(int)
 │    ├── key: (2)
 │    ├── fd: (2)-->(69)
 │    ├── ordering: -69,+2
 │    └── group-by
 │         ├── columns: s_name:2(string) numwait:69(int)
 │         ├── grouping columns: s_name:2(string)
 │         ├── key: (2)
 │         ├── fd: (2)-->(69)
 │         ├── inner-join
 │         │    ├── columns: s_suppkey:1(int!null) s_name:2(string) s_nationkey:4(int!null) lineitem.l_orderkey:8(int!null) lineitem.l_suppkey:10(int!null) lineitem.l_commitdate:19(date!null) lineitem.l_receiptdate:20(date!null) o_orderkey:24(int!null) o_orderstatus:26(string!null) n_nationkey:33(int!null) n_name:34(string!null)
 │         │    ├── fd: ()-->(26,34), (1)-->(2,4), (1)==(10), (10)==(1), (8)==(24), (24)==(8), (4)==(33), (33)==(4)
 │         │    ├── inner-join
 │         │    │    ├── columns: s_suppkey:1(int!null) s_name:2(string) s_nationkey:4(int!null) lineitem.l_orderkey:8(int!null) lineitem.l_suppkey:10(int!null) lineitem.l_commitdate:19(date!null) lineitem.l_receiptdate:20(date!null) o_orderkey:24(int!null) o_orderstatus:26(string!null)
 │         │    │    ├── fd: ()-->(26), (1)-->(2,4), (1)==(10), (10)==(1), (8)==(24), (24)==(8)
 │         │    │    ├── inner-join
 │         │    │    │    ├── columns: s_suppkey:1(int!null) s_name:2(string) s_nationkey:4(int!null) lineitem.l_orderkey:8(int!null) lineitem.l_suppkey:10(int!null) lineitem.l_commitdate:19(date!null) lineitem.l_receiptdate:20(date!null)
 │         │    │    │    ├── fd: (1)-->(2,4), (1)==(10), (10)==(1)
 │         │    │    │    ├── semi-join
 │         │    │    │    │    ├── columns: lineitem.l_orderkey:8(int!null) lineitem.l_suppkey:10(int!null) lineitem.l_commitdate:19(date!null) lineitem.l_receiptdate:20(date!null)
 │         │    │    │    │    ├── anti-join (merge)
 │         │    │    │    │    │    ├── columns: lineitem.l_orderkey:8(int!null) lineitem.l_suppkey:10(int!null) lineitem.l_commitdate:19(date!null) lineitem.l_receiptdate:20(date!null)
 │         │    │    │    │    │    ├── select
 │         │    │    │    │    │    │    ├── columns: lineitem.l_orderkey:8(int!null) lineitem.l_suppkey:10(int!null) lineitem.l_commitdate:19(date!null) lineitem.l_receiptdate:20(date!null)
 │         │    │    │    │    │    │    ├── ordering: +8
 │         │    │    │    │    │    │    ├── scan lineitem
 │         │    │    │    │    │    │    │    ├── columns: lineitem.l_orderkey:8(int!null) lineitem.l_suppkey:10(int!null) lineitem.l_commitdate:19(date) lineitem.l_receiptdate:20(date)
 │         │    │    │    │    │    │    │    └── ordering: +8
 │         │    │    │    │    │    │    └── filters [type=bool, outer=(19,20), constraints=(/19: (/NULL - ]; /20: (/NULL - ])]
 │         │    │    │    │    │    │         └── lineitem.l_receiptdate > lineitem.l_commitdate [type=bool, outer=(19,20), constraints=(/19: (/NULL - ]; /20: (/NULL - ])]
 │         │    │    │    │    │    ├── select
 │         │    │    │    │    │    │    ├── columns: lineitem.l_orderkey:53(int!null) lineitem.l_partkey:54(int!null) lineitem.l_suppkey:55(int!null) lineitem.l_linenumber:56(int!null) lineitem.l_quantity:57(float) lineitem.l_extendedprice:58(float) lineitem.l_discount:59(float) lineitem.l_tax:60(float) lineitem.l_returnflag:61(string) lineitem.l_linestatus:62(string) lineitem.l_shipdate:63(date) lineitem.l_commitdate:64(date!null) lineitem.l_receiptdate:65(date!null) lineitem.l_shipinstruct:66(string) lineitem.l_shipmode:67(string) lineitem.l_comment:68(string)
 │         │    │    │    │    │    │    ├── key: (53,56)
 │         │    │    │    │    │    │    ├── fd: (53,56)-->(54,55,57-68)
 │         │    │    │    │    │    │    ├── ordering: +53
 │         │    │    │    │    │    │    ├── scan lineitem
 │         │    │    │    │    │    │    │    ├── columns: lineitem.l_orderkey:53(int!null) lineitem.l_partkey:54(int!null) lineitem.l_suppkey:55(int!null) lineitem.l_linenumber:56(int!null) lineitem.l_quantity:57(float) lineitem.l_extendedprice:58(float) lineitem.l_discount:59(float) lineitem.l_tax:60(float) lineitem.l_returnflag:61(string) lineitem.l_linestatus:62(string) lineitem.l_shipdate:63(date) lineitem.l_commitdate:64(date) lineitem.l_receiptdate:65(date) lineitem.l_shipinstruct:66(string) lineitem.l_shipmode:67(string) lineitem.l_comment:68(string)
 │         │    │    │    │    │    │    │    ├── key: (53,56)
 │         │    │    │    │    │    │    │    ├── fd: (53,56)-->(54,55,57-68)
 │         │    │    │    │    │    │    │    └── ordering: +53
 │         │    │    │    │    │    │    └── filters [type=bool, outer=(64,65), constraints=(/64: (/NULL - ]; /65: (/NULL - ])]
 │         │    │    │    │    │    │         └── lineitem.l_receiptdate > lineitem.l_commitdate [type=bool, outer=(64,65), constraints=(/64: (/NULL - ]; /65: (/NULL - ])]
 │         │    │    │    │    │    └── merge-on
 │         │    │    │    │    │         ├── left ordering: +8
 │         │    │    │    │    │         ├── right ordering: +53
 │         │    │    │    │    │         └── filters [type=bool, outer=(8,10,53,55), constraints=(/8: (/NULL - ]; /10: (/NULL - ]; /53: (/NULL - ]; /55: (/NULL - ]), fd=(8)==(53), (53)==(8)]
 │         │    │    │    │    │              ├── lineitem.l_orderkey = lineitem.l_orderkey [type=bool, outer=(8,53), constraints=(/8: (/NULL - ]; /53: (/NULL - ])]
 │         │    │    │    │    │              └── lineitem.l_suppkey != lineitem.l_suppkey [type=bool, outer=(10,55), constraints=(/10: (/NULL - ]; /55: (/NULL - ])]
 │         │    │    │    │    ├── scan lineitem
 │         │    │    │    │    │    ├── columns: lineitem.l_orderkey:37(int!null) lineitem.l_partkey:38(int!null) lineitem.l_suppkey:39(int!null) lineitem.l_linenumber:40(int!null) lineitem.l_quantity:41(float) lineitem.l_extendedprice:42(float) lineitem.l_discount:43(float) lineitem.l_tax:44(float) lineitem.l_returnflag:45(string) lineitem.l_linestatus:46(string) lineitem.l_shipdate:47(date) lineitem.l_commitdate:48(date) lineitem.l_receiptdate:49(date) lineitem.l_shipinstruct:50(string) lineitem.l_shipmode:51(string) lineitem.l_comment:52(string)
 │         │    │    │    │    │    ├── key: (37,40)
 │         │    │    │    │    │    └── fd: (37,40)-->(38,39,41-52)
 │         │    │    │    │    └── filters [type=bool, outer=(8,10,37,39), constraints=(/8: (/NULL - ]; /10: (/NULL - ]; /37: (/NULL - ]; /39: (/NULL - ]), fd=(8)==(37), (37)==(8)]
 │         │    │    │    │         ├── lineitem.l_orderkey = lineitem.l_orderkey [type=bool, outer=(8,37), constraints=(/8: (/NULL - ]; /37: (/NULL - ])]
 │         │    │    │    │         └── lineitem.l_suppkey != lineitem.l_suppkey [type=bool, outer=(10,39), constraints=(/10: (/NULL - ]; /39: (/NULL - ])]
 │         │    │    │    ├── scan supplier
 │         │    │    │    │    ├── columns: s_suppkey:1(int!null) s_name:2(string) s_nationkey:4(int!null)
 │         │    │    │    │    ├── key: (1)
 │         │    │    │    │    └── fd: (1)-->(2,4)
 │         │    │    │    └── filters [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ]), fd=(1)==(10), (10)==(1)]
 │         │    │    │         └── supplier.s_suppkey = lineitem.l_suppkey [type=bool, outer=(1,10), constraints=(/1: (/NULL - ]; /10: (/NULL - ])]
 │         │    │    ├── select
 │         │    │    │    ├── columns: o_orderkey:24(int!null) o_orderstatus:26(string!null)
 │         │    │    │    ├── key: (24)
 │         │    │    │    ├── fd: ()-->(26)
 │         │    │    │    ├── scan orders
 │         │    │    │    │    ├── columns: o_orderkey:24(int!null) o_orderstatus:26(string)
 │         │    │    │    │    ├── key: (24)
 │         │    │    │    │    └── fd: (24)-->(26)
 │         │    │    │    └── filters [type=bool, outer=(26), constraints=(/26: [/'F' - /'F']; tight), fd=()-->(26)]
 │         │    │    │         └── orders.o_orderstatus = 'F' [type=bool, outer=(26), constraints=(/26: [/'F' - /'F']; tight)]
 │         │    │    └── filters [type=bool, outer=(8,24), constraints=(/8: (/NULL - ]; /24: (/NULL - ]), fd=(8)==(24), (24)==(8)]
 │         │    │         └── orders.o_orderkey = lineitem.l_orderkey [type=bool, outer=(8,24), constraints=(/8: (/NULL - ]; /24: (/NULL - ])]
 │         │    ├── select
 │         │    │    ├── columns: n_nationkey:33(int!null) n_name:34(string!null)
 │         │    │    ├── key: (33)
 │         │    │    ├── fd: ()-->(34)
 │         │    │    ├── scan nation
 │         │    │    │    ├── columns: n_nationkey:33(int!null) n_name:34(string)
 │         │    │    │    ├── key: (33)
 │         │    │    │    └── fd: (33)-->(34)
 │         │    │    └── filters [type=bool, outer=(34), constraints=(/34: [/'SAUDI ARABIA' - /'SAUDI ARABIA']; tight), fd=()-->(34)]
 │         │    │         └── nation.n_name = 'SAUDI ARABIA' [type=bool, outer=(34), constraints=(/34: [/'SAUDI ARABIA' - /'SAUDI ARABIA']; tight)]
 │         │    └── filters [type=bool, outer=(4,33), constraints=(/4: (/NULL - ]; /33: (/NULL - ]), fd=(4)==(33), (33)==(4)]
 │         │         └── supplier.s_nationkey = nation.n_nationkey [type=bool, outer=(4,33), constraints=(/4: (/NULL - ]; /33: (/NULL - ])]
 │         └── aggregations
 │              └── count-rows [type=int]
 └── const: 100 [type=int]

# --------------------------------------------------
# Q22
# Global Sales Opportunity
# Identifies geographies where there are customers who may be likely to make a
# purchase.
#
# This query counts how many customers within a specific range of country codes
# have not placed orders for 7 years but who have a greater than average
# “positive” account balance. It also reflects the magnitude of that balance.
# Country code is defined as the first two characters of c_phone.
# --------------------------------------------------
opt
SELECT
    cntrycode,
    count(*) AS numcust,
    sum(c_acctbal) AS totacctbal
FROM (
    SELECT
        substring(c_phone FROM 1 FOR 2) AS cntrycode,
        c_acctbal
    FROM
        customer
    WHERE
        substring(c_phone FROM 1 FOR 2) in
            ('13', '31', '23', '29', '30', '18', '17')
        AND c_acctbal > (
            SELECT
                avg(c_acctbal)
            FROM
                customer
            WHERE
                c_acctbal > 0.00
                AND substring(c_phone FROM 1 FOR 2) in
                    ('13', '31', '23', '29', '30', '18', '17')
        )
        AND NOT EXISTS (
            SELECT
                *
            FROM
                orders
            WHERE
                o_custkey = c_custkey
        )
    ) AS custsale
GROUP BY
    cntrycode
ORDER BY
    cntrycode;
----
sort
 ├── columns: cntrycode:27(string) numcust:28(int) totacctbal:29(float)
 ├── key: (27)
 ├── fd: (27)-->(28,29)
 ├── ordering: +27
 └── group-by
      ├── columns: cntrycode:27(string) numcust:28(int) totacctbal:29(float)
      ├── grouping columns: cntrycode:27(string)
      ├── key: (27)
      ├── fd: (27)-->(28,29)
      ├── project
      │    ├── columns: cntrycode:27(string) customer.c_acctbal:6(float!null)
      │    ├── anti-join
      │    │    ├── columns: customer.c_custkey:1(int!null) customer.c_phone:5(string) customer.c_acctbal:6(float!null)
      │    │    ├── key: (1)
      │    │    ├── fd: (1)-->(5,6)
      │    │    ├── select
      │    │    │    ├── columns: customer.c_custkey:1(int!null) customer.c_phone:5(string) customer.c_acctbal:6(float!null)
      │    │    │    ├── key: (1)
      │    │    │    ├── fd: (1)-->(5,6)
      │    │    │    ├── scan customer
      │    │    │    │    ├── columns: customer.c_custkey:1(int!null) customer.c_phone:5(string) customer.c_acctbal:6(float)
      │    │    │    │    ├── key: (1)
      │    │    │    │    └── fd: (1)-->(5,6)
      │    │    │    └── filters [type=bool, outer=(5,6), constraints=(/6: (/NULL - ])]
      │    │    │         ├── substring(customer.c_phone, 1, 2) IN ('13', '17', '18', '23', '29', '30', '31') [type=bool, outer=(5)]
      │    │    │         └── gt [type=bool, outer=(6), constraints=(/6: (/NULL - ])]
      │    │    │              ├── variable: customer.c_acctbal [type=float, outer=(6)]
      │    │    │              └── subquery [type=float]
      │    │    │                   └── scalar-group-by
      │    │    │                        ├── columns: avg:17(float)
      │    │    │                        ├── cardinality: [1 - 1]
      │    │    │                        ├── key: ()
      │    │    │                        ├── fd: ()-->(17)
      │    │    │                        ├── select
      │    │    │                        │    ├── columns: customer.c_phone:13(string) customer.c_acctbal:14(float!null)
      │    │    │                        │    ├── scan customer
      │    │    │                        │    │    └── columns: customer.c_phone:13(string) customer.c_acctbal:14(float)
      │    │    │                        │    └── filters [type=bool, outer=(13,14), constraints=(/14: [/5e-324 - ])]
      │    │    │                        │         ├── customer.c_acctbal > 0.0 [type=bool, outer=(14), constraints=(/14: [/5e-324 - ]; tight)]
      │    │    │                        │         └── substring(customer.c_phone, 1, 2) IN ('13', '17', '18', '23', '29', '30', '31') [type=bool, outer=(13)]
      │    │    │                        └── aggregations [outer=(14)]
      │    │    │                             └── avg [type=float, outer=(14)]
      │    │    │                                  └── variable: customer.c_acctbal [type=float, outer=(14)]
      │    │    ├── scan orders
      │    │    │    └── columns: o_custkey:19(int!null)
      │    │    └── filters [type=bool, outer=(1,19), constraints=(/1: (/NULL - ]; /19: (/NULL - ]), fd=(1)==(19), (19)==(1)]
      │    │         └── orders.o_custkey = customer.c_custkey [type=bool, outer=(1,19), constraints=(/1: (/NULL - ]; /19: (/NULL - ])]
      │    └── projections [outer=(5,6)]
      │         └── substring(customer.c_phone, 1, 2) [type=string, outer=(5)]
      └── aggregations [outer=(6)]
           ├── count-rows [type=int]
           └── sum [type=float, outer=(6)]
                └── variable: customer.c_acctbal [type=float, outer=(6)]
