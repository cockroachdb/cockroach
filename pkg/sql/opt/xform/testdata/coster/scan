exec-ddl
CREATE TABLE a (k INT PRIMARY KEY, i INT, s STRING, d DECIMAL NOT NULL)
----

opt
SELECT k, s FROM a
----
scan a
 ├── columns: k:1!null s:3
 ├── stats: [rows=1000]
 ├── cost: 1074.61
 ├── key: (1)
 └── fd: (1)-->(3)

exec-ddl
ALTER TABLE a INJECT STATISTICS '[
  {
    "columns": ["k"],
    "created_at": "2019-02-08 04:10:40.001179+00:00",
    "row_count": 100000,
    "distinct_count": 100000
  },
  {
    "columns": ["i"],
    "created_at": "2019-02-08 04:10:40.001179+00:00",
    "row_count": 100000,
    "distinct_count": 100
  }
]'
----

# The limit hint is propagated to the scan and the cost is slightly more than
# the limit hint * 2 (the scan soft limit multiplier).
opt
SELECT * FROM a WHERE k > 5 AND i IN (1, 3, 5, 7, 9) LIMIT 20
----
limit
 ├── columns: k:1!null i:2!null s:3 d:4!null
 ├── cardinality: [0 - 20]
 ├── stats: [rows=20]
 ├── cost: 162.811429
 ├── key: (1)
 ├── fd: (1)-->(2-4)
 ├── select
 │    ├── columns: k:1!null i:2!null s:3 d:4!null
 │    ├── stats: [rows=4666.66667, distinct(1)=4666.66667, null(1)=0, distinct(2)=5, null(2)=0, distinct(1,2)=4666.66667, null(1,2)=0]
 │    ├── cost: 162.601429
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-4)
 │    ├── limit hint: 20.00
 │    ├── scan a
 │    │    ├── columns: k:1!null i:2 s:3 d:4!null
 │    │    ├── constraint: /1: [/6 - ]
 │    │    ├── stats: [rows=33333.3333, distinct(1)=33333.3333, null(1)=0]
 │    │    ├── cost: 158.295714
 │    │    ├── key: (1)
 │    │    ├── fd: (1)-->(2-4)
 │    │    └── limit hint: 142.86
 │    └── filters
 │         └── i:2 IN (1, 3, 5, 7, 9) [outer=(2), constraints=(/2: [/1 - /1] [/3 - /3] [/5 - /5] [/7 - /7] [/9 - /9]; tight)]
 └── 20

# The limit hint is propagated, but the cost is not multiplied by 2 (the scan
# soft limit multiplier) since the row count is known to be less than 400 * 2.
opt
SELECT * FROM a WHERE k > 0 AND k <= 450 AND i IN (1, 3, 5, 7, 9) LIMIT 20
----
limit
 ├── columns: k:1!null i:2!null s:3 d:4!null
 ├── cardinality: [0 - 20]
 ├── stats: [rows=20]
 ├── cost: 32.6074033
 ├── key: (1)
 ├── fd: (1)-->(2-4)
 ├── select
 │    ├── columns: k:1!null i:2!null s:3 d:4!null
 │    ├── cardinality: [0 - 450]
 │    ├── stats: [rows=407.25, distinct(1)=407.25, null(1)=0, distinct(2)=5, null(2)=0, distinct(1,2)=407.25, null(1,2)=0]
 │    ├── cost: 32.3974033
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-4)
 │    ├── limit hint: 20.00
 │    ├── scan a
 │    │    ├── columns: k:1!null i:2 s:3 d:4!null
 │    │    ├── constraint: /1: [/1 - /450]
 │    │    ├── cardinality: [0 - 450]
 │    │    ├── stats: [rows=450, distinct(1)=450, null(1)=0]
 │    │    ├── cost: 27.8774033
 │    │    ├── key: (1)
 │    │    ├── fd: (1)-->(2-4)
 │    │    └── limit hint: 22.10
 │    └── filters
 │         └── i:2 IN (1, 3, 5, 7, 9) [outer=(2), constraints=(/2: [/1 - /1] [/3 - /3] [/5 - /5] [/7 - /7] [/9 - /9]; tight)]
 └── 20

# Regression test for #35042. Ensure we always prefer constrained scans.
exec-ddl
CREATE TABLE speed_test (id INT PRIMARY KEY DEFAULT unique_rowid())
----

opt
SELECT id FROM speed_test@primary WHERE id BETWEEN 1 AND 1000 AND ((id % 16) = 0)
----
select
 ├── columns: id:1!null
 ├── cardinality: [0 - 1000]
 ├── immutable
 ├── stats: [rows=333.333333, distinct(1)=333.333333, null(1)=0]
 ├── cost: 1034.03
 ├── key: (1)
 ├── scan speed_test
 │    ├── columns: id:1!null
 │    ├── constraint: /1: [/1 - /1000]
 │    ├── flags: force-index=primary
 │    ├── cardinality: [0 - 1000]
 │    ├── stats: [rows=1000, distinct(1)=1000, null(1)=0]
 │    ├── cost: 1024.01
 │    └── key: (1)
 └── filters
      └── (id:1 % 16) = 0 [outer=(1), immutable]

opt
SELECT id FROM speed_test@primary WHERE id BETWEEN 1 AND 2000 AND ((id % 16) = 0)
----
select
 ├── columns: id:1!null
 ├── cardinality: [0 - 2000]
 ├── immutable
 ├── stats: [rows=333.333333, distinct(1)=333.333333, null(1)=0]
 ├── cost: 1034.03
 ├── key: (1)
 ├── scan speed_test
 │    ├── columns: id:1!null
 │    ├── constraint: /1: [/1 - /2000]
 │    ├── flags: force-index=primary
 │    ├── cardinality: [0 - 2000]
 │    ├── stats: [rows=1000, distinct(1)=1000, null(1)=0]
 │    ├── cost: 1024.01
 │    └── key: (1)
 └── filters
      └── (id:1 % 16) = 0 [outer=(1), immutable]

# Regression test for #60493. Account for the cost of visiting multiple
# partitions.
exec-ddl
CREATE TABLE t60493 (
  pk INT8 NOT NULL,
  region STRING NOT NULL,
  CONSTRAINT "primary" PRIMARY KEY (region ASC, pk ASC),
  FAMILY "primary" (pk, region)
) PARTITION BY LIST (region) (
  PARTITION useast VALUES IN (('useast')),
  PARTITION uswest VALUES IN (('uswest')),
  PARTITION europe VALUES IN (('europe'))
)
----

exec-ddl
ALTER PARTITION useast OF INDEX t60493@primary CONFIGURE ZONE USING
  num_replicas = 3,
  constraints = '{+region=us-east1: 3}',
  lease_preferences = '[[+region=us-east1]]'
----

exec-ddl
ALTER PARTITION uswest OF INDEX t60493@primary CONFIGURE ZONE USING
  num_replicas = 3,
  constraints = '{+region=us-west1: 3}',
  lease_preferences = '[[+region=us-west1]]'
----

exec-ddl
ALTER PARTITION europe OF INDEX t60493@primary CONFIGURE ZONE USING
  num_replicas = 3,
  constraints = '{+region=europe-west1: 3}',
  lease_preferences = '[[+region=europe-west1]]'
----

exec-ddl
ALTER TABLE t60493 INJECT STATISTICS '[
    {
        "columns": [
            "region"
        ],
        "created_at": "2021-02-23 04:14:01.849711",
        "distinct_count": 3,
        "histo_buckets": [
            {
                "distinct_range": 0,
                "num_eq": 1,
                "num_range": 0,
                "upper_bound": "europe"
            },
            {
                "distinct_range": 0,
                "num_eq": 1,
                "num_range": 0,
                "upper_bound": "useast"
            },
            {
                "distinct_range": 0,
                "num_eq": 1,
                "num_range": 0,
                "upper_bound": "uswest"
            }
        ],
        "histo_col_type": "STRING",
        "name": "__auto__",
        "null_count": 0,
        "row_count": 3
    },
    {
        "columns": [
            "pk"
        ],
        "created_at": "2021-02-23 04:14:01.849711",
        "distinct_count": 3,
        "histo_buckets": [
            {
                "distinct_range": 0,
                "num_eq": 1,
                "num_range": 0,
                "upper_bound": "1"
            },
            {
                "distinct_range": 0,
                "num_eq": 1,
                "num_range": 0,
                "upper_bound": "2"
            },
            {
                "distinct_range": 0,
                "num_eq": 1,
                "num_range": 0,
                "upper_bound": "3"
            }
        ],
        "histo_col_type": "INT8",
        "name": "__auto__",
        "null_count": 0,
        "row_count": 3
    },
    {
        "columns": [
            "region",
            "pk"
        ],
        "created_at": "2021-02-23 04:14:01.849711",
        "distinct_count": 3,
        "histo_col_type": "",
        "name": "__auto__",
        "null_count": 0,
        "row_count": 3
    }
]';
----

opt
SELECT * FROM t60493 WHERE region IN ('useast':::STRING, 'uswest':::STRING)
----
scan t60493
 ├── columns: pk:1!null region:2!null
 ├── constraint: /2/1
 │    ├── [/'useast' - /'useast']
 │    └── [/'uswest' - /'uswest']
 ├── stats: [rows=2, distinct(2)=2, null(2)=0]
 │   histogram(2)=  0     1      0     1
 │                <--- 'useast' --- 'uswest'
 ├── cost: 10.09
 └── key: (1,2)
