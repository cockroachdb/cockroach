# This file contains tests for queries that filter columns beyond the max/min
# values in their histograms. Each query is tested multiple times with different
# settings to show the effect those settings have on the plan.
#

# Simulate a status column that happened not to sample one of the enum values.
exec-ddl
CREATE TYPE status_enum AS ENUM ('ACKNOWLEDGED', 'DROPPED', 'PENDING', 'SUCCEEDED');
----

exec-ddl
CREATE TABLE t (
  k INT PRIMARY KEY,
  u INT,
  d INT,
  i INT,
  s STRING,
  e status_enum,
  UNIQUE INDEX (u),
  INDEX (d),
  INDEX (i),
  INDEX (s),
  INDEX (i) WHERE e = 'PENDING'
)
----

exec-ddl
ALTER TABLE t INJECT STATISTICS '[
  {
    "columns": ["k"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 1000,
    "distinct_count": 1000,
    "null_count": 0,
    "avg_size": 2,
    "histo_col_type": "int",
    "histo_buckets": [
      {"num_eq": 0, "num_range": 0, "distinct_range": 0, "upper_bound": "0"},
      {"num_eq": 1, "num_range": 99, "distinct_range": 99, "upper_bound": "100"},
      {"num_eq": 1, "num_range": 199, "distinct_range": 199, "upper_bound": "300"},
      {"num_eq": 1, "num_range": 299, "distinct_range": 299, "upper_bound": "600"},
      {"num_eq": 1, "num_range": 399, "distinct_range": 399, "upper_bound": "1000"}
    ]
  },
  {
    "columns": ["u"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 1000,
    "distinct_count": 1000,
    "null_count": 0,
    "avg_size": 2,
    "histo_col_type": "int",
    "histo_buckets": [
      {"num_eq": 0, "num_range": 0, "distinct_range": 0, "upper_bound": "0"},
      {"num_eq": 1, "num_range": 99, "distinct_range": 99, "upper_bound": "100"},
      {"num_eq": 1, "num_range": 199, "distinct_range": 199, "upper_bound": "300"},
      {"num_eq": 1, "num_range": 299, "distinct_range": 299, "upper_bound": "600"},
      {"num_eq": 1, "num_range": 399, "distinct_range": 399, "upper_bound": "1000"}
    ]
  },
  {
    "columns": ["d"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 1000,
    "distinct_count": 1000,
    "null_count": 0,
    "avg_size": 2,
    "histo_col_type": "int",
    "histo_buckets": [
      {"num_eq": 0, "num_range": 0, "distinct_range": 0, "upper_bound": "0"},
      {"num_eq": 1, "num_range": 99, "distinct_range": 99, "upper_bound": "100"},
      {"num_eq": 1, "num_range": 199, "distinct_range": 199, "upper_bound": "300"},
      {"num_eq": 1, "num_range": 299, "distinct_range": 299, "upper_bound": "600"},
      {"num_eq": 1, "num_range": 399, "distinct_range": 399, "upper_bound": "1000"}
    ]
  },
  {
    "columns": ["i"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 1000,
    "distinct_count": 44,
    "null_count": 0,
    "avg_size": 2,
    "histo_col_type": "int",
    "histo_buckets": [
      {"num_eq": 0, "num_range": 0, "distinct_range": 0, "upper_bound": "0"},
      {"num_eq": 10, "num_range": 90, "distinct_range": 10, "upper_bound": "100"},
      {"num_eq": 10, "num_range": 190, "distinct_range": 10, "upper_bound": "200"},
      {"num_eq": 20, "num_range": 280, "distinct_range": 10, "upper_bound": "300"},
      {"num_eq": 30, "num_range": 370, "distinct_range": 10, "upper_bound": "400"}
    ]
  },
  {
    "columns": ["s"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 1000,
    "distinct_count": 40,
    "null_count": 0,
    "avg_size": 3,
    "histo_col_type": "string",
    "histo_buckets": [
      {"num_eq": 0, "num_range": 0, "distinct_range": 0, "upper_bound": "apple"},
      {"num_eq": 100, "num_range": 100, "distinct_range": 10, "upper_bound": "banana"},
      {"num_eq": 100, "num_range": 100, "distinct_range": 10, "upper_bound": "cherry"},
      {"num_eq": 200, "num_range": 100, "distinct_range": 10, "upper_bound": "mango"},
      {"num_eq": 200, "num_range": 100, "distinct_range": 10, "upper_bound": "pineapple"}
    ]
  },
  {
    "columns": ["e"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 1000,
    "distinct_count": 4,
    "null_count": 0,
    "avg_size": 1,
    "histo_col_type": "status_enum",
    "histo_buckets": [
      {"num_eq": 1, "num_range": 0, "distinct_range": 0, "upper_bound": "ACKNOWLEDGED"},
      {"num_eq": 99, "num_range": 0, "distinct_range": 0, "upper_bound": "DROPPED"},
      {"num_eq": 900, "num_range": 0, "distinct_range": 0, "upper_bound": "SUCCEEDED"}
    ]
  }
]'
----

exec-ddl
SET optimizer_prefer_bounded_cardinality = false;
----

exec-ddl
SET optimizer_min_row_count = 0;
----

exec-ddl
SET enable_zigzag_join = false;
----

# ------------------------------------------------------------------------------
# Q1
#
# Choose between 4 single-row equality spans on "k" and a single unbounded
# equality span on "i". The "i" span is outside the histogram range.
# ------------------------------------------------------------------------------

opt
SELECT * FROM t WHERE k IN (110, 120, 130, 140) AND i = 500
----
index-join t
 ├── columns: k:1!null u:2 d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(1,4)=2e-07, null(1,4)=0]
 │   histogram(1)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(4)=
 ├── cost: 24.0200012
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 └── scan t@t_i_idx
      ├── columns: k:1!null i:4!null
      ├── constraint: /4/1
      │    ├── [/500/110 - /500/110]
      │    ├── [/500/120 - /500/120]
      │    ├── [/500/130 - /500/130]
      │    └── [/500/140 - /500/140]
      ├── cardinality: [0 - 4]
      ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(1,4)=2e-07, null(1,4)=0]
      │   histogram(1)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
      │                <--- 110 --- 120 --- 130 --- 140
      │   histogram(4)=
      ├── cost: 24.01
      ├── key: (1)
      └── fd: ()-->(4)

opt set=optimizer_prefer_bounded_cardinality=true
SELECT * FROM t WHERE k IN (110, 120, 130, 140) AND i = 500
----
index-join t
 ├── columns: k:1!null u:2 d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(1,4)=2e-07, null(1,4)=0]
 │   histogram(1)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(4)=
 ├── cost: 24.0200012
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 └── scan t@t_i_idx
      ├── columns: k:1!null i:4!null
      ├── constraint: /4/1
      │    ├── [/500/110 - /500/110]
      │    ├── [/500/120 - /500/120]
      │    ├── [/500/130 - /500/130]
      │    └── [/500/140 - /500/140]
      ├── cardinality: [0 - 4]
      ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(1,4)=2e-07, null(1,4)=0]
      │   histogram(1)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
      │                <--- 110 --- 120 --- 130 --- 140
      │   histogram(4)=
      ├── cost: 24.01
      ├── key: (1)
      └── fd: ()-->(4)

opt set=optimizer_min_row_count=1
SELECT * FROM t WHERE k IN (110, 120, 130, 140) AND i = 500
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=1, distinct(1)=1, null(1)=0, distinct(4)=1, null(4)=0, distinct(1,4)=1, null(1,4)=0]
 │   histogram(1)=  0 0.25  0 0.25  0 0.25  0 0.25
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(4)=
 ├── cost: 24.31
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 ├── scan t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── constraint: /1
 │    │    ├── [/110 - /110]
 │    │    ├── [/120 - /120]
 │    │    ├── [/130 - /130]
 │    │    └── [/140 - /140]
 │    ├── cardinality: [0 - 4]
 │    ├── stats: [rows=4, distinct(1)=4, null(1)=0]
 │    │   histogram(1)=  0   1   0   1   0   1   0   1
 │    │                <--- 110 --- 120 --- 130 --- 140
 │    ├── cost: 24.25
 │    ├── key: (1)
 │    └── fd: (1)-->(2-6), (2)~~>(1,3-6)
 └── filters
      └── i:4 = 500 [outer=(4), constraints=(/4: [/500 - /500]; tight), fd=()-->(4)]

# ------------------------------------------------------------------------------
# Q2
#
# Choose between 4 single-row equality spans on "k" and a single unbounded
# inequality span on "i". The "i" span is outside the histogram range.
# ------------------------------------------------------------------------------

opt
SELECT * FROM t WHERE k IN (100, 110, 120, 130) AND i > 500
----
index-join t
 ├── columns: k:1!null u:2 d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(1,4)=2e-07, null(1,4)=0]
 │   histogram(1)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 100 --- 110 --- 120 --- 130
 │   histogram(4)=
 ├── cost: 18.0500006
 ├── key: (1)
 ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 └── select
      ├── columns: k:1!null i:4!null
      ├── cardinality: [0 - 4]
      ├── stats: [rows=8e-10, distinct(1)=8e-10, null(1)=0]
      │   histogram(1)=  0 2e-10 0 2e-10 0 2e-10 0 2e-10
      │                <--- 100 --- 110 --- 120 --- 130
      ├── cost: 18.0400002
      ├── key: (1)
      ├── fd: (1)-->(4)
      ├── scan t@t_i_idx
      │    ├── columns: k:1!null i:4!null
      │    ├── constraint: /4/1: [/501/100 - ]
      │    ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0]
      │    │   histogram(1)=  0  0  1.98e-08 2e-10 3.98e-08 2e-10 5.98e-08 2e-10 7.98e-08 2e-10
      │    │                <--- 0 ---------- 100 ---------- 300 ---------- 600 ---------- 1000
      │    │   histogram(4)=
      │    ├── cost: 18.0200002
      │    ├── key: (1)
      │    └── fd: (1)-->(4)
      └── filters
           └── k:1 IN (100, 110, 120, 130) [outer=(1), constraints=(/1: [/100 - /100] [/110 - /110] [/120 - /120] [/130 - /130]; tight)]

opt set=optimizer_prefer_bounded_cardinality=true
SELECT * FROM t WHERE k IN (100, 110, 120, 130) AND i > 500
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(1,4)=2e-07, null(1,4)=0]
 │   histogram(1)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 100 --- 110 --- 120 --- 130
 │   histogram(4)=
 ├── cost: 24.31
 ├── key: (1)
 ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 ├── scan t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── constraint: /1
 │    │    ├── [/100 - /100]
 │    │    ├── [/110 - /110]
 │    │    ├── [/120 - /120]
 │    │    └── [/130 - /130]
 │    ├── cardinality: [0 - 4]
 │    ├── stats: [rows=4, distinct(1)=4, null(1)=0]
 │    │   histogram(1)=  0   1   0   1   0   1   0   1
 │    │                <--- 100 --- 110 --- 120 --- 130
 │    ├── cost: 24.25
 │    ├── key: (1)
 │    └── fd: (1)-->(2-6), (2)~~>(1,3-6)
 └── filters
      └── i:4 > 500 [outer=(4), constraints=(/4: [/501 - ]; tight)]

opt set=optimizer_min_row_count=1
SELECT * FROM t WHERE k IN (100, 110, 120, 130) AND i > 500
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=1, distinct(1)=1, null(1)=0, distinct(4)=1, null(4)=0, distinct(1,4)=1, null(1,4)=0]
 │   histogram(1)=  0 0.25  0 0.25  0 0.25  0 0.25
 │                <--- 100 --- 110 --- 120 --- 130
 │   histogram(4)=
 ├── cost: 24.31
 ├── key: (1)
 ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 ├── scan t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── constraint: /1
 │    │    ├── [/100 - /100]
 │    │    ├── [/110 - /110]
 │    │    ├── [/120 - /120]
 │    │    └── [/130 - /130]
 │    ├── cardinality: [0 - 4]
 │    ├── stats: [rows=4, distinct(1)=4, null(1)=0]
 │    │   histogram(1)=  0   1   0   1   0   1   0   1
 │    │                <--- 100 --- 110 --- 120 --- 130
 │    ├── cost: 24.25
 │    ├── key: (1)
 │    └── fd: (1)-->(2-6), (2)~~>(1,3-6)
 └── filters
      └── i:4 > 500 [outer=(4), constraints=(/4: [/501 - ]; tight)]

# ------------------------------------------------------------------------------
# Q3
#
# Choose between 3 single-row equality spans on "k" and a single unbounded
# equality span on "i". The "i" and "k" spans are outside the histogram range.
# ------------------------------------------------------------------------------

opt
SELECT * FROM t WHERE k IN (1010, 1020, 1030) AND i > 500
----
index-join t
 ├── columns: k:1!null u:2 d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 3]
 ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0]
 │   histogram(1)=
 │   histogram(4)=
 ├── cost: 18.0500006
 ├── key: (1)
 ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 └── select
      ├── columns: k:1!null i:4!null
      ├── cardinality: [0 - 3]
      ├── stats: [rows=4e-17, distinct(1)=4e-17, null(1)=0]
      │   histogram(1)=
      ├── cost: 18.0400002
      ├── key: (1)
      ├── fd: (1)-->(4)
      ├── scan t@t_i_idx
      │    ├── columns: k:1!null i:4!null
      │    ├── constraint: /4/1: [/501/1010 - ]
      │    ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0]
      │    │   histogram(1)=  0  0  1.98e-08 2e-10 3.98e-08 2e-10 5.98e-08 2e-10 7.98e-08 2e-10
      │    │                <--- 0 ---------- 100 ---------- 300 ---------- 600 ---------- 1000
      │    │   histogram(4)=
      │    ├── cost: 18.0200002
      │    ├── key: (1)
      │    └── fd: (1)-->(4)
      └── filters
           └── k:1 IN (1010, 1020, 1030) [outer=(1), constraints=(/1: [/1010 - /1010] [/1020 - /1020] [/1030 - /1030]; tight)]

opt set=optimizer_prefer_bounded_cardinality=true
SELECT * FROM t WHERE k IN (1010, 1020, 1030) AND i > 500
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 3]
 ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0]
 │   histogram(1)=
 │   histogram(4)=
 ├── cost: 19.03
 ├── key: (1)
 ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 ├── scan t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── constraint: /1
 │    │    ├── [/1010 - /1010]
 │    │    ├── [/1020 - /1020]
 │    │    └── [/1030 - /1030]
 │    ├── cardinality: [0 - 3]
 │    ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0]
 │    │   histogram(1)=
 │    ├── cost: 19.01
 │    ├── key: (1)
 │    └── fd: (1)-->(2-6), (2)~~>(1,3-6)
 └── filters
      └── i:4 > 500 [outer=(4), constraints=(/4: [/501 - ]; tight)]

opt set=optimizer_min_row_count=1
SELECT * FROM t WHERE k IN (1010, 1020, 1030) AND i > 500
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 3]
 ├── stats: [rows=1, distinct(1)=1, null(1)=0, distinct(4)=1, null(4)=0]
 │   histogram(1)=
 │   histogram(4)=
 ├── cost: 19.03
 ├── key: (1)
 ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 ├── scan t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── constraint: /1
 │    │    ├── [/1010 - /1010]
 │    │    ├── [/1020 - /1020]
 │    │    └── [/1030 - /1030]
 │    ├── cardinality: [0 - 3]
 │    ├── stats: [rows=6e-07, distinct(1)=6e-07, null(1)=0]
 │    │   histogram(1)=
 │    ├── cost: 19.01
 │    ├── key: (1)
 │    └── fd: (1)-->(2-6), (2)~~>(1,3-6)
 └── filters
      └── i:4 > 500 [outer=(4), constraints=(/4: [/501 - ]; tight)]

# ------------------------------------------------------------------------------
# Q4
#
# Choose between equality spans on "k" and "i", all inside the histogram, vs an
# inequality span on "s", which falls outside the histogram.
# ------------------------------------------------------------------------------

opt
SELECT * FROM t WHERE k IN (100, 110, 120, 130) AND i = 400 AND s < 'apple'
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5!null e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(5)=2e-07, null(5)=0, distinct(4,5)=2e-07, null(4,5)=0, distinct(1,4,5)=2e-07, null(1,4,5)=0]
 │   histogram(1)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 100 --- 110 --- 120 --- 130
 │   histogram(4)=  0 2e-07
 │                <--- 400
 │   histogram(5)=
 ├── cost: 18.0700002
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── cardinality: [0 - 4]
 │    ├── stats: [rows=8e-10]
 │    ├── cost: 18.0500002
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 │    └── select
 │         ├── columns: k:1!null s:5!null
 │         ├── cardinality: [0 - 4]
 │         ├── stats: [rows=8e-10, distinct(1)=8e-10, null(1)=0]
 │         │   histogram(1)=  0 2e-10 0 2e-10 0 2e-10 0 2e-10
 │         │                <--- 100 --- 110 --- 120 --- 130
 │         ├── cost: 18.0400002
 │         ├── key: (1)
 │         ├── fd: (1)-->(5)
 │         ├── scan t@t_s_idx
 │         │    ├── columns: k:1!null s:5!null
 │         │    ├── constraint: /5/1: (/NULL - /'apple')
 │         │    ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(5)=2e-07, null(5)=0]
 │         │    │   histogram(1)=  0  0  1.98e-08 2e-10 3.98e-08 2e-10 5.98e-08 2e-10 7.98e-08 2e-10
 │         │    │                <--- 0 ---------- 100 ---------- 300 ---------- 600 ---------- 1000
 │         │    │   histogram(5)=
 │         │    ├── cost: 18.0200002
 │         │    ├── key: (1)
 │         │    └── fd: (1)-->(5)
 │         └── filters
 │              └── k:1 IN (100, 110, 120, 130) [outer=(1), constraints=(/1: [/100 - /100] [/110 - /110] [/120 - /120] [/130 - /130]; tight)]
 └── filters
      └── i:4 = 400 [outer=(4), constraints=(/4: [/400 - /400]; tight), fd=()-->(4)]

opt set=optimizer_prefer_bounded_cardinality=true
SELECT * FROM t WHERE k IN (100, 110, 120, 130) AND i = 400 AND s < 'apple'
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5!null e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(5)=2e-07, null(5)=0, distinct(4,5)=2e-07, null(4,5)=0, distinct(1,4,5)=2e-07, null(1,4,5)=0]
 │   histogram(1)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 100 --- 110 --- 120 --- 130
 │   histogram(4)=  0 2e-07
 │                <--- 400
 │   histogram(5)=
 ├── cost: 24.32
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 ├── scan t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── constraint: /1
 │    │    ├── [/100 - /100]
 │    │    ├── [/110 - /110]
 │    │    ├── [/120 - /120]
 │    │    └── [/130 - /130]
 │    ├── cardinality: [0 - 4]
 │    ├── stats: [rows=4, distinct(1)=4, null(1)=0]
 │    │   histogram(1)=  0   1   0   1   0   1   0   1
 │    │                <--- 100 --- 110 --- 120 --- 130
 │    ├── cost: 24.25
 │    ├── key: (1)
 │    └── fd: (1)-->(2-6), (2)~~>(1,3-6)
 └── filters
      ├── i:4 = 400 [outer=(4), constraints=(/4: [/400 - /400]; tight), fd=()-->(4)]
      └── s:5 < 'apple' [outer=(5), constraints=(/5: (/NULL - /'apple'); tight)]

opt set=optimizer_min_row_count=1
SELECT * FROM t WHERE k IN (100, 110, 120, 130) AND i = 400 AND s < 'apple'
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5!null e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=1, distinct(1)=1, null(1)=0, distinct(4)=1, null(4)=0, distinct(5)=1, null(5)=0, distinct(4,5)=1, null(4,5)=0, distinct(1,4,5)=1, null(1,4,5)=0]
 │   histogram(1)=  0 0.25  0 0.25  0 0.25  0 0.25
 │                <--- 100 --- 110 --- 120 --- 130
 │   histogram(4)=  0   1
 │                <--- 400
 │   histogram(5)=
 ├── cost: 24.32
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 ├── scan t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── constraint: /1
 │    │    ├── [/100 - /100]
 │    │    ├── [/110 - /110]
 │    │    ├── [/120 - /120]
 │    │    └── [/130 - /130]
 │    ├── cardinality: [0 - 4]
 │    ├── stats: [rows=4, distinct(1)=4, null(1)=0]
 │    │   histogram(1)=  0   1   0   1   0   1   0   1
 │    │                <--- 100 --- 110 --- 120 --- 130
 │    ├── cost: 24.25
 │    ├── key: (1)
 │    └── fd: (1)-->(2-6), (2)~~>(1,3-6)
 └── filters
      ├── i:4 = 400 [outer=(4), constraints=(/4: [/400 - /400]; tight), fd=()-->(4)]
      └── s:5 < 'apple' [outer=(5), constraints=(/5: (/NULL - /'apple'); tight)]

# ------------------------------------------------------------------------------
# Q5
#
# Choose between an unbounded equality span on "i" inside the histogram vs an
# inequality span on "s" outside its histogram.
# ------------------------------------------------------------------------------

opt
SELECT * FROM t WHERE i = 400 AND s > 'z'
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5!null e:6
 ├── stats: [rows=2e-07, distinct(4)=2e-07, null(4)=0, distinct(5)=2e-07, null(5)=0, distinct(4,5)=2e-07, null(4,5)=0]
 │   histogram(4)=  0 2e-07
 │                <--- 400
 │   histogram(5)=
 ├── cost: 18.0700014
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=2e-07]
 │    ├── cost: 18.0400014
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 │    └── scan t@t_s_idx
 │         ├── columns: k:1!null s:5!null
 │         ├── constraint: /5/1: [/e'z\x00' - ]
 │         ├── stats: [rows=2e-07, distinct(5)=2e-07, null(5)=0]
 │         │   histogram(5)=
 │         ├── cost: 18.0200002
 │         ├── key: (1)
 │         └── fd: (1)-->(5)
 └── filters
      └── i:4 = 400 [outer=(4), constraints=(/4: [/400 - /400]; tight), fd=()-->(4)]

opt set=optimizer_prefer_bounded_cardinality=true
SELECT * FROM t WHERE i = 400 AND s > 'z'
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5!null e:6
 ├── stats: [rows=2e-07, distinct(4)=2e-07, null(4)=0, distinct(5)=2e-07, null(5)=0, distinct(4,5)=2e-07, null(4,5)=0]
 │   histogram(4)=  0 2e-07
 │                <--- 400
 │   histogram(5)=
 ├── cost: 18.0700014
 ├── cost-flags: unbounded-cardinality
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=2e-07]
 │    ├── cost: 18.0400014
 │    ├── cost-flags: unbounded-cardinality
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 │    └── scan t@t_s_idx
 │         ├── columns: k:1!null s:5!null
 │         ├── constraint: /5/1: [/e'z\x00' - ]
 │         ├── stats: [rows=2e-07, distinct(5)=2e-07, null(5)=0]
 │         │   histogram(5)=
 │         ├── cost: 18.0200002
 │         ├── cost-flags: unbounded-cardinality
 │         ├── key: (1)
 │         └── fd: (1)-->(5)
 └── filters
      └── i:4 = 400 [outer=(4), constraints=(/4: [/400 - /400]; tight), fd=()-->(4)]

opt set=optimizer_min_row_count=1
SELECT * FROM t WHERE i = 400 AND s > 'z'
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5!null e:6
 ├── stats: [rows=1, distinct(4)=1, null(4)=0, distinct(5)=1, null(5)=0, distinct(4,5)=1, null(4,5)=0]
 │   histogram(4)=  0   1
 │                <--- 400
 │   histogram(5)=
 ├── cost: 25.1625
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=1]
 │    ├── cost: 25.1225
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 │    └── scan t@t_s_idx
 │         ├── columns: k:1!null s:5!null
 │         ├── constraint: /5/1: [/e'z\x00' - ]
 │         ├── stats: [rows=1, distinct(5)=1, null(5)=0]
 │         │   histogram(5)=
 │         ├── cost: 19.045
 │         ├── key: (1)
 │         └── fd: (1)-->(5)
 └── filters
      └── i:4 = 400 [outer=(4), constraints=(/4: [/400 - /400]; tight), fd=()-->(4)]

# ------------------------------------------------------------------------------
# Q6
#
# Choose between equality spans on "k", "i", and "s". The "k" span is inside the
# histogram, while the "i" and "s" spans are outside their histograms.
# ------------------------------------------------------------------------------

opt
SELECT * FROM t WHERE k = 100 AND i = 500 AND s = 'zzz'
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5!null e:6
 ├── cardinality: [0 - 1]
 ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(5)=2e-07, null(5)=0]
 │   histogram(1)=  0 2e-07
 │                <--- 100
 │   histogram(4)=
 │   histogram(5)=
 ├── cost: 9.04000122
 ├── key: ()
 ├── fd: ()-->(1-6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── cardinality: [0 - 1]
 │    ├── stats: [rows=2e-07]
 │    ├── cost: 9.02000122
 │    ├── key: ()
 │    ├── fd: ()-->(1-6)
 │    └── scan t@t_i_idx
 │         ├── columns: k:1!null i:4!null
 │         ├── constraint: /4/1: [/500/100 - /500/100]
 │         ├── cardinality: [0 - 1]
 │         ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(1,4)=2e-07, null(1,4)=0]
 │         │   histogram(1)=  0 2e-07
 │         │                <--- 100
 │         │   histogram(4)=
 │         ├── cost: 9.01
 │         ├── key: ()
 │         └── fd: ()-->(1,4)
 └── filters
      └── s:5 = 'zzz' [outer=(5), constraints=(/5: [/'zzz' - /'zzz']; tight), fd=()-->(5)]

opt set=optimizer_prefer_bounded_cardinality=true
SELECT * FROM t WHERE k = 100 AND i = 500 AND s = 'zzz'
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5!null e:6
 ├── cardinality: [0 - 1]
 ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(5)=2e-07, null(5)=0]
 │   histogram(1)=  0 2e-07
 │                <--- 100
 │   histogram(4)=
 │   histogram(5)=
 ├── cost: 9.04000122
 ├── key: ()
 ├── fd: ()-->(1-6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── cardinality: [0 - 1]
 │    ├── stats: [rows=2e-07]
 │    ├── cost: 9.02000122
 │    ├── key: ()
 │    ├── fd: ()-->(1-6)
 │    └── scan t@t_i_idx
 │         ├── columns: k:1!null i:4!null
 │         ├── constraint: /4/1: [/500/100 - /500/100]
 │         ├── cardinality: [0 - 1]
 │         ├── stats: [rows=2e-07, distinct(1)=2e-07, null(1)=0, distinct(4)=2e-07, null(4)=0, distinct(1,4)=2e-07, null(1,4)=0]
 │         │   histogram(1)=  0 2e-07
 │         │                <--- 100
 │         │   histogram(4)=
 │         ├── cost: 9.01
 │         ├── key: ()
 │         └── fd: ()-->(1,4)
 └── filters
      └── s:5 = 'zzz' [outer=(5), constraints=(/5: [/'zzz' - /'zzz']; tight), fd=()-->(5)]

opt set=optimizer_min_row_count=1
SELECT * FROM t WHERE k = 100 AND i = 500 AND s = 'zzz'
----
select
 ├── columns: k:1!null u:2 d:3 i:4!null s:5!null e:6
 ├── cardinality: [0 - 1]
 ├── stats: [rows=1, distinct(1)=1, null(1)=0, distinct(4)=1, null(4)=0, distinct(5)=1, null(5)=0]
 │   histogram(1)=  0   1
 │                <--- 100
 │   histogram(4)=
 │   histogram(5)=
 ├── cost: 9.11
 ├── key: ()
 ├── fd: ()-->(1-6)
 ├── scan t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── constraint: /1: [/100 - /100]
 │    ├── cardinality: [0 - 1]
 │    ├── stats: [rows=1, distinct(1)=1, null(1)=0]
 │    │   histogram(1)=  0   1
 │    │                <--- 100
 │    ├── cost: 9.07
 │    ├── key: ()
 │    └── fd: ()-->(1-6)
 └── filters
      ├── i:4 = 500 [outer=(4), constraints=(/4: [/500 - /500]; tight), fd=()-->(4)]
      └── s:5 = 'zzz' [outer=(5), constraints=(/5: [/'zzz' - /'zzz']; tight), fd=()-->(5)]

# ------------------------------------------------------------------------------
# Q7
#
# Choose between 4 single-row equality spans on "u" and a single unbounded
# equality span on "i". The "i" span is outside the histogram range. Note that
# an index join is required for both possible plans.
# ------------------------------------------------------------------------------

opt
SELECT * FROM t WHERE u IN (110, 120, 130, 140) AND i = 500
----
select
 ├── columns: k:1!null u:2!null d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=2e-07, distinct(2)=2e-07, null(2)=0, distinct(4)=2e-07, null(4)=0, distinct(2,4)=2e-07, null(2,4)=0]
 │   histogram(2)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(4)=
 ├── cost: 18.0600014
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)-->(1,3,5,6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=2e-07]
 │    ├── cost: 18.0400014
 │    ├── key: (1)
 │    ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 │    └── scan t@t_i_idx
 │         ├── columns: k:1!null i:4!null
 │         ├── constraint: /4/1: [/500 - /500]
 │         ├── stats: [rows=2e-07, distinct(4)=2e-07, null(4)=0]
 │         │   histogram(4)=
 │         ├── cost: 18.0200002
 │         ├── key: (1)
 │         └── fd: ()-->(4)
 └── filters
      └── u:2 IN (110, 120, 130, 140) [outer=(2), constraints=(/2: [/110 - /110] [/120 - /120] [/130 - /130] [/140 - /140]; tight)]

opt set=optimizer_prefer_bounded_cardinality=true
SELECT * FROM t WHERE u IN (110, 120, 130, 140) AND i = 500
----
select
 ├── columns: k:1!null u:2!null d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=2e-07, distinct(2)=2e-07, null(2)=0, distinct(4)=2e-07, null(4)=0, distinct(2,4)=2e-07, null(2,4)=0]
 │   histogram(2)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(4)=
 ├── cost: 48.4
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)-->(1,3,5,6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── cardinality: [0 - 4]
 │    ├── stats: [rows=4]
 │    ├── cost: 48.34
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-6), (2)-->(1), (2)~~>(1,3-6)
 │    └── scan t@t_u_key
 │         ├── columns: k:1!null u:2!null
 │         ├── constraint: /2
 │         │    ├── [/110 - /110]
 │         │    ├── [/120 - /120]
 │         │    ├── [/130 - /130]
 │         │    └── [/140 - /140]
 │         ├── cardinality: [0 - 4]
 │         ├── stats: [rows=4, distinct(2)=4, null(2)=0]
 │         │   histogram(2)=  0   1   0   1   0   1   0   1
 │         │                <--- 110 --- 120 --- 130 --- 140
 │         ├── cost: 24.09
 │         ├── key: (1)
 │         └── fd: (1)-->(2), (2)-->(1)
 └── filters
      └── i:4 = 500 [outer=(4), constraints=(/4: [/500 - /500]; tight), fd=()-->(4)]

opt set=optimizer_min_row_count=1
SELECT * FROM t WHERE u IN (110, 120, 130, 140) AND i = 500
----
select
 ├── columns: k:1!null u:2!null d:3 i:4!null s:5 e:6
 ├── cardinality: [0 - 4]
 ├── stats: [rows=1, distinct(2)=1, null(2)=0, distinct(4)=1, null(4)=0, distinct(2,4)=1, null(2,4)=0]
 │   histogram(2)=  0 0.25  0 0.25  0 0.25  0 0.25
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(4)=
 ├── cost: 25.15
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)-->(1,3,5,6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=1]
 │    ├── cost: 25.12
 │    ├── key: (1)
 │    ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 │    └── scan t@t_i_idx
 │         ├── columns: k:1!null i:4!null
 │         ├── constraint: /4/1: [/500 - /500]
 │         ├── stats: [rows=1, distinct(4)=1, null(4)=0]
 │         │   histogram(4)=
 │         ├── cost: 19.04
 │         ├── key: (1)
 │         └── fd: ()-->(4)
 └── filters
      └── u:2 IN (110, 120, 130, 140) [outer=(2), constraints=(/2: [/110 - /110] [/120 - /120] [/130 - /130] [/140 - /140]; tight)]

# ------------------------------------------------------------------------------
# Q7
#
# Choose between 4 equality spans on "d" and a single unbounded equality span
# on "i". The "i" span is outside the histogram range. Note that an index join
# is required for both possible plans, and "d" has no uniqueness guarantee, but
# has the same histogram as "k".
# ------------------------------------------------------------------------------

opt
SELECT * FROM t WHERE d IN (110, 120, 130, 140) AND i = 500
----
select
 ├── columns: k:1!null u:2 d:3!null i:4!null s:5 e:6
 ├── stats: [rows=2e-07, distinct(3)=2e-07, null(3)=0, distinct(4)=2e-07, null(4)=0, distinct(3,4)=2e-07, null(3,4)=0]
 │   histogram(3)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(4)=
 ├── cost: 18.0700014
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=2e-07]
 │    ├── cost: 18.0400014
 │    ├── key: (1)
 │    ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 │    └── scan t@t_i_idx
 │         ├── columns: k:1!null i:4!null
 │         ├── constraint: /4/1: [/500 - /500]
 │         ├── stats: [rows=2e-07, distinct(4)=2e-07, null(4)=0]
 │         │   histogram(4)=
 │         ├── cost: 18.0200002
 │         ├── key: (1)
 │         └── fd: ()-->(4)
 └── filters
      └── d:3 IN (110, 120, 130, 140) [outer=(3), constraints=(/3: [/110 - /110] [/120 - /120] [/130 - /130] [/140 - /140]; tight)]

opt set=optimizer_prefer_bounded_cardinality=true
SELECT * FROM t WHERE d IN (110, 120, 130, 140) AND i = 500
----
select
 ├── columns: k:1!null u:2 d:3!null i:4!null s:5 e:6
 ├── stats: [rows=2e-07, distinct(3)=2e-07, null(3)=0, distinct(4)=2e-07, null(4)=0, distinct(3,4)=2e-07, null(3,4)=0]
 │   histogram(3)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(4)=
 ├── cost: 18.0700014
 ├── cost-flags: unbounded-cardinality
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=2e-07]
 │    ├── cost: 18.0400014
 │    ├── cost-flags: unbounded-cardinality
 │    ├── key: (1)
 │    ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 │    └── scan t@t_i_idx
 │         ├── columns: k:1!null i:4!null
 │         ├── constraint: /4/1: [/500 - /500]
 │         ├── stats: [rows=2e-07, distinct(4)=2e-07, null(4)=0]
 │         │   histogram(4)=
 │         ├── cost: 18.0200002
 │         ├── cost-flags: unbounded-cardinality
 │         ├── key: (1)
 │         └── fd: ()-->(4)
 └── filters
      └── d:3 IN (110, 120, 130, 140) [outer=(3), constraints=(/3: [/110 - /110] [/120 - /120] [/130 - /130] [/140 - /140]; tight)]

opt set=optimizer_min_row_count=1
SELECT * FROM t WHERE d IN (110, 120, 130, 140) AND i = 500
----
select
 ├── columns: k:1!null u:2 d:3!null i:4!null s:5 e:6
 ├── stats: [rows=1, distinct(3)=1, null(3)=0, distinct(4)=1, null(4)=0, distinct(3,4)=1, null(3,4)=0]
 │   histogram(3)=  0 0.25  0 0.25  0 0.25  0 0.25
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(4)=
 ├── cost: 25.16
 ├── key: (1)
 ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=1]
 │    ├── cost: 25.12
 │    ├── key: (1)
 │    ├── fd: ()-->(4), (1)-->(2,3,5,6), (2)~~>(1,3,5,6)
 │    └── scan t@t_i_idx
 │         ├── columns: k:1!null i:4!null
 │         ├── constraint: /4/1: [/500 - /500]
 │         ├── stats: [rows=1, distinct(4)=1, null(4)=0]
 │         │   histogram(4)=
 │         ├── cost: 19.04
 │         ├── key: (1)
 │         └── fd: ()-->(4)
 └── filters
      └── d:3 IN (110, 120, 130, 140) [outer=(3), constraints=(/3: [/110 - /110] [/120 - /120] [/130 - /130] [/140 - /140]; tight)]

# ------------------------------------------------------------------------------
# Q9
#
# Choose between 4 equality spans on "u" and a partial index scan for a value of
# "e" that is not in the histogram. Scanning either index requires an index
# join.
# ------------------------------------------------------------------------------

opt
SELECT * FROM t WHERE e = 'PENDING' AND u IN (110, 120, 130, 140)
----
select
 ├── columns: k:1!null u:2!null d:3 i:4 s:5 e:6!null
 ├── cardinality: [0 - 4]
 ├── immutable
 ├── stats: [rows=2e-07, distinct(2)=2e-07, null(2)=0, distinct(6)=2e-07, null(6)=0, distinct(2,6)=2e-07, null(2,6)=0]
 │   histogram(2)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(6)=  0      0
 │                <--- 'PENDING'
 ├── cost: 18.0600014
 ├── key: (1)
 ├── fd: ()-->(6), (1)-->(2-5), (2)-->(1,3-5)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=2e-07]
 │    ├── cost: 18.0400014
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 │    └── scan t@t_i_idx1,partial
 │         ├── columns: k:1!null i:4
 │         ├── stats: [rows=2e-07, distinct(6)=2e-07, null(6)=0]
 │         │   histogram(6)=  0      0
 │         │                <--- 'PENDING'
 │         ├── cost: 18.0200002
 │         ├── key: (1)
 │         └── fd: (1)-->(4)
 └── filters
      └── u:2 IN (110, 120, 130, 140) [outer=(2), constraints=(/2: [/110 - /110] [/120 - /120] [/130 - /130] [/140 - /140]; tight)]

opt set=optimizer_prefer_bounded_cardinality=true
SELECT * FROM t WHERE e = 'PENDING' AND u IN (110, 120, 130, 140)
----
select
 ├── columns: k:1!null u:2!null d:3 i:4 s:5 e:6!null
 ├── cardinality: [0 - 4]
 ├── immutable
 ├── stats: [rows=2e-07, distinct(2)=2e-07, null(2)=0, distinct(6)=2e-07, null(6)=0, distinct(2,6)=2e-07, null(2,6)=0]
 │   histogram(2)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(6)=  0      0
 │                <--- 'PENDING'
 ├── cost: 48.4
 ├── key: (1)
 ├── fd: ()-->(6), (1)-->(2-5), (2)-->(1,3-5)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── cardinality: [0 - 4]
 │    ├── stats: [rows=4]
 │    ├── cost: 48.34
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-6), (2)-->(1), (2)~~>(1,3-6)
 │    └── scan t@t_u_key
 │         ├── columns: k:1!null u:2!null
 │         ├── constraint: /2
 │         │    ├── [/110 - /110]
 │         │    ├── [/120 - /120]
 │         │    ├── [/130 - /130]
 │         │    └── [/140 - /140]
 │         ├── cardinality: [0 - 4]
 │         ├── stats: [rows=4, distinct(2)=4, null(2)=0]
 │         │   histogram(2)=  0   1   0   1   0   1   0   1
 │         │                <--- 110 --- 120 --- 130 --- 140
 │         ├── cost: 24.09
 │         ├── key: (1)
 │         └── fd: (1)-->(2), (2)-->(1)
 └── filters
      └── e:6 = 'PENDING' [outer=(6), immutable, constraints=(/6: [/'PENDING' - /'PENDING']; tight), fd=()-->(6)]

opt set=optimizer_min_row_count=1
SELECT * FROM t WHERE e = 'PENDING' AND u IN (110, 120, 130, 140)
----
select
 ├── columns: k:1!null u:2!null d:3 i:4 s:5 e:6!null
 ├── cardinality: [0 - 4]
 ├── immutable
 ├── stats: [rows=1, distinct(2)=1, null(2)=0, distinct(6)=1, null(6)=0, distinct(2,6)=1, null(2,6)=0]
 │   histogram(2)=  0 0.25  0 0.25  0 0.25  0 0.25
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(6)=  0      0
 │                <--- 'PENDING'
 ├── cost: 25.15
 ├── key: (1)
 ├── fd: ()-->(6), (1)-->(2-5), (2)-->(1,3-5)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=1]
 │    ├── cost: 25.12
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 │    └── scan t@t_i_idx1,partial
 │         ├── columns: k:1!null i:4
 │         ├── stats: [rows=1, distinct(6)=1, null(6)=0]
 │         │   histogram(6)=  0      0
 │         │                <--- 'PENDING'
 │         ├── cost: 19.04
 │         ├── key: (1)
 │         └── fd: (1)-->(4)
 └── filters
      └── u:2 IN (110, 120, 130, 140) [outer=(2), constraints=(/2: [/110 - /110] [/120 - /120] [/130 - /130] [/140 - /140]; tight)]

# ------------------------------------------------------------------------------
# Q10
#
# Choose between 4 equality spans on "d" and a partial index scan for a value of
# "e" that is not in the histogram. Scanning either index requires an index
# join, and there is no unique constraint on "d" (though it has the same
# histogram as "k").
# ------------------------------------------------------------------------------

opt
SELECT * FROM t WHERE e = 'PENDING' AND d IN (110, 120, 130, 140)
----
select
 ├── columns: k:1!null u:2 d:3!null i:4 s:5 e:6!null
 ├── immutable
 ├── stats: [rows=2e-07, distinct(3)=2e-07, null(3)=0, distinct(6)=2e-07, null(6)=0, distinct(3,6)=2e-07, null(3,6)=0]
 │   histogram(3)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(6)=  0      0
 │                <--- 'PENDING'
 ├── cost: 18.0700014
 ├── key: (1)
 ├── fd: ()-->(6), (1)-->(2-5), (2)~~>(1,3-5)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=2e-07]
 │    ├── cost: 18.0400014
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 │    └── scan t@t_i_idx1,partial
 │         ├── columns: k:1!null i:4
 │         ├── stats: [rows=2e-07, distinct(6)=2e-07, null(6)=0]
 │         │   histogram(6)=  0      0
 │         │                <--- 'PENDING'
 │         ├── cost: 18.0200002
 │         ├── key: (1)
 │         └── fd: (1)-->(4)
 └── filters
      └── d:3 IN (110, 120, 130, 140) [outer=(3), constraints=(/3: [/110 - /110] [/120 - /120] [/130 - /130] [/140 - /140]; tight)]

opt set=optimizer_prefer_bounded_cardinality=true
SELECT * FROM t WHERE e = 'PENDING' AND d IN (110, 120, 130, 140)
----
select
 ├── columns: k:1!null u:2 d:3!null i:4 s:5 e:6!null
 ├── immutable
 ├── stats: [rows=2e-07, distinct(3)=2e-07, null(3)=0, distinct(6)=2e-07, null(6)=0, distinct(3,6)=2e-07, null(3,6)=0]
 │   histogram(3)=  0 5e-08 0 5e-08 0 5e-08 0 5e-08
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(6)=  0      0
 │                <--- 'PENDING'
 ├── cost: 18.0700014
 ├── cost-flags: unbounded-cardinality
 ├── key: (1)
 ├── fd: ()-->(6), (1)-->(2-5), (2)~~>(1,3-5)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=2e-07]
 │    ├── cost: 18.0400014
 │    ├── cost-flags: unbounded-cardinality
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 │    └── scan t@t_i_idx1,partial
 │         ├── columns: k:1!null i:4
 │         ├── stats: [rows=2e-07, distinct(6)=2e-07, null(6)=0]
 │         │   histogram(6)=  0      0
 │         │                <--- 'PENDING'
 │         ├── cost: 18.0200002
 │         ├── cost-flags: unbounded-cardinality
 │         ├── key: (1)
 │         └── fd: (1)-->(4)
 └── filters
      └── d:3 IN (110, 120, 130, 140) [outer=(3), constraints=(/3: [/110 - /110] [/120 - /120] [/130 - /130] [/140 - /140]; tight)]

opt set=optimizer_min_row_count=1
SELECT * FROM t WHERE e = 'PENDING' AND d IN (110, 120, 130, 140)
----
select
 ├── columns: k:1!null u:2 d:3!null i:4 s:5 e:6!null
 ├── immutable
 ├── stats: [rows=1, distinct(3)=1, null(3)=0, distinct(6)=1, null(6)=0, distinct(3,6)=1, null(3,6)=0]
 │   histogram(3)=  0 0.25  0 0.25  0 0.25  0 0.25
 │                <--- 110 --- 120 --- 130 --- 140
 │   histogram(6)=  0      0
 │                <--- 'PENDING'
 ├── cost: 25.16
 ├── key: (1)
 ├── fd: ()-->(6), (1)-->(2-5), (2)~~>(1,3-5)
 ├── index-join t
 │    ├── columns: k:1!null u:2 d:3 i:4 s:5 e:6
 │    ├── stats: [rows=1]
 │    ├── cost: 25.12
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-6), (2)~~>(1,3-6)
 │    └── scan t@t_i_idx1,partial
 │         ├── columns: k:1!null i:4
 │         ├── stats: [rows=1, distinct(6)=1, null(6)=0]
 │         │   histogram(6)=  0      0
 │         │                <--- 'PENDING'
 │         ├── cost: 19.04
 │         ├── key: (1)
 │         └── fd: (1)-->(4)
 └── filters
      └── d:3 IN (110, 120, 130, 140) [outer=(3), constraints=(/3: [/110 - /110] [/120 - /120] [/130 - /130] [/140 - /140]; tight)]
