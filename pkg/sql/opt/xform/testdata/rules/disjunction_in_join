# Test ORed ON clause predicates which may be split into unions or 
# intersections. The rewrite is cost-based, so may not always show up in the
# query plan.
# Use tables both with and without a primary key, to test when PK columns are
# not included and also to allow null values.


exec-ddl
CREATE TABLE a(a1 INT, a2 INT, a3 INT, a4 INT, PRIMARY KEY(a1, a2, a3, a4))
----

exec-ddl
CREATE TABLE b(b1 INT, b2 INT, b3 INT, b4 INT,
               INDEX (b1, b2) STORING (b3, b4),
               INDEX (b2) STORING (b1, b3, b4),
               INDEX (b3) STORING (b1, b2, b4))
----

exec-ddl
CREATE TABLE c(c1 INT, c2 INT, c3 INT, c4 INT)
----

exec-ddl
CREATE TABLE d(d1 INT, d2 INT, d3 INT, d4 INT,
               INDEX d (d1) STORING (d2, d3, d4))
----

# --------------------------------------------------
# InnerJoin
# --------------------------------------------------

# The left AND right sides of the join already produce key columns
build-cascades expect=SplitDisjunctionOfJoinTerms
SELECT t1.*, t2.* FROM a t1, a t2 WHERE t1.a1 = t2.a3 OR t1.a2 = t2.a4 OR t1.a1 = t2.a4
----
root
 └── project
      ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
      ├── key: (1-4,7-10)
      └── select
           ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t1.crdb_internal_mvcc_timestamp:5 t1.tableoid:6 t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null t2.crdb_internal_mvcc_timestamp:11 t2.tableoid:12
           ├── key: (1-4,7-10)
           ├── fd: (1-4)-->(5,6), (7-10)-->(11,12)
           ├── inner-join (cross)
           │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t1.crdb_internal_mvcc_timestamp:5 t1.tableoid:6 t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null t2.crdb_internal_mvcc_timestamp:11 t2.tableoid:12
           │    ├── key: (1-4,7-10)
           │    ├── fd: (1-4)-->(5,6), (7-10)-->(11,12)
           │    ├── scan a [as=t1]
           │    │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t1.crdb_internal_mvcc_timestamp:5 t1.tableoid:6
           │    │    ├── key: (1-4)
           │    │    └── fd: (1-4)-->(5,6)
           │    ├── scan a [as=t2]
           │    │    ├── columns: t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null t2.crdb_internal_mvcc_timestamp:11 t2.tableoid:12
           │    │    ├── key: (7-10)
           │    │    └── fd: (7-10)-->(11,12)
           │    └── filters (true)
           └── filters
                └── ((t1.a1:1 = t2.a3:9) OR (t1.a2:2 = t2.a4:10)) OR (t1.a1:1 = t2.a4:10) [outer=(1,2,9,10)]

# Join of tables with compound primary keys
opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a t1, a t2 WHERE (t1.a2 = t2.a2 OR t1.a3 = t2.a3) AND (t1.a1 = t2.a1 OR t1.a4 = t2.a4)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a1:7!null a2:8!null a3:9!null a4:10!null
 ├── key: (1-4,7-10)
 └── distinct-on
      ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
      ├── grouping columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
      ├── key: (1-4,7-10)
      └── union-all
           ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
           ├── left columns: t1.a1:13 t1.a2:14 t1.a3:15 t1.a4:16 t2.a1:19 t2.a2:20 t2.a3:21 t2.a4:22
           ├── right columns: t1.a1:25 t1.a2:26 t1.a3:27 t1.a4:28 t2.a1:31 t2.a2:32 t2.a3:33 t2.a4:34
           ├── inner-join (hash)
           │    ├── columns: t1.a1:13!null t1.a2:14!null t1.a3:15!null t1.a4:16!null t2.a1:19!null t2.a2:20!null t2.a3:21!null t2.a4:22!null
           │    ├── key: (13,15,16,19-22)
           │    ├── fd: (14)==(20), (20)==(14)
           │    ├── scan a [as=t1]
           │    │    ├── columns: t1.a1:13!null t1.a2:14!null t1.a3:15!null t1.a4:16!null
           │    │    └── key: (13-16)
           │    ├── scan a [as=t2]
           │    │    ├── columns: t2.a1:19!null t2.a2:20!null t2.a3:21!null t2.a4:22!null
           │    │    └── key: (19-22)
           │    └── filters
           │         ├── t1.a2:14 = t2.a2:20 [outer=(14,20), constraints=(/14: (/NULL - ]; /20: (/NULL - ]), fd=(14)==(20), (20)==(14)]
           │         └── (t1.a1:13 = t2.a1:19) OR (t1.a4:16 = t2.a4:22) [outer=(13,16,19,22)]
           └── inner-join (hash)
                ├── columns: t1.a1:25!null t1.a2:26!null t1.a3:27!null t1.a4:28!null t2.a1:31!null t2.a2:32!null t2.a3:33!null t2.a4:34!null
                ├── key: (25,26,28,31-34)
                ├── fd: (27)==(33), (33)==(27)
                ├── scan a [as=t1]
                │    ├── columns: t1.a1:25!null t1.a2:26!null t1.a3:27!null t1.a4:28!null
                │    └── key: (25-28)
                ├── scan a [as=t2]
                │    ├── columns: t2.a1:31!null t2.a2:32!null t2.a3:33!null t2.a4:34!null
                │    └── key: (31-34)
                └── filters
                     ├── t1.a3:27 = t2.a3:33 [outer=(27,33), constraints=(/27: (/NULL - ]; /33: (/NULL - ]), fd=(27)==(33), (33)==(27)]
                     └── (t1.a1:25 = t2.a1:31) OR (t1.a4:28 = t2.a4:34) [outer=(25,28,31,34)]

# Join of tables with compound primary keys
opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a, B WHERE (a2 = b2 OR a3 = b3) AND (a1 = b1 OR a4 = b4)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7 b2:8 b3:9 b4:10
 └── distinct-on
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7 b2:8 b3:9 b4:10 rowid:11!null
      ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null rowid:11!null
      ├── key: (1-4,11)
      ├── fd: (1-4,11)-->(7-10)
      ├── union-all
      │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7 b2:8 b3:9 b4:10 rowid:11!null
      │    ├── left columns: a1:14 a2:15 a3:16 a4:17 b1:20 b2:21 b3:22 b4:23 rowid:24
      │    ├── right columns: a1:27 a2:28 a3:29 a4:30 b1:33 b2:34 b3:35 b4:36 rowid:37
      │    ├── inner-join (hash)
      │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null b1:20 b2:21!null b3:22 b4:23 rowid:24!null
      │    │    ├── key: (14,16,17,24)
      │    │    ├── fd: (24)-->(20-23), (15)==(21), (21)==(15)
      │    │    ├── scan a
      │    │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    │    │    └── key: (14-17)
      │    │    ├── scan b
      │    │    │    ├── columns: b1:20 b2:21 b3:22 b4:23 rowid:24!null
      │    │    │    ├── key: (24)
      │    │    │    └── fd: (24)-->(20-23)
      │    │    └── filters
      │    │         ├── a2:15 = b2:21 [outer=(15,21), constraints=(/15: (/NULL - ]; /21: (/NULL - ]), fd=(15)==(21), (21)==(15)]
      │    │         └── (a1:14 = b1:20) OR (a4:17 = b4:23) [outer=(14,17,20,23)]
      │    └── inner-join (hash)
      │         ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null b1:33 b2:34 b3:35!null b4:36 rowid:37!null
      │         ├── key: (27,28,30,37)
      │         ├── fd: (37)-->(33-36), (29)==(35), (35)==(29)
      │         ├── scan a
      │         │    ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
      │         │    └── key: (27-30)
      │         ├── scan b
      │         │    ├── columns: b1:33 b2:34 b3:35 b4:36 rowid:37!null
      │         │    ├── key: (37)
      │         │    └── fd: (37)-->(33-36)
      │         └── filters
      │              ├── a3:29 = b3:35 [outer=(29,35), constraints=(/29: (/NULL - ]; /35: (/NULL - ]), fd=(29)==(35), (35)==(29)]
      │              └── (a1:27 = b1:33) OR (a4:30 = b4:36) [outer=(27,30,33,36)]
      └── aggregations
           ├── const-agg [as=b1:7, outer=(7)]
           │    └── b1:7
           ├── const-agg [as=b2:8, outer=(8)]
           │    └── b2:8
           ├── const-agg [as=b3:9, outer=(9)]
           │    └── b3:9
           └── const-agg [as=b4:10, outer=(10)]
                └── b4:10

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a t1, a t2 WHERE (t1.a2 = t2.a2 OR t1.a3 = t2.a3) AND (t1.a1 = t2.a1 OR t1.a4 = t2.a4)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a1:7!null a2:8!null a3:9!null a4:10!null
 ├── key: (1-4,7-10)
 └── distinct-on
      ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
      ├── grouping columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
      ├── key: (1-4,7-10)
      └── union-all
           ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
           ├── left columns: t1.a1:13 t1.a2:14 t1.a3:15 t1.a4:16 t2.a1:19 t2.a2:20 t2.a3:21 t2.a4:22
           ├── right columns: t1.a1:25 t1.a2:26 t1.a3:27 t1.a4:28 t2.a1:31 t2.a2:32 t2.a3:33 t2.a4:34
           ├── inner-join (hash)
           │    ├── columns: t1.a1:13!null t1.a2:14!null t1.a3:15!null t1.a4:16!null t2.a1:19!null t2.a2:20!null t2.a3:21!null t2.a4:22!null
           │    ├── key: (13,15,16,19-22)
           │    ├── fd: (14)==(20), (20)==(14)
           │    ├── scan a [as=t1]
           │    │    ├── columns: t1.a1:13!null t1.a2:14!null t1.a3:15!null t1.a4:16!null
           │    │    └── key: (13-16)
           │    ├── scan a [as=t2]
           │    │    ├── columns: t2.a1:19!null t2.a2:20!null t2.a3:21!null t2.a4:22!null
           │    │    └── key: (19-22)
           │    └── filters
           │         ├── t1.a2:14 = t2.a2:20 [outer=(14,20), constraints=(/14: (/NULL - ]; /20: (/NULL - ]), fd=(14)==(20), (20)==(14)]
           │         └── (t1.a1:13 = t2.a1:19) OR (t1.a4:16 = t2.a4:22) [outer=(13,16,19,22)]
           └── inner-join (hash)
                ├── columns: t1.a1:25!null t1.a2:26!null t1.a3:27!null t1.a4:28!null t2.a1:31!null t2.a2:32!null t2.a3:33!null t2.a4:34!null
                ├── key: (25,26,28,31-34)
                ├── fd: (27)==(33), (33)==(27)
                ├── scan a [as=t1]
                │    ├── columns: t1.a1:25!null t1.a2:26!null t1.a3:27!null t1.a4:28!null
                │    └── key: (25-28)
                ├── scan a [as=t2]
                │    ├── columns: t2.a1:31!null t2.a2:32!null t2.a3:33!null t2.a4:34!null
                │    └── key: (31-34)
                └── filters
                     ├── t1.a3:27 = t2.a3:33 [outer=(27,33), constraints=(/27: (/NULL - ]; /33: (/NULL - ]), fd=(27)==(33), (33)==(27)]
                     └── (t1.a1:25 = t2.a1:31) OR (t1.a4:28 = t2.a4:34) [outer=(25,28,31,34)]

opt expect=SplitDisjunctionOfJoinTerms
SELECT a1,a2,a3 FROM a,b WHERE (a1=b1 AND a2=b2 AND (a1=1 OR b1=1)) OR (a3=b3 AND a4=b4)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null
 └── project
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7 b2:8 b3:9 b4:10
      └── distinct-on
           ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7 b2:8 b3:9 b4:10 rowid:11!null
           ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null rowid:11!null
           ├── key: (1-4,11)
           ├── fd: (1-4,11)-->(7-10)
           ├── union-all
           │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7 b2:8 b3:9 b4:10 rowid:11!null
           │    ├── left columns: a1:14 a2:15 a3:16 a4:17 b1:20 b2:21 b3:22 b4:23 rowid:24
           │    ├── right columns: a1:27 a2:28 a3:29 a4:30 b1:33 b2:34 b3:35 b4:36 rowid:37
           │    ├── inner-join (merge)
           │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null b1:20!null b2:21!null b3:22 b4:23 rowid:24!null
           │    │    ├── left ordering: +15,+14
           │    │    ├── right ordering: +21,+20
           │    │    ├── key: (16,17,24)
           │    │    ├── fd: ()-->(14,20), (24)-->(21-23), (14)==(20), (20)==(14), (15)==(21), (21)==(15)
           │    │    ├── scan a
           │    │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │    │    │    ├── constraint: /14/15/16/17: [/1 - /1]
           │    │    │    ├── key: (15-17)
           │    │    │    ├── fd: ()-->(14)
           │    │    │    └── ordering: +15 opt(14) [actual: +15]
           │    │    ├── scan b@b_b1_b2_idx
           │    │    │    ├── columns: b1:20!null b2:21 b3:22 b4:23 rowid:24!null
           │    │    │    ├── constraint: /20/21/24: [/1 - /1]
           │    │    │    ├── key: (24)
           │    │    │    ├── fd: ()-->(20), (24)-->(21-23)
           │    │    │    └── ordering: +21 opt(20) [actual: +21]
           │    │    └── filters (true)
           │    └── inner-join (hash)
           │         ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null b1:33 b2:34 b3:35!null b4:36!null rowid:37!null
           │         ├── key: (27,28,37)
           │         ├── fd: (37)-->(33-36), (29)==(35), (35)==(29), (30)==(36), (36)==(30)
           │         ├── scan a
           │         │    ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
           │         │    └── key: (27-30)
           │         ├── scan b
           │         │    ├── columns: b1:33 b2:34 b3:35 b4:36 rowid:37!null
           │         │    ├── key: (37)
           │         │    └── fd: (37)-->(33-36)
           │         └── filters
           │              ├── a3:29 = b3:35 [outer=(29,35), constraints=(/29: (/NULL - ]; /35: (/NULL - ]), fd=(29)==(35), (35)==(29)]
           │              └── a4:30 = b4:36 [outer=(30,36), constraints=(/30: (/NULL - ]; /36: (/NULL - ]), fd=(30)==(36), (36)==(30)]
           └── aggregations
                ├── const-agg [as=b1:7, outer=(7)]
                │    └── b1:7
                ├── const-agg [as=b2:8, outer=(8)]
                │    └── b2:8
                ├── const-agg [as=b3:9, outer=(9)]
                │    └── b3:9
                └── const-agg [as=b4:10, outer=(10)]
                     └── b4:10

opt expect=SplitDisjunctionOfJoinTerms
SELECT a1,a2,a3 FROM a,b WHERE a1=1 AND (a2=b2 OR a3=b3)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null
 ├── fd: ()-->(1)
 └── project
      ├── columns: a1:1!null a2:2!null a3:3!null b2:8 b3:9
      ├── fd: ()-->(1)
      └── distinct-on
           ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b2:8 b3:9 rowid:11!null
           ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null rowid:11!null
           ├── key: (1-4,11)
           ├── fd: (1-4,11)-->(8,9)
           ├── union-all
           │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b2:8 b3:9 rowid:11!null
           │    ├── left columns: a1:14 a2:15 a3:16 a4:17 b2:21 b3:22 rowid:24
           │    ├── right columns: a1:27 a2:28 a3:29 a4:30 b2:34 b3:35 rowid:37
           │    ├── inner-join (lookup b@b_b2_idx)
           │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null b2:21!null b3:22 rowid:24!null
           │    │    ├── key columns: [15] = [21]
           │    │    ├── key: (16,17,24)
           │    │    ├── fd: ()-->(14), (24)-->(21,22), (15)==(21), (21)==(15)
           │    │    ├── scan a
           │    │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │    │    │    ├── constraint: /14/15/16/17: [/1 - /1]
           │    │    │    ├── key: (15-17)
           │    │    │    └── fd: ()-->(14)
           │    │    └── filters (true)
           │    └── inner-join (lookup b@b_b3_idx)
           │         ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null b2:34 b3:35!null rowid:37!null
           │         ├── key columns: [29] = [35]
           │         ├── key: (28,30,37)
           │         ├── fd: ()-->(27), (37)-->(34,35), (29)==(35), (35)==(29)
           │         ├── scan a
           │         │    ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
           │         │    ├── constraint: /27/28/29/30: [/1 - /1]
           │         │    ├── key: (28-30)
           │         │    └── fd: ()-->(27)
           │         └── filters (true)
           └── aggregations
                ├── const-agg [as=b2:8, outer=(8)]
                │    └── b2:8
                └── const-agg [as=b3:9, outer=(9)]
                     └── b3:9

# More than one disjunction in the filter
build-cascades expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a, c WHERE (a1 = c1 OR a2 = c2 OR a3 = c3 OR a4 = c4)
----
root
 └── project
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null c1:7 c2:8 c3:9 c4:10
      └── select
           ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a.crdb_internal_mvcc_timestamp:5 a.tableoid:6 c1:7 c2:8 c3:9 c4:10 rowid:11!null c.crdb_internal_mvcc_timestamp:12 c.tableoid:13
           ├── key: (1-4,11)
           ├── fd: (1-4)-->(5,6), (11)-->(7-10,12,13)
           ├── inner-join (cross)
           │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a.crdb_internal_mvcc_timestamp:5 a.tableoid:6 c1:7 c2:8 c3:9 c4:10 rowid:11!null c.crdb_internal_mvcc_timestamp:12 c.tableoid:13
           │    ├── key: (1-4,11)
           │    ├── fd: (1-4)-->(5,6), (11)-->(7-10,12,13)
           │    ├── scan a
           │    │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a.crdb_internal_mvcc_timestamp:5 a.tableoid:6
           │    │    ├── key: (1-4)
           │    │    └── fd: (1-4)-->(5,6)
           │    ├── scan c
           │    │    ├── columns: c1:7 c2:8 c3:9 c4:10 rowid:11!null c.crdb_internal_mvcc_timestamp:12 c.tableoid:13
           │    │    ├── key: (11)
           │    │    └── fd: (11)-->(7-10,12,13)
           │    └── filters (true)
           └── filters
                └── (((a1:1 = c1:7) OR (a2:2 = c2:8)) OR (a3:3 = c3:9)) OR (a4:4 = c4:10) [outer=(1-4,7-10)]

build-cascades expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a, c WHERE (a1 = c2 OR a2 = c1 OR a3 = c4 OR a3 = c4)
----
root
 └── project
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null c1:7 c2:8 c3:9 c4:10
      └── select
           ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a.crdb_internal_mvcc_timestamp:5 a.tableoid:6 c1:7 c2:8 c3:9 c4:10 rowid:11!null c.crdb_internal_mvcc_timestamp:12 c.tableoid:13
           ├── key: (1-4,11)
           ├── fd: (1-4)-->(5,6), (11)-->(7-10,12,13)
           ├── inner-join (cross)
           │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a.crdb_internal_mvcc_timestamp:5 a.tableoid:6 c1:7 c2:8 c3:9 c4:10 rowid:11!null c.crdb_internal_mvcc_timestamp:12 c.tableoid:13
           │    ├── key: (1-4,11)
           │    ├── fd: (1-4)-->(5,6), (11)-->(7-10,12,13)
           │    ├── scan a
           │    │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a.crdb_internal_mvcc_timestamp:5 a.tableoid:6
           │    │    ├── key: (1-4)
           │    │    └── fd: (1-4)-->(5,6)
           │    ├── scan c
           │    │    ├── columns: c1:7 c2:8 c3:9 c4:10 rowid:11!null c.crdb_internal_mvcc_timestamp:12 c.tableoid:13
           │    │    ├── key: (11)
           │    │    └── fd: (11)-->(7-10,12,13)
           │    └── filters (true)
           └── filters
                └── (((a1:1 = c2:8) OR (a2:2 = c1:7)) OR (a3:3 = c4:10)) OR (a3:3 = c4:10) [outer=(1-3,7,8,10)]

# Equality filters that do not reference a column on each side of the join
opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM b, d WHERE (b1 = b2 OR b3 = d3)
----
project
 ├── columns: b1:1 b2:2 b3:3 b4:4 d1:8 d2:9 d3:10 d4:11
 └── distinct-on
      ├── columns: b1:1 b2:2 b3:3 b4:4 b.rowid:5!null d1:8 d2:9 d3:10 d4:11 d.rowid:12!null
      ├── grouping columns: b.rowid:5!null d.rowid:12!null
      ├── key: (5,12)
      ├── fd: (5,12)-->(1-4,8-11)
      ├── union-all
      │    ├── columns: b1:1 b2:2 b3:3 b4:4 b.rowid:5!null d1:8 d2:9 d3:10 d4:11 d.rowid:12!null
      │    ├── left columns: b1:15 b2:16 b3:17 b4:18 b.rowid:19 d1:22 d2:23 d3:24 d4:25 d.rowid:26
      │    ├── right columns: b1:29 b2:30 b3:31 b4:32 b.rowid:33 d1:36 d2:37 d3:38 d4:39 d.rowid:40
      │    ├── inner-join (hash)
      │    │    ├── columns: b1:15 b2:16 b3:17!null b4:18 b.rowid:19!null d1:22 d2:23 d3:24!null d4:25 d.rowid:26!null
      │    │    ├── key: (19,26)
      │    │    ├── fd: (19)-->(15-18), (26)-->(22-25), (17)==(24), (24)==(17)
      │    │    ├── scan b
      │    │    │    ├── columns: b1:15 b2:16 b3:17 b4:18 b.rowid:19!null
      │    │    │    ├── key: (19)
      │    │    │    └── fd: (19)-->(15-18)
      │    │    ├── scan d
      │    │    │    ├── columns: d1:22 d2:23 d3:24 d4:25 d.rowid:26!null
      │    │    │    ├── key: (26)
      │    │    │    └── fd: (26)-->(22-25)
      │    │    └── filters
      │    │         └── b3:17 = d3:24 [outer=(17,24), constraints=(/17: (/NULL - ]; /24: (/NULL - ]), fd=(17)==(24), (24)==(17)]
      │    └── inner-join (cross)
      │         ├── columns: b1:29!null b2:30!null b3:31 b4:32 b.rowid:33!null d1:36 d2:37 d3:38 d4:39 d.rowid:40!null
      │         ├── key: (33,40)
      │         ├── fd: (33)-->(29-32), (29)==(30), (30)==(29), (40)-->(36-39)
      │         ├── scan d
      │         │    ├── columns: d1:36 d2:37 d3:38 d4:39 d.rowid:40!null
      │         │    ├── key: (40)
      │         │    └── fd: (40)-->(36-39)
      │         ├── select
      │         │    ├── columns: b1:29!null b2:30!null b3:31 b4:32 b.rowid:33!null
      │         │    ├── key: (33)
      │         │    ├── fd: (33)-->(29-32), (29)==(30), (30)==(29)
      │         │    ├── scan b@b_b1_b2_idx
      │         │    │    ├── columns: b1:29!null b2:30 b3:31 b4:32 b.rowid:33!null
      │         │    │    ├── constraint: /29/30/33: (/NULL - ]
      │         │    │    ├── key: (33)
      │         │    │    └── fd: (33)-->(29-32)
      │         │    └── filters
      │         │         └── b1:29 = b2:30 [outer=(29,30), constraints=(/29: (/NULL - ]; /30: (/NULL - ]), fd=(29)==(30), (30)==(29)]
      │         └── filters (true)
      └── aggregations
           ├── const-agg [as=b1:1, outer=(1)]
           │    └── b1:1
           ├── const-agg [as=b2:2, outer=(2)]
           │    └── b2:2
           ├── const-agg [as=b3:3, outer=(3)]
           │    └── b3:3
           ├── const-agg [as=b4:4, outer=(4)]
           │    └── b4:4
           ├── const-agg [as=d1:8, outer=(8)]
           │    └── d1:8
           ├── const-agg [as=d2:9, outer=(9)]
           │    └── d2:9
           ├── const-agg [as=d3:10, outer=(10)]
           │    └── d3:10
           └── const-agg [as=d4:11, outer=(11)]
                └── d4:11

build-cascades expect=SplitDisjunctionOfJoinTerms
SELECT * FROM b, d WHERE (b1 = b2 OR b3 = d3 OR b4 = d4 OR d1 = d2)
----
root
 └── project
      ├── columns: b1:1 b2:2 b3:3 b4:4 d1:8 d2:9 d3:10 d4:11
      └── select
           ├── columns: b1:1 b2:2 b3:3 b4:4 b.rowid:5!null b.crdb_internal_mvcc_timestamp:6 b.tableoid:7 d1:8 d2:9 d3:10 d4:11 d.rowid:12!null d.crdb_internal_mvcc_timestamp:13 d.tableoid:14
           ├── key: (5,12)
           ├── fd: (5)-->(1-4,6,7), (12)-->(8-11,13,14)
           ├── inner-join (cross)
           │    ├── columns: b1:1 b2:2 b3:3 b4:4 b.rowid:5!null b.crdb_internal_mvcc_timestamp:6 b.tableoid:7 d1:8 d2:9 d3:10 d4:11 d.rowid:12!null d.crdb_internal_mvcc_timestamp:13 d.tableoid:14
           │    ├── key: (5,12)
           │    ├── fd: (5)-->(1-4,6,7), (12)-->(8-11,13,14)
           │    ├── scan b
           │    │    ├── columns: b1:1 b2:2 b3:3 b4:4 b.rowid:5!null b.crdb_internal_mvcc_timestamp:6 b.tableoid:7
           │    │    ├── key: (5)
           │    │    └── fd: (5)-->(1-4,6,7)
           │    ├── scan d
           │    │    ├── columns: d1:8 d2:9 d3:10 d4:11 d.rowid:12!null d.crdb_internal_mvcc_timestamp:13 d.tableoid:14
           │    │    ├── key: (12)
           │    │    └── fd: (12)-->(8-11,13,14)
           │    └── filters (true)
           └── filters
                └── (((b1:1 = b2:2) OR (b3:3 = d3:10)) OR (b4:4 = d4:11)) OR (d1:8 = d2:9) [outer=(1-4,8-11)]

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM b, d WHERE (b1 = 0 OR b1 = d1)   AND
                         (b1 = 0 OR b2 = 5)    AND
                         (b2 = d1 OR b1 = d1)  AND
                         (b2 = d1 OR b2 = 5)
----
project
 ├── columns: b1:1!null b2:2!null b3:3 b4:4 d1:8!null d2:9 d3:10 d4:11
 └── distinct-on
      ├── columns: b1:1!null b2:2!null b3:3 b4:4 b.rowid:5!null d1:8!null d2:9 d3:10 d4:11 d.rowid:12!null
      ├── grouping columns: b.rowid:5!null d.rowid:12!null
      ├── key: (5,12)
      ├── fd: (5,12)-->(1-4,8-11)
      ├── union-all
      │    ├── columns: b1:1!null b2:2!null b3:3 b4:4 b.rowid:5!null d1:8!null d2:9 d3:10 d4:11 d.rowid:12!null
      │    ├── left columns: b1:29 b2:30 b3:31 b4:32 b.rowid:33 d1:36 d2:37 d3:38 d4:39 d.rowid:40
      │    ├── right columns: b1:43 b2:44 b3:45 b4:46 b.rowid:47 d1:50 d2:51 d3:52 d4:53 d.rowid:54
      │    ├── inner-join (lookup d@d)
      │    │    ├── columns: b1:29!null b2:30!null b3:31 b4:32 b.rowid:33!null d1:36!null d2:37 d3:38 d4:39 d.rowid:40!null
      │    │    ├── key columns: [29] = [36]
      │    │    ├── key: (33,40)
      │    │    ├── fd: (33)-->(29-32), (40)-->(36-39), (29)==(36), (36)==(29)
      │    │    ├── distinct-on
      │    │    │    ├── columns: b1:29!null b2:30!null b3:31 b4:32 b.rowid:33!null
      │    │    │    ├── grouping columns: b.rowid:33!null
      │    │    │    ├── key: (33)
      │    │    │    ├── fd: (33)-->(29-32)
      │    │    │    ├── union-all
      │    │    │    │    ├── columns: b1:29!null b2:30!null b3:31 b4:32 b.rowid:33!null
      │    │    │    │    ├── left columns: b1:57 b2:58 b3:59 b4:60 b.rowid:61
      │    │    │    │    ├── right columns: b1:64 b2:65 b3:66 b4:67 b.rowid:68
      │    │    │    │    ├── scan b@b_b1_b2_idx
      │    │    │    │    │    ├── columns: b1:57!null b2:58!null b3:59 b4:60 b.rowid:61!null
      │    │    │    │    │    ├── constraint: /57/58/61
      │    │    │    │    │    │    ├── [/0/0 - /0/0]
      │    │    │    │    │    │    └── [/0/5 - /0/5]
      │    │    │    │    │    ├── key: (61)
      │    │    │    │    │    └── fd: ()-->(57), (61)-->(58-60)
      │    │    │    │    └── select
      │    │    │    │         ├── columns: b1:64!null b2:65!null b3:66 b4:67 b.rowid:68!null
      │    │    │    │         ├── key: (68)
      │    │    │    │         ├── fd: ()-->(65), (68)-->(64,66,67)
      │    │    │    │         ├── scan b@b_b2_idx
      │    │    │    │         │    ├── columns: b1:64 b2:65!null b3:66 b4:67 b.rowid:68!null
      │    │    │    │         │    ├── constraint: /65/68: [/5 - /5]
      │    │    │    │         │    ├── key: (68)
      │    │    │    │         │    └── fd: ()-->(65), (68)-->(64,66,67)
      │    │    │    │         └── filters
      │    │    │    │              └── (b1:64 = 5) OR ((b1:64 IS DISTINCT FROM CAST(NULL AS INT8)) OR CAST(NULL AS BOOL)) [outer=(64), constraints=(/64: (/NULL - ]; tight)]
      │    │    │    └── aggregations
      │    │    │         ├── const-agg [as=b1:29, outer=(29)]
      │    │    │         │    └── b1:29
      │    │    │         ├── const-agg [as=b2:30, outer=(30)]
      │    │    │         │    └── b2:30
      │    │    │         ├── const-agg [as=b3:31, outer=(31)]
      │    │    │         │    └── b3:31
      │    │    │         └── const-agg [as=b4:32, outer=(32)]
      │    │    │              └── b4:32
      │    │    └── filters (true)
      │    └── project
      │         ├── columns: b1:43!null b2:44!null b3:45 b4:46 b.rowid:47!null d1:50!null d2:51 d3:52 d4:53 d.rowid:54!null
      │         ├── key: (47,54)
      │         ├── fd: ()-->(43), (47)-->(44-46), (54)-->(50-53)
      │         └── distinct-on
      │              ├── columns: b1:43!null b2:44!null b3:45 b4:46 b.rowid:47!null d1:50!null d2:51 d3:52 d4:53 d.rowid:54!null
      │              ├── grouping columns: b.rowid:47!null d.rowid:54!null
      │              ├── key: (47,54)
      │              ├── fd: (47,54)-->(43-46,50-53)
      │              ├── union-all
      │              │    ├── columns: b1:43!null b2:44!null b3:45 b4:46 b.rowid:47!null d1:50!null d2:51 d3:52 d4:53 d.rowid:54!null
      │              │    ├── left columns: b1:71 b2:72 b3:73 b4:74 b.rowid:75 d1:78 d2:79 d3:80 d4:81 d.rowid:82
      │              │    ├── right columns: b1:85 b2:86 b3:87 b4:88 b.rowid:89 d1:92 d2:93 d3:94 d4:95 d.rowid:96
      │              │    ├── inner-join (lookup d@d)
      │              │    │    ├── columns: b1:71!null b2:72!null b3:73 b4:74 b.rowid:75!null d1:78!null d2:79 d3:80 d4:81 d.rowid:82!null
      │              │    │    ├── key columns: [72] = [78]
      │              │    │    ├── key: (75,82)
      │              │    │    ├── fd: ()-->(71), (75)-->(72-74), (82)-->(78-81), (72)==(78), (78)==(72)
      │              │    │    ├── scan b@b_b1_b2_idx
      │              │    │    │    ├── columns: b1:71!null b2:72!null b3:73 b4:74 b.rowid:75!null
      │              │    │    │    ├── constraint: /71/72/75: (/0/NULL - /0]
      │              │    │    │    ├── key: (75)
      │              │    │    │    └── fd: ()-->(71), (75)-->(72-74)
      │              │    │    └── filters
      │              │    │         └── ((d1:78 IS DISTINCT FROM CAST(NULL AS INT8)) OR CAST(NULL AS BOOL)) OR (d1:78 = 5) [outer=(78), constraints=(/78: (/NULL - ]; tight)]
      │              │    └── inner-join (lookup d@d)
      │              │         ├── columns: b1:85!null b2:86!null b3:87 b4:88 b.rowid:89!null d1:92!null d2:93 d3:94 d4:95 d.rowid:96!null
      │              │         ├── key columns: [85] = [92]
      │              │         ├── key: (89,96)
      │              │         ├── fd: ()-->(85,92), (89)-->(86-88), (96)-->(93-95), (85)==(92), (92)==(85)
      │              │         ├── scan b@b_b1_b2_idx
      │              │         │    ├── columns: b1:85!null b2:86!null b3:87 b4:88 b.rowid:89!null
      │              │         │    ├── constraint: /85/86/89
      │              │         │    │    ├── [/0/0 - /0/0]
      │              │         │    │    └── [/0/5 - /0/5]
      │              │         │    ├── key: (89)
      │              │         │    └── fd: ()-->(85), (89)-->(86-88)
      │              │         └── filters (true)
      │              └── aggregations
      │                   ├── const-agg [as=b1:43, outer=(43)]
      │                   │    └── b1:43
      │                   ├── const-agg [as=b2:44, outer=(44)]
      │                   │    └── b2:44
      │                   ├── const-agg [as=b3:45, outer=(45)]
      │                   │    └── b3:45
      │                   ├── const-agg [as=b4:46, outer=(46)]
      │                   │    └── b4:46
      │                   ├── const-agg [as=d1:50, outer=(50)]
      │                   │    └── d1:50
      │                   ├── const-agg [as=d2:51, outer=(51)]
      │                   │    └── d2:51
      │                   ├── const-agg [as=d3:52, outer=(52)]
      │                   │    └── d3:52
      │                   └── const-agg [as=d4:53, outer=(53)]
      │                        └── d4:53
      └── aggregations
           ├── const-agg [as=b1:1, outer=(1)]
           │    └── b1:1
           ├── const-agg [as=b2:2, outer=(2)]
           │    └── b2:2
           ├── const-agg [as=b3:3, outer=(3)]
           │    └── b3:3
           ├── const-agg [as=b4:4, outer=(4)]
           │    └── b4:4
           ├── const-agg [as=d1:8, outer=(8)]
           │    └── d1:8
           ├── const-agg [as=d2:9, outer=(9)]
           │    └── d2:9
           ├── const-agg [as=d3:10, outer=(10)]
           │    └── d3:10
           └── const-agg [as=d4:11, outer=(11)]
                └── d4:11

# ON filters that are a disjunction of equality filters AND And expressions
opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM c, d WHERE (c1 = d1 AND c2 = d2) OR c3 = d3
----
project
 ├── columns: c1:1 c2:2 c3:3 c4:4 d1:8 d2:9 d3:10 d4:11
 └── distinct-on
      ├── columns: c1:1 c2:2 c3:3 c4:4 c.rowid:5!null d1:8 d2:9 d3:10 d4:11 d.rowid:12!null
      ├── grouping columns: c.rowid:5!null d.rowid:12!null
      ├── key: (5,12)
      ├── fd: (5,12)-->(1-4,8-11)
      ├── union-all
      │    ├── columns: c1:1 c2:2 c3:3 c4:4 c.rowid:5!null d1:8 d2:9 d3:10 d4:11 d.rowid:12!null
      │    ├── left columns: c1:15 c2:16 c3:17 c4:18 c.rowid:19 d1:22 d2:23 d3:24 d4:25 d.rowid:26
      │    ├── right columns: c1:29 c2:30 c3:31 c4:32 c.rowid:33 d1:36 d2:37 d3:38 d4:39 d.rowid:40
      │    ├── inner-join (hash)
      │    │    ├── columns: c1:15!null c2:16!null c3:17 c4:18 c.rowid:19!null d1:22!null d2:23!null d3:24 d4:25 d.rowid:26!null
      │    │    ├── key: (19,26)
      │    │    ├── fd: (19)-->(15-18), (26)-->(22-25), (15)==(22), (22)==(15), (16)==(23), (23)==(16)
      │    │    ├── scan c
      │    │    │    ├── columns: c1:15 c2:16 c3:17 c4:18 c.rowid:19!null
      │    │    │    ├── key: (19)
      │    │    │    └── fd: (19)-->(15-18)
      │    │    ├── scan d
      │    │    │    ├── columns: d1:22 d2:23 d3:24 d4:25 d.rowid:26!null
      │    │    │    ├── key: (26)
      │    │    │    └── fd: (26)-->(22-25)
      │    │    └── filters
      │    │         ├── c1:15 = d1:22 [outer=(15,22), constraints=(/15: (/NULL - ]; /22: (/NULL - ]), fd=(15)==(22), (22)==(15)]
      │    │         └── c2:16 = d2:23 [outer=(16,23), constraints=(/16: (/NULL - ]; /23: (/NULL - ]), fd=(16)==(23), (23)==(16)]
      │    └── inner-join (hash)
      │         ├── columns: c1:29 c2:30 c3:31!null c4:32 c.rowid:33!null d1:36 d2:37 d3:38!null d4:39 d.rowid:40!null
      │         ├── key: (33,40)
      │         ├── fd: (33)-->(29-32), (40)-->(36-39), (31)==(38), (38)==(31)
      │         ├── scan c
      │         │    ├── columns: c1:29 c2:30 c3:31 c4:32 c.rowid:33!null
      │         │    ├── key: (33)
      │         │    └── fd: (33)-->(29-32)
      │         ├── scan d
      │         │    ├── columns: d1:36 d2:37 d3:38 d4:39 d.rowid:40!null
      │         │    ├── key: (40)
      │         │    └── fd: (40)-->(36-39)
      │         └── filters
      │              └── c3:31 = d3:38 [outer=(31,38), constraints=(/31: (/NULL - ]; /38: (/NULL - ]), fd=(31)==(38), (38)==(31)]
      └── aggregations
           ├── const-agg [as=c1:1, outer=(1)]
           │    └── c1:1
           ├── const-agg [as=c2:2, outer=(2)]
           │    └── c2:2
           ├── const-agg [as=c3:3, outer=(3)]
           │    └── c3:3
           ├── const-agg [as=c4:4, outer=(4)]
           │    └── c4:4
           ├── const-agg [as=d1:8, outer=(8)]
           │    └── d1:8
           ├── const-agg [as=d2:9, outer=(9)]
           │    └── d2:9
           ├── const-agg [as=d3:10, outer=(10)]
           │    └── d3:10
           └── const-agg [as=d4:11, outer=(11)]
                └── d4:11

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a, d WHERE (a1 = d2 AND a2 = d1) OR (a3 = d4 AND a4 = d3)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null d1:7 d2:8 d3:9 d4:10
 └── distinct-on
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null d1:7 d2:8 d3:9 d4:10 rowid:11!null
      ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null rowid:11!null
      ├── key: (1-4,11)
      ├── fd: (1-4,11)-->(7-10)
      ├── union-all
      │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null d1:7 d2:8 d3:9 d4:10 rowid:11!null
      │    ├── left columns: a1:14 a2:15 a3:16 a4:17 d1:20 d2:21 d3:22 d4:23 rowid:24
      │    ├── right columns: a1:27 a2:28 a3:29 a4:30 d1:33 d2:34 d3:35 d4:36 rowid:37
      │    ├── inner-join (hash)
      │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null d1:20!null d2:21!null d3:22 d4:23 rowid:24!null
      │    │    ├── key: (16,17,24)
      │    │    ├── fd: (24)-->(20-23), (14)==(21), (21)==(14), (15)==(20), (20)==(15)
      │    │    ├── scan a
      │    │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    │    │    └── key: (14-17)
      │    │    ├── scan d
      │    │    │    ├── columns: d1:20 d2:21 d3:22 d4:23 rowid:24!null
      │    │    │    ├── key: (24)
      │    │    │    └── fd: (24)-->(20-23)
      │    │    └── filters
      │    │         ├── a1:14 = d2:21 [outer=(14,21), constraints=(/14: (/NULL - ]; /21: (/NULL - ]), fd=(14)==(21), (21)==(14)]
      │    │         └── a2:15 = d1:20 [outer=(15,20), constraints=(/15: (/NULL - ]; /20: (/NULL - ]), fd=(15)==(20), (20)==(15)]
      │    └── inner-join (hash)
      │         ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null d1:33 d2:34 d3:35!null d4:36!null rowid:37!null
      │         ├── key: (27,28,37)
      │         ├── fd: (37)-->(33-36), (29)==(36), (36)==(29), (30)==(35), (35)==(30)
      │         ├── scan a
      │         │    ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
      │         │    └── key: (27-30)
      │         ├── scan d
      │         │    ├── columns: d1:33 d2:34 d3:35 d4:36 rowid:37!null
      │         │    ├── key: (37)
      │         │    └── fd: (37)-->(33-36)
      │         └── filters
      │              ├── a3:29 = d4:36 [outer=(29,36), constraints=(/29: (/NULL - ]; /36: (/NULL - ]), fd=(29)==(36), (36)==(29)]
      │              └── a4:30 = d3:35 [outer=(30,35), constraints=(/30: (/NULL - ]; /35: (/NULL - ]), fd=(30)==(35), (35)==(30)]
      └── aggregations
           ├── const-agg [as=d1:7, outer=(7)]
           │    └── d1:7
           ├── const-agg [as=d2:8, outer=(8)]
           │    └── d2:8
           ├── const-agg [as=d3:9, outer=(9)]
           │    └── d3:9
           └── const-agg [as=d4:10, outer=(10)]
                └── d4:10

#########################
# Uncorrelated semijoin #
#########################

# Join of tables with compound primary keys
opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE EXISTS (SELECT 1 FROM d WHERE d1 = 4 OR d2 = 50)
----
select
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 └── filters
      └── exists [subquery]
           └── limit
                ├── columns: d1:7 d2:8
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(7,8)
                ├── select
                │    ├── columns: d1:7 d2:8
                │    ├── limit hint: 1.00
                │    ├── scan d
                │    │    ├── columns: d1:7 d2:8
                │    │    └── limit hint: 50.00
                │    └── filters
                │         └── (d1:7 = 4) OR (d2:8 = 50) [outer=(7,8)]
                └── 1

opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE EXISTS (SELECT 1 FROM c, d WHERE d1 = 4 OR c2 = 50 HAVING sum(d4) > 40)
----
select
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── immutable
 ├── key: (1-4)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 └── filters
      └── exists [immutable, subquery]
           └── select
                ├── columns: sum:21!null
                ├── cardinality: [0 - 1]
                ├── immutable
                ├── key: ()
                ├── fd: ()-->(21)
                ├── scalar-group-by
                │    ├── columns: sum:21
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    ├── fd: ()-->(21)
                │    ├── inner-join (cross)
                │    │    ├── columns: c2:8 d1:14 d4:17
                │    │    ├── scan c
                │    │    │    └── columns: c2:8
                │    │    ├── scan d
                │    │    │    └── columns: d1:14 d4:17
                │    │    └── filters
                │    │         └── (d1:14 = 4) OR (c2:8 = 50) [outer=(8,14)]
                │    └── aggregations
                │         └── sum [as=sum:21, outer=(17)]
                │              └── d4:17
                └── filters
                     └── sum:21 > 40 [outer=(21), immutable, constraints=(/21: (/40 - ]; tight)]

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE EXISTS (SELECT 1 FROM c, d WHERE c1 = d2 or c2 = d1)
----
select
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 └── filters
      └── exists [subquery]
           └── limit
                ├── columns: c1:7 c2:8 d1:14 d2:15
                ├── cardinality: [0 - 1]
                ├── key: ()
                ├── fd: ()-->(7,8,14,15)
                ├── project
                │    ├── columns: c1:7 c2:8 d1:14 d2:15
                │    ├── limit hint: 1.00
                │    └── distinct-on
                │         ├── columns: c1:7 c2:8 c.rowid:11!null d1:14 d2:15 d.rowid:18!null
                │         ├── grouping columns: c.rowid:11!null d.rowid:18!null
                │         ├── key: (11,18)
                │         ├── fd: (11,18)-->(7,8,14,15)
                │         ├── limit hint: 1.00
                │         ├── union-all
                │         │    ├── columns: c1:7 c2:8 c.rowid:11!null d1:14 d2:15 d.rowid:18!null
                │         │    ├── left columns: c1:22 c2:23 c.rowid:26 d1:29 d2:30 d.rowid:33
                │         │    ├── right columns: c1:36 c2:37 c.rowid:40 d1:43 d2:44 d.rowid:47
                │         │    ├── limit hint: 1.20
                │         │    ├── inner-join (hash)
                │         │    │    ├── columns: c1:22!null c2:23 c.rowid:26!null d1:29 d2:30!null d.rowid:33!null
                │         │    │    ├── key: (26,33)
                │         │    │    ├── fd: (26)-->(22,23), (33)-->(29,30), (22)==(30), (30)==(22)
                │         │    │    ├── limit hint: 1.20
                │         │    │    ├── scan c
                │         │    │    │    ├── columns: c1:22 c2:23 c.rowid:26!null
                │         │    │    │    ├── key: (26)
                │         │    │    │    └── fd: (26)-->(22,23)
                │         │    │    ├── scan d
                │         │    │    │    ├── columns: d1:29 d2:30 d.rowid:33!null
                │         │    │    │    ├── key: (33)
                │         │    │    │    └── fd: (33)-->(29,30)
                │         │    │    └── filters
                │         │    │         └── c1:22 = d2:30 [outer=(22,30), constraints=(/22: (/NULL - ]; /30: (/NULL - ]), fd=(22)==(30), (30)==(22)]
                │         │    └── inner-join (hash)
                │         │         ├── columns: c1:36 c2:37!null c.rowid:40!null d1:43!null d2:44 d.rowid:47!null
                │         │         ├── key: (40,47)
                │         │         ├── fd: (40)-->(36,37), (47)-->(43,44), (37)==(43), (43)==(37)
                │         │         ├── limit hint: 1.20
                │         │         ├── scan c
                │         │         │    ├── columns: c1:36 c2:37 c.rowid:40!null
                │         │         │    ├── key: (40)
                │         │         │    └── fd: (40)-->(36,37)
                │         │         ├── scan d
                │         │         │    ├── columns: d1:43 d2:44 d.rowid:47!null
                │         │         │    ├── key: (47)
                │         │         │    └── fd: (47)-->(43,44)
                │         │         └── filters
                │         │              └── c2:37 = d1:43 [outer=(37,43), constraints=(/37: (/NULL - ]; /43: (/NULL - ]), fd=(37)==(43), (43)==(37)]
                │         └── aggregations
                │              ├── const-agg [as=c1:7, outer=(7)]
                │              │    └── c1:7
                │              ├── const-agg [as=c2:8, outer=(8)]
                │              │    └── c2:8
                │              ├── const-agg [as=d1:14, outer=(14)]
                │              │    └── d1:14
                │              └── const-agg [as=d2:15, outer=(15)]
                │                   └── d2:15
                └── 1

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE (a1, a2) IN (SELECT c1, d1 FROM c, d WHERE c3 = d3 or c3 = d4)
----
semi-join (hash)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 ├── project
 │    ├── columns: c1:7 c3:9!null d1:14 d3:16 d4:17
 │    └── distinct-on
 │         ├── columns: c1:7 c3:9!null c.rowid:11!null d1:14 d3:16 d4:17 d.rowid:18!null
 │         ├── grouping columns: c.rowid:11!null d.rowid:18!null
 │         ├── key: (11,18)
 │         ├── fd: (11,18)-->(7,9,14,16,17)
 │         ├── union-all
 │         │    ├── columns: c1:7 c3:9!null c.rowid:11!null d1:14 d3:16 d4:17 d.rowid:18!null
 │         │    ├── left columns: c1:22 c3:24 c.rowid:26 d1:29 d3:31 d4:32 d.rowid:33
 │         │    ├── right columns: c1:36 c3:38 c.rowid:40 d1:43 d3:45 d4:46 d.rowid:47
 │         │    ├── inner-join (hash)
 │         │    │    ├── columns: c1:22 c3:24!null c.rowid:26!null d1:29 d3:31!null d4:32 d.rowid:33!null
 │         │    │    ├── key: (26,33)
 │         │    │    ├── fd: (26)-->(22,24), (33)-->(29,31,32), (24)==(31), (31)==(24)
 │         │    │    ├── scan c
 │         │    │    │    ├── columns: c1:22 c3:24 c.rowid:26!null
 │         │    │    │    ├── key: (26)
 │         │    │    │    └── fd: (26)-->(22,24)
 │         │    │    ├── scan d
 │         │    │    │    ├── columns: d1:29 d3:31 d4:32 d.rowid:33!null
 │         │    │    │    ├── key: (33)
 │         │    │    │    └── fd: (33)-->(29,31,32)
 │         │    │    └── filters
 │         │    │         └── c3:24 = d3:31 [outer=(24,31), constraints=(/24: (/NULL - ]; /31: (/NULL - ]), fd=(24)==(31), (31)==(24)]
 │         │    └── inner-join (hash)
 │         │         ├── columns: c1:36 c3:38!null c.rowid:40!null d1:43 d3:45 d4:46!null d.rowid:47!null
 │         │         ├── key: (40,47)
 │         │         ├── fd: (40)-->(36,38), (47)-->(43,45,46), (38)==(46), (46)==(38)
 │         │         ├── scan c
 │         │         │    ├── columns: c1:36 c3:38 c.rowid:40!null
 │         │         │    ├── key: (40)
 │         │         │    └── fd: (40)-->(36,38)
 │         │         ├── scan d
 │         │         │    ├── columns: d1:43 d3:45 d4:46 d.rowid:47!null
 │         │         │    ├── key: (47)
 │         │         │    └── fd: (47)-->(43,45,46)
 │         │         └── filters
 │         │              └── c3:38 = d4:46 [outer=(38,46), constraints=(/38: (/NULL - ]; /46: (/NULL - ]), fd=(38)==(46), (46)==(38)]
 │         └── aggregations
 │              ├── const-agg [as=c1:7, outer=(7)]
 │              │    └── c1:7
 │              ├── const-agg [as=c3:9, outer=(9)]
 │              │    └── c3:9
 │              ├── const-agg [as=d1:14, outer=(14)]
 │              │    └── d1:14
 │              ├── const-agg [as=d3:16, outer=(16)]
 │              │    └── d3:16
 │              └── const-agg [as=d4:17, outer=(17)]
 │                   └── d4:17
 └── filters
      ├── c1:7 = a1:1 [outer=(1,7), constraints=(/1: (/NULL - ]; /7: (/NULL - ]), fd=(1)==(7), (7)==(1)]
      └── d1:14 = a2:2 [outer=(2,14), constraints=(/2: (/NULL - ]; /14: (/NULL - ]), fd=(2)==(14), (14)==(2)]

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE (a1, a2) IN (SELECT c1, d1 FROM c, d WHERE c3 = d3 or c2 = d2 EXCEPT ALL
                                   SELECT c1, d1 FROM c, d WHERE c3 = d3 or c2 = d2)
----
semi-join (hash)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 ├── except-all
 │    ├── columns: c1:7 d1:14
 │    ├── left columns: c1:7 d1:14
 │    ├── right columns: c1:21 d1:28
 │    ├── project
 │    │    ├── columns: c1:7 d1:14
 │    │    └── project
 │    │         ├── columns: c1:7 c2:8 c3:9 d1:14 d2:15 d3:16
 │    │         └── distinct-on
 │    │              ├── columns: c1:7 c2:8 c3:9 c.rowid:11!null d1:14 d2:15 d3:16 d.rowid:18!null
 │    │              ├── grouping columns: c.rowid:11!null d.rowid:18!null
 │    │              ├── key: (11,18)
 │    │              ├── fd: (11,18)-->(7-9,14-16)
 │    │              ├── union-all
 │    │              │    ├── columns: c1:7 c2:8 c3:9 c.rowid:11!null d1:14 d2:15 d3:16 d.rowid:18!null
 │    │              │    ├── left columns: c1:36 c2:37 c3:38 c.rowid:40 d1:43 d2:44 d3:45 d.rowid:47
 │    │              │    ├── right columns: c1:50 c2:51 c3:52 c.rowid:54 d1:57 d2:58 d3:59 d.rowid:61
 │    │              │    ├── inner-join (hash)
 │    │              │    │    ├── columns: c1:36 c2:37 c3:38!null c.rowid:40!null d1:43 d2:44 d3:45!null d.rowid:47!null
 │    │              │    │    ├── key: (40,47)
 │    │              │    │    ├── fd: (40)-->(36-38), (47)-->(43-45), (38)==(45), (45)==(38)
 │    │              │    │    ├── scan c
 │    │              │    │    │    ├── columns: c1:36 c2:37 c3:38 c.rowid:40!null
 │    │              │    │    │    ├── key: (40)
 │    │              │    │    │    └── fd: (40)-->(36-38)
 │    │              │    │    ├── scan d
 │    │              │    │    │    ├── columns: d1:43 d2:44 d3:45 d.rowid:47!null
 │    │              │    │    │    ├── key: (47)
 │    │              │    │    │    └── fd: (47)-->(43-45)
 │    │              │    │    └── filters
 │    │              │    │         └── c3:38 = d3:45 [outer=(38,45), constraints=(/38: (/NULL - ]; /45: (/NULL - ]), fd=(38)==(45), (45)==(38)]
 │    │              │    └── inner-join (hash)
 │    │              │         ├── columns: c1:50 c2:51!null c3:52 c.rowid:54!null d1:57 d2:58!null d3:59 d.rowid:61!null
 │    │              │         ├── key: (54,61)
 │    │              │         ├── fd: (54)-->(50-52), (61)-->(57-59), (51)==(58), (58)==(51)
 │    │              │         ├── scan c
 │    │              │         │    ├── columns: c1:50 c2:51 c3:52 c.rowid:54!null
 │    │              │         │    ├── key: (54)
 │    │              │         │    └── fd: (54)-->(50-52)
 │    │              │         ├── scan d
 │    │              │         │    ├── columns: d1:57 d2:58 d3:59 d.rowid:61!null
 │    │              │         │    ├── key: (61)
 │    │              │         │    └── fd: (61)-->(57-59)
 │    │              │         └── filters
 │    │              │              └── c2:51 = d2:58 [outer=(51,58), constraints=(/51: (/NULL - ]; /58: (/NULL - ]), fd=(51)==(58), (58)==(51)]
 │    │              └── aggregations
 │    │                   ├── const-agg [as=c1:7, outer=(7)]
 │    │                   │    └── c1:7
 │    │                   ├── const-agg [as=c2:8, outer=(8)]
 │    │                   │    └── c2:8
 │    │                   ├── const-agg [as=c3:9, outer=(9)]
 │    │                   │    └── c3:9
 │    │                   ├── const-agg [as=d1:14, outer=(14)]
 │    │                   │    └── d1:14
 │    │                   ├── const-agg [as=d2:15, outer=(15)]
 │    │                   │    └── d2:15
 │    │                   └── const-agg [as=d3:16, outer=(16)]
 │    │                        └── d3:16
 │    └── project
 │         ├── columns: c1:21 d1:28
 │         └── project
 │              ├── columns: c1:21 c2:22 c3:23 d1:28 d2:29 d3:30
 │              └── distinct-on
 │                   ├── columns: c1:21 c2:22 c3:23 c.rowid:25!null d1:28 d2:29 d3:30 d.rowid:32!null
 │                   ├── grouping columns: c.rowid:25!null d.rowid:32!null
 │                   ├── key: (25,32)
 │                   ├── fd: (25,32)-->(21-23,28-30)
 │                   ├── union-all
 │                   │    ├── columns: c1:21 c2:22 c3:23 c.rowid:25!null d1:28 d2:29 d3:30 d.rowid:32!null
 │                   │    ├── left columns: c1:92 c2:93 c3:94 c.rowid:96 d1:99 d2:100 d3:101 d.rowid:103
 │                   │    ├── right columns: c1:106 c2:107 c3:108 c.rowid:110 d1:113 d2:114 d3:115 d.rowid:117
 │                   │    ├── inner-join (hash)
 │                   │    │    ├── columns: c1:92 c2:93 c3:94!null c.rowid:96!null d1:99 d2:100 d3:101!null d.rowid:103!null
 │                   │    │    ├── key: (96,103)
 │                   │    │    ├── fd: (96)-->(92-94), (103)-->(99-101), (94)==(101), (101)==(94)
 │                   │    │    ├── scan c
 │                   │    │    │    ├── columns: c1:92 c2:93 c3:94 c.rowid:96!null
 │                   │    │    │    ├── key: (96)
 │                   │    │    │    └── fd: (96)-->(92-94)
 │                   │    │    ├── scan d
 │                   │    │    │    ├── columns: d1:99 d2:100 d3:101 d.rowid:103!null
 │                   │    │    │    ├── key: (103)
 │                   │    │    │    └── fd: (103)-->(99-101)
 │                   │    │    └── filters
 │                   │    │         └── c3:94 = d3:101 [outer=(94,101), constraints=(/94: (/NULL - ]; /101: (/NULL - ]), fd=(94)==(101), (101)==(94)]
 │                   │    └── inner-join (hash)
 │                   │         ├── columns: c1:106 c2:107!null c3:108 c.rowid:110!null d1:113 d2:114!null d3:115 d.rowid:117!null
 │                   │         ├── key: (110,117)
 │                   │         ├── fd: (110)-->(106-108), (117)-->(113-115), (107)==(114), (114)==(107)
 │                   │         ├── scan c
 │                   │         │    ├── columns: c1:106 c2:107 c3:108 c.rowid:110!null
 │                   │         │    ├── key: (110)
 │                   │         │    └── fd: (110)-->(106-108)
 │                   │         ├── scan d
 │                   │         │    ├── columns: d1:113 d2:114 d3:115 d.rowid:117!null
 │                   │         │    ├── key: (117)
 │                   │         │    └── fd: (117)-->(113-115)
 │                   │         └── filters
 │                   │              └── c2:107 = d2:114 [outer=(107,114), constraints=(/107: (/NULL - ]; /114: (/NULL - ]), fd=(107)==(114), (114)==(107)]
 │                   └── aggregations
 │                        ├── const-agg [as=c1:21, outer=(21)]
 │                        │    └── c1:21
 │                        ├── const-agg [as=c2:22, outer=(22)]
 │                        │    └── c2:22
 │                        ├── const-agg [as=c3:23, outer=(23)]
 │                        │    └── c3:23
 │                        ├── const-agg [as=d1:28, outer=(28)]
 │                        │    └── d1:28
 │                        ├── const-agg [as=d2:29, outer=(29)]
 │                        │    └── d2:29
 │                        └── const-agg [as=d3:30, outer=(30)]
 │                             └── d3:30
 └── filters
      ├── c1:7 = a1:1 [outer=(1,7), constraints=(/1: (/NULL - ]; /7: (/NULL - ]), fd=(1)==(7), (7)==(1)]
      └── d1:14 = a2:2 [outer=(2,14), constraints=(/2: (/NULL - ]; /14: (/NULL - ]), fd=(2)==(14), (14)==(2)]

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE (a1, a2) IN (SELECT c1, d1 FROM c, d WHERE c1 IS NULL OR c1 = d1)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 └── inner-join (hash)
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null c1:7!null d1:14!null
      ├── multiplicity: left-rows(zero-or-more), right-rows(zero-or-one)
      ├── key: (3,4,7,14)
      ├── fd: (1)==(7), (7)==(1), (2)==(14), (14)==(2)
      ├── distinct-on
      │    ├── columns: c1:7 d1:14
      │    ├── grouping columns: c1:7 d1:14
      │    ├── key: (7,14)
      │    └── distinct-on
      │         ├── columns: c1:7 c.rowid:11!null d1:14 d.rowid:18!null
      │         ├── grouping columns: c.rowid:11!null d.rowid:18!null
      │         ├── key: (11,18)
      │         ├── fd: (11,18)-->(7,14)
      │         ├── union-all
      │         │    ├── columns: c1:7 c.rowid:11!null d1:14 d.rowid:18!null
      │         │    ├── left columns: c1:34 c.rowid:38 d1:41 d.rowid:45
      │         │    ├── right columns: c1:48 c.rowid:52 d1:55 d.rowid:59
      │         │    ├── inner-join (hash)
      │         │    │    ├── columns: c1:34!null c.rowid:38!null d1:41!null d.rowid:45!null
      │         │    │    ├── key: (38,45)
      │         │    │    ├── fd: (38)-->(34), (45)-->(41), (34)==(41), (41)==(34)
      │         │    │    ├── scan c
      │         │    │    │    ├── columns: c1:34 c.rowid:38!null
      │         │    │    │    ├── key: (38)
      │         │    │    │    └── fd: (38)-->(34)
      │         │    │    ├── scan d
      │         │    │    │    ├── columns: d1:41 d.rowid:45!null
      │         │    │    │    ├── key: (45)
      │         │    │    │    └── fd: (45)-->(41)
      │         │    │    └── filters
      │         │    │         └── c1:34 = d1:41 [outer=(34,41), constraints=(/34: (/NULL - ]; /41: (/NULL - ]), fd=(34)==(41), (41)==(34)]
      │         │    └── inner-join (cross)
      │         │         ├── columns: c1:48 c.rowid:52!null d1:55 d.rowid:59!null
      │         │         ├── key: (52,59)
      │         │         ├── fd: ()-->(48), (59)-->(55)
      │         │         ├── scan d
      │         │         │    ├── columns: d1:55 d.rowid:59!null
      │         │         │    ├── key: (59)
      │         │         │    └── fd: (59)-->(55)
      │         │         ├── select
      │         │         │    ├── columns: c1:48 c.rowid:52!null
      │         │         │    ├── key: (52)
      │         │         │    ├── fd: ()-->(48)
      │         │         │    ├── scan c
      │         │         │    │    ├── columns: c1:48 c.rowid:52!null
      │         │         │    │    ├── key: (52)
      │         │         │    │    └── fd: (52)-->(48)
      │         │         │    └── filters
      │         │         │         └── c1:48 IS NULL [outer=(48), constraints=(/48: [/NULL - /NULL]; tight), fd=()-->(48)]
      │         │         └── filters (true)
      │         └── aggregations
      │              ├── const-agg [as=c1:7, outer=(7)]
      │              │    └── c1:7
      │              └── const-agg [as=d1:14, outer=(14)]
      │                   └── d1:14
      ├── select
      │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      │    ├── key: (1-4)
      │    ├── scan a
      │    │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      │    │    └── key: (1-4)
      │    └── filters
      │         └── (a1:1 IS NULL) OR (a1:1 = a2:2) [outer=(1,2)]
      └── filters
           ├── c1:7 = a1:1 [outer=(1,7), constraints=(/1: (/NULL - ]; /7: (/NULL - ]), fd=(1)==(7), (7)==(1)]
           └── d1:14 = a2:2 [outer=(2,14), constraints=(/2: (/NULL - ]; /14: (/NULL - ]), fd=(2)==(14), (14)==(2)]

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM b WHERE b1 NOT IN (SELECT c1 FROM c, d WHERE c1 IS NULL OR c1 = d1)
----
anti-join (cross)
 ├── columns: b1:1 b2:2 b3:3 b4:4
 ├── scan b
 │    └── columns: b1:1 b2:2 b3:3 b4:4
 ├── project
 │    ├── columns: c1:8 d1:15
 │    └── distinct-on
 │         ├── columns: c1:8 c.rowid:12!null d1:15 d.rowid:19!null
 │         ├── grouping columns: c.rowid:12!null d.rowid:19!null
 │         ├── key: (12,19)
 │         ├── fd: (12,19)-->(8,15)
 │         ├── union-all
 │         │    ├── columns: c1:8 c.rowid:12!null d1:15 d.rowid:19!null
 │         │    ├── left columns: c1:22 c.rowid:26 d1:29 d.rowid:33
 │         │    ├── right columns: c1:36 c.rowid:40 d1:43 d.rowid:47
 │         │    ├── inner-join (hash)
 │         │    │    ├── columns: c1:22!null c.rowid:26!null d1:29!null d.rowid:33!null
 │         │    │    ├── key: (26,33)
 │         │    │    ├── fd: (26)-->(22), (33)-->(29), (22)==(29), (29)==(22)
 │         │    │    ├── scan c
 │         │    │    │    ├── columns: c1:22 c.rowid:26!null
 │         │    │    │    ├── key: (26)
 │         │    │    │    └── fd: (26)-->(22)
 │         │    │    ├── scan d
 │         │    │    │    ├── columns: d1:29 d.rowid:33!null
 │         │    │    │    ├── key: (33)
 │         │    │    │    └── fd: (33)-->(29)
 │         │    │    └── filters
 │         │    │         └── c1:22 = d1:29 [outer=(22,29), constraints=(/22: (/NULL - ]; /29: (/NULL - ]), fd=(22)==(29), (29)==(22)]
 │         │    └── inner-join (cross)
 │         │         ├── columns: c1:36 c.rowid:40!null d1:43 d.rowid:47!null
 │         │         ├── key: (40,47)
 │         │         ├── fd: ()-->(36), (47)-->(43)
 │         │         ├── scan d
 │         │         │    ├── columns: d1:43 d.rowid:47!null
 │         │         │    ├── key: (47)
 │         │         │    └── fd: (47)-->(43)
 │         │         ├── select
 │         │         │    ├── columns: c1:36 c.rowid:40!null
 │         │         │    ├── key: (40)
 │         │         │    ├── fd: ()-->(36)
 │         │         │    ├── scan c
 │         │         │    │    ├── columns: c1:36 c.rowid:40!null
 │         │         │    │    ├── key: (40)
 │         │         │    │    └── fd: (40)-->(36)
 │         │         │    └── filters
 │         │         │         └── c1:36 IS NULL [outer=(36), constraints=(/36: [/NULL - /NULL]; tight), fd=()-->(36)]
 │         │         └── filters (true)
 │         └── aggregations
 │              ├── const-agg [as=c1:8, outer=(8)]
 │              │    └── c1:8
 │              └── const-agg [as=d1:15, outer=(15)]
 │                   └── d1:15
 └── filters
      └── (b1:1 = c1:8) IS NOT false [outer=(1,8)]

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM b WHERE (b1, b2) NOT IN (SELECT c1, c2 FROM c, d WHERE c1 IS NULL OR c1 = d1)
----
anti-join (cross)
 ├── columns: b1:1 b2:2 b3:3 b4:4
 ├── immutable
 ├── scan b
 │    └── columns: b1:1 b2:2 b3:3 b4:4
 ├── project
 │    ├── columns: column22:22
 │    ├── project
 │    │    ├── columns: c1:8 c2:9 d1:15
 │    │    └── distinct-on
 │    │         ├── columns: c1:8 c2:9 c.rowid:12!null d1:15 d.rowid:19!null
 │    │         ├── grouping columns: c.rowid:12!null d.rowid:19!null
 │    │         ├── key: (12,19)
 │    │         ├── fd: (12,19)-->(8,9,15)
 │    │         ├── union-all
 │    │         │    ├── columns: c1:8 c2:9 c.rowid:12!null d1:15 d.rowid:19!null
 │    │         │    ├── left columns: c1:23 c2:24 c.rowid:27 d1:30 d.rowid:34
 │    │         │    ├── right columns: c1:37 c2:38 c.rowid:41 d1:44 d.rowid:48
 │    │         │    ├── inner-join (hash)
 │    │         │    │    ├── columns: c1:23!null c2:24 c.rowid:27!null d1:30!null d.rowid:34!null
 │    │         │    │    ├── key: (27,34)
 │    │         │    │    ├── fd: (27)-->(23,24), (34)-->(30), (23)==(30), (30)==(23)
 │    │         │    │    ├── scan c
 │    │         │    │    │    ├── columns: c1:23 c2:24 c.rowid:27!null
 │    │         │    │    │    ├── key: (27)
 │    │         │    │    │    └── fd: (27)-->(23,24)
 │    │         │    │    ├── scan d
 │    │         │    │    │    ├── columns: d1:30 d.rowid:34!null
 │    │         │    │    │    ├── key: (34)
 │    │         │    │    │    └── fd: (34)-->(30)
 │    │         │    │    └── filters
 │    │         │    │         └── c1:23 = d1:30 [outer=(23,30), constraints=(/23: (/NULL - ]; /30: (/NULL - ]), fd=(23)==(30), (30)==(23)]
 │    │         │    └── inner-join (cross)
 │    │         │         ├── columns: c1:37 c2:38 c.rowid:41!null d1:44 d.rowid:48!null
 │    │         │         ├── key: (41,48)
 │    │         │         ├── fd: ()-->(37), (41)-->(38), (48)-->(44)
 │    │         │         ├── scan d
 │    │         │         │    ├── columns: d1:44 d.rowid:48!null
 │    │         │         │    ├── key: (48)
 │    │         │         │    └── fd: (48)-->(44)
 │    │         │         ├── select
 │    │         │         │    ├── columns: c1:37 c2:38 c.rowid:41!null
 │    │         │         │    ├── key: (41)
 │    │         │         │    ├── fd: ()-->(37), (41)-->(38)
 │    │         │         │    ├── scan c
 │    │         │         │    │    ├── columns: c1:37 c2:38 c.rowid:41!null
 │    │         │         │    │    ├── key: (41)
 │    │         │         │    │    └── fd: (41)-->(37,38)
 │    │         │         │    └── filters
 │    │         │         │         └── c1:37 IS NULL [outer=(37), constraints=(/37: [/NULL - /NULL]; tight), fd=()-->(37)]
 │    │         │         └── filters (true)
 │    │         └── aggregations
 │    │              ├── const-agg [as=c1:8, outer=(8)]
 │    │              │    └── c1:8
 │    │              ├── const-agg [as=c2:9, outer=(9)]
 │    │              │    └── c2:9
 │    │              └── const-agg [as=d1:15, outer=(15)]
 │    │                   └── d1:15
 │    └── projections
 │         └── (c1:8, c2:9) [as=column22:22, outer=(8,9)]
 └── filters
      └── (column22:22 = (b1:1, b2:2)) IS NOT false [outer=(1,2,22), immutable]

#########################
# Uncorrelated antijoin #
#########################

opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE NOT EXISTS (SELECT 1 FROM b WHERE b1 = 4 OR b2 = 50)
----
select
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 └── filters
      └── not [subquery]
           └── exists
                └── limit
                     ├── columns: b1:7 b2:8
                     ├── cardinality: [0 - 1]
                     ├── key: ()
                     ├── fd: ()-->(7,8)
                     ├── project
                     │    ├── columns: b1:7 b2:8
                     │    ├── limit hint: 1.00
                     │    └── distinct-on
                     │         ├── columns: b1:7 b2:8 rowid:11!null
                     │         ├── grouping columns: rowid:11!null
                     │         ├── key: (11)
                     │         ├── fd: (11)-->(7,8)
                     │         ├── limit hint: 1.00
                     │         ├── union-all
                     │         │    ├── columns: b1:7 b2:8 rowid:11!null
                     │         │    ├── left columns: b1:15 b2:16 rowid:19
                     │         │    ├── right columns: b1:22 b2:23 rowid:26
                     │         │    ├── limit hint: 1.21
                     │         │    ├── scan b@b_b1_b2_idx
                     │         │    │    ├── columns: b1:15!null b2:16 rowid:19!null
                     │         │    │    ├── constraint: /15/16/19: [/4 - /4]
                     │         │    │    ├── key: (19)
                     │         │    │    ├── fd: ()-->(15), (19)-->(16)
                     │         │    │    └── limit hint: 1.21
                     │         │    └── scan b@b_b2_idx
                     │         │         ├── columns: b1:22 b2:23!null rowid:26!null
                     │         │         ├── constraint: /23/26: [/50 - /50]
                     │         │         ├── key: (26)
                     │         │         ├── fd: ()-->(23), (26)-->(22)
                     │         │         └── limit hint: 1.21
                     │         └── aggregations
                     │              ├── const-agg [as=b1:7, outer=(7)]
                     │              │    └── b1:7
                     │              └── const-agg [as=b2:8, outer=(8)]
                     │                   └── b2:8
                     └── 1

opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE NOT EXISTS (SELECT 1 FROM c, d WHERE d1 = 4 OR c2 = 50 or d2+c3 > 5)
----
select
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── immutable
 ├── key: (1-4)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 └── filters
      └── not [immutable, subquery]
           └── exists
                └── limit
                     ├── columns: c2:8 c3:9 d1:14 d2:15
                     ├── cardinality: [0 - 1]
                     ├── immutable
                     ├── key: ()
                     ├── fd: ()-->(8,9,14,15)
                     ├── inner-join (cross)
                     │    ├── columns: c2:8 c3:9 d1:14 d2:15
                     │    ├── immutable
                     │    ├── limit hint: 1.00
                     │    ├── scan c
                     │    │    └── columns: c2:8 c3:9
                     │    ├── scan d
                     │    │    └── columns: d1:14 d2:15
                     │    └── filters
                     │         └── ((d1:14 = 4) OR (c2:8 = 50)) OR ((d2:15 + c3:9) > 5) [outer=(8,9,14,15), immutable]
                     └── 1

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE NOT EXISTS (SELECT 1 FROM c, d WHERE c3 = d4 or c4 = d3)
----
select
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 └── filters
      └── not [subquery]
           └── exists
                └── limit
                     ├── columns: c3:9 c4:10 d3:16 d4:17
                     ├── cardinality: [0 - 1]
                     ├── key: ()
                     ├── fd: ()-->(9,10,16,17)
                     ├── project
                     │    ├── columns: c3:9 c4:10 d3:16 d4:17
                     │    ├── limit hint: 1.00
                     │    └── distinct-on
                     │         ├── columns: c3:9 c4:10 c.rowid:11!null d3:16 d4:17 d.rowid:18!null
                     │         ├── grouping columns: c.rowid:11!null d.rowid:18!null
                     │         ├── key: (11,18)
                     │         ├── fd: (11,18)-->(9,10,16,17)
                     │         ├── limit hint: 1.00
                     │         ├── union-all
                     │         │    ├── columns: c3:9 c4:10 c.rowid:11!null d3:16 d4:17 d.rowid:18!null
                     │         │    ├── left columns: c3:24 c4:25 c.rowid:26 d3:31 d4:32 d.rowid:33
                     │         │    ├── right columns: c3:38 c4:39 c.rowid:40 d3:45 d4:46 d.rowid:47
                     │         │    ├── limit hint: 1.20
                     │         │    ├── inner-join (hash)
                     │         │    │    ├── columns: c3:24!null c4:25 c.rowid:26!null d3:31 d4:32!null d.rowid:33!null
                     │         │    │    ├── key: (26,33)
                     │         │    │    ├── fd: (26)-->(24,25), (33)-->(31,32), (24)==(32), (32)==(24)
                     │         │    │    ├── limit hint: 1.20
                     │         │    │    ├── scan c
                     │         │    │    │    ├── columns: c3:24 c4:25 c.rowid:26!null
                     │         │    │    │    ├── key: (26)
                     │         │    │    │    └── fd: (26)-->(24,25)
                     │         │    │    ├── scan d
                     │         │    │    │    ├── columns: d3:31 d4:32 d.rowid:33!null
                     │         │    │    │    ├── key: (33)
                     │         │    │    │    └── fd: (33)-->(31,32)
                     │         │    │    └── filters
                     │         │    │         └── c3:24 = d4:32 [outer=(24,32), constraints=(/24: (/NULL - ]; /32: (/NULL - ]), fd=(24)==(32), (32)==(24)]
                     │         │    └── inner-join (hash)
                     │         │         ├── columns: c3:38 c4:39!null c.rowid:40!null d3:45!null d4:46 d.rowid:47!null
                     │         │         ├── key: (40,47)
                     │         │         ├── fd: (40)-->(38,39), (47)-->(45,46), (39)==(45), (45)==(39)
                     │         │         ├── limit hint: 1.20
                     │         │         ├── scan c
                     │         │         │    ├── columns: c3:38 c4:39 c.rowid:40!null
                     │         │         │    ├── key: (40)
                     │         │         │    └── fd: (40)-->(38,39)
                     │         │         ├── scan d
                     │         │         │    ├── columns: d3:45 d4:46 d.rowid:47!null
                     │         │         │    ├── key: (47)
                     │         │         │    └── fd: (47)-->(45,46)
                     │         │         └── filters
                     │         │              └── c4:39 = d3:45 [outer=(39,45), constraints=(/39: (/NULL - ]; /45: (/NULL - ]), fd=(39)==(45), (45)==(39)]
                     │         └── aggregations
                     │              ├── const-agg [as=c3:9, outer=(9)]
                     │              │    └── c3:9
                     │              ├── const-agg [as=c4:10, outer=(10)]
                     │              │    └── c4:10
                     │              ├── const-agg [as=d3:16, outer=(16)]
                     │              │    └── d3:16
                     │              └── const-agg [as=d4:17, outer=(17)]
                     │                   └── d4:17
                     └── 1

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE (a1, a2) NOT IN (SELECT c1, d1 FROM c, d WHERE c3 = d3 or c3 = d4)
----
anti-join (cross)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── immutable
 ├── key: (1-4)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 ├── project
 │    ├── columns: column21:21
 │    ├── project
 │    │    ├── columns: c1:7 c3:9!null d1:14 d3:16 d4:17
 │    │    └── distinct-on
 │    │         ├── columns: c1:7 c3:9!null c.rowid:11!null d1:14 d3:16 d4:17 d.rowid:18!null
 │    │         ├── grouping columns: c.rowid:11!null d.rowid:18!null
 │    │         ├── key: (11,18)
 │    │         ├── fd: (11,18)-->(7,9,14,16,17)
 │    │         ├── union-all
 │    │         │    ├── columns: c1:7 c3:9!null c.rowid:11!null d1:14 d3:16 d4:17 d.rowid:18!null
 │    │         │    ├── left columns: c1:22 c3:24 c.rowid:26 d1:29 d3:31 d4:32 d.rowid:33
 │    │         │    ├── right columns: c1:36 c3:38 c.rowid:40 d1:43 d3:45 d4:46 d.rowid:47
 │    │         │    ├── inner-join (hash)
 │    │         │    │    ├── columns: c1:22 c3:24!null c.rowid:26!null d1:29 d3:31!null d4:32 d.rowid:33!null
 │    │         │    │    ├── key: (26,33)
 │    │         │    │    ├── fd: (26)-->(22,24), (33)-->(29,31,32), (24)==(31), (31)==(24)
 │    │         │    │    ├── scan c
 │    │         │    │    │    ├── columns: c1:22 c3:24 c.rowid:26!null
 │    │         │    │    │    ├── key: (26)
 │    │         │    │    │    └── fd: (26)-->(22,24)
 │    │         │    │    ├── scan d
 │    │         │    │    │    ├── columns: d1:29 d3:31 d4:32 d.rowid:33!null
 │    │         │    │    │    ├── key: (33)
 │    │         │    │    │    └── fd: (33)-->(29,31,32)
 │    │         │    │    └── filters
 │    │         │    │         └── c3:24 = d3:31 [outer=(24,31), constraints=(/24: (/NULL - ]; /31: (/NULL - ]), fd=(24)==(31), (31)==(24)]
 │    │         │    └── inner-join (hash)
 │    │         │         ├── columns: c1:36 c3:38!null c.rowid:40!null d1:43 d3:45 d4:46!null d.rowid:47!null
 │    │         │         ├── key: (40,47)
 │    │         │         ├── fd: (40)-->(36,38), (47)-->(43,45,46), (38)==(46), (46)==(38)
 │    │         │         ├── scan c
 │    │         │         │    ├── columns: c1:36 c3:38 c.rowid:40!null
 │    │         │         │    ├── key: (40)
 │    │         │         │    └── fd: (40)-->(36,38)
 │    │         │         ├── scan d
 │    │         │         │    ├── columns: d1:43 d3:45 d4:46 d.rowid:47!null
 │    │         │         │    ├── key: (47)
 │    │         │         │    └── fd: (47)-->(43,45,46)
 │    │         │         └── filters
 │    │         │              └── c3:38 = d4:46 [outer=(38,46), constraints=(/38: (/NULL - ]; /46: (/NULL - ]), fd=(38)==(46), (46)==(38)]
 │    │         └── aggregations
 │    │              ├── const-agg [as=c1:7, outer=(7)]
 │    │              │    └── c1:7
 │    │              ├── const-agg [as=c3:9, outer=(9)]
 │    │              │    └── c3:9
 │    │              ├── const-agg [as=d1:14, outer=(14)]
 │    │              │    └── d1:14
 │    │              ├── const-agg [as=d3:16, outer=(16)]
 │    │              │    └── d3:16
 │    │              └── const-agg [as=d4:17, outer=(17)]
 │    │                   └── d4:17
 │    └── projections
 │         └── (c1:7, d1:14) [as=column21:21, outer=(7,14)]
 └── filters
      └── (column21:21 = (a1:1, a2:2)) IS NOT false [outer=(1,2,21), immutable]

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE (a1, a2) NOT IN (SELECT c1, d1 FROM c, d WHERE c3 = d3 or c2 = d2 EXCEPT ALL
                                       SELECT c1, d1 FROM c, d WHERE c3 = d3 or c2 = d2)
----
anti-join (cross)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── immutable
 ├── key: (1-4)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 ├── project
 │    ├── columns: column35:35
 │    ├── except-all
 │    │    ├── columns: c1:7 d1:14
 │    │    ├── left columns: c1:7 d1:14
 │    │    ├── right columns: c1:21 d1:28
 │    │    ├── project
 │    │    │    ├── columns: c1:7 d1:14
 │    │    │    └── project
 │    │    │         ├── columns: c1:7 c2:8 c3:9 d1:14 d2:15 d3:16
 │    │    │         └── distinct-on
 │    │    │              ├── columns: c1:7 c2:8 c3:9 c.rowid:11!null d1:14 d2:15 d3:16 d.rowid:18!null
 │    │    │              ├── grouping columns: c.rowid:11!null d.rowid:18!null
 │    │    │              ├── key: (11,18)
 │    │    │              ├── fd: (11,18)-->(7-9,14-16)
 │    │    │              ├── union-all
 │    │    │              │    ├── columns: c1:7 c2:8 c3:9 c.rowid:11!null d1:14 d2:15 d3:16 d.rowid:18!null
 │    │    │              │    ├── left columns: c1:36 c2:37 c3:38 c.rowid:40 d1:43 d2:44 d3:45 d.rowid:47
 │    │    │              │    ├── right columns: c1:50 c2:51 c3:52 c.rowid:54 d1:57 d2:58 d3:59 d.rowid:61
 │    │    │              │    ├── inner-join (hash)
 │    │    │              │    │    ├── columns: c1:36 c2:37 c3:38!null c.rowid:40!null d1:43 d2:44 d3:45!null d.rowid:47!null
 │    │    │              │    │    ├── key: (40,47)
 │    │    │              │    │    ├── fd: (40)-->(36-38), (47)-->(43-45), (38)==(45), (45)==(38)
 │    │    │              │    │    ├── scan c
 │    │    │              │    │    │    ├── columns: c1:36 c2:37 c3:38 c.rowid:40!null
 │    │    │              │    │    │    ├── key: (40)
 │    │    │              │    │    │    └── fd: (40)-->(36-38)
 │    │    │              │    │    ├── scan d
 │    │    │              │    │    │    ├── columns: d1:43 d2:44 d3:45 d.rowid:47!null
 │    │    │              │    │    │    ├── key: (47)
 │    │    │              │    │    │    └── fd: (47)-->(43-45)
 │    │    │              │    │    └── filters
 │    │    │              │    │         └── c3:38 = d3:45 [outer=(38,45), constraints=(/38: (/NULL - ]; /45: (/NULL - ]), fd=(38)==(45), (45)==(38)]
 │    │    │              │    └── inner-join (hash)
 │    │    │              │         ├── columns: c1:50 c2:51!null c3:52 c.rowid:54!null d1:57 d2:58!null d3:59 d.rowid:61!null
 │    │    │              │         ├── key: (54,61)
 │    │    │              │         ├── fd: (54)-->(50-52), (61)-->(57-59), (51)==(58), (58)==(51)
 │    │    │              │         ├── scan c
 │    │    │              │         │    ├── columns: c1:50 c2:51 c3:52 c.rowid:54!null
 │    │    │              │         │    ├── key: (54)
 │    │    │              │         │    └── fd: (54)-->(50-52)
 │    │    │              │         ├── scan d
 │    │    │              │         │    ├── columns: d1:57 d2:58 d3:59 d.rowid:61!null
 │    │    │              │         │    ├── key: (61)
 │    │    │              │         │    └── fd: (61)-->(57-59)
 │    │    │              │         └── filters
 │    │    │              │              └── c2:51 = d2:58 [outer=(51,58), constraints=(/51: (/NULL - ]; /58: (/NULL - ]), fd=(51)==(58), (58)==(51)]
 │    │    │              └── aggregations
 │    │    │                   ├── const-agg [as=c1:7, outer=(7)]
 │    │    │                   │    └── c1:7
 │    │    │                   ├── const-agg [as=c2:8, outer=(8)]
 │    │    │                   │    └── c2:8
 │    │    │                   ├── const-agg [as=c3:9, outer=(9)]
 │    │    │                   │    └── c3:9
 │    │    │                   ├── const-agg [as=d1:14, outer=(14)]
 │    │    │                   │    └── d1:14
 │    │    │                   ├── const-agg [as=d2:15, outer=(15)]
 │    │    │                   │    └── d2:15
 │    │    │                   └── const-agg [as=d3:16, outer=(16)]
 │    │    │                        └── d3:16
 │    │    └── project
 │    │         ├── columns: c1:21 d1:28
 │    │         └── project
 │    │              ├── columns: c1:21 c2:22 c3:23 d1:28 d2:29 d3:30
 │    │              └── distinct-on
 │    │                   ├── columns: c1:21 c2:22 c3:23 c.rowid:25!null d1:28 d2:29 d3:30 d.rowid:32!null
 │    │                   ├── grouping columns: c.rowid:25!null d.rowid:32!null
 │    │                   ├── key: (25,32)
 │    │                   ├── fd: (25,32)-->(21-23,28-30)
 │    │                   ├── union-all
 │    │                   │    ├── columns: c1:21 c2:22 c3:23 c.rowid:25!null d1:28 d2:29 d3:30 d.rowid:32!null
 │    │                   │    ├── left columns: c1:92 c2:93 c3:94 c.rowid:96 d1:99 d2:100 d3:101 d.rowid:103
 │    │                   │    ├── right columns: c1:106 c2:107 c3:108 c.rowid:110 d1:113 d2:114 d3:115 d.rowid:117
 │    │                   │    ├── inner-join (hash)
 │    │                   │    │    ├── columns: c1:92 c2:93 c3:94!null c.rowid:96!null d1:99 d2:100 d3:101!null d.rowid:103!null
 │    │                   │    │    ├── key: (96,103)
 │    │                   │    │    ├── fd: (96)-->(92-94), (103)-->(99-101), (94)==(101), (101)==(94)
 │    │                   │    │    ├── scan c
 │    │                   │    │    │    ├── columns: c1:92 c2:93 c3:94 c.rowid:96!null
 │    │                   │    │    │    ├── key: (96)
 │    │                   │    │    │    └── fd: (96)-->(92-94)
 │    │                   │    │    ├── scan d
 │    │                   │    │    │    ├── columns: d1:99 d2:100 d3:101 d.rowid:103!null
 │    │                   │    │    │    ├── key: (103)
 │    │                   │    │    │    └── fd: (103)-->(99-101)
 │    │                   │    │    └── filters
 │    │                   │    │         └── c3:94 = d3:101 [outer=(94,101), constraints=(/94: (/NULL - ]; /101: (/NULL - ]), fd=(94)==(101), (101)==(94)]
 │    │                   │    └── inner-join (hash)
 │    │                   │         ├── columns: c1:106 c2:107!null c3:108 c.rowid:110!null d1:113 d2:114!null d3:115 d.rowid:117!null
 │    │                   │         ├── key: (110,117)
 │    │                   │         ├── fd: (110)-->(106-108), (117)-->(113-115), (107)==(114), (114)==(107)
 │    │                   │         ├── scan c
 │    │                   │         │    ├── columns: c1:106 c2:107 c3:108 c.rowid:110!null
 │    │                   │         │    ├── key: (110)
 │    │                   │         │    └── fd: (110)-->(106-108)
 │    │                   │         ├── scan d
 │    │                   │         │    ├── columns: d1:113 d2:114 d3:115 d.rowid:117!null
 │    │                   │         │    ├── key: (117)
 │    │                   │         │    └── fd: (117)-->(113-115)
 │    │                   │         └── filters
 │    │                   │              └── c2:107 = d2:114 [outer=(107,114), constraints=(/107: (/NULL - ]; /114: (/NULL - ]), fd=(107)==(114), (114)==(107)]
 │    │                   └── aggregations
 │    │                        ├── const-agg [as=c1:21, outer=(21)]
 │    │                        │    └── c1:21
 │    │                        ├── const-agg [as=c2:22, outer=(22)]
 │    │                        │    └── c2:22
 │    │                        ├── const-agg [as=c3:23, outer=(23)]
 │    │                        │    └── c3:23
 │    │                        ├── const-agg [as=d1:28, outer=(28)]
 │    │                        │    └── d1:28
 │    │                        ├── const-agg [as=d2:29, outer=(29)]
 │    │                        │    └── d2:29
 │    │                        └── const-agg [as=d3:30, outer=(30)]
 │    │                             └── d3:30
 │    └── projections
 │         └── (c1:7, d1:14) [as=column35:35, outer=(7,14)]
 └── filters
      └── (column35:35 = (a1:1, a2:2)) IS NOT false [outer=(1,2,35), immutable]

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE (a1, a2) NOT IN (SELECT c1, d1 FROM c, d WHERE c1 IS NULL OR c1 = d1)
----
anti-join (cross)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── immutable
 ├── key: (1-4)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 ├── project
 │    ├── columns: column21:21
 │    ├── project
 │    │    ├── columns: c1:7 d1:14
 │    │    └── distinct-on
 │    │         ├── columns: c1:7 c.rowid:11!null d1:14 d.rowid:18!null
 │    │         ├── grouping columns: c.rowid:11!null d.rowid:18!null
 │    │         ├── key: (11,18)
 │    │         ├── fd: (11,18)-->(7,14)
 │    │         ├── union-all
 │    │         │    ├── columns: c1:7 c.rowid:11!null d1:14 d.rowid:18!null
 │    │         │    ├── left columns: c1:22 c.rowid:26 d1:29 d.rowid:33
 │    │         │    ├── right columns: c1:36 c.rowid:40 d1:43 d.rowid:47
 │    │         │    ├── inner-join (hash)
 │    │         │    │    ├── columns: c1:22!null c.rowid:26!null d1:29!null d.rowid:33!null
 │    │         │    │    ├── key: (26,33)
 │    │         │    │    ├── fd: (26)-->(22), (33)-->(29), (22)==(29), (29)==(22)
 │    │         │    │    ├── scan c
 │    │         │    │    │    ├── columns: c1:22 c.rowid:26!null
 │    │         │    │    │    ├── key: (26)
 │    │         │    │    │    └── fd: (26)-->(22)
 │    │         │    │    ├── scan d
 │    │         │    │    │    ├── columns: d1:29 d.rowid:33!null
 │    │         │    │    │    ├── key: (33)
 │    │         │    │    │    └── fd: (33)-->(29)
 │    │         │    │    └── filters
 │    │         │    │         └── c1:22 = d1:29 [outer=(22,29), constraints=(/22: (/NULL - ]; /29: (/NULL - ]), fd=(22)==(29), (29)==(22)]
 │    │         │    └── inner-join (cross)
 │    │         │         ├── columns: c1:36 c.rowid:40!null d1:43 d.rowid:47!null
 │    │         │         ├── key: (40,47)
 │    │         │         ├── fd: ()-->(36), (47)-->(43)
 │    │         │         ├── scan d
 │    │         │         │    ├── columns: d1:43 d.rowid:47!null
 │    │         │         │    ├── key: (47)
 │    │         │         │    └── fd: (47)-->(43)
 │    │         │         ├── select
 │    │         │         │    ├── columns: c1:36 c.rowid:40!null
 │    │         │         │    ├── key: (40)
 │    │         │         │    ├── fd: ()-->(36)
 │    │         │         │    ├── scan c
 │    │         │         │    │    ├── columns: c1:36 c.rowid:40!null
 │    │         │         │    │    ├── key: (40)
 │    │         │         │    │    └── fd: (40)-->(36)
 │    │         │         │    └── filters
 │    │         │         │         └── c1:36 IS NULL [outer=(36), constraints=(/36: [/NULL - /NULL]; tight), fd=()-->(36)]
 │    │         │         └── filters (true)
 │    │         └── aggregations
 │    │              ├── const-agg [as=c1:7, outer=(7)]
 │    │              │    └── c1:7
 │    │              └── const-agg [as=d1:14, outer=(14)]
 │    │                   └── d1:14
 │    └── projections
 │         └── (c1:7, d1:14) [as=column21:21, outer=(7,14)]
 └── filters
      └── (column21:21 = (a1:1, a2:2)) IS NOT false [outer=(1,2,21), immutable]

#######################
# Correlated semijoin #
#######################

opt expect=SplitDisjunctionOfJoinTerms
SELECT a1,a2,a3 FROM a WHERE EXISTS (SELECT * FROM b WHERE a2 = b2 OR a3 = b3)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null
 └── distinct-on
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── key: (1-4)
      └── union-all
           ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
           ├── left columns: a1:14 a2:15 a3:16 a4:17
           ├── right columns: a1:27 a2:28 a3:29 a4:30
           ├── project
           │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │    ├── key: (14-17)
           │    └── inner-join (hash)
           │         ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null b2:21!null
           │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
           │         ├── key: (14,16,17,21)
           │         ├── fd: (15)==(21), (21)==(15)
           │         ├── scan a
           │         │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │         │    └── key: (14-17)
           │         ├── distinct-on
           │         │    ├── columns: b2:21
           │         │    ├── grouping columns: b2:21
           │         │    ├── internal-ordering: +21
           │         │    ├── key: (21)
           │         │    └── scan b@b_b2_idx
           │         │         ├── columns: b2:21
           │         │         └── ordering: +21
           │         └── filters
           │              └── a2:15 = b2:21 [outer=(15,21), constraints=(/15: (/NULL - ]; /21: (/NULL - ]), fd=(15)==(21), (21)==(15)]
           └── project
                ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                ├── key: (27-30)
                └── inner-join (hash)
                     ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null b3:35!null
                     ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
                     ├── key: (27,28,30,35)
                     ├── fd: (29)==(35), (35)==(29)
                     ├── scan a
                     │    ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                     │    └── key: (27-30)
                     ├── distinct-on
                     │    ├── columns: b3:35
                     │    ├── grouping columns: b3:35
                     │    ├── internal-ordering: +35
                     │    ├── key: (35)
                     │    └── scan b@b_b3_idx
                     │         ├── columns: b3:35
                     │         └── ordering: +35
                     └── filters
                          └── a3:29 = b3:35 [outer=(29,35), constraints=(/29: (/NULL - ]; /35: (/NULL - ]), fd=(29)==(35), (35)==(29)]

opt expect=SplitDisjunctionOfJoinTerms
SELECT a1,a2,a3 FROM a WHERE EXISTS (SELECT * FROM b WHERE a1 = b1 OR a1 = b2)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null
 └── distinct-on
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── key: (1-4)
      └── union-all
           ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
           ├── left columns: a1:14 a2:15 a3:16 a4:17
           ├── right columns: a1:27 a2:28 a3:29 a4:30
           ├── project
           │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │    ├── key: (14-17)
           │    └── inner-join (merge)
           │         ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null b1:20!null
           │         ├── left ordering: +14
           │         ├── right ordering: +20
           │         ├── key: (15-17,20)
           │         ├── fd: (14)==(20), (20)==(14)
           │         ├── scan a
           │         │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │         │    ├── key: (14-17)
           │         │    └── ordering: +14
           │         ├── distinct-on
           │         │    ├── columns: b1:20
           │         │    ├── grouping columns: b1:20
           │         │    ├── key: (20)
           │         │    ├── ordering: +20
           │         │    └── scan b@b_b1_b2_idx
           │         │         ├── columns: b1:20
           │         │         └── ordering: +20
           │         └── filters (true)
           └── project
                ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                ├── key: (27-30)
                └── inner-join (merge)
                     ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null b2:34!null
                     ├── left ordering: +27
                     ├── right ordering: +34
                     ├── key: (28-30,34)
                     ├── fd: (27)==(34), (34)==(27)
                     ├── scan a
                     │    ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                     │    ├── key: (27-30)
                     │    └── ordering: +27
                     ├── distinct-on
                     │    ├── columns: b2:34
                     │    ├── grouping columns: b2:34
                     │    ├── key: (34)
                     │    ├── ordering: +34
                     │    └── scan b@b_b2_idx
                     │         ├── columns: b2:34
                     │         └── ordering: +34
                     └── filters (true)

# The left side of the join already produces key columns
opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE EXISTS (SELECT * FROM b WHERE a1 = b1 OR a2 = b2 OR a3 = b3 OR a4 = b4)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 └── distinct-on
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── key: (1-4)
      └── union-all
           ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
           ├── left columns: a1:14 a2:15 a3:16 a4:17
           ├── right columns: a1:27 a2:28 a3:29 a4:30
           ├── project
           │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │    ├── key: (14-17)
           │    └── inner-join (merge)
           │         ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null b1:20!null
           │         ├── left ordering: +14
           │         ├── right ordering: +20
           │         ├── key: (15-17,20)
           │         ├── fd: (14)==(20), (20)==(14)
           │         ├── scan a
           │         │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │         │    ├── key: (14-17)
           │         │    └── ordering: +14
           │         ├── distinct-on
           │         │    ├── columns: b1:20
           │         │    ├── grouping columns: b1:20
           │         │    ├── key: (20)
           │         │    ├── ordering: +20
           │         │    └── scan b@b_b1_b2_idx
           │         │         ├── columns: b1:20
           │         │         └── ordering: +20
           │         └── filters (true)
           └── project
                ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                ├── key: (27-30)
                └── distinct-on
                     ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                     ├── grouping columns: a1:27!null a2:28!null a3:29!null a4:30!null
                     ├── key: (27-30)
                     └── union-all
                          ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                          ├── left columns: a1:274 a2:275 a3:276 a4:277
                          ├── right columns: a1:287 a2:288 a3:289 a4:290
                          ├── project
                          │    ├── columns: a1:274!null a2:275!null a3:276!null a4:277!null
                          │    ├── key: (274-277)
                          │    └── inner-join (hash)
                          │         ├── columns: a1:274!null a2:275!null a3:276!null a4:277!null b4:283!null
                          │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
                          │         ├── key: (274-276,283)
                          │         ├── fd: (277)==(283), (283)==(277)
                          │         ├── scan a
                          │         │    ├── columns: a1:274!null a2:275!null a3:276!null a4:277!null
                          │         │    └── key: (274-277)
                          │         ├── distinct-on
                          │         │    ├── columns: b4:283
                          │         │    ├── grouping columns: b4:283
                          │         │    ├── key: (283)
                          │         │    └── scan b
                          │         │         └── columns: b4:283
                          │         └── filters
                          │              └── a4:277 = b4:283 [outer=(277,283), constraints=(/277: (/NULL - ]; /283: (/NULL - ]), fd=(277)==(283), (283)==(277)]
                          └── project
                               ├── columns: a1:287!null a2:288!null a3:289!null a4:290!null
                               ├── key: (287-290)
                               └── distinct-on
                                    ├── columns: a1:287!null a2:288!null a3:289!null a4:290!null
                                    ├── grouping columns: a1:287!null a2:288!null a3:289!null a4:290!null
                                    ├── key: (287-290)
                                    └── union-all
                                         ├── columns: a1:287!null a2:288!null a3:289!null a4:290!null
                                         ├── left columns: a1:430 a2:431 a3:432 a4:433
                                         ├── right columns: a1:443 a2:444 a3:445 a4:446
                                         ├── project
                                         │    ├── columns: a1:430!null a2:431!null a3:432!null a4:433!null
                                         │    ├── key: (430-433)
                                         │    └── inner-join (hash)
                                         │         ├── columns: a1:430!null a2:431!null a3:432!null a4:433!null b2:437!null
                                         │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
                                         │         ├── key: (430,432,433,437)
                                         │         ├── fd: (431)==(437), (437)==(431)
                                         │         ├── scan a
                                         │         │    ├── columns: a1:430!null a2:431!null a3:432!null a4:433!null
                                         │         │    └── key: (430-433)
                                         │         ├── distinct-on
                                         │         │    ├── columns: b2:437
                                         │         │    ├── grouping columns: b2:437
                                         │         │    ├── internal-ordering: +437
                                         │         │    ├── key: (437)
                                         │         │    └── scan b@b_b2_idx
                                         │         │         ├── columns: b2:437
                                         │         │         └── ordering: +437
                                         │         └── filters
                                         │              └── a2:431 = b2:437 [outer=(431,437), constraints=(/431: (/NULL - ]; /437: (/NULL - ]), fd=(431)==(437), (437)==(431)]
                                         └── project
                                              ├── columns: a1:443!null a2:444!null a3:445!null a4:446!null
                                              ├── key: (443-446)
                                              └── inner-join (hash)
                                                   ├── columns: a1:443!null a2:444!null a3:445!null a4:446!null b3:451!null
                                                   ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
                                                   ├── key: (443,444,446,451)
                                                   ├── fd: (445)==(451), (451)==(445)
                                                   ├── scan a
                                                   │    ├── columns: a1:443!null a2:444!null a3:445!null a4:446!null
                                                   │    └── key: (443-446)
                                                   ├── distinct-on
                                                   │    ├── columns: b3:451
                                                   │    ├── grouping columns: b3:451
                                                   │    ├── internal-ordering: +451
                                                   │    ├── key: (451)
                                                   │    └── scan b@b_b3_idx
                                                   │         ├── columns: b3:451
                                                   │         └── ordering: +451
                                                   └── filters
                                                        └── a3:445 = b3:451 [outer=(445,451), constraints=(/445: (/NULL - ]; /451: (/NULL - ]), fd=(445)==(451), (451)==(445)]

# More than one disjunction in the filter
opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE EXISTS (SELECT * FROM c WHERE a1 = c1 OR a2 = c2 OR a3 = c3 OR a4 = c4)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 └── distinct-on
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── key: (1-4)
      └── union-all
           ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
           ├── left columns: a1:14 a2:15 a3:16 a4:17
           ├── right columns: a1:27 a2:28 a3:29 a4:30
           ├── project
           │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │    ├── key: (14-17)
           │    └── inner-join (hash)
           │         ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null c1:20!null
           │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
           │         ├── key: (15-17,20)
           │         ├── fd: (14)==(20), (20)==(14)
           │         ├── scan a
           │         │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │         │    └── key: (14-17)
           │         ├── distinct-on
           │         │    ├── columns: c1:20
           │         │    ├── grouping columns: c1:20
           │         │    ├── key: (20)
           │         │    └── scan c
           │         │         └── columns: c1:20
           │         └── filters
           │              └── a1:14 = c1:20 [outer=(14,20), constraints=(/14: (/NULL - ]; /20: (/NULL - ]), fd=(14)==(20), (20)==(14)]
           └── project
                ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                ├── key: (27-30)
                └── distinct-on
                     ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                     ├── grouping columns: a1:27!null a2:28!null a3:29!null a4:30!null
                     ├── key: (27-30)
                     └── union-all
                          ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                          ├── left columns: a1:274 a2:275 a3:276 a4:277
                          ├── right columns: a1:287 a2:288 a3:289 a4:290
                          ├── project
                          │    ├── columns: a1:274!null a2:275!null a3:276!null a4:277!null
                          │    ├── key: (274-277)
                          │    └── inner-join (hash)
                          │         ├── columns: a1:274!null a2:275!null a3:276!null a4:277!null c4:283!null
                          │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
                          │         ├── key: (274-276,283)
                          │         ├── fd: (277)==(283), (283)==(277)
                          │         ├── scan a
                          │         │    ├── columns: a1:274!null a2:275!null a3:276!null a4:277!null
                          │         │    └── key: (274-277)
                          │         ├── distinct-on
                          │         │    ├── columns: c4:283
                          │         │    ├── grouping columns: c4:283
                          │         │    ├── key: (283)
                          │         │    └── scan c
                          │         │         └── columns: c4:283
                          │         └── filters
                          │              └── a4:277 = c4:283 [outer=(277,283), constraints=(/277: (/NULL - ]; /283: (/NULL - ]), fd=(277)==(283), (283)==(277)]
                          └── project
                               ├── columns: a1:287!null a2:288!null a3:289!null a4:290!null
                               ├── key: (287-290)
                               └── distinct-on
                                    ├── columns: a1:287!null a2:288!null a3:289!null a4:290!null
                                    ├── grouping columns: a1:287!null a2:288!null a3:289!null a4:290!null
                                    ├── key: (287-290)
                                    └── union-all
                                         ├── columns: a1:287!null a2:288!null a3:289!null a4:290!null
                                         ├── left columns: a1:430 a2:431 a3:432 a4:433
                                         ├── right columns: a1:443 a2:444 a3:445 a4:446
                                         ├── project
                                         │    ├── columns: a1:430!null a2:431!null a3:432!null a4:433!null
                                         │    ├── key: (430-433)
                                         │    └── inner-join (hash)
                                         │         ├── columns: a1:430!null a2:431!null a3:432!null a4:433!null c2:437!null
                                         │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
                                         │         ├── key: (430,432,433,437)
                                         │         ├── fd: (431)==(437), (437)==(431)
                                         │         ├── scan a
                                         │         │    ├── columns: a1:430!null a2:431!null a3:432!null a4:433!null
                                         │         │    └── key: (430-433)
                                         │         ├── distinct-on
                                         │         │    ├── columns: c2:437
                                         │         │    ├── grouping columns: c2:437
                                         │         │    ├── key: (437)
                                         │         │    └── scan c
                                         │         │         └── columns: c2:437
                                         │         └── filters
                                         │              └── a2:431 = c2:437 [outer=(431,437), constraints=(/431: (/NULL - ]; /437: (/NULL - ]), fd=(431)==(437), (437)==(431)]
                                         └── project
                                              ├── columns: a1:443!null a2:444!null a3:445!null a4:446!null
                                              ├── key: (443-446)
                                              └── inner-join (hash)
                                                   ├── columns: a1:443!null a2:444!null a3:445!null a4:446!null c3:451!null
                                                   ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
                                                   ├── key: (443,444,446,451)
                                                   ├── fd: (445)==(451), (451)==(445)
                                                   ├── scan a
                                                   │    ├── columns: a1:443!null a2:444!null a3:445!null a4:446!null
                                                   │    └── key: (443-446)
                                                   ├── distinct-on
                                                   │    ├── columns: c3:451
                                                   │    ├── grouping columns: c3:451
                                                   │    ├── key: (451)
                                                   │    └── scan c
                                                   │         └── columns: c3:451
                                                   └── filters
                                                        └── a3:445 = c3:451 [outer=(445,451), constraints=(/445: (/NULL - ]; /451: (/NULL - ]), fd=(445)==(451), (451)==(445)]

# More than one disjunction in the filter
opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a WHERE EXISTS (SELECT * FROM c WHERE a1 = c2 OR a2 = c1 OR a3 = c4 OR a3 = c4)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 └── distinct-on
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── key: (1-4)
      └── union-all
           ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
           ├── left columns: a1:14 a2:15 a3:16 a4:17
           ├── right columns: a1:27 a2:28 a3:29 a4:30
           ├── project
           │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │    ├── key: (14-17)
           │    └── inner-join (hash)
           │         ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null c2:21!null
           │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
           │         ├── key: (15-17,21)
           │         ├── fd: (14)==(21), (21)==(14)
           │         ├── scan a
           │         │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
           │         │    └── key: (14-17)
           │         ├── distinct-on
           │         │    ├── columns: c2:21
           │         │    ├── grouping columns: c2:21
           │         │    ├── key: (21)
           │         │    └── scan c
           │         │         └── columns: c2:21
           │         └── filters
           │              └── a1:14 = c2:21 [outer=(14,21), constraints=(/14: (/NULL - ]; /21: (/NULL - ]), fd=(14)==(21), (21)==(14)]
           └── project
                ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                ├── key: (27-30)
                └── distinct-on
                     ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                     ├── grouping columns: a1:27!null a2:28!null a3:29!null a4:30!null
                     ├── key: (27-30)
                     └── union-all
                          ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                          ├── left columns: a1:274 a2:275 a3:276 a4:277
                          ├── right columns: a1:287 a2:288 a3:289 a4:290
                          ├── project
                          │    ├── columns: a1:274!null a2:275!null a3:276!null a4:277!null
                          │    ├── key: (274-277)
                          │    └── inner-join (hash)
                          │         ├── columns: a1:274!null a2:275!null a3:276!null a4:277!null c4:283!null
                          │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
                          │         ├── key: (274,275,277,283)
                          │         ├── fd: (276)==(283), (283)==(276)
                          │         ├── scan a
                          │         │    ├── columns: a1:274!null a2:275!null a3:276!null a4:277!null
                          │         │    └── key: (274-277)
                          │         ├── distinct-on
                          │         │    ├── columns: c4:283
                          │         │    ├── grouping columns: c4:283
                          │         │    ├── key: (283)
                          │         │    └── scan c
                          │         │         └── columns: c4:283
                          │         └── filters
                          │              └── a3:276 = c4:283 [outer=(276,283), constraints=(/276: (/NULL - ]; /283: (/NULL - ]), fd=(276)==(283), (283)==(276)]
                          └── project
                               ├── columns: a1:287!null a2:288!null a3:289!null a4:290!null
                               ├── key: (287-290)
                               └── distinct-on
                                    ├── columns: a1:287!null a2:288!null a3:289!null a4:290!null
                                    ├── grouping columns: a1:287!null a2:288!null a3:289!null a4:290!null
                                    ├── key: (287-290)
                                    └── union-all
                                         ├── columns: a1:287!null a2:288!null a3:289!null a4:290!null
                                         ├── left columns: a1:430 a2:431 a3:432 a4:433
                                         ├── right columns: a1:443 a2:444 a3:445 a4:446
                                         ├── project
                                         │    ├── columns: a1:430!null a2:431!null a3:432!null a4:433!null
                                         │    ├── key: (430-433)
                                         │    └── inner-join (hash)
                                         │         ├── columns: a1:430!null a2:431!null a3:432!null a4:433!null c1:436!null
                                         │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
                                         │         ├── key: (430,432,433,436)
                                         │         ├── fd: (431)==(436), (436)==(431)
                                         │         ├── scan a
                                         │         │    ├── columns: a1:430!null a2:431!null a3:432!null a4:433!null
                                         │         │    └── key: (430-433)
                                         │         ├── distinct-on
                                         │         │    ├── columns: c1:436
                                         │         │    ├── grouping columns: c1:436
                                         │         │    ├── key: (436)
                                         │         │    └── scan c
                                         │         │         └── columns: c1:436
                                         │         └── filters
                                         │              └── a2:431 = c1:436 [outer=(431,436), constraints=(/431: (/NULL - ]; /436: (/NULL - ]), fd=(431)==(436), (436)==(431)]
                                         └── project
                                              ├── columns: a1:443!null a2:444!null a3:445!null a4:446!null
                                              ├── key: (443-446)
                                              └── inner-join (hash)
                                                   ├── columns: a1:443!null a2:444!null a3:445!null a4:446!null c4:452!null
                                                   ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
                                                   ├── key: (443,444,446,452)
                                                   ├── fd: (445)==(452), (452)==(445)
                                                   ├── scan a
                                                   │    ├── columns: a1:443!null a2:444!null a3:445!null a4:446!null
                                                   │    └── key: (443-446)
                                                   ├── distinct-on
                                                   │    ├── columns: c4:452
                                                   │    ├── grouping columns: c4:452
                                                   │    ├── key: (452)
                                                   │    └── scan c
                                                   │         └── columns: c4:452
                                                   └── filters
                                                        └── a3:445 = c4:452 [outer=(445,452), constraints=(/445: (/NULL - ]; /452: (/NULL - ]), fd=(445)==(452), (452)==(445)]

# IN subquery
opt expect=SplitDisjunctionOfJoinTerms
SELECT a1+a3-a2 FROM a WHERE a1 IN (SELECT b1 FROM b WHERE EXISTS (SELECT 1 FROM c WHERE c2 IS NULL OR c2=b2 OR c2=b3))
----
project
 ├── columns: "?column?":22!null
 ├── immutable
 ├── project
 │    ├── columns: a1:1!null a2:2!null a3:3!null
 │    └── inner-join (hash)
 │         ├── columns: a1:1!null a2:2!null a3:3!null b1:7!null
 │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │         ├── fd: (1)==(7), (7)==(1)
 │         ├── scan a
 │         │    └── columns: a1:1!null a2:2!null a3:3!null
 │         ├── distinct-on
 │         │    ├── columns: b1:7
 │         │    ├── grouping columns: b1:7
 │         │    ├── key: (7)
 │         │    └── project
 │         │         ├── columns: b1:7 b2:8 b3:9
 │         │         └── distinct-on
 │         │              ├── columns: b1:7 b2:8 b3:9 b.rowid:11!null
 │         │              ├── grouping columns: b.rowid:11!null
 │         │              ├── key: (11)
 │         │              ├── fd: (11)-->(7-9)
 │         │              ├── union-all
 │         │              │    ├── columns: b1:7 b2:8 b3:9 b.rowid:11!null
 │         │              │    ├── left columns: b1:23 b2:24 b3:25 b.rowid:27
 │         │              │    ├── right columns: b1:37 b2:38 b3:39 b.rowid:41
 │         │              │    ├── project
 │         │              │    │    ├── columns: b1:23 b2:24 b3:25 b.rowid:27!null
 │         │              │    │    ├── key: (27)
 │         │              │    │    ├── fd: (27)-->(23-25)
 │         │              │    │    └── inner-join (hash)
 │         │              │    │         ├── columns: b1:23 b2:24!null b3:25 b.rowid:27!null c2:31!null
 │         │              │    │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │         │              │    │         ├── key: (27)
 │         │              │    │         ├── fd: (27)-->(23-25), (24)==(31), (31)==(24)
 │         │              │    │         ├── scan b
 │         │              │    │         │    ├── columns: b1:23 b2:24 b3:25 b.rowid:27!null
 │         │              │    │         │    ├── key: (27)
 │         │              │    │         │    └── fd: (27)-->(23-25)
 │         │              │    │         ├── distinct-on
 │         │              │    │         │    ├── columns: c2:31
 │         │              │    │         │    ├── grouping columns: c2:31
 │         │              │    │         │    ├── key: (31)
 │         │              │    │         │    └── scan c
 │         │              │    │         │         └── columns: c2:31
 │         │              │    │         └── filters
 │         │              │    │              └── c2:31 = b2:24 [outer=(24,31), constraints=(/24: (/NULL - ]; /31: (/NULL - ]), fd=(24)==(31), (31)==(24)]
 │         │              │    └── project
 │         │              │         ├── columns: b1:37 b2:38 b3:39 b.rowid:41!null
 │         │              │         ├── key: (41)
 │         │              │         ├── fd: (41)-->(37-39)
 │         │              │         └── distinct-on
 │         │              │              ├── columns: b1:37 b2:38 b3:39 b.rowid:41!null
 │         │              │              ├── grouping columns: b.rowid:41!null
 │         │              │              ├── key: (41)
 │         │              │              ├── fd: (41)-->(37-39)
 │         │              │              ├── union-all
 │         │              │              │    ├── columns: b1:37 b2:38 b3:39 b.rowid:41!null
 │         │              │              │    ├── left columns: b1:191 b2:192 b3:193 b.rowid:195
 │         │              │              │    ├── right columns: b1:205 b2:206 b3:207 b.rowid:209
 │         │              │              │    ├── project
 │         │              │              │    │    ├── columns: b1:191 b2:192 b3:193 b.rowid:195!null
 │         │              │              │    │    ├── key: (195)
 │         │              │              │    │    ├── fd: (195)-->(191-193)
 │         │              │              │    │    └── inner-join (hash)
 │         │              │              │    │         ├── columns: b1:191 b2:192 b3:193!null b.rowid:195!null c2:199!null
 │         │              │              │    │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │         │              │              │    │         ├── key: (195)
 │         │              │              │    │         ├── fd: (195)-->(191-193), (193)==(199), (199)==(193)
 │         │              │              │    │         ├── scan b
 │         │              │              │    │         │    ├── columns: b1:191 b2:192 b3:193 b.rowid:195!null
 │         │              │              │    │         │    ├── key: (195)
 │         │              │              │    │         │    └── fd: (195)-->(191-193)
 │         │              │              │    │         ├── distinct-on
 │         │              │              │    │         │    ├── columns: c2:199
 │         │              │              │    │         │    ├── grouping columns: c2:199
 │         │              │              │    │         │    ├── key: (199)
 │         │              │              │    │         │    └── scan c
 │         │              │              │    │         │         └── columns: c2:199
 │         │              │              │    │         └── filters
 │         │              │              │    │              └── c2:199 = b3:193 [outer=(193,199), constraints=(/193: (/NULL - ]; /199: (/NULL - ]), fd=(193)==(199), (199)==(193)]
 │         │              │              │    └── project
 │         │              │              │         ├── columns: b1:205 b2:206 b3:207 b.rowid:209!null
 │         │              │              │         ├── key: (209)
 │         │              │              │         ├── fd: (209)-->(205-207)
 │         │              │              │         └── project
 │         │              │              │              ├── columns: b1:205 b2:206 b3:207 b.rowid:209!null
 │         │              │              │              ├── key: (209)
 │         │              │              │              ├── fd: (209)-->(205-207)
 │         │              │              │              └── inner-join (cross)
 │         │              │              │                   ├── columns: b1:205 b2:206 b3:207 b.rowid:209!null c2:213
 │         │              │              │                   ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │         │              │              │                   ├── key: (209)
 │         │              │              │                   ├── fd: ()-->(213), (209)-->(205-207)
 │         │              │              │                   ├── scan b
 │         │              │              │                   │    ├── columns: b1:205 b2:206 b3:207 b.rowid:209!null
 │         │              │              │                   │    ├── key: (209)
 │         │              │              │                   │    └── fd: (209)-->(205-207)
 │         │              │              │                   ├── limit
 │         │              │              │                   │    ├── columns: c2:213
 │         │              │              │                   │    ├── cardinality: [0 - 1]
 │         │              │              │                   │    ├── key: ()
 │         │              │              │                   │    ├── fd: ()-->(213)
 │         │              │              │                   │    ├── select
 │         │              │              │                   │    │    ├── columns: c2:213
 │         │              │              │                   │    │    ├── fd: ()-->(213)
 │         │              │              │                   │    │    ├── limit hint: 1.00
 │         │              │              │                   │    │    ├── scan c
 │         │              │              │                   │    │    │    ├── columns: c2:213
 │         │              │              │                   │    │    │    └── limit hint: 100.00
 │         │              │              │                   │    │    └── filters
 │         │              │              │                   │    │         └── c2:213 IS NULL [outer=(213), constraints=(/213: [/NULL - /NULL]; tight), fd=()-->(213)]
 │         │              │              │                   │    └── 1
 │         │              │              │                   └── filters (true)
 │         │              │              └── aggregations
 │         │              │                   ├── const-agg [as=b1:37, outer=(37)]
 │         │              │                   │    └── b1:37
 │         │              │                   ├── const-agg [as=b2:38, outer=(38)]
 │         │              │                   │    └── b2:38
 │         │              │                   └── const-agg [as=b3:39, outer=(39)]
 │         │              │                        └── b3:39
 │         │              └── aggregations
 │         │                   ├── const-agg [as=b1:7, outer=(7)]
 │         │                   │    └── b1:7
 │         │                   ├── const-agg [as=b2:8, outer=(8)]
 │         │                   │    └── b2:8
 │         │                   └── const-agg [as=b3:9, outer=(9)]
 │         │                        └── b3:9
 │         └── filters
 │              └── a1:1 = b1:7 [outer=(1,7), constraints=(/1: (/NULL - ]; /7: (/NULL - ]), fd=(1)==(7), (7)==(1)]
 └── projections
      └── (a1:1 + a3:3) - a2:2 [as="?column?":22, outer=(1-3), immutable]

# IN subquery, 2 columns
opt expect=SplitDisjunctionOfJoinTerms
SELECT a1+a3-a2 FROM a WHERE (a1,a2) IN (SELECT b1,b2 FROM b WHERE
                                            EXISTS (SELECT 1 FROM c WHERE c2 IS NULL OR c2=b2 OR c2=b3))
----
project
 ├── columns: "?column?":23!null
 ├── immutable
 ├── semi-join (hash)
 │    ├── columns: a1:1!null a2:2!null a3:3!null
 │    ├── scan a
 │    │    └── columns: a1:1!null a2:2!null a3:3!null
 │    ├── project
 │    │    ├── columns: b1:7 b2:8 b3:9
 │    │    └── distinct-on
 │    │         ├── columns: b1:7 b2:8 b3:9 b.rowid:11!null
 │    │         ├── grouping columns: b.rowid:11!null
 │    │         ├── key: (11)
 │    │         ├── fd: (11)-->(7-9)
 │    │         ├── union-all
 │    │         │    ├── columns: b1:7 b2:8 b3:9 b.rowid:11!null
 │    │         │    ├── left columns: b1:24 b2:25 b3:26 b.rowid:28
 │    │         │    ├── right columns: b1:38 b2:39 b3:40 b.rowid:42
 │    │         │    ├── project
 │    │         │    │    ├── columns: b1:24 b2:25 b3:26 b.rowid:28!null
 │    │         │    │    ├── key: (28)
 │    │         │    │    ├── fd: (28)-->(24-26)
 │    │         │    │    └── inner-join (hash)
 │    │         │    │         ├── columns: b1:24 b2:25!null b3:26 b.rowid:28!null c2:32!null
 │    │         │    │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │    │         │    │         ├── key: (28)
 │    │         │    │         ├── fd: (28)-->(24-26), (25)==(32), (32)==(25)
 │    │         │    │         ├── scan b
 │    │         │    │         │    ├── columns: b1:24 b2:25 b3:26 b.rowid:28!null
 │    │         │    │         │    ├── key: (28)
 │    │         │    │         │    └── fd: (28)-->(24-26)
 │    │         │    │         ├── distinct-on
 │    │         │    │         │    ├── columns: c2:32
 │    │         │    │         │    ├── grouping columns: c2:32
 │    │         │    │         │    ├── key: (32)
 │    │         │    │         │    └── scan c
 │    │         │    │         │         └── columns: c2:32
 │    │         │    │         └── filters
 │    │         │    │              └── c2:32 = b2:25 [outer=(25,32), constraints=(/25: (/NULL - ]; /32: (/NULL - ]), fd=(25)==(32), (32)==(25)]
 │    │         │    └── project
 │    │         │         ├── columns: b1:38 b2:39 b3:40 b.rowid:42!null
 │    │         │         ├── key: (42)
 │    │         │         ├── fd: (42)-->(38-40)
 │    │         │         └── distinct-on
 │    │         │              ├── columns: b1:38 b2:39 b3:40 b.rowid:42!null
 │    │         │              ├── grouping columns: b.rowid:42!null
 │    │         │              ├── key: (42)
 │    │         │              ├── fd: (42)-->(38-40)
 │    │         │              ├── union-all
 │    │         │              │    ├── columns: b1:38 b2:39 b3:40 b.rowid:42!null
 │    │         │              │    ├── left columns: b1:192 b2:193 b3:194 b.rowid:196
 │    │         │              │    ├── right columns: b1:206 b2:207 b3:208 b.rowid:210
 │    │         │              │    ├── project
 │    │         │              │    │    ├── columns: b1:192 b2:193 b3:194 b.rowid:196!null
 │    │         │              │    │    ├── key: (196)
 │    │         │              │    │    ├── fd: (196)-->(192-194)
 │    │         │              │    │    └── inner-join (hash)
 │    │         │              │    │         ├── columns: b1:192 b2:193 b3:194!null b.rowid:196!null c2:200!null
 │    │         │              │    │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │    │         │              │    │         ├── key: (196)
 │    │         │              │    │         ├── fd: (196)-->(192-194), (194)==(200), (200)==(194)
 │    │         │              │    │         ├── scan b
 │    │         │              │    │         │    ├── columns: b1:192 b2:193 b3:194 b.rowid:196!null
 │    │         │              │    │         │    ├── key: (196)
 │    │         │              │    │         │    └── fd: (196)-->(192-194)
 │    │         │              │    │         ├── distinct-on
 │    │         │              │    │         │    ├── columns: c2:200
 │    │         │              │    │         │    ├── grouping columns: c2:200
 │    │         │              │    │         │    ├── key: (200)
 │    │         │              │    │         │    └── scan c
 │    │         │              │    │         │         └── columns: c2:200
 │    │         │              │    │         └── filters
 │    │         │              │    │              └── c2:200 = b3:194 [outer=(194,200), constraints=(/194: (/NULL - ]; /200: (/NULL - ]), fd=(194)==(200), (200)==(194)]
 │    │         │              │    └── project
 │    │         │              │         ├── columns: b1:206 b2:207 b3:208 b.rowid:210!null
 │    │         │              │         ├── key: (210)
 │    │         │              │         ├── fd: (210)-->(206-208)
 │    │         │              │         └── project
 │    │         │              │              ├── columns: b1:206 b2:207 b3:208 b.rowid:210!null
 │    │         │              │              ├── key: (210)
 │    │         │              │              ├── fd: (210)-->(206-208)
 │    │         │              │              └── inner-join (cross)
 │    │         │              │                   ├── columns: b1:206 b2:207 b3:208 b.rowid:210!null c2:214
 │    │         │              │                   ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │    │         │              │                   ├── key: (210)
 │    │         │              │                   ├── fd: ()-->(214), (210)-->(206-208)
 │    │         │              │                   ├── scan b
 │    │         │              │                   │    ├── columns: b1:206 b2:207 b3:208 b.rowid:210!null
 │    │         │              │                   │    ├── key: (210)
 │    │         │              │                   │    └── fd: (210)-->(206-208)
 │    │         │              │                   ├── limit
 │    │         │              │                   │    ├── columns: c2:214
 │    │         │              │                   │    ├── cardinality: [0 - 1]
 │    │         │              │                   │    ├── key: ()
 │    │         │              │                   │    ├── fd: ()-->(214)
 │    │         │              │                   │    ├── select
 │    │         │              │                   │    │    ├── columns: c2:214
 │    │         │              │                   │    │    ├── fd: ()-->(214)
 │    │         │              │                   │    │    ├── limit hint: 1.00
 │    │         │              │                   │    │    ├── scan c
 │    │         │              │                   │    │    │    ├── columns: c2:214
 │    │         │              │                   │    │    │    └── limit hint: 100.00
 │    │         │              │                   │    │    └── filters
 │    │         │              │                   │    │         └── c2:214 IS NULL [outer=(214), constraints=(/214: [/NULL - /NULL]; tight), fd=()-->(214)]
 │    │         │              │                   │    └── 1
 │    │         │              │                   └── filters (true)
 │    │         │              └── aggregations
 │    │         │                   ├── const-agg [as=b1:38, outer=(38)]
 │    │         │                   │    └── b1:38
 │    │         │                   ├── const-agg [as=b2:39, outer=(39)]
 │    │         │                   │    └── b2:39
 │    │         │                   └── const-agg [as=b3:40, outer=(40)]
 │    │         │                        └── b3:40
 │    │         └── aggregations
 │    │              ├── const-agg [as=b1:7, outer=(7)]
 │    │              │    └── b1:7
 │    │              ├── const-agg [as=b2:8, outer=(8)]
 │    │              │    └── b2:8
 │    │              └── const-agg [as=b3:9, outer=(9)]
 │    │                   └── b3:9
 │    └── filters
 │         ├── b1:7 = a1:1 [outer=(1,7), constraints=(/1: (/NULL - ]; /7: (/NULL - ]), fd=(1)==(7), (7)==(1)]
 │         └── b2:8 = a2:2 [outer=(2,8), constraints=(/2: (/NULL - ]; /8: (/NULL - ]), fd=(2)==(8), (8)==(2)]
 └── projections
      └── (a1:1 + a3:3) - a2:2 [as="?column?":23, outer=(1-3), immutable]

# ANDed disjuncts
opt expect=SplitDisjunctionOfJoinTerms
SELECT a1,a2,a3,c.* FROM a,c
       WHERE a2 = c2 AND EXISTS (SELECT * FROM b WHERE (a1 = b1 OR a1 = a2) AND (a1 = c1 OR c1 = c2))
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null c1:7!null c2:8!null c3:9 c4:10
 ├── fd: (2)==(8), (8)==(2)
 └── group-by (hash)
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null c1:7!null c2:8!null c3:9 c4:10 c.rowid:11!null
      ├── grouping columns: a1:1!null a3:3!null a4:4!null c.rowid:11!null
      ├── key: (1,3,4,11)
      ├── fd: (11)-->(7-10), (2)==(8), (8)==(2), (1,3,4,11)-->(2,7-10)
      ├── inner-join (cross)
      │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null c1:7!null c2:8!null c3:9 c4:10 c.rowid:11!null b1:14
      │    ├── fd: (11)-->(7-10), (2)==(8), (8)==(2)
      │    ├── scan b
      │    │    └── columns: b1:14
      │    ├── inner-join (hash)
      │    │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null c1:7!null c2:8!null c3:9 c4:10 c.rowid:11!null
      │    │    ├── key: (1,3,4,11)
      │    │    ├── fd: (11)-->(7-10), (2)==(8), (8)==(2)
      │    │    ├── scan a
      │    │    │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      │    │    │    └── key: (1-4)
      │    │    ├── scan c
      │    │    │    ├── columns: c1:7 c2:8 c3:9 c4:10 c.rowid:11!null
      │    │    │    ├── key: (11)
      │    │    │    └── fd: (11)-->(7-10)
      │    │    └── filters
      │    │         ├── (a1:1 = c1:7) OR (c1:7 = c2:8) [outer=(1,7,8), constraints=(/7: (/NULL - ])]
      │    │         └── a2:2 = c2:8 [outer=(2,8), constraints=(/2: (/NULL - ]; /8: (/NULL - ]), fd=(2)==(8), (8)==(2)]
      │    └── filters
      │         └── (a1:1 = b1:14) OR (a1:1 = a2:2) [outer=(1,2,14), constraints=(/1: (/NULL - ])]
      └── aggregations
           ├── const-agg [as=c1:7, outer=(7)]
           │    └── c1:7
           ├── const-agg [as=c2:8, outer=(8)]
           │    └── c2:8
           ├── const-agg [as=c3:9, outer=(9)]
           │    └── c3:9
           ├── const-agg [as=c4:10, outer=(10)]
           │    └── c4:10
           └── const-agg [as=a2:2, outer=(2)]
                └── a2:2

opt expect=SplitDisjunctionOfJoinTerms
SELECT a1,a2,a3,c.* FROM a,c
       WHERE a2 = c2 AND EXISTS (SELECT * FROM b WHERE (a1 = b1 OR a1 = b2) AND (c1 = b1 OR c1 = b2))
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null c1:7!null c2:8!null c3:9 c4:10
 ├── fd: (2)==(8), (8)==(2)
 └── group-by (hash)
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null c1:7!null c2:8!null c3:9 c4:10 c.rowid:11!null
      ├── grouping columns: a1:1!null a3:3!null a4:4!null c.rowid:11!null
      ├── key: (1,3,4,11)
      ├── fd: (11)-->(7-10), (2)==(8), (8)==(2), (1,3,4,11)-->(2,7-10)
      ├── inner-join (hash)
      │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null c1:7!null c2:8!null c3:9 c4:10 c.rowid:11!null b1:14 b2:15
      │    ├── fd: (11)-->(7-10), (2)==(8), (8)==(2)
      │    ├── project
      │    │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:14 b2:15
      │    │    └── distinct-on
      │    │         ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:14 b2:15 b.rowid:18!null
      │    │         ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null b.rowid:18!null
      │    │         ├── key: (1-4,18)
      │    │         ├── fd: (1-4,18)-->(14,15)
      │    │         ├── union-all
      │    │         │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:14 b2:15 b.rowid:18!null
      │    │         │    ├── left columns: a1:80 a2:81 a3:82 a4:83 b1:86 b2:87 b.rowid:90
      │    │         │    ├── right columns: a1:93 a2:94 a3:95 a4:96 b1:99 b2:100 b.rowid:103
      │    │         │    ├── inner-join (merge)
      │    │         │    │    ├── columns: a1:80!null a2:81!null a3:82!null a4:83!null b1:86!null b2:87 b.rowid:90!null
      │    │         │    │    ├── left ordering: +80
      │    │         │    │    ├── right ordering: +86
      │    │         │    │    ├── key: (81-83,90)
      │    │         │    │    ├── fd: (90)-->(86,87), (80)==(86), (86)==(80)
      │    │         │    │    ├── scan a
      │    │         │    │    │    ├── columns: a1:80!null a2:81!null a3:82!null a4:83!null
      │    │         │    │    │    ├── key: (80-83)
      │    │         │    │    │    └── ordering: +80
      │    │         │    │    ├── scan b@b_b1_b2_idx
      │    │         │    │    │    ├── columns: b1:86 b2:87 b.rowid:90!null
      │    │         │    │    │    ├── key: (90)
      │    │         │    │    │    ├── fd: (90)-->(86,87)
      │    │         │    │    │    └── ordering: +86
      │    │         │    │    └── filters (true)
      │    │         │    └── inner-join (merge)
      │    │         │         ├── columns: a1:93!null a2:94!null a3:95!null a4:96!null b1:99 b2:100!null b.rowid:103!null
      │    │         │         ├── left ordering: +93
      │    │         │         ├── right ordering: +100
      │    │         │         ├── key: (94-96,103)
      │    │         │         ├── fd: (103)-->(99,100), (93)==(100), (100)==(93)
      │    │         │         ├── scan a
      │    │         │         │    ├── columns: a1:93!null a2:94!null a3:95!null a4:96!null
      │    │         │         │    ├── key: (93-96)
      │    │         │         │    └── ordering: +93
      │    │         │         ├── scan b@b_b2_idx
      │    │         │         │    ├── columns: b1:99 b2:100 b.rowid:103!null
      │    │         │         │    ├── key: (103)
      │    │         │         │    ├── fd: (103)-->(99,100)
      │    │         │         │    └── ordering: +100
      │    │         │         └── filters (true)
      │    │         └── aggregations
      │    │              ├── const-agg [as=b1:14, outer=(14)]
      │    │              │    └── b1:14
      │    │              └── const-agg [as=b2:15, outer=(15)]
      │    │                   └── b2:15
      │    ├── scan c
      │    │    ├── columns: c1:7 c2:8 c3:9 c4:10 c.rowid:11!null
      │    │    ├── key: (11)
      │    │    └── fd: (11)-->(7-10)
      │    └── filters
      │         ├── a2:2 = c2:8 [outer=(2,8), constraints=(/2: (/NULL - ]; /8: (/NULL - ]), fd=(2)==(8), (8)==(2)]
      │         └── (c1:7 = b1:14) OR (c1:7 = b2:15) [outer=(7,14,15), constraints=(/7: (/NULL - ])]
      └── aggregations
           ├── const-agg [as=c1:7, outer=(7)]
           │    └── c1:7
           ├── const-agg [as=c2:8, outer=(8)]
           │    └── c2:8
           ├── const-agg [as=c3:9, outer=(9)]
           │    └── c3:9
           ├── const-agg [as=c4:10, outer=(10)]
           │    └── c4:10
           └── const-agg [as=a2:2, outer=(2)]
                └── a2:2

opt expect=SplitDisjunctionOfJoinTerms
SELECT a1,a2,a3,c.* FROM a,c
       WHERE a2 = c2 AND EXISTS (SELECT * FROM b WHERE (a1 = b1 OR a1 = b3) AND (a1 = c1 OR a1 = c3))
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null c1:7 c2:8!null c3:9 c4:10
 ├── fd: (2)==(8), (8)==(2)
 └── group-by (hash)
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null c1:7 c2:8!null c3:9 c4:10 c.rowid:11!null
      ├── grouping columns: a1:1!null a3:3!null a4:4!null c.rowid:11!null
      ├── key: (1,3,4,11)
      ├── fd: (11)-->(7-10), (2)==(8), (8)==(2), (1,3,4,11)-->(2,7-10)
      ├── inner-join (cross)
      │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null c1:7 c2:8!null c3:9 c4:10 c.rowid:11!null b1:14 b3:16
      │    ├── fd: (11)-->(7-10), (2)==(8), (8)==(2)
      │    ├── scan b
      │    │    └── columns: b1:14 b3:16
      │    ├── inner-join (hash)
      │    │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null c1:7 c2:8!null c3:9 c4:10 c.rowid:11!null
      │    │    ├── key: (1,3,4,11)
      │    │    ├── fd: (11)-->(7-10), (2)==(8), (8)==(2)
      │    │    ├── scan a
      │    │    │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      │    │    │    └── key: (1-4)
      │    │    ├── scan c
      │    │    │    ├── columns: c1:7 c2:8 c3:9 c4:10 c.rowid:11!null
      │    │    │    ├── key: (11)
      │    │    │    └── fd: (11)-->(7-10)
      │    │    └── filters
      │    │         ├── (a1:1 = c1:7) OR (a1:1 = c3:9) [outer=(1,7,9), constraints=(/1: (/NULL - ])]
      │    │         └── a2:2 = c2:8 [outer=(2,8), constraints=(/2: (/NULL - ]; /8: (/NULL - ]), fd=(2)==(8), (8)==(2)]
      │    └── filters
      │         └── (a1:1 = b1:14) OR (a1:1 = b3:16) [outer=(1,14,16), constraints=(/1: (/NULL - ])]
      └── aggregations
           ├── const-agg [as=c1:7, outer=(7)]
           │    └── c1:7
           ├── const-agg [as=c2:8, outer=(8)]
           │    └── c2:8
           ├── const-agg [as=c3:9, outer=(9)]
           │    └── c3:9
           ├── const-agg [as=c4:10, outer=(10)]
           │    └── c4:10
           └── const-agg [as=a2:2, outer=(2)]
                └── a2:2

# Nested EXISTS
opt expect=SplitDisjunctionOfJoinTerms
SELECT a2,a4 FROM a WHERE EXISTS(SELECT * FROM b WHERE (a1=b1 OR a1=b2) AND EXISTS(SELECT 1 FROM c WHERE b1=c1))
----
project
 ├── columns: a2:2!null a4:4!null
 └── project
      ├── columns: a1:1!null a2:2!null a4:4!null
      └── distinct-on
           ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
           ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null
           ├── key: (1-4)
           └── inner-join (hash)
                ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7!null b2:8 c1:14!null
                ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
                ├── fd: (7)==(14), (14)==(7)
                ├── project
                │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7 b2:8
                │    └── distinct-on
                │         ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7 b2:8 b.rowid:11!null
                │         ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null b.rowid:11!null
                │         ├── key: (1-4,11)
                │         ├── fd: (1-4,11)-->(7,8)
                │         ├── union-all
                │         │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7 b2:8 b.rowid:11!null
                │         │    ├── left columns: a1:22 a2:23 a3:24 a4:25 b1:28 b2:29 b.rowid:32
                │         │    ├── right columns: a1:35 a2:36 a3:37 a4:38 b1:41 b2:42 b.rowid:45
                │         │    ├── inner-join (merge)
                │         │    │    ├── columns: a1:22!null a2:23!null a3:24!null a4:25!null b1:28!null b2:29 b.rowid:32!null
                │         │    │    ├── left ordering: +22
                │         │    │    ├── right ordering: +28
                │         │    │    ├── key: (23-25,32)
                │         │    │    ├── fd: (32)-->(28,29), (22)==(28), (28)==(22)
                │         │    │    ├── scan a
                │         │    │    │    ├── columns: a1:22!null a2:23!null a3:24!null a4:25!null
                │         │    │    │    ├── key: (22-25)
                │         │    │    │    └── ordering: +22
                │         │    │    ├── scan b@b_b1_b2_idx
                │         │    │    │    ├── columns: b1:28 b2:29 b.rowid:32!null
                │         │    │    │    ├── key: (32)
                │         │    │    │    ├── fd: (32)-->(28,29)
                │         │    │    │    └── ordering: +28
                │         │    │    └── filters (true)
                │         │    └── inner-join (merge)
                │         │         ├── columns: a1:35!null a2:36!null a3:37!null a4:38!null b1:41 b2:42!null b.rowid:45!null
                │         │         ├── left ordering: +35
                │         │         ├── right ordering: +42
                │         │         ├── key: (36-38,45)
                │         │         ├── fd: (45)-->(41,42), (35)==(42), (42)==(35)
                │         │         ├── scan a
                │         │         │    ├── columns: a1:35!null a2:36!null a3:37!null a4:38!null
                │         │         │    ├── key: (35-38)
                │         │         │    └── ordering: +35
                │         │         ├── scan b@b_b2_idx
                │         │         │    ├── columns: b1:41 b2:42 b.rowid:45!null
                │         │         │    ├── key: (45)
                │         │         │    ├── fd: (45)-->(41,42)
                │         │         │    └── ordering: +42
                │         │         └── filters (true)
                │         └── aggregations
                │              ├── const-agg [as=b1:7, outer=(7)]
                │              │    └── b1:7
                │              └── const-agg [as=b2:8, outer=(8)]
                │                   └── b2:8
                ├── distinct-on
                │    ├── columns: c1:14
                │    ├── grouping columns: c1:14
                │    ├── key: (14)
                │    └── scan c
                │         └── columns: c1:14
                └── filters
                     └── b1:7 = c1:14 [outer=(7,14), constraints=(/7: (/NULL - ]; /14: (/NULL - ]), fd=(7)==(14), (14)==(7)]

# Two EXISTS at same nesting level; only one disjuction pair can be optimized
opt expect=SplitDisjunctionOfJoinTerms
SELECT a2,a4 FROM a WHERE EXISTS(SELECT * FROM b WHERE a1=b1 OR a1=b2) AND
                          EXISTS(SELECT * FROM c WHERE a1=c1 OR a1=c2)
----
project
 ├── columns: a2:2!null a4:4!null
 └── semi-join (cross)
      ├── columns: a1:1!null a2:2!null a4:4!null
      ├── project
      │    ├── columns: a1:1!null a2:2!null a4:4!null
      │    └── distinct-on
      │         ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      │         ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null
      │         ├── key: (1-4)
      │         └── union-all
      │              ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      │              ├── left columns: a1:100 a2:101 a3:102 a4:103
      │              ├── right columns: a1:113 a2:114 a3:115 a4:116
      │              ├── project
      │              │    ├── columns: a1:100!null a2:101!null a3:102!null a4:103!null
      │              │    ├── key: (100-103)
      │              │    └── inner-join (merge)
      │              │         ├── columns: a1:100!null a2:101!null a3:102!null a4:103!null b1:106!null
      │              │         ├── left ordering: +100
      │              │         ├── right ordering: +106
      │              │         ├── key: (101-103,106)
      │              │         ├── fd: (100)==(106), (106)==(100)
      │              │         ├── scan a
      │              │         │    ├── columns: a1:100!null a2:101!null a3:102!null a4:103!null
      │              │         │    ├── key: (100-103)
      │              │         │    └── ordering: +100
      │              │         ├── distinct-on
      │              │         │    ├── columns: b1:106
      │              │         │    ├── grouping columns: b1:106
      │              │         │    ├── key: (106)
      │              │         │    ├── ordering: +106
      │              │         │    └── scan b@b_b1_b2_idx
      │              │         │         ├── columns: b1:106
      │              │         │         └── ordering: +106
      │              │         └── filters (true)
      │              └── project
      │                   ├── columns: a1:113!null a2:114!null a3:115!null a4:116!null
      │                   ├── key: (113-116)
      │                   └── inner-join (merge)
      │                        ├── columns: a1:113!null a2:114!null a3:115!null a4:116!null b2:120!null
      │                        ├── left ordering: +113
      │                        ├── right ordering: +120
      │                        ├── key: (114-116,120)
      │                        ├── fd: (113)==(120), (120)==(113)
      │                        ├── scan a
      │                        │    ├── columns: a1:113!null a2:114!null a3:115!null a4:116!null
      │                        │    ├── key: (113-116)
      │                        │    └── ordering: +113
      │                        ├── distinct-on
      │                        │    ├── columns: b2:120
      │                        │    ├── grouping columns: b2:120
      │                        │    ├── key: (120)
      │                        │    ├── ordering: +120
      │                        │    └── scan b@b_b2_idx
      │                        │         ├── columns: b2:120
      │                        │         └── ordering: +120
      │                        └── filters (true)
      ├── scan c
      │    └── columns: c1:14 c2:15
      └── filters
           └── (a1:1 = c1:14) OR (a1:1 = c2:15) [outer=(1,14,15), constraints=(/1: (/NULL - ])]

# Two EXISTS at same nesting level; only one disjuction chain can be optimized
opt expect=SplitDisjunctionOfJoinTerms
SELECT a2,a4 FROM a WHERE EXISTS(SELECT * FROM b WHERE a1=b1 OR a1=b2 OR a1=b3 OR a1=b4) AND
                          EXISTS(SELECT * FROM c WHERE a1=c1 OR a1=c2 OR a1=c3 OR a1=c4)
----
project
 ├── columns: a2:2!null a4:4!null
 └── semi-join (cross)
      ├── columns: a1:1!null a2:2!null a4:4!null
      ├── project
      │    ├── columns: a1:1!null a2:2!null a4:4!null
      │    └── distinct-on
      │         ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      │         ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null
      │         ├── key: (1-4)
      │         └── union-all
      │              ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      │              ├── left columns: a1:516 a2:517 a3:518 a4:519
      │              ├── right columns: a1:529 a2:530 a3:531 a4:532
      │              ├── project
      │              │    ├── columns: a1:516!null a2:517!null a3:518!null a4:519!null
      │              │    ├── key: (516-519)
      │              │    └── inner-join (merge)
      │              │         ├── columns: a1:516!null a2:517!null a3:518!null a4:519!null b1:522!null
      │              │         ├── left ordering: +516
      │              │         ├── right ordering: +522
      │              │         ├── key: (517-519,522)
      │              │         ├── fd: (516)==(522), (522)==(516)
      │              │         ├── scan a
      │              │         │    ├── columns: a1:516!null a2:517!null a3:518!null a4:519!null
      │              │         │    ├── key: (516-519)
      │              │         │    └── ordering: +516
      │              │         ├── distinct-on
      │              │         │    ├── columns: b1:522
      │              │         │    ├── grouping columns: b1:522
      │              │         │    ├── key: (522)
      │              │         │    ├── ordering: +522
      │              │         │    └── scan b@b_b1_b2_idx
      │              │         │         ├── columns: b1:522
      │              │         │         └── ordering: +522
      │              │         └── filters (true)
      │              └── project
      │                   ├── columns: a1:529!null a2:530!null a3:531!null a4:532!null
      │                   ├── key: (529-532)
      │                   └── distinct-on
      │                        ├── columns: a1:529!null a2:530!null a3:531!null a4:532!null
      │                        ├── grouping columns: a1:529!null a2:530!null a3:531!null a4:532!null
      │                        ├── key: (529-532)
      │                        └── union-all
      │                             ├── columns: a1:529!null a2:530!null a3:531!null a4:532!null
      │                             ├── left columns: a1:620 a2:621 a3:622 a4:623
      │                             ├── right columns: a1:633 a2:634 a3:635 a4:636
      │                             ├── project
      │                             │    ├── columns: a1:620!null a2:621!null a3:622!null a4:623!null
      │                             │    ├── key: (620-623)
      │                             │    └── inner-join (hash)
      │                             │         ├── columns: a1:620!null a2:621!null a3:622!null a4:623!null b4:629!null
      │                             │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
      │                             │         ├── key: (621-623,629)
      │                             │         ├── fd: (620)==(629), (629)==(620)
      │                             │         ├── scan a
      │                             │         │    ├── columns: a1:620!null a2:621!null a3:622!null a4:623!null
      │                             │         │    └── key: (620-623)
      │                             │         ├── distinct-on
      │                             │         │    ├── columns: b4:629
      │                             │         │    ├── grouping columns: b4:629
      │                             │         │    ├── key: (629)
      │                             │         │    └── scan b
      │                             │         │         └── columns: b4:629
      │                             │         └── filters
      │                             │              └── a1:620 = b4:629 [outer=(620,629), constraints=(/620: (/NULL - ]; /629: (/NULL - ]), fd=(620)==(629), (629)==(620)]
      │                             └── project
      │                                  ├── columns: a1:633!null a2:634!null a3:635!null a4:636!null
      │                                  ├── key: (633-636)
      │                                  └── distinct-on
      │                                       ├── columns: a1:633!null a2:634!null a3:635!null a4:636!null
      │                                       ├── grouping columns: a1:633!null a2:634!null a3:635!null a4:636!null
      │                                       ├── key: (633-636)
      │                                       └── union-all
      │                                            ├── columns: a1:633!null a2:634!null a3:635!null a4:636!null
      │                                            ├── left columns: a1:698 a2:699 a3:700 a4:701
      │                                            ├── right columns: a1:711 a2:712 a3:713 a4:714
      │                                            ├── project
      │                                            │    ├── columns: a1:698!null a2:699!null a3:700!null a4:701!null
      │                                            │    ├── key: (698-701)
      │                                            │    └── inner-join (merge)
      │                                            │         ├── columns: a1:698!null a2:699!null a3:700!null a4:701!null b2:705!null
      │                                            │         ├── left ordering: +698
      │                                            │         ├── right ordering: +705
      │                                            │         ├── key: (699-701,705)
      │                                            │         ├── fd: (698)==(705), (705)==(698)
      │                                            │         ├── scan a
      │                                            │         │    ├── columns: a1:698!null a2:699!null a3:700!null a4:701!null
      │                                            │         │    ├── key: (698-701)
      │                                            │         │    └── ordering: +698
      │                                            │         ├── distinct-on
      │                                            │         │    ├── columns: b2:705
      │                                            │         │    ├── grouping columns: b2:705
      │                                            │         │    ├── key: (705)
      │                                            │         │    ├── ordering: +705
      │                                            │         │    └── scan b@b_b2_idx
      │                                            │         │         ├── columns: b2:705
      │                                            │         │         └── ordering: +705
      │                                            │         └── filters (true)
      │                                            └── project
      │                                                 ├── columns: a1:711!null a2:712!null a3:713!null a4:714!null
      │                                                 ├── key: (711-714)
      │                                                 └── inner-join (merge)
      │                                                      ├── columns: a1:711!null a2:712!null a3:713!null a4:714!null b3:719!null
      │                                                      ├── left ordering: +711
      │                                                      ├── right ordering: +719
      │                                                      ├── key: (712-714,719)
      │                                                      ├── fd: (711)==(719), (719)==(711)
      │                                                      ├── scan a
      │                                                      │    ├── columns: a1:711!null a2:712!null a3:713!null a4:714!null
      │                                                      │    ├── key: (711-714)
      │                                                      │    └── ordering: +711
      │                                                      ├── distinct-on
      │                                                      │    ├── columns: b3:719
      │                                                      │    ├── grouping columns: b3:719
      │                                                      │    ├── key: (719)
      │                                                      │    ├── ordering: +719
      │                                                      │    └── scan b@b_b3_idx
      │                                                      │         ├── columns: b3:719
      │                                                      │         └── ordering: +719
      │                                                      └── filters (true)
      ├── scan c
      │    └── columns: c1:14 c2:15 c3:16 c4:17
      └── filters
           └── (((a1:1 = c1:14) OR (a1:1 = c2:15)) OR (a1:1 = c3:16)) OR (a1:1 = c4:17) [outer=(1,14-17), constraints=(/1: (/NULL - ])]

# Outer Select is Join
opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a JOIN (SELECT * FROM b WHERE b1 > 0 AND EXISTS (SELECT 1 FROM c WHERE c1=b1))
                       AS foo on a1=foo.b1 OR a2=foo.b2
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7!null b2:8 b3:9 b4:10
 └── inner-join (hash)
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7!null b2:8 b3:9 b4:10 c1:14!null
      ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
      ├── fd: (7)==(14), (14)==(7)
      ├── project
      │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7!null b2:8 b3:9 b4:10
      │    └── distinct-on
      │         ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7!null b2:8 b3:9 b4:10 b.rowid:11!null
      │         ├── grouping columns: a1:1!null a2:2!null a3:3!null a4:4!null b.rowid:11!null
      │         ├── key: (1-4,11)
      │         ├── fd: (1-4,11)-->(7-10)
      │         ├── union-all
      │         │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7!null b2:8 b3:9 b4:10 b.rowid:11!null
      │         │    ├── left columns: a1:22 a2:23 a3:24 a4:25 b1:28 b2:29 b3:30 b4:31 b.rowid:32
      │         │    ├── right columns: a1:35 a2:36 a3:37 a4:38 b1:41 b2:42 b3:43 b4:44 b.rowid:45
      │         │    ├── inner-join (merge)
      │         │    │    ├── columns: a1:22!null a2:23!null a3:24!null a4:25!null b1:28!null b2:29 b3:30 b4:31 b.rowid:32!null
      │         │    │    ├── left ordering: +22
      │         │    │    ├── right ordering: +28
      │         │    │    ├── key: (23-25,32)
      │         │    │    ├── fd: (32)-->(28-31), (22)==(28), (28)==(22)
      │         │    │    ├── scan a
      │         │    │    │    ├── columns: a1:22!null a2:23!null a3:24!null a4:25!null
      │         │    │    │    ├── key: (22-25)
      │         │    │    │    └── ordering: +22
      │         │    │    ├── scan b@b_b1_b2_idx
      │         │    │    │    ├── columns: b1:28!null b2:29 b3:30 b4:31 b.rowid:32!null
      │         │    │    │    ├── constraint: /28/29/32: [/1 - ]
      │         │    │    │    ├── key: (32)
      │         │    │    │    ├── fd: (32)-->(28-31)
      │         │    │    │    └── ordering: +28
      │         │    │    └── filters (true)
      │         │    └── inner-join (hash)
      │         │         ├── columns: a1:35!null a2:36!null a3:37!null a4:38!null b1:41!null b2:42!null b3:43 b4:44 b.rowid:45!null
      │         │         ├── key: (35,37,38,45)
      │         │         ├── fd: (45)-->(41-44), (36)==(42), (42)==(36)
      │         │         ├── scan a
      │         │         │    ├── columns: a1:35!null a2:36!null a3:37!null a4:38!null
      │         │         │    └── key: (35-38)
      │         │         ├── scan b@b_b1_b2_idx
      │         │         │    ├── columns: b1:41!null b2:42 b3:43 b4:44 b.rowid:45!null
      │         │         │    ├── constraint: /41/42/45: [/1 - ]
      │         │         │    ├── key: (45)
      │         │         │    └── fd: (45)-->(41-44)
      │         │         └── filters
      │         │              └── a2:36 = b2:42 [outer=(36,42), constraints=(/36: (/NULL - ]; /42: (/NULL - ]), fd=(36)==(42), (42)==(36)]
      │         └── aggregations
      │              ├── const-agg [as=b1:7, outer=(7)]
      │              │    └── b1:7
      │              ├── const-agg [as=b2:8, outer=(8)]
      │              │    └── b2:8
      │              ├── const-agg [as=b3:9, outer=(9)]
      │              │    └── b3:9
      │              └── const-agg [as=b4:10, outer=(10)]
      │                   └── b4:10
      ├── distinct-on
      │    ├── columns: c1:14!null
      │    ├── grouping columns: c1:14!null
      │    ├── key: (14)
      │    └── select
      │         ├── columns: c1:14!null
      │         ├── scan c
      │         │    └── columns: c1:14
      │         └── filters
      │              └── c1:14 > 0 [outer=(14), constraints=(/14: [/1 - ]; tight)]
      └── filters
           └── c1:14 = b1:7 [outer=(7,14), constraints=(/7: (/NULL - ]; /14: (/NULL - ]), fd=(7)==(14), (14)==(7)]

opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a JOIN (SELECT * FROM b WHERE b1 > 0 AND EXISTS (SELECT 1 FROM c WHERE c1=b1 or c2=b2))
                       AS foo on a1=foo.b1
----
inner-join (hash)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7!null b2:8 b3:9 b4:10
 ├── fd: (1)==(7), (7)==(1)
 ├── scan a
 │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 │    └── key: (1-4)
 ├── project
 │    ├── columns: b1:7!null b2:8 b3:9 b4:10
 │    └── distinct-on
 │         ├── columns: b1:7!null b2:8 b3:9 b4:10 b.rowid:11!null
 │         ├── grouping columns: b.rowid:11!null
 │         ├── key: (11)
 │         ├── fd: (11)-->(7-10)
 │         ├── union-all
 │         │    ├── columns: b1:7!null b2:8 b3:9 b4:10 b.rowid:11!null
 │         │    ├── left columns: b1:22 b2:23 b3:24 b4:25 b.rowid:26
 │         │    ├── right columns: b1:36 b2:37 b3:38 b4:39 b.rowid:40
 │         │    ├── project
 │         │    │    ├── columns: b1:22!null b2:23 b3:24 b4:25 b.rowid:26!null
 │         │    │    ├── key: (26)
 │         │    │    ├── fd: (26)-->(22-25)
 │         │    │    └── inner-join (hash)
 │         │    │         ├── columns: b1:22!null b2:23 b3:24 b4:25 b.rowid:26!null c1:29!null
 │         │    │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │         │    │         ├── key: (26)
 │         │    │         ├── fd: (26)-->(22-25), (22)==(29), (29)==(22)
 │         │    │         ├── scan b@b_b1_b2_idx
 │         │    │         │    ├── columns: b1:22!null b2:23 b3:24 b4:25 b.rowid:26!null
 │         │    │         │    ├── constraint: /22/23/26: [/1 - ]
 │         │    │         │    ├── key: (26)
 │         │    │         │    └── fd: (26)-->(22-25)
 │         │    │         ├── distinct-on
 │         │    │         │    ├── columns: c1:29
 │         │    │         │    ├── grouping columns: c1:29
 │         │    │         │    ├── key: (29)
 │         │    │         │    └── scan c
 │         │    │         │         └── columns: c1:29
 │         │    │         └── filters
 │         │    │              └── c1:29 = b1:22 [outer=(22,29), constraints=(/22: (/NULL - ]; /29: (/NULL - ]), fd=(22)==(29), (29)==(22)]
 │         │    └── project
 │         │         ├── columns: b1:36!null b2:37 b3:38 b4:39 b.rowid:40!null
 │         │         ├── key: (40)
 │         │         ├── fd: (40)-->(36-39)
 │         │         └── inner-join (hash)
 │         │              ├── columns: b1:36!null b2:37!null b3:38 b4:39 b.rowid:40!null c2:44!null
 │         │              ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │         │              ├── key: (40)
 │         │              ├── fd: (40)-->(36-39), (37)==(44), (44)==(37)
 │         │              ├── scan b@b_b1_b2_idx
 │         │              │    ├── columns: b1:36!null b2:37 b3:38 b4:39 b.rowid:40!null
 │         │              │    ├── constraint: /36/37/40: [/1 - ]
 │         │              │    ├── key: (40)
 │         │              │    └── fd: (40)-->(36-39)
 │         │              ├── distinct-on
 │         │              │    ├── columns: c2:44
 │         │              │    ├── grouping columns: c2:44
 │         │              │    ├── key: (44)
 │         │              │    └── scan c
 │         │              │         └── columns: c2:44
 │         │              └── filters
 │         │                   └── c2:44 = b2:37 [outer=(37,44), constraints=(/37: (/NULL - ]; /44: (/NULL - ]), fd=(37)==(44), (44)==(37)]
 │         └── aggregations
 │              ├── const-agg [as=b1:7, outer=(7)]
 │              │    └── b1:7
 │              ├── const-agg [as=b2:8, outer=(8)]
 │              │    └── b2:8
 │              ├── const-agg [as=b3:9, outer=(9)]
 │              │    └── b3:9
 │              └── const-agg [as=b4:10, outer=(10)]
 │                   └── b4:10
 └── filters
      └── a1:1 = b1:7 [outer=(1,7), constraints=(/1: (/NULL - ]; /7: (/NULL - ]), fd=(1)==(7), (7)==(1)]

#######################
# Correlated antijoin #
#######################

opt expect=SplitDisjunctionOfAntiJoinTerms
SELECT a1,a2,a3 FROM a WHERE NOT EXISTS (SELECT * FROM b WHERE a2 = b2 OR a3 = b3)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null
 └── intersect-all
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── left columns: a1:14 a2:15 a3:16 a4:17
      ├── right columns: a1:27 a2:28 a3:29 a4:30
      ├── key: (1-4)
      ├── anti-join (hash)
      │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    ├── key: (14-17)
      │    ├── scan a
      │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    │    └── key: (14-17)
      │    ├── scan b
      │    │    └── columns: b2:21
      │    └── filters
      │         └── a2:15 = b2:21 [outer=(15,21), constraints=(/15: (/NULL - ]; /21: (/NULL - ]), fd=(15)==(21), (21)==(15)]
      └── anti-join (hash)
           ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
           ├── key: (27-30)
           ├── scan a
           │    ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
           │    └── key: (27-30)
           ├── scan b
           │    └── columns: b3:35
           └── filters
                └── a3:29 = b3:35 [outer=(29,35), constraints=(/29: (/NULL - ]; /35: (/NULL - ]), fd=(29)==(35), (35)==(29)]

opt expect=SplitDisjunctionOfAntiJoinTerms
SELECT a1,a2,a3 FROM a WHERE NOT EXISTS (SELECT * FROM b WHERE a1 = b1 OR a1 = b2)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null
 └── intersect-all
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── left columns: a1:14 a2:15 a3:16 a4:17
      ├── right columns: a1:27 a2:28 a3:29 a4:30
      ├── key: (1-4)
      ├── anti-join (merge)
      │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    ├── left ordering: +14
      │    ├── right ordering: +20
      │    ├── key: (14-17)
      │    ├── scan a
      │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    │    ├── key: (14-17)
      │    │    └── ordering: +14
      │    ├── scan b@b_b1_b2_idx
      │    │    ├── columns: b1:20
      │    │    └── ordering: +20
      │    └── filters (true)
      └── anti-join (merge)
           ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
           ├── left ordering: +27
           ├── right ordering: +34
           ├── key: (27-30)
           ├── scan a
           │    ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
           │    ├── key: (27-30)
           │    └── ordering: +27
           ├── scan b@b_b2_idx
           │    ├── columns: b2:34
           │    └── ordering: +34
           └── filters (true)

# The left side of the join already produces key columns
opt expect=SplitDisjunctionOfAntiJoinTerms
SELECT * FROM a WHERE NOT EXISTS (SELECT * FROM b WHERE a1 = b1 OR a2 = b2 OR a3 = b3 OR a4 = b4)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 └── intersect-all
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── left columns: a1:14 a2:15 a3:16 a4:17
      ├── right columns: a1:27 a2:28 a3:29 a4:30
      ├── key: (1-4)
      ├── anti-join (merge)
      │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    ├── left ordering: +14
      │    ├── right ordering: +20
      │    ├── key: (14-17)
      │    ├── scan a
      │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    │    ├── key: (14-17)
      │    │    └── ordering: +14
      │    ├── scan b@b_b1_b2_idx
      │    │    ├── columns: b1:20
      │    │    └── ordering: +20
      │    └── filters (true)
      └── project
           ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
           ├── key: (27-30)
           └── intersect-all
                ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                ├── left columns: a1:40 a2:41 a3:42 a4:43
                ├── right columns: a1:53 a2:54 a3:55 a4:56
                ├── key: (27-30)
                ├── anti-join (hash)
                │    ├── columns: a1:40!null a2:41!null a3:42!null a4:43!null
                │    ├── key: (40-43)
                │    ├── scan a
                │    │    ├── columns: a1:40!null a2:41!null a3:42!null a4:43!null
                │    │    └── key: (40-43)
                │    ├── scan b
                │    │    └── columns: b4:49
                │    └── filters
                │         └── a4:43 = b4:49 [outer=(43,49), constraints=(/43: (/NULL - ]; /49: (/NULL - ]), fd=(43)==(49), (49)==(43)]
                └── project
                     ├── columns: a1:53!null a2:54!null a3:55!null a4:56!null
                     ├── key: (53-56)
                     └── intersect-all
                          ├── columns: a1:53!null a2:54!null a3:55!null a4:56!null
                          ├── left columns: a1:66 a2:67 a3:68 a4:69
                          ├── right columns: a1:79 a2:80 a3:81 a4:82
                          ├── key: (53-56)
                          ├── anti-join (hash)
                          │    ├── columns: a1:66!null a2:67!null a3:68!null a4:69!null
                          │    ├── key: (66-69)
                          │    ├── scan a
                          │    │    ├── columns: a1:66!null a2:67!null a3:68!null a4:69!null
                          │    │    └── key: (66-69)
                          │    ├── scan b
                          │    │    └── columns: b2:73
                          │    └── filters
                          │         └── a2:67 = b2:73 [outer=(67,73), constraints=(/67: (/NULL - ]; /73: (/NULL - ]), fd=(67)==(73), (73)==(67)]
                          └── anti-join (hash)
                               ├── columns: a1:79!null a2:80!null a3:81!null a4:82!null
                               ├── key: (79-82)
                               ├── scan a
                               │    ├── columns: a1:79!null a2:80!null a3:81!null a4:82!null
                               │    └── key: (79-82)
                               ├── scan b
                               │    └── columns: b3:87
                               └── filters
                                    └── a3:81 = b3:87 [outer=(81,87), constraints=(/81: (/NULL - ]; /87: (/NULL - ]), fd=(81)==(87), (87)==(81)]

# More than one disjunction in the filter
opt expect=SplitDisjunctionOfAntiJoinTerms
SELECT * FROM a WHERE NOT EXISTS (SELECT * FROM c WHERE a1 = c1 OR a2 = c2 OR a3 = c3 OR a4 = c4)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 └── intersect-all
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── left columns: a1:14 a2:15 a3:16 a4:17
      ├── right columns: a1:27 a2:28 a3:29 a4:30
      ├── key: (1-4)
      ├── anti-join (hash)
      │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    ├── key: (14-17)
      │    ├── scan a
      │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    │    └── key: (14-17)
      │    ├── scan c
      │    │    └── columns: c1:20
      │    └── filters
      │         └── a1:14 = c1:20 [outer=(14,20), constraints=(/14: (/NULL - ]; /20: (/NULL - ]), fd=(14)==(20), (20)==(14)]
      └── project
           ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
           ├── key: (27-30)
           └── intersect-all
                ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                ├── left columns: a1:40 a2:41 a3:42 a4:43
                ├── right columns: a1:53 a2:54 a3:55 a4:56
                ├── key: (27-30)
                ├── anti-join (hash)
                │    ├── columns: a1:40!null a2:41!null a3:42!null a4:43!null
                │    ├── key: (40-43)
                │    ├── scan a
                │    │    ├── columns: a1:40!null a2:41!null a3:42!null a4:43!null
                │    │    └── key: (40-43)
                │    ├── scan c
                │    │    └── columns: c4:49
                │    └── filters
                │         └── a4:43 = c4:49 [outer=(43,49), constraints=(/43: (/NULL - ]; /49: (/NULL - ]), fd=(43)==(49), (49)==(43)]
                └── project
                     ├── columns: a1:53!null a2:54!null a3:55!null a4:56!null
                     ├── key: (53-56)
                     └── intersect-all
                          ├── columns: a1:53!null a2:54!null a3:55!null a4:56!null
                          ├── left columns: a1:66 a2:67 a3:68 a4:69
                          ├── right columns: a1:79 a2:80 a3:81 a4:82
                          ├── key: (53-56)
                          ├── anti-join (hash)
                          │    ├── columns: a1:66!null a2:67!null a3:68!null a4:69!null
                          │    ├── key: (66-69)
                          │    ├── scan a
                          │    │    ├── columns: a1:66!null a2:67!null a3:68!null a4:69!null
                          │    │    └── key: (66-69)
                          │    ├── scan c
                          │    │    └── columns: c2:73
                          │    └── filters
                          │         └── a2:67 = c2:73 [outer=(67,73), constraints=(/67: (/NULL - ]; /73: (/NULL - ]), fd=(67)==(73), (73)==(67)]
                          └── anti-join (hash)
                               ├── columns: a1:79!null a2:80!null a3:81!null a4:82!null
                               ├── key: (79-82)
                               ├── scan a
                               │    ├── columns: a1:79!null a2:80!null a3:81!null a4:82!null
                               │    └── key: (79-82)
                               ├── scan c
                               │    └── columns: c3:87
                               └── filters
                                    └── a3:81 = c3:87 [outer=(81,87), constraints=(/81: (/NULL - ]; /87: (/NULL - ]), fd=(81)==(87), (87)==(81)]

opt expect=SplitDisjunctionOfAntiJoinTerms
SELECT * FROM a WHERE NOT EXISTS (SELECT * FROM c WHERE a1 = c2 OR a2 = c1 OR a3 = c4 OR a3 = c4)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 └── intersect-all
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      ├── left columns: a1:14 a2:15 a3:16 a4:17
      ├── right columns: a1:27 a2:28 a3:29 a4:30
      ├── key: (1-4)
      ├── anti-join (hash)
      │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    ├── key: (14-17)
      │    ├── scan a
      │    │    ├── columns: a1:14!null a2:15!null a3:16!null a4:17!null
      │    │    └── key: (14-17)
      │    ├── scan c
      │    │    └── columns: c2:21
      │    └── filters
      │         └── a1:14 = c2:21 [outer=(14,21), constraints=(/14: (/NULL - ]; /21: (/NULL - ]), fd=(14)==(21), (21)==(14)]
      └── project
           ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
           ├── key: (27-30)
           └── intersect-all
                ├── columns: a1:27!null a2:28!null a3:29!null a4:30!null
                ├── left columns: a1:40 a2:41 a3:42 a4:43
                ├── right columns: a1:53 a2:54 a3:55 a4:56
                ├── key: (27-30)
                ├── anti-join (hash)
                │    ├── columns: a1:40!null a2:41!null a3:42!null a4:43!null
                │    ├── key: (40-43)
                │    ├── scan a
                │    │    ├── columns: a1:40!null a2:41!null a3:42!null a4:43!null
                │    │    └── key: (40-43)
                │    ├── scan c
                │    │    └── columns: c4:49
                │    └── filters
                │         └── a3:42 = c4:49 [outer=(42,49), constraints=(/42: (/NULL - ]; /49: (/NULL - ]), fd=(42)==(49), (49)==(42)]
                └── project
                     ├── columns: a1:53!null a2:54!null a3:55!null a4:56!null
                     ├── key: (53-56)
                     └── intersect-all
                          ├── columns: a1:53!null a2:54!null a3:55!null a4:56!null
                          ├── left columns: a1:66 a2:67 a3:68 a4:69
                          ├── right columns: a1:79 a2:80 a3:81 a4:82
                          ├── key: (53-56)
                          ├── anti-join (hash)
                          │    ├── columns: a1:66!null a2:67!null a3:68!null a4:69!null
                          │    ├── key: (66-69)
                          │    ├── scan a
                          │    │    ├── columns: a1:66!null a2:67!null a3:68!null a4:69!null
                          │    │    └── key: (66-69)
                          │    ├── scan c
                          │    │    └── columns: c1:72
                          │    └── filters
                          │         └── a2:67 = c1:72 [outer=(67,72), constraints=(/67: (/NULL - ]; /72: (/NULL - ]), fd=(67)==(72), (72)==(67)]
                          └── anti-join (hash)
                               ├── columns: a1:79!null a2:80!null a3:81!null a4:82!null
                               ├── key: (79-82)
                               ├── scan a
                               │    ├── columns: a1:79!null a2:80!null a3:81!null a4:82!null
                               │    └── key: (79-82)
                               ├── scan c
                               │    └── columns: c4:88
                               └── filters
                                    └── a3:81 = c4:88 [outer=(81,88), constraints=(/81: (/NULL - ]; /88: (/NULL - ]), fd=(81)==(88), (88)==(81)]

# Nested NOT EXISTS
# Not currently supported. Maybe needs better subquery decorrelation?
opt expect-not=SplitDisjunctionOfAntiJoinTerms
SELECT a2,a4 FROM a WHERE NOT EXISTS(SELECT * FROM b WHERE (a1=b1 OR a1=b2) AND NOT EXISTS(SELECT 1 FROM c WHERE b1=c1))
----
project
 ├── columns: a2:2!null a4:4!null
 └── anti-join (cross)
      ├── columns: a1:1!null a2:2!null a4:4!null
      ├── scan a
      │    └── columns: a1:1!null a2:2!null a4:4!null
      ├── anti-join (hash)
      │    ├── columns: b1:7 b2:8
      │    ├── scan b
      │    │    └── columns: b1:7 b2:8
      │    ├── scan c
      │    │    └── columns: c1:14
      │    └── filters
      │         └── b1:7 = c1:14 [outer=(7,14), constraints=(/7: (/NULL - ]; /14: (/NULL - ]), fd=(7)==(14), (14)==(7)]
      └── filters
           └── (a1:1 = b1:7) OR (a1:1 = b2:8) [outer=(1,7,8), constraints=(/1: (/NULL - ])]

# Two NOT EXISTS at same nesting level; only one disjuction pair can be optimized
opt expect=SplitDisjunctionOfAntiJoinTerms
SELECT a2,a4 FROM a WHERE NOT EXISTS(SELECT * FROM b WHERE a1=b1 OR a1=b2) AND
                          NOT EXISTS(SELECT * FROM c WHERE a1=c1 OR a1=c2)
----
project
 ├── columns: a2:2!null a4:4!null
 └── anti-join (cross)
      ├── columns: a1:1!null a2:2!null a4:4!null
      ├── project
      │    ├── columns: a1:1!null a2:2!null a4:4!null
      │    └── intersect-all
      │         ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
      │         ├── left columns: a1:47 a2:48 a3:49 a4:50
      │         ├── right columns: a1:60 a2:61 a3:62 a4:63
      │         ├── key: (1-4)
      │         ├── anti-join (merge)
      │         │    ├── columns: a1:47!null a2:48!null a3:49!null a4:50!null
      │         │    ├── left ordering: +47
      │         │    ├── right ordering: +53
      │         │    ├── key: (47-50)
      │         │    ├── scan a
      │         │    │    ├── columns: a1:47!null a2:48!null a3:49!null a4:50!null
      │         │    │    ├── key: (47-50)
      │         │    │    └── ordering: +47
      │         │    ├── scan b@b_b1_b2_idx
      │         │    │    ├── columns: b1:53
      │         │    │    └── ordering: +53
      │         │    └── filters (true)
      │         └── anti-join (merge)
      │              ├── columns: a1:60!null a2:61!null a3:62!null a4:63!null
      │              ├── left ordering: +60
      │              ├── right ordering: +67
      │              ├── key: (60-63)
      │              ├── scan a
      │              │    ├── columns: a1:60!null a2:61!null a3:62!null a4:63!null
      │              │    ├── key: (60-63)
      │              │    └── ordering: +60
      │              ├── scan b@b_b2_idx
      │              │    ├── columns: b2:67
      │              │    └── ordering: +67
      │              └── filters (true)
      ├── scan c
      │    └── columns: c1:14 c2:15
      └── filters
           └── (a1:1 = c1:14) OR (a1:1 = c2:15) [outer=(1,14,15), constraints=(/1: (/NULL - ])]

# Outer Select is Join
build-cascades expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a JOIN (SELECT * FROM b WHERE b1 > 0 AND NOT EXISTS (SELECT 1 FROM c WHERE c1=b1))
                       AS foo on a1=foo.b1 OR a2=foo.b2
----
root
 └── project
      ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7!null b2:8 b3:9 b4:10
      └── inner-join (cross)
           ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a.crdb_internal_mvcc_timestamp:5 a.tableoid:6 b1:7!null b2:8 b3:9 b4:10
           ├── fd: (1-4)-->(5,6)
           ├── scan a
           │    ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a.crdb_internal_mvcc_timestamp:5 a.tableoid:6
           │    ├── key: (1-4)
           │    └── fd: (1-4)-->(5,6)
           ├── project
           │    ├── columns: b1:7!null b2:8 b3:9 b4:10
           │    └── select
           │         ├── columns: b1:7!null b2:8 b3:9 b4:10 b.rowid:11!null b.crdb_internal_mvcc_timestamp:12 b.tableoid:13
           │         ├── key: (11)
           │         ├── fd: (11)-->(7-10,12,13)
           │         ├── scan b
           │         │    ├── columns: b1:7 b2:8 b3:9 b4:10 b.rowid:11!null b.crdb_internal_mvcc_timestamp:12 b.tableoid:13
           │         │    ├── key: (11)
           │         │    └── fd: (11)-->(7-10,12,13)
           │         └── filters
           │              └── and [outer=(7), correlated-subquery, constraints=(/7: [/1 - ])]
           │                   ├── b1:7 > 0
           │                   └── not
           │                        └── exists
           │                             └── project
           │                                  ├── columns: "?column?":21!null
           │                                  ├── outer: (7)
           │                                  ├── fd: ()-->(21)
           │                                  ├── select
           │                                  │    ├── columns: c1:14!null c2:15 c3:16 c4:17 c.rowid:18!null c.crdb_internal_mvcc_timestamp:19 c.tableoid:20
           │                                  │    ├── outer: (7)
           │                                  │    ├── key: (18)
           │                                  │    ├── fd: ()-->(14), (18)-->(15-17,19,20)
           │                                  │    ├── scan c
           │                                  │    │    ├── columns: c1:14 c2:15 c3:16 c4:17 c.rowid:18!null c.crdb_internal_mvcc_timestamp:19 c.tableoid:20
           │                                  │    │    ├── key: (18)
           │                                  │    │    └── fd: (18)-->(14-17,19,20)
           │                                  │    └── filters
           │                                  │         └── c1:14 = b1:7 [outer=(7,14), constraints=(/7: (/NULL - ]; /14: (/NULL - ]), fd=(7)==(14), (14)==(7)]
           │                                  └── projections
           │                                       └── 1 [as="?column?":21]
           └── filters
                └── (a1:1 = b1:7) OR (a2:2 = b2:8) [outer=(1,2,7,8)]

opt expect=SplitDisjunctionOfAntiJoinTerms
SELECT * FROM a JOIN (SELECT * FROM b WHERE b1 > 0 AND NOT EXISTS (SELECT 1 FROM c WHERE c1=b1 or c2=b2))
                       AS foo on a1=foo.b1
----
inner-join (lookup a)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null b1:7!null b2:8 b3:9 b4:10
 ├── key columns: [7] = [1]
 ├── fd: (1)==(7), (7)==(1)
 ├── project
 │    ├── columns: b1:7!null b2:8 b3:9 b4:10
 │    └── intersect-all
 │         ├── columns: b1:7!null b2:8 b3:9 b4:10 b.rowid:11!null
 │         ├── left columns: b1:22 b2:23 b3:24 b4:25 b.rowid:26
 │         ├── right columns: b1:36 b2:37 b3:38 b4:39 b.rowid:40
 │         ├── key: (11)
 │         ├── fd: (11)-->(7-10)
 │         ├── anti-join (hash)
 │         │    ├── columns: b1:22!null b2:23 b3:24 b4:25 b.rowid:26!null
 │         │    ├── key: (26)
 │         │    ├── fd: (26)-->(22-25)
 │         │    ├── scan b@b_b1_b2_idx
 │         │    │    ├── columns: b1:22!null b2:23 b3:24 b4:25 b.rowid:26!null
 │         │    │    ├── constraint: /22/23/26: [/1 - ]
 │         │    │    ├── key: (26)
 │         │    │    └── fd: (26)-->(22-25)
 │         │    ├── scan c
 │         │    │    └── columns: c1:29
 │         │    └── filters
 │         │         └── c1:29 = b1:22 [outer=(22,29), constraints=(/22: (/NULL - ]; /29: (/NULL - ]), fd=(22)==(29), (29)==(22)]
 │         └── anti-join (hash)
 │              ├── columns: b1:36!null b2:37 b3:38 b4:39 b.rowid:40!null
 │              ├── key: (40)
 │              ├── fd: (40)-->(36-39)
 │              ├── scan b@b_b1_b2_idx
 │              │    ├── columns: b1:36!null b2:37 b3:38 b4:39 b.rowid:40!null
 │              │    ├── constraint: /36/37/40: [/1 - ]
 │              │    ├── key: (40)
 │              │    └── fd: (40)-->(36-39)
 │              ├── scan c
 │              │    └── columns: c2:44
 │              └── filters
 │                   └── c2:44 = b2:37 [outer=(37,44), constraints=(/37: (/NULL - ]; /44: (/NULL - ]), fd=(37)==(44), (44)==(37)]
 └── filters (true)

# NOT IN subquery
opt expect=SplitDisjunctionOfJoinTerms
SELECT d3,d1,d2 FROM d WHERE d1 NOT IN (SELECT b1 FROM b WHERE EXISTS (SELECT 1 FROM c WHERE c2=b2 OR c2=b3))
----
anti-join (cross)
 ├── columns: d3:3 d1:1 d2:2
 ├── scan d
 │    └── columns: d1:1 d2:2 d3:3
 ├── project
 │    ├── columns: b1:8 b2:9 b3:10
 │    └── distinct-on
 │         ├── columns: b1:8 b2:9 b3:10 b.rowid:12!null
 │         ├── grouping columns: b.rowid:12!null
 │         ├── key: (12)
 │         ├── fd: (12)-->(8-10)
 │         ├── union-all
 │         │    ├── columns: b1:8 b2:9 b3:10 b.rowid:12!null
 │         │    ├── left columns: b1:23 b2:24 b3:25 b.rowid:27
 │         │    ├── right columns: b1:37 b2:38 b3:39 b.rowid:41
 │         │    ├── project
 │         │    │    ├── columns: b1:23 b2:24 b3:25 b.rowid:27!null
 │         │    │    ├── key: (27)
 │         │    │    ├── fd: (27)-->(23-25)
 │         │    │    └── inner-join (hash)
 │         │    │         ├── columns: b1:23 b2:24!null b3:25 b.rowid:27!null c2:31!null
 │         │    │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │         │    │         ├── key: (27)
 │         │    │         ├── fd: (27)-->(23-25), (24)==(31), (31)==(24)
 │         │    │         ├── scan b
 │         │    │         │    ├── columns: b1:23 b2:24 b3:25 b.rowid:27!null
 │         │    │         │    ├── key: (27)
 │         │    │         │    └── fd: (27)-->(23-25)
 │         │    │         ├── distinct-on
 │         │    │         │    ├── columns: c2:31
 │         │    │         │    ├── grouping columns: c2:31
 │         │    │         │    ├── key: (31)
 │         │    │         │    └── scan c
 │         │    │         │         └── columns: c2:31
 │         │    │         └── filters
 │         │    │              └── c2:31 = b2:24 [outer=(24,31), constraints=(/24: (/NULL - ]; /31: (/NULL - ]), fd=(24)==(31), (31)==(24)]
 │         │    └── project
 │         │         ├── columns: b1:37 b2:38 b3:39 b.rowid:41!null
 │         │         ├── key: (41)
 │         │         ├── fd: (41)-->(37-39)
 │         │         └── inner-join (hash)
 │         │              ├── columns: b1:37 b2:38 b3:39!null b.rowid:41!null c2:45!null
 │         │              ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │         │              ├── key: (41)
 │         │              ├── fd: (41)-->(37-39), (39)==(45), (45)==(39)
 │         │              ├── scan b
 │         │              │    ├── columns: b1:37 b2:38 b3:39 b.rowid:41!null
 │         │              │    ├── key: (41)
 │         │              │    └── fd: (41)-->(37-39)
 │         │              ├── distinct-on
 │         │              │    ├── columns: c2:45
 │         │              │    ├── grouping columns: c2:45
 │         │              │    ├── key: (45)
 │         │              │    └── scan c
 │         │              │         └── columns: c2:45
 │         │              └── filters
 │         │                   └── c2:45 = b3:39 [outer=(39,45), constraints=(/39: (/NULL - ]; /45: (/NULL - ]), fd=(39)==(45), (45)==(39)]
 │         └── aggregations
 │              ├── const-agg [as=b1:8, outer=(8)]
 │              │    └── b1:8
 │              ├── const-agg [as=b2:9, outer=(9)]
 │              │    └── b2:9
 │              └── const-agg [as=b3:10, outer=(10)]
 │                   └── b3:10
 └── filters
      └── (d1:1 = b1:8) IS NOT false [outer=(1,8)]

# NOT IN subquery, 2 columns
opt expect=SplitDisjunctionOfJoinTerms
SELECT d3,d1,d2 FROM d WHERE (d1,d3) NOT IN (SELECT b1,b2 FROM b WHERE EXISTS (SELECT 1 FROM c WHERE c2=b2 OR c2=b3))
----
anti-join (cross)
 ├── columns: d3:3 d1:1 d2:2
 ├── immutable
 ├── scan d
 │    └── columns: d1:1 d2:2 d3:3
 ├── project
 │    ├── columns: column23:23
 │    ├── project
 │    │    ├── columns: b1:8 b2:9 b3:10
 │    │    └── distinct-on
 │    │         ├── columns: b1:8 b2:9 b3:10 b.rowid:12!null
 │    │         ├── grouping columns: b.rowid:12!null
 │    │         ├── key: (12)
 │    │         ├── fd: (12)-->(8-10)
 │    │         ├── union-all
 │    │         │    ├── columns: b1:8 b2:9 b3:10 b.rowid:12!null
 │    │         │    ├── left columns: b1:24 b2:25 b3:26 b.rowid:28
 │    │         │    ├── right columns: b1:38 b2:39 b3:40 b.rowid:42
 │    │         │    ├── project
 │    │         │    │    ├── columns: b1:24 b2:25 b3:26 b.rowid:28!null
 │    │         │    │    ├── key: (28)
 │    │         │    │    ├── fd: (28)-->(24-26)
 │    │         │    │    └── inner-join (hash)
 │    │         │    │         ├── columns: b1:24 b2:25!null b3:26 b.rowid:28!null c2:32!null
 │    │         │    │         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │    │         │    │         ├── key: (28)
 │    │         │    │         ├── fd: (28)-->(24-26), (25)==(32), (32)==(25)
 │    │         │    │         ├── scan b
 │    │         │    │         │    ├── columns: b1:24 b2:25 b3:26 b.rowid:28!null
 │    │         │    │         │    ├── key: (28)
 │    │         │    │         │    └── fd: (28)-->(24-26)
 │    │         │    │         ├── distinct-on
 │    │         │    │         │    ├── columns: c2:32
 │    │         │    │         │    ├── grouping columns: c2:32
 │    │         │    │         │    ├── key: (32)
 │    │         │    │         │    └── scan c
 │    │         │    │         │         └── columns: c2:32
 │    │         │    │         └── filters
 │    │         │    │              └── c2:32 = b2:25 [outer=(25,32), constraints=(/25: (/NULL - ]; /32: (/NULL - ]), fd=(25)==(32), (32)==(25)]
 │    │         │    └── project
 │    │         │         ├── columns: b1:38 b2:39 b3:40 b.rowid:42!null
 │    │         │         ├── key: (42)
 │    │         │         ├── fd: (42)-->(38-40)
 │    │         │         └── inner-join (hash)
 │    │         │              ├── columns: b1:38 b2:39 b3:40!null b.rowid:42!null c2:46!null
 │    │         │              ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
 │    │         │              ├── key: (42)
 │    │         │              ├── fd: (42)-->(38-40), (40)==(46), (46)==(40)
 │    │         │              ├── scan b
 │    │         │              │    ├── columns: b1:38 b2:39 b3:40 b.rowid:42!null
 │    │         │              │    ├── key: (42)
 │    │         │              │    └── fd: (42)-->(38-40)
 │    │         │              ├── distinct-on
 │    │         │              │    ├── columns: c2:46
 │    │         │              │    ├── grouping columns: c2:46
 │    │         │              │    ├── key: (46)
 │    │         │              │    └── scan c
 │    │         │              │         └── columns: c2:46
 │    │         │              └── filters
 │    │         │                   └── c2:46 = b3:40 [outer=(40,46), constraints=(/40: (/NULL - ]; /46: (/NULL - ]), fd=(40)==(46), (46)==(40)]
 │    │         └── aggregations
 │    │              ├── const-agg [as=b1:8, outer=(8)]
 │    │              │    └── b1:8
 │    │              ├── const-agg [as=b2:9, outer=(9)]
 │    │              │    └── b2:9
 │    │              └── const-agg [as=b3:10, outer=(10)]
 │    │                   └── b3:10
 │    └── projections
 │         └── (b1:8, b2:9) [as=column23:23, outer=(8,9)]
 └── filters
      └── (column23:23 = (d1:1, d3:3)) IS NOT false [outer=(1,3,23), immutable]

# The conjuncts under the top-level disjunct contain no join terms directly,
# but are nested in another OR. Join terms should still be detected.
opt expect=SplitDisjunctionOfJoinTerms
SELECT * FROM a t1, a t2 WHERE (((t1.a1 = t2.a1 OR t1.a1 = t2.a2) AND (t1.a2 = t2.a2 OR t1.a2 = t2.a2)) OR
                                ((t1.a1+1 = t2.a1 OR t1.a1+4 = t2.a2) AND (t1.a2+8 = t2.a2 OR t1.a2+9 = t2.a2)))
----
inner-join (cross)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a1:7!null a2:8!null a3:9!null a4:10!null
 ├── immutable
 ├── key: (1-4,7-10)
 ├── scan a [as=t1]
 │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
 │    └── key: (1-4)
 ├── scan a [as=t2]
 │    ├── columns: t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
 │    └── key: (7-10)
 └── filters
      └── (((t1.a1:1 = t2.a1:7) OR (t1.a1:1 = t2.a2:8)) AND (t1.a2:2 = t2.a2:8)) OR (((t2.a1:7 = (t1.a1:1 + 1)) OR (t2.a2:8 = (t1.a1:1 + 4))) AND ((t2.a2:8 = (t1.a2:2 + 8)) OR (t2.a2:8 = (t1.a2:2 + 9)))) [outer=(1,2,7,8), immutable, constraints=(/8: (/NULL - ])]

# Negative Tests
# No equijoin terms. Must be at least one equality predicate referencing
# columns from both tables.
opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a t1, a t2 WHERE (t1.a2 = 1 OR t2.a2 = 1)
----
inner-join (cross)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a1:7!null a2:8!null a3:9!null a4:10!null
 ├── key: (1-4,7-10)
 ├── scan a [as=t1]
 │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
 │    └── key: (1-4)
 ├── scan a [as=t2]
 │    ├── columns: t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
 │    └── key: (7-10)
 └── filters
      └── (t1.a2:2 = 1) OR (t2.a2:8 = 1) [outer=(2,8)]

# No equijoin terms. Must be at least one equality predicate referencing
# columns from both tables.
opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a t1, a t2 WHERE (t1.a2 > t2.a2 AND t1.a3 > t2.a3 OR t2.a2 = 1)
----
inner-join (cross)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a1:7!null a2:8!null a3:9!null a4:10!null
 ├── key: (1-4,7-10)
 ├── scan a [as=t1]
 │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
 │    └── key: (1-4)
 ├── scan a [as=t2]
 │    ├── columns: t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
 │    └── key: (7-10)
 └── filters
      └── ((t1.a2:2 > t2.a2:8) AND (t1.a3:3 > t2.a3:9)) OR (t2.a2:8 = 1) [outer=(2,3,8,9), constraints=(/8: (/NULL - ])]

# Outer join not supported with this optimization
opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a t1 LEFT OUTER JOIN a t2 ON (t1.a2 = t2.a2 OR t1.a3 = t2.a3)
----
left-join (cross)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a1:7 a2:8 a3:9 a4:10
 ├── key: (1-4,7-10)
 ├── scan a [as=t1]
 │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
 │    └── key: (1-4)
 ├── scan a [as=t2]
 │    ├── columns: t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
 │    └── key: (7-10)
 └── filters
      └── (t1.a2:2 = t2.a2:8) OR (t1.a3:3 = t2.a3:9) [outer=(2,3,8,9)]

# Outer join not supported with this optimization
opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a t1 FULL OUTER JOIN a t2 ON (t1.a2 = t2.a2 OR t1.a3 = t2.a3)
----
full-join (cross)
 ├── columns: a1:1 a2:2 a3:3 a4:4 a1:7 a2:8 a3:9 a4:10
 ├── key: (1-4,7-10)
 ├── scan a [as=t1]
 │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
 │    └── key: (1-4)
 ├── scan a [as=t2]
 │    ├── columns: t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
 │    └── key: (7-10)
 └── filters
      └── (t1.a2:2 = t2.a2:8) OR (t1.a3:3 = t2.a3:9) [outer=(2,3,8,9)]

# Complex join condition where we can't decorrelate, so the join terms aren't
# between 2 scans.
opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a t1 WHERE a2 IN (SELECT a2 from a t2 WHERE t1.a3 = t2.a3 OR t1.a1 = t2.a1)
                   OR    a2 IN (SELECT a2 from a t3 WHERE t3.a3 = t3.a3 OR t3.a1 = t3.a1)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 └── select
      ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null case:21
      ├── key: (1-4)
      ├── fd: (1-4)-->(21)
      ├── project
      │    ├── columns: case:21 t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
      │    ├── key: (1-4)
      │    ├── fd: (1-4)-->(21)
      │    ├── group-by (hash)
      │    │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null bool_or:20
      │    │    ├── grouping columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
      │    │    ├── key: (1-4)
      │    │    ├── fd: (1-4)-->(20)
      │    │    ├── left-join (hash)
      │    │    │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t2.a1:7 t2.a2:8 t2.a3:9 notnull:19
      │    │    │    ├── fd: (8)-->(19)
      │    │    │    ├── scan a [as=t1]
      │    │    │    │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
      │    │    │    │    └── key: (1-4)
      │    │    │    ├── project
      │    │    │    │    ├── columns: notnull:19!null t2.a1:7!null t2.a2:8!null t2.a3:9!null
      │    │    │    │    ├── fd: (8)-->(19)
      │    │    │    │    ├── scan a [as=t2]
      │    │    │    │    │    └── columns: t2.a1:7!null t2.a2:8!null t2.a3:9!null
      │    │    │    │    └── projections
      │    │    │    │         └── t2.a2:8 IS NOT NULL [as=notnull:19, outer=(8)]
      │    │    │    └── filters
      │    │    │         ├── (t1.a3:3 = t2.a3:9) OR (t1.a1:1 = t2.a1:7) [outer=(1,3,7,9)]
      │    │    │         └── t1.a2:2 = t2.a2:8 [outer=(2,8), constraints=(/2: (/NULL - ]; /8: (/NULL - ]), fd=(2)==(8), (8)==(2)]
      │    │    └── aggregations
      │    │         └── bool-or [as=bool_or:20, outer=(19)]
      │    │              └── notnull:19
      │    └── projections
      │         └── CASE WHEN bool_or:20 AND (t1.a2:2 IS NOT NULL) THEN true WHEN bool_or:20 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:21, outer=(2,20)]
      └── filters
           └── or [outer=(2,21), correlated-subquery]
                ├── case:21
                └── any: eq
                     ├── project
                     │    ├── columns: t3.a2:14!null
                     │    └── select
                     │         ├── columns: t3.a1:13!null t3.a2:14!null t3.a3:15!null
                     │         ├── scan a [as=t3]
                     │         │    └── columns: t3.a1:13!null t3.a2:14!null t3.a3:15!null
                     │         └── filters
                     │              └── ((t3.a3:15 IS DISTINCT FROM CAST(NULL AS INT8)) OR CAST(NULL AS BOOL)) OR ((t3.a1:13 IS DISTINCT FROM CAST(NULL AS INT8)) OR CAST(NULL AS BOOL)) [outer=(13,15)]
                     └── t1.a2:2

# Complex join condition where we can't decorrelate, so the join terms aren't
# between 2 scans.
opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a t1 WHERE a2 NOT IN (SELECT a2 from a t2 WHERE t1.a3 = t2.a3 OR t1.a1 = t2.a1)
                   OR    a2 NOT IN (SELECT a2 from a t3 WHERE t3.a3 = t3.a3 OR t3.a1 = t3.a1)
----
project
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null
 ├── key: (1-4)
 └── select
      ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null case:21
      ├── key: (1-4)
      ├── fd: (1-4)-->(21)
      ├── project
      │    ├── columns: case:21 t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
      │    ├── key: (1-4)
      │    ├── fd: (1-4)-->(21)
      │    ├── group-by (hash)
      │    │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null bool_or:20
      │    │    ├── grouping columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
      │    │    ├── key: (1-4)
      │    │    ├── fd: (1-4)-->(20)
      │    │    ├── left-join (hash)
      │    │    │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null t2.a1:7 t2.a2:8 t2.a3:9 notnull:19
      │    │    │    ├── fd: (8)-->(19)
      │    │    │    ├── scan a [as=t1]
      │    │    │    │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
      │    │    │    │    └── key: (1-4)
      │    │    │    ├── project
      │    │    │    │    ├── columns: notnull:19!null t2.a1:7!null t2.a2:8!null t2.a3:9!null
      │    │    │    │    ├── fd: (8)-->(19)
      │    │    │    │    ├── scan a [as=t2]
      │    │    │    │    │    └── columns: t2.a1:7!null t2.a2:8!null t2.a3:9!null
      │    │    │    │    └── projections
      │    │    │    │         └── t2.a2:8 IS NOT NULL [as=notnull:19, outer=(8)]
      │    │    │    └── filters
      │    │    │         ├── (t1.a3:3 = t2.a3:9) OR (t1.a1:1 = t2.a1:7) [outer=(1,3,7,9)]
      │    │    │         └── t1.a2:2 = t2.a2:8 [outer=(2,8), constraints=(/2: (/NULL - ]; /8: (/NULL - ]), fd=(2)==(8), (8)==(2)]
      │    │    └── aggregations
      │    │         └── bool-or [as=bool_or:20, outer=(19)]
      │    │              └── notnull:19
      │    └── projections
      │         └── CASE WHEN bool_or:20 AND (t1.a2:2 IS NOT NULL) THEN true WHEN bool_or:20 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:21, outer=(2,20)]
      └── filters
           └── or [outer=(2,21), correlated-subquery]
                ├── NOT case:21
                └── not
                     └── any: eq
                          ├── project
                          │    ├── columns: t3.a2:14!null
                          │    └── select
                          │         ├── columns: t3.a1:13!null t3.a2:14!null t3.a3:15!null
                          │         ├── scan a [as=t3]
                          │         │    └── columns: t3.a1:13!null t3.a2:14!null t3.a3:15!null
                          │         └── filters
                          │              └── ((t3.a3:15 IS DISTINCT FROM CAST(NULL AS INT8)) OR CAST(NULL AS BOOL)) OR ((t3.a1:13 IS DISTINCT FROM CAST(NULL AS INT8)) OR CAST(NULL AS BOOL)) [outer=(13,15)]
                          └── t1.a2:2

# The conjuncts under the top-level disjunct contain no equijoin terms, and
# neither do the nested simple predicates.
opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a t1, a t2 WHERE (((t1.a1 > t1.a1 OR t1.a1 <= t1.a2) AND (t1.a2 > t2.a2+1 OR t1.a1 <= t1.a2-1)) OR
                                ((t1.a1 > t1.a1+5 OR t1.a1 <= t1.a2+5) AND (t1.a2 > t2.a2+7 OR t1.a1 <= t1.a2-9)))
----
inner-join (cross)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a1:7!null a2:8!null a3:9!null a4:10!null
 ├── immutable
 ├── key: (1-4,7-10)
 ├── scan a [as=t1]
 │    ├── columns: t1.a1:1!null t1.a2:2!null t1.a3:3!null t1.a4:4!null
 │    └── key: (1-4)
 ├── scan a [as=t2]
 │    ├── columns: t2.a1:7!null t2.a2:8!null t2.a3:9!null t2.a4:10!null
 │    └── key: (7-10)
 └── filters
      └── ((((t1.a1:1 IS NOT DISTINCT FROM CAST(NULL AS INT8)) AND CAST(NULL AS BOOL)) OR (t1.a1:1 <= t1.a2:2)) AND ((t1.a2:2 > (t2.a2:8 + 1)) OR (t1.a1:1 <= (t1.a2:2 - 1)))) OR (((t1.a1:1 > (t1.a1:1 + 5)) OR (t1.a1:1 <= (t1.a2:2 + 5))) AND ((t1.a2:2 > (t2.a2:8 + 7)) OR (t1.a1:1 <= (t1.a2:2 - 9)))) [outer=(1,2,8), immutable, constraints=(/1: (/NULL - ])]

# Can't consume both OR terms with a join to a single Scan relation. Both sides
# of each equijoin predicate must be applied on a simple Scan or Select.
opt expect-not=SplitDisjunctionOfJoinTerms
SELECT * FROM a t2 INNER JOIN a t1 ON TRUE LEFT OUTER JOIN a t3 ON (t1.a1 = t3.a1 OR t2.a2 = t3.a2)
----
left-join (cross)
 ├── columns: a1:1!null a2:2!null a3:3!null a4:4!null a1:7!null a2:8!null a3:9!null a4:10!null a1:13 a2:14 a3:15 a4:16
 ├── key: (1-4,7-10,13-16)
 ├── inner-join (cross)
 │    ├── columns: t2.a1:1!null t2.a2:2!null t2.a3:3!null t2.a4:4!null t1.a1:7!null t1.a2:8!null t1.a3:9!null t1.a4:10!null
 │    ├── key: (1-4,7-10)
 │    ├── scan a [as=t2]
 │    │    ├── columns: t2.a1:1!null t2.a2:2!null t2.a3:3!null t2.a4:4!null
 │    │    └── key: (1-4)
 │    ├── scan a [as=t1]
 │    │    ├── columns: t1.a1:7!null t1.a2:8!null t1.a3:9!null t1.a4:10!null
 │    │    └── key: (7-10)
 │    └── filters (true)
 ├── scan a [as=t3]
 │    ├── columns: t3.a1:13!null t3.a2:14!null t3.a3:15!null t3.a4:16!null
 │    └── key: (13-16)
 └── filters
      └── (t1.a1:7 = t3.a1:13) OR (t2.a2:2 = t3.a2:14) [outer=(2,7,13,14)]
