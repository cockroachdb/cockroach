exec-ddl
CREATE TABLE t (
  a INT PRIMARY KEY,
  b INT,
  c INT,
  d INT,
  INDEX (b),
  INDEX (d, c)
)
----

# The fast path is conditional on having a small estimated row count. Inject
# statistics so that we don't have to worry about this aspect in tests.
exec-ddl
ALTER TABLE t INJECT STATISTICS '[
  {
    "columns": ["a"],
    "created_at": "2018-05-01 1:00:00.00000+00:00",
    "row_count": 10,
    "distinct_count": 10
  }
]'
----

exec-ddl
CREATE ROLE alice
----

exec-ddl
CREATE ROLE bob
----

exec-ddl
CREATE POLICY select_policy_alice
ON t
FOR SELECT
TO alice
USING (true)
----

exec-ddl
CREATE POLICY select_policy_bob
ON t
FOR SELECT
TO bob
USING (d = 0)
----

exec-ddl
ALTER TABLE t ENABLE ROW LEVEL SECURITY
----

exec-ddl
SET ROLE alice
----

placeholder-fast-path
SELECT a FROM t WHERE b = $1
----
placeholder-scan t@t_b_idx
 ├── columns: a:1!null
 ├── has-placeholder
 ├── stats: [rows=9.9]
 ├── key: (1)
 └── span
      └── $1

# The index on (d, c) cannot be used because d is not constrained by the query
# nor the policy.
placeholder-fast-path
SELECT a FROM t WHERE c = $1
----
no fast path

exec-ddl
SET ROLE bob
----

# The fast path cannot be used because there is an additional filter on d that
# is not pushed into an index constraint.
placeholder-fast-path
SELECT a FROM t WHERE b = $1
----
no fast path

placeholder-fast-path
SELECT a FROM t WHERE c = $1
----
placeholder-scan t@t_d_c_idx
 ├── columns: a:1!null
 ├── has-placeholder
 ├── stats: [rows=9.801]
 ├── key: (1)
 └── span
      ├── 0
      └── $1
