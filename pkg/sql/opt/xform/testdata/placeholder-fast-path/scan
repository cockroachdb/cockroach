exec-ddl
CREATE TABLE kv (k INT PRIMARY KEY, v INT)
----

exec-ddl
CREATE TABLE abcd (
  a INT,
  b INT,
  c INT,
  d INT,
  INDEX (a,b) STORING (c),
  INDEX (c,b,a) STORING (d),
  INDEX (d,c,a),
  INDEX (d,c,b)
)
----

placeholder-fast-path
SELECT * FROM kv WHERE k = $1
----
placeholder-scan kv
 ├── columns: k:1!null v:2
 ├── has-placeholder
 ├── key: (1)
 ├── fd: (1)-->(2)
 └── span
      └── $1

placeholder-fast-path
SELECT * FROM kv WHERE k = $1 FOR UPDATE
----
placeholder-scan kv
 ├── columns: k:1!null v:2
 ├── locking: for-update
 ├── volatile, has-placeholder
 ├── key: (1)
 ├── fd: (1)-->(2)
 └── span
      └── $1

placeholder-fast-path
SELECT k FROM kv WHERE k = $1
----
placeholder-scan kv
 ├── columns: k:1!null
 ├── has-placeholder
 ├── key: (1)
 └── span
      └── $1

placeholder-fast-path
SELECT k FROM kv WHERE k IN ($1)
----
placeholder-scan kv
 ├── columns: k:1!null
 ├── has-placeholder
 ├── key: (1)
 └── span
      └── $1

placeholder-fast-path
SELECT v FROM kv WHERE k = $1
----
placeholder-scan kv
 ├── columns: v:2
 ├── has-placeholder
 └── span
      └── $1

# Fast path not available when we're projecting a new expression.
placeholder-fast-path
SELECT v+1 FROM kv WHERE k = $1
----
no fast path

placeholder-fast-path
SELECT a, b, c FROM abcd WHERE a=$1 AND b=$2
----
placeholder-scan abcd@secondary
 ├── columns: a:1!null b:2!null c:3
 ├── has-placeholder
 └── span
      ├── $1
      └── $2

placeholder-fast-path
SELECT a, b, c FROM abcd WHERE b=$1 AND a=$2
----
placeholder-scan abcd@secondary
 ├── columns: a:1!null b:2!null c:3
 ├── has-placeholder
 └── span
      ├── $2
      └── $1

# One constant value, one placeholder.
placeholder-fast-path
SELECT a, b, c FROM abcd WHERE a=0 AND b=$1
----
placeholder-scan abcd@secondary
 ├── columns: a:1!null b:2!null c:3
 ├── has-placeholder
 ├── fd: ()-->(1)
 └── span
      ├── 0
      └── $1

placeholder-fast-path
SELECT a, b, c FROM abcd WHERE a=$1 AND b=0
----
placeholder-scan abcd@secondary
 ├── columns: a:1!null b:2!null c:3
 ├── has-placeholder
 ├── fd: ()-->(2)
 └── span
      ├── $1
      └── 0

# Constant folding is allowed (for immutable operators).
placeholder-fast-path
SELECT a, b, c FROM abcd WHERE a=1+2 AND b=$1
----
placeholder-scan abcd@secondary
 ├── columns: a:1!null b:2!null c:3
 ├── has-placeholder
 ├── fd: ()-->(1)
 └── span
      ├── 3
      └── $1

placeholder-fast-path
SELECT a, b, c FROM abcd WHERE a=fnv32a('foo') AND b=$1
----
placeholder-scan abcd@secondary
 ├── columns: a:1!null b:2!null c:3
 ├── has-placeholder
 ├── fd: ()-->(1)
 └── span
      ├── 2851307223
      └── $1

# Fast path not available when value is not constant-foldable.
placeholder-fast-path
SELECT a, b, c FROM abcd WHERE a=now()::string::int AND b=$1
----
no fast path

placeholder-fast-path
SELECT a, b, c FROM abcd WHERE a=0 AND b=$1+1
----
no fast path

# Fast path not available when we have an ordering requirement.
placeholder-fast-path
SELECT a, b, c FROM abcd WHERE a=$1 AND b=$2 ORDER BY c
----
no fast path

# Fast path not available when we have a limit.
placeholder-fast-path
SELECT a, b, c FROM abcd WHERE a=$1 AND b=$2 LIMIT 1
----
no fast path

# Fast path not available when index is not covering.
placeholder-fast-path
SELECT a, b, c, d FROM abcd WHERE a=$1 AND b=$2
----
no fast path

# Fast path not available when two indexes are possible.
placeholder-fast-path
SELECT d FROM abcd WHERE d=$1 AND c=$2
----
no fast path

# Now we have only one covering index.
placeholder-fast-path
SELECT a, d FROM abcd WHERE d=$1 AND c=$2
----
placeholder-scan abcd@secondary
 ├── columns: a:1 d:4!null
 ├── has-placeholder
 └── span
      ├── $1
      └── $2
