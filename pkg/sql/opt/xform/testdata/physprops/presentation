exec-ddl
CREATE TABLE a (x INT PRIMARY KEY, y INT)
----
TABLE a
 ├── x int not null
 ├── y int
 └── INDEX primary
      └── x int not null

exec-ddl
CREATE TABLE t.b (x INT, y FLOAT)
----
TABLE b
 ├── x int
 ├── y float
 ├── rowid int not null (hidden)
 └── INDEX primary
      └── rowid int not null (hidden)

# Scan operator.
opt
SELECT a.y, a.x, a.y y2 FROM a
----
scan
 └── columns: y:2(int) x:1(int!null) y2:2(int)

# Select operator.
opt
SELECT a.y, a.x, a.y y2 FROM a WHERE x=1
----
select
 ├── columns: y:2(int) x:1(int!null) y2:2(int)
 ├── scan
 │    └── columns: a.x:1(int!null) a.y:2(int)
 └── filters [type=bool, outer=(1)]
      └── eq [type=bool, outer=(1)]
           ├── variable: a.x [type=int, outer=(1)]
           └── const: 1 [type=int]

# Project operator.
opt
SELECT 1+a.y AS plus, a.x FROM a
----
project
 ├── columns: plus:3(int) x:1(int!null)
 ├── scan
 │    └── columns: a.x:1(int!null) a.y:2(int)
 └── projections [outer=(1,2)]
      ├── plus [type=int, outer=(2)]
      │    ├── variable: a.y [type=int, outer=(2)]
      │    └── const: 1 [type=int]
      └── variable: a.x [type=int, outer=(1)]

# Join operator.
opt
SELECT b.x, rowid, a.y, a.x, a.y y2, b.y FROM a, b
----
inner-join
 ├── columns: x:3(int) rowid:5(int!null) y:2(int) x:1(int!null) y2:2(int) y:4(float)
 ├── scan
 │    └── columns: a.x:1(int!null) a.y:2(int)
 ├── scan
 │    └── columns: b.x:3(int) b.y:4(float) b.rowid:5(int!null)
 └── true [type=bool]

# Groupby operator.
opt
SELECT MAX(y), y, y, x FROM a GROUP BY a.x, a.y
----
group-by
 ├── columns: column3:3(int) y:2(int) y:2(int) x:1(int!null)
 ├── grouping columns: a.x:1(int!null) a.y:2(int)
 ├── scan
 │    └── columns: a.x:1(int!null) a.y:2(int)
 └── aggregations [outer=(2)]
      └── function: max [type=int, outer=(2)]
           └── variable: a.y [type=int, outer=(2)]
