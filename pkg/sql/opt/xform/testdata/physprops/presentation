exec-ddl
CREATE TABLE a (x INT PRIMARY KEY, y INT)
----

exec-ddl
CREATE TABLE t.b (x INT, y FLOAT)
----

# Scan operator.
opt
SELECT a.y, a.x, a.y y2 FROM a
----
scan a
 ├── columns: y:2(int) x:1(int!null) y2:2(int)
 ├── key: (1)
 └── fd: (1)-->(2)

# Select operator.
opt
SELECT a.y, a.x, a.y y2 FROM a WHERE y=1
----
select
 ├── columns: y:2(int!null) x:1(int!null) y2:2(int!null)
 ├── key: (1)
 ├── fd: ()-->(2)
 ├── scan a
 │    ├── columns: x:1(int!null) y:2(int)
 │    ├── key: (1)
 │    └── fd: (1)-->(2)
 └── filters
      └── y = 1 [type=bool, outer=(2), fd=()-->(2)]

# Project operator.
opt
SELECT 1+a.y AS plus, a.x FROM a
----
project
 ├── columns: plus:3(int) x:1(int!null)
 ├── key: (1)
 ├── fd: (1)-->(3)
 ├── scan a
 │    ├── columns: x:1(int!null) y:2(int)
 │    ├── key: (1)
 │    └── fd: (1)-->(2)
 └── projections
      └── y + 1 [type=int, outer=(2)]

# Join operator.
opt
SELECT b.x, rowid, a.y, a.x, a.y y2, b.y FROM a, b
----
inner-join (cross)
 ├── columns: x:3(int) rowid:5(int!null) y:2(int) x:1(int!null) y2:2(int) y:4(float)
 ├── key: (1,5)
 ├── fd: (1)-->(2), (5)-->(3,4)
 ├── scan a
 │    ├── columns: a.x:1(int!null) a.y:2(int)
 │    ├── key: (1)
 │    └── fd: (1)-->(2)
 ├── scan b
 │    ├── columns: b.x:3(int) b.y:4(float) rowid:5(int!null)
 │    ├── key: (5)
 │    └── fd: (5)-->(3,4)
 └── filters (true)

# Groupby operator.
opt
SELECT max(y), y, y, x FROM a GROUP BY a.x, a.y
----
group-by
 ├── columns: max:3(int) y:2(int) y:2(int) x:1(int!null)
 ├── grouping columns: x:1(int!null)
 ├── internal-ordering: +1
 ├── key: (1)
 ├── fd: (1)-->(2,3)
 ├── scan a
 │    ├── columns: x:1(int!null) y:2(int)
 │    ├── key: (1)
 │    ├── fd: (1)-->(2)
 │    └── ordering: +1
 └── aggregations
      ├── max [type=int, outer=(2)]
      │    └── variable: y [type=int]
      └── const-agg [type=int, outer=(2)]
           └── variable: y [type=int]
