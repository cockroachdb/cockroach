exec-raw
CREATE DATABASE t
----

exec-raw
CREATE TABLE t.public.a (x INT PRIMARY KEY, y FLOAT)
----

build
SELECT * FROM t.public.a
----
scan [out=(0,1)]
 └── columns: a.x:int:0 a.y:float,null:1

build
SELECT * FROM t.public.b
----
error: table missing

build
SELECT * FROM b
----
error: database missing

build
SELECT * FROM u.a
----
error: database missing

build
SELECT * FROM t.public.a WHERE x > 10
----
select [out=(0,1)]
 ├── columns: a.x:int:0 a.y:float,null:1
 ├── filters
 │    └── gt (type: bool)
 │         ├── variable (a.x) (type: int)
 │         └── const (10) (type: int)
 └── inputs
      └── scan [out=(0,1)]
           └── columns: a.x:int:0 a.y:float,null:1

build
SELECT * FROM t.public.a WHERE (x > 10 AND (x < 20 AND x != 13))
----
select [out=(0,1)]
 ├── columns: a.x:int:0 a.y:float,null:1
 ├── filters
 │    ├── gt (type: bool)
 │    │    ├── variable (a.x) (type: int)
 │    │    └── const (10) (type: int)
 │    ├── lt (type: bool)
 │    │    ├── variable (a.x) (type: int)
 │    │    └── const (20) (type: int)
 │    └── ne (type: bool)
 │         ├── variable (a.x) (type: int)
 │         └── const (13) (type: int)
 └── inputs
      └── scan [out=(0,1)]
           └── columns: a.x:int:0 a.y:float,null:1

build
SELECT * FROM t.public.a WHERE x IN (1, 2, 3)
----
select [out=(0,1)]
 ├── columns: a.x:int:0 a.y:float,null:1
 ├── filters
 │    └── in (type: bool)
 │         ├── variable (a.x) (type: int)
 │         └── tuple (type: tuple{int, int, int})
 │              ├── const (1) (type: int)
 │              ├── const (2) (type: int)
 │              └── const (3) (type: int)
 └── inputs
      └── scan [out=(0,1)]
           └── columns: a.x:int:0 a.y:float,null:1
