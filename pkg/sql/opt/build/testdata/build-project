exec-raw
CREATE DATABASE t

exec-raw
CREATE TABLE t.a (x INT PRIMARY KEY, y FLOAT)

exec-raw
CREATE TABLE t.b (x INT, y FLOAT)

build
SELECT 5
----
project
 ├── columns: column1:null:1
 ├── values
 │    └── tuple
 └── projections
      └── const: 5

build
SELECT a.x FROM t.a
----
project
 ├── columns: a.x:1
 ├── scan
 │    └── columns: a.x:1 a.y:null:2
 └── projections
      └── variable: a.x

build
SELECT a.x, a.y FROM t.a
----
scan
 └── columns: a.x:1 a.y:null:2

build
SELECT a.y, a.x FROM t.a
----
project
 ├── columns: a.x:1 a.y:null:2
 ├── scan
 │    └── columns: a.x:1 a.y:null:2
 └── projections
      ├── variable: a.y
      └── variable: a.x

build
SELECT * FROM t.a
----
scan
 └── columns: a.x:1 a.y:null:2

# Note that an explicit projection operator is added for table b (unlike for
# table a) to avoid projecting the hidden rowid column.
build
SELECT * FROM t.b
----
project
 ├── columns: b.x:null:1 b.y:null:2
 ├── scan
 │    └── columns: b.x:null:1 b.y:null:2 b.rowid:3
 └── projections
      ├── variable: b.x
      └── variable: b.y

build
SELECT (a.x + 3) AS "X", false AS "Y" FROM t.a
----
project
 ├── columns: X:null:3 Y:null:4
 ├── scan
 │    └── columns: a.x:1 a.y:null:2
 └── projections
      ├── plus
      │    ├── variable: a.x
      │    └── const: 3
      └── const: false

build
SELECT *, ((x < y) OR x > 1000) FROM t.a
----
project
 ├── columns: a.x:1 a.y:null:2 column3:null:3
 ├── scan
 │    └── columns: a.x:1 a.y:null:2
 └── projections
      ├── variable: a.x
      ├── variable: a.y
      └── or
           ├── lt
           │    ├── variable: a.x
           │    └── variable: a.y
           └── gt
                ├── variable: a.x
                └── const: 1000

build
SELECT a.*, true FROM t.a
----
project
 ├── columns: a.x:1 a.y:null:2 column3:null:3
 ├── scan
 │    └── columns: a.x:1 a.y:null:2
 └── projections
      ├── variable: a.x
      ├── variable: a.y
      └── const: true
