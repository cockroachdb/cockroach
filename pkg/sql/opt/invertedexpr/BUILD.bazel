load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "invertedexpr",
    srcs = [
        "expression.go",
        "geo_expression.go",
        "json_array_expression.go",
    ],
    embed = [":invertedexpr_go_proto"],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/opt/invertedexpr",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/geo/geoindex",
        "//pkg/roachpb",
        "//pkg/sql/catalog/descpb",
        "//pkg/sql/opt",
        "//pkg/sql/rowenc",
        "//pkg/sql/sem/tree",
        "//pkg/sql/types",
        "//pkg/util/encoding",
        "//pkg/util/treeprinter",
        "@com_github_cockroachdb_errors//:errors",
    ],
)

go_test(
    name = "invertedexpr_test",
    srcs = [
        "expression_test.go",
        "geo_expression_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":invertedexpr"],
    deps = [
        "//pkg/geo/geoindex",
        "//pkg/util/leaktest",
        "//pkg/util/treeprinter",
        "@com_github_cockroachdb_datadriven//:datadriven",
        "@com_github_gogo_protobuf//proto",
        "@com_github_stretchr_testify//require",
    ],
)

proto_library(
    name = "invertedexpr_proto",
    srcs = ["span_expression.proto"],
    strip_import_prefix = "/pkg",
    visibility = ["//visibility:public"],
    deps = ["@com_github_gogo_protobuf//gogoproto:gogo_proto"],
)

go_proto_library(
    name = "invertedexpr_go_proto",
    compilers = ["//pkg/cmd/protoc-gen-gogoroach:protoc-gen-gogoroach_compiler"],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/opt/invertedexpr",
    proto = ":invertedexpr_proto",
    visibility = ["//visibility:public"],
    deps = ["@com_github_gogo_protobuf//gogoproto"],
)
