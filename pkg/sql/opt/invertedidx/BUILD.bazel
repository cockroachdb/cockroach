load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "geo.go",
        "inverted_index_expr.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/opt/invertedidx",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/geo/geogfn:go_default_library",
        "//pkg/geo/geoindex:go_default_library",
        "//pkg/sql/catalog/descpb:go_default_library",
        "//pkg/sql/opt:go_default_library",
        "//pkg/sql/opt/cat:go_default_library",
        "//pkg/sql/opt/invertedexpr:go_default_library",
        "//pkg/sql/opt/memo:go_default_library",
        "//pkg/sql/opt/norm:go_default_library",
        "//pkg/sql/opt/props:go_default_library",
        "//pkg/sql/sem/tree:go_default_library",
        "//pkg/sql/sqlbase:go_default_library",
        "//pkg/sql/types:go_default_library",
        "//vendor/github.com/cockroachdb/errors:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["geo_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//pkg/sql/opt:go_default_library",
        "//pkg/sql/opt/memo:go_default_library",
        "//pkg/sql/opt/norm:go_default_library",
        "//pkg/sql/opt/optbuilder:go_default_library",
        "//pkg/sql/opt/testutils/testcat:go_default_library",
        "//pkg/sql/parser:go_default_library",
        "//pkg/sql/sem/tree:go_default_library",
        "//vendor/github.com/cockroachdb/errors:go_default_library",
    ],
)
