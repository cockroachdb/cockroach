// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

const _RuleName_name = "InvalidRuleNameSimplifyProjectOrderingSimplifyRootOrderingPruneRootColsNumManualRuleNamesEliminateEmptyAndEliminateEmptyOrEliminateSingletonAndOrSimplifyAndSimplifyOrSimplifyFiltersFoldNullAndOrNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantClauseExtractRedundantSubclauseCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryNormalizeAnyFilterNormalizeNotAnyFilterEliminateDistinctEliminateGroupByProjectReduceGroupingColsPushSelectIntoInlinableProjectInlineProjectInProjectEnsureJoinFiltersAndEnsureJoinFiltersPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinEliminateAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightEliminateLimitPushLimitIntoProjectPushOffsetIntoProjectEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusFoldUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyRowNumberOrderingSimplifyExplainOrderingEliminateProjectEliminateProjectProjectPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneRowNumberColsPruneExplainColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldNullInEmptyFoldNullNotInEmptyNormalizeInConstFoldInNullEliminateExistsProjectEliminateExistsGroupByNormalizeJSONFieldAccessNormalizeJSONContainsEliminateSelectEnsureSelectFiltersAndEnsureSelectFiltersMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectCondRightIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoJoinRightPushSelectIntoGroupByRemoveNotNullConditionstartExploreRuleReplaceMinWithLimitReplaceMaxWithLimitCommuteJoinCommuteLeftJoinCommuteRightJoinGenerateMergeJoinsGenerateLookupJoinGenerateLookupJoinWithFilterPushJoinThroughIndexJoinPushJoinThroughIndexJoinWithExtraFilterPushLimitIntoScanPushLimitIntoIndexJoinGenerateIndexScansConstrainScanPushFilterIntoIndexJoinNoRemainderPushFilterIntoIndexJoinConstrainIndexJoinScanGenerateInvertedIndexScansNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 38, 58, 71, 89, 106, 122, 145, 156, 166, 181, 194, 210, 222, 231, 239, 261, 286, 306, 328, 349, 371, 393, 415, 437, 460, 470, 487, 500, 520, 533, 548, 568, 589, 616, 646, 669, 690, 717, 739, 756, 776, 795, 815, 832, 851, 869, 890, 907, 930, 948, 978, 1000, 1020, 1037, 1067, 1088, 1110, 1132, 1155, 1185, 1216, 1243, 1271, 1288, 1305, 1328, 1352, 1366, 1386, 1407, 1423, 1435, 1447, 1460, 1471, 1482, 1492, 1503, 1522, 1536, 1557, 1579, 1602, 1627, 1650, 1666, 1689, 1705, 1718, 1733, 1747, 1762, 1779, 1797, 1809, 1825, 1840, 1858, 1874, 1893, 1913, 1931, 1941, 1953, 1970, 1986, 1999, 2011, 2024, 2042, 2061, 2079, 2094, 2112, 2128, 2138, 2160, 2182, 2206, 2227, 2242, 2264, 2283, 2295, 2316, 2336, 2374, 2413, 2435, 2458, 2479, 2501, 2517, 2536, 2555, 2566, 2581, 2597, 2615, 2633, 2661, 2685, 2724, 2741, 2763, 2781, 2794, 2828, 2851, 2873, 2899, 2911}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
