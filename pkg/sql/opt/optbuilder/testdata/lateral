exec-ddl
CREATE TABLE x (a INT PRIMARY KEY)
----

exec-ddl
CREATE TABLE y (b INT PRIMARY KEY)
----

exec-ddl
CREATE TABLE z (c INT PRIMARY KEY)
----

build
SELECT * FROM x, y, z
----
project
 ├── columns: a:1!null b:3!null c:5!null
 └── inner-join (cross)
      ├── columns: a:1!null x.crdb_internal_mvcc_timestamp:2 b:3!null y.crdb_internal_mvcc_timestamp:4 c:5!null z.crdb_internal_mvcc_timestamp:6
      ├── scan x
      │    └── columns: a:1!null x.crdb_internal_mvcc_timestamp:2
      ├── inner-join (cross)
      │    ├── columns: b:3!null y.crdb_internal_mvcc_timestamp:4 c:5!null z.crdb_internal_mvcc_timestamp:6
      │    ├── scan y
      │    │    └── columns: b:3!null y.crdb_internal_mvcc_timestamp:4
      │    ├── scan z
      │    │    └── columns: c:5!null z.crdb_internal_mvcc_timestamp:6
      │    └── filters (true)
      └── filters (true)

build
SELECT * FROM x, LATERAL (SELECT * FROM y WHERE b = a)
----
project
 ├── columns: a:1!null b:3!null
 └── inner-join-apply
      ├── columns: a:1!null x.crdb_internal_mvcc_timestamp:2 b:3!null
      ├── scan x
      │    └── columns: a:1!null x.crdb_internal_mvcc_timestamp:2
      ├── project
      │    ├── columns: b:3!null
      │    └── select
      │         ├── columns: b:3!null y.crdb_internal_mvcc_timestamp:4
      │         ├── scan y
      │         │    └── columns: b:3!null y.crdb_internal_mvcc_timestamp:4
      │         └── filters
      │              └── b:3 = a:1
      └── filters (true)

build
SELECT * FROM x, (SELECT * FROM y WHERE b = a)
----
error (42703): column "a" does not exist

# Ensure that the presence of LATERAL properly affects name resolution.

build
SELECT
  (SELECT b FROM (SELECT c AS a FROM z), LATERAL (SELECT * FROM y WHERE b = a))
FROM x
----
project
 ├── columns: b:7
 ├── scan x
 │    └── columns: a:1!null x.crdb_internal_mvcc_timestamp:2
 └── projections
      └── subquery [as=b:7]
           └── max1-row
                ├── columns: y.b:5!null
                └── project
                     ├── columns: y.b:5!null
                     └── inner-join-apply
                          ├── columns: c:3!null y.b:5!null
                          ├── project
                          │    ├── columns: c:3!null
                          │    └── scan z
                          │         └── columns: c:3!null z.crdb_internal_mvcc_timestamp:4
                          ├── project
                          │    ├── columns: y.b:5!null
                          │    └── select
                          │         ├── columns: y.b:5!null y.crdb_internal_mvcc_timestamp:6
                          │         ├── scan y
                          │         │    └── columns: y.b:5!null y.crdb_internal_mvcc_timestamp:6
                          │         └── filters
                          │              └── y.b:5 = c:3
                          └── filters (true)

build
SELECT
  (SELECT b FROM (SELECT c AS a FROM z), (SELECT * FROM y WHERE b = a))
FROM x
----
project
 ├── columns: b:7
 ├── scan x
 │    └── columns: a:1!null x.crdb_internal_mvcc_timestamp:2
 └── projections
      └── subquery [as=b:7]
           └── max1-row
                ├── columns: y.b:5!null
                └── project
                     ├── columns: y.b:5!null
                     └── inner-join (cross)
                          ├── columns: c:3!null y.b:5!null
                          ├── project
                          │    ├── columns: c:3!null
                          │    └── scan z
                          │         └── columns: c:3!null z.crdb_internal_mvcc_timestamp:4
                          ├── project
                          │    ├── columns: y.b:5!null
                          │    └── select
                          │         ├── columns: y.b:5!null y.crdb_internal_mvcc_timestamp:6
                          │         ├── scan y
                          │         │    └── columns: y.b:5!null y.crdb_internal_mvcc_timestamp:6
                          │         └── filters
                          │              └── y.b:5 = a:1
                          └── filters (true)

build
SELECT * FROM x AS o WHERE EXISTS(SELECT * FROM x, LATERAL (SELECT * FROM y WHERE b = x.a AND o.a = x.a))
----
project
 ├── columns: a:1!null
 └── select
      ├── columns: o.a:1!null o.crdb_internal_mvcc_timestamp:2
      ├── scan x [as=o]
      │    └── columns: o.a:1!null o.crdb_internal_mvcc_timestamp:2
      └── filters
           └── exists
                └── project
                     ├── columns: x.a:3!null b:5!null
                     └── inner-join-apply
                          ├── columns: x.a:3!null x.crdb_internal_mvcc_timestamp:4 b:5!null
                          ├── scan x
                          │    └── columns: x.a:3!null x.crdb_internal_mvcc_timestamp:4
                          ├── project
                          │    ├── columns: b:5!null
                          │    └── select
                          │         ├── columns: b:5!null y.crdb_internal_mvcc_timestamp:6
                          │         ├── scan y
                          │         │    └── columns: b:5!null y.crdb_internal_mvcc_timestamp:6
                          │         └── filters
                          │              └── (b:5 = x.a:3) AND (o.a:1 = x.a:3)
                          └── filters (true)

build
SELECT * FROM x, LATERAL (SELECT * FROM y WHERE b = a), z
----
project
 ├── columns: a:1!null b:3!null c:5!null
 └── inner-join-apply
      ├── columns: a:1!null x.crdb_internal_mvcc_timestamp:2 b:3!null c:5!null z.crdb_internal_mvcc_timestamp:6
      ├── inner-join-apply
      │    ├── columns: a:1!null x.crdb_internal_mvcc_timestamp:2 b:3!null
      │    ├── scan x
      │    │    └── columns: a:1!null x.crdb_internal_mvcc_timestamp:2
      │    ├── project
      │    │    ├── columns: b:3!null
      │    │    └── select
      │    │         ├── columns: b:3!null y.crdb_internal_mvcc_timestamp:4
      │    │         ├── scan y
      │    │         │    └── columns: b:3!null y.crdb_internal_mvcc_timestamp:4
      │    │         └── filters
      │    │              └── b:3 = a:1
      │    └── filters (true)
      ├── scan z
      │    └── columns: c:5!null z.crdb_internal_mvcc_timestamp:6
      └── filters (true)

build
SELECT * FROM x, LATERAL (SELECT * FROM y WHERE b = a), x
----
error (42712): source name "x" specified more than once (missing AS clause)

exec-ddl
CREATE TABLE j (
  id INT PRIMARY KEY,
  j JSONB
)
----

build
SELECT * FROM j, jsonb_array_elements(j.j->'foo')
----
project
 ├── columns: id:1!null j:2 value:4
 └── inner-join-apply
      ├── columns: id:1!null j:2 crdb_internal_mvcc_timestamp:3 value:4
      ├── scan j
      │    └── columns: id:1!null j:2 crdb_internal_mvcc_timestamp:3
      ├── project-set
      │    ├── columns: value:4
      │    ├── values
      │    │    └── ()
      │    └── zip
      │         └── jsonb_array_elements(j:2->'foo')
      └── filters (true)

# Explicit LATERAL makes no difference for SRFs.

build
SELECT * FROM j, LATERAL jsonb_array_elements(j.j->'foo')
----
project
 ├── columns: id:1!null j:2 value:4
 └── inner-join-apply
      ├── columns: id:1!null j:2 crdb_internal_mvcc_timestamp:3 value:4
      ├── scan j
      │    └── columns: id:1!null j:2 crdb_internal_mvcc_timestamp:3
      ├── project-set
      │    ├── columns: value:4
      │    ├── values
      │    │    └── ()
      │    └── zip
      │         └── jsonb_array_elements(j:2->'foo')
      └── filters (true)

# Referencing a lateral SRF from a lateral SRF.

build
SELECT * FROM j, jsonb_array_elements(j.j->'foo') AS e, jsonb_array_elements(e.e->'bar')
----
project
 ├── columns: id:1!null j:2 e:4 value:5
 └── inner-join-apply
      ├── columns: id:1!null j:2 crdb_internal_mvcc_timestamp:3 value:4 value:5
      ├── inner-join-apply
      │    ├── columns: id:1!null j:2 crdb_internal_mvcc_timestamp:3 value:4
      │    ├── scan j
      │    │    └── columns: id:1!null j:2 crdb_internal_mvcc_timestamp:3
      │    ├── project-set
      │    │    ├── columns: value:4
      │    │    ├── values
      │    │    │    └── ()
      │    │    └── zip
      │    │         └── jsonb_array_elements(j:2->'foo')
      │    └── filters (true)
      ├── project-set
      │    ├── columns: value:5
      │    ├── values
      │    │    └── ()
      │    └── zip
      │         └── jsonb_array_elements(value:4->'bar')
      └── filters (true)

build
SELECT
    *
FROM
    j,
    jsonb_array_elements(
        (
            SELECT
                j2.j->'members' AS members
            FROM
                j AS j2
            WHERE
                j2.j->>'name' = j.j->>'name'
        )
    )
----
project
 ├── columns: id:1!null j:2 value:8
 └── inner-join-apply
      ├── columns: j.id:1!null j.j:2 j.crdb_internal_mvcc_timestamp:3 value:8
      ├── scan j
      │    └── columns: j.id:1!null j.j:2 j.crdb_internal_mvcc_timestamp:3
      ├── project-set
      │    ├── columns: value:8
      │    ├── values
      │    │    └── ()
      │    └── zip
      │         └── function: jsonb_array_elements
      │              └── subquery
      │                   └── max1-row
      │                        ├── columns: members:7
      │                        └── project
      │                             ├── columns: members:7
      │                             ├── select
      │                             │    ├── columns: j2.id:4!null j2.j:5 j2.crdb_internal_mvcc_timestamp:6
      │                             │    ├── scan j [as=j2]
      │                             │    │    └── columns: j2.id:4!null j2.j:5 j2.crdb_internal_mvcc_timestamp:6
      │                             │    └── filters
      │                             │         └── (j2.j:5->>'name') = (j.j:2->>'name')
      │                             └── projections
      │                                  └── j2.j:5->'members' [as=members:7]
      └── filters (true)

build
SELECT * FROM x JOIN LATERAL (SELECT * FROM y WHERE b = x.a) ON true
----
project
 ├── columns: a:1!null b:3!null
 └── inner-join-apply
      ├── columns: a:1!null x.crdb_internal_mvcc_timestamp:2 b:3!null
      ├── scan x
      │    └── columns: a:1!null x.crdb_internal_mvcc_timestamp:2
      ├── project
      │    ├── columns: b:3!null
      │    └── select
      │         ├── columns: b:3!null y.crdb_internal_mvcc_timestamp:4
      │         ├── scan y
      │         │    └── columns: b:3!null y.crdb_internal_mvcc_timestamp:4
      │         └── filters
      │              └── b:3 = a:1
      └── filters
           └── true

build
SELECT * FROM x LEFT JOIN LATERAL (SELECT * FROM y WHERE b = x.a) ON true
----
project
 ├── columns: a:1!null b:3
 └── left-join-apply
      ├── columns: a:1!null x.crdb_internal_mvcc_timestamp:2 b:3
      ├── scan x
      │    └── columns: a:1!null x.crdb_internal_mvcc_timestamp:2
      ├── project
      │    ├── columns: b:3!null
      │    └── select
      │         ├── columns: b:3!null y.crdb_internal_mvcc_timestamp:4
      │         ├── scan y
      │         │    └── columns: b:3!null y.crdb_internal_mvcc_timestamp:4
      │         └── filters
      │              └── b:3 = a:1
      └── filters
           └── true

build
SELECT * FROM x RIGHT JOIN LATERAL (SELECT * FROM y WHERE b = x.a) ON true
----
error (42601): The combining JOIN type must be INNER or LEFT for a LATERAL reference

build
SELECT * FROM x FULL OUTER JOIN LATERAL (SELECT * FROM y WHERE b = x.a) ON true
----
error (42601): The combining JOIN type must be INNER or LEFT for a LATERAL reference
