exec-ddl
CREATE TABLE uniq (
  k INT PRIMARY KEY,
  v INT UNIQUE,
  w INT UNIQUE WITHOUT INDEX,
  x INT,
  y INT,
  UNIQUE WITHOUT INDEX (x, y)
)
----

# None of the inserted values have nulls.
build
INSERT INTO uniq VALUES (1, 1, 1, 1, 1), (2, 2, 2, 2, 2)
----
insert uniq
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:7 => uniq.k:1
 │    ├── column2:8 => v:2
 │    ├── column3:9 => uniq.w:3
 │    ├── column4:10 => uniq.x:4
 │    └── column5:11 => uniq.y:5
 ├── input binding: &1
 ├── values
 │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    ├── (1, 1, 1, 1, 1)
 │    └── (2, 2, 2, 2, 2)
 └── unique-checks
      ├── unique-checks-item: uniq(w)
      │    └── semi-join (hash)
      │         ├── columns: w:12!null k:13!null
      │         ├── with-scan &1
      │         │    ├── columns: w:12!null k:13!null
      │         │    └── mapping:
      │         │         ├──  column3:9 => w:12
      │         │         └──  column1:7 => k:13
      │         ├── scan uniq
      │         │    └── columns: uniq.k:14!null uniq.w:16
      │         └── filters
      │              ├── w:12 = uniq.w:16
      │              └── k:13 != uniq.k:14
      └── unique-checks-item: uniq(x,y)
           └── semi-join (hash)
                ├── columns: x:20!null y:21!null k:22!null
                ├── with-scan &1
                │    ├── columns: x:20!null y:21!null k:22!null
                │    └── mapping:
                │         ├──  column4:10 => x:20
                │         ├──  column5:11 => y:21
                │         └──  column1:7 => k:22
                ├── scan uniq
                │    └── columns: uniq.k:23!null uniq.x:26 uniq.y:27
                └── filters
                     ├── x:20 = uniq.x:26
                     ├── y:21 = uniq.y:27
                     └── k:22 != uniq.k:23

# Some of the inserted values have nulls.
build
INSERT INTO uniq VALUES (1, 1, 1, 1, 1), (2, 2, 2, 2, 2), (3, NULL, NULL, NULL, 3)
----
insert uniq
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:7 => uniq.k:1
 │    ├── column2:8 => v:2
 │    ├── column3:9 => uniq.w:3
 │    ├── column4:10 => uniq.x:4
 │    └── column5:11 => uniq.y:5
 ├── input binding: &1
 ├── values
 │    ├── columns: column1:7!null column2:8 column3:9 column4:10 column5:11!null
 │    ├── (1, 1, 1, 1, 1)
 │    ├── (2, 2, 2, 2, 2)
 │    └── (3, NULL::INT8, NULL::INT8, NULL::INT8, 3)
 └── unique-checks
      ├── unique-checks-item: uniq(w)
      │    └── semi-join (hash)
      │         ├── columns: w:12 k:13!null
      │         ├── with-scan &1
      │         │    ├── columns: w:12 k:13!null
      │         │    └── mapping:
      │         │         ├──  column3:9 => w:12
      │         │         └──  column1:7 => k:13
      │         ├── scan uniq
      │         │    └── columns: uniq.k:14!null uniq.w:16
      │         └── filters
      │              ├── w:12 = uniq.w:16
      │              └── k:13 != uniq.k:14
      └── unique-checks-item: uniq(x,y)
           └── semi-join (hash)
                ├── columns: x:20 y:21!null k:22!null
                ├── with-scan &1
                │    ├── columns: x:20 y:21!null k:22!null
                │    └── mapping:
                │         ├──  column4:10 => x:20
                │         ├──  column5:11 => y:21
                │         └──  column1:7 => k:22
                ├── scan uniq
                │    └── columns: uniq.k:23!null uniq.x:26 uniq.y:27
                └── filters
                     ├── x:20 = uniq.x:26
                     ├── y:21 = uniq.y:27
                     └── k:22 != uniq.k:23

# No need to plan checks for w since it's aways null.
build
INSERT INTO uniq VALUES (1, 1, NULL, 1, 1), (2, 2, NULL, 2, 2)
----
insert uniq
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:7 => uniq.k:1
 │    ├── column2:8 => v:2
 │    ├── column3:9 => w:3
 │    ├── column4:10 => uniq.x:4
 │    └── column5:11 => uniq.y:5
 ├── input binding: &1
 ├── values
 │    ├── columns: column1:7!null column2:8!null column3:9 column4:10!null column5:11!null
 │    ├── (1, 1, NULL::INT8, 1, 1)
 │    └── (2, 2, NULL::INT8, 2, 2)
 └── unique-checks
      └── unique-checks-item: uniq(x,y)
           └── semi-join (hash)
                ├── columns: x:12!null y:13!null k:14!null
                ├── with-scan &1
                │    ├── columns: x:12!null y:13!null k:14!null
                │    └── mapping:
                │         ├──  column4:10 => x:12
                │         ├──  column5:11 => y:13
                │         └──  column1:7 => k:14
                ├── scan uniq
                │    └── columns: uniq.k:15!null uniq.x:18 uniq.y:19
                └── filters
                     ├── x:12 = uniq.x:18
                     ├── y:13 = uniq.y:19
                     └── k:14 != uniq.k:15

# No need to plan checks for x,y since x is aways null.
build
INSERT INTO uniq VALUES (1, 1, 1, NULL, 1), (2, 2, NULL, NULL, 2)
----
insert uniq
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:7 => uniq.k:1
 │    ├── column2:8 => v:2
 │    ├── column3:9 => uniq.w:3
 │    ├── column4:10 => x:4
 │    └── column5:11 => y:5
 ├── input binding: &1
 ├── values
 │    ├── columns: column1:7!null column2:8!null column3:9 column4:10 column5:11!null
 │    ├── (1, 1, 1, NULL::INT8, 1)
 │    └── (2, 2, NULL::INT8, NULL::INT8, 2)
 └── unique-checks
      └── unique-checks-item: uniq(w)
           └── semi-join (hash)
                ├── columns: w:12 k:13!null
                ├── with-scan &1
                │    ├── columns: w:12 k:13!null
                │    └── mapping:
                │         ├──  column3:9 => w:12
                │         └──  column1:7 => k:13
                ├── scan uniq
                │    └── columns: uniq.k:14!null uniq.w:16
                └── filters
                     ├── w:12 = uniq.w:16
                     └── k:13 != uniq.k:14

# No need to plan checks for x,y since y is aways null.
build
INSERT INTO uniq VALUES (1, 1, 1, 1, NULL), (2, 2, 2, 2, NULL)
----
insert uniq
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:7 => uniq.k:1
 │    ├── column2:8 => v:2
 │    ├── column3:9 => uniq.w:3
 │    ├── column4:10 => x:4
 │    └── column5:11 => y:5
 ├── input binding: &1
 ├── values
 │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11
 │    ├── (1, 1, 1, 1, NULL::INT8)
 │    └── (2, 2, 2, 2, NULL::INT8)
 └── unique-checks
      └── unique-checks-item: uniq(w)
           └── semi-join (hash)
                ├── columns: w:12!null k:13!null
                ├── with-scan &1
                │    ├── columns: w:12!null k:13!null
                │    └── mapping:
                │         ├──  column3:9 => w:12
                │         └──  column1:7 => k:13
                ├── scan uniq
                │    └── columns: uniq.k:14!null uniq.w:16
                └── filters
                     ├── w:12 = uniq.w:16
                     └── k:13 != uniq.k:14

# No need to plan any checks, since w, x and y are aways null.
build
INSERT INTO uniq VALUES (1, 1, NULL, NULL, NULL), (2, 2, NULL, NULL, NULL)
----
insert uniq
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:7 => k:1
 │    ├── column2:8 => v:2
 │    ├── column3:9 => w:3
 │    ├── column4:10 => x:4
 │    └── column5:11 => y:5
 └── values
      ├── columns: column1:7!null column2:8!null column3:9 column4:10 column5:11
      ├── (1, 1, NULL::INT8, NULL::INT8, NULL::INT8)
      └── (2, 2, NULL::INT8, NULL::INT8, NULL::INT8)

# Use all the unique indexes and constraints as arbiters for DO NOTHING with no
# conflict columns.
# TODO(rytaft): we should be able to remove the unique checks in this case
# (see #59119).
build
INSERT INTO uniq VALUES (1, 2, 3, 4, 5) ON CONFLICT DO NOTHING
----
insert uniq
 ├── columns: <none>
 ├── arbiter indexes: primary uniq_v_key
 ├── arbiter constraints: unique_w unique_x_y
 ├── insert-mapping:
 │    ├── column1:7 => uniq.k:1
 │    ├── column2:8 => v:2
 │    ├── column3:9 => uniq.w:3
 │    ├── column4:10 => uniq.x:4
 │    └── column5:11 => uniq.y:5
 ├── input binding: &1
 ├── upsert-distinct-on
 │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    ├── grouping columns: column4:10!null column5:11!null
 │    ├── upsert-distinct-on
 │    │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    │    ├── grouping columns: column3:9!null
 │    │    ├── upsert-distinct-on
 │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    │    │    ├── grouping columns: column2:8!null
 │    │    │    ├── upsert-distinct-on
 │    │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    │    │    │    ├── grouping columns: column1:7!null
 │    │    │    │    ├── anti-join (hash)
 │    │    │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    │    │    │    │    ├── anti-join (hash)
 │    │    │    │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    │    │    │    │    │    ├── anti-join (hash)
 │    │    │    │    │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    │    │    │    │    │    │    ├── anti-join (hash)
 │    │    │    │    │    │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    │    │    │    │    │    │    │    ├── values
 │    │    │    │    │    │    │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    │    │    │    │    │    │    │    │    └── (1, 2, 3, 4, 5)
 │    │    │    │    │    │    │    │    ├── scan uniq
 │    │    │    │    │    │    │    │    │    └── columns: uniq.k:12!null v:13 uniq.w:14 uniq.x:15 uniq.y:16
 │    │    │    │    │    │    │    │    └── filters
 │    │    │    │    │    │    │    │         └── column1:7 = uniq.k:12
 │    │    │    │    │    │    │    ├── scan uniq
 │    │    │    │    │    │    │    │    └── columns: uniq.k:18!null v:19 uniq.w:20 uniq.x:21 uniq.y:22
 │    │    │    │    │    │    │    └── filters
 │    │    │    │    │    │    │         └── column2:8 = v:19
 │    │    │    │    │    │    ├── scan uniq
 │    │    │    │    │    │    │    └── columns: uniq.k:24!null v:25 uniq.w:26 uniq.x:27 uniq.y:28
 │    │    │    │    │    │    └── filters
 │    │    │    │    │    │         └── column3:9 = uniq.w:26
 │    │    │    │    │    ├── scan uniq
 │    │    │    │    │    │    └── columns: uniq.k:30!null v:31 uniq.w:32 uniq.x:33 uniq.y:34
 │    │    │    │    │    └── filters
 │    │    │    │    │         ├── column4:10 = uniq.x:33
 │    │    │    │    │         └── column5:11 = uniq.y:34
 │    │    │    │    └── aggregations
 │    │    │    │         ├── first-agg [as=column2:8]
 │    │    │    │         │    └── column2:8
 │    │    │    │         ├── first-agg [as=column3:9]
 │    │    │    │         │    └── column3:9
 │    │    │    │         ├── first-agg [as=column4:10]
 │    │    │    │         │    └── column4:10
 │    │    │    │         └── first-agg [as=column5:11]
 │    │    │    │              └── column5:11
 │    │    │    └── aggregations
 │    │    │         ├── first-agg [as=column1:7]
 │    │    │         │    └── column1:7
 │    │    │         ├── first-agg [as=column3:9]
 │    │    │         │    └── column3:9
 │    │    │         ├── first-agg [as=column4:10]
 │    │    │         │    └── column4:10
 │    │    │         └── first-agg [as=column5:11]
 │    │    │              └── column5:11
 │    │    └── aggregations
 │    │         ├── first-agg [as=column1:7]
 │    │         │    └── column1:7
 │    │         ├── first-agg [as=column2:8]
 │    │         │    └── column2:8
 │    │         ├── first-agg [as=column4:10]
 │    │         │    └── column4:10
 │    │         └── first-agg [as=column5:11]
 │    │              └── column5:11
 │    └── aggregations
 │         ├── first-agg [as=column1:7]
 │         │    └── column1:7
 │         ├── first-agg [as=column2:8]
 │         │    └── column2:8
 │         └── first-agg [as=column3:9]
 │              └── column3:9
 └── unique-checks
      ├── unique-checks-item: uniq(w)
      │    └── semi-join (hash)
      │         ├── columns: w:36!null k:37!null
      │         ├── with-scan &1
      │         │    ├── columns: w:36!null k:37!null
      │         │    └── mapping:
      │         │         ├──  column3:9 => w:36
      │         │         └──  column1:7 => k:37
      │         ├── scan uniq
      │         │    └── columns: uniq.k:38!null uniq.w:40
      │         └── filters
      │              ├── w:36 = uniq.w:40
      │              └── k:37 != uniq.k:38
      └── unique-checks-item: uniq(x,y)
           └── semi-join (hash)
                ├── columns: x:44!null y:45!null k:46!null
                ├── with-scan &1
                │    ├── columns: x:44!null y:45!null k:46!null
                │    └── mapping:
                │         ├──  column4:10 => x:44
                │         ├──  column5:11 => y:45
                │         └──  column1:7 => k:46
                ├── scan uniq
                │    └── columns: uniq.k:47!null uniq.x:50 uniq.y:51
                └── filters
                     ├── x:44 = uniq.x:50
                     ├── y:45 = uniq.y:51
                     └── k:46 != uniq.k:47

# On conflict clause references unique without index constraint.
# TODO(rytaft): we should be able to remove the unique check for w in this case
# (see #59119).
build
INSERT INTO uniq VALUES (1, 2, 3, 4, 5) ON CONFLICT (w) DO NOTHING
----
insert uniq
 ├── columns: <none>
 ├── arbiter constraints: unique_w
 ├── insert-mapping:
 │    ├── column1:7 => uniq.k:1
 │    ├── column2:8 => v:2
 │    ├── column3:9 => uniq.w:3
 │    ├── column4:10 => uniq.x:4
 │    └── column5:11 => uniq.y:5
 ├── input binding: &1
 ├── upsert-distinct-on
 │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    ├── grouping columns: column3:9!null
 │    ├── anti-join (hash)
 │    │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    │    ├── values
 │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null column5:11!null
 │    │    │    └── (1, 2, 3, 4, 5)
 │    │    ├── scan uniq
 │    │    │    └── columns: uniq.k:12!null v:13 uniq.w:14 uniq.x:15 uniq.y:16
 │    │    └── filters
 │    │         └── column3:9 = uniq.w:14
 │    └── aggregations
 │         ├── first-agg [as=column1:7]
 │         │    └── column1:7
 │         ├── first-agg [as=column2:8]
 │         │    └── column2:8
 │         ├── first-agg [as=column4:10]
 │         │    └── column4:10
 │         └── first-agg [as=column5:11]
 │              └── column5:11
 └── unique-checks
      ├── unique-checks-item: uniq(w)
      │    └── semi-join (hash)
      │         ├── columns: w:18!null k:19!null
      │         ├── with-scan &1
      │         │    ├── columns: w:18!null k:19!null
      │         │    └── mapping:
      │         │         ├──  column3:9 => w:18
      │         │         └──  column1:7 => k:19
      │         ├── scan uniq
      │         │    └── columns: uniq.k:20!null uniq.w:22
      │         └── filters
      │              ├── w:18 = uniq.w:22
      │              └── k:19 != uniq.k:20
      └── unique-checks-item: uniq(x,y)
           └── semi-join (hash)
                ├── columns: x:26!null y:27!null k:28!null
                ├── with-scan &1
                │    ├── columns: x:26!null y:27!null k:28!null
                │    └── mapping:
                │         ├──  column4:10 => x:26
                │         ├──  column5:11 => y:27
                │         └──  column1:7 => k:28
                ├── scan uniq
                │    └── columns: uniq.k:29!null uniq.x:32 uniq.y:33
                └── filters
                     ├── x:26 = uniq.x:32
                     ├── y:27 = uniq.y:33
                     └── k:28 != uniq.k:29

exec-ddl
CREATE TABLE other (k INT, v INT, w INT NOT NULL, x INT, y INT)
----

# Insert with non-constant input.
build
INSERT INTO uniq SELECT k, v, w, x, y FROM other
----
insert uniq
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── other.k:7 => uniq.k:1
 │    ├── other.v:8 => uniq.v:2
 │    ├── other.w:9 => uniq.w:3
 │    ├── other.x:10 => uniq.x:4
 │    └── other.y:11 => uniq.y:5
 ├── input binding: &1
 ├── project
 │    ├── columns: other.k:7 other.v:8 other.w:9!null other.x:10 other.y:11
 │    └── scan other
 │         └── columns: other.k:7 other.v:8 other.w:9!null other.x:10 other.y:11 rowid:12!null other.crdb_internal_mvcc_timestamp:13
 └── unique-checks
      ├── unique-checks-item: uniq(w)
      │    └── semi-join (hash)
      │         ├── columns: w:14!null k:15
      │         ├── with-scan &1
      │         │    ├── columns: w:14!null k:15
      │         │    └── mapping:
      │         │         ├──  other.w:9 => w:14
      │         │         └──  other.k:7 => k:15
      │         ├── scan uniq
      │         │    └── columns: uniq.k:16!null uniq.w:18
      │         └── filters
      │              ├── w:14 = uniq.w:18
      │              └── k:15 != uniq.k:16
      └── unique-checks-item: uniq(x,y)
           └── semi-join (hash)
                ├── columns: x:22 y:23 k:24
                ├── with-scan &1
                │    ├── columns: x:22 y:23 k:24
                │    └── mapping:
                │         ├──  other.x:10 => x:22
                │         ├──  other.y:11 => y:23
                │         └──  other.k:7 => k:24
                ├── scan uniq
                │    └── columns: uniq.k:25!null uniq.x:28 uniq.y:29
                └── filters
                     ├── x:22 = uniq.x:28
                     ├── y:23 = uniq.y:29
                     └── k:24 != uniq.k:25

exec-ddl
CREATE TABLE uniq_overlaps_pk (
  a INT,
  b INT,
  c INT,
  d INT,
  PRIMARY KEY (a, b),
  UNIQUE WITHOUT INDEX (b, c),
  UNIQUE WITHOUT INDEX (a, b, d),
  UNIQUE WITHOUT INDEX (a),
  UNIQUE WITHOUT INDEX (c, d)
)
----

# Insert with constant input.
# Add inequality filters for the primary key columns that are not part of each
# unique constraint to prevent rows from matching themselves in the semi join.
build
INSERT INTO uniq_overlaps_pk VALUES (1, 1, 1, 1), (2, 2, 2, 2)
----
insert uniq_overlaps_pk
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:6 => uniq_overlaps_pk.a:1
 │    ├── column2:7 => uniq_overlaps_pk.b:2
 │    ├── column3:8 => uniq_overlaps_pk.c:3
 │    └── column4:9 => uniq_overlaps_pk.d:4
 ├── input binding: &1
 ├── values
 │    ├── columns: column1:6!null column2:7!null column3:8!null column4:9!null
 │    ├── (1, 1, 1, 1)
 │    └── (2, 2, 2, 2)
 └── unique-checks
      ├── unique-checks-item: uniq_overlaps_pk(b,c)
      │    └── semi-join (hash)
      │         ├── columns: b:10!null c:11!null a:12!null
      │         ├── with-scan &1
      │         │    ├── columns: b:10!null c:11!null a:12!null
      │         │    └── mapping:
      │         │         ├──  column2:7 => b:10
      │         │         ├──  column3:8 => c:11
      │         │         └──  column1:6 => a:12
      │         ├── scan uniq_overlaps_pk
      │         │    └── columns: uniq_overlaps_pk.a:13!null uniq_overlaps_pk.b:14!null uniq_overlaps_pk.c:15
      │         └── filters
      │              ├── b:10 = uniq_overlaps_pk.b:14
      │              ├── c:11 = uniq_overlaps_pk.c:15
      │              └── a:12 != uniq_overlaps_pk.a:13
      ├── unique-checks-item: uniq_overlaps_pk(a)
      │    └── semi-join (hash)
      │         ├── columns: a:18!null b:19!null
      │         ├── with-scan &1
      │         │    ├── columns: a:18!null b:19!null
      │         │    └── mapping:
      │         │         ├──  column1:6 => a:18
      │         │         └──  column2:7 => b:19
      │         ├── scan uniq_overlaps_pk
      │         │    └── columns: uniq_overlaps_pk.a:20!null uniq_overlaps_pk.b:21!null
      │         └── filters
      │              ├── a:18 = uniq_overlaps_pk.a:20
      │              └── b:19 != uniq_overlaps_pk.b:21
      └── unique-checks-item: uniq_overlaps_pk(c,d)
           └── semi-join (hash)
                ├── columns: c:25!null d:26!null a:27!null b:28!null
                ├── with-scan &1
                │    ├── columns: c:25!null d:26!null a:27!null b:28!null
                │    └── mapping:
                │         ├──  column3:8 => c:25
                │         ├──  column4:9 => d:26
                │         ├──  column1:6 => a:27
                │         └──  column2:7 => b:28
                ├── scan uniq_overlaps_pk
                │    └── columns: uniq_overlaps_pk.a:29!null uniq_overlaps_pk.b:30!null uniq_overlaps_pk.c:31 uniq_overlaps_pk.d:32
                └── filters
                     ├── c:25 = uniq_overlaps_pk.c:31
                     ├── d:26 = uniq_overlaps_pk.d:32
                     └── (a:27 != uniq_overlaps_pk.a:29) OR (b:28 != uniq_overlaps_pk.b:30)

# Insert with non-constant input.
# Add inequality filters for the primary key columns that are not part of each
# unique constraint to prevent rows from matching themselves in the semi join.
build
INSERT INTO uniq_overlaps_pk SELECT k, v, x, y FROM other
----
insert uniq_overlaps_pk
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── k:6 => uniq_overlaps_pk.a:1
 │    ├── v:7 => uniq_overlaps_pk.b:2
 │    ├── x:9 => uniq_overlaps_pk.c:3
 │    └── y:10 => uniq_overlaps_pk.d:4
 ├── input binding: &1
 ├── project
 │    ├── columns: k:6 v:7 x:9 y:10
 │    └── scan other
 │         └── columns: k:6 v:7 w:8!null x:9 y:10 rowid:11!null other.crdb_internal_mvcc_timestamp:12
 └── unique-checks
      ├── unique-checks-item: uniq_overlaps_pk(b,c)
      │    └── semi-join (hash)
      │         ├── columns: b:13 c:14 a:15
      │         ├── with-scan &1
      │         │    ├── columns: b:13 c:14 a:15
      │         │    └── mapping:
      │         │         ├──  v:7 => b:13
      │         │         ├──  x:9 => c:14
      │         │         └──  k:6 => a:15
      │         ├── scan uniq_overlaps_pk
      │         │    └── columns: uniq_overlaps_pk.a:16!null uniq_overlaps_pk.b:17!null uniq_overlaps_pk.c:18
      │         └── filters
      │              ├── b:13 = uniq_overlaps_pk.b:17
      │              ├── c:14 = uniq_overlaps_pk.c:18
      │              └── a:15 != uniq_overlaps_pk.a:16
      ├── unique-checks-item: uniq_overlaps_pk(a)
      │    └── semi-join (hash)
      │         ├── columns: a:21 b:22
      │         ├── with-scan &1
      │         │    ├── columns: a:21 b:22
      │         │    └── mapping:
      │         │         ├──  k:6 => a:21
      │         │         └──  v:7 => b:22
      │         ├── scan uniq_overlaps_pk
      │         │    └── columns: uniq_overlaps_pk.a:23!null uniq_overlaps_pk.b:24!null
      │         └── filters
      │              ├── a:21 = uniq_overlaps_pk.a:23
      │              └── b:22 != uniq_overlaps_pk.b:24
      └── unique-checks-item: uniq_overlaps_pk(c,d)
           └── semi-join (hash)
                ├── columns: c:28 d:29 a:30 b:31
                ├── with-scan &1
                │    ├── columns: c:28 d:29 a:30 b:31
                │    └── mapping:
                │         ├──  x:9 => c:28
                │         ├──  y:10 => d:29
                │         ├──  k:6 => a:30
                │         └──  v:7 => b:31
                ├── scan uniq_overlaps_pk
                │    └── columns: uniq_overlaps_pk.a:32!null uniq_overlaps_pk.b:33!null uniq_overlaps_pk.c:34 uniq_overlaps_pk.d:35
                └── filters
                     ├── c:28 = uniq_overlaps_pk.c:34
                     ├── d:29 = uniq_overlaps_pk.d:35
                     └── (a:30 != uniq_overlaps_pk.a:32) OR (b:31 != uniq_overlaps_pk.b:33)

exec-ddl
CREATE TABLE uniq_hidden_pk (
  a INT,
  b INT,
  c INT,
  d INT,
  UNIQUE WITHOUT INDEX (b, c),
  UNIQUE WITHOUT INDEX (a, b, d),
  UNIQUE WITHOUT INDEX (a)
)
----

# Insert with constant input.
# Add inequality filters for the hidden primary key column.
build
INSERT INTO uniq_hidden_pk VALUES (1, 1, 1, 1), (2, 2, 2, 2)
----
insert uniq_hidden_pk
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:7 => uniq_hidden_pk.a:1
 │    ├── column2:8 => uniq_hidden_pk.b:2
 │    ├── column3:9 => uniq_hidden_pk.c:3
 │    ├── column4:10 => uniq_hidden_pk.d:4
 │    └── column11:11 => uniq_hidden_pk.rowid:5
 ├── input binding: &1
 ├── project
 │    ├── columns: column11:11 column1:7!null column2:8!null column3:9!null column4:10!null
 │    ├── values
 │    │    ├── columns: column1:7!null column2:8!null column3:9!null column4:10!null
 │    │    ├── (1, 1, 1, 1)
 │    │    └── (2, 2, 2, 2)
 │    └── projections
 │         └── unique_rowid() [as=column11:11]
 └── unique-checks
      ├── unique-checks-item: uniq_hidden_pk(b,c)
      │    └── semi-join (hash)
      │         ├── columns: b:12!null c:13!null rowid:14
      │         ├── with-scan &1
      │         │    ├── columns: b:12!null c:13!null rowid:14
      │         │    └── mapping:
      │         │         ├──  column2:8 => b:12
      │         │         ├──  column3:9 => c:13
      │         │         └──  column11:11 => rowid:14
      │         ├── scan uniq_hidden_pk
      │         │    └── columns: uniq_hidden_pk.b:16 uniq_hidden_pk.c:17 uniq_hidden_pk.rowid:19!null
      │         └── filters
      │              ├── b:12 = uniq_hidden_pk.b:16
      │              ├── c:13 = uniq_hidden_pk.c:17
      │              └── rowid:14 != uniq_hidden_pk.rowid:19
      ├── unique-checks-item: uniq_hidden_pk(a,b,d)
      │    └── semi-join (hash)
      │         ├── columns: a:21!null b:22!null d:23!null rowid:24
      │         ├── with-scan &1
      │         │    ├── columns: a:21!null b:22!null d:23!null rowid:24
      │         │    └── mapping:
      │         │         ├──  column1:7 => a:21
      │         │         ├──  column2:8 => b:22
      │         │         ├──  column4:10 => d:23
      │         │         └──  column11:11 => rowid:24
      │         ├── scan uniq_hidden_pk
      │         │    └── columns: uniq_hidden_pk.a:25 uniq_hidden_pk.b:26 uniq_hidden_pk.d:28 uniq_hidden_pk.rowid:29!null
      │         └── filters
      │              ├── a:21 = uniq_hidden_pk.a:25
      │              ├── b:22 = uniq_hidden_pk.b:26
      │              ├── d:23 = uniq_hidden_pk.d:28
      │              └── rowid:24 != uniq_hidden_pk.rowid:29
      └── unique-checks-item: uniq_hidden_pk(a)
           └── semi-join (hash)
                ├── columns: a:31!null rowid:32
                ├── with-scan &1
                │    ├── columns: a:31!null rowid:32
                │    └── mapping:
                │         ├──  column1:7 => a:31
                │         └──  column11:11 => rowid:32
                ├── scan uniq_hidden_pk
                │    └── columns: uniq_hidden_pk.a:33 uniq_hidden_pk.rowid:37!null
                └── filters
                     ├── a:31 = uniq_hidden_pk.a:33
                     └── rowid:32 != uniq_hidden_pk.rowid:37

# Insert with non-constant input.
# Add inequality filters for the hidden primary key column.
build
INSERT INTO uniq_hidden_pk SELECT k, v, x, y FROM other
----
insert uniq_hidden_pk
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── k:7 => uniq_hidden_pk.a:1
 │    ├── v:8 => uniq_hidden_pk.b:2
 │    ├── x:10 => uniq_hidden_pk.c:3
 │    ├── y:11 => uniq_hidden_pk.d:4
 │    └── column14:14 => uniq_hidden_pk.rowid:5
 ├── input binding: &1
 ├── project
 │    ├── columns: column14:14 k:7 v:8 x:10 y:11
 │    ├── project
 │    │    ├── columns: k:7 v:8 x:10 y:11
 │    │    └── scan other
 │    │         └── columns: k:7 v:8 w:9!null x:10 y:11 other.rowid:12!null other.crdb_internal_mvcc_timestamp:13
 │    └── projections
 │         └── unique_rowid() [as=column14:14]
 └── unique-checks
      ├── unique-checks-item: uniq_hidden_pk(b,c)
      │    └── semi-join (hash)
      │         ├── columns: b:15 c:16 rowid:17
      │         ├── with-scan &1
      │         │    ├── columns: b:15 c:16 rowid:17
      │         │    └── mapping:
      │         │         ├──  v:8 => b:15
      │         │         ├──  x:10 => c:16
      │         │         └──  column14:14 => rowid:17
      │         ├── scan uniq_hidden_pk
      │         │    └── columns: uniq_hidden_pk.b:19 uniq_hidden_pk.c:20 uniq_hidden_pk.rowid:22!null
      │         └── filters
      │              ├── b:15 = uniq_hidden_pk.b:19
      │              ├── c:16 = uniq_hidden_pk.c:20
      │              └── rowid:17 != uniq_hidden_pk.rowid:22
      ├── unique-checks-item: uniq_hidden_pk(a,b,d)
      │    └── semi-join (hash)
      │         ├── columns: a:24 b:25 d:26 rowid:27
      │         ├── with-scan &1
      │         │    ├── columns: a:24 b:25 d:26 rowid:27
      │         │    └── mapping:
      │         │         ├──  k:7 => a:24
      │         │         ├──  v:8 => b:25
      │         │         ├──  y:11 => d:26
      │         │         └──  column14:14 => rowid:27
      │         ├── scan uniq_hidden_pk
      │         │    └── columns: uniq_hidden_pk.a:28 uniq_hidden_pk.b:29 uniq_hidden_pk.d:31 uniq_hidden_pk.rowid:32!null
      │         └── filters
      │              ├── a:24 = uniq_hidden_pk.a:28
      │              ├── b:25 = uniq_hidden_pk.b:29
      │              ├── d:26 = uniq_hidden_pk.d:31
      │              └── rowid:27 != uniq_hidden_pk.rowid:32
      └── unique-checks-item: uniq_hidden_pk(a)
           └── semi-join (hash)
                ├── columns: a:34 rowid:35
                ├── with-scan &1
                │    ├── columns: a:34 rowid:35
                │    └── mapping:
                │         ├──  k:7 => a:34
                │         └──  column14:14 => rowid:35
                ├── scan uniq_hidden_pk
                │    └── columns: uniq_hidden_pk.a:36 uniq_hidden_pk.rowid:40!null
                └── filters
                     ├── a:34 = uniq_hidden_pk.a:36
                     └── rowid:35 != uniq_hidden_pk.rowid:40
