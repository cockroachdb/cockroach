exec-ddl
CREATE TABLE t (
  a INT PRIMARY KEY,
  b INT,
  v INT AS (a+b) VIRTUAL
)
----

exec-ddl
CREATE TABLE t_idx (
  a INT PRIMARY KEY,
  b INT,
  v INT AS (a+b) VIRTUAL,
  INDEX (v)
)
----

exec-ddl
CREATE TABLE t_idx2 (
  a INT PRIMARY KEY,
  b INT,
  c INT,
  v INT AS (a+b) VIRTUAL,
  w INT AS (c+1) VIRTUAL,
  INDEX (v),
  UNIQUE (w)
)
----

exec-ddl
CREATE TABLE t_check (
  a INT PRIMARY KEY,
  b INT,
  v INT AS (a+b) VIRTUAL CHECK (v >= 10),
  w INT AS (a*b) VIRTUAL,
  CHECK (v < w)
)
----

# -- SELECT tests --

# Column v should be produced.
build
SELECT * FROM t
----
project
 ├── columns: a:1!null b:2 v:3
 └── project
      ├── columns: v:3 a:1!null b:2 crdb_internal_mvcc_timestamp:4
      ├── scan t
      │    ├── columns: a:1!null b:2 crdb_internal_mvcc_timestamp:4
      │    └── computed column expressions
      │         └── v:3
      │              └── a:1 + b:2
      └── projections
           └── a:1 + b:2 [as=v:3]

# Column v can be selected explicitly.
build
SELECT v FROM t
----
project
 ├── columns: v:3
 └── project
      ├── columns: v:3 a:1!null b:2 crdb_internal_mvcc_timestamp:4
      ├── scan t
      │    ├── columns: a:1!null b:2 crdb_internal_mvcc_timestamp:4
      │    └── computed column expressions
      │         └── v:3
      │              └── a:1 + b:2
      └── projections
           └── a:1 + b:2 [as=v:3]

# The projection for v will be removed by norm rules.
build
SELECT b FROM t
----
project
 ├── columns: b:2
 └── project
      ├── columns: v:3 a:1!null b:2 crdb_internal_mvcc_timestamp:4
      ├── scan t
      │    ├── columns: a:1!null b:2 crdb_internal_mvcc_timestamp:4
      │    └── computed column expressions
      │         └── v:3
      │              └── a:1 + b:2
      └── projections
           └── a:1 + b:2 [as=v:3]

# -- INSERT tests --

build
INSERT INTO t VALUES (1, 1)
----
insert t
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:5 => a:1
 │    ├── column2:6 => b:2
 │    └── v:7 => t.v:3
 └── project
      ├── columns: v:7!null column1:5!null column2:6!null
      ├── values
      │    ├── columns: column1:5!null column2:6!null
      │    └── (1, 1)
      └── projections
           └── column1:5 + column2:6 [as=v:7]

build
INSERT INTO t(a) VALUES (1)
----
insert t
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:5 => a:1
 │    ├── b:6 => t.b:2
 │    └── v:7 => t.v:3
 └── project
      ├── columns: v:7 column1:5!null b:6
      ├── project
      │    ├── columns: b:6 column1:5!null
      │    ├── values
      │    │    ├── columns: column1:5!null
      │    │    └── (1,)
      │    └── projections
      │         └── NULL::INT8 [as=b:6]
      └── projections
           └── column1:5 + b:6 [as=v:7]

build
INSERT INTO t(a, b, v) VALUES (1, 1, 1)
----
error (55000): cannot write directly to computed column "v"

build
INSERT INTO t VALUES (1, 1) RETURNING v
----
project
 ├── columns: v:3!null
 └── insert t
      ├── columns: a:1!null b:2!null t.v:3!null
      ├── insert-mapping:
      │    ├── column1:5 => a:1
      │    ├── column2:6 => b:2
      │    └── v:7 => t.v:3
      └── project
           ├── columns: v:7!null column1:5!null column2:6!null
           ├── values
           │    ├── columns: column1:5!null column2:6!null
           │    └── (1, 1)
           └── projections
                └── column1:5 + column2:6 [as=v:7]

build
INSERT INTO t_idx VALUES (1, 1)
----
insert t_idx
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:5 => a:1
 │    ├── column2:6 => b:2
 │    └── v:7 => t_idx.v:3
 └── project
      ├── columns: v:7!null column1:5!null column2:6!null
      ├── values
      │    ├── columns: column1:5!null column2:6!null
      │    └── (1, 1)
      └── projections
           └── column1:5 + column2:6 [as=v:7]

build
INSERT INTO t_check VALUES (1, 1)
----
insert t_check
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:6 => a:1
 │    ├── column2:7 => b:2
 │    ├── v:8 => t_check.v:3
 │    └── w:9 => t_check.w:4
 ├── check columns: check1:10 check2:11
 └── project
      ├── columns: check1:10!null check2:11!null column1:6!null column2:7!null v:8!null w:9!null
      ├── project
      │    ├── columns: v:8!null w:9!null column1:6!null column2:7!null
      │    ├── values
      │    │    ├── columns: column1:6!null column2:7!null
      │    │    └── (1, 1)
      │    └── projections
      │         ├── column1:6 + column2:7 [as=v:8]
      │         └── column1:6 * column2:7 [as=w:9]
      └── projections
           ├── v:8 < w:9 [as=check1:10]
           └── v:8 >= 10 [as=check2:11]

# -- DELETE tests --

build
DELETE FROM t WHERE a > 1
----
delete t
 ├── columns: <none>
 ├── fetch columns: a:5 b:6 v:7
 └── select
      ├── columns: a:5!null b:6 v:7 crdb_internal_mvcc_timestamp:8
      ├── project
      │    ├── columns: v:7 a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    ├── scan t
      │    │    ├── columns: a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    └── computed column expressions
      │    │         └── v:7
      │    │              └── a:5 + b:6
      │    └── projections
      │         └── a:5 + b:6 [as=v:7]
      └── filters
           └── a:5 > 1

build
DELETE FROM t WHERE a > 1 RETURNING v
----
project
 ├── columns: v:3
 └── delete t
      ├── columns: a:1!null b:2 v:3
      ├── fetch columns: a:5 b:6 v:7
      └── select
           ├── columns: a:5!null b:6 v:7 crdb_internal_mvcc_timestamp:8
           ├── project
           │    ├── columns: v:7 a:5!null b:6 crdb_internal_mvcc_timestamp:8
           │    ├── scan t
           │    │    ├── columns: a:5!null b:6 crdb_internal_mvcc_timestamp:8
           │    │    └── computed column expressions
           │    │         └── v:7
           │    │              └── a:5 + b:6
           │    └── projections
           │         └── a:5 + b:6 [as=v:7]
           └── filters
                └── a:5 > 1

build
DELETE FROM t WHERE v = 1
----
delete t
 ├── columns: <none>
 ├── fetch columns: a:5 b:6 v:7
 └── select
      ├── columns: a:5!null b:6 v:7!null crdb_internal_mvcc_timestamp:8
      ├── project
      │    ├── columns: v:7 a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    ├── scan t
      │    │    ├── columns: a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    └── computed column expressions
      │    │         └── v:7
      │    │              └── a:5 + b:6
      │    └── projections
      │         └── a:5 + b:6 [as=v:7]
      └── filters
           └── v:7 = 1

build
DELETE FROM t WHERE a+b = 1
----
delete t
 ├── columns: <none>
 ├── fetch columns: a:5 b:6 v:7
 └── select
      ├── columns: a:5!null b:6 v:7 crdb_internal_mvcc_timestamp:8
      ├── project
      │    ├── columns: v:7 a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    ├── scan t
      │    │    ├── columns: a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    └── computed column expressions
      │    │         └── v:7
      │    │              └── a:5 + b:6
      │    └── projections
      │         └── a:5 + b:6 [as=v:7]
      └── filters
           └── (a:5 + b:6) = 1

build
DELETE FROM t WHERE v = 1 RETURNING v
----
project
 ├── columns: v:3!null
 └── delete t
      ├── columns: a:1!null b:2 v:3!null
      ├── fetch columns: a:5 b:6 v:7
      └── select
           ├── columns: a:5!null b:6 v:7!null crdb_internal_mvcc_timestamp:8
           ├── project
           │    ├── columns: v:7 a:5!null b:6 crdb_internal_mvcc_timestamp:8
           │    ├── scan t
           │    │    ├── columns: a:5!null b:6 crdb_internal_mvcc_timestamp:8
           │    │    └── computed column expressions
           │    │         └── v:7
           │    │              └── a:5 + b:6
           │    └── projections
           │         └── a:5 + b:6 [as=v:7]
           └── filters
                └── v:7 = 1

build
DELETE FROM t_idx WHERE a > 1
----
delete t_idx
 ├── columns: <none>
 ├── fetch columns: a:5 b:6 v:7
 └── select
      ├── columns: a:5!null b:6 v:7 crdb_internal_mvcc_timestamp:8
      ├── project
      │    ├── columns: v:7 a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    ├── scan t_idx
      │    │    ├── columns: a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    └── computed column expressions
      │    │         └── v:7
      │    │              └── a:5 + b:6
      │    └── projections
      │         └── a:5 + b:6 [as=v:7]
      └── filters
           └── a:5 > 1

build
DELETE FROM t_idx WHERE a > 1 RETURNING v
----
project
 ├── columns: v:3
 └── delete t_idx
      ├── columns: a:1!null b:2 v:3
      ├── fetch columns: a:5 b:6 v:7
      └── select
           ├── columns: a:5!null b:6 v:7 crdb_internal_mvcc_timestamp:8
           ├── project
           │    ├── columns: v:7 a:5!null b:6 crdb_internal_mvcc_timestamp:8
           │    ├── scan t_idx
           │    │    ├── columns: a:5!null b:6 crdb_internal_mvcc_timestamp:8
           │    │    └── computed column expressions
           │    │         └── v:7
           │    │              └── a:5 + b:6
           │    └── projections
           │         └── a:5 + b:6 [as=v:7]
           └── filters
                └── a:5 > 1

build
DELETE FROM t_idx WHERE v = 1
----
delete t_idx
 ├── columns: <none>
 ├── fetch columns: a:5 b:6 v:7
 └── select
      ├── columns: a:5!null b:6 v:7!null crdb_internal_mvcc_timestamp:8
      ├── project
      │    ├── columns: v:7 a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    ├── scan t_idx
      │    │    ├── columns: a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    └── computed column expressions
      │    │         └── v:7
      │    │              └── a:5 + b:6
      │    └── projections
      │         └── a:5 + b:6 [as=v:7]
      └── filters
           └── v:7 = 1

build
DELETE FROM t_idx WHERE a+b = 1
----
delete t_idx
 ├── columns: <none>
 ├── fetch columns: a:5 b:6 v:7
 └── select
      ├── columns: a:5!null b:6 v:7 crdb_internal_mvcc_timestamp:8
      ├── project
      │    ├── columns: v:7 a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    ├── scan t_idx
      │    │    ├── columns: a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    └── computed column expressions
      │    │         └── v:7
      │    │              └── a:5 + b:6
      │    └── projections
      │         └── a:5 + b:6 [as=v:7]
      └── filters
           └── (a:5 + b:6) = 1

build
DELETE FROM t_idx WHERE v = 1 RETURNING v
----
project
 ├── columns: v:3!null
 └── delete t_idx
      ├── columns: a:1!null b:2 v:3!null
      ├── fetch columns: a:5 b:6 v:7
      └── select
           ├── columns: a:5!null b:6 v:7!null crdb_internal_mvcc_timestamp:8
           ├── project
           │    ├── columns: v:7 a:5!null b:6 crdb_internal_mvcc_timestamp:8
           │    ├── scan t_idx
           │    │    ├── columns: a:5!null b:6 crdb_internal_mvcc_timestamp:8
           │    │    └── computed column expressions
           │    │         └── v:7
           │    │              └── a:5 + b:6
           │    └── projections
           │         └── a:5 + b:6 [as=v:7]
           └── filters
                └── v:7 = 1

# -- UPDATE tests --

build
UPDATE t SET v=1
----
error (55000): cannot write directly to computed column "v"

# TODO(radu): we should prune v from the update mapping, since it's not used
# for any index.
build
UPDATE t SET a=a+1
----
update t
 ├── columns: <none>
 ├── fetch columns: t.a:5 b:6 t.v:7
 ├── update-mapping:
 │    ├── a:9 => t.a:1
 │    └── v:10 => t.v:3
 └── project
      ├── columns: v:10 t.a:5!null b:6 t.v:7 crdb_internal_mvcc_timestamp:8 a:9!null
      ├── project
      │    ├── columns: a:9!null t.a:5!null b:6 t.v:7 crdb_internal_mvcc_timestamp:8
      │    ├── project
      │    │    ├── columns: t.v:7 t.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    ├── scan t
      │    │    │    ├── columns: t.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    │    └── computed column expressions
      │    │    │         └── t.v:7
      │    │    │              └── t.a:5 + b:6
      │    │    └── projections
      │    │         └── t.a:5 + b:6 [as=t.v:7]
      │    └── projections
      │         └── t.a:5 + 1 [as=a:9]
      └── projections
           └── a:9 + b:6 [as=v:10]

build
UPDATE t SET a=a+1 WHERE v=1
----
update t
 ├── columns: <none>
 ├── fetch columns: t.a:5 b:6 t.v:7
 ├── update-mapping:
 │    ├── a:9 => t.a:1
 │    └── v:10 => t.v:3
 └── project
      ├── columns: v:10 t.a:5!null b:6 t.v:7!null crdb_internal_mvcc_timestamp:8 a:9!null
      ├── project
      │    ├── columns: a:9!null t.a:5!null b:6 t.v:7!null crdb_internal_mvcc_timestamp:8
      │    ├── select
      │    │    ├── columns: t.a:5!null b:6 t.v:7!null crdb_internal_mvcc_timestamp:8
      │    │    ├── project
      │    │    │    ├── columns: t.v:7 t.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    │    ├── scan t
      │    │    │    │    ├── columns: t.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    │    │    └── computed column expressions
      │    │    │    │         └── t.v:7
      │    │    │    │              └── t.a:5 + b:6
      │    │    │    └── projections
      │    │    │         └── t.a:5 + b:6 [as=t.v:7]
      │    │    └── filters
      │    │         └── t.v:7 = 1
      │    └── projections
      │         └── t.a:5 + 1 [as=a:9]
      └── projections
           └── a:9 + b:6 [as=v:10]

build
UPDATE t SET a=a+1 WHERE a+b=1
----
update t
 ├── columns: <none>
 ├── fetch columns: t.a:5 b:6 t.v:7
 ├── update-mapping:
 │    ├── a:9 => t.a:1
 │    └── v:10 => t.v:3
 └── project
      ├── columns: v:10 t.a:5!null b:6 t.v:7 crdb_internal_mvcc_timestamp:8 a:9!null
      ├── project
      │    ├── columns: a:9!null t.a:5!null b:6 t.v:7 crdb_internal_mvcc_timestamp:8
      │    ├── select
      │    │    ├── columns: t.a:5!null b:6 t.v:7 crdb_internal_mvcc_timestamp:8
      │    │    ├── project
      │    │    │    ├── columns: t.v:7 t.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    │    ├── scan t
      │    │    │    │    ├── columns: t.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    │    │    └── computed column expressions
      │    │    │    │         └── t.v:7
      │    │    │    │              └── t.a:5 + b:6
      │    │    │    └── projections
      │    │    │         └── t.a:5 + b:6 [as=t.v:7]
      │    │    └── filters
      │    │         └── (t.a:5 + b:6) = 1
      │    └── projections
      │         └── t.a:5 + 1 [as=a:9]
      └── projections
           └── a:9 + b:6 [as=v:10]

build
UPDATE t_idx SET a=a+1
----
update t_idx
 ├── columns: <none>
 ├── fetch columns: t_idx.a:5 b:6 t_idx.v:7
 ├── update-mapping:
 │    ├── a:9 => t_idx.a:1
 │    └── v:10 => t_idx.v:3
 └── project
      ├── columns: v:10 t_idx.a:5!null b:6 t_idx.v:7 crdb_internal_mvcc_timestamp:8 a:9!null
      ├── project
      │    ├── columns: a:9!null t_idx.a:5!null b:6 t_idx.v:7 crdb_internal_mvcc_timestamp:8
      │    ├── project
      │    │    ├── columns: t_idx.v:7 t_idx.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    ├── scan t_idx
      │    │    │    ├── columns: t_idx.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    │    └── computed column expressions
      │    │    │         └── t_idx.v:7
      │    │    │              └── t_idx.a:5 + b:6
      │    │    └── projections
      │    │         └── t_idx.a:5 + b:6 [as=t_idx.v:7]
      │    └── projections
      │         └── t_idx.a:5 + 1 [as=a:9]
      └── projections
           └── a:9 + b:6 [as=v:10]

build
UPDATE t_idx SET a=a+1 WHERE v=1
----
update t_idx
 ├── columns: <none>
 ├── fetch columns: t_idx.a:5 b:6 t_idx.v:7
 ├── update-mapping:
 │    ├── a:9 => t_idx.a:1
 │    └── v:10 => t_idx.v:3
 └── project
      ├── columns: v:10 t_idx.a:5!null b:6 t_idx.v:7!null crdb_internal_mvcc_timestamp:8 a:9!null
      ├── project
      │    ├── columns: a:9!null t_idx.a:5!null b:6 t_idx.v:7!null crdb_internal_mvcc_timestamp:8
      │    ├── select
      │    │    ├── columns: t_idx.a:5!null b:6 t_idx.v:7!null crdb_internal_mvcc_timestamp:8
      │    │    ├── project
      │    │    │    ├── columns: t_idx.v:7 t_idx.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    │    ├── scan t_idx
      │    │    │    │    ├── columns: t_idx.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    │    │    └── computed column expressions
      │    │    │    │         └── t_idx.v:7
      │    │    │    │              └── t_idx.a:5 + b:6
      │    │    │    └── projections
      │    │    │         └── t_idx.a:5 + b:6 [as=t_idx.v:7]
      │    │    └── filters
      │    │         └── t_idx.v:7 = 1
      │    └── projections
      │         └── t_idx.a:5 + 1 [as=a:9]
      └── projections
           └── a:9 + b:6 [as=v:10]

build
UPDATE t_idx SET a=a+1 WHERE a+b=1
----
update t_idx
 ├── columns: <none>
 ├── fetch columns: t_idx.a:5 b:6 t_idx.v:7
 ├── update-mapping:
 │    ├── a:9 => t_idx.a:1
 │    └── v:10 => t_idx.v:3
 └── project
      ├── columns: v:10 t_idx.a:5!null b:6 t_idx.v:7 crdb_internal_mvcc_timestamp:8 a:9!null
      ├── project
      │    ├── columns: a:9!null t_idx.a:5!null b:6 t_idx.v:7 crdb_internal_mvcc_timestamp:8
      │    ├── select
      │    │    ├── columns: t_idx.a:5!null b:6 t_idx.v:7 crdb_internal_mvcc_timestamp:8
      │    │    ├── project
      │    │    │    ├── columns: t_idx.v:7 t_idx.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    │    ├── scan t_idx
      │    │    │    │    ├── columns: t_idx.a:5!null b:6 crdb_internal_mvcc_timestamp:8
      │    │    │    │    └── computed column expressions
      │    │    │    │         └── t_idx.v:7
      │    │    │    │              └── t_idx.a:5 + b:6
      │    │    │    └── projections
      │    │    │         └── t_idx.a:5 + b:6 [as=t_idx.v:7]
      │    │    └── filters
      │    │         └── (t_idx.a:5 + b:6) = 1
      │    └── projections
      │         └── t_idx.a:5 + 1 [as=a:9]
      └── projections
           └── a:9 + b:6 [as=v:10]

build
UPDATE t_idx SET b=b+1 RETURNING v
----
project
 ├── columns: v:3
 └── update t_idx
      ├── columns: a:1!null t_idx.b:2 t_idx.v:3
      ├── fetch columns: a:5 t_idx.b:6 t_idx.v:7
      ├── update-mapping:
      │    ├── b:9 => t_idx.b:2
      │    └── v:10 => t_idx.v:3
      └── project
           ├── columns: v:10 a:5!null t_idx.b:6 t_idx.v:7 crdb_internal_mvcc_timestamp:8 b:9
           ├── project
           │    ├── columns: b:9 a:5!null t_idx.b:6 t_idx.v:7 crdb_internal_mvcc_timestamp:8
           │    ├── project
           │    │    ├── columns: t_idx.v:7 a:5!null t_idx.b:6 crdb_internal_mvcc_timestamp:8
           │    │    ├── scan t_idx
           │    │    │    ├── columns: a:5!null t_idx.b:6 crdb_internal_mvcc_timestamp:8
           │    │    │    └── computed column expressions
           │    │    │         └── t_idx.v:7
           │    │    │              └── a:5 + t_idx.b:6
           │    │    └── projections
           │    │         └── a:5 + t_idx.b:6 [as=t_idx.v:7]
           │    └── projections
           │         └── t_idx.b:6 + 1 [as=b:9]
           └── projections
                └── a:5 + b:9 [as=v:10]

build
UPDATE t_idx2 SET b=b+1 RETURNING w
----
project
 ├── columns: w:5
 └── update t_idx2
      ├── columns: a:1!null t_idx2.b:2 c:3 t_idx2.v:4 t_idx2.w:5
      ├── fetch columns: a:7 t_idx2.b:8 c:9 t_idx2.v:10 t_idx2.w:11
      ├── update-mapping:
      │    ├── b:13 => t_idx2.b:2
      │    └── v:14 => t_idx2.v:4
      └── project
           ├── columns: v:14 w:15 a:7!null t_idx2.b:8 c:9 t_idx2.v:10 t_idx2.w:11 crdb_internal_mvcc_timestamp:12 b:13
           ├── project
           │    ├── columns: b:13 a:7!null t_idx2.b:8 c:9 t_idx2.v:10 t_idx2.w:11 crdb_internal_mvcc_timestamp:12
           │    ├── project
           │    │    ├── columns: t_idx2.v:10 t_idx2.w:11 a:7!null t_idx2.b:8 c:9 crdb_internal_mvcc_timestamp:12
           │    │    ├── scan t_idx2
           │    │    │    ├── columns: a:7!null t_idx2.b:8 c:9 crdb_internal_mvcc_timestamp:12
           │    │    │    └── computed column expressions
           │    │    │         ├── t_idx2.v:10
           │    │    │         │    └── a:7 + t_idx2.b:8
           │    │    │         └── t_idx2.w:11
           │    │    │              └── c:9 + 1
           │    │    └── projections
           │    │         ├── a:7 + t_idx2.b:8 [as=t_idx2.v:10]
           │    │         └── c:9 + 1 [as=t_idx2.w:11]
           │    └── projections
           │         └── t_idx2.b:8 + 1 [as=b:13]
           └── projections
                ├── a:7 + b:13 [as=v:14]
                └── c:9 + 1 [as=w:15]

build
UPDATE t_check SET b=b+1
----
update t_check
 ├── columns: <none>
 ├── fetch columns: a:6 t_check.b:7 t_check.v:8 t_check.w:9
 ├── update-mapping:
 │    ├── b:11 => t_check.b:2
 │    ├── v:12 => t_check.v:3
 │    └── w:13 => t_check.w:4
 ├── check columns: check1:14 check2:15
 └── project
      ├── columns: check1:14 check2:15 a:6!null t_check.b:7 t_check.v:8 t_check.w:9 crdb_internal_mvcc_timestamp:10 b:11 v:12 w:13
      ├── project
      │    ├── columns: v:12 w:13 a:6!null t_check.b:7 t_check.v:8 t_check.w:9 crdb_internal_mvcc_timestamp:10 b:11
      │    ├── project
      │    │    ├── columns: b:11 a:6!null t_check.b:7 t_check.v:8 t_check.w:9 crdb_internal_mvcc_timestamp:10
      │    │    ├── project
      │    │    │    ├── columns: t_check.v:8 t_check.w:9 a:6!null t_check.b:7 crdb_internal_mvcc_timestamp:10
      │    │    │    ├── scan t_check
      │    │    │    │    ├── columns: a:6!null t_check.b:7 crdb_internal_mvcc_timestamp:10
      │    │    │    │    └── computed column expressions
      │    │    │    │         ├── t_check.v:8
      │    │    │    │         │    └── a:6 + t_check.b:7
      │    │    │    │         └── t_check.w:9
      │    │    │    │              └── a:6 * t_check.b:7
      │    │    │    └── projections
      │    │    │         ├── a:6 + t_check.b:7 [as=t_check.v:8]
      │    │    │         └── a:6 * t_check.b:7 [as=t_check.w:9]
      │    │    └── projections
      │    │         └── t_check.b:7 + 1 [as=b:11]
      │    └── projections
      │         ├── a:6 + b:11 [as=v:12]
      │         └── a:6 * b:11 [as=w:13]
      └── projections
           ├── v:12 < w:13 [as=check1:14]
           └── v:12 >= 10 [as=check2:15]

# -- UPSERT / INSERT ON CONFLICT tests --

build
UPSERT INTO t VALUES (1, 1)
----
upsert t
 ├── columns: <none>
 ├── upsert-mapping:
 │    ├── column1:5 => a:1
 │    ├── column2:6 => b:2
 │    └── v:7 => t.v:3
 └── project
      ├── columns: v:7!null column1:5!null column2:6!null
      ├── values
      │    ├── columns: column1:5!null column2:6!null
      │    └── (1, 1)
      └── projections
           └── column1:5 + column2:6 [as=v:7]

build
UPSERT INTO t(a) VALUES (1)
----
upsert t
 ├── columns: <none>
 ├── arbiter indexes: primary
 ├── canary column: t.a:8
 ├── fetch columns: t.a:8 t.b:9 t.v:10
 ├── insert-mapping:
 │    ├── column1:5 => t.a:1
 │    ├── b:6 => t.b:2
 │    └── v:7 => t.v:3
 └── project
      ├── columns: a:13 b:14 v:15 column1:5!null b:6 v:7 t.a:8 t.b:9 t.v:10 crdb_internal_mvcc_timestamp:11 v:12
      ├── project
      │    ├── columns: v:12 column1:5!null b:6 v:7 t.a:8 t.b:9 t.v:10 crdb_internal_mvcc_timestamp:11
      │    ├── left-join (hash)
      │    │    ├── columns: column1:5!null b:6 v:7 t.a:8 t.b:9 t.v:10 crdb_internal_mvcc_timestamp:11
      │    │    ├── ensure-upsert-distinct-on
      │    │    │    ├── columns: column1:5!null b:6 v:7
      │    │    │    ├── grouping columns: column1:5!null
      │    │    │    ├── project
      │    │    │    │    ├── columns: v:7 column1:5!null b:6
      │    │    │    │    ├── project
      │    │    │    │    │    ├── columns: b:6 column1:5!null
      │    │    │    │    │    ├── values
      │    │    │    │    │    │    ├── columns: column1:5!null
      │    │    │    │    │    │    └── (1,)
      │    │    │    │    │    └── projections
      │    │    │    │    │         └── NULL::INT8 [as=b:6]
      │    │    │    │    └── projections
      │    │    │    │         └── column1:5 + b:6 [as=v:7]
      │    │    │    └── aggregations
      │    │    │         ├── first-agg [as=b:6]
      │    │    │         │    └── b:6
      │    │    │         └── first-agg [as=v:7]
      │    │    │              └── v:7
      │    │    ├── project
      │    │    │    ├── columns: t.v:10 t.a:8!null t.b:9 crdb_internal_mvcc_timestamp:11
      │    │    │    ├── scan t
      │    │    │    │    ├── columns: t.a:8!null t.b:9 crdb_internal_mvcc_timestamp:11
      │    │    │    │    └── computed column expressions
      │    │    │    │         └── t.v:10
      │    │    │    │              └── t.a:8 + t.b:9
      │    │    │    └── projections
      │    │    │         └── t.a:8 + t.b:9 [as=t.v:10]
      │    │    └── filters
      │    │         └── column1:5 = t.a:8
      │    └── projections
      │         └── t.a:8 + t.b:9 [as=v:12]
      └── projections
           ├── CASE WHEN t.a:8 IS NULL THEN column1:5 ELSE t.a:8 END [as=a:13]
           ├── CASE WHEN t.a:8 IS NULL THEN b:6 ELSE t.b:9 END [as=b:14]
           └── CASE WHEN t.a:8 IS NULL THEN v:7 ELSE t.v:10 END [as=v:15]

build
UPSERT INTO t(a, b, v) VALUES (1)
----
error (55000): cannot write directly to computed column "v"

build
UPSERT INTO t VALUES (1, 1) RETURNING v
----
project
 ├── columns: v:3!null
 └── upsert t
      ├── columns: a:1!null b:2!null t.v:3!null
      ├── upsert-mapping:
      │    ├── column1:5 => a:1
      │    ├── column2:6 => b:2
      │    └── v:7 => t.v:3
      └── project
           ├── columns: v:7!null column1:5!null column2:6!null
           ├── values
           │    ├── columns: column1:5!null column2:6!null
           │    └── (1, 1)
           └── projections
                └── column1:5 + column2:6 [as=v:7]

build
UPSERT INTO t_check VALUES (1, 1)
----
upsert t_check
 ├── columns: <none>
 ├── upsert-mapping:
 │    ├── column1:6 => a:1
 │    ├── column2:7 => b:2
 │    ├── v:8 => t_check.v:3
 │    └── w:9 => t_check.w:4
 ├── check columns: check1:10 check2:11
 └── project
      ├── columns: check1:10!null check2:11!null column1:6!null column2:7!null v:8!null w:9!null
      ├── project
      │    ├── columns: v:8!null w:9!null column1:6!null column2:7!null
      │    ├── values
      │    │    ├── columns: column1:6!null column2:7!null
      │    │    └── (1, 1)
      │    └── projections
      │         ├── column1:6 + column2:7 [as=v:8]
      │         └── column1:6 * column2:7 [as=w:9]
      └── projections
           ├── v:8 < w:9 [as=check1:10]
           └── v:8 >= 10 [as=check2:11]

build
INSERT INTO t VALUES (1, 1) ON CONFLICT DO NOTHING RETURNING v
----
project
 ├── columns: v:3!null
 └── insert t
      ├── columns: a:1!null b:2!null t.v:3!null
      ├── arbiter indexes: primary
      ├── insert-mapping:
      │    ├── column1:5 => a:1
      │    ├── column2:6 => b:2
      │    └── v:7 => t.v:3
      └── upsert-distinct-on
           ├── columns: column1:5!null column2:6!null v:7!null
           ├── grouping columns: column1:5!null
           ├── anti-join (hash)
           │    ├── columns: column1:5!null column2:6!null v:7!null
           │    ├── project
           │    │    ├── columns: v:7!null column1:5!null column2:6!null
           │    │    ├── values
           │    │    │    ├── columns: column1:5!null column2:6!null
           │    │    │    └── (1, 1)
           │    │    └── projections
           │    │         └── column1:5 + column2:6 [as=v:7]
           │    ├── project
           │    │    ├── columns: t.v:10 a:8!null b:9
           │    │    ├── scan t
           │    │    │    ├── columns: a:8!null b:9
           │    │    │    └── computed column expressions
           │    │    │         └── t.v:10
           │    │    │              └── a:8 + b:9
           │    │    └── projections
           │    │         └── a:8 + b:9 [as=t.v:10]
           │    └── filters
           │         └── column1:5 = a:8
           └── aggregations
                ├── first-agg [as=column2:6]
                │    └── column2:6
                └── first-agg [as=v:7]
                     └── v:7

build
INSERT INTO t_idx2 VALUES (1, 1, 1) ON CONFLICT (w) DO NOTHING
----
insert t_idx2
 ├── columns: <none>
 ├── arbiter indexes: secondary
 ├── insert-mapping:
 │    ├── column1:7 => a:1
 │    ├── column2:8 => b:2
 │    ├── column3:9 => c:3
 │    ├── v:10 => t_idx2.v:4
 │    └── w:11 => t_idx2.w:5
 └── upsert-distinct-on
      ├── columns: column1:7!null column2:8!null column3:9!null v:10!null w:11!null
      ├── grouping columns: w:11!null
      ├── anti-join (hash)
      │    ├── columns: column1:7!null column2:8!null column3:9!null v:10!null w:11!null
      │    ├── project
      │    │    ├── columns: v:10!null w:11!null column1:7!null column2:8!null column3:9!null
      │    │    ├── values
      │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null
      │    │    │    └── (1, 1, 1)
      │    │    └── projections
      │    │         ├── column1:7 + column2:8 [as=v:10]
      │    │         └── column3:9 + 1 [as=w:11]
      │    ├── project
      │    │    ├── columns: t_idx2.v:15 t_idx2.w:16 a:12!null b:13 c:14
      │    │    ├── scan t_idx2
      │    │    │    ├── columns: a:12!null b:13 c:14
      │    │    │    └── computed column expressions
      │    │    │         ├── t_idx2.v:15
      │    │    │         │    └── a:12 + b:13
      │    │    │         └── t_idx2.w:16
      │    │    │              └── c:14 + 1
      │    │    └── projections
      │    │         ├── a:12 + b:13 [as=t_idx2.v:15]
      │    │         └── c:14 + 1 [as=t_idx2.w:16]
      │    └── filters
      │         └── w:11 = t_idx2.w:16
      └── aggregations
           ├── first-agg [as=column1:7]
           │    └── column1:7
           ├── first-agg [as=column2:8]
           │    └── column2:8
           ├── first-agg [as=column3:9]
           │    └── column3:9
           └── first-agg [as=v:10]
                └── v:10

build
INSERT INTO t_idx2 VALUES (1, 1, 1) ON CONFLICT DO NOTHING
----
insert t_idx2
 ├── columns: <none>
 ├── arbiter indexes: primary secondary
 ├── insert-mapping:
 │    ├── column1:7 => a:1
 │    ├── column2:8 => b:2
 │    ├── column3:9 => c:3
 │    ├── v:10 => t_idx2.v:4
 │    └── w:11 => t_idx2.w:5
 └── upsert-distinct-on
      ├── columns: column1:7!null column2:8!null column3:9!null v:10!null w:11!null
      ├── grouping columns: w:11!null
      ├── upsert-distinct-on
      │    ├── columns: column1:7!null column2:8!null column3:9!null v:10!null w:11!null
      │    ├── grouping columns: column1:7!null
      │    ├── anti-join (hash)
      │    │    ├── columns: column1:7!null column2:8!null column3:9!null v:10!null w:11!null
      │    │    ├── anti-join (hash)
      │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null v:10!null w:11!null
      │    │    │    ├── project
      │    │    │    │    ├── columns: v:10!null w:11!null column1:7!null column2:8!null column3:9!null
      │    │    │    │    ├── values
      │    │    │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null
      │    │    │    │    │    └── (1, 1, 1)
      │    │    │    │    └── projections
      │    │    │    │         ├── column1:7 + column2:8 [as=v:10]
      │    │    │    │         └── column3:9 + 1 [as=w:11]
      │    │    │    ├── project
      │    │    │    │    ├── columns: t_idx2.v:15 t_idx2.w:16 a:12!null b:13 c:14
      │    │    │    │    ├── scan t_idx2
      │    │    │    │    │    ├── columns: a:12!null b:13 c:14
      │    │    │    │    │    └── computed column expressions
      │    │    │    │    │         ├── t_idx2.v:15
      │    │    │    │    │         │    └── a:12 + b:13
      │    │    │    │    │         └── t_idx2.w:16
      │    │    │    │    │              └── c:14 + 1
      │    │    │    │    └── projections
      │    │    │    │         ├── a:12 + b:13 [as=t_idx2.v:15]
      │    │    │    │         └── c:14 + 1 [as=t_idx2.w:16]
      │    │    │    └── filters
      │    │    │         └── column1:7 = a:12
      │    │    ├── project
      │    │    │    ├── columns: t_idx2.v:21 t_idx2.w:22 a:18!null b:19 c:20
      │    │    │    ├── scan t_idx2
      │    │    │    │    ├── columns: a:18!null b:19 c:20
      │    │    │    │    └── computed column expressions
      │    │    │    │         ├── t_idx2.v:21
      │    │    │    │         │    └── a:18 + b:19
      │    │    │    │         └── t_idx2.w:22
      │    │    │    │              └── c:20 + 1
      │    │    │    └── projections
      │    │    │         ├── a:18 + b:19 [as=t_idx2.v:21]
      │    │    │         └── c:20 + 1 [as=t_idx2.w:22]
      │    │    └── filters
      │    │         └── w:11 = t_idx2.w:22
      │    └── aggregations
      │         ├── first-agg [as=column2:8]
      │         │    └── column2:8
      │         ├── first-agg [as=column3:9]
      │         │    └── column3:9
      │         ├── first-agg [as=v:10]
      │         │    └── v:10
      │         └── first-agg [as=w:11]
      │              └── w:11
      └── aggregations
           ├── first-agg [as=column1:7]
           │    └── column1:7
           ├── first-agg [as=column2:8]
           │    └── column2:8
           ├── first-agg [as=column3:9]
           │    └── column3:9
           └── first-agg [as=v:10]
                └── v:10

build
INSERT INTO t VALUES (1, 1) ON CONFLICT (a) DO UPDATE SET a=t.v+1
----
upsert t
 ├── columns: <none>
 ├── arbiter indexes: primary
 ├── canary column: t.a:8
 ├── fetch columns: t.a:8 t.b:9 t.v:10
 ├── insert-mapping:
 │    ├── column1:5 => t.a:1
 │    ├── column2:6 => t.b:2
 │    └── v:7 => t.v:3
 ├── update-mapping:
 │    ├── a:14 => t.a:1
 │    └── v:16 => t.v:3
 └── project
      ├── columns: a:14 b:15 v:16 column1:5!null column2:6!null v:7!null t.a:8 t.b:9 t.v:10 crdb_internal_mvcc_timestamp:11 a:12 v:13
      ├── project
      │    ├── columns: v:13 column1:5!null column2:6!null v:7!null t.a:8 t.b:9 t.v:10 crdb_internal_mvcc_timestamp:11 a:12
      │    ├── project
      │    │    ├── columns: a:12 column1:5!null column2:6!null v:7!null t.a:8 t.b:9 t.v:10 crdb_internal_mvcc_timestamp:11
      │    │    ├── left-join (hash)
      │    │    │    ├── columns: column1:5!null column2:6!null v:7!null t.a:8 t.b:9 t.v:10 crdb_internal_mvcc_timestamp:11
      │    │    │    ├── ensure-upsert-distinct-on
      │    │    │    │    ├── columns: column1:5!null column2:6!null v:7!null
      │    │    │    │    ├── grouping columns: column1:5!null
      │    │    │    │    ├── project
      │    │    │    │    │    ├── columns: v:7!null column1:5!null column2:6!null
      │    │    │    │    │    ├── values
      │    │    │    │    │    │    ├── columns: column1:5!null column2:6!null
      │    │    │    │    │    │    └── (1, 1)
      │    │    │    │    │    └── projections
      │    │    │    │    │         └── column1:5 + column2:6 [as=v:7]
      │    │    │    │    └── aggregations
      │    │    │    │         ├── first-agg [as=column2:6]
      │    │    │    │         │    └── column2:6
      │    │    │    │         └── first-agg [as=v:7]
      │    │    │    │              └── v:7
      │    │    │    ├── project
      │    │    │    │    ├── columns: t.v:10 t.a:8!null t.b:9 crdb_internal_mvcc_timestamp:11
      │    │    │    │    ├── scan t
      │    │    │    │    │    ├── columns: t.a:8!null t.b:9 crdb_internal_mvcc_timestamp:11
      │    │    │    │    │    └── computed column expressions
      │    │    │    │    │         └── t.v:10
      │    │    │    │    │              └── t.a:8 + t.b:9
      │    │    │    │    └── projections
      │    │    │    │         └── t.a:8 + t.b:9 [as=t.v:10]
      │    │    │    └── filters
      │    │    │         └── column1:5 = t.a:8
      │    │    └── projections
      │    │         └── t.v:10 + 1 [as=a:12]
      │    └── projections
      │         └── a:12 + t.b:9 [as=v:13]
      └── projections
           ├── CASE WHEN t.a:8 IS NULL THEN column1:5 ELSE a:12 END [as=a:14]
           ├── CASE WHEN t.a:8 IS NULL THEN column2:6 ELSE t.b:9 END [as=b:15]
           └── CASE WHEN t.a:8 IS NULL THEN v:7 ELSE v:13 END [as=v:16]

build
INSERT INTO t VALUES (1, 1) ON CONFLICT (a) DO UPDATE SET a=excluded.v+1
----
upsert t
 ├── columns: <none>
 ├── arbiter indexes: primary
 ├── canary column: t.a:8
 ├── fetch columns: t.a:8 t.b:9 t.v:10
 ├── insert-mapping:
 │    ├── column1:5 => t.a:1
 │    ├── column2:6 => t.b:2
 │    └── v:7 => t.v:3
 ├── update-mapping:
 │    ├── a:14 => t.a:1
 │    └── v:16 => t.v:3
 └── project
      ├── columns: a:14!null b:15 v:16 column1:5!null column2:6!null v:7!null t.a:8 t.b:9 t.v:10 crdb_internal_mvcc_timestamp:11 a:12!null v:13
      ├── project
      │    ├── columns: v:13 column1:5!null column2:6!null v:7!null t.a:8 t.b:9 t.v:10 crdb_internal_mvcc_timestamp:11 a:12!null
      │    ├── project
      │    │    ├── columns: a:12!null column1:5!null column2:6!null v:7!null t.a:8 t.b:9 t.v:10 crdb_internal_mvcc_timestamp:11
      │    │    ├── left-join (hash)
      │    │    │    ├── columns: column1:5!null column2:6!null v:7!null t.a:8 t.b:9 t.v:10 crdb_internal_mvcc_timestamp:11
      │    │    │    ├── ensure-upsert-distinct-on
      │    │    │    │    ├── columns: column1:5!null column2:6!null v:7!null
      │    │    │    │    ├── grouping columns: column1:5!null
      │    │    │    │    ├── project
      │    │    │    │    │    ├── columns: v:7!null column1:5!null column2:6!null
      │    │    │    │    │    ├── values
      │    │    │    │    │    │    ├── columns: column1:5!null column2:6!null
      │    │    │    │    │    │    └── (1, 1)
      │    │    │    │    │    └── projections
      │    │    │    │    │         └── column1:5 + column2:6 [as=v:7]
      │    │    │    │    └── aggregations
      │    │    │    │         ├── first-agg [as=column2:6]
      │    │    │    │         │    └── column2:6
      │    │    │    │         └── first-agg [as=v:7]
      │    │    │    │              └── v:7
      │    │    │    ├── project
      │    │    │    │    ├── columns: t.v:10 t.a:8!null t.b:9 crdb_internal_mvcc_timestamp:11
      │    │    │    │    ├── scan t
      │    │    │    │    │    ├── columns: t.a:8!null t.b:9 crdb_internal_mvcc_timestamp:11
      │    │    │    │    │    └── computed column expressions
      │    │    │    │    │         └── t.v:10
      │    │    │    │    │              └── t.a:8 + t.b:9
      │    │    │    │    └── projections
      │    │    │    │         └── t.a:8 + t.b:9 [as=t.v:10]
      │    │    │    └── filters
      │    │    │         └── column1:5 = t.a:8
      │    │    └── projections
      │    │         └── v:7 + 1 [as=a:12]
      │    └── projections
      │         └── a:12 + t.b:9 [as=v:13]
      └── projections
           ├── CASE WHEN t.a:8 IS NULL THEN column1:5 ELSE a:12 END [as=a:14]
           ├── CASE WHEN t.a:8 IS NULL THEN column2:6 ELSE t.b:9 END [as=b:15]
           └── CASE WHEN t.a:8 IS NULL THEN v:7 ELSE v:13 END [as=v:16]

build
INSERT INTO t_idx2 VALUES (1, 1, 1) ON CONFLICT (w) DO UPDATE SET c=10
----
upsert t_idx2
 ├── columns: <none>
 ├── arbiter indexes: secondary
 ├── canary column: t_idx2.a:12
 ├── fetch columns: t_idx2.a:12 t_idx2.b:13 t_idx2.c:14 t_idx2.v:15 t_idx2.w:16
 ├── insert-mapping:
 │    ├── column1:7 => t_idx2.a:1
 │    ├── column2:8 => t_idx2.b:2
 │    ├── column3:9 => t_idx2.c:3
 │    ├── v:10 => t_idx2.v:4
 │    └── w:11 => t_idx2.w:5
 ├── update-mapping:
 │    ├── c:23 => t_idx2.c:3
 │    └── w:25 => t_idx2.w:5
 └── project
      ├── columns: a:21 b:22 c:23!null v:24 w:25!null column1:7!null column2:8!null column3:9!null v:10!null w:11!null t_idx2.a:12 t_idx2.b:13 t_idx2.c:14 t_idx2.v:15 t_idx2.w:16 crdb_internal_mvcc_timestamp:17 c:18!null v:19 w:20!null
      ├── project
      │    ├── columns: v:19 w:20!null column1:7!null column2:8!null column3:9!null v:10!null w:11!null t_idx2.a:12 t_idx2.b:13 t_idx2.c:14 t_idx2.v:15 t_idx2.w:16 crdb_internal_mvcc_timestamp:17 c:18!null
      │    ├── project
      │    │    ├── columns: c:18!null column1:7!null column2:8!null column3:9!null v:10!null w:11!null t_idx2.a:12 t_idx2.b:13 t_idx2.c:14 t_idx2.v:15 t_idx2.w:16 crdb_internal_mvcc_timestamp:17
      │    │    ├── left-join (hash)
      │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null v:10!null w:11!null t_idx2.a:12 t_idx2.b:13 t_idx2.c:14 t_idx2.v:15 t_idx2.w:16 crdb_internal_mvcc_timestamp:17
      │    │    │    ├── ensure-upsert-distinct-on
      │    │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null v:10!null w:11!null
      │    │    │    │    ├── grouping columns: w:11!null
      │    │    │    │    ├── project
      │    │    │    │    │    ├── columns: v:10!null w:11!null column1:7!null column2:8!null column3:9!null
      │    │    │    │    │    ├── values
      │    │    │    │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null
      │    │    │    │    │    │    └── (1, 1, 1)
      │    │    │    │    │    └── projections
      │    │    │    │    │         ├── column1:7 + column2:8 [as=v:10]
      │    │    │    │    │         └── column3:9 + 1 [as=w:11]
      │    │    │    │    └── aggregations
      │    │    │    │         ├── first-agg [as=column1:7]
      │    │    │    │         │    └── column1:7
      │    │    │    │         ├── first-agg [as=column2:8]
      │    │    │    │         │    └── column2:8
      │    │    │    │         ├── first-agg [as=column3:9]
      │    │    │    │         │    └── column3:9
      │    │    │    │         └── first-agg [as=v:10]
      │    │    │    │              └── v:10
      │    │    │    ├── project
      │    │    │    │    ├── columns: t_idx2.v:15 t_idx2.w:16 t_idx2.a:12!null t_idx2.b:13 t_idx2.c:14 crdb_internal_mvcc_timestamp:17
      │    │    │    │    ├── scan t_idx2
      │    │    │    │    │    ├── columns: t_idx2.a:12!null t_idx2.b:13 t_idx2.c:14 crdb_internal_mvcc_timestamp:17
      │    │    │    │    │    └── computed column expressions
      │    │    │    │    │         ├── t_idx2.v:15
      │    │    │    │    │         │    └── t_idx2.a:12 + t_idx2.b:13
      │    │    │    │    │         └── t_idx2.w:16
      │    │    │    │    │              └── t_idx2.c:14 + 1
      │    │    │    │    └── projections
      │    │    │    │         ├── t_idx2.a:12 + t_idx2.b:13 [as=t_idx2.v:15]
      │    │    │    │         └── t_idx2.c:14 + 1 [as=t_idx2.w:16]
      │    │    │    └── filters
      │    │    │         └── w:11 = t_idx2.w:16
      │    │    └── projections
      │    │         └── 10 [as=c:18]
      │    └── projections
      │         ├── t_idx2.a:12 + t_idx2.b:13 [as=v:19]
      │         └── c:18 + 1 [as=w:20]
      └── projections
           ├── CASE WHEN t_idx2.a:12 IS NULL THEN column1:7 ELSE t_idx2.a:12 END [as=a:21]
           ├── CASE WHEN t_idx2.a:12 IS NULL THEN column2:8 ELSE t_idx2.b:13 END [as=b:22]
           ├── CASE WHEN t_idx2.a:12 IS NULL THEN column3:9 ELSE c:18 END [as=c:23]
           ├── CASE WHEN t_idx2.a:12 IS NULL THEN v:10 ELSE t_idx2.v:15 END [as=v:24]
           └── CASE WHEN t_idx2.a:12 IS NULL THEN w:11 ELSE w:20 END [as=w:25]

build
INSERT INTO t_idx2 VALUES (1, 1, 1) ON CONFLICT (w) DO UPDATE SET c=t_idx2.v+1
----
upsert t_idx2
 ├── columns: <none>
 ├── arbiter indexes: secondary
 ├── canary column: t_idx2.a:12
 ├── fetch columns: t_idx2.a:12 t_idx2.b:13 t_idx2.c:14 t_idx2.v:15 t_idx2.w:16
 ├── insert-mapping:
 │    ├── column1:7 => t_idx2.a:1
 │    ├── column2:8 => t_idx2.b:2
 │    ├── column3:9 => t_idx2.c:3
 │    ├── v:10 => t_idx2.v:4
 │    └── w:11 => t_idx2.w:5
 ├── update-mapping:
 │    ├── c:23 => t_idx2.c:3
 │    └── w:25 => t_idx2.w:5
 └── project
      ├── columns: a:21 b:22 c:23 v:24 w:25 column1:7!null column2:8!null column3:9!null v:10!null w:11!null t_idx2.a:12 t_idx2.b:13 t_idx2.c:14 t_idx2.v:15 t_idx2.w:16 crdb_internal_mvcc_timestamp:17 c:18 v:19 w:20
      ├── project
      │    ├── columns: v:19 w:20 column1:7!null column2:8!null column3:9!null v:10!null w:11!null t_idx2.a:12 t_idx2.b:13 t_idx2.c:14 t_idx2.v:15 t_idx2.w:16 crdb_internal_mvcc_timestamp:17 c:18
      │    ├── project
      │    │    ├── columns: c:18 column1:7!null column2:8!null column3:9!null v:10!null w:11!null t_idx2.a:12 t_idx2.b:13 t_idx2.c:14 t_idx2.v:15 t_idx2.w:16 crdb_internal_mvcc_timestamp:17
      │    │    ├── left-join (hash)
      │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null v:10!null w:11!null t_idx2.a:12 t_idx2.b:13 t_idx2.c:14 t_idx2.v:15 t_idx2.w:16 crdb_internal_mvcc_timestamp:17
      │    │    │    ├── ensure-upsert-distinct-on
      │    │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null v:10!null w:11!null
      │    │    │    │    ├── grouping columns: w:11!null
      │    │    │    │    ├── project
      │    │    │    │    │    ├── columns: v:10!null w:11!null column1:7!null column2:8!null column3:9!null
      │    │    │    │    │    ├── values
      │    │    │    │    │    │    ├── columns: column1:7!null column2:8!null column3:9!null
      │    │    │    │    │    │    └── (1, 1, 1)
      │    │    │    │    │    └── projections
      │    │    │    │    │         ├── column1:7 + column2:8 [as=v:10]
      │    │    │    │    │         └── column3:9 + 1 [as=w:11]
      │    │    │    │    └── aggregations
      │    │    │    │         ├── first-agg [as=column1:7]
      │    │    │    │         │    └── column1:7
      │    │    │    │         ├── first-agg [as=column2:8]
      │    │    │    │         │    └── column2:8
      │    │    │    │         ├── first-agg [as=column3:9]
      │    │    │    │         │    └── column3:9
      │    │    │    │         └── first-agg [as=v:10]
      │    │    │    │              └── v:10
      │    │    │    ├── project
      │    │    │    │    ├── columns: t_idx2.v:15 t_idx2.w:16 t_idx2.a:12!null t_idx2.b:13 t_idx2.c:14 crdb_internal_mvcc_timestamp:17
      │    │    │    │    ├── scan t_idx2
      │    │    │    │    │    ├── columns: t_idx2.a:12!null t_idx2.b:13 t_idx2.c:14 crdb_internal_mvcc_timestamp:17
      │    │    │    │    │    └── computed column expressions
      │    │    │    │    │         ├── t_idx2.v:15
      │    │    │    │    │         │    └── t_idx2.a:12 + t_idx2.b:13
      │    │    │    │    │         └── t_idx2.w:16
      │    │    │    │    │              └── t_idx2.c:14 + 1
      │    │    │    │    └── projections
      │    │    │    │         ├── t_idx2.a:12 + t_idx2.b:13 [as=t_idx2.v:15]
      │    │    │    │         └── t_idx2.c:14 + 1 [as=t_idx2.w:16]
      │    │    │    └── filters
      │    │    │         └── w:11 = t_idx2.w:16
      │    │    └── projections
      │    │         └── t_idx2.v:15 + 1 [as=c:18]
      │    └── projections
      │         ├── t_idx2.a:12 + t_idx2.b:13 [as=v:19]
      │         └── c:18 + 1 [as=w:20]
      └── projections
           ├── CASE WHEN t_idx2.a:12 IS NULL THEN column1:7 ELSE t_idx2.a:12 END [as=a:21]
           ├── CASE WHEN t_idx2.a:12 IS NULL THEN column2:8 ELSE t_idx2.b:13 END [as=b:22]
           ├── CASE WHEN t_idx2.a:12 IS NULL THEN column3:9 ELSE c:18 END [as=c:23]
           ├── CASE WHEN t_idx2.a:12 IS NULL THEN v:10 ELSE t_idx2.v:15 END [as=v:24]
           └── CASE WHEN t_idx2.a:12 IS NULL THEN w:11 ELSE w:20 END [as=w:25]

# Test that virtual column expressions are forced to have the column type.
exec-ddl
CREATE TABLE coltyp (
  k INT,
  v INT AS (NULL) VIRTUAL,
  w STRING AS (IF(k IS NULL, NULL, NULL)) VIRTUAL
)
----

build format=(show-types,show-scalars)
SELECT * FROM coltyp
----
project
 ├── columns: k:1(int) v:2(int) w:3(string)
 └── project
      ├── columns: v:2(int) w:3(string) k:1(int) rowid:4(int!null) crdb_internal_mvcc_timestamp:5(decimal)
      ├── scan coltyp
      │    ├── columns: k:1(int) rowid:4(int!null) crdb_internal_mvcc_timestamp:5(decimal)
      │    └── computed column expressions
      │         ├── v:2
      │         │    └── cast: INT8 [type=int]
      │         │         └── null [type=unknown]
      │         └── w:3
      │              └── case [type=string]
      │                   ├── is [type=bool]
      │                   │    ├── variable: k:1 [type=int]
      │                   │    └── null [type=unknown]
      │                   ├── when [type=string]
      │                   │    ├── true [type=bool]
      │                   │    └── cast: STRING [type=string]
      │                   │         └── null [type=unknown]
      │                   └── cast: STRING [type=string]
      │                        └── null [type=unknown]
      └── projections
           ├── cast: INT8 [as=v:2, type=int]
           │    └── null [type=unknown]
           └── case [as=w:3, type=string]
                ├── is [type=bool]
                │    ├── variable: k:1 [type=int]
                │    └── null [type=unknown]
                ├── when [type=string]
                │    ├── true [type=bool]
                │    └── cast: STRING [type=string]
                │         └── null [type=unknown]
                └── cast: STRING [type=string]
                     └── null [type=unknown]
