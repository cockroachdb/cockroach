# tests adapted from logictest -- aggregate

exec-ddl
CREATE TABLE kv (
  k INT PRIMARY KEY,
  v INT,
  w INT,
  s STRING
)
----

# Presence of HAVING triggers aggregation, reducing results to one row (even without GROUP BY).
build
SELECT 3 r FROM kv HAVING TRUE
----
project
 ├── columns: r:5!null
 ├── select
 │    ├── scalar-group-by
 │    │    └── project
 │    │         └── scan kv
 │    │              └── columns: k:1!null v:2 w:3 s:4
 │    └── filters
 │         └── true
 └── projections
      └── 3 [as=r:5]

build
SELECT s, count(*) FROM kv GROUP BY s HAVING count(*) > 1
----
select
 ├── columns: s:4 count:5!null
 ├── group-by
 │    ├── columns: s:4 count_rows:5!null
 │    ├── grouping columns: s:4
 │    ├── project
 │    │    ├── columns: s:4
 │    │    └── scan kv
 │    │         └── columns: k:1!null v:2 w:3 s:4
 │    └── aggregations
 │         └── count-rows [as=count_rows:5]
 └── filters
      └── count_rows:5 > 1

build
SELECT max(k), min(v) FROM kv HAVING min(v) > 2
----
select
 ├── columns: max:5 min:6!null
 ├── scalar-group-by
 │    ├── columns: max:5 min:6
 │    ├── project
 │    │    ├── columns: k:1!null v:2
 │    │    └── scan kv
 │    │         └── columns: k:1!null v:2 w:3 s:4
 │    └── aggregations
 │         ├── max [as=max:5]
 │         │    └── k:1
 │         └── min [as=min:6]
 │              └── v:2
 └── filters
      └── min:6 > 2

build
SELECT max(k), min(v) FROM kv HAVING max(v) > 2
----
project
 ├── columns: max:5 min:6
 └── select
      ├── columns: max:5 min:6 max:7!null
      ├── scalar-group-by
      │    ├── columns: max:5 min:6 max:7
      │    ├── project
      │    │    ├── columns: k:1!null v:2
      │    │    └── scan kv
      │    │         └── columns: k:1!null v:2 w:3 s:4
      │    └── aggregations
      │         ├── max [as=max:5]
      │         │    └── k:1
      │         ├── min [as=min:6]
      │         │    └── v:2
      │         └── max [as=max:7]
      │              └── v:2
      └── filters
           └── max:7 > 2

build
SELECT max(k), min(v) FROM kv HAVING max(min(v)) > 2
----
error (42803): max(): min(): aggregate function calls cannot be nested

build
SELECT max(k), min(v) FROM kv HAVING k
----
error (42804): argument of HAVING must be type bool, not type int

# Expressions listed in the HAVING clause must conform to same validation as the SELECT clause (grouped or aggregated).
build
SELECT 3 FROM kv GROUP BY v HAVING k > 5
----
error (42803): column "k" must appear in the GROUP BY clause or be used in an aggregate function

# Special case for grouping on primary key.
build
SELECT 3 FROM kv GROUP BY k HAVING v > 2
----
project
 ├── columns: "?column?":5!null
 ├── select
 │    ├── columns: k:1!null v:2!null
 │    ├── group-by
 │    │    ├── columns: k:1!null v:2
 │    │    ├── grouping columns: k:1!null v:2
 │    │    └── project
 │    │         ├── columns: k:1!null v:2
 │    │         └── scan kv
 │    │              └── columns: k:1!null v:2 w:3 s:4
 │    └── filters
 │         └── v:2 > 2
 └── projections
      └── 3 [as="?column?":5]

build
SELECT k FROM kv HAVING k > 7
----
error (42803): column "k" must appear in the GROUP BY clause or be used in an aggregate function

build
SELECT count(*), k+w AS r FROM kv GROUP BY k+w HAVING (k+w) > 5
----
select
 ├── columns: count:5!null r:6!null
 ├── group-by
 │    ├── columns: count_rows:5!null column6:6
 │    ├── grouping columns: column6:6
 │    ├── project
 │    │    ├── columns: column6:6
 │    │    ├── scan kv
 │    │    │    └── columns: k:1!null v:2 w:3 s:4
 │    │    └── projections
 │    │         └── k:1 + w:3 [as=column6:6]
 │    └── aggregations
 │         └── count-rows [as=count_rows:5]
 └── filters
      └── column6:6 > 5

build
SELECT count(*), k+w FROM kv GROUP BY k+w HAVING (k+v) > 5
----
error (42803): column "k" must appear in the GROUP BY clause or be used in an aggregate function

# Check that everything still works with differently qualified names
build
SELECT max(kv.v) FROM kv GROUP BY v HAVING kv.v > 5
----
project
 ├── columns: max:5
 └── select
      ├── columns: v:2!null max:5
      ├── group-by
      │    ├── columns: v:2 max:5
      │    ├── grouping columns: v:2
      │    ├── project
      │    │    ├── columns: v:2
      │    │    └── scan kv
      │    │         └── columns: k:1!null v:2 w:3 s:4
      │    └── aggregations
      │         └── max [as=max:5]
      │              └── v:2
      └── filters
           └── v:2 > 5

build
SELECT sum(kv.w) FROM kv GROUP BY lower(s) HAVING lower(kv.s) LIKE 'test%'
----
project
 ├── columns: sum:5
 └── select
      ├── columns: sum:5 column6:6!null
      ├── group-by
      │    ├── columns: sum:5 column6:6
      │    ├── grouping columns: column6:6
      │    ├── project
      │    │    ├── columns: column6:6 w:3
      │    │    ├── scan kv
      │    │    │    └── columns: k:1!null v:2 w:3 s:4
      │    │    └── projections
      │    │         └── lower(s:4) [as=column6:6]
      │    └── aggregations
      │         └── sum [as=sum:5]
      │              └── w:3
      └── filters
           └── column6:6 LIKE 'test%'

build
SELECT sum(kv.w) FROM kv GROUP BY lower(s) HAVING sum(w) IN (4, 5, 6)
----
project
 ├── columns: sum:5!null
 └── select
      ├── columns: sum:5!null column6:6
      ├── group-by
      │    ├── columns: sum:5 column6:6
      │    ├── grouping columns: column6:6
      │    ├── project
      │    │    ├── columns: column6:6 w:3
      │    │    ├── scan kv
      │    │    │    └── columns: k:1!null v:2 w:3 s:4
      │    │    └── projections
      │    │         └── lower(s:4) [as=column6:6]
      │    └── aggregations
      │         └── sum [as=sum:5]
      │              └── w:3
      └── filters
           └── sum:5 IN (4, 5, 6)

build fully-qualify-names
SELECT t.kv.v FROM t.kv GROUP BY v, kv.k * w HAVING k * kv.w > 5
----
project
 ├── columns: v:2
 └── select
      ├── columns: t.public.kv.v:2 column5:5!null
      ├── group-by
      │    ├── columns: t.public.kv.v:2 column5:5
      │    ├── grouping columns: t.public.kv.v:2 column5:5
      │    └── project
      │         ├── columns: column5:5 t.public.kv.v:2
      │         ├── scan t.public.kv
      │         │    └── columns: t.public.kv.k:1!null t.public.kv.v:2 t.public.kv.w:3 t.public.kv.s:4
      │         └── projections
      │              └── t.public.kv.k:1 * t.public.kv.w:3 [as=column5:5]
      └── filters
           └── column5:5 > 5

build fully-qualify-names
SELECT t.kv.v FROM t.kv GROUP BY v, kv.k * w HAVING w > 5
----
error (42803): column "w" must appear in the GROUP BY clause or be used in an aggregate function

build fully-qualify-names
SELECT upper(s), count(s), count(upper(s)) FROM t.kv GROUP BY upper(s) HAVING count(s) > 1
----
select
 ├── columns: upper:6 count:5!null count:7!null
 ├── group-by
 │    ├── columns: count:5!null column6:6 count:7!null
 │    ├── grouping columns: column6:6
 │    ├── project
 │    │    ├── columns: column6:6 t.public.kv.s:4
 │    │    ├── scan t.public.kv
 │    │    │    └── columns: t.public.kv.k:1!null t.public.kv.v:2 t.public.kv.w:3 t.public.kv.s:4
 │    │    └── projections
 │    │         └── upper(t.public.kv.s:4) [as=column6:6]
 │    └── aggregations
 │         ├── count [as=count:5]
 │         │    └── t.public.kv.s:4
 │         └── count [as=count:7]
 │              └── column6:6
 └── filters
      └── count:5 > 1

# Check that ordering by an alias of an aggregate works when HAVING is present.
build
SELECT sum(k) AS mk FROM kv GROUP BY v HAVING sum(k)=10 ORDER BY mk
----
project
 ├── columns: mk:5!null
 ├── ordering: +5
 └── select
      ├── columns: v:2 sum:5!null
      ├── group-by
      │    ├── columns: v:2 sum:5!null
      │    ├── grouping columns: v:2
      │    ├── project
      │    │    ├── columns: k:1!null v:2
      │    │    └── scan kv
      │    │         └── columns: k:1!null v:2 w:3 s:4
      │    └── aggregations
      │         └── sum [as=sum:5]
      │              └── k:1
      └── filters
           └── sum:5 = 10

build
SELECT sum(k) AS mk FROM kv GROUP BY v HAVING max(k) > 10 ORDER BY mk
----
sort
 ├── columns: mk:5!null
 ├── ordering: +5
 └── project
      ├── columns: sum:5!null
      └── select
           ├── columns: v:2 sum:5!null max:6!null
           ├── group-by
           │    ├── columns: v:2 sum:5!null max:6!null
           │    ├── grouping columns: v:2
           │    ├── project
           │    │    ├── columns: k:1!null v:2
           │    │    └── scan kv
           │    │         └── columns: k:1!null v:2 w:3 s:4
           │    └── aggregations
           │         ├── sum [as=sum:5]
           │         │    └── k:1
           │         └── max [as=max:6]
           │              └── k:1
           └── filters
                └── max:6 > 10

build
SELECT sum(k) AS mk FROM kv GROUP BY v HAVING v > 10 ORDER BY mk
----
sort
 ├── columns: mk:5!null
 ├── ordering: +5
 └── project
      ├── columns: sum:5!null
      └── select
           ├── columns: v:2!null sum:5!null
           ├── group-by
           │    ├── columns: v:2 sum:5!null
           │    ├── grouping columns: v:2
           │    ├── project
           │    │    ├── columns: k:1!null v:2
           │    │    └── scan kv
           │    │         └── columns: k:1!null v:2 w:3 s:4
           │    └── aggregations
           │         └── sum [as=sum:5]
           │              └── k:1
           └── filters
                └── v:2 > 10

build
SELECT max(k) AS mk1, max(k) AS mk2 FROM kv GROUP BY v HAVING max(k) > 10 ORDER BY mk1
----
sort
 ├── columns: mk1:5!null mk2:5!null
 ├── ordering: +5
 └── project
      ├── columns: max:5!null
      └── select
           ├── columns: v:2 max:5!null
           ├── group-by
           │    ├── columns: v:2 max:5!null
           │    ├── grouping columns: v:2
           │    ├── project
           │    │    ├── columns: k:1!null v:2
           │    │    └── scan kv
           │    │         └── columns: k:1!null v:2 w:3 s:4
           │    └── aggregations
           │         └── max [as=max:5]
           │              └── k:1
           └── filters
                └── max:5 > 10

build
SELECT max(k) AS mk1, max(k) AS mk2 FROM kv GROUP BY v HAVING max(k) > 10 ORDER BY mk2
----
sort
 ├── columns: mk1:5!null mk2:5!null
 ├── ordering: +5
 └── project
      ├── columns: max:5!null
      └── select
           ├── columns: v:2 max:5!null
           ├── group-by
           │    ├── columns: v:2 max:5!null
           │    ├── grouping columns: v:2
           │    ├── project
           │    │    ├── columns: k:1!null v:2
           │    │    └── scan kv
           │    │         └── columns: k:1!null v:2 w:3 s:4
           │    └── aggregations
           │         └── max [as=max:5]
           │              └── k:1
           └── filters
                └── max:5 > 10
