# Tests around deduplication of projection expressions.

exec-ddl
CREATE TABLE ab (a FLOAT, b FLOAT)
----

# Non-side effecting expressions should be deduplicated.
build
SELECT a+b, a+b FROM ab
----
project
 ├── columns: "?column?":4 "?column?":4
 ├── scan ab
 │    └── columns: a:1 b:2 rowid:3!null
 └── projections
      └── a:1 + b:2 [as="?column?":4]

# Ensure whitespace differences don't prevent deduplication.
build
SELECT a+b, a + b FROM ab
----
project
 ├── columns: "?column?":4 "?column?":4
 ├── scan ab
 │    └── columns: a:1 b:2 rowid:3!null
 └── projections
      └── a:1 + b:2 [as="?column?":4]

# Side-effecting expressions are not deduplicated.
build
SELECT a/b, a/b FROM ab
----
project
 ├── columns: "?column?":4 "?column?":5
 ├── scan ab
 │    └── columns: a:1 b:2 rowid:3!null
 └── projections
      ├── a:1 / b:2 [as="?column?":4]
      └── a:1 / b:2 [as="?column?":5]

build
SELECT random(), random() FROM ab
----
project
 ├── columns: random:4 random:5
 ├── scan ab
 │    └── columns: a:1 b:2 rowid:3!null
 └── projections
      ├── random() [as=random:4]
      └── random() [as=random:5]

# ORDER BY does not add a new projection if the same expression is projected
# already, regardless of side-effects.
build
SELECT a, b, random(), random() FROM ab ORDER BY random()
----
sort
 ├── columns: a:1 b:2 random:4 random:5
 ├── ordering: +4
 └── project
      ├── columns: random:4 random:5 a:1 b:2
      ├── scan ab
      │    └── columns: a:1 b:2 rowid:3!null
      └── projections
           ├── random() [as=random:4]
           └── random() [as=random:5]

# With GROUP BY, expressions identical to a grouping column are always
# collapsed into a single value.
build
SELECT random(), random() FROM ab GROUP BY random()
----
group-by
 ├── columns: random:4 random:4
 ├── grouping columns: column4:4
 └── project
      ├── columns: column4:4
      ├── scan ab
      │    └── columns: a:1 b:2 rowid:3!null
      └── projections
           └── random() [as=column4:4]

build
INSERT INTO ab VALUES (random(), random())
----
insert ab
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:4 => a:1
 │    ├── column2:5 => b:2
 │    └── column6:6 => rowid:3
 └── project
      ├── columns: column6:6 column1:4 column2:5
      ├── values
      │    ├── columns: column1:4 column2:5
      │    └── (random(), random())
      └── projections
           └── unique_rowid() [as=column6:6]

# Make sure impure default expressions are not deduplicated.
exec-ddl
CREATE TABLE abcd (a FLOAT, b FLOAT, c FLOAT DEFAULT random(), d FLOAT DEFAULT random())
----

build
INSERT INTO abcd VALUES (1, 1)
----
insert abcd
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:6 => a:1
 │    ├── column2:7 => b:2
 │    ├── column8:8 => c:3
 │    ├── column9:9 => d:4
 │    └── column10:10 => rowid:5
 └── project
      ├── columns: column8:8 column9:9 column10:10 column1:6!null column2:7!null
      ├── values
      │    ├── columns: column1:6!null column2:7!null
      │    └── (1.0, 1.0)
      └── projections
           ├── random() [as=column8:8]
           ├── random() [as=column9:9]
           └── unique_rowid() [as=column10:10]

build
INSERT INTO abcd VALUES (random(), random())
----
insert abcd
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:6 => a:1
 │    ├── column2:7 => b:2
 │    ├── column8:8 => c:3
 │    ├── column9:9 => d:4
 │    └── column10:10 => rowid:5
 └── project
      ├── columns: column8:8 column9:9 column10:10 column1:6 column2:7
      ├── values
      │    ├── columns: column1:6 column2:7
      │    └── (random(), random())
      └── projections
           ├── random() [as=column8:8]
           ├── random() [as=column9:9]
           └── unique_rowid() [as=column10:10]

build
UPSERT INTO abcd VALUES (1, 1)
----
upsert abcd
 ├── columns: <none>
 ├── upsert-mapping:
 │    ├── column1:6 => a:1
 │    ├── column2:7 => b:2
 │    ├── column8:8 => c:3
 │    ├── column9:9 => d:4
 │    └── column10:10 => rowid:5
 └── project
      ├── columns: column8:8 column9:9 column10:10 column1:6!null column2:7!null
      ├── values
      │    ├── columns: column1:6!null column2:7!null
      │    └── (1.0, 1.0)
      └── projections
           ├── random() [as=column8:8]
           ├── random() [as=column9:9]
           └── unique_rowid() [as=column10:10]

build
UPSERT INTO abcd VALUES (random(), random())
----
upsert abcd
 ├── columns: <none>
 ├── upsert-mapping:
 │    ├── column1:6 => a:1
 │    ├── column2:7 => b:2
 │    ├── column8:8 => c:3
 │    ├── column9:9 => d:4
 │    └── column10:10 => rowid:5
 └── project
      ├── columns: column8:8 column9:9 column10:10 column1:6 column2:7
      ├── values
      │    ├── columns: column1:6 column2:7
      │    └── (random(), random())
      └── projections
           ├── random() [as=column8:8]
           ├── random() [as=column9:9]
           └── unique_rowid() [as=column10:10]

build
UPDATE abcd SET a = random(), b = random() WHERE a=1
----
update abcd
 ├── columns: <none>
 ├── fetch columns: a:6 b:7 c:8 d:9 rowid:10
 ├── update-mapping:
 │    ├── column11:11 => a:1
 │    └── column12:12 => b:2
 └── project
      ├── columns: column11:11 column12:12 a:6!null b:7 c:8 d:9 rowid:10!null
      ├── select
      │    ├── columns: a:6!null b:7 c:8 d:9 rowid:10!null
      │    ├── scan abcd
      │    │    └── columns: a:6 b:7 c:8 d:9 rowid:10!null
      │    └── filters
      │         └── a:6 = 1.0
      └── projections
           ├── random() [as=column11:11]
           └── random() [as=column12:12]
