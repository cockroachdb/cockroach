exec-ddl
CREATE TABLE a (k INT PRIMARY KEY, i INT, f FLOAT, s STRING, j JSON)
----

exec-ddl
CREATE VIEW av AS SELECT k, i, s FROM a
----

build
SELECT * FROM av
----
project
 ├── columns: k:1!null i:2 s:4
 └── scan a
      └── columns: k:1!null i:2 f:3 s:4 j:5

build
SELECT av.i, s, t.public.av.s AS s2 FROM t.av
----
project
 ├── columns: i:2 s:4 s2:4
 └── project
      ├── columns: k:1!null i:2 s:4
      └── scan a
           └── columns: k:1!null i:2 f:3 s:4 j:5

# Self view join (multiple references to view).
build
SELECT av.k, av2.s FROM av, av AS av2 WHERE av.k=av2.k
----
project
 ├── columns: k:1!null s:9
 └── select
      ├── columns: k:1!null i:2 s:4 k:6!null i:7 s:9
      ├── inner-join (cross)
      │    ├── columns: k:1!null i:2 s:4 k:6!null i:7 s:9
      │    ├── project
      │    │    ├── columns: k:1!null i:2 s:4
      │    │    └── scan a
      │    │         └── columns: k:1!null i:2 f:3 s:4 j:5
      │    ├── project
      │    │    ├── columns: k:6!null i:7 s:9
      │    │    └── scan a
      │    │         └── columns: k:6!null i:7 f:8 s:9 j:10
      │    └── filters (true)
      └── filters
           └── k:1 = k:6

# View with aliased column names, filter, and ORDER BY.
exec-ddl
CREATE VIEW av2 (x, y) AS SELECT k, f FROM a WHERE i=10 ORDER BY s
----

# Result is not ordered.
build
SELECT * FROM av2
----
project
 ├── columns: x:1!null y:3
 └── project
      ├── columns: k:1!null f:3 s:4
      └── select
           ├── columns: k:1!null i:2!null f:3 s:4 j:5
           ├── scan a
           │    └── columns: k:1!null i:2 f:3 s:4 j:5
           └── filters
                └── i:2 = 10

# Sort used by group by because of presence of ARRAY_AGG.
build
SELECT array_agg(y) FROM av2
----
scalar-group-by
 ├── columns: array_agg:6
 ├── internal-ordering: +4
 ├── sort
 │    ├── columns: f:3 s:4
 │    ├── ordering: +4
 │    └── project
 │         ├── columns: f:3 s:4
 │         └── project
 │              ├── columns: k:1!null f:3 s:4
 │              └── select
 │                   ├── columns: k:1!null i:2!null f:3 s:4 j:5
 │                   ├── scan a
 │                   │    └── columns: k:1!null i:2 f:3 s:4 j:5
 │                   └── filters
 │                        └── i:2 = 10
 └── aggregations
      └── array-agg [as=array_agg:6]
           └── f:3
