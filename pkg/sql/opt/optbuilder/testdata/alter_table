exec-ddl
CREATE TABLE abc (a INT PRIMARY KEY, b INT, c STRING, INDEX b (b), UNIQUE INDEX bc (b,c))
----

build
ALTER TABLE abc SPLIT AT VALUES (1), (2)
----
alter-table-split
 ├── columns: key:2(bytes) pretty:3(string) split_enforced_until:4(timestamp)
 ├── values
 │    ├── columns: column1:1(int!null)
 │    ├── tuple [type=tuple{int}]
 │    │    └── const: 1 [type=int]
 │    └── tuple [type=tuple{int}]
 │         └── const: 2 [type=int]
 └── null [type=string]

build
ALTER TABLE abc SPLIT AT VALUES (1), (2) WITH EXPIRATION '2200-01-01 00:00:00.0'
----
alter-table-split
 ├── columns: key:2(bytes) pretty:3(string) split_enforced_until:4(timestamp)
 ├── values
 │    ├── columns: column1:1(int!null)
 │    ├── tuple [type=tuple{int}]
 │    │    └── const: 1 [type=int]
 │    └── tuple [type=tuple{int}]
 │         └── const: 2 [type=int]
 └── const: '2200-01-01 00:00:00.0' [type=string]

build
ALTER TABLE abc SPLIT AT VALUES (1, 2), (3, 4)
----
error: too many columns in SPLIT AT data

build
ALTER INDEX abc@bc SPLIT AT VALUES (1), (2) WITH EXPIRATION '2200-01-01 00:00:00.0'
----
alter-table-split
 ├── columns: key:2(bytes) pretty:3(string) split_enforced_until:4(timestamp)
 ├── values
 │    ├── columns: column1:1(int!null)
 │    ├── tuple [type=tuple{int}]
 │    │    └── const: 1 [type=int]
 │    └── tuple [type=tuple{int}]
 │         └── const: 2 [type=int]
 └── const: '2200-01-01 00:00:00.0' [type=string]

build
ALTER INDEX abc@bc SPLIT AT VALUES (1, 'foo'), (2, 'bar')
----
alter-table-split
 ├── columns: key:3(bytes) pretty:4(string) split_enforced_until:5(timestamp)
 ├── values
 │    ├── columns: column1:1(int!null) column2:2(string!null)
 │    ├── tuple [type=tuple{int, string}]
 │    │    ├── const: 1 [type=int]
 │    │    └── const: 'foo' [type=string]
 │    └── tuple [type=tuple{int, string}]
 │         ├── const: 2 [type=int]
 │         └── const: 'bar' [type=string]
 └── null [type=string]

build
ALTER INDEX abc@bc SPLIT AT VALUES (1, 2), (3, 4)
----
error: SPLIT AT data column 2 (c) must be of type string, not type int

build
ALTER INDEX abc@bc SPLIT AT SELECT b FROM abc ORDER BY a
----
alter-table-split
 ├── columns: key:4(bytes) pretty:5(string) split_enforced_until:6(timestamp)
 ├── project
 │    ├── columns: b:2(int)  [hidden: abc.a:1(int!null)]
 │    ├── ordering: +1
 │    └── scan abc
 │         ├── columns: abc.a:1(int!null) abc.b:2(int) abc.c:3(string)
 │         └── ordering: +1
 └── null [type=string]
