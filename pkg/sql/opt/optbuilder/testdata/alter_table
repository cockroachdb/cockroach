exec-ddl
CREATE TABLE abc (a INT PRIMARY KEY, b INT, c STRING, INDEX b (b), UNIQUE INDEX bc (b,c))
----

# Tests for ALTER TABLE SPLIT AT.
build
ALTER TABLE abc SPLIT AT VALUES (1), (2)
----
alter-table-split abc
 ├── columns: key:2(bytes) pretty:3(string) split_enforced_until:4(timestamp)
 ├── values
 │    ├── columns: column1:1(int!null)
 │    ├── tuple [type=tuple{int}]
 │    │    └── const: 1 [type=int]
 │    └── tuple [type=tuple{int}]
 │         └── const: 2 [type=int]
 └── null [type=string]

build
ALTER TABLE abc SPLIT AT VALUES (1), (2) WITH EXPIRATION '2200-01-01 00:00:00.0'
----
alter-table-split abc
 ├── columns: key:2(bytes) pretty:3(string) split_enforced_until:4(timestamp)
 ├── values
 │    ├── columns: column1:1(int!null)
 │    ├── tuple [type=tuple{int}]
 │    │    └── const: 1 [type=int]
 │    └── tuple [type=tuple{int}]
 │         └── const: 2 [type=int]
 └── const: '2200-01-01 00:00:00.0' [type=string]

build
ALTER TABLE abc SPLIT AT VALUES (1, 2), (3, 4)
----
error (42601): too many columns in SPLIT AT data

build
ALTER INDEX abc@bc SPLIT AT VALUES (1), (2) WITH EXPIRATION '2200-01-01 00:00:00.0'
----
alter-table-split abc@bc
 ├── columns: key:2(bytes) pretty:3(string) split_enforced_until:4(timestamp)
 ├── values
 │    ├── columns: column1:1(int!null)
 │    ├── tuple [type=tuple{int}]
 │    │    └── const: 1 [type=int]
 │    └── tuple [type=tuple{int}]
 │         └── const: 2 [type=int]
 └── const: '2200-01-01 00:00:00.0' [type=string]

build
ALTER INDEX abc@bc SPLIT AT VALUES (1, 'foo'), (2, 'bar')
----
alter-table-split abc@bc
 ├── columns: key:3(bytes) pretty:4(string) split_enforced_until:5(timestamp)
 ├── values
 │    ├── columns: column1:1(int!null) column2:2(string!null)
 │    ├── tuple [type=tuple{int, string}]
 │    │    ├── const: 1 [type=int]
 │    │    └── const: 'foo' [type=string]
 │    └── tuple [type=tuple{int, string}]
 │         ├── const: 2 [type=int]
 │         └── const: 'bar' [type=string]
 └── null [type=string]

build
ALTER INDEX abc@bc SPLIT AT VALUES (1, 2), (3, 4)
----
error (42601): SPLIT AT data column 2 (c) must be of type string, not type int

build
ALTER INDEX abc@bc SPLIT AT SELECT b FROM abc ORDER BY a
----
alter-table-split abc@bc
 ├── columns: key:4(bytes) pretty:5(string) split_enforced_until:6(timestamp)
 ├── project
 │    ├── columns: b:2(int)  [hidden: a:1(int!null)]
 │    ├── ordering: +1
 │    └── scan abc
 │         ├── columns: a:1(int!null) b:2(int) c:3(string)
 │         └── ordering: +1
 └── null [type=string]

# Tests for ALTER TABLE UNSPLIT.
build
ALTER TABLE abc UNSPLIT AT VALUES (1), (2)
----
alter-table-unsplit abc
 ├── columns: key:1(bytes) pretty:2(string)
 └── values
      ├── columns: column1:6(int!null)
      ├── tuple [type=tuple{int}]
      │    └── const: 1 [type=int]
      └── tuple [type=tuple{int}]
           └── const: 2 [type=int]

build
ALTER TABLE abc UNSPLIT ALL
----
alter-table-unsplit-all abc
 └── columns: key:1(bytes) pretty:2(string)

build
ALTER TABLE abc UNSPLIT AT VALUES (1, 2), (3, 4)
----
error (42601): too many columns in UNSPLIT AT data

build
ALTER INDEX abc@bc UNSPLIT ALL
----
alter-table-unsplit-all abc@bc
 └── columns: key:1(bytes) pretty:2(string)

build
ALTER INDEX abc@bc UNSPLIT AT VALUES (1, 'foo'), (2, 'bar')
----
alter-table-unsplit abc@bc
 ├── columns: key:1(bytes) pretty:2(string)
 └── values
      ├── columns: column1:6(int!null) column2:7(string!null)
      ├── tuple [type=tuple{int, string}]
      │    ├── const: 1 [type=int]
      │    └── const: 'foo' [type=string]
      └── tuple [type=tuple{int, string}]
           ├── const: 2 [type=int]
           └── const: 'bar' [type=string]

build
ALTER INDEX abc@bc UNSPLIT AT VALUES (1, 2), (3, 4)
----
error (42601): UNSPLIT AT data column 2 (c) must be of type string, not type int

build
ALTER INDEX abc@bc UNSPLIT AT SELECT b FROM abc ORDER BY a
----
alter-table-unsplit abc@bc
 ├── columns: key:1(bytes) pretty:2(string)
 └── project
      ├── columns: b:7(int)  [hidden: a:6(int!null)]
      ├── ordering: +6
      └── scan abc
           ├── columns: a:6(int!null) b:7(int) c:8(string)
           └── ordering: +6

# Tests for ALTER TABLE EXPERIMENTAL_RELOCATE.
build
ALTER TABLE abc EXPERIMENTAL_RELOCATE VALUES (ARRAY[1,2,3], 1), (ARRAY[4], 2)
----
alter-table-relocate abc
 ├── columns: key:1(bytes) pretty:2(string)
 └── values
      ├── columns: column1:3(int[]) column2:4(int!null)
      ├── tuple [type=tuple{int[], int}]
      │    ├── array: [type=int[]]
      │    │    ├── const: 1 [type=int]
      │    │    ├── const: 2 [type=int]
      │    │    └── const: 3 [type=int]
      │    └── const: 1 [type=int]
      └── tuple [type=tuple{int[], int}]
           ├── array: [type=int[]]
           │    └── const: 4 [type=int]
           └── const: 2 [type=int]

build
ALTER TABLE abc EXPERIMENTAL_RELOCATE LEASE VALUES (10), (11)
----
error (42601): less than 2 columns in EXPERIMENTAL_RELOCATE LEASE data

build
ALTER TABLE abc EXPERIMENTAL_RELOCATE LEASE VALUES (10, 1, 2), (11, 3, 4)
----
error (42601): too many columns in EXPERIMENTAL_RELOCATE LEASE data

build
ALTER INDEX abc@bc EXPERIMENTAL_RELOCATE VALUES (ARRAY[5], 1, 'foo'), (ARRAY[6,7,8], 2, 'bar')
----
alter-table-relocate abc@bc
 ├── columns: key:1(bytes) pretty:2(string)
 └── values
      ├── columns: column1:3(int[]) column2:4(int!null) column3:5(string!null)
      ├── tuple [type=tuple{int[], int, string}]
      │    ├── array: [type=int[]]
      │    │    └── const: 5 [type=int]
      │    ├── const: 1 [type=int]
      │    └── const: 'foo' [type=string]
      └── tuple [type=tuple{int[], int, string}]
           ├── array: [type=int[]]
           │    ├── const: 6 [type=int]
           │    ├── const: 7 [type=int]
           │    └── const: 8 [type=int]
           ├── const: 2 [type=int]
           └── const: 'bar' [type=string]

build
ALTER INDEX abc@bc EXPERIMENTAL_RELOCATE VALUES (5, 1, 'foo'), (6, 2, 'bar')
----
error (42601): EXPERIMENTAL_RELOCATE data column 1 (relocation array) must be of type int[], not type int

build
ALTER INDEX abc@bc EXPERIMENTAL_RELOCATE LEASE VALUES (ARRAY[5], 1, 'foo'), (ARRAY[6,7,8], 2, 'bar')
----
error (42601): EXPERIMENTAL_RELOCATE LEASE data column 1 (target leaseholder) must be of type int, not type int[]

build
ALTER INDEX abc@bc EXPERIMENTAL_RELOCATE VALUES (1, 2), (3, 4)
----
error (42601): EXPERIMENTAL_RELOCATE data column 1 (relocation array) must be of type int[], not type int

build
ALTER INDEX abc@bc EXPERIMENTAL_RELOCATE VALUES (ARRAY[1,2], 1, 2), (ARRAY[3,4], 3, 4)
----
error (42601): EXPERIMENTAL_RELOCATE data column 3 (c) must be of type string, not type int

build
ALTER INDEX abc@bc EXPERIMENTAL_RELOCATE LEASE VALUES (10, 1, 'foo'), (11, 3, 'bar')
----
alter-table-relocate abc@bc [lease]
 ├── columns: key:1(bytes) pretty:2(string)
 └── values
      ├── columns: column1:3(int!null) column2:4(int!null) column3:5(string!null)
      ├── tuple [type=tuple{int, int, string}]
      │    ├── const: 10 [type=int]
      │    ├── const: 1 [type=int]
      │    └── const: 'foo' [type=string]
      └── tuple [type=tuple{int, int, string}]
           ├── const: 11 [type=int]
           ├── const: 3 [type=int]
           └── const: 'bar' [type=string]
