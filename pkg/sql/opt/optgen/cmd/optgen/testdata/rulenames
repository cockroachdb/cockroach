optgen rulenames test.opt
define And {
    Left  Expr
    Right Expr
}

define True {}

define Join {
    Left  RelExpr
    Right RelExpr
}

[SimplifyTrueAnd, Normalize]
(And (True) $right:*) => $right

[NormalizeNestedAnds, Normalize]
(And $left:* (And $innerLeft:* $innerRight:*))
=>
(And (ConcatLeftDeepAnds $left $innerLeft) $innerRight)

[CommuteJoin, Explore]
(Join $r:* $s:*) => (Join $s $r)

[SkipOptimizeJoin, FastPath]
(Join $r:* $s:*) => (Root)
----
----
// Code generated by optgen; [omitted]

package opt

const (
	startAutoRule RuleName = iota + NumManualRuleNames

	// ------------------------------------------------------------
	// Normalize Rule Names
	// ------------------------------------------------------------
	SimplifyTrueAnd
	NormalizeNestedAnds

	// All rules greater than startExploreRule and less than
	// startFastPathRule are exploration rules.
	startExploreRule

	// ------------------------------------------------------------
	// Explore Rule Names
	// ------------------------------------------------------------
	CommuteJoin

	// All rules greater than startFastPathRule are fast-path rules.
	startFastPathRule

	// ------------------------------------------------------------
	// FastPath Rule Names
	// ------------------------------------------------------------
	SkipOptimizeJoin

	// NumRuleNames tracks the total count of rule names.
	NumRuleNames
)
----
----
