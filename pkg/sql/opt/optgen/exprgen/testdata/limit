exec-ddl
CREATE TABLE abc (a INT, b INT, c INT, INDEX ab(a, b))
----

expr
(Limit
  (Scan [ (Table "abc") (Index "abc@ab") (Cols "a,b") ])
  (Const 10 "int")
  (OrderingChoice "+a")
)
----
limit
 ├── columns: t.public.abc.a:1(int) t.public.abc.b:2(int)
 ├── internal-ordering: +1
 ├── cardinality: [0 - 10]
 ├── stats: [rows=10]
 ├── cost: 24.62
 ├── prune: (2)
 ├── interesting orderings: (+1,+2)
 ├── scan t.public.abc@ab
 │    ├── columns: t.public.abc.a:1(int) t.public.abc.b:2(int)
 │    ├── stats: [rows=1000]
 │    ├── cost: 24.51
 │    ├── ordering: +1
 │    ├── limit hint: 10.00
 │    ├── prune: (1,2)
 │    └── interesting orderings: (+1,+2)
 └── const: 10 [type=int]

expr
(Limit
  (Sort (Scan [ (Table "abc") (Cols "a,b") ]))
  (Const 10 "int")
  (OrderingChoice "+a")
)
----
limit
 ├── columns: t.public.abc.a:1(int) t.public.abc.b:2(int)
 ├── internal-ordering: +1
 ├── cardinality: [0 - 10]
 ├── stats: [rows=10]
 ├── cost: 1324.19194
 ├── interesting orderings: (+1,+2)
 ├── sort
 │    ├── columns: t.public.abc.a:1(int) t.public.abc.b:2(int)
 │    ├── stats: [rows=1000]
 │    ├── cost: 1324.08194
 │    ├── ordering: +1
 │    ├── limit hint: 10.00
 │    ├── interesting orderings: (+1,+2)
 │    └── scan t.public.abc
 │         ├── columns: t.public.abc.a:1(int) t.public.abc.b:2(int)
 │         ├── stats: [rows=1000]
 │         ├── cost: 1084.61
 │         └── interesting orderings: (+1,+2)
 └── const: 10 [type=int]
