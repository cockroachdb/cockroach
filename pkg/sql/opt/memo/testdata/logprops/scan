exec-ddl
CREATE TABLE a (x INT PRIMARY KEY, y INT, s STRING, d DECIMAL NOT NULL, UNIQUE (s DESC, d))
----
TABLE a
 ├── x int not null
 ├── y int
 ├── s string
 ├── d decimal not null
 ├── INDEX primary
 │    └── x int not null
 └── INDEX secondary
      ├── s string desc
      ├── d decimal not null
      └── x int not null (storing)

exec-ddl
CREATE TABLE b (x INT, z INT NOT NULL)
----
TABLE b
 ├── x int
 ├── z int not null
 ├── rowid int not null (hidden)
 └── INDEX primary
      └── rowid int not null (hidden)

build
SELECT * FROM a
----
scan a
 ├── columns: x:1(int!null) y:2(int) s:3(string) d:4(decimal!null)
 ├── stats: [rows=1000]
 └── keys: (1) weak(3,4)

build
SELECT * FROM b
----
project
 ├── columns: x:1(int) z:2(int!null)
 ├── stats: [rows=1000]
 └── scan b
      ├── columns: x:1(int) z:2(int!null) rowid:3(int!null)
      ├── stats: [rows=1000]
      └── keys: (3)

# Select subset of columns.
opt
SELECT s, x FROM a
----
scan a
 ├── columns: s:3(string) x:1(int!null)
 ├── stats: [rows=1000]
 └── keys: (1)

# Test constrained scan.
opt
SELECT s, x FROM a WHERE x=1
----
scan a
 ├── columns: s:3(string) x:1(int!null)
 ├── constraint: /1: [/1 - /1]
 ├── stats: [rows=1, distinct(1)=1]
 └── keys: (1)

# Test limited scan.
opt
SELECT s, x FROM a WHERE x > 1 LIMIT 2
----
scan a
 ├── columns: s:3(string) x:1(int!null)
 ├── constraint: /1: [/2 - ]
 ├── limit: 2
 ├── stats: [rows=2]
 └── keys: (1)

# Test case where there are no weak keys available.
opt
SELECT d FROM a
----
scan a
 ├── columns: d:4(decimal!null)
 └── stats: [rows=1000]
