exec-ddl
CREATE TABLE xy (x INT PRIMARY KEY, y INT)
----

build
WITH foo AS (SELECT * FROM xy) SELECT * FROM foo
----
with &1 (foo)
 ├── columns: x:3(int!null) y:4(int)
 ├── key: (3)
 ├── fd: (3)-->(4)
 ├── prune: (3,4)
 ├── scan xy
 │    ├── columns: xy.x:1(int!null) xy.y:2(int)
 │    ├── key: (1)
 │    ├── fd: (1)-->(2)
 │    ├── prune: (1,2)
 │    └── interesting orderings: (+1)
 └── with-scan &1 (foo)
      ├── columns: x:3(int!null) y:4(int)
      ├── mapping:
      │    ├──  xy.x:1(int) => x:3(int)
      │    └──  xy.y:2(int) => y:4(int)
      ├── key: (3)
      ├── fd: (3)-->(4)
      ├── prune: (3,4)
      └── cte-uses
           └── &1: count=1 used-columns=(1,2)

# Side effects should be propagated up to the top-level from the Binding side
# of a WITH.
build
WITH foo AS (SELECT 1/0) SELECT * FROM foo
----
with &1 (foo)
 ├── columns: "?column?":2(decimal!null)
 ├── cardinality: [1 - 1]
 ├── side-effects
 ├── key: ()
 ├── fd: ()-->(2)
 ├── prune: (2)
 ├── project
 │    ├── columns: "?column?":1(decimal!null)
 │    ├── cardinality: [1 - 1]
 │    ├── side-effects
 │    ├── key: ()
 │    ├── fd: ()-->(1)
 │    ├── prune: (1)
 │    ├── values
 │    │    ├── cardinality: [1 - 1]
 │    │    ├── key: ()
 │    │    └── tuple [type=tuple]
 │    └── projections
 │         └── div [as="?column?":1, type=decimal, side-effects]
 │              ├── const: 1 [type=int]
 │              └── const: 0 [type=int]
 └── with-scan &1 (foo)
      ├── columns: "?column?":2(decimal!null)
      ├── mapping:
      │    └──  "?column?":1(decimal) => "?column?":2(decimal)
      ├── cardinality: [1 - 1]
      ├── key: ()
      ├── fd: ()-->(2)
      └── prune: (2)

# Side effects should be propagated up to the top-level from the Input side of
# a With.
build
WITH foo AS (SELECT 1) SELECT 1/0 FROM foo
----
with &1 (foo)
 ├── columns: "?column?":3(decimal!null)
 ├── cardinality: [1 - 1]
 ├── side-effects
 ├── key: ()
 ├── fd: ()-->(3)
 ├── prune: (3)
 ├── project
 │    ├── columns: "?column?":1(int!null)
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(1)
 │    ├── prune: (1)
 │    ├── values
 │    │    ├── cardinality: [1 - 1]
 │    │    ├── key: ()
 │    │    └── tuple [type=tuple]
 │    └── projections
 │         └── const: 1 [as="?column?":1, type=int]
 └── project
      ├── columns: "?column?":3(decimal!null)
      ├── cardinality: [1 - 1]
      ├── side-effects
      ├── key: ()
      ├── fd: ()-->(3)
      ├── prune: (3)
      ├── cte-uses
      │    └── &1: count=1 used-columns=(1)
      ├── with-scan &1 (foo)
      │    ├── columns: "?column?":2(int!null)
      │    ├── mapping:
      │    │    └──  "?column?":1(int) => "?column?":2(int)
      │    ├── cardinality: [1 - 1]
      │    ├── key: ()
      │    ├── fd: ()-->(2)
      │    ├── prune: (2)
      │    └── cte-uses
      │         └── &1: count=1 used-columns=(1)
      └── projections
           └── div [as="?column?":3, type=decimal, side-effects]
                ├── const: 1 [type=int]
                └── const: 0 [type=int]

build
WITH foo AS (SELECT $1::INT) SELECT 1 FROM foo
----
with &1 (foo)
 ├── columns: "?column?":3(int!null)
 ├── cardinality: [1 - 1]
 ├── has-placeholder
 ├── key: ()
 ├── fd: ()-->(3)
 ├── prune: (3)
 ├── project
 │    ├── columns: int8:1(int)
 │    ├── cardinality: [1 - 1]
 │    ├── has-placeholder
 │    ├── key: ()
 │    ├── fd: ()-->(1)
 │    ├── prune: (1)
 │    ├── values
 │    │    ├── cardinality: [1 - 1]
 │    │    ├── key: ()
 │    │    └── tuple [type=tuple]
 │    └── projections
 │         └── cast: INT8 [as=int8:1, type=int]
 │              └── placeholder: $1 [type=string]
 └── project
      ├── columns: "?column?":3(int!null)
      ├── cardinality: [1 - 1]
      ├── key: ()
      ├── fd: ()-->(3)
      ├── prune: (3)
      ├── cte-uses
      │    └── &1: count=1 used-columns=(1)
      ├── with-scan &1 (foo)
      │    ├── columns: int8:2(int)
      │    ├── mapping:
      │    │    └──  int8:1(int) => int8:2(int)
      │    ├── cardinality: [1 - 1]
      │    ├── key: ()
      │    ├── fd: ()-->(2)
      │    ├── prune: (2)
      │    └── cte-uses
      │         └── &1: count=1 used-columns=(1)
      └── projections
           └── const: 1 [as="?column?":3, type=int]

# WithScan should not have outer columns.
build
SELECT
    *
FROM
    (VALUES (1), (2)) AS v (x),
    LATERAL (SELECT * FROM (WITH foo AS (SELECT 1 + x) SELECT * FROM foo))
----
error (0A000): CTEs may not be correlated

# Regression test for #40930.

exec-ddl
CREATE TABLE t40930 (
  s string
)
----

opt
WITH
    with_4189
        AS (
            SELECT
                tab_10102.s
            FROM
                t40930 AS tab_10102, (SELECT NULL) AS tab_10103 (col_24444)
        )
SELECT
    NULL
FROM
    t40930, with_4189
----
project
 ├── columns: "?column?":7(unknown)
 ├── fd: ()-->(7)
 ├── prune: (7)
 ├── inner-join (cross)
 │    ├── scan t40930
 │    ├── scan tab_10102
 │    └── filters (true)
 └── projections
      └── null [as="?column?":7, type=unknown]

build
SELECT
    *
FROM
    (VALUES (1), (2)) AS v (x),
    LATERAL (SELECT * FROM (WITH foo AS (SELECT 1 + x) SELECT * FROM foo))
----
error (0A000): CTEs may not be correlated
