exec-ddl
CREATE TABLE xyzs (x INT PRIMARY KEY, y INT, z FLOAT NOT NULL, s STRING, UNIQUE (s DESC, z))
----

exec-ddl
CREATE TABLE kuv (k INT PRIMARY KEY, u FLOAT, v STRING)
----

build
SELECT * FROM xyzs LIMIT 1
----
limit
 ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(1-4)
 ├── prune: (1-4)
 ├── interesting orderings: (+1) (-4,+3,+1)
 ├── project
 │    ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-4), (3,4)~~>(1,2)
 │    ├── limit hint: 1.00
 │    ├── prune: (1-4)
 │    ├── interesting orderings: (+1) (-4,+3,+1)
 │    └── scan xyzs
 │         ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string) crdb_internal_mvcc_timestamp:5(decimal)
 │         ├── key: (1)
 │         ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
 │         ├── limit hint: 1.00
 │         ├── prune: (1-5)
 │         └── interesting orderings: (+1) (-4,+3,+1)
 └── const: 1 [type=int]

build
SELECT * FROM xyzs WHERE x = y LIMIT 1
----
limit
 ├── columns: x:1(int!null) y:2(int!null) z:3(float!null) s:4(string)
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(1-4), (2)==(1), (1)==(2)
 ├── prune: (1-4)
 ├── interesting orderings: (+(1|2)) (-4,+3,+(1|2))
 ├── project
 │    ├── columns: x:1(int!null) y:2(int!null) z:3(float!null) s:4(string)
 │    ├── key: (1)
 │    ├── fd: (1)-->(3,4), (3,4)~~>(1,2), (1)==(2), (2)==(1)
 │    ├── limit hint: 1.00
 │    ├── prune: (1-4)
 │    ├── interesting orderings: (+(1|2)) (-4,+3,+(1|2))
 │    └── select
 │         ├── columns: x:1(int!null) y:2(int!null) z:3(float!null) s:4(string) crdb_internal_mvcc_timestamp:5(decimal)
 │         ├── key: (1)
 │         ├── fd: (1)-->(3-5), (3,4)~~>(1,2,5), (1)==(2), (2)==(1)
 │         ├── limit hint: 1.00
 │         ├── prune: (3-5)
 │         ├── interesting orderings: (+(1|2)) (-4,+3,+(1|2))
 │         ├── scan xyzs
 │         │    ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string) crdb_internal_mvcc_timestamp:5(decimal)
 │         │    ├── key: (1)
 │         │    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
 │         │    ├── prune: (1-5)
 │         │    └── interesting orderings: (+1) (-4,+3,+1)
 │         └── filters
 │              └── eq [type=bool, outer=(1,2), constraints=(/1: (/NULL - ]; /2: (/NULL - ]), fd=(1)==(2), (2)==(1)]
 │                   ├── variable: x:1 [type=int]
 │                   └── variable: y:2 [type=int]
 └── const: 1 [type=int]

build
SELECT count(*) FROM xyzs LIMIT 10
----
limit
 ├── columns: count:6(int!null)
 ├── cardinality: [1 - 1]
 ├── key: ()
 ├── fd: ()-->(6)
 ├── prune: (6)
 ├── scalar-group-by
 │    ├── columns: count_rows:6(int!null)
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(6)
 │    ├── limit hint: 10.00
 │    ├── prune: (6)
 │    ├── project
 │    │    └── scan xyzs
 │    │         ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string) crdb_internal_mvcc_timestamp:5(decimal)
 │    │         ├── key: (1)
 │    │         ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
 │    │         ├── prune: (1-5)
 │    │         └── interesting orderings: (+1) (-4,+3,+1)
 │    └── aggregations
 │         └── count-rows [as=count_rows:6, type=int]
 └── const: 10 [type=int]

build
SELECT * FROM xyzs LIMIT (SELECT 1)
----
limit
 ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 ├── immutable
 ├── key: (1)
 ├── fd: (1)-->(2-4), (3,4)~~>(1,2)
 ├── prune: (1-4)
 ├── interesting orderings: (+1) (-4,+3,+1)
 ├── project
 │    ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-4), (3,4)~~>(1,2)
 │    ├── prune: (1-4)
 │    ├── interesting orderings: (+1) (-4,+3,+1)
 │    └── scan xyzs
 │         ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string) crdb_internal_mvcc_timestamp:5(decimal)
 │         ├── key: (1)
 │         ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
 │         ├── prune: (1-5)
 │         └── interesting orderings: (+1) (-4,+3,+1)
 └── subquery [type=int]
      └── max1-row
           ├── columns: "?column?":6(int!null)
           ├── error: "more than one row returned by a subquery used as an expression"
           ├── cardinality: [1 - 1]
           ├── key: ()
           ├── fd: ()-->(6)
           └── project
                ├── columns: "?column?":6(int!null)
                ├── cardinality: [1 - 1]
                ├── key: ()
                ├── fd: ()-->(6)
                ├── prune: (6)
                ├── values
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── tuple [type=tuple]
                └── projections
                     └── const: 1 [as="?column?":6, type=int]

build
SELECT * FROM xyzs LIMIT 0
----
limit
 ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 ├── cardinality: [0 - 0]
 ├── key: ()
 ├── fd: ()-->(1-4)
 ├── prune: (1-4)
 ├── interesting orderings: (+1) (-4,+3,+1)
 ├── project
 │    ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-4), (3,4)~~>(1,2)
 │    ├── limit hint: 1.00
 │    ├── prune: (1-4)
 │    ├── interesting orderings: (+1) (-4,+3,+1)
 │    └── scan xyzs
 │         ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string) crdb_internal_mvcc_timestamp:5(decimal)
 │         ├── key: (1)
 │         ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
 │         ├── limit hint: 1.00
 │         ├── prune: (1-5)
 │         └── interesting orderings: (+1) (-4,+3,+1)
 └── const: 0 [type=int]

# Propagate outer columns.
build
SELECT (SELECT x FROM kuv LIMIT y) FROM xyzs
----
project
 ├── columns: x:11(int)
 ├── immutable
 ├── prune: (11)
 ├── scan xyzs
 │    ├── columns: xyzs.x:1(int!null) y:2(int) z:3(float!null) s:4(string) xyzs.crdb_internal_mvcc_timestamp:5(decimal)
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
 │    ├── prune: (1-5)
 │    └── interesting orderings: (+1) (-4,+3,+1)
 └── projections
      └── subquery [as=x:11, type=int, outer=(1,2), immutable, correlated-subquery]
           └── max1-row
                ├── columns: x:10(int)
                ├── error: "more than one row returned by a subquery used as an expression"
                ├── outer: (1,2)
                ├── cardinality: [0 - 1]
                ├── immutable
                ├── key: ()
                ├── fd: ()-->(10)
                └── limit
                     ├── columns: x:10(int)
                     ├── outer: (1,2)
                     ├── immutable
                     ├── fd: ()-->(10)
                     ├── prune: (10)
                     ├── project
                     │    ├── columns: x:10(int)
                     │    ├── outer: (1)
                     │    ├── fd: ()-->(10)
                     │    ├── prune: (10)
                     │    ├── scan kuv
                     │    │    ├── columns: k:6(int!null) u:7(float) v:8(string) kuv.crdb_internal_mvcc_timestamp:9(decimal)
                     │    │    ├── key: (6)
                     │    │    ├── fd: (6)-->(7-9)
                     │    │    ├── prune: (6-9)
                     │    │    └── interesting orderings: (+6)
                     │    └── projections
                     │         └── variable: xyzs.x:1 [as=x:10, type=int, outer=(1)]
                     └── variable: y:2 [type=int]

# Test very high limit (> max uint32).
opt
SELECT s, x FROM xyzs WHERE s='foo' LIMIT 4294967296
----
scan xyzs@secondary
 ├── columns: s:4(string!null) x:1(int!null)
 ├── constraint: /-4/3: [/'foo' - /'foo']
 ├── limit: 4294967296
 ├── key: (1)
 ├── fd: ()-->(4)
 ├── prune: (1)
 └── interesting orderings: (+1 opt(4))

# Regression test for #65038. Copy FDs from input regardless of the limit value
# to avoid error during test builds: "ordering column group X contains
# non-equivalent columns".
exec-ddl
CREATE TABLE t65038 (
  a INT PRIMARY KEY,
  b INT,
  c INT
)
----

opt
SELECT 1
FROM t65038 AS t1
WHERE t1.b IN (
  SELECT 1
  FROM t65038 CROSS JOIN t65038 AS t2
    JOIN t65038 AS t3 ON
      t2.a = t3.a
      AND t2.c = t3.c
      AND t2.b = t3.b
  ORDER BY t2.b
  LIMIT 1
)
ORDER BY t1.a ASC;
----
sort
 ├── columns: "?column?":18(int!null)  [hidden: t1.a:1(int!null)]
 ├── key: (1)
 ├── fd: ()-->(18)
 ├── ordering: +1 opt(18) [actual: +1]
 ├── prune: (1,18)
 ├── interesting orderings: (+1 opt(18))
 └── project
      ├── columns: "?column?":18(int!null) t1.a:1(int!null)
      ├── key: (1)
      ├── fd: ()-->(18)
      ├── prune: (1,18)
      ├── interesting orderings: (+1 opt(18))
      ├── semi-join (cross)
      │    ├── columns: t1.a:1(int!null) t1.b:2(int!null)
      │    ├── key: (1)
      │    ├── fd: ()-->(2)
      │    ├── prune: (1)
      │    ├── interesting orderings: (+1 opt(2))
      │    ├── select
      │    │    ├── columns: t1.a:1(int!null) t1.b:2(int!null)
      │    │    ├── key: (1)
      │    │    ├── fd: ()-->(2)
      │    │    ├── prune: (1)
      │    │    ├── interesting orderings: (+1 opt(2))
      │    │    ├── scan t65038 [as=t1]
      │    │    │    ├── columns: t1.a:1(int!null) t1.b:2(int)
      │    │    │    ├── key: (1)
      │    │    │    ├── fd: (1)-->(2)
      │    │    │    ├── prune: (1,2)
      │    │    │    └── interesting orderings: (+1)
      │    │    └── filters
      │    │         └── eq [type=bool, outer=(2), constraints=(/2: [/1 - /1]; tight), fd=()-->(2)]
      │    │              ├── variable: t1.b:2 [type=int]
      │    │              └── const: 1 [type=int]
      │    ├── limit
      │    │    ├── columns: t2.a:9(int!null) t2.b:10(int!null) t2.c:11(int!null) t3.a:13(int!null) t3.b:14(int!null) t3.c:15(int!null)
      │    │    ├── internal-ordering: +(10|14)
      │    │    ├── cardinality: [0 - 1]
      │    │    ├── key: ()
      │    │    ├── fd: ()-->(9-11,13-15), (13)==(9), (11)==(15), (15)==(11), (10)==(14), (14)==(10), (9)==(13)
      │    │    ├── interesting orderings: (+(10|14))
      │    │    ├── sort
      │    │    │    ├── columns: t2.a:9(int!null) t2.b:10(int!null) t2.c:11(int!null) t3.a:13(int!null) t3.b:14(int!null) t3.c:15(int!null)
      │    │    │    ├── fd: (9)-->(10,11), (13)-->(14,15), (9)==(13), (13)==(9), (11)==(15), (15)==(11), (10)==(14), (14)==(10)
      │    │    │    ├── ordering: +(10|14) [actual: +10]
      │    │    │    ├── limit hint: 1.00
      │    │    │    ├── interesting orderings: (+9) (+13)
      │    │    │    └── inner-join (cross)
      │    │    │         ├── columns: t2.a:9(int!null) t2.b:10(int!null) t2.c:11(int!null) t3.a:13(int!null) t3.b:14(int!null) t3.c:15(int!null)
      │    │    │         ├── fd: (9)-->(10,11), (13)-->(14,15), (9)==(13), (13)==(9), (11)==(15), (15)==(11), (10)==(14), (14)==(10)
      │    │    │         ├── interesting orderings: (+9) (+13)
      │    │    │         ├── scan t65038
      │    │    │         │    └── unfiltered-cols: (5-8)
      │    │    │         ├── inner-join (merge)
      │    │    │         │    ├── columns: t2.a:9(int!null) t2.b:10(int!null) t2.c:11(int!null) t3.a:13(int!null) t3.b:14(int!null) t3.c:15(int!null)
      │    │    │         │    ├── left ordering: +9,+10,+11
      │    │    │         │    ├── right ordering: +13,+14,+15
      │    │    │         │    ├── key: (13)
      │    │    │         │    ├── fd: (9)-->(10,11), (13)-->(14,15), (9)==(13), (13)==(9), (11)==(15), (15)==(11), (10)==(14), (14)==(10)
      │    │    │         │    ├── interesting orderings: (+9) (+13)
      │    │    │         │    ├── scan t65038 [as=t2]
      │    │    │         │    │    ├── columns: t2.a:9(int!null) t2.b:10(int) t2.c:11(int)
      │    │    │         │    │    ├── key: (9)
      │    │    │         │    │    ├── fd: (9)-->(10,11)
      │    │    │         │    │    ├── ordering: +9
      │    │    │         │    │    ├── prune: (9-11)
      │    │    │         │    │    ├── interesting orderings: (+9)
      │    │    │         │    │    └── unfiltered-cols: (9-12)
      │    │    │         │    ├── scan t65038 [as=t3]
      │    │    │         │    │    ├── columns: t3.a:13(int!null) t3.b:14(int) t3.c:15(int)
      │    │    │         │    │    ├── key: (13)
      │    │    │         │    │    ├── fd: (13)-->(14,15)
      │    │    │         │    │    ├── ordering: +13
      │    │    │         │    │    ├── prune: (13-15)
      │    │    │         │    │    ├── interesting orderings: (+13)
      │    │    │         │    │    └── unfiltered-cols: (13-16)
      │    │    │         │    └── filters (true)
      │    │    │         └── filters (true)
      │    │    └── const: 1 [type=int]
      │    └── filters (true)
      └── projections
           └── const: 1 [as="?column?":18, type=int]
