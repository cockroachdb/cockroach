exec-ddl
CREATE TABLE xyzs (x INT PRIMARY KEY, y INT, z FLOAT NOT NULL, s STRING, UNIQUE (s DESC, z))
----

exec-ddl
CREATE TABLE kuv (k INT PRIMARY KEY, u FLOAT, v STRING)
----

build
SELECT * FROM xyzs LIMIT 1
----
limit
 ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 ├── cardinality: [0 - 1]
 ├── key: ()
 ├── fd: ()-->(1-4)
 ├── prune: (1-4)
 ├── interesting orderings: (+1) (-4,+3,+1)
 ├── project
 │    ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-4), (3,4)~~>(1,2)
 │    ├── limit hint: 1.00
 │    ├── prune: (1-4)
 │    ├── interesting orderings: (+1) (-4,+3,+1)
 │    └── scan xyzs
 │         ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string) crdb_internal_mvcc_timestamp:5(decimal)
 │         ├── key: (1)
 │         ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
 │         ├── limit hint: 1.00
 │         ├── prune: (1-5)
 │         └── interesting orderings: (+1) (-4,+3,+1)
 └── const: 1 [type=int]

build
SELECT count(*) FROM xyzs LIMIT 10
----
limit
 ├── columns: count:6(int!null)
 ├── cardinality: [1 - 1]
 ├── key: ()
 ├── fd: ()-->(6)
 ├── prune: (6)
 ├── scalar-group-by
 │    ├── columns: count_rows:6(int!null)
 │    ├── cardinality: [1 - 1]
 │    ├── key: ()
 │    ├── fd: ()-->(6)
 │    ├── limit hint: 10.00
 │    ├── prune: (6)
 │    ├── project
 │    │    └── scan xyzs
 │    │         ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string) crdb_internal_mvcc_timestamp:5(decimal)
 │    │         ├── key: (1)
 │    │         ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
 │    │         ├── prune: (1-5)
 │    │         └── interesting orderings: (+1) (-4,+3,+1)
 │    └── aggregations
 │         └── count-rows [as=count_rows:6, type=int]
 └── const: 10 [type=int]

build
SELECT * FROM xyzs LIMIT (SELECT 1)
----
limit
 ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 ├── immutable
 ├── key: (1)
 ├── fd: (1)-->(2-4), (3,4)~~>(1,2)
 ├── prune: (1-4)
 ├── interesting orderings: (+1) (-4,+3,+1)
 ├── project
 │    ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-4), (3,4)~~>(1,2)
 │    ├── prune: (1-4)
 │    ├── interesting orderings: (+1) (-4,+3,+1)
 │    └── scan xyzs
 │         ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string) crdb_internal_mvcc_timestamp:5(decimal)
 │         ├── key: (1)
 │         ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
 │         ├── prune: (1-5)
 │         └── interesting orderings: (+1) (-4,+3,+1)
 └── subquery [type=int]
      └── max1-row
           ├── columns: "?column?":6(int!null)
           ├── error: "more than one row returned by a subquery used as an expression"
           ├── cardinality: [1 - 1]
           ├── key: ()
           ├── fd: ()-->(6)
           └── project
                ├── columns: "?column?":6(int!null)
                ├── cardinality: [1 - 1]
                ├── key: ()
                ├── fd: ()-->(6)
                ├── prune: (6)
                ├── values
                │    ├── cardinality: [1 - 1]
                │    ├── key: ()
                │    └── tuple [type=tuple]
                └── projections
                     └── const: 1 [as="?column?":6, type=int]

build
SELECT * FROM xyzs LIMIT 0
----
limit
 ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 ├── cardinality: [0 - 0]
 ├── key: ()
 ├── fd: ()-->(1-4)
 ├── prune: (1-4)
 ├── interesting orderings: (+1) (-4,+3,+1)
 ├── project
 │    ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string)
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-4), (3,4)~~>(1,2)
 │    ├── limit hint: 1.00
 │    ├── prune: (1-4)
 │    ├── interesting orderings: (+1) (-4,+3,+1)
 │    └── scan xyzs
 │         ├── columns: x:1(int!null) y:2(int) z:3(float!null) s:4(string) crdb_internal_mvcc_timestamp:5(decimal)
 │         ├── key: (1)
 │         ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
 │         ├── limit hint: 1.00
 │         ├── prune: (1-5)
 │         └── interesting orderings: (+1) (-4,+3,+1)
 └── const: 0 [type=int]

# Propagate outer columns.
build
SELECT (SELECT x FROM kuv LIMIT y) FROM xyzs
----
project
 ├── columns: x:11(int)
 ├── immutable
 ├── prune: (11)
 ├── scan xyzs
 │    ├── columns: xyzs.x:1(int!null) y:2(int) z:3(float!null) s:4(string) xyzs.crdb_internal_mvcc_timestamp:5(decimal)
 │    ├── key: (1)
 │    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
 │    ├── prune: (1-5)
 │    └── interesting orderings: (+1) (-4,+3,+1)
 └── projections
      └── subquery [as=x:11, type=int, outer=(1,2), immutable, correlated-subquery]
           └── max1-row
                ├── columns: x:10(int)
                ├── error: "more than one row returned by a subquery used as an expression"
                ├── outer: (1,2)
                ├── cardinality: [0 - 1]
                ├── immutable
                ├── key: ()
                ├── fd: ()-->(10)
                └── limit
                     ├── columns: x:10(int)
                     ├── outer: (1,2)
                     ├── immutable
                     ├── fd: ()-->(10)
                     ├── prune: (10)
                     ├── project
                     │    ├── columns: x:10(int)
                     │    ├── outer: (1)
                     │    ├── fd: ()-->(10)
                     │    ├── prune: (10)
                     │    ├── scan kuv
                     │    │    ├── columns: k:6(int!null) u:7(float) v:8(string) kuv.crdb_internal_mvcc_timestamp:9(decimal)
                     │    │    ├── key: (6)
                     │    │    ├── fd: (6)-->(7-9)
                     │    │    ├── prune: (6-9)
                     │    │    └── interesting orderings: (+6)
                     │    └── projections
                     │         └── variable: xyzs.x:1 [as=x:10, type=int, outer=(1)]
                     └── variable: y:2 [type=int]

# Test very high limit (> max uint32).
opt
SELECT s, x FROM xyzs WHERE s='foo' LIMIT 4294967296
----
scan xyzs@secondary
 ├── columns: s:4(string!null) x:1(int!null)
 ├── constraint: /-4/3: [/'foo' - /'foo']
 ├── limit: 4294967296
 ├── key: (1)
 ├── fd: ()-->(4)
 ├── prune: (1)
 └── interesting orderings: (+1) (-4)
