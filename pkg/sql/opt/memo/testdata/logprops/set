exec-ddl
CREATE TABLE xy (x INT PRIMARY KEY, y INT)
----
TABLE xy
 ├── x int not null
 ├── y int
 └── INDEX primary
      └── x int not null

exec-ddl
CREATE TABLE uv (u INT, v INT NOT NULL)
----
TABLE uv
 ├── u int
 ├── v int not null
 ├── rowid int not null (hidden)
 └── INDEX primary
      └── rowid int not null (hidden)

build
SELECT * FROM xy UNION SELECT * FROM uv
----
union
 ├── columns: x:6(int) y:7(int)
 ├── left columns: xy.x:1(int) xy.y:2(int)
 ├── right columns: uv.u:3(int) uv.v:4(int)
 ├── stats: [rows=2000]
 ├── scan xy
 │    ├── columns: xy.x:1(int!null) xy.y:2(int)
 │    ├── stats: [rows=1000]
 │    └── keys: (1)
 └── project
      ├── columns: uv.u:3(int) uv.v:4(int!null)
      ├── stats: [rows=1000]
      ├── scan uv
      │    ├── columns: uv.u:3(int) uv.v:4(int!null) uv.rowid:5(int!null)
      │    ├── stats: [rows=1000]
      │    └── keys: (5)
      └── projections [outer=(3,4)]
           ├── variable: uv.u [type=int, outer=(3)]
           └── variable: uv.v [type=int, outer=(4)]

build
SELECT x, y, x FROM xy INTERSECT SELECT v, u, rowid FROM (SELECT *, rowid FROM uv WHERE u=1) uv
----
intersect
 ├── columns: x:1(int!null) y:2(int) x:1(int!null)
 ├── left columns: xy.x:1(int!null) xy.y:2(int) xy.x:1(int!null)
 ├── right columns: uv.v:4(int) uv.u:3(int) uv.rowid:5(int)
 ├── stats: [rows=100]
 ├── project
 │    ├── columns: xy.x:1(int!null) xy.y:2(int)
 │    ├── stats: [rows=1000]
 │    ├── keys: (1)
 │    ├── scan xy
 │    │    ├── columns: xy.x:1(int!null) xy.y:2(int)
 │    │    ├── stats: [rows=1000]
 │    │    └── keys: (1)
 │    └── projections [outer=(1,2)]
 │         ├── variable: xy.x [type=int, outer=(1)]
 │         └── variable: xy.y [type=int, outer=(2)]
 └── project
      ├── columns: uv.v:4(int!null) uv.u:3(int) uv.rowid:5(int!null)
      ├── stats: [rows=100]
      ├── keys: (5)
      ├── select
      │    ├── columns: uv.u:3(int) uv.v:4(int!null) uv.rowid:5(int!null)
      │    ├── stats: [rows=100]
      │    ├── keys: (5)
      │    ├── scan uv
      │    │    ├── columns: uv.u:3(int) uv.v:4(int!null) uv.rowid:5(int!null)
      │    │    ├── stats: [rows=1000]
      │    │    └── keys: (5)
      │    └── eq [type=bool, outer=(3), constraints=(/3: [/1 - /1]; tight)]
      │         ├── variable: uv.u [type=int, outer=(3)]
      │         └── const: 1 [type=int]
      └── projections [outer=(3-5)]
           ├── variable: uv.v [type=int, outer=(4)]
           ├── variable: uv.u [type=int, outer=(3)]
           └── variable: uv.rowid [type=int, outer=(5)]

build
SELECT x, x, y FROM xy EXCEPT SELECT u, v, v FROM (SELECT * FROM uv WHERE u=1) uv
----
except
 ├── columns: x:1(int!null) x:1(int!null) y:2(int)
 ├── left columns: xy.x:1(int!null) xy.x:1(int!null) xy.y:2(int)
 ├── right columns: uv.u:3(int) uv.v:4(int) uv.v:4(int)
 ├── stats: [rows=1000]
 ├── project
 │    ├── columns: xy.x:1(int!null) xy.y:2(int)
 │    ├── stats: [rows=1000]
 │    ├── keys: (1)
 │    ├── scan xy
 │    │    ├── columns: xy.x:1(int!null) xy.y:2(int)
 │    │    ├── stats: [rows=1000]
 │    │    └── keys: (1)
 │    └── projections [outer=(1,2)]
 │         ├── variable: xy.x [type=int, outer=(1)]
 │         └── variable: xy.y [type=int, outer=(2)]
 └── project
      ├── columns: uv.u:3(int) uv.v:4(int!null)
      ├── stats: [rows=100]
      ├── project
      │    ├── columns: uv.u:3(int) uv.v:4(int!null)
      │    ├── stats: [rows=100]
      │    ├── select
      │    │    ├── columns: uv.u:3(int) uv.v:4(int!null) uv.rowid:5(int!null)
      │    │    ├── stats: [rows=100]
      │    │    ├── keys: (5)
      │    │    ├── scan uv
      │    │    │    ├── columns: uv.u:3(int) uv.v:4(int!null) uv.rowid:5(int!null)
      │    │    │    ├── stats: [rows=1000]
      │    │    │    └── keys: (5)
      │    │    └── eq [type=bool, outer=(3), constraints=(/3: [/1 - /1]; tight)]
      │    │         ├── variable: uv.u [type=int, outer=(3)]
      │    │         └── const: 1 [type=int]
      │    └── projections [outer=(3,4)]
      │         ├── variable: uv.u [type=int, outer=(3)]
      │         └── variable: uv.v [type=int, outer=(4)]
      └── projections [outer=(3,4)]
           ├── variable: uv.u [type=int, outer=(3)]
           └── variable: uv.v [type=int, outer=(4)]

# Propagate outer columns.
build
SELECT * FROM xy WHERE (SELECT x, u FROM uv UNION SELECT y, v FROM uv) = (1, 2)
----
select
 ├── columns: x:1(int!null) y:2(int)
 ├── stats: [rows=100]
 ├── keys: (1)
 ├── scan xy
 │    ├── columns: xy.x:1(int!null) xy.y:2(int)
 │    ├── stats: [rows=1000]
 │    └── keys: (1)
 └── eq [type=bool, outer=(1,2)]
      ├── subquery [type=tuple{int, int}, outer=(1,2)]
      │    ├── max1-row
      │    │    ├── columns: column11:11(tuple{int, int})
      │    │    ├── outer: (1,2)
      │    │    ├── stats: [rows=1]
      │    │    └── project
      │    │         ├── columns: column11:11(tuple{int, int})
      │    │         ├── outer: (1,2)
      │    │         ├── stats: [rows=2000]
      │    │         ├── union
      │    │         │    ├── columns: x:9(int) u:10(int)
      │    │         │    ├── left columns: xy.x:1(int) uv.u:3(int)
      │    │         │    ├── right columns: xy.y:2(int) uv.v:7(int)
      │    │         │    ├── outer: (1,2)
      │    │         │    ├── stats: [rows=2000]
      │    │         │    ├── project
      │    │         │    │    ├── columns: xy.x:1(int) uv.u:3(int)
      │    │         │    │    ├── outer: (1)
      │    │         │    │    ├── stats: [rows=1000]
      │    │         │    │    ├── scan uv
      │    │         │    │    │    ├── columns: uv.u:3(int) uv.v:4(int!null) uv.rowid:5(int!null)
      │    │         │    │    │    ├── stats: [rows=1000]
      │    │         │    │    │    └── keys: (5)
      │    │         │    │    └── projections [outer=(1,3)]
      │    │         │    │         ├── variable: xy.x [type=int, outer=(1)]
      │    │         │    │         └── variable: uv.u [type=int, outer=(3)]
      │    │         │    └── project
      │    │         │         ├── columns: xy.y:2(int) uv.v:7(int!null)
      │    │         │         ├── outer: (2)
      │    │         │         ├── stats: [rows=1000]
      │    │         │         ├── scan uv
      │    │         │         │    ├── columns: uv.u:6(int) uv.v:7(int!null) uv.rowid:8(int!null)
      │    │         │         │    ├── stats: [rows=1000]
      │    │         │         │    └── keys: (8)
      │    │         │         └── projections [outer=(2,7)]
      │    │         │              ├── variable: xy.y [type=int, outer=(2)]
      │    │         │              └── variable: uv.v [type=int, outer=(7)]
      │    │         └── projections [outer=(9,10)]
      │    │              └── tuple [type=tuple{int, int}, outer=(9,10)]
      │    │                   ├── variable: x [type=int, outer=(9)]
      │    │                   └── variable: u [type=int, outer=(10)]
      │    └── variable: column11 [type=tuple{int, int}, outer=(11)]
      └── tuple [type=tuple{int, int}]
           ├── const: 1 [type=int]
           └── const: 2 [type=int]
