exec-ddl
CREATE TABLE xysd (x INT PRIMARY KEY, y INT, s STRING, d DECIMAL NOT NULL, UNIQUE (s DESC, d))
----
TABLE xysd
 ├── x int not null
 ├── y int
 ├── s string
 ├── d decimal not null
 ├── INDEX primary
 │    └── x int not null
 └── INDEX secondary
      ├── s string desc
      ├── d decimal not null
      └── x int not null (storing)

exec-ddl
CREATE TABLE kuv (k INT PRIMARY KEY, u FLOAT, v STRING)
----
TABLE kuv
 ├── k int not null
 ├── u float
 ├── v string
 └── INDEX primary
      └── k int not null

build
SELECT y, x+1, 1, x FROM xysd
----
project
 ├── columns: y:2(int) column5:5(int) column6:6(int) x:1(int!null)
 ├── stats: [rows=1000]
 ├── keys: (1)
 ├── scan xysd
 │    ├── columns: xysd.x:1(int!null) xysd.y:2(int) xysd.s:3(string) xysd.d:4(decimal!null)
 │    ├── stats: [rows=1000]
 │    └── keys: (1) weak(3,4)
 └── projections [outer=(1,2)]
      ├── variable: xysd.y [type=int, outer=(2)]
      ├── plus [type=int, outer=(1)]
      │    ├── variable: xysd.x [type=int, outer=(1)]
      │    └── const: 1 [type=int]
      ├── const: 1 [type=int]
      └── variable: xysd.x [type=int, outer=(1)]

build
SELECT s FROM xysd
----
project
 ├── columns: s:3(string)
 ├── stats: [rows=1000]
 ├── scan xysd
 │    ├── columns: xysd.x:1(int!null) xysd.y:2(int) xysd.s:3(string) xysd.d:4(decimal!null)
 │    ├── stats: [rows=1000]
 │    └── keys: (1) weak(3,4)
 └── projections [outer=(3)]
      └── variable: xysd.s [type=string, outer=(3)]

# Propagate outer columns.
build
SELECT * FROM xysd WHERE (SELECT (SELECT y) FROM kuv WHERE k=x) > 5
----
select
 ├── columns: x:1(int!null) y:2(int) s:3(string) d:4(decimal!null)
 ├── stats: [rows=100]
 ├── keys: (1) weak(3,4)
 ├── scan xysd
 │    ├── columns: xysd.x:1(int!null) xysd.y:2(int) xysd.s:3(string) xysd.d:4(decimal!null)
 │    ├── stats: [rows=1000]
 │    └── keys: (1) weak(3,4)
 └── gt [type=bool, outer=(1,2)]
      ├── subquery [type=int, outer=(1,2)]
      │    ├── max1-row
      │    │    ├── columns: column8:8(int)
      │    │    ├── outer: (1,2)
      │    │    ├── cardinality: [0 - 1]
      │    │    ├── stats: [rows=1]
      │    │    └── project
      │    │         ├── columns: column8:8(int)
      │    │         ├── outer: (1,2)
      │    │         ├── stats: [rows=100]
      │    │         ├── select
      │    │         │    ├── columns: kuv.k:5(int!null) kuv.u:6(float) kuv.v:7(string)
      │    │         │    ├── outer: (1)
      │    │         │    ├── stats: [rows=100]
      │    │         │    ├── keys: (5)
      │    │         │    ├── scan kuv
      │    │         │    │    ├── columns: kuv.k:5(int!null) kuv.u:6(float) kuv.v:7(string)
      │    │         │    │    ├── stats: [rows=1000]
      │    │         │    │    └── keys: (5)
      │    │         │    └── eq [type=bool, outer=(1,5)]
      │    │         │         ├── variable: kuv.k [type=int, outer=(5)]
      │    │         │         └── variable: xysd.x [type=int, outer=(1)]
      │    │         └── projections [outer=(2)]
      │    │              └── subquery [type=int, outer=(2)]
      │    │                   ├── max1-row
      │    │                   │    ├── columns: xysd.y:2(int)
      │    │                   │    ├── outer: (2)
      │    │                   │    ├── cardinality: [1 - 1]
      │    │                   │    ├── stats: [rows=1]
      │    │                   │    └── project
      │    │                   │         ├── columns: xysd.y:2(int)
      │    │                   │         ├── outer: (2)
      │    │                   │         ├── cardinality: [1 - 1]
      │    │                   │         ├── stats: [rows=1]
      │    │                   │         ├── values
      │    │                   │         │    ├── cardinality: [1 - 1]
      │    │                   │         │    ├── stats: [rows=1]
      │    │                   │         │    └── tuple [type=tuple{}]
      │    │                   │         └── projections [outer=(2)]
      │    │                   │              └── variable: xysd.y [type=int, outer=(2)]
      │    │                   └── variable: xysd.y [type=int, outer=(2)]
      │    └── variable: column8 [type=int, outer=(8)]
      └── const: 5 [type=int]

# Pass through cardinality.
build
SELECT x, y FROM (SELECT * FROM xysd LIMIT 10)
----
project
 ├── columns: x:1(int!null) y:2(int)
 ├── cardinality: [0 - 10]
 ├── stats: [rows=10]
 ├── keys: (1)
 ├── limit
 │    ├── columns: xysd.x:1(int!null) xysd.y:2(int) xysd.s:3(string) xysd.d:4(decimal!null)
 │    ├── cardinality: [0 - 10]
 │    ├── stats: [rows=10]
 │    ├── keys: (1) weak(3,4)
 │    ├── scan xysd
 │    │    ├── columns: xysd.x:1(int!null) xysd.y:2(int) xysd.s:3(string) xysd.d:4(decimal!null)
 │    │    ├── stats: [rows=1000]
 │    │    └── keys: (1) weak(3,4)
 │    └── const: 10 [type=int]
 └── projections [outer=(1,2)]
      ├── variable: xysd.x [type=int, outer=(1)]
      └── variable: xysd.y [type=int, outer=(2)]
