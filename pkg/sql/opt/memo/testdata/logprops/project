exec-ddl
CREATE TABLE xysd (x INT PRIMARY KEY, y INT, s STRING, d DECIMAL NOT NULL, UNIQUE (s DESC, d))
----
TABLE xysd
 ├── x int not null
 ├── y int
 ├── s string
 ├── d decimal not null
 ├── INDEX primary
 │    └── x int not null
 └── INDEX secondary
      ├── s string desc
      ├── d decimal not null
      └── x int not null (storing)

exec-ddl
CREATE TABLE kuv (k INT PRIMARY KEY, u FLOAT, v STRING)
----
TABLE kuv
 ├── k int not null
 ├── u float
 ├── v string
 └── INDEX primary
      └── k int not null

build
SELECT y, x+1, 1, x FROM xysd
----
project
 ├── columns: y:2(int) "x + 1":5(int) "1":6(int!null) x:1(int!null)
 ├── stats: [rows=1000]
 ├── keys: (1)
 ├── scan xysd
 │    ├── columns: x:1(int!null) y:2(int) s:3(string) d:4(decimal!null)
 │    ├── stats: [rows=1000]
 │    └── keys: (1) weak(3,4)
 └── projections [outer=(1,2)]
      ├── plus [type=int, outer=(1)]
      │    ├── variable: xysd.x [type=int, outer=(1)]
      │    └── const: 1 [type=int]
      └── const: 1 [type=int]

build
SELECT s FROM xysd
----
project
 ├── columns: s:3(string)
 ├── stats: [rows=1000]
 └── scan xysd
      ├── columns: x:1(int!null) y:2(int) s:3(string) d:4(decimal!null)
      ├── stats: [rows=1000]
      └── keys: (1) weak(3,4)

# Propagate outer columns.
build
SELECT * FROM xysd WHERE (SELECT (SELECT y) FROM kuv WHERE k=x) > 5
----
select
 ├── columns: x:1(int!null) y:2(int) s:3(string) d:4(decimal!null)
 ├── stats: [rows=333]
 ├── keys: (1) weak(3,4)
 ├── scan xysd
 │    ├── columns: x:1(int!null) xysd.y:2(int) s:3(string) d:4(decimal!null)
 │    ├── stats: [rows=1000]
 │    └── keys: (1) weak(3,4)
 └── filters [type=bool, outer=(1,2)]
      └── gt [type=bool, outer=(1,2)]
           ├── subquery [type=int, outer=(1,2)]
           │    └── max1-row
           │         ├── columns: "(SELECT y)":9(int)
           │         ├── outer: (1,2)
           │         ├── cardinality: [0 - 1]
           │         ├── stats: [rows=1]
           │         └── project
           │              ├── columns: "(SELECT y)":9(int)
           │              ├── outer: (1,2)
           │              ├── stats: [rows=111]
           │              ├── select
           │              │    ├── columns: k:5(int!null) u:6(float) v:7(string)
           │              │    ├── outer: (1)
           │              │    ├── stats: [rows=111]
           │              │    ├── keys: (5)
           │              │    ├── scan kuv
           │              │    │    ├── columns: k:5(int!null) u:6(float) v:7(string)
           │              │    │    ├── stats: [rows=1000]
           │              │    │    └── keys: (5)
           │              │    └── filters [type=bool, outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ])]
           │              │         └── eq [type=bool, outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ])]
           │              │              ├── variable: kuv.k [type=int, outer=(5)]
           │              │              └── variable: xysd.x [type=int, outer=(1)]
           │              └── projections [outer=(2)]
           │                   └── subquery [type=int, outer=(2)]
           │                        └── max1-row
           │                             ├── columns: y:8(int)
           │                             ├── outer: (2)
           │                             ├── cardinality: [1 - 1]
           │                             ├── stats: [rows=1]
           │                             └── project
           │                                  ├── columns: y:8(int)
           │                                  ├── outer: (2)
           │                                  ├── cardinality: [1 - 1]
           │                                  ├── stats: [rows=1]
           │                                  ├── values
           │                                  │    ├── cardinality: [1 - 1]
           │                                  │    ├── stats: [rows=1]
           │                                  │    └── tuple [type=tuple{}]
           │                                  └── projections [outer=(2)]
           │                                       └── variable: xysd.y [type=int, outer=(2)]
           └── const: 5 [type=int]

# Pass through cardinality.
build
SELECT x, y FROM (SELECT * FROM xysd LIMIT 10)
----
project
 ├── columns: x:1(int!null) y:2(int)
 ├── cardinality: [0 - 10]
 ├── stats: [rows=10]
 ├── keys: (1)
 └── limit
      ├── columns: x:1(int!null) y:2(int) s:3(string) d:4(decimal!null)
      ├── cardinality: [0 - 10]
      ├── stats: [rows=10]
      ├── keys: (1) weak(3,4)
      ├── scan xysd
      │    ├── columns: x:1(int!null) y:2(int) s:3(string) d:4(decimal!null)
      │    ├── stats: [rows=1000]
      │    └── keys: (1) weak(3,4)
      └── const: 10 [type=int]

# Constant null and not-null columns.
build
SELECT 1, 'foo', null, 1::decimal + null, null::string FROM xysd
----
project
 ├── columns: "1":5(int!null) "'foo'":6(string!null) NULL:7(unknown) "1::DECIMAL + NULL":7(unknown) "NULL::STRING":8(string)
 ├── stats: [rows=1000]
 ├── scan xysd
 │    ├── columns: x:1(int!null) y:2(int) s:3(string) d:4(decimal!null)
 │    ├── stats: [rows=1000]
 │    └── keys: (1) weak(3,4)
 └── projections
      ├── const: 1 [type=int]
      ├── const: 'foo' [type=string]
      ├── null [type=unknown]
      └── cast: STRING [type=string]
           └── null [type=unknown]
