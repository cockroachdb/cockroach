exec-ddl
CREATE TABLE a (x INT PRIMARY KEY, y INT, z FLOAT NOT NULL, s STRING, UNIQUE (s DESC, z))
----
TABLE a
 ├── x int not null
 ├── y int
 ├── z float not null
 ├── s string
 ├── INDEX primary
 │    └── x int not null
 └── INDEX secondary
      ├── s string desc
      ├── z float not null
      └── x int not null (storing)

exec-ddl
ALTER TABLE a INJECT STATISTICS '[
  {
    "columns": ["x"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 2000,
    "distinct_count": 2000
  },
  {
    "columns": ["y"],
    "created_at": "2018-01-01 1:30:00.00000+00:00",
    "row_count": 2000,
    "distinct_count": 400
  },
  {
    "columns": ["s"],
    "created_at": "2018-01-01 1:30:00.00000+00:00",
    "row_count": 2000,
    "distinct_count": 10
  },
  {
    "columns": ["s","y","z"],
    "created_at": "2018-01-01 1:40:00.00000+00:00",
    "row_count": 2000,
    "distinct_count": 600
  }
]'
----

# No aggregate.
build
SELECT x FROM a GROUP BY x, y
----
project
 ├── columns: x:1(int!null)
 ├── stats: [rows=2000, distinct(1)=2000]
 ├── keys: (1)
 ├── group-by
 │    ├── columns: a.x:1(int!null) a.y:2(int)
 │    ├── grouping columns: a.x:1(int!null) a.y:2(int)
 │    ├── stats: [rows=2000, distinct(1)=2000, distinct(2)=400]
 │    ├── keys: (1)
 │    ├── project
 │    │    ├── columns: a.x:1(int!null) a.y:2(int)
 │    │    ├── stats: [rows=2000, distinct(1)=2000, distinct(2)=400]
 │    │    ├── keys: (1)
 │    │    ├── scan a
 │    │    │    ├── columns: a.x:1(int!null) a.y:2(int) a.z:3(float!null) a.s:4(string)
 │    │    │    ├── stats: [rows=2000, distinct(1)=2000, distinct(2)=400, distinct(4)=10, distinct(2-4)=600]
 │    │    │    └── keys: (1) weak(3,4)
 │    │    └── projections [outer=(1,2)]
 │    │         ├── variable: a.x [type=int, outer=(1)]
 │    │         └── variable: a.y [type=int, outer=(2)]
 │    └── aggregations
 └── projections [outer=(1)]
      └── variable: a.x [type=int, outer=(1)]

# Group by single column key.
build
SELECT max(y) FROM a GROUP BY x
----
project
 ├── columns: column5:5(int)
 ├── stats: [rows=2000]
 ├── group-by
 │    ├── columns: a.x:1(int!null) column5:5(int)
 │    ├── grouping columns: a.x:1(int!null)
 │    ├── stats: [rows=2000, distinct(1)=2000]
 │    ├── keys: (1)
 │    ├── project
 │    │    ├── columns: a.x:1(int!null) a.y:2(int)
 │    │    ├── stats: [rows=2000, distinct(1)=2000, distinct(2)=400]
 │    │    ├── keys: (1)
 │    │    ├── scan a
 │    │    │    ├── columns: a.x:1(int!null) a.y:2(int) a.z:3(float!null) a.s:4(string)
 │    │    │    ├── stats: [rows=2000, distinct(1)=2000, distinct(2)=400, distinct(4)=10, distinct(2-4)=600]
 │    │    │    └── keys: (1) weak(3,4)
 │    │    └── projections [outer=(1,2)]
 │    │         ├── variable: a.x [type=int, outer=(1)]
 │    │         └── variable: a.y [type=int, outer=(2)]
 │    └── aggregations [outer=(2)]
 │         └── function: max [type=int, outer=(2)]
 │              └── variable: a.y [type=int, outer=(2)]
 └── projections [outer=(5)]
      └── variable: column5 [type=int, outer=(5)]

# Group by non-key.
build
SELECT y, sum(z) FROM a GROUP BY y
----
group-by
 ├── columns: y:2(int) column5:5(float)
 ├── grouping columns: a.y:2(int)
 ├── stats: [rows=400, distinct(2)=400]
 ├── keys: weak(2)
 ├── project
 │    ├── columns: a.y:2(int) a.z:3(float!null)
 │    ├── stats: [rows=2000, distinct(2)=400]
 │    ├── scan a
 │    │    ├── columns: a.x:1(int!null) a.y:2(int) a.z:3(float!null) a.s:4(string)
 │    │    ├── stats: [rows=2000, distinct(1)=2000, distinct(2)=400, distinct(4)=10, distinct(2-4)=600]
 │    │    └── keys: (1) weak(3,4)
 │    └── projections [outer=(2,3)]
 │         ├── variable: a.y [type=int, outer=(2)]
 │         └── variable: a.z [type=float, outer=(3)]
 └── aggregations [outer=(3)]
      └── function: sum [type=float, outer=(3)]
           └── variable: a.z [type=float, outer=(3)]

build
SELECT max(x) FROM a GROUP BY y, z, s
----
project
 ├── columns: column5:5(int)
 ├── stats: [rows=600]
 ├── group-by
 │    ├── columns: a.y:2(int) a.z:3(float!null) a.s:4(string) column5:5(int)
 │    ├── grouping columns: a.y:2(int) a.z:3(float!null) a.s:4(string)
 │    ├── stats: [rows=600, distinct(2)=400, distinct(4)=10, distinct(2-4)=600]
 │    ├── keys: weak(3,4)
 │    ├── project
 │    │    ├── columns: a.y:2(int) a.z:3(float!null) a.s:4(string) a.x:1(int!null)
 │    │    ├── stats: [rows=2000, distinct(1)=2000, distinct(2)=400, distinct(4)=10, distinct(2-4)=600]
 │    │    ├── keys: (1) weak(3,4)
 │    │    ├── scan a
 │    │    │    ├── columns: a.x:1(int!null) a.y:2(int) a.z:3(float!null) a.s:4(string)
 │    │    │    ├── stats: [rows=2000, distinct(1)=2000, distinct(2)=400, distinct(4)=10, distinct(2-4)=600]
 │    │    │    └── keys: (1) weak(3,4)
 │    │    └── projections [outer=(1-4)]
 │    │         ├── variable: a.y [type=int, outer=(2)]
 │    │         ├── variable: a.z [type=float, outer=(3)]
 │    │         ├── variable: a.s [type=string, outer=(4)]
 │    │         └── variable: a.x [type=int, outer=(1)]
 │    └── aggregations [outer=(1)]
 │         └── function: max [type=int, outer=(1)]
 │              └── variable: a.x [type=int, outer=(1)]
 └── projections [outer=(5)]
      └── variable: column5 [type=int, outer=(5)]

build
SELECT min(x) FROM a GROUP BY y, z
----
project
 ├── columns: column5:5(int)
 ├── stats: [rows=400]
 ├── group-by
 │    ├── columns: a.y:2(int) a.z:3(float!null) column5:5(int)
 │    ├── grouping columns: a.y:2(int) a.z:3(float!null)
 │    ├── stats: [rows=400, distinct(2)=400]
 │    ├── keys: weak(2,3)
 │    ├── project
 │    │    ├── columns: a.y:2(int) a.z:3(float!null) a.x:1(int!null)
 │    │    ├── stats: [rows=2000, distinct(1)=2000, distinct(2)=400]
 │    │    ├── keys: (1)
 │    │    ├── scan a
 │    │    │    ├── columns: a.x:1(int!null) a.y:2(int) a.z:3(float!null) a.s:4(string)
 │    │    │    ├── stats: [rows=2000, distinct(1)=2000, distinct(2)=400, distinct(4)=10, distinct(2-4)=600]
 │    │    │    └── keys: (1) weak(3,4)
 │    │    └── projections [outer=(1-3)]
 │    │         ├── variable: a.y [type=int, outer=(2)]
 │    │         ├── variable: a.z [type=float, outer=(3)]
 │    │         └── variable: a.x [type=int, outer=(1)]
 │    └── aggregations [outer=(1)]
 │         └── function: min [type=int, outer=(1)]
 │              └── variable: a.x [type=int, outer=(1)]
 └── projections [outer=(5)]
      └── variable: column5 [type=int, outer=(5)]
