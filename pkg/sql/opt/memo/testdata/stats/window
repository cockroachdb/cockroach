exec-ddl
CREATE TABLE kv (
  k INT PRIMARY KEY,
  v INT,
  w INT,
  f FLOAT,
  d DECIMAL,
  s STRING,
  b BOOL,
  FAMILY (k, v, w, f, b),
  FAMILY (d),
  FAMILY (s)
)
----

build colstat=8
SELECT k, rank() OVER () FROM (SELECT * FROM kv LIMIT 10)
----
project
 ├── columns: k:1(int!null) rank:8(int)
 ├── cardinality: [0 - 10]
 ├── stats: [rows=10, distinct(8)=10, null(8)=0]
 ├── key: (1)
 ├── fd: (1)-->(8)
 └── window partition=()
      ├── columns: k:1(int!null) v:2(int) w:3(int) f:4(float) d:5(decimal) s:6(string) b:7(bool) rank:8(int)
      ├── cardinality: [0 - 10]
      ├── stats: [rows=10, distinct(8)=10, null(8)=0]
      ├── key: (1)
      ├── fd: (1)-->(2-7)
      ├── limit
      │    ├── columns: k:1(int!null) v:2(int) w:3(int) f:4(float) d:5(decimal) s:6(string) b:7(bool)
      │    ├── cardinality: [0 - 10]
      │    ├── stats: [rows=10]
      │    ├── key: (1)
      │    ├── fd: (1)-->(2-7)
      │    ├── scan kv
      │    │    ├── columns: k:1(int!null) v:2(int) w:3(int) f:4(float) d:5(decimal) s:6(string) b:7(bool)
      │    │    ├── stats: [rows=1000]
      │    │    ├── key: (1)
      │    │    ├── fd: (1)-->(2-7)
      │    │    └── limit hint: 10.00
      │    └── 10 [type=int]
      └── windows
           └── rank [as=rank:8, type=int]
