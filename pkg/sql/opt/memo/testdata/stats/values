build
SELECT * FROM (VALUES (1, 2), (1, 2), (1, 3), (2, 3)) AS q(x, y) WHERE x = 5 AND y = 3
----
select
 ├── columns: x:1(int!null) y:2(int!null)
 ├── cardinality: [0 - 4]
 ├── stats: [rows=1, distinct(1)=1, distinct(2)=1]
 ├── values
 │    ├── columns: column1:1(int) column2:2(int)
 │    ├── cardinality: [4 - 4]
 │    ├── stats: [rows=4, distinct(1)=2, distinct(2)=2]
 │    ├── tuple [type=tuple{int, int}]
 │    │    ├── const: 1 [type=int]
 │    │    └── const: 2 [type=int]
 │    ├── tuple [type=tuple{int, int}]
 │    │    ├── const: 1 [type=int]
 │    │    └── const: 2 [type=int]
 │    ├── tuple [type=tuple{int, int}]
 │    │    ├── const: 1 [type=int]
 │    │    └── const: 3 [type=int]
 │    └── tuple [type=tuple{int, int}]
 │         ├── const: 2 [type=int]
 │         └── const: 3 [type=int]
 └── filters [type=bool, outer=(1,2), constraints=(/1: [/5 - /5]; /2: [/3 - /3]; tight)]
      └── and [type=bool, outer=(1,2), constraints=(/1: [/5 - /5]; /2: [/3 - /3]; tight)]
           ├── eq [type=bool, outer=(1), constraints=(/1: [/5 - /5]; tight)]
           │    ├── variable: column1 [type=int, outer=(1)]
           │    └── const: 5 [type=int]
           └── eq [type=bool, outer=(2), constraints=(/2: [/3 - /3]; tight)]
                ├── variable: column2 [type=int, outer=(2)]
                └── const: 3 [type=int]

build
SELECT x, y FROM (VALUES (1, 2), (1, 2), (1, 3), (2, 3)) AS q(x, y) GROUP BY x, y
----
group-by
 ├── columns: x:1(int) y:2(int)
 ├── grouping columns: column1:1(int) column2:2(int)
 ├── cardinality: [1 - 4]
 ├── stats: [rows=3, distinct(1,2)=3]
 ├── keys: weak(1,2)
 └── values
      ├── columns: column1:1(int) column2:2(int)
      ├── cardinality: [4 - 4]
      ├── stats: [rows=4, distinct(1,2)=3]
      ├── tuple [type=tuple{int, int}]
      │    ├── const: 1 [type=int]
      │    └── const: 2 [type=int]
      ├── tuple [type=tuple{int, int}]
      │    ├── const: 1 [type=int]
      │    └── const: 2 [type=int]
      ├── tuple [type=tuple{int, int}]
      │    ├── const: 1 [type=int]
      │    └── const: 3 [type=int]
      └── tuple [type=tuple{int, int}]
           ├── const: 2 [type=int]
           └── const: 3 [type=int]

build
SELECT * FROM (VALUES (1), (1), (1), (2))
----
values
 ├── columns: column1:1(int)
 ├── cardinality: [4 - 4]
 ├── stats: [rows=4]
 ├── tuple [type=tuple{int}]
 │    └── const: 1 [type=int]
 ├── tuple [type=tuple{int}]
 │    └── const: 1 [type=int]
 ├── tuple [type=tuple{int}]
 │    └── const: 1 [type=int]
 └── tuple [type=tuple{int}]
      └── const: 2 [type=int]

build
SELECT * FROM (VALUES (1), (1), (1), (2)) AS q(x) WHERE x = 1
----
select
 ├── columns: x:1(int!null)
 ├── cardinality: [0 - 4]
 ├── stats: [rows=2, distinct(1)=1]
 ├── values
 │    ├── columns: column1:1(int)
 │    ├── cardinality: [4 - 4]
 │    ├── stats: [rows=4, distinct(1)=2]
 │    ├── tuple [type=tuple{int}]
 │    │    └── const: 1 [type=int]
 │    ├── tuple [type=tuple{int}]
 │    │    └── const: 1 [type=int]
 │    ├── tuple [type=tuple{int}]
 │    │    └── const: 1 [type=int]
 │    └── tuple [type=tuple{int}]
 │         └── const: 2 [type=int]
 └── filters [type=bool, outer=(1), constraints=(/1: [/1 - /1]; tight)]
      └── eq [type=bool, outer=(1), constraints=(/1: [/1 - /1]; tight)]
           ├── variable: column1 [type=int, outer=(1)]
           └── const: 1 [type=int]
