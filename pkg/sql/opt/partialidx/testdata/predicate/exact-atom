# Tests for filters that contain expressions that exactly match atom
# predicates.

# Boolean filters

predtest vars=(bool)
@1
=>
@1
----
true
└── remaining filters: none

predtest vars=(bool)
NOT @1
=>
NOT @1
----
true
└── remaining filters: none

predtest vars=(bool)
NOT @1
=>
@1
----
false

# Equality filters

predtest vars=(string)
@1 = 'foo'
=>
@1 = 'foo'
----
true
└── remaining filters: none

predtest vars=(int)
@1 = 10
=>
@1 = 10
----
true
└── remaining filters: none

predtest vars=(string)
@1 = 'foo'
=>
@1 = 'bar'
----
false

predtest vars=(int)
@1 = 1
=>
@1 > 1
----
false

# Inequality filters

predtest vars=(int)
@1 > 10
=>
@1 > 10
----
true
└── remaining filters: none

predtest vars=(int)
@1 > 10
=>
@1 > 15
----
false

predtest vars=(int)
@1 > 1
=>
@1 = 1
----
false

# IN filters

predtest vars=(int)
@1 IN (1, 2, 3)
=>
@1 IN (1, 2, 3)
----
true
└── remaining filters: none

predtest vars=(int)
@1 IN (1, 2, 3)
=>
@1 IN (1, 2)
----
false

# Conjunction filters

predtest vars=(bool, bool)
@1 AND @2
=>
@1
----
true
└── remaining filters: @2

predtest vars=(bool, bool)
@1 AND @2
=>
@2
----
true
└── remaining filters: @1

predtest vars=(bool, bool)
@1 AND @1 AND @2
=>
@1
----
true
└── remaining filters: @2

predtest vars=(bool, bool)
@1 AND NOT @2
=>
@2
----
false

# Range filters

predtest vars=(int)
@1 > 10 AND @1 < 100
=>
@1 > 10
----
true
└── remaining filters: @1 < 100

predtest vars=(int, bool)
@1 > 10 AND @2 AND @1 < 100
=>
@2
----
true
└── remaining filters: (@1 > 10) AND (@1 < 100)

predtest vars=(int)
@1 > 15 AND @1 < 100
=>
@1 > 10
----
false
