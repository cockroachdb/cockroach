exec-ddl
CREATE TABLE a (b INT ARRAY);
----

# --------------------------------------------------
# SimplifyContainsArrayWithNulls
# --------------------------------------------------

norm expect-not=SimplifyContainsArrayWithNulls
SELECT array[1, 3] <@ array[3, 2, 1]
----
values
 ├── columns: "?column?":1!null
 ├── cardinality: [1 - 1]
 ├── key: ()
 ├── fd: ()-->(1)
 └── (true,)

norm expect-not=SimplifyContainsArrayWithNulls
select array[]::text[] @> null
----
values
 ├── columns: "?column?":1
 ├── cardinality: [1 - 1]
 ├── key: ()
 ├── fd: ()-->(1)
 └── (NULL,)

norm expect-not=SimplifyContainsArrayWithNulls
select b @> array[]::int[] from a
----
project
 ├── columns: "?column?":4
 ├── immutable
 ├── scan a
 │    └── columns: b:1
 └── projections
      └── b:1 @> ARRAY[] [as="?column?":4, outer=(1), immutable]

norm expect-not=SimplifyContainsArrayWithNulls
select b @> array[]::int[] from a
----
project
 ├── columns: "?column?":4
 ├── immutable
 ├── scan a
 │    └── columns: b:1
 └── projections
      └── b:1 @> ARRAY[] [as="?column?":4, outer=(1), immutable]

# insert array with null element into the table.
norm expect-not=SimplifyContainsArrayWithNulls
INSERT INTO a(b) VALUES (ARRAY[1, null]::int[])
----
insert a
 ├── columns: <none>
 ├── insert-mapping:
 │    ├── column1:4 => b:1
 │    └── column5:5 => rowid:2
 ├── cardinality: [0 - 0]
 ├── volatile, mutations
 └── values
      ├── columns: column1:4!null column5:5
      ├── cardinality: [1 - 1]
      ├── volatile
      ├── key: ()
      ├── fd: ()-->(4,5)
      └── (ARRAY[1,NULL], unique_rowid())

# Case when the right argument is a VariableExpr.
# Expecting no SimplifyContainsArrayWithNulls.
norm expect-not=SimplifyContainsArrayWithNulls
select array[1, 2, 3] @> b from a
----
project
 ├── columns: "?column?":4
 ├── immutable
 ├── scan a
 │    └── columns: b:1
 └── projections
      └── ARRAY[1,2,3] @> b:1 [as="?column?":4, outer=(1), immutable]

norm expect=SimplifyContainsArrayWithNulls
select array[null] @> array[null]
----
values
 ├── columns: "?column?":1!null
 ├── cardinality: [1 - 1]
 ├── key: ()
 ├── fd: ()-->(1)
 └── (false,)

norm expect=SimplifyContainsArrayWithNulls
SELECT array[1, 3, 2] @> array[1, null]::int[]
----
values
 ├── columns: "?column?":1!null
 ├── cardinality: [1 - 1]
 ├── key: ()
 ├── fd: ()-->(1)
 └── (false,)

norm expect=SimplifyContainsArrayWithNulls
select b @> array[null]::int[] from a
----
project
 ├── columns: "?column?":4!null
 ├── fd: ()-->(4)
 ├── scan a
 └── projections
      └── false [as="?column?":4]
