exec-ddl
CREATE TABLE a (
    k INT PRIMARY KEY,
    i INT,
    f FLOAT,
    s STRING,
    j JSON,
    UNIQUE INDEX (s DESC, f) STORING (j)
)
----

exec-ddl
CREATE TABLE t.xy (x INT PRIMARY KEY, y INT)
----

# --------------------------------------------------
# Use optsteps.
# --------------------------------------------------
optsteps
SELECT s FROM a INNER JOIN xy ON a.k=xy.x AND i+1=10
----
================================================================================
Initial expression
  Cost: 15601.37
================================================================================
  project
   ├── columns: s:4
   ├── immutable
   └── inner-join (cross)
        ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
        ├── immutable
        ├── key: (1,8)
        ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7), (8)-->(9-11)
        ├── scan a
        │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
        │    ├── key: (1)
        │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
        ├── scan xy
        │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
        │    ├── key: (8)
        │    └── fd: (8)-->(9-11)
        └── filters
             └── (k:1 = x:8) AND ((i:2 + 1) = 10) [outer=(1,2,8), immutable, constraints=(/1: (/NULL - ]; /8: (/NULL - ])]
================================================================================
NormalizeCmpPlusConst
  Cost: 12301.37
================================================================================
   project
    ├── columns: s:4
  - ├── immutable
    └── inner-join (cross)
  -      ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  -      ├── immutable
  +      ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         ├── key: (1,8)
  -      ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7), (8)-->(9-11)
  +      ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7), (8)-->(9-11)
         ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
  -           └── (k:1 = x:8) AND ((i:2 + 1) = 10) [outer=(1,2,8), immutable, constraints=(/1: (/NULL - ]; /8: (/NULL - ])]
  +           └── (k:1 = x:8) AND (i:2 = 9) [outer=(1,2,8), constraints=(/1: (/NULL - ]; /2: [/9 - /9]; /8: (/NULL - ]), fd=()-->(2)]
================================================================================
SimplifyJoinFilters
  Cost: 2278.14
================================================================================
   project
    ├── columns: s:4
  - └── inner-join (cross)
  + └── inner-join (hash)
         ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  -      ├── key: (1,8)
  -      ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7), (8)-->(9-11)
  +      ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
  +      ├── key: (8)
  +      ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7), (8)-->(9-11), (1)==(8), (8)==(1)
         ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
  -           └── (k:1 = x:8) AND (i:2 = 9) [outer=(1,2,8), constraints=(/1: (/NULL - ]; /2: [/9 - /9]; /8: (/NULL - ]), fd=()-->(2)]
  +           ├── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
  +           └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
================================================================================
PushFilterIntoJoinLeft
  Cost: 2265.88
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
         ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7), (8)-->(9-11), (1)==(8), (8)==(1)
  -      ├── scan a
  -      │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── select
  +      │    ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
  -      │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7)
  +      │    ├── scan a
  +      │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │    │    ├── key: (1)
  +      │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    └── filters
  +      │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
  -           ├── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
  -           └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  +           └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
================================================================================
PruneJoinLeftCols
  Cost: 2266.00
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
  -      ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  +      ├── columns: k:1!null i:2!null s:4 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
  -      ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7), (8)-->(9-11), (1)==(8), (8)==(1)
  -      ├── select
  -      │    ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── fd: ()-->(2), (1)-->(4), (8)-->(9-11), (1)==(8), (8)==(1)
  +      ├── project
  +      │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
  -      │    ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7)
  -      │    ├── scan a
  -      │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  -      │    │    ├── key: (1)
  -      │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      │    └── filters
  -      │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  +      │    ├── fd: ()-->(2), (1)-->(4)
  +      │    └── select
  +      │         ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │         ├── key: (1)
  +      │         ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7)
  +      │         ├── scan a
  +      │         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │         │    ├── key: (1)
  +      │         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │         └── filters
  +      │              └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
              └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
================================================================================
PruneSelectCols
  Cost: 2225.60
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
         ├── columns: k:1!null i:2!null s:4 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (8)-->(9-11), (1)==(8), (8)==(1)
         ├── project
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
         │    └── select
  -      │         ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │         ├── columns: k:1!null i:2!null s:4
         │         ├── key: (1)
  -      │         ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7)
  +      │         ├── fd: ()-->(2), (1)-->(4)
         │         ├── scan a
  -      │         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │         │    ├── columns: k:1!null i:2 s:4
         │         │    ├── key: (1)
  -      │         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │         │    └── fd: (1)-->(2,4)
         │         └── filters
         │              └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
              └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
================================================================================
EliminateProject
  Cost: 2225.48
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
         ├── columns: k:1!null i:2!null s:4 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (8)-->(9-11), (1)==(8), (8)==(1)
  -      ├── project
  +      ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
  -      │    └── select
  -      │         ├── columns: k:1!null i:2!null s:4
  -      │         ├── key: (1)
  -      │         ├── fd: ()-->(2), (1)-->(4)
  -      │         ├── scan a
  -      │         │    ├── columns: k:1!null i:2 s:4
  -      │         │    ├── key: (1)
  -      │         │    └── fd: (1)-->(2,4)
  -      │         └── filters
  -      │              └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  +      │    ├── scan a
  +      │    │    ├── columns: k:1!null i:2 s:4
  +      │    │    ├── key: (1)
  +      │    │    └── fd: (1)-->(2,4)
  +      │    └── filters
  +      │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
              └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
================================================================================
PruneJoinRightCols
  Cost: 2195.18
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
  -      ├── columns: k:1!null i:2!null s:4 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  +      ├── columns: k:1!null i:2!null s:4 x:8!null
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
  -      ├── fd: ()-->(2), (1)-->(4), (8)-->(9-11), (1)==(8), (8)==(1)
  +      ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
         ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 s:4
         │    │    ├── key: (1)
         │    │    └── fd: (1)-->(2,4)
         │    └── filters
         │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         ├── scan xy
  -      │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  -      │    ├── key: (8)
  -      │    └── fd: (8)-->(9-11)
  +      │    ├── columns: x:8!null
  +      │    └── key: (8)
         └── filters
              └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GeneratePartialIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateConstrainedScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateZigzagJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
================================================================================
ReorderJoins
  Cost: 2190.09
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
         ├── columns: k:1!null i:2!null s:4 x:8!null
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
  +      ├── scan xy
  +      │    ├── columns: x:8!null
  +      │    └── key: (8)
         ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 s:4
         │    │    ├── key: (1)
         │    │    └── fd: (1)-->(2,4)
         │    └── filters
         │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  -      ├── scan xy
  -      │    ├── columns: x:8!null
  -      │    └── key: (8)
         └── filters
              └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
================================================================================
GenerateMergeJoins
  Cost: 2188.50
================================================================================
   project
    ├── columns: s:4
  - └── inner-join (hash)
  + └── inner-join (merge)
         ├── columns: k:1!null i:2!null s:4 x:8!null
  -      ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
  +      ├── left ordering: +1
  +      ├── right ordering: +8
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
  -      ├── scan xy
  -      │    ├── columns: x:8!null
  -      │    └── key: (8)
         ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
  +      │    ├── ordering: +1 opt(2) [actual: +1]
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 s:4
         │    │    ├── key: (1)
  -      │    │    └── fd: (1)-->(2,4)
  +      │    │    ├── fd: (1)-->(2,4)
  +      │    │    └── ordering: +1
         │    └── filters
         │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  -      └── filters
  -           └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
  +      ├── scan xy
  +      │    ├── columns: x:8!null
  +      │    ├── key: (8)
  +      │    └── ordering: +8
  +      └── filters (true)
================================================================================
GenerateLookupJoins
  Cost: 1183.39
================================================================================
   project
    ├── columns: s:4
  - └── inner-join (merge)
  + └── inner-join (lookup xy)
         ├── columns: k:1!null i:2!null s:4 x:8!null
  -      ├── left ordering: +1
  -      ├── right ordering: +8
  +      ├── key columns: [1] = [8]
  +      ├── lookup columns are key
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
         ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
  -      │    ├── ordering: +1 opt(2) [actual: +1]
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 s:4
         │    │    ├── key: (1)
  -      │    │    ├── fd: (1)-->(2,4)
  -      │    │    └── ordering: +1
  +      │    │    └── fd: (1)-->(2,4)
         │    └── filters
         │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  -      ├── scan xy
  -      │    ├── columns: x:8!null
  -      │    ├── key: (8)
  -      │    └── ordering: +8
         └── filters (true)
--------------------------------------------------------------------------------
GenerateMergeJoins (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: s:4
  - └── inner-join (lookup xy)
  + └── inner-join (merge)
         ├── columns: k:1!null i:2!null s:4 x:8!null
  -      ├── key columns: [1] = [8]
  -      ├── lookup columns are key
  +      ├── left ordering: +8
  +      ├── right ordering: +1
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
  +      ├── scan xy
  +      │    ├── columns: x:8!null
  +      │    ├── key: (8)
  +      │    └── ordering: +8
         ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
  +      │    ├── ordering: +1 opt(2) [actual: +1]
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 s:4
         │    │    ├── key: (1)
  -      │    │    └── fd: (1)-->(2,4)
  +      │    │    ├── fd: (1)-->(2,4)
  +      │    │    └── ordering: +1
         │    └── filters
         │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         └── filters (true)
--------------------------------------------------------------------------------
GenerateLookupJoinsWithFilter (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: s:4
  - └── inner-join (merge)
  + └── inner-join (lookup a)
         ├── columns: k:1!null i:2!null s:4 x:8!null
  -      ├── left ordering: +8
  -      ├── right ordering: +1
  +      ├── key columns: [8] = [1]
  +      ├── lookup columns are key
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
         ├── scan xy
         │    ├── columns: x:8!null
  -      │    ├── key: (8)
  -      │    └── ordering: +8
  -      ├── select
  -      │    ├── columns: k:1!null i:2!null s:4
  -      │    ├── key: (1)
  -      │    ├── fd: ()-->(2), (1)-->(4)
  -      │    ├── ordering: +1 opt(2) [actual: +1]
  -      │    ├── scan a
  -      │    │    ├── columns: k:1!null i:2 s:4
  -      │    │    ├── key: (1)
  -      │    │    ├── fd: (1)-->(2,4)
  -      │    │    └── ordering: +1
  -      │    └── filters
  -      │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  -      └── filters (true)
  +      │    └── key: (8)
  +      └── filters
  +           └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
================================================================================
Final best expression
  Cost: 1183.39
================================================================================
  project
   ├── columns: s:4
   └── inner-join (lookup xy)
        ├── columns: k:1!null i:2!null s:4 x:8!null
        ├── key columns: [1] = [8]
        ├── lookup columns are key
        ├── key: (8)
        ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
        ├── select
        │    ├── columns: k:1!null i:2!null s:4
        │    ├── key: (1)
        │    ├── fd: ()-->(2), (1)-->(4)
        │    ├── scan a
        │    │    ├── columns: k:1!null i:2 s:4
        │    │    ├── key: (1)
        │    │    └── fd: (1)-->(2,4)
        │    └── filters
        │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
        └── filters (true)

# Use optstepsweb.
optstepsweb
SELECT s FROM a INNER JOIN xy ON a.k=xy.x AND i+1=10
----
https://raduberinde.github.io/optsteps.html?eJzsnN1um0gbx8_fq3heH4EMSXDShrBCyipNV6lct5vsag-SqKLOuJmaD4uPXburrapegw_36nolKzAm4JnBYAaCE_eoZoYZnpnh9__PB_m7c_Vrv6N1rs7752e_gQevL9-9BQMuBoPzS3jz7mIA0xm8G4CxN9ans70p_Dx4Bbir6MpBR-oMHNd6hUejjtaRZRmM_Qsb-9gwb-xutwsfH36enoKsQFeRlBM4Pb2xuxPX-YyG_o3dhR_zf3_Mv_2Yf4OhYwaW7WngaUfZFGxZgW98NNHi8nx52baRK392sA3C0HU8TwzTo3-UUsea8n87ME3AWg9G2mFYDXzWXoCxN3TvPn7Ato9c2zA_WH8Ohx98bCHPN6yJ9hKMvahyB99pxzDV1EUxM-0EprP8e5WDMEtyt6JQHjAT3EraGM00EBRJpUU2ugvTRFm-CQ4ODpHQk49FCYRD6Uj8-jW-pkg96cXiuvqQ80RWFFqJ3tCwwUglfK-1LdkVxXGLZI75BsGzIp3OCoTKrb-pIarrQszptSQfNn3keknKSrIw1hTQwzjE6PUVhLDTuqCIoINyIMK1E_jI1aPmUkXpYUBKMHRsz3cNbPueLuwrGgj7g9_7fZDh9ifYV9O_xdsbe0GBEAuGib-gM2vy3gy8s7CQJRMYiREhQjyEkDiOIAEJJKj9EkFCpr9HsAYSctshQTxgHiSoD7_4z-NFAHkoI8Ljj7KoxFSB4W2pCg6pFTCLJ6JZkhKaIiWrogdSrubYjJT0SENSrg2V25BhkjI3xJxeI0gpPzYpC6I6rF-HE7Lm_Op6Glzvn4AM-ydk7RKM7vTMq5GQ-wpbExOPZm8cbL9OVCXiNjUppvZxytoVpXa-h6On3xvePW2IthKABOPWA5AbrggaWoHp44mJh9ifaWCikS-7zl-e8AW5juy4smMjUQIXf7qnJDB9KduVcookulXXBXWRqOvCDsbPFsaNsTDL5iTw5eOk6l9fO606Ykgz9SAOOamxR9SXjc4PX-A8wL8PvPsFvS9s3wlZ3kejxJuzUtPmvHdUGPMsF75VGCeesiJKyXFFvlDNoZTQoSVK5aZQSs7MkRmvDJV4goqjpAjRV1uk4kLEd05dzS6StZjT9JpO4aUdrg3LWhyJM9QH2ueo2c1oJN0ncOw6ugjXHNRCl93ARkvBPXPMZNpFSVioce8oUmOVlxoXWxJ7bDUus_YVPuEWqX-tU8Ki6h9rbyn1r6y9ZaeQR8UjJIpObTyVDjF-jcoaBQ4SzyqS5dbqlvg19bHbopLEMx3YiijVLvEbmrijHJtCd70NIHlNlSy3xotVa8qle9gSby73hinoZhkjtYKlBcagp-Sqb-TTO-ipmVt6MzbmA68iFhAuMH059oAqXw9YBjhb5q7KEquExyCKTnVECVKV8hisHAUUiPWW0L1f8QFRlwKVayzqACCdSLnBsLF8le4OGl0Jf1diUNUtf_RK2f1S0CjSRygH9VxXosTsEpZI7HT3KejuuYktbBs-ep_MDyPhJa9nlPdR9kJ2ystcvyBn96srG6VA1pQksya2VSU5PmyRczMffSRjoNGqko6xQ-ErKRIzliKrDStZG1hyqLTJE5-zzr1z8-0aKW-9Y7ct88QUNNmouAz7gLqFkUrJ7GEcPsYeBg8V3XQ3otX7ClVW14sUXehAV5vVmnUr6xTaplOmEk-_wbSm2IymYRSv3XfidiiTieLcYx45Jy3XPTFbCiky0Aqud6TO-XRiOi7KfON1iRz3Drkh0BPEZ6_FcD_kC3di1LQRtkTShkTk8L1SqQG3A-9zAC_9tF8p8LIB2VaMLaj1C7KRa_joLXI_oQy7aCkZgr2s_F1DTDDWZw1WWHMlwhEdy_u8f1gCRIzH9icNujTzG5WWzqQ2gsrtYhgL3-m2BWfiCz0Rro2hHxhmeOm2FfQre5qDugJAa7OiN80prdUivpJDsfQaQxG-yky-0k9INvLlQo6lZvmQLCpYnzWD4LtBCKUsyPuOMw4mVJJnkjIoP6gb5WZUNUxn7cb5GM0enuZauQUdrtVbGvcX8cR5wXBReO-O6ztvuqXetKXsLMa8nXnlYl7VIuaV_ScM6oVcLY6Bl0ZvF5N3XvsJe-2tBnnKof6B_fib2xwbm86UxrtS_ABKNUNrtJvwWT-rRn5Wab2f3QD1rNcvZ7uvwjc9lEMXRVBV4eRL_oGRzc-K8AZtaz5FIcpuAwbrC7fzz__-CwAA__-U-F62

# When the URL is very long, the compressed data is added as a fragment rather
# than a query parameter.
optstepsweb
SELECT * FROM a a1
INNER JOIN a a2 ON a1.k = a1.k
INNER JOIN a a3 ON a2.k = a3.k
INNER JOIN a a4 ON a3.k = a4.k
INNER JOIN a a5 ON a4.k = a5.k
----
https://raduberinde.github.io/optsteps.html#eJzsXV1z20Z3vu-v2OpKKgFaAEiJ4juaceo4U3lU2bX89ib2ZBCJrGFTpEtSadxOM5n8Bl_m1-WXvINvENiPs4sFsIBObmIB2OXifOyefc5zFv93dPsf10fzo9uX1y9fvCP_Qn54-_rfiU985_366ubm5Vvy6vXVTXjBJa9viO-MP5PL6H_l-150343ve9X7k-i-F9-fVO9Po_uT-P50_PnIOrrZbB--D5bLo_mRbdvEf3a1DvaBv3q_Ho1G5Of8z-fPie2QkWNNXfL8-fv16Mt282lxt3-_HpG_vv3517ff__r2O7nbrB4f1rs5-Tx3_nn9uFqRYO6S5dwju_mEfJpPyef5LL1xQZZz55Ts5o5DPs0dN2w0TW86Z-Hd8_DuLLx7QT7PXTfr0yPLuTshu7k7JZ_m7ll49yK9652GP-mQ3dxzyae55x0O8vPi65wcO5Z7cXJ4Y3kfXj-x7fePp6fe4ti1pycWOfasyclvvyXXHMu1oquz_LkL23HDS86p5Tj5ozPrwnJcy5nazoXlurZ7ZrkXtudFj07z5s6Z7VxEF88tZ1Zob0etLefMqnYwO7m8PHamluuG7xH3eHl5PMsvuG7hTTzbPYsuTix3WvmJeICW61nFn3DduMfwV-IeL_IevdPkKc-xPJfRYzxiyzu1kh4v8h7dRPjfEuEH6_Via3_aBGty_NHffYxuR_9RzCv0jtTCfGccGpnvjEM7851xaGq-Mw6tzXfGd9v7n38K1vvFdu2vfnr45e7up33wsNjt_Ycv87Pwib3_82qxCe7n55FzpQbqu-PQRn13HJmp744jS_XdcWSsvsvv2vHCR7K-nUnkmZmF-944MnLfG0d27nvjyNR9bxxZu-_xu3dPw0ey7l0ncuzMRfzJOPISfzKOHMWfjCNf8SfjyF38iaD78_CRvPtZNGFkPuZPx5Gb-dNx5Gn-dBw5mz8dh_4W_p_bvTcJH8m696YUZT88rvbBl1VwF-y_zslqsdzb283_7I4Xv_p3-9VXe7NenFhkG_zXx-TG_y62G3uztR822wXNekp-X7pbdf5zuvPH1w_df8J0__Teob-7DsXfU1dP7sp7-Izi4albp3dFPj2l-HTqwsndqheXRMlz5T_Qow3xaLZStHneHwwHdDkPGeyHh05Y2wM5QgB4EDoS2JGEwtNt8Ay7p6q8J-ZfsH3xSxTN92672e3YTYZkxtCXTO2BI8n2rAI6hN2dvyY--dHfXfrOB1GrltUqOZxEAcJ3T_73TUELKmJ11cXaoVVTZSs2bZpsddpt1nGw2i-2O_7j5LBNbKUJCjN3yI-bx_1ie3kcToh3m_Vuv_WD9X53efzMmZPjZzd_v74mNvlwwtYfTd2eUN1VPXezTtLdh7OaUR1Hcu1hdg7TbFmlkYckwNncmWY6jSKxslpnRbX-jTxzpgd6tsjy_pK2MlI0StP8RGwoucpb3gRQdU2N2GlKlg2Iq70KtFtWa6LNy1ROua8mEXvJX6clzbouRbOxOrMQP1bzB8pOt6jUKUf5uTbbQlHoarzgCfx-Lg8HFLpjKa6ssURPl6ksMo2luMahxg4VFGrsgqKxWEsZpBFr78P7dQxq3wYPX1bB8uut_7D4T3_78r8f_VWwDxa7FObmPBAB39bULWDfJMO-qTo2DfumbsFDS-BHmIh9N4p9Ez72TcpTTa93Rv1GyhqftSvKrgtIVDos-X3prqmgg_nYd0WUPFceEtbRb49mK0Wb5_Gwb9ZDBvuhfuybJQSAB6EjSezpBcLTbfA87FvwrKnmf4h9C16Chn0zmgzJjKEvWcS-YS0axb5hQyhj3_xWrWPfUsPJsW9QMzXsW16srrpYO7RqJvYtL1uddluBYmzO4-SwjX7sm_Yrx0nvV7fk-6vbd1c3L97FvMgX392-O446_e6WXN28m52ckNdvDy__6-vX1yfQgf2N7MO164RtXyxsXnbW7mYdZ2PzQBtRw-YZnVcsj_pc2eTawubLg2Fh8wJDaQ2bF4yjgM2L1KGGzZd7FWi3rNZWsfns51nYPEv5rWHzrAEUsHmmwNWw-YpKyoora6xDbP7VJlj_kKUODlD5g1uIxyMej3i82aAD4vGIxyMejx6NeDzi8ehIiMcjHo94POLxiMcjHi-Px3eClMtz5QHDQ8SeNwEgYo-IPSL2iNgTvuLKGusAsX_zuPsYw_FX6_3m1SZYXy-W-xS0Z909wO3PEbdH3B5xe9PACcTtEbdH3B49GnF7xO3RkRC3R9wecXsY_skDNFXPkMlaLVbJJpH3dF9Qfr6kaqH8Uue0NNi10lFBretPZVSSBwc1r02pU27MAfAx8cQ2EJ0Tr4ZCkGbsQursJnK83z4CYiRMB2E6CNNBmA7CdFCb6aC3i4fNL4ubzf7mcbV6sVnfB_tgs07TQay7STroPEoHnWE6CNNBmA4yDfPCdBCmgzAdhB6N6SBMB6EjYToI00GYDtJaxjGoxI5UM53lG4LsC6ixmUKuJ-ta2Re5NB0EXjcOZVcD2zF1w7auBmuGMAci9m3MgWAOBHMgmANpPwfychU8BGt_v7hNQto4-VG5nGQ9zqKsh4NZD8x6YNbDNGgHsx6Y9cCsB3o0Zj0w64GOhFkPzHpg1kNrEUy6RYQ9PcijrkDoulquRKrrsnRBjVsXssqoJGXdeq4kw7Mb_AI3bErADAZmMDCDgRkMzGBgBuPpZjCuF8v9d7vd5i7w94tXm2C9exvu0tJMBvN2ktFwBpjRsDGj0V1GY6RJ-FYuQjUVlDrRqofonZ1I-s5Z-O9koNHl8_j3on-fRv92on9H64UTdx4HCPH0G7eNu6RiagZqmWDeqi8o99DyVnb5rqmAofl5q9EARNnsVOx4UbwVtXXjPuOFZhJdj9q6cZ8TgxRb8SBMSPZhqu44IVmGA3swK-hPSLKEQPGgMgLaS3kNaP7kqEQiH4fzIARNZaQOusgnC4Ziqjce5pMFL0GzX1jWstdmDH3JYj4Z1sKEfLJKDtOw5KUJxyT2ydHNWnCFIlU797PrIyBlD31sxBoB8WKHmenG4wPYu0qHCcUbkmZACw85EwlOD0jEaJ6IIXUKaEbEEASLZSKGbKDYzdaB7bVAIakRMRidwyrEyeHDrREx5CmIHrSqvHVzkBoVeC7XYxxSp93KfX2xY1OBcryQ4oMUH6T4IMVnoBQfZJmYzDLRyyWysresretCV01o3HK9gtLTvxK9W-6kqPr0z0T7ofoKBpD-mdiAlQw6MYPkz6Il0N6xnlF48Us4SVfJqGP7dafJMGOzdc-ScTnIWjId4kHW0pNjLRkETZlDtakolgf89l_5LS9NqVFY7nnRLpI_U9OwEvUm1mFl2q5vIDVWr_N0rLFJz9LBOZosr2JVEJIDLm2dL21sjhGyvJ4mawnCOROwPtCvNbCWhkYrMstRpPJWYkKMKUwYWQqMHraB6WbIm7WfSgzZXADJtgcgY6dzqg6Yo6PXXeCsnCHRcRoPaAUybIbmQ8nxQRiCOAUOZAos73bErs5oMUCPh75rTc-E_Qj4TBUk4CEBr2UCnryAxUcbdcWkUhAxwCn1MKn4vwE79qhjJhWMKcgkabKYVGBAp2VQkh1liQShxqQq9ypgYJatoFUmlUTZxEShbKKbaF06rNajdxhBkfGcUVYg5FQi7w55d1T9PlHeHTKynjojy-YzspogAFrZwDUZXaHDhkzP8k4PrS-9kBug5TklG0yv5GYYqunQEtMruTEmeirYo5WZEUACmgwzeb-CbSZvUzDPZOwFC81tDDBSdasNG59mI3WT3vKRxu7vuflIY5f3vHyk7lli3TTjr3A3MLnbOcbdeAhW4ZEhH9HMtRkpaYpkSBaDBWe3zmc3tlIGSx17KrNGc1MGDOLkEHk6Z_CAqTs1SQg98JN-bEIKXmR5k5IjJVcKvmQlq1TuTukVretwvd1K7mDpK-U-ZmXLbL2VWdOWJbwyyYcbz13eNB_uIaAL5SR1R0YSs5A0eb7E6ZFDoB_0fTPG0o1mIhMFZufyPHFBwAWhhwsCK7tU5xufODeqHonSDOULfuAKkjGHuBUUKBvJmIB3RTImkjGRjCklYCRjPlEypmC9AR5X1xUDT2aq5sVSehh4jM7VvkXaKgNPwBmtcnFZDDxxTqqt9C8bGmC-rBoDzy6rrky0LWu2VQYepL5xKlPf2DJiBEd49GhTwEUtP2CGbpnuGtEv32wf1xGv8nqx3L_YrHYp8ZJyY8CUy0osjhw45MANhgNHBBy4ysqNLJEnkHZRVzYqz5gDFQfMNzRhMcLUVw9SXwAKEDiCQ6NHo--F0VdWAhEfsHsCkOwvC89aFOE1yicZsXthTSS6PgeNoVXnoVWzCUNA1S_SkXB5GszyhHQkpCMhHQnpSEhHatEzkY6EdCSkIyEdCelIEsaBdKRe0JHKI4Ke99UVaUUwDg4OoIe0Uu5V8uOprZJWKj8vIK1EZ4FRWSuFOwe0lSnSVqpJD6StIG3ladJW-rvB7Dvc3i4NRUoVUoKVEJMG-gbmsTFRMKxEgU7yBsYxGMcYGccQ9lbVAR1NrY8wwdwOSlAdIJ_jFdNPMPbq_BhMvcmIylSe7bK1HsNjWiwHLyZDYgfGa32P1yCf0WUsAbgSaP9gTM0Zu_bnaJDYMURih0DZcFcfoMdD37UZz2TnkGENkNhxyf9MtoDYwW_VDbFDakw5sQPUrAaxQ17AnrqAO3V5VafUQ-wAfgid_oE3M4gdEp-s53zMrytih8xUzYul9BA7YB9QZDxXNoBOz5mBHiPTFbEDFjzTcAA9xI6a33I04qQZyrqCID6C-AaC-KwSQeGh44Q1PfV3D9R3_JurIK3HjxPmmsB9DgFiBIj7ChBzDRs6Ww4QOGp8HwIRZBOTG3ujA3kckeMhIccQjUvOAQOcCqReuEGXZQNXEq0QUk4hZQmhlXFlQNNuwGX5geUIM7xtDZhZUeheTaF3Pz_Ucl490DPgh2BH5JoAQkOWrjISrbRudRgGqoVqeoBp3i9IWEnZPFqFqLl7G_6p2XSD6ujobPpgROiEHtiae0Y2zwDKmjexMvHlKngI1v4-qkH8-_p-sX0TcyCvF8t9WqQoeCipV5xG9YqnfaxXtNkVLsjzNwRLwxRBAykCitm7pRto9mj2ULPvoqi2EtY8hbrMSkFLY3WZ6MNPzIf7snSxHMDFGk10APMWMc7eu48VlZUXyjZ8WusoTVtu4ZQ5JIzhjNKvJZVFzxRWzzDj7_4mPPtOGOMqSGulDzUMo8yItIAMCWPlaQ0JYz0gjHENGzpbDpAl0nLhCl2QTUxu0MoYcASIhLHeEsYgGpecAwY4FUi9cIMuy-acSLRCwtgltQaZKzR-ITK1aTeEMfmBsUqSeW211SWDhV4tTpYTevfzQy3n1UMYA_wQrIrRBMIYZOnily5zja-j-mXumIChmh7CGO8XJKykbB4d1jQTtnFUC5vpBtVRdTN9MCJ0Qg9hjFvGzDOAsuaNqHhWVKABID_7nZg8UsTtEbdvtywbXGQ0yH1iy-Ry3VtPQe-caQYxogFjRAJlw119gB4PfddmPJO9pYQ1QCjoklo7CEWB-K26AYCkxsQqFtQP-8gLuFoiaArYoyBigFPqgXj4vyGo8zED2BGsN_wiwM7hHJmpmhdL6QFxGJ3D7KBsAB3W-uWjSJh5wWbNqlP889BgY3wn2uxbJDVZYTVhMjEnjYO5d5o1voA0jqbzpPVy7jlZa-cU0jxaBZLmu7nn5s0dZvOCo0aLR9L809zz8uYdVdOdkpFjTSaDqaZzsZoOcRijcJiqkSYxBxqpKUbaEMerEVPFSjXJSjUXK9XM8zhcFhjmergfRXM1w1z7tkAQ9s78qVWB9S-bLKgCo52Uj9lkXK66yCYruplUGNiMT4pIG1RcGN0Ml1nKMivOu-IX_xqnWAxBhlWb0putxs8aniCP5ERQa1RjPhukS7byWUMQw4uXq0bmCJA5okYZMYorIksS0c8OUaOFtM4HYaymbOfCj4Xix0KlHA8_FoofCzWEnYUfC2WZgzZ2lh5bY6xKPfgSKYiM1pa9l8VI5aEdPkQOrUnEQxM15vLQRI0FPDRRcwEPjf-JUyEPTcSCq9k8k3pss4rsv3gSUmX_xVOXMvsvnvGU2X_xRNk1-28yISPH8mZDYf8l4QLmzRHQVwH0aVy9mUlUvYr-KwKu6L8i8ar-qzqo6r-qlar-W9ITzeyrVl616aoFH9orEuvkiHWHezMj_ANn3N7NuAzjmhnHgsO5t-G5t6Rs5Kz1iUzD56xRYTwk0-BKkK8ELOt4mmQa4Uu2QQThge-YCgOmwtRyYEYlv2SzXvrTXWp5LsMSXNKZrWZSWmpphq6OGGgzNpKyDrA_iojGtHRTo6ERbmQa3ciwdAnkG5lBNAIzjGrM9aTUI-bvCpkkUXPoORIqCTiw2GgJOLjYqAk4uNioCTh42pOagIOnPZWaZ1KPVxrFtGe8MqmmPeP1TDntGS-DymnPePVUS3u-2T6uF7d3_vrFZrVL05yli3Fa05v1N63JAkONyWpi-NBw-KBHz0ytog4xj9hFHrHy0oezW-kmTnHDdQ-teT2c5zBn10LOTvwm_cOl-DKl4byIS_XXWWUwRpxUDZhU1RJIZuGHCqMQ1sAL01D6yx05PXJ8BSFOhDj1Q5xwsfFrDFQwSrDYaBglXGxUjBIuNipGSW2uHaPMqi7epIFjqRoju36AVMbHL9tZtDmiowY9hi9xu9f_yMQWwFoVEOcpwFpMerx2WAtNv0vTLymyjHSIOb1QpEPApKWEvSpIR-WFjGAnN4V08GUqi3SgIxrgiK3vjoGkWbV9KXcXyfL3g10k94O6ol2kqDF3FylqLNhFipqrFLrDd5FgsdF2kWCx0XaRcLFRd5FwscGJMvBdJFhstF0kWGy0XSRcbNRdJFxs1F0knF9E3UXa5SblXeSIE2KMdEQXlE7ywGJUL6YY0cIJ7qj7F0kw5Tc7od7E-MGs-IGioioxV2vUwO6Oajg1YwWKC5e-y6YWIXDaCb7GphoXcFoKv8GmGg1ApEM_skYtBgBJh3FQjerKD5IOg96qymxVJbWq81nVqayqa_uIs6wfWUcvf_2y2mwX3wfL5dH8KEaL3y422_vF9tUmWGeE1sNrCUo8KaDEDEYZYsO4rnaMDbOxMS2wGBcRq0n7oTJ-BhW4cuMPBL6MdzAA5qUZ7oIgXfpALhG-pQptqaJa6oCWOpalDmOpIliq4JU6bqUOWamjVapAlSpGpQ5PqSNT6qBUrzEnHpgWB9n_tgl2-4R28cN283AVhs9heJ1G3JwHKOG3TQu_R8OoMcNAvP9xQq8DcZuekB5UIM6U3-yEehMDcbMcrLhcUteC-k6mJyORn11LsyjtU7sQW3eA2LpCWAGJLmoGGUPee1Fm7RK3QJVWoMooUCcTqPMI1CkEquwBVeKAOmdAnS6gzhRQJQmo8gPUqQHqrAB1QgCfC1B2bMojjDSfpKvSGggSe9LOSWsiTOVJuyP31bnfm4Bn7aQ9j__q_G9JyCToJJ2M--rcc2ZkcnHS_jRScKQaCTXcvOPewoy9BRHsLTTEzXqSRrnJmbG36D1vR7DFcIBbDPhxCuK9k2B_IQHpCBRn61UcuzsqzqI_b1WO0pj7Km5QzK32hWexpKM0fvzLr-SVSVhJRmncV-dW6crkpqSjNP6r8ytw4WkoySiN_-r86lqZjJN0lHb0___0jwAAAP__VSsNvg==

# Exploration patterns with varying costs.
optsteps
SELECT s, k FROM a WHERE s='foo' AND f>100
----
================================================================================
Initial expression
  Cost: 1159.36
================================================================================
  project
   ├── columns: s:4!null k:1!null
   ├── key: (1)
   ├── fd: ()-->(4)
   └── select
        ├── columns: k:1!null i:2 f:3!null s:4!null j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
        ├── key: (1)
        ├── fd: ()-->(4), (1)-->(2,3,5-7), (3)-->(1,2,5-7)
        ├── scan a
        │    ├── columns: k:1!null i:2 f:3 s:4 j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
        │    ├── key: (1)
        │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
        └── filters
             └── (s:4 = 'foo') AND (f:3 > 100.0) [outer=(3,4), constraints=(/3: [/100.00000000000001 - ]; /4: [/'foo' - /'foo']; tight), fd=()-->(4)]
================================================================================
SimplifySelectFilters
  Cost: 1159.37
================================================================================
   project
    ├── columns: s:4!null k:1!null
    ├── key: (1)
    ├── fd: ()-->(4)
    └── select
         ├── columns: k:1!null i:2 f:3!null s:4!null j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
         ├── key: (1)
         ├── fd: ()-->(4), (1)-->(2,3,5-7), (3)-->(1,2,5-7)
         ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
         │    ├── key: (1)
         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         └── filters
  -           └── (s:4 = 'foo') AND (f:3 > 100.0) [outer=(3,4), constraints=(/3: [/100.00000000000001 - ]; /4: [/'foo' - /'foo']; tight), fd=()-->(4)]
  +           ├── s:4 = 'foo' [outer=(4), constraints=(/4: [/'foo' - /'foo']; tight), fd=()-->(4)]
  +           └── f:3 > 100.0 [outer=(3), constraints=(/3: [/100.00000000000001 - ]; tight)]
================================================================================
PruneSelectCols
  Cost: 1118.97
================================================================================
   project
    ├── columns: s:4!null k:1!null
    ├── key: (1)
    ├── fd: ()-->(4)
    └── select
  -      ├── columns: k:1!null i:2 f:3!null s:4!null j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
  +      ├── columns: k:1!null f:3!null s:4!null
         ├── key: (1)
  -      ├── fd: ()-->(4), (1)-->(2,3,5-7), (3)-->(1,2,5-7)
  +      ├── fd: ()-->(4), (1)-->(3), (3)-->(1)
         ├── scan a
  -      │    ├── columns: k:1!null i:2 f:3 s:4 j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
  +      │    ├── columns: k:1!null f:3 s:4
         │    ├── key: (1)
  -      │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    └── fd: (1)-->(3,4), (3,4)~~>(1)
         └── filters
              ├── s:4 = 'foo' [outer=(4), constraints=(/4: [/'foo' - /'foo']; tight), fd=()-->(4)]
              └── f:3 > 100.0 [outer=(3), constraints=(/3: [/100.00000000000001 - ]; tight)]
================================================================================
GenerateIndexScans
  Cost: 1108.87
================================================================================
   project
    ├── columns: s:4!null k:1!null
    ├── key: (1)
    ├── fd: ()-->(4)
    └── select
         ├── columns: k:1!null f:3!null s:4!null
         ├── key: (1)
         ├── fd: ()-->(4), (1)-->(3), (3)-->(1)
  -      ├── scan a
  +      ├── scan a@a_s_f_key
         │    ├── columns: k:1!null f:3 s:4
         │    ├── key: (1)
         │    └── fd: (1)-->(3,4), (3,4)~~>(1)
         └── filters
              ├── s:4 = 'foo' [outer=(4), constraints=(/4: [/'foo' - /'foo']; tight), fd=()-->(4)]
              └── f:3 > 100.0 [outer=(3), constraints=(/3: [/100.00000000000001 - ]; tight)]
--------------------------------------------------------------------------------
GeneratePartialIndexScans (no changes)
--------------------------------------------------------------------------------
================================================================================
GenerateConstrainedScans
  Cost: 28.12
================================================================================
   project
    ├── columns: s:4!null k:1!null
    ├── key: (1)
    ├── fd: ()-->(4)
  - └── select
  + └── scan a@a_s_f_key
         ├── columns: k:1!null f:3!null s:4!null
  +      ├── constraint: /-4/3: [/'foo'/100.00000000000001 - /'foo']
         ├── key: (1)
  -      ├── fd: ()-->(4), (1)-->(3), (3)-->(1)
  -      ├── scan a@a_s_f_key
  -      │    ├── columns: k:1!null f:3 s:4
  -      │    ├── key: (1)
  -      │    └── fd: (1)-->(3,4), (3,4)~~>(1)
  -      └── filters
  -           ├── s:4 = 'foo' [outer=(4), constraints=(/4: [/'foo' - /'foo']; tight), fd=()-->(4)]
  -           └── f:3 > 100.0 [outer=(3), constraints=(/3: [/100.00000000000001 - ]; tight)]
  +      └── fd: ()-->(4), (1)-->(3), (3)-->(1)
--------------------------------------------------------------------------------
GenerateZigzagJoins (no changes)
--------------------------------------------------------------------------------
================================================================================
Final best expression
  Cost: 28.12
================================================================================
  project
   ├── columns: s:4!null k:1!null
   ├── key: (1)
   ├── fd: ()-->(4)
   └── scan a@a_s_f_key
        ├── columns: k:1!null f:3!null s:4!null
        ├── constraint: /-4/3: [/'foo'/100.00000000000001 - /'foo']
        ├── key: (1)
        └── fd: ()-->(4), (1)-->(3), (3)-->(1)

# Decorrelation pattern.
optsteps
SELECT * FROM a WHERE EXISTS(SELECT * FROM xy WHERE y=i)
----
================================================================================
Initial expression
  Cost: 2271.17
================================================================================
  project
   ├── columns: k:1!null i:2 f:3 s:4 j:5
   ├── key: (1)
   ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
   └── select
        ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
        ├── key: (1)
        ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
        ├── scan a
        │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
        │    ├── key: (1)
        │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
        └── filters
             └── exists [outer=(2), correlated-subquery]
                  └── project
                       ├── columns: x:8!null y:9!null
                       ├── outer: (2)
                       ├── key: (8)
                       ├── fd: ()-->(9)
                       └── select
                            ├── columns: x:8!null y:9!null xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
                            ├── outer: (2)
                            ├── key: (8)
                            ├── fd: ()-->(9), (8)-->(10,11)
                            ├── scan xy
                            │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
                            │    ├── key: (8)
                            │    └── fd: (8)-->(9-11)
                            └── filters
                                 └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
================================================================================
PruneSelectCols
  Cost: 2250.97
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
         ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         └── filters
              └── exists [outer=(2), correlated-subquery]
                   └── project
                        ├── columns: x:8!null y:9!null
                        ├── outer: (2)
                        ├── key: (8)
                        ├── fd: ()-->(9)
                        └── select
  -                          ├── columns: x:8!null y:9!null xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  +                          ├── columns: x:8!null y:9!null
                             ├── outer: (2)
                             ├── key: (8)
  -                          ├── fd: ()-->(9), (8)-->(10,11)
  +                          ├── fd: ()-->(9)
                             ├── scan xy
  -                          │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  +                          │    ├── columns: x:8!null y:9
                             │    ├── key: (8)
  -                          │    └── fd: (8)-->(9-11)
  +                          │    └── fd: (8)-->(9)
                             └── filters
                                  └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
================================================================================
EliminateProject
  Cost: 2241.05
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
         ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         └── filters
              └── exists [outer=(2), correlated-subquery]
  -                └── project
  +                └── select
                        ├── columns: x:8!null y:9!null
                        ├── outer: (2)
                        ├── key: (8)
                        ├── fd: ()-->(9)
  -                     └── select
  -                          ├── columns: x:8!null y:9!null
  -                          ├── outer: (2)
  -                          ├── key: (8)
  -                          ├── fd: ()-->(9)
  -                          ├── scan xy
  -                          │    ├── columns: x:8!null y:9
  -                          │    ├── key: (8)
  -                          │    └── fd: (8)-->(9)
  -                          └── filters
  -                               └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  +                     ├── scan xy
  +                     │    ├── columns: x:8!null y:9
  +                     │    ├── key: (8)
  +                     │    └── fd: (8)-->(9)
  +                     └── filters
  +                          └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
================================================================================
HoistSelectExists
  Cost: 12177.70
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
         ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      ├── scan a
  +      ├── semi-join-apply
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
  -      │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      └── filters
  -           └── exists [outer=(2), correlated-subquery]
  -                └── select
  -                     ├── columns: x:8!null y:9!null
  -                     ├── outer: (2)
  -                     ├── key: (8)
  -                     ├── fd: ()-->(9)
  -                     ├── scan xy
  -                     │    ├── columns: x:8!null y:9
  -                     │    ├── key: (8)
  -                     │    └── fd: (8)-->(9)
  -                     └── filters
  -                          └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  +      │    ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    ├── scan a
  +      │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │    │    ├── key: (1)
  +      │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    ├── select
  +      │    │    ├── columns: x:8!null y:9!null
  +      │    │    ├── outer: (2)
  +      │    │    ├── key: (8)
  +      │    │    ├── fd: ()-->(9)
  +      │    │    ├── scan xy
  +      │    │    │    ├── columns: x:8!null y:9
  +      │    │    │    ├── key: (8)
  +      │    │    │    └── fd: (8)-->(9)
  +      │    │    └── filters
  +      │    │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  +      │    └── filters (true)
  +      └── filters (true)
================================================================================
TryDecorrelateSelect
  Cost: 2367.65
================================================================================
   project
  - ├── columns: k:1!null i:2 f:3 s:4 j:5
  + ├── columns: k:1!null i:2!null f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
  -      ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── semi-join-apply
  -      │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │    ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    │    ├── key: (1)
         │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      │    ├── select
  -      │    │    ├── columns: x:8!null y:9!null
  -      │    │    ├── outer: (2)
  +      │    ├── scan xy
  +      │    │    ├── columns: x:8!null y:9
         │    │    ├── key: (8)
  -      │    │    ├── fd: ()-->(9)
  -      │    │    ├── scan xy
  -      │    │    │    ├── columns: x:8!null y:9
  -      │    │    │    ├── key: (8)
  -      │    │    │    └── fd: (8)-->(9)
  -      │    │    └── filters
  -      │    │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  -      │    └── filters (true)
  +      │    │    └── fd: (8)-->(9)
  +      │    └── filters
  +      │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
         └── filters (true)
================================================================================
DecorrelateJoin
  Cost: 2365.86
================================================================================
   project
  - ├── columns: k:1!null i:2!null f:3 s:4 j:5
  + ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
  -      ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      ├── semi-join-apply
  -      │    ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── semi-join (hash)
  +      │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    │    ├── key: (1)
         │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         │    ├── scan xy
         │    │    ├── columns: x:8!null y:9
         │    │    ├── key: (8)
         │    │    └── fd: (8)-->(9)
         │    └── filters
         │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
         └── filters (true)
================================================================================
PruneSemiAntiJoinRightCols
  Cost: 2355.76
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
         ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── semi-join (hash)
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    │    ├── key: (1)
         │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         │    ├── scan xy
  -      │    │    ├── columns: x:8!null y:9
  -      │    │    ├── key: (8)
  -      │    │    └── fd: (8)-->(9)
  +      │    │    └── columns: y:9
         │    └── filters
         │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
         └── filters (true)
================================================================================
EliminateSelect
  Cost: 2345.74
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  - └── select
  + └── semi-join (hash)
         ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      ├── semi-join (hash)
  +      ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
  -      │    ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      │    ├── scan a
  -      │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  -      │    │    ├── key: (1)
  -      │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      │    ├── scan xy
  -      │    │    └── columns: y:9
  -      │    └── filters
  -      │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  -      └── filters (true)
  +      │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      ├── scan xy
  +      │    └── columns: y:9
  +      └── filters
  +           └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
================================================================================
PruneJoinLeftCols
  Cost: 2325.54
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── semi-join (hash)
  -      ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── columns: k:1!null i:2 f:3 s:4 j:5
         ├── key: (1)
  -      ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
         ├── scan a
  -      │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │    ├── columns: k:1!null i:2 f:3 s:4 j:5
         │    ├── key: (1)
  -      │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
         ├── scan xy
         │    └── columns: y:9
         └── filters
              └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
================================================================================
EliminateProject
  Cost: 2315.52
================================================================================
  -project
  +semi-join (hash)
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  - └── semi-join (hash)
  -      ├── columns: k:1!null i:2 f:3 s:4 j:5
  -      ├── key: (1)
  -      ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  -      ├── scan a
  -      │    ├── columns: k:1!null i:2 f:3 s:4 j:5
  -      │    ├── key: (1)
  -      │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  -      ├── scan xy
  -      │    └── columns: y:9
  -      └── filters
  -           └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  + ├── scan a
  + │    ├── columns: k:1!null i:2 f:3 s:4 j:5
  + │    ├── key: (1)
  + │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  + ├── scan xy
  + │    └── columns: y:9
  + └── filters
  +      └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
ReorderJoins (no changes)
--------------------------------------------------------------------------------
================================================================================
CommuteSemiJoin
  Cost: 2242.46
================================================================================
  -semi-join (hash)
  +project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  - ├── scan a
  - │    ├── columns: k:1!null i:2 f:3 s:4 j:5
  - │    ├── key: (1)
  - │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  - ├── scan xy
  - │    └── columns: y:9
  - └── filters
  -      └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  + └── inner-join (hash)
  +      ├── columns: k:1!null i:2!null f:3 s:4 j:5 y:9!null
  +      ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
  +      ├── key: (1)
  +      ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5), (2)==(9), (9)==(2)
  +      ├── scan a
  +      │    ├── columns: k:1!null i:2 f:3 s:4 j:5
  +      │    ├── key: (1)
  +      │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  +      ├── distinct-on
  +      │    ├── columns: y:9
  +      │    ├── grouping columns: y:9
  +      │    ├── key: (9)
  +      │    └── scan xy
  +      │         └── columns: y:9
  +      └── filters
  +           └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
--------------------------------------------------------------------------------
GenerateMergeJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateLookupJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateStreamingGroupBy (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
ReorderJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateMergeJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateMergeJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateLookupJoins (no changes)
--------------------------------------------------------------------------------
================================================================================
Final best expression
  Cost: 2242.46
================================================================================
  project
   ├── columns: k:1!null i:2 f:3 s:4 j:5
   ├── key: (1)
   ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
   └── inner-join (hash)
        ├── columns: k:1!null i:2!null f:3 s:4 j:5 y:9!null
        ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
        ├── key: (1)
        ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5), (2)==(9), (9)==(2)
        ├── scan a
        │    ├── columns: k:1!null i:2 f:3 s:4 j:5
        │    ├── key: (1)
        │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
        ├── distinct-on
        │    ├── columns: y:9
        │    ├── grouping columns: y:9
        │    ├── key: (9)
        │    └── scan xy
        │         └── columns: y:9
        └── filters
             └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]

# Decorrelation pattern using ANY function.
optsteps
SELECT 5=ANY(SELECT i FROM a WHERE k=x) AS r FROM xy
----
================================================================================
Initial expression
  Cost: 2267.90
================================================================================
  project
   ├── columns: r:12
   ├── scan xy
   │    ├── columns: x:1!null y:2 xy.crdb_internal_mvcc_timestamp:3 xy.tableoid:4
   │    ├── key: (1)
   │    └── fd: (1)-->(2-4)
   └── projections
        └── any: eq [as=r:12, outer=(1), correlated-subquery]
             ├── project
             │    ├── columns: i:6
             │    ├── outer: (1)
             │    ├── cardinality: [0 - 1]
             │    ├── key: ()
             │    ├── fd: ()-->(6)
             │    └── select
             │         ├── columns: k:5!null i:6 f:7 s:8 j:9 a.crdb_internal_mvcc_timestamp:10 a.tableoid:11
             │         ├── outer: (1)
             │         ├── cardinality: [0 - 1]
             │         ├── key: ()
             │         ├── fd: ()-->(5-11)
             │         ├── scan a
             │         │    ├── columns: k:5!null i:6 f:7 s:8 j:9 a.crdb_internal_mvcc_timestamp:10 a.tableoid:11
             │         │    ├── key: (5)
             │         │    └── fd: (5)-->(6-11), (7,8)~~>(5,6,9-11)
             │         └── filters
             │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
             └── 5
================================================================================
PruneSelectCols
  Cost: 2217.40
================================================================================
   project
    ├── columns: r:12
    ├── scan xy
    │    ├── columns: x:1!null y:2 xy.crdb_internal_mvcc_timestamp:3 xy.tableoid:4
    │    ├── key: (1)
    │    └── fd: (1)-->(2-4)
    └── projections
         └── any: eq [as=r:12, outer=(1), correlated-subquery]
              ├── project
              │    ├── columns: i:6
              │    ├── outer: (1)
              │    ├── cardinality: [0 - 1]
              │    ├── key: ()
              │    ├── fd: ()-->(6)
              │    └── select
  -           │         ├── columns: k:5!null i:6 f:7 s:8 j:9 a.crdb_internal_mvcc_timestamp:10 a.tableoid:11
  +           │         ├── columns: k:5!null i:6
              │         ├── outer: (1)
              │         ├── cardinality: [0 - 1]
              │         ├── key: ()
  -           │         ├── fd: ()-->(5-11)
  +           │         ├── fd: ()-->(5,6)
              │         ├── scan a
  -           │         │    ├── columns: k:5!null i:6 f:7 s:8 j:9 a.crdb_internal_mvcc_timestamp:10 a.tableoid:11
  +           │         │    ├── columns: k:5!null i:6
              │         │    ├── key: (5)
  -           │         │    └── fd: (5)-->(6-11), (7,8)~~>(5,6,9-11)
  +           │         │    └── fd: (5)-->(6)
              │         └── filters
              │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
              └── 5
================================================================================
PruneScanCols
  Cost: 2187.10
================================================================================
   project
    ├── columns: r:12
    ├── scan xy
  - │    ├── columns: x:1!null y:2 xy.crdb_internal_mvcc_timestamp:3 xy.tableoid:4
  - │    ├── key: (1)
  - │    └── fd: (1)-->(2-4)
  + │    ├── columns: x:1!null
  + │    └── key: (1)
    └── projections
         └── any: eq [as=r:12, outer=(1), correlated-subquery]
              ├── project
              │    ├── columns: i:6
              │    ├── outer: (1)
              │    ├── cardinality: [0 - 1]
              │    ├── key: ()
              │    ├── fd: ()-->(6)
              │    └── select
              │         ├── columns: k:5!null i:6
              │         ├── outer: (1)
              │         ├── cardinality: [0 - 1]
              │         ├── key: ()
              │         ├── fd: ()-->(5,6)
              │         ├── scan a
              │         │    ├── columns: k:5!null i:6
              │         │    ├── key: (5)
              │         │    └── fd: (5)-->(6)
              │         └── filters
              │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
              └── 5
================================================================================
HoistProjectSubquery
  Cost: 2209.75
================================================================================
   project
    ├── columns: r:12
  - ├── scan xy
  - │    ├── columns: x:1!null
  - │    └── key: (1)
  + ├── inner-join-apply
  + │    ├── columns: x:1!null case:15
  + │    ├── key: (1)
  + │    ├── fd: (1)-->(15)
  + │    ├── scan xy
  + │    │    ├── columns: x:1!null
  + │    │    └── key: (1)
  + │    ├── project
  + │    │    ├── columns: case:15
  + │    │    ├── outer: (1)
  + │    │    ├── cardinality: [1 - 1]
  + │    │    ├── key: ()
  + │    │    ├── fd: ()-->(15)
  + │    │    ├── scalar-group-by
  + │    │    │    ├── columns: bool_or:14
  + │    │    │    ├── outer: (1)
  + │    │    │    ├── cardinality: [1 - 1]
  + │    │    │    ├── key: ()
  + │    │    │    ├── fd: ()-->(14)
  + │    │    │    ├── project
  + │    │    │    │    ├── columns: notnull:13!null
  + │    │    │    │    ├── outer: (1)
  + │    │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │    ├── key: ()
  + │    │    │    │    ├── fd: ()-->(13)
  + │    │    │    │    ├── select
  + │    │    │    │    │    ├── columns: i:6
  + │    │    │    │    │    ├── outer: (1)
  + │    │    │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │    │    ├── key: ()
  + │    │    │    │    │    ├── fd: ()-->(6)
  + │    │    │    │    │    ├── project
  + │    │    │    │    │    │    ├── columns: i:6
  + │    │    │    │    │    │    ├── outer: (1)
  + │    │    │    │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │    │    │    ├── key: ()
  + │    │    │    │    │    │    ├── fd: ()-->(6)
  + │    │    │    │    │    │    └── select
  + │    │    │    │    │    │         ├── columns: k:5!null i:6
  + │    │    │    │    │    │         ├── outer: (1)
  + │    │    │    │    │    │         ├── cardinality: [0 - 1]
  + │    │    │    │    │    │         ├── key: ()
  + │    │    │    │    │    │         ├── fd: ()-->(5,6)
  + │    │    │    │    │    │         ├── scan a
  + │    │    │    │    │    │         │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │         │    ├── key: (5)
  + │    │    │    │    │    │         │    └── fd: (5)-->(6)
  + │    │    │    │    │    │         └── filters
  + │    │    │    │    │    │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    │    └── filters
  + │    │    │    │    │         └── (5 = i:6) IS NOT false [outer=(6)]
  + │    │    │    │    └── projections
  + │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    └── aggregations
  + │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  + │    │    │              └── notnull:13
  + │    │    └── projections
  + │    │         └── CASE WHEN bool_or:14 AND (5 IS NOT NULL) THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
  + │    └── filters (true)
    └── projections
  -      └── any: eq [as=r:12, outer=(1), correlated-subquery]
  -           ├── project
  -           │    ├── columns: i:6
  -           │    ├── outer: (1)
  -           │    ├── cardinality: [0 - 1]
  -           │    ├── key: ()
  -           │    ├── fd: ()-->(6)
  -           │    └── select
  -           │         ├── columns: k:5!null i:6
  -           │         ├── outer: (1)
  -           │         ├── cardinality: [0 - 1]
  -           │         ├── key: ()
  -           │         ├── fd: ()-->(5,6)
  -           │         ├── scan a
  -           │         │    ├── columns: k:5!null i:6
  -           │         │    ├── key: (5)
  -           │         │    └── fd: (5)-->(6)
  -           │         └── filters
  -           │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  -           └── 5
  +      └── case:15 [as=r:12, outer=(15)]
================================================================================
FoldNonNullIsNotNull
  Cost: 2209.75
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    ├── project
    │    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    │    └── select
    │    │    │    │    │    │         ├── columns: k:5!null i:6
    │    │    │    │    │    │         ├── outer: (1)
    │    │    │    │    │    │         ├── cardinality: [0 - 1]
    │    │    │    │    │    │         ├── key: ()
    │    │    │    │    │    │         ├── fd: ()-->(5,6)
    │    │    │    │    │    │         ├── scan a
    │    │    │    │    │    │         │    ├── columns: k:5!null i:6
    │    │    │    │    │    │         │    ├── key: (5)
    │    │    │    │    │    │         │    └── fd: (5)-->(6)
    │    │    │    │    │    │         └── filters
    │    │    │    │    │    │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │    │    └── filters
    │    │    │    │    │         └── (5 = i:6) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
  - │    │         └── CASE WHEN bool_or:14 AND (5 IS NOT NULL) THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
  + │    │         └── CASE WHEN bool_or:14 AND true THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
CommuteVar
  Cost: 2209.75
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    ├── project
    │    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    │    └── select
    │    │    │    │    │    │         ├── columns: k:5!null i:6
    │    │    │    │    │    │         ├── outer: (1)
    │    │    │    │    │    │         ├── cardinality: [0 - 1]
    │    │    │    │    │    │         ├── key: ()
    │    │    │    │    │    │         ├── fd: ()-->(5,6)
    │    │    │    │    │    │         ├── scan a
    │    │    │    │    │    │         │    ├── columns: k:5!null i:6
    │    │    │    │    │    │         │    ├── key: (5)
    │    │    │    │    │    │         │    └── fd: (5)-->(6)
    │    │    │    │    │    │         └── filters
    │    │    │    │    │    │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │    │    └── filters
  - │    │    │    │    │         └── (5 = i:6) IS NOT false [outer=(6)]
  + │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 AND true THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
PushSelectIntoProject
  Cost: 2209.75
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    ├── project
    │    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    │    └── select
    │    │    │    │    │    │         ├── columns: k:5!null i:6
    │    │    │    │    │    │         ├── outer: (1)
    │    │    │    │    │    │         ├── cardinality: [0 - 1]
    │    │    │    │    │    │         ├── key: ()
    │    │    │    │    │    │         ├── fd: ()-->(5,6)
  - │    │    │    │    │    │         ├── scan a
  + │    │    │    │    │    │         ├── select
    │    │    │    │    │    │         │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │         │    ├── key: (5)
  - │    │    │    │    │    │         │    └── fd: (5)-->(6)
  + │    │    │    │    │    │         │    ├── outer: (1)
  + │    │    │    │    │    │         │    ├── cardinality: [0 - 1]
  + │    │    │    │    │    │         │    ├── key: ()
  + │    │    │    │    │    │         │    ├── fd: ()-->(5,6)
  + │    │    │    │    │    │         │    ├── scan a
  + │    │    │    │    │    │         │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │         │    │    ├── key: (5)
  + │    │    │    │    │    │         │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    │         │    └── filters
  + │    │    │    │    │    │         │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │    │    │         └── filters
  - │    │    │    │    │    │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    │    └── filters
  - │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    │              └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    └── filters (true)
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 AND true THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
MergeSelects
  Cost: 2209.77
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    ├── project
    │    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    │    └── select
    │    │    │    │    │    │         ├── columns: k:5!null i:6
    │    │    │    │    │    │         ├── outer: (1)
    │    │    │    │    │    │         ├── cardinality: [0 - 1]
    │    │    │    │    │    │         ├── key: ()
    │    │    │    │    │    │         ├── fd: ()-->(5,6)
  - │    │    │    │    │    │         ├── select
  + │    │    │    │    │    │         ├── scan a
    │    │    │    │    │    │         │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │         │    ├── outer: (1)
  - │    │    │    │    │    │         │    ├── cardinality: [0 - 1]
  - │    │    │    │    │    │         │    ├── key: ()
  - │    │    │    │    │    │         │    ├── fd: ()-->(5,6)
  - │    │    │    │    │    │         │    ├── scan a
  - │    │    │    │    │    │         │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │         │    │    ├── key: (5)
  - │    │    │    │    │    │         │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    │         │    └── filters
  - │    │    │    │    │    │         │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    │    │         │    ├── key: (5)
  + │    │    │    │    │    │         │    └── fd: (5)-->(6)
    │    │    │    │    │    │         └── filters
  + │    │    │    │    │    │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │    │    │              └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    │    └── filters (true)
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 AND true THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateSelect
  Cost: 2209.75
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
  - │    │    │    │    ├── select
  + │    │    │    │    ├── project
    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(6)
  - │    │    │    │    │    ├── project
  - │    │    │    │    │    │    ├── columns: i:6
  - │    │    │    │    │    │    ├── outer: (1)
  - │    │    │    │    │    │    ├── cardinality: [0 - 1]
  - │    │    │    │    │    │    ├── key: ()
  - │    │    │    │    │    │    ├── fd: ()-->(6)
  - │    │    │    │    │    │    └── select
  - │    │    │    │    │    │         ├── columns: k:5!null i:6
  - │    │    │    │    │    │         ├── outer: (1)
  - │    │    │    │    │    │         ├── cardinality: [0 - 1]
  - │    │    │    │    │    │         ├── key: ()
  - │    │    │    │    │    │         ├── fd: ()-->(5,6)
  - │    │    │    │    │    │         ├── scan a
  - │    │    │    │    │    │         │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │         │    ├── key: (5)
  - │    │    │    │    │    │         │    └── fd: (5)-->(6)
  - │    │    │    │    │    │         └── filters
  - │    │    │    │    │    │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    │    │              └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    │    └── filters (true)
  + │    │    │    │    │    └── select
  + │    │    │    │    │         ├── columns: k:5!null i:6
  + │    │    │    │    │         ├── outer: (1)
  + │    │    │    │    │         ├── cardinality: [0 - 1]
  + │    │    │    │    │         ├── key: ()
  + │    │    │    │    │         ├── fd: ()-->(5,6)
  + │    │    │    │    │         ├── scan a
  + │    │    │    │    │         │    ├── columns: k:5!null i:6
  + │    │    │    │    │         │    ├── key: (5)
  + │    │    │    │    │         │    └── fd: (5)-->(6)
  + │    │    │    │    │         └── filters
  + │    │    │    │    │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    │              └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 AND true THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
MergeProjects
  Cost: 2209.73
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
  - │    │    │    │    ├── project
  - │    │    │    │    │    ├── columns: i:6
  + │    │    │    │    ├── select
  + │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
  - │    │    │    │    │    ├── fd: ()-->(6)
  - │    │    │    │    │    └── select
  - │    │    │    │    │         ├── columns: k:5!null i:6
  - │    │    │    │    │         ├── outer: (1)
  - │    │    │    │    │         ├── cardinality: [0 - 1]
  - │    │    │    │    │         ├── key: ()
  - │    │    │    │    │         ├── fd: ()-->(5,6)
  - │    │    │    │    │         ├── scan a
  - │    │    │    │    │         │    ├── columns: k:5!null i:6
  - │    │    │    │    │         │    ├── key: (5)
  - │    │    │    │    │         │    └── fd: (5)-->(6)
  - │    │    │    │    │         └── filters
  - │    │    │    │    │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    │              └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    ├── fd: ()-->(5,6)
  + │    │    │    │    │    ├── scan a
  + │    │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    └── filters
  + │    │    │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 AND true THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
SimplifyAndTrue
  Cost: 2209.73
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(5,6)
    │    │    │    │    │    ├── scan a
    │    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    │    └── fd: (5)-->(6)
    │    │    │    │    │    └── filters
    │    │    │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
  - │    │         └── CASE WHEN bool_or:14 AND true THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
  + │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
TryDecorrelateProject
  Cost: 2239.74
================================================================================
   project
    ├── columns: r:12
  - ├── inner-join-apply
  + ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
  - │    ├── scan xy
  - │    │    ├── columns: x:1!null
  - │    │    └── key: (1)
    │    ├── project
  - │    │    ├── columns: case:15
  - │    │    ├── outer: (1)
  - │    │    ├── cardinality: [1 - 1]
  - │    │    ├── key: ()
  - │    │    ├── fd: ()-->(15)
  - │    │    ├── scalar-group-by
  - │    │    │    ├── columns: bool_or:14
  - │    │    │    ├── outer: (1)
  - │    │    │    ├── cardinality: [1 - 1]
  - │    │    │    ├── key: ()
  - │    │    │    ├── fd: ()-->(14)
  - │    │    │    ├── project
  - │    │    │    │    ├── columns: notnull:13!null
  + │    │    ├── columns: case:15 x:1!null
  + │    │    ├── key: (1)
  + │    │    ├── fd: (1)-->(15)
  + │    │    ├── inner-join-apply
  + │    │    │    ├── columns: x:1!null bool_or:14
  + │    │    │    ├── key: (1)
  + │    │    │    ├── fd: (1)-->(14)
  + │    │    │    ├── scan xy
  + │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    └── key: (1)
  + │    │    │    ├── scalar-group-by
  + │    │    │    │    ├── columns: bool_or:14
    │    │    │    │    ├── outer: (1)
  - │    │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    │    ├── key: ()
  - │    │    │    │    ├── fd: ()-->(13)
  - │    │    │    │    ├── select
  - │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    ├── fd: ()-->(14)
  + │    │    │    │    ├── project
  + │    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
  - │    │    │    │    │    ├── fd: ()-->(5,6)
  - │    │    │    │    │    ├── scan a
  + │    │    │    │    │    ├── fd: ()-->(13)
  + │    │    │    │    │    ├── select
    │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    └── filters
  - │    │    │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    └── projections
  - │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    └── aggregations
  - │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  - │    │    │              └── notnull:13
  + │    │    │    │    │    │    ├── outer: (1)
  + │    │    │    │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │    │    │    ├── key: ()
  + │    │    │    │    │    │    ├── fd: ()-->(5,6)
  + │    │    │    │    │    │    ├── scan a
  + │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    │    └── filters
  + │    │    │    │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    └── projections
  + │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │    └── aggregations
  + │    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  + │    │    │    │              └── notnull:13
  + │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
TryDecorrelateScalarGroupBy
  Cost: 2299.91
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
  - │    │    ├── inner-join-apply
  + │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
  - │    │    │    ├── scan xy
  - │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    └── key: (1)
  - │    │    │    ├── scalar-group-by
  - │    │    │    │    ├── columns: bool_or:14
  - │    │    │    │    ├── outer: (1)
  - │    │    │    │    ├── cardinality: [1 - 1]
  - │    │    │    │    ├── key: ()
  - │    │    │    │    ├── fd: ()-->(14)
  - │    │    │    │    ├── project
  - │    │    │    │    │    ├── columns: notnull:13!null
  - │    │    │    │    │    ├── outer: (1)
  - │    │    │    │    │    ├── cardinality: [0 - 1]
  - │    │    │    │    │    ├── key: ()
  - │    │    │    │    │    ├── fd: ()-->(13)
  - │    │    │    │    │    ├── select
  - │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    ├── outer: (1)
  - │    │    │    │    │    │    ├── cardinality: [0 - 1]
  - │    │    │    │    │    │    ├── key: ()
  - │    │    │    │    │    │    ├── fd: ()-->(5,6)
  - │    │    │    │    │    │    ├── scan a
  - │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    │    └── filters
  - │    │    │    │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    │    └── projections
  - │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │    └── aggregations
  - │    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  - │    │    │    │              └── notnull:13
  + │    │    │    ├── project
  + │    │    │    │    ├── columns: x:1!null bool_or:14
  + │    │    │    │    ├── key: (1)
  + │    │    │    │    ├── fd: (1)-->(14)
  + │    │    │    │    └── group-by (hash)
  + │    │    │    │         ├── columns: x:1!null bool_or:14
  + │    │    │    │         ├── grouping columns: x:1!null
  + │    │    │    │         ├── key: (1)
  + │    │    │    │         ├── fd: (1)-->(14)
  + │    │    │    │         ├── left-join-apply
  + │    │    │    │         │    ├── columns: x:1!null notnull:13
  + │    │    │    │         │    ├── key: (1)
  + │    │    │    │         │    ├── fd: (1)-->(13)
  + │    │    │    │         │    ├── scan xy
  + │    │    │    │         │    │    ├── columns: x:1!null
  + │    │    │    │         │    │    └── key: (1)
  + │    │    │    │         │    ├── project
  + │    │    │    │         │    │    ├── columns: notnull:13!null
  + │    │    │    │         │    │    ├── outer: (1)
  + │    │    │    │         │    │    ├── cardinality: [0 - 1]
  + │    │    │    │         │    │    ├── key: ()
  + │    │    │    │         │    │    ├── fd: ()-->(13)
  + │    │    │    │         │    │    ├── select
  + │    │    │    │         │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │    │    │    ├── outer: (1)
  + │    │    │    │         │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │         │    │    │    ├── key: ()
  + │    │    │    │         │    │    │    ├── fd: ()-->(5,6)
  + │    │    │    │         │    │    │    ├── scan a
  + │    │    │    │         │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │    │    │    │    ├── key: (5)
  + │    │    │    │         │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │    │    │    └── filters
  + │    │    │    │         │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │         │    │    └── projections
  + │    │    │    │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │         │    └── filters (true)
  + │    │    │    │         └── aggregations
  + │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
  + │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
TryDecorrelateProjectSelect
  Cost: 2337.53
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by (hash)
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
  - │    │    │    │         ├── left-join-apply
  + │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
  - │    │    │    │         │    ├── scan xy
  - │    │    │    │         │    │    ├── columns: x:1!null
  - │    │    │    │         │    │    └── key: (1)
  - │    │    │    │         │    ├── project
  - │    │    │    │         │    │    ├── columns: notnull:13!null
  - │    │    │    │         │    │    ├── outer: (1)
  - │    │    │    │         │    │    ├── cardinality: [0 - 1]
  - │    │    │    │         │    │    ├── key: ()
  - │    │    │    │         │    │    ├── fd: ()-->(13)
  - │    │    │    │         │    │    ├── select
  - │    │    │    │         │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │    │    │    ├── outer: (1)
  - │    │    │    │         │    │    │    ├── cardinality: [0 - 1]
  - │    │    │    │         │    │    │    ├── key: ()
  - │    │    │    │         │    │    │    ├── fd: ()-->(5,6)
  - │    │    │    │         │    │    │    ├── scan a
  - │    │    │    │         │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │    │    │    │    ├── key: (5)
  - │    │    │    │         │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │         │    │    │    └── filters
  - │    │    │    │         │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │         │    │    └── projections
  - │    │    │    │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │         │    └── filters (true)
  + │    │    │    │         │    └── left-join-apply
  + │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
  + │    │    │    │         │         ├── key: (1)
  + │    │    │    │         │         ├── fd: (1)-->(5,6,13)
  + │    │    │    │         │         ├── scan xy
  + │    │    │    │         │         │    ├── columns: x:1!null
  + │    │    │    │         │         │    └── key: (1)
  + │    │    │    │         │         ├── project
  + │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null i:6
  + │    │    │    │         │         │    ├── key: (5)
  + │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
  + │    │    │    │         │         │    ├── scan a
  + │    │    │    │         │         │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │         │    │    ├── key: (5)
  + │    │    │    │         │         │    │    └── fd: (5)-->(6)
  + │    │    │    │         │         │    └── projections
  + │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │         │         └── filters
  + │    │    │    │         │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │         │              └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
DecorrelateJoin
  Cost: 2337.53
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by (hash)
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
    │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
  - │    │    │    │         │    └── left-join-apply
  + │    │    │    │         │    └── left-join (hash)
    │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
  + │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │         ├── key: (1)
  - │    │    │    │         │         ├── fd: (1)-->(5,6,13)
  + │    │    │    │         │         ├── fd: (5)-->(6), (6)~~>(13), (1)-->(5,6,13)
    │    │    │    │         │         ├── scan xy
    │    │    │    │         │         │    ├── columns: x:1!null
    │    │    │    │         │         │    └── key: (1)
    │    │    │    │         │         ├── project
    │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null i:6
    │    │    │    │         │         │    ├── key: (5)
    │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
    │    │    │    │         │         │    ├── scan a
    │    │    │    │         │         │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    ├── key: (5)
    │    │    │    │         │         │    │    └── fd: (5)-->(6)
    │    │    │    │         │         │    └── projections
    │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    │         │         └── filters
    │    │    │    │         │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         │              └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
PushFilterIntoJoinRight
  Cost: 2335.75
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by (hash)
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
    │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
    │    │    │    │         │    └── left-join (hash)
    │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
    │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │         ├── key: (1)
    │    │    │    │         │         ├── fd: (5)-->(6), (6)~~>(13), (1)-->(5,6,13)
    │    │    │    │         │         ├── scan xy
    │    │    │    │         │         │    ├── columns: x:1!null
    │    │    │    │         │         │    └── key: (1)
  - │    │    │    │         │         ├── project
  - │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null i:6
  + │    │    │    │         │         ├── select
  + │    │    │    │         │         │    ├── columns: k:5!null i:6 notnull:13!null
    │    │    │    │         │         │    ├── key: (5)
    │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
  - │    │    │    │         │         │    ├── scan a
  - │    │    │    │         │         │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │         │    ├── project
  + │    │    │    │         │         │    │    ├── columns: notnull:13!null k:5!null i:6
    │    │    │    │         │         │    │    ├── key: (5)
  - │    │    │    │         │         │    │    └── fd: (5)-->(6)
  - │    │    │    │         │         │    └── projections
  - │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │         │         │    │    ├── fd: (5)-->(6), (6)-->(13)
  + │    │    │    │         │         │    │    ├── scan a
  + │    │    │    │         │         │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │         │    │    │    ├── key: (5)
  + │    │    │    │         │         │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │         │    │    └── projections
  + │    │    │    │         │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │         │         │    └── filters
  + │    │    │    │         │         │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │         │         └── filters
  - │    │    │    │         │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │         │              └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │         │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
PushSelectIntoProject
  Cost: 2325.77
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by (hash)
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
    │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
    │    │    │    │         │    └── left-join (hash)
    │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
    │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │         ├── key: (1)
    │    │    │    │         │         ├── fd: (5)-->(6), (6)~~>(13), (1)-->(5,6,13)
    │    │    │    │         │         ├── scan xy
    │    │    │    │         │         │    ├── columns: x:1!null
    │    │    │    │         │         │    └── key: (1)
    │    │    │    │         │         ├── select
    │    │    │    │         │         │    ├── columns: k:5!null i:6 notnull:13!null
    │    │    │    │         │         │    ├── key: (5)
    │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
    │    │    │    │         │         │    ├── project
    │    │    │    │         │         │    │    ├── columns: notnull:13!null k:5!null i:6
    │    │    │    │         │         │    │    ├── key: (5)
    │    │    │    │         │         │    │    ├── fd: (5)-->(6), (6)-->(13)
  - │    │    │    │         │         │    │    ├── scan a
  + │    │    │    │         │         │    │    ├── select
    │    │    │    │         │         │    │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    │    ├── key: (5)
  - │    │    │    │         │         │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │         │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │         │         │    │    │    ├── scan a
  + │    │    │    │         │         │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │         │    │    │    │    ├── key: (5)
  + │    │    │    │         │         │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │         │    │    │    └── filters
  + │    │    │    │         │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │         │         │    │    └── projections
    │    │    │    │         │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │         │         │    └── filters
  - │    │    │    │         │         │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │         │         │    └── filters (true)
    │    │    │    │         │         └── filters
    │    │    │    │         │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateSelect
  Cost: 2322.42
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by (hash)
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
    │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
    │    │    │    │         │    └── left-join (hash)
    │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
    │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │         ├── key: (1)
    │    │    │    │         │         ├── fd: (5)-->(6), (6)~~>(13), (1)-->(5,6,13)
    │    │    │    │         │         ├── scan xy
    │    │    │    │         │         │    ├── columns: x:1!null
    │    │    │    │         │         │    └── key: (1)
  - │    │    │    │         │         ├── select
  - │    │    │    │         │         │    ├── columns: k:5!null i:6 notnull:13!null
  + │    │    │    │         │         ├── project
  + │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null i:6
    │    │    │    │         │         │    ├── key: (5)
    │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
  - │    │    │    │         │         │    ├── project
  - │    │    │    │         │         │    │    ├── columns: notnull:13!null k:5!null i:6
  + │    │    │    │         │         │    ├── select
  + │    │    │    │         │         │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    ├── key: (5)
  - │    │    │    │         │         │    │    ├── fd: (5)-->(6), (6)-->(13)
  - │    │    │    │         │         │    │    ├── select
  + │    │    │    │         │         │    │    ├── fd: (5)-->(6)
  + │    │    │    │         │         │    │    ├── scan a
    │    │    │    │         │         │    │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    │    ├── key: (5)
  - │    │    │    │         │         │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │         │         │    │    │    ├── scan a
  - │    │    │    │         │         │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │         │    │    │    │    ├── key: (5)
  - │    │    │    │         │         │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │         │         │    │    │    └── filters
  - │    │    │    │         │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │         │         │    │    └── projections
  - │    │    │    │         │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │         │         │    └── filters (true)
  + │    │    │    │         │         │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │         │    │    └── filters
  + │    │    │    │         │         │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │         │         │    └── projections
  + │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    │         │         └── filters
    │    │    │    │         │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
PruneJoinRightCols
  Cost: 2322.42
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by (hash)
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
    │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
    │    │    │    │         │    └── left-join (hash)
  - │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
  + │    │    │    │         │         ├── columns: x:1!null k:5 notnull:13
    │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │         ├── key: (1)
  - │    │    │    │         │         ├── fd: (5)-->(6), (6)~~>(13), (1)-->(5,6,13)
  + │    │    │    │         │         ├── fd: (5)-->(13), (1)-->(5,13)
    │    │    │    │         │         ├── scan xy
    │    │    │    │         │         │    ├── columns: x:1!null
    │    │    │    │         │         │    └── key: (1)
    │    │    │    │         │         ├── project
  - │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null i:6
  + │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null
    │    │    │    │         │         │    ├── key: (5)
  - │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
  + │    │    │    │         │         │    ├── fd: (5)-->(13)
    │    │    │    │         │         │    ├── select
    │    │    │    │         │         │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    ├── key: (5)
    │    │    │    │         │         │    │    ├── fd: (5)-->(6)
    │    │    │    │         │         │    │    ├── scan a
    │    │    │    │         │         │    │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    │    ├── key: (5)
    │    │    │    │         │         │    │    │    └── fd: (5)-->(6)
    │    │    │    │         │         │    │    └── filters
    │    │    │    │         │         │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │         │         │    └── projections
    │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    │         │         └── filters
    │    │    │    │         │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateGroupByProject
  Cost: 2312.40
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by (hash)
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
  - │    │    │    │         ├── project
  - │    │    │    │         │    ├── columns: x:1!null notnull:13
  + │    │    │    │         ├── left-join (hash)
  + │    │    │    │         │    ├── columns: x:1!null k:5 notnull:13
  + │    │    │    │         │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │    ├── key: (1)
  - │    │    │    │         │    ├── fd: (1)-->(13)
  - │    │    │    │         │    └── left-join (hash)
  - │    │    │    │         │         ├── columns: x:1!null k:5 notnull:13
  - │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  - │    │    │    │         │         ├── key: (1)
  - │    │    │    │         │         ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    │    │         │         ├── scan xy
  - │    │    │    │         │         │    ├── columns: x:1!null
  - │    │    │    │         │         │    └── key: (1)
  - │    │    │    │         │         ├── project
  - │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null
  - │    │    │    │         │         │    ├── key: (5)
  - │    │    │    │         │         │    ├── fd: (5)-->(13)
  - │    │    │    │         │         │    ├── select
  - │    │    │    │         │         │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │         │    │    ├── key: (5)
  - │    │    │    │         │         │    │    ├── fd: (5)-->(6)
  - │    │    │    │         │         │    │    ├── scan a
  - │    │    │    │         │         │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │         │    │    │    ├── key: (5)
  - │    │    │    │         │         │    │    │    └── fd: (5)-->(6)
  - │    │    │    │         │         │    │    └── filters
  - │    │    │    │         │         │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │         │         │    └── projections
  - │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │         │         └── filters
  - │    │    │    │         │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │         │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    │    │         │    ├── scan xy
  + │    │    │    │         │    │    ├── columns: x:1!null
  + │    │    │    │         │    │    └── key: (1)
  + │    │    │    │         │    ├── project
  + │    │    │    │         │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    │         │    │    ├── key: (5)
  + │    │    │    │         │    │    ├── fd: (5)-->(13)
  + │    │    │    │         │    │    ├── select
  + │    │    │    │         │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │    │    │    ├── key: (5)
  + │    │    │    │         │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │         │    │    │    ├── scan a
  + │    │    │    │         │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │    │    │    │    ├── key: (5)
  + │    │    │    │         │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │    │    │    └── filters
  + │    │    │    │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │         │    │    └── projections
  + │    │    │    │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │         │    └── filters
  + │    │    │    │         │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateProject
  Cost: 2302.38
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
  - │    │    │    ├── project
  + │    │    │    ├── group-by (hash)
    │    │    │    │    ├── columns: x:1!null bool_or:14
  + │    │    │    │    ├── grouping columns: x:1!null
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
  - │    │    │    │    └── group-by (hash)
  - │    │    │    │         ├── columns: x:1!null bool_or:14
  - │    │    │    │         ├── grouping columns: x:1!null
  - │    │    │    │         ├── key: (1)
  - │    │    │    │         ├── fd: (1)-->(14)
  - │    │    │    │         ├── left-join (hash)
  - │    │    │    │         │    ├── columns: x:1!null k:5 notnull:13
  - │    │    │    │         │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  - │    │    │    │         │    ├── key: (1)
  - │    │    │    │         │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    │    │         │    ├── scan xy
  - │    │    │    │         │    │    ├── columns: x:1!null
  - │    │    │    │         │    │    └── key: (1)
  - │    │    │    │         │    ├── project
  - │    │    │    │         │    │    ├── columns: notnull:13!null k:5!null
  - │    │    │    │         │    │    ├── key: (5)
  - │    │    │    │         │    │    ├── fd: (5)-->(13)
  - │    │    │    │         │    │    ├── select
  - │    │    │    │         │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │    │    │    ├── key: (5)
  - │    │    │    │         │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │         │    │    │    ├── scan a
  - │    │    │    │         │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │    │    │    │    ├── key: (5)
  - │    │    │    │         │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │         │    │    │    └── filters
  - │    │    │    │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │         │    │    └── projections
  - │    │    │    │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │         │    └── filters
  - │    │    │    │         │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │         └── aggregations
  - │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
  - │    │    │    │                   └── notnull:13
  + │    │    │    │    ├── left-join (hash)
  + │    │    │    │    │    ├── columns: x:1!null k:5 notnull:13
  + │    │    │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  + │    │    │    │    │    ├── key: (1)
  + │    │    │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    │    │    │    ├── scan xy
  + │    │    │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    │    │    └── key: (1)
  + │    │    │    │    │    ├── project
  + │    │    │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    │    ├── fd: (5)-->(13)
  + │    │    │    │    │    │    ├── select
  + │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    │    │    ├── scan a
  + │    │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    │    │    └── filters
  + │    │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    │    └── projections
  + │    │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │    │    └── filters
  + │    │    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    └── aggregations
  + │    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  + │    │    │    │              └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateSelect
  Cost: 2292.36
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
  - │    │    ├── select
  + │    │    ├── group-by (hash)
    │    │    │    ├── columns: x:1!null bool_or:14
  + │    │    │    ├── grouping columns: x:1!null
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
  - │    │    │    ├── group-by (hash)
  - │    │    │    │    ├── columns: x:1!null bool_or:14
  - │    │    │    │    ├── grouping columns: x:1!null
  + │    │    │    ├── left-join (hash)
  + │    │    │    │    ├── columns: x:1!null k:5 notnull:13
  + │    │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │    ├── key: (1)
  - │    │    │    │    ├── fd: (1)-->(14)
  - │    │    │    │    ├── left-join (hash)
  - │    │    │    │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  - │    │    │    │    │    ├── key: (1)
  - │    │    │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    │    │    │    ├── scan xy
  - │    │    │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    │    │    └── key: (1)
  - │    │    │    │    │    ├── project
  - │    │    │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    │    │    ├── scan xy
  + │    │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    │    └── key: (1)
  + │    │    │    │    ├── project
  + │    │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    ├── fd: (5)-->(13)
  + │    │    │    │    │    ├── select
  + │    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    ├── fd: (5)-->(13)
  - │    │    │    │    │    │    ├── select
  + │    │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    │    ├── scan a
    │    │    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    │    │    │    ├── scan a
  - │    │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    │    │    └── filters
  - │    │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    │    │    └── projections
  - │    │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │    │    └── filters
  - │    │    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    └── aggregations
  - │    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  - │    │    │    │              └── notnull:13
  - │    │    │    └── filters (true)
  + │    │    │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    │    └── filters
  + │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    └── projections
  + │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │    └── filters
  + │    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    └── aggregations
  + │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  + │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateSelect
  Cost: 2282.34
================================================================================
   project
    ├── columns: r:12
  - ├── select
  - │    ├── columns: x:1!null case:15
  + ├── project
  + │    ├── columns: case:15 x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
  - │    ├── project
  - │    │    ├── columns: case:15 x:1!null
  + │    ├── group-by (hash)
  + │    │    ├── columns: x:1!null bool_or:14
  + │    │    ├── grouping columns: x:1!null
    │    │    ├── key: (1)
  - │    │    ├── fd: (1)-->(15)
  - │    │    ├── group-by (hash)
  - │    │    │    ├── columns: x:1!null bool_or:14
  - │    │    │    ├── grouping columns: x:1!null
  + │    │    ├── fd: (1)-->(14)
  + │    │    ├── left-join (hash)
  + │    │    │    ├── columns: x:1!null k:5 notnull:13
  + │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    ├── key: (1)
  - │    │    │    ├── fd: (1)-->(14)
  - │    │    │    ├── left-join (hash)
  - │    │    │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  - │    │    │    │    ├── key: (1)
  - │    │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    │    │    ├── scan xy
  - │    │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    │    └── key: (1)
  - │    │    │    │    ├── project
  - │    │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    │    ├── scan xy
  + │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    └── key: (1)
  + │    │    │    ├── project
  + │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    │    ├── key: (5)
  + │    │    │    │    ├── fd: (5)-->(13)
  + │    │    │    │    ├── select
  + │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    ├── fd: (5)-->(13)
  - │    │    │    │    │    ├── select
  + │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    ├── scan a
    │    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    │    │    ├── scan a
  - │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    │    └── filters
  - │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    │    └── projections
  - │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │    └── filters
  - │    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    └── aggregations
  - │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  - │    │    │              └── notnull:13
  - │    │    └── projections
  - │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
  - │    └── filters (true)
  + │    │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    └── filters
  + │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    └── projections
  + │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    └── filters
  + │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    └── aggregations
  + │    │         └── bool-or [as=bool_or:14, outer=(13)]
  + │    │              └── notnull:13
  + │    └── projections
  + │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
PruneProjectCols
  Cost: 2282.34
================================================================================
   project
    ├── columns: r:12
    ├── project
  - │    ├── columns: case:15 x:1!null
  - │    ├── key: (1)
  - │    ├── fd: (1)-->(15)
  + │    ├── columns: case:15
    │    ├── group-by (hash)
    │    │    ├── columns: x:1!null bool_or:14
    │    │    ├── grouping columns: x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(14)
    │    │    ├── left-join (hash)
    │    │    │    ├── columns: x:1!null k:5 notnull:13
    │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
    │    │    │    ├── scan xy
    │    │    │    │    ├── columns: x:1!null
    │    │    │    │    └── key: (1)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null k:5!null
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    │    ├── scan a
    │    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    │    └── fd: (5)-->(6)
    │    │    │    │    │    └── filters
    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── filters
    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    └── aggregations
    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │              └── notnull:13
    │    └── projections
    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
InlineProjectInProject
  Cost: 2262.32
================================================================================
   project
    ├── columns: r:12
  - ├── project
  - │    ├── columns: case:15
  - │    ├── group-by (hash)
  - │    │    ├── columns: x:1!null bool_or:14
  - │    │    ├── grouping columns: x:1!null
  + ├── group-by (hash)
  + │    ├── columns: x:1!null bool_or:14
  + │    ├── grouping columns: x:1!null
  + │    ├── key: (1)
  + │    ├── fd: (1)-->(14)
  + │    ├── left-join (hash)
  + │    │    ├── columns: x:1!null k:5 notnull:13
  + │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    ├── key: (1)
  - │    │    ├── fd: (1)-->(14)
  - │    │    ├── left-join (hash)
  - │    │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  - │    │    │    ├── key: (1)
  - │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    │    ├── scan xy
  - │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    └── key: (1)
  - │    │    │    ├── project
  - │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    ├── scan xy
  + │    │    │    ├── columns: x:1!null
  + │    │    │    └── key: (1)
  + │    │    ├── project
  + │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    ├── key: (5)
  + │    │    │    ├── fd: (5)-->(13)
  + │    │    │    ├── select
  + │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
  - │    │    │    │    ├── fd: (5)-->(13)
  - │    │    │    │    ├── select
  + │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    │    ├── scan a
  - │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    └── filters
  - │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    └── projections
  - │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    └── filters
  - │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    └── aggregations
  - │    │         └── bool-or [as=bool_or:14, outer=(13)]
  - │    │              └── notnull:13
  - │    └── projections
  - │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
  + │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    └── filters
  + │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    └── projections
  + │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    └── filters
  + │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    └── aggregations
  + │         └── bool-or [as=bool_or:14, outer=(13)]
  + │              └── notnull:13
    └── projections
  -      └── case:15 [as=r:12, outer=(15)]
  +      └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GeneratePartialIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateConstrainedScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateZigzagJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
ReorderJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
CommuteLeftJoin (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by (hash)
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
  - │    ├── left-join (hash)
  + │    ├── right-join (hash)
    │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── scan xy
  - │    │    │    ├── columns: x:1!null
  - │    │    │    └── key: (1)
    │    │    ├── project
    │    │    │    ├── columns: notnull:13!null k:5!null
    │    │    │    ├── key: (5)
    │    │    │    ├── fd: (5)-->(13)
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    └── fd: (5)-->(6)
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    └── projections
    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    ├── scan xy
  + │    │    │    ├── columns: x:1!null
  + │    │    │    └── key: (1)
    │    │    └── filters
    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
================================================================================
GenerateMergeJoins
  Cost: 2256.64
================================================================================
   project
    ├── columns: r:12
    ├── group-by (hash)
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
  - │    ├── left-join (hash)
  + │    ├── left-join (merge)
    │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  + │    │    ├── left ordering: +1
  + │    │    ├── right ordering: +5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
    │    │    ├── scan xy
    │    │    │    ├── columns: x:1!null
  - │    │    │    └── key: (1)
  + │    │    │    ├── key: (1)
  + │    │    │    └── ordering: +1
    │    │    ├── project
    │    │    │    ├── columns: notnull:13!null k:5!null
    │    │    │    ├── key: (5)
    │    │    │    ├── fd: (5)-->(13)
  + │    │    │    ├── ordering: +5
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    ├── ordering: +5
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    └── ordering: +5
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    └── projections
    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    └── filters
  - │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    └── filters (true)
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
HoistProjectFromLeftJoin (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by (hash)
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
  - │    ├── left-join (merge)
  - │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    ├── left ordering: +1
  - │    │    ├── right ordering: +5
  + │    ├── project
  + │    │    ├── columns: notnull:13 x:1!null k:5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── scan xy
  - │    │    │    ├── columns: x:1!null
  + │    │    ├── left-join (hash)
  + │    │    │    ├── columns: x:1!null k:5 i:6
  + │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    ├── key: (1)
  - │    │    │    └── ordering: +1
  - │    │    ├── project
  - │    │    │    ├── columns: notnull:13!null k:5!null
  - │    │    │    ├── key: (5)
  - │    │    │    ├── fd: (5)-->(13)
  - │    │    │    ├── ordering: +5
  + │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
  + │    │    │    ├── scan xy
  + │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    └── key: (1)
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    ├── ordering: +5
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    │    └── ordering: +5
  + │    │    │    │    │    └── fd: (5)-->(6)
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    └── projections
  - │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    └── filters (true)
  + │    │    │    └── filters
  + │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    └── projections
  + │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
ReorderJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
CommuteLeftJoin (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by (hash)
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
    │    ├── project
    │    │    ├── columns: notnull:13 x:1!null k:5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── left-join (hash)
  + │    │    ├── right-join (hash)
    │    │    │    ├── columns: x:1!null k:5 i:6
  - │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
  - │    │    │    ├── scan xy
  - │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    └── key: (1)
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    └── fd: (5)-->(6)
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    ├── scan xy
  + │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    └── key: (1)
    │    │    │    └── filters
    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    └── projections
    │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
GenerateMergeJoins (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by (hash)
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
    │    ├── project
    │    │    ├── columns: notnull:13 x:1!null k:5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── right-join (hash)
  + │    │    ├── left-join (merge)
    │    │    │    ├── columns: x:1!null k:5 i:6
  + │    │    │    ├── left ordering: +1
  + │    │    │    ├── right ordering: +5
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
  + │    │    │    ├── scan xy
  + │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    ├── key: (1)
  + │    │    │    │    └── ordering: +1
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    ├── ordering: +5
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    └── ordering: +5
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    ├── scan xy
  - │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    └── key: (1)
  - │    │    │    └── filters
  - │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
GenerateLookupJoinsWithFilter (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by (hash)
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
    │    ├── project
    │    │    ├── columns: notnull:13 x:1!null k:5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── left-join (merge)
  + │    │    ├── left-join (lookup a)
    │    │    │    ├── columns: x:1!null k:5 i:6
  - │    │    │    ├── left ordering: +1
  - │    │    │    ├── right ordering: +5
  + │    │    │    ├── key columns: [1] = [5]
  + │    │    │    ├── lookup columns are key
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
    │    │    │    ├── scan xy
    │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    ├── key: (1)
  - │    │    │    │    └── ordering: +1
  - │    │    │    ├── select
  - │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    ├── key: (5)
  - │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    ├── ordering: +5
  - │    │    │    │    ├── scan a
  - │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    │    └── ordering: +5
  - │    │    │    │    └── filters
  - │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    └── filters (true)
  + │    │    │    │    └── key: (1)
  + │    │    │    └── filters
  + │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    └── projections
    │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
GenerateMergeJoins (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by (hash)
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
    │    ├── project
    │    │    ├── columns: notnull:13 x:1!null k:5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── left-join (lookup a)
  + │    │    ├── right-join (merge)
    │    │    │    ├── columns: x:1!null k:5 i:6
  - │    │    │    ├── key columns: [1] = [5]
  - │    │    │    ├── lookup columns are key
  + │    │    │    ├── left ordering: +5
  + │    │    │    ├── right ordering: +1
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
  + │    │    │    ├── select
  + │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    ├── key: (5)
  + │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    ├── ordering: +5
  + │    │    │    │    ├── scan a
  + │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    └── ordering: +5
  + │    │    │    │    └── filters
  + │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    ├── scan xy
    │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    └── key: (1)
  - │    │    │    └── filters
  - │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    ├── key: (1)
  + │    │    │    │    └── ordering: +1
  + │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
GenerateMergeJoins (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by (hash)
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
  - │    ├── project
  - │    │    ├── columns: notnull:13 x:1!null k:5
  + │    ├── right-join (merge)
  + │    │    ├── columns: x:1!null k:5 notnull:13
  + │    │    ├── left ordering: +5
  + │    │    ├── right ordering: +1
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── right-join (merge)
  - │    │    │    ├── columns: x:1!null k:5 i:6
  - │    │    │    ├── left ordering: +5
  - │    │    │    ├── right ordering: +1
  - │    │    │    ├── key: (1)
  - │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
  + │    │    ├── project
  + │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    ├── key: (5)
  + │    │    │    ├── fd: (5)-->(13)
  + │    │    │    ├── ordering: +5
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    ├── ordering: +5
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    │    └── ordering: +5
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    ├── scan xy
  - │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    ├── key: (1)
  - │    │    │    │    └── ordering: +1
  - │    │    │    └── filters (true)
  - │    │    └── projections
  - │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
  + │    │    │    └── projections
  + │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    ├── scan xy
  + │    │    │    ├── columns: x:1!null
  + │    │    │    ├── key: (1)
  + │    │    │    └── ordering: +1
  + │    │    └── filters (true)
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
================================================================================
GenerateStreamingGroupBy
  Cost: 2246.49
================================================================================
   project
    ├── columns: r:12
  - ├── group-by (hash)
  + ├── group-by (streaming)
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
  + │    ├── internal-ordering: +1
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
    │    ├── left-join (merge)
    │    │    ├── columns: x:1!null k:5 notnull:13
    │    │    ├── left ordering: +1
    │    │    ├── right ordering: +5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    ├── ordering: +1
    │    │    ├── scan xy
    │    │    │    ├── columns: x:1!null
    │    │    │    ├── key: (1)
    │    │    │    └── ordering: +1
    │    │    ├── project
    │    │    │    ├── columns: notnull:13!null k:5!null
    │    │    │    ├── key: (5)
    │    │    │    ├── fd: (5)-->(13)
    │    │    │    ├── ordering: +5
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    ├── ordering: +5
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    │    └── ordering: +5
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    └── projections
    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    └── filters (true)
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
================================================================================
Final best expression
  Cost: 2246.49
================================================================================
  project
   ├── columns: r:12
   ├── group-by (streaming)
   │    ├── columns: x:1!null bool_or:14
   │    ├── grouping columns: x:1!null
   │    ├── internal-ordering: +1
   │    ├── key: (1)
   │    ├── fd: (1)-->(14)
   │    ├── left-join (merge)
   │    │    ├── columns: x:1!null k:5 notnull:13
   │    │    ├── left ordering: +1
   │    │    ├── right ordering: +5
   │    │    ├── key: (1)
   │    │    ├── fd: (5)-->(13), (1)-->(5,13)
   │    │    ├── ordering: +1
   │    │    ├── scan xy
   │    │    │    ├── columns: x:1!null
   │    │    │    ├── key: (1)
   │    │    │    └── ordering: +1
   │    │    ├── project
   │    │    │    ├── columns: notnull:13!null k:5!null
   │    │    │    ├── key: (5)
   │    │    │    ├── fd: (5)-->(13)
   │    │    │    ├── ordering: +5
   │    │    │    ├── select
   │    │    │    │    ├── columns: k:5!null i:6
   │    │    │    │    ├── key: (5)
   │    │    │    │    ├── fd: (5)-->(6)
   │    │    │    │    ├── ordering: +5
   │    │    │    │    ├── scan a
   │    │    │    │    │    ├── columns: k:5!null i:6
   │    │    │    │    │    ├── key: (5)
   │    │    │    │    │    ├── fd: (5)-->(6)
   │    │    │    │    │    └── ordering: +5
   │    │    │    │    └── filters
   │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
   │    │    │    └── projections
   │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
   │    │    └── filters (true)
   │    └── aggregations
   │         └── bool-or [as=bool_or:14, outer=(13)]
   │              └── notnull:13
   └── projections
        └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
