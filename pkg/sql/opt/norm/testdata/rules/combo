exec-ddl
CREATE TABLE a (
    k INT PRIMARY KEY,
    i INT,
    f FLOAT,
    s STRING,
    j JSON,
    UNIQUE INDEX (s DESC, f) STORING (j)
)
----

exec-ddl
CREATE TABLE t.xy (x INT PRIMARY KEY, y INT)
----

# --------------------------------------------------
# Use optsteps.
# --------------------------------------------------
optsteps
SELECT s FROM a INNER JOIN xy ON a.k=xy.x AND i+1=10
----
================================================================================
Initial expression
  Cost: 15595.13
================================================================================
  project
   ├── columns: s:4
   ├── immutable
   └── inner-join (cross)
        ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
        ├── immutable
        ├── key: (1,8)
        ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7), (8)-->(9-11)
        ├── scan a
        │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
        │    ├── key: (1)
        │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
        ├── scan xy
        │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
        │    ├── key: (8)
        │    └── fd: (8)-->(9-11)
        └── filters
             └── (k:1 = x:8) AND ((i:2 + 1) = 10) [outer=(1,2,8), immutable, constraints=(/1: (/NULL - ]; /8: (/NULL - ])]
================================================================================
NormalizeCmpPlusConst
  Cost: 15561.80
================================================================================
   project
    ├── columns: s:4
    ├── immutable
    └── inner-join (cross)
  -      ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  +      ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         ├── immutable
         ├── key: (1,8)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7), (8)-->(9-11)
         ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
  -           └── (k:1 = x:8) AND ((i:2 + 1) = 10) [outer=(1,2,8), immutable, constraints=(/1: (/NULL - ]; /8: (/NULL - ])]
  +           └── (k:1 = x:8) AND (i:2 = (10 - 1)) [outer=(1,2,8), immutable, constraints=(/1: (/NULL - ]; /2: (/NULL - ]; /8: (/NULL - ])]
================================================================================
FoldBinary
  Cost: 12295.13
================================================================================
   project
    ├── columns: s:4
  - ├── immutable
    └── inner-join (cross)
         ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  -      ├── immutable
         ├── key: (1,8)
  -      ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7), (8)-->(9-11)
  +      ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7), (8)-->(9-11)
         ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
  -           └── (k:1 = x:8) AND (i:2 = (10 - 1)) [outer=(1,2,8), immutable, constraints=(/1: (/NULL - ]; /2: (/NULL - ]; /8: (/NULL - ])]
  +           └── (k:1 = x:8) AND (i:2 = 9) [outer=(1,2,8), constraints=(/1: (/NULL - ]; /2: [/9 - /9]; /8: (/NULL - ]), fd=()-->(2)]
================================================================================
SimplifyJoinFilters
  Cost: 2271.90
================================================================================
   project
    ├── columns: s:4
  - └── inner-join (cross)
  + └── inner-join (hash)
         ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  -      ├── key: (1,8)
  -      ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7), (8)-->(9-11)
  +      ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
  +      ├── key: (8)
  +      ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7), (8)-->(9-11), (1)==(8), (8)==(1)
         ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
  -           └── (k:1 = x:8) AND (i:2 = 9) [outer=(1,2,8), constraints=(/1: (/NULL - ]; /2: [/9 - /9]; /8: (/NULL - ]), fd=()-->(2)]
  +           ├── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
  +           └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
================================================================================
PushFilterIntoJoinLeft
  Cost: 2259.63
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
         ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7), (8)-->(9-11), (1)==(8), (8)==(1)
  -      ├── scan a
  -      │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── select
  +      │    ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
  -      │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7)
  +      │    ├── scan a
  +      │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │    │    ├── key: (1)
  +      │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    └── filters
  +      │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
  -           ├── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
  -           └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  +           └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
================================================================================
PruneJoinLeftCols
  Cost: 2259.74
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
  -      ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  +      ├── columns: k:1!null i:2!null s:4 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
  -      ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7), (8)-->(9-11), (1)==(8), (8)==(1)
  -      ├── select
  -      │    ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── fd: ()-->(2), (1)-->(4), (8)-->(9-11), (1)==(8), (8)==(1)
  +      ├── project
  +      │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
  -      │    ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7)
  -      │    ├── scan a
  -      │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  -      │    │    ├── key: (1)
  -      │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      │    └── filters
  -      │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  +      │    ├── fd: ()-->(2), (1)-->(4)
  +      │    └── select
  +      │         ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │         ├── key: (1)
  +      │         ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7)
  +      │         ├── scan a
  +      │         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │         │    ├── key: (1)
  +      │         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │         └── filters
  +      │              └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
              └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
================================================================================
PruneSelectCols
  Cost: 2218.94
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
         ├── columns: k:1!null i:2!null s:4 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (8)-->(9-11), (1)==(8), (8)==(1)
         ├── project
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
         │    └── select
  -      │         ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │         ├── columns: k:1!null i:2!null s:4
         │         ├── key: (1)
  -      │         ├── fd: ()-->(2), (1)-->(3-7), (3,4)~~>(1,5-7)
  +      │         ├── fd: ()-->(2), (1)-->(4)
         │         ├── scan a
  -      │         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │         │    ├── columns: k:1!null i:2 s:4
         │         │    ├── key: (1)
  -      │         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │         │    └── fd: (1)-->(2,4)
         │         └── filters
         │              └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
              └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
================================================================================
EliminateProject
  Cost: 2218.83
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
         ├── columns: k:1!null i:2!null s:4 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (8)-->(9-11), (1)==(8), (8)==(1)
  -      ├── project
  +      ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
  -      │    └── select
  -      │         ├── columns: k:1!null i:2!null s:4
  -      │         ├── key: (1)
  -      │         ├── fd: ()-->(2), (1)-->(4)
  -      │         ├── scan a
  -      │         │    ├── columns: k:1!null i:2 s:4
  -      │         │    ├── key: (1)
  -      │         │    └── fd: (1)-->(2,4)
  -      │         └── filters
  -      │              └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  +      │    ├── scan a
  +      │    │    ├── columns: k:1!null i:2 s:4
  +      │    │    ├── key: (1)
  +      │    │    └── fd: (1)-->(2,4)
  +      │    └── filters
  +      │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         ├── scan xy
         │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
         │    ├── key: (8)
         │    └── fd: (8)-->(9-11)
         └── filters
              └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
================================================================================
PruneJoinRightCols
  Cost: 2188.23
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
  -      ├── columns: k:1!null i:2!null s:4 x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  +      ├── columns: k:1!null i:2!null s:4 x:8!null
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
  -      ├── fd: ()-->(2), (1)-->(4), (8)-->(9-11), (1)==(8), (8)==(1)
  +      ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
         ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 s:4
         │    │    ├── key: (1)
         │    │    └── fd: (1)-->(2,4)
         │    └── filters
         │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         ├── scan xy
  -      │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  -      │    ├── key: (8)
  -      │    └── fd: (8)-->(9-11)
  +      │    ├── columns: x:8!null
  +      │    └── key: (8)
         └── filters
              └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GeneratePartialIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateConstrainedScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateZigzagJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
================================================================================
ReorderJoins
  Cost: 2183.14
================================================================================
   project
    ├── columns: s:4
    └── inner-join (hash)
         ├── columns: k:1!null i:2!null s:4 x:8!null
         ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
  +      ├── scan xy
  +      │    ├── columns: x:8!null
  +      │    └── key: (8)
         ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 s:4
         │    │    ├── key: (1)
         │    │    └── fd: (1)-->(2,4)
         │    └── filters
         │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  -      ├── scan xy
  -      │    ├── columns: x:8!null
  -      │    └── key: (8)
         └── filters
              └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
================================================================================
GenerateMergeJoins
  Cost: 2180.56
================================================================================
   project
    ├── columns: s:4
  - └── inner-join (hash)
  + └── inner-join (merge)
         ├── columns: k:1!null i:2!null s:4 x:8!null
  -      ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)
  +      ├── left ordering: +1
  +      ├── right ordering: +8
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
  -      ├── scan xy
  -      │    ├── columns: x:8!null
  -      │    └── key: (8)
         ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
  +      │    ├── ordering: +1 opt(2) [actual: +1]
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 s:4
         │    │    ├── key: (1)
  -      │    │    └── fd: (1)-->(2,4)
  +      │    │    ├── fd: (1)-->(2,4)
  +      │    │    └── ordering: +1
         │    └── filters
         │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  -      └── filters
  -           └── k:1 = x:8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]
  +      ├── scan xy
  +      │    ├── columns: x:8!null
  +      │    ├── key: (8)
  +      │    └── ordering: +8
  +      └── filters (true)
================================================================================
GenerateLookupJoins
  Cost: 1176.15
================================================================================
   project
    ├── columns: s:4
  - └── inner-join (merge)
  + └── inner-join (lookup xy)
         ├── columns: k:1!null i:2!null s:4 x:8!null
  -      ├── left ordering: +1
  -      ├── right ordering: +8
  +      ├── key columns: [1] = [8]
  +      ├── lookup columns are key
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
         ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
  -      │    ├── ordering: +1 opt(2) [actual: +1]
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 s:4
         │    │    ├── key: (1)
  -      │    │    ├── fd: (1)-->(2,4)
  -      │    │    └── ordering: +1
  +      │    │    └── fd: (1)-->(2,4)
         │    └── filters
         │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  -      ├── scan xy
  -      │    ├── columns: x:8!null
  -      │    ├── key: (8)
  -      │    └── ordering: +8
         └── filters (true)
--------------------------------------------------------------------------------
GenerateMergeJoins (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: s:4
  - └── inner-join (lookup xy)
  + └── inner-join (merge)
         ├── columns: k:1!null i:2!null s:4 x:8!null
  -      ├── key columns: [1] = [8]
  -      ├── lookup columns are key
  +      ├── left ordering: +8
  +      ├── right ordering: +1
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
  +      ├── scan xy
  +      │    ├── columns: x:8!null
  +      │    ├── key: (8)
  +      │    └── ordering: +8
         ├── select
         │    ├── columns: k:1!null i:2!null s:4
         │    ├── key: (1)
         │    ├── fd: ()-->(2), (1)-->(4)
  +      │    ├── ordering: +1 opt(2) [actual: +1]
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 s:4
         │    │    ├── key: (1)
  -      │    │    └── fd: (1)-->(2,4)
  +      │    │    ├── fd: (1)-->(2,4)
  +      │    │    └── ordering: +1
         │    └── filters
         │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
         └── filters (true)
--------------------------------------------------------------------------------
GenerateLookupJoinsWithFilter (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: s:4
  - └── inner-join (merge)
  + └── inner-join (lookup a)
         ├── columns: k:1!null i:2!null s:4 x:8!null
  -      ├── left ordering: +8
  -      ├── right ordering: +1
  +      ├── key columns: [8] = [1]
  +      ├── lookup columns are key
         ├── key: (8)
         ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
         ├── scan xy
         │    ├── columns: x:8!null
  -      │    ├── key: (8)
  -      │    └── ordering: +8
  -      ├── select
  -      │    ├── columns: k:1!null i:2!null s:4
  -      │    ├── key: (1)
  -      │    ├── fd: ()-->(2), (1)-->(4)
  -      │    ├── ordering: +1 opt(2) [actual: +1]
  -      │    ├── scan a
  -      │    │    ├── columns: k:1!null i:2 s:4
  -      │    │    ├── key: (1)
  -      │    │    ├── fd: (1)-->(2,4)
  -      │    │    └── ordering: +1
  -      │    └── filters
  -      │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
  -      └── filters (true)
  +      │    └── key: (8)
  +      └── filters
  +           └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
================================================================================
Final best expression
  Cost: 1176.15
================================================================================
  project
   ├── columns: s:4
   └── inner-join (lookup xy)
        ├── columns: k:1!null i:2!null s:4 x:8!null
        ├── key columns: [1] = [8]
        ├── lookup columns are key
        ├── key: (8)
        ├── fd: ()-->(2), (1)-->(4), (1)==(8), (8)==(1)
        ├── select
        │    ├── columns: k:1!null i:2!null s:4
        │    ├── key: (1)
        │    ├── fd: ()-->(2), (1)-->(4)
        │    ├── scan a
        │    │    ├── columns: k:1!null i:2 s:4
        │    │    ├── key: (1)
        │    │    └── fd: (1)-->(2,4)
        │    └── filters
        │         └── i:2 = 9 [outer=(2), constraints=(/2: [/9 - /9]; tight), fd=()-->(2)]
        └── filters (true)

# Use optstepsweb.
optstepsweb
SELECT s FROM a INNER JOIN xy ON a.k=xy.x AND i+1=10
----
https://raduberinde.github.io/optsteps.html?eJzsnG9zmzYcx5_vVfzmR3CGxDhpQ9hxly1Nd-mlbpdstwdJrkcduVGDwQd4s7tbr9fXkId7dX0lOzAmYEmAjCA4dR_VSEj6IfH5fvWH_NO5-O2sY3QuTs5Ojn8HH16ev3kNFpwOBifn8OrN6QBmc3gzAGvnzpzNd2bw8-AF4K5mar2O0hm43vgFHo06RkdVVbB2Tx0cYMu-crrdLrx_-Hl0BKoGXU3RDuHo6MrpTjz3IxoGV04Xvt3_9-3-y7f7LzB07enY8Q3wjf1sCh6Pp4H13kaLy_fLy46DPPWjix2Qhp7r-3KYHv2jlHpnaD86U9sGbPRhZOyF1cBH4xlYO0Pv5v077ATIcyz73fiv4fBdgMfID6zxxHgO1k5UuYtvjAOYGfqimLlxCLN5_r1aL8yS3K1plAZmgltJu0NzAyRN0WmRjW7CNFlVr6a93h6S-uqBrIC0p-zLnz_H1zSlrzxbXNcfch6qmkYr0R9aDliphK-1Pkt2RXHcMpnjfo3gWZHO5iVCFdbf1BD1ohBzei3Jh-0AeX6SspIs3RkamGEccvT6SlLYaV3QZDBB68lw6U4D5JnR49Jl5WFAKjB0HT_wLOwEvintagZIu4M_zs5AheufYFdP_5avr5wFBUIsWDb-hI7Hk7f21D8OC1kygZEYESLEwwMkIIEEtV8iSDDeIyiAhLpxkKA2cPGfx2sl5KCMSEujjEisjDKixCXKoCmUsSp6QNlqjvVQRo80RFlhqML6m4my3BBzeo1AmfrYKCvJ0rB-EyStBypocoUG9Mux9aVr3_yCHcubL4GavpKh6EFpiqrrUZQYia2EFMH6spAibhTvt6ISUwWGt6Uq2KNWsGXgloGPgyAuJh6SLSms_nL3EFTYPSRrV2B0Y2ZelQSJF3g8sfFo_srFzsvECkdspCbFkDzgtJpq4cSTnn5r-bebC8tiIArDF0HH8dQO8MTGQxzMDbDRKFA9929f-oQ8V3U91XWQrICHP9xSEpiTafZUWlAk0a2mKemLRNOUtnD-zuHcAAuzbE4CXzYnVX9x7bTqiCHN1IM45KTGPlFfNrogfIHzAP926t8u6H3qBG7I8jM0ShYUWKlpL9zf51pR2HiME62siFJyXJEvVHMoJXRoiVK1KZSSy4nIjpezOVpQcZSUIfrqE6m4evpVUFezi2StQDe9EF16PVrog2Wt6MYZ6gPt96jZzWgk3ScI7Dq6CNcc1EKXvamDloJ77NrJtIuSsFDj_n6kxrooNS63jv_YasyzmB-2cIPUv9YpYVn1j7WXS_0ray_vFHK_fIRE0andcu4Q49eI1ygIkHhWkSy3VrfEF9THfhaVJJ7pwFZEqXaJX9PE7efYFLrrbQDJBVWy3JooVhWUS_ewHG-u8AdT0s0yRmoFSwuMQU_JVd_Ip3fQUzO39MfYmA-8iFhAuMD05dgD6mI9IA9wNsxd8RKLw2MQRac6goNUXB6DlaOEArHeErr3Kz8g6lIgvodFHQCkE-EbDGvLF3d30OhK-DuOQVW3_NErZfdLSaNIH6EC1LOoRIXZJSyR2OruU9DdExuPsWMF6G0yP4yEl7yeUd5H2QvZKi9z_YKc3a-ubHCBrClJZk1sq0pyfNgi52Yx-kjGQKNVJR1jhyJWUhRmLGVWG1ayNrDkUGmTJ_44JPfO9bdrlLz1ju22zBNT0GSj4jzsA-oWRiols4ex9xh7GCJUdN3diFbvK1RZXS9TdKkDXW1Wa9atrFNo606ZOFq_xrSm3IymYRQX7jsJO5TJRHHuMY-ck5ZFLWZLIUUGWsH1jtI5mU1s10OZD1PPkevdIC8EeoL47LUY7nti4U6MmjbClkhak4gCPrLkGnBb8H4P4KWf9uMCLxuQbcXYglq_Igd5VoBeI-8DyrCLlpIh2PPK3zXEBGN91jAOa65EOKJjRZ_3D0uAiPHY-WBAl2Z-o9LSmfRGULlZDGPhO_1swZ0EUl-GS2sYTC07vHTdCvrxnuagrgDQnlnZm-4pT6tFfCWHIvcaQxm-qky-0k9INvLlQo6lZvmQLCpYf4sBpMCbhlDKgvzMde-mEyrJM0kZlPfqRrkdVQ2zebtxfofmD6251K7BhEv9msb9RTxxXrA8FN675frWm26oN20pO8sxb2tehZhXvYx5pW2SNgG5WhyDKI3eLCZvvfYT9tobDfKUQ_0TB_E3tzk2Np0pjXet_AGUaobWajfhs35Wj_ys1no_uwbqWa9fznZfhW96KIcuyqCqwsmX_AMj658VEQ3a1nyKQpTdBgzWF27n3x_-DwAA__88EvDJ

# Exploration patterns with varying costs.
optsteps
SELECT s, k FROM a WHERE s='foo' AND f>100
----
================================================================================
Initial expression
  Cost: 1156.53
================================================================================
  project
   ├── columns: s:4!null k:1!null
   ├── key: (1)
   ├── fd: ()-->(4)
   └── select
        ├── columns: k:1!null i:2 f:3!null s:4!null j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
        ├── key: (1)
        ├── fd: ()-->(4), (1)-->(2,3,5-7), (3)-->(1,2,5-7)
        ├── scan a
        │    ├── columns: k:1!null i:2 f:3 s:4 j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
        │    ├── key: (1)
        │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
        └── filters
             └── (s:4 = 'foo') AND (f:3 > 100.0) [outer=(3,4), constraints=(/3: [/100.00000000000001 - ]; /4: [/'foo' - /'foo']; tight), fd=()-->(4)]
================================================================================
SimplifySelectFilters
  Cost: 1156.54
================================================================================
   project
    ├── columns: s:4!null k:1!null
    ├── key: (1)
    ├── fd: ()-->(4)
    └── select
         ├── columns: k:1!null i:2 f:3!null s:4!null j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
         ├── key: (1)
         ├── fd: ()-->(4), (1)-->(2,3,5-7), (3)-->(1,2,5-7)
         ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
         │    ├── key: (1)
         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         └── filters
  -           └── (s:4 = 'foo') AND (f:3 > 100.0) [outer=(3,4), constraints=(/3: [/100.00000000000001 - ]; /4: [/'foo' - /'foo']; tight), fd=()-->(4)]
  +           ├── s:4 = 'foo' [outer=(4), constraints=(/4: [/'foo' - /'foo']; tight), fd=()-->(4)]
  +           └── f:3 > 100.0 [outer=(3), constraints=(/3: [/100.00000000000001 - ]; tight)]
================================================================================
PruneSelectCols
  Cost: 1115.74
================================================================================
   project
    ├── columns: s:4!null k:1!null
    ├── key: (1)
    ├── fd: ()-->(4)
    └── select
  -      ├── columns: k:1!null i:2 f:3!null s:4!null j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
  +      ├── columns: k:1!null f:3!null s:4!null
         ├── key: (1)
  -      ├── fd: ()-->(4), (1)-->(2,3,5-7), (3)-->(1,2,5-7)
  +      ├── fd: ()-->(4), (1)-->(3), (3)-->(1)
         ├── scan a
  -      │    ├── columns: k:1!null i:2 f:3 s:4 j:5 crdb_internal_mvcc_timestamp:6 tableoid:7
  +      │    ├── columns: k:1!null f:3 s:4
         │    ├── key: (1)
  -      │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    └── fd: (1)-->(3,4), (3,4)~~>(1)
         └── filters
              ├── s:4 = 'foo' [outer=(4), constraints=(/4: [/'foo' - /'foo']; tight), fd=()-->(4)]
              └── f:3 > 100.0 [outer=(3), constraints=(/3: [/100.00000000000001 - ]; tight)]
================================================================================
GenerateIndexScans
  Cost: 1105.54
================================================================================
   project
    ├── columns: s:4!null k:1!null
    ├── key: (1)
    ├── fd: ()-->(4)
    └── select
         ├── columns: k:1!null f:3!null s:4!null
         ├── key: (1)
         ├── fd: ()-->(4), (1)-->(3), (3)-->(1)
  -      ├── scan a
  +      ├── scan a@secondary
         │    ├── columns: k:1!null f:3 s:4
         │    ├── key: (1)
         │    └── fd: (1)-->(3,4), (3,4)~~>(1)
         └── filters
              ├── s:4 = 'foo' [outer=(4), constraints=(/4: [/'foo' - /'foo']; tight), fd=()-->(4)]
              └── f:3 > 100.0 [outer=(3), constraints=(/3: [/100.00000000000001 - ]; tight)]
--------------------------------------------------------------------------------
GeneratePartialIndexScans (no changes)
--------------------------------------------------------------------------------
================================================================================
GenerateConstrainedScans
  Cost: 24.80
================================================================================
   project
    ├── columns: s:4!null k:1!null
    ├── key: (1)
    ├── fd: ()-->(4)
  - └── select
  + └── scan a@secondary
         ├── columns: k:1!null f:3!null s:4!null
  +      ├── constraint: /-4/3: [/'foo'/100.00000000000001 - /'foo']
         ├── key: (1)
  -      ├── fd: ()-->(4), (1)-->(3), (3)-->(1)
  -      ├── scan a@secondary
  -      │    ├── columns: k:1!null f:3 s:4
  -      │    ├── key: (1)
  -      │    └── fd: (1)-->(3,4), (3,4)~~>(1)
  -      └── filters
  -           ├── s:4 = 'foo' [outer=(4), constraints=(/4: [/'foo' - /'foo']; tight), fd=()-->(4)]
  -           └── f:3 > 100.0 [outer=(3), constraints=(/3: [/100.00000000000001 - ]; tight)]
  +      └── fd: ()-->(4), (1)-->(3), (3)-->(1)
--------------------------------------------------------------------------------
GenerateZigzagJoins (no changes)
--------------------------------------------------------------------------------
================================================================================
Final best expression
  Cost: 24.80
================================================================================
  project
   ├── columns: s:4!null k:1!null
   ├── key: (1)
   ├── fd: ()-->(4)
   └── scan a@secondary
        ├── columns: k:1!null f:3!null s:4!null
        ├── constraint: /-4/3: [/'foo'/100.00000000000001 - /'foo']
        ├── key: (1)
        └── fd: ()-->(4), (1)-->(3), (3)-->(1)

# Decorrelation pattern.
optsteps
SELECT * FROM a WHERE EXISTS(SELECT * FROM xy WHERE y=i)
----
================================================================================
Initial expression
  Cost: 2264.91
================================================================================
  project
   ├── columns: k:1!null i:2 f:3 s:4 j:5
   ├── key: (1)
   ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
   └── select
        ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
        ├── key: (1)
        ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
        ├── scan a
        │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
        │    ├── key: (1)
        │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
        └── filters
             └── exists [outer=(2), correlated-subquery]
                  └── project
                       ├── columns: x:8!null y:9!null
                       ├── outer: (2)
                       ├── key: (8)
                       ├── fd: ()-->(9)
                       └── select
                            ├── columns: x:8!null y:9!null xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
                            ├── outer: (2)
                            ├── key: (8)
                            ├── fd: ()-->(9), (8)-->(10,11)
                            ├── scan xy
                            │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
                            │    ├── key: (8)
                            │    └── fd: (8)-->(9-11)
                            └── filters
                                 └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
================================================================================
PruneSelectCols
  Cost: 2244.51
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
         ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         └── filters
              └── exists [outer=(2), correlated-subquery]
                   └── project
                        ├── columns: x:8!null y:9!null
                        ├── outer: (2)
                        ├── key: (8)
                        ├── fd: ()-->(9)
                        └── select
  -                          ├── columns: x:8!null y:9!null xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  +                          ├── columns: x:8!null y:9!null
                             ├── outer: (2)
                             ├── key: (8)
  -                          ├── fd: ()-->(9), (8)-->(10,11)
  +                          ├── fd: ()-->(9)
                             ├── scan xy
  -                          │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11
  +                          │    ├── columns: x:8!null y:9
                             │    ├── key: (8)
  -                          │    └── fd: (8)-->(9-11)
  +                          │    └── fd: (8)-->(9)
                             └── filters
                                  └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
================================================================================
EliminateProject
  Cost: 2234.60
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
         ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         └── filters
              └── exists [outer=(2), correlated-subquery]
  -                └── project
  +                └── select
                        ├── columns: x:8!null y:9!null
                        ├── outer: (2)
                        ├── key: (8)
                        ├── fd: ()-->(9)
  -                     └── select
  -                          ├── columns: x:8!null y:9!null
  -                          ├── outer: (2)
  -                          ├── key: (8)
  -                          ├── fd: ()-->(9)
  -                          ├── scan xy
  -                          │    ├── columns: x:8!null y:9
  -                          │    ├── key: (8)
  -                          │    └── fd: (8)-->(9)
  -                          └── filters
  -                               └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  +                     ├── scan xy
  +                     │    ├── columns: x:8!null y:9
  +                     │    ├── key: (8)
  +                     │    └── fd: (8)-->(9)
  +                     └── filters
  +                          └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
================================================================================
HoistSelectExists
  Cost: 12171.24
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
         ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      ├── scan a
  +      ├── semi-join-apply
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
  -      │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      └── filters
  -           └── exists [outer=(2), correlated-subquery]
  -                └── select
  -                     ├── columns: x:8!null y:9!null
  -                     ├── outer: (2)
  -                     ├── key: (8)
  -                     ├── fd: ()-->(9)
  -                     ├── scan xy
  -                     │    ├── columns: x:8!null y:9
  -                     │    ├── key: (8)
  -                     │    └── fd: (8)-->(9)
  -                     └── filters
  -                          └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  +      │    ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    ├── scan a
  +      │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │    │    ├── key: (1)
  +      │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    ├── select
  +      │    │    ├── columns: x:8!null y:9!null
  +      │    │    ├── outer: (2)
  +      │    │    ├── key: (8)
  +      │    │    ├── fd: ()-->(9)
  +      │    │    ├── scan xy
  +      │    │    │    ├── columns: x:8!null y:9
  +      │    │    │    ├── key: (8)
  +      │    │    │    └── fd: (8)-->(9)
  +      │    │    └── filters
  +      │    │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  +      │    └── filters (true)
  +      └── filters (true)
================================================================================
TryDecorrelateSelect
  Cost: 2361.20
================================================================================
   project
  - ├── columns: k:1!null i:2 f:3 s:4 j:5
  + ├── columns: k:1!null i:2!null f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
  -      ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── semi-join-apply
  -      │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │    ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    │    ├── key: (1)
         │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      │    ├── select
  -      │    │    ├── columns: x:8!null y:9!null
  -      │    │    ├── outer: (2)
  +      │    ├── scan xy
  +      │    │    ├── columns: x:8!null y:9
         │    │    ├── key: (8)
  -      │    │    ├── fd: ()-->(9)
  -      │    │    ├── scan xy
  -      │    │    │    ├── columns: x:8!null y:9
  -      │    │    │    ├── key: (8)
  -      │    │    │    └── fd: (8)-->(9)
  -      │    │    └── filters
  -      │    │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  -      │    └── filters (true)
  +      │    │    └── fd: (8)-->(9)
  +      │    └── filters
  +      │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
         └── filters (true)
================================================================================
DecorrelateJoin
  Cost: 2359.41
================================================================================
   project
  - ├── columns: k:1!null i:2!null f:3 s:4 j:5
  + ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
  -      ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      ├── semi-join-apply
  -      │    ├── columns: k:1!null i:2!null f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── semi-join (hash)
  +      │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    │    ├── key: (1)
         │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         │    ├── scan xy
         │    │    ├── columns: x:8!null y:9
         │    │    ├── key: (8)
         │    │    └── fd: (8)-->(9)
         │    └── filters
         │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
         └── filters (true)
================================================================================
PruneSemiAntiJoinRightCols
  Cost: 2349.21
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── select
         ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         ├── semi-join (hash)
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
         │    ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         │    ├── scan a
         │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    │    ├── key: (1)
         │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
         │    ├── scan xy
  -      │    │    ├── columns: x:8!null y:9
  -      │    │    ├── key: (8)
  -      │    │    └── fd: (8)-->(9)
  +      │    │    └── columns: y:9
         │    └── filters
         │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
         └── filters (true)
================================================================================
EliminateSelect
  Cost: 2339.20
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  - └── select
  + └── semi-join (hash)
         ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         ├── key: (1)
         ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      ├── semi-join (hash)
  +      ├── scan a
         │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
         │    ├── key: (1)
  -      │    ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      │    ├── scan a
  -      │    │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  -      │    │    ├── key: (1)
  -      │    │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  -      │    ├── scan xy
  -      │    │    └── columns: y:9
  -      │    └── filters
  -      │         └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  -      └── filters (true)
  +      │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      ├── scan xy
  +      │    └── columns: y:9
  +      └── filters
  +           └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
================================================================================
PruneJoinLeftCols
  Cost: 2318.80
================================================================================
   project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
    └── semi-join (hash)
  -      ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      ├── columns: k:1!null i:2 f:3 s:4 j:5
         ├── key: (1)
  -      ├── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
         ├── scan a
  -      │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7
  +      │    ├── columns: k:1!null i:2 f:3 s:4 j:5
         │    ├── key: (1)
  -      │    └── fd: (1)-->(2-7), (3,4)~~>(1,2,5-7)
  +      │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
         ├── scan xy
         │    └── columns: y:9
         └── filters
              └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
================================================================================
EliminateProject
  Cost: 2308.79
================================================================================
  -project
  +semi-join (hash)
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  - └── semi-join (hash)
  -      ├── columns: k:1!null i:2 f:3 s:4 j:5
  -      ├── key: (1)
  -      ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  -      ├── scan a
  -      │    ├── columns: k:1!null i:2 f:3 s:4 j:5
  -      │    ├── key: (1)
  -      │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  -      ├── scan xy
  -      │    └── columns: y:9
  -      └── filters
  -           └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  + ├── scan a
  + │    ├── columns: k:1!null i:2 f:3 s:4 j:5
  + │    ├── key: (1)
  + │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  + ├── scan xy
  + │    └── columns: y:9
  + └── filters
  +      └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
ReorderJoins (no changes)
--------------------------------------------------------------------------------
================================================================================
CommuteSemiJoin
  Cost: 2235.71
================================================================================
  -semi-join (hash)
  +project
    ├── columns: k:1!null i:2 f:3 s:4 j:5
    ├── key: (1)
    ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  - ├── scan a
  - │    ├── columns: k:1!null i:2 f:3 s:4 j:5
  - │    ├── key: (1)
  - │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  - ├── scan xy
  - │    └── columns: y:9
  - └── filters
  -      └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
  + └── inner-join (hash)
  +      ├── columns: k:1!null i:2!null f:3 s:4 j:5 y:9!null
  +      ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
  +      ├── key: (1)
  +      ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5), (2)==(9), (9)==(2)
  +      ├── scan a
  +      │    ├── columns: k:1!null i:2 f:3 s:4 j:5
  +      │    ├── key: (1)
  +      │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
  +      ├── distinct-on
  +      │    ├── columns: y:9
  +      │    ├── grouping columns: y:9
  +      │    ├── key: (9)
  +      │    └── scan xy
  +      │         └── columns: y:9
  +      └── filters
  +           └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]
--------------------------------------------------------------------------------
GenerateMergeJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateLookupJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateStreamingGroupBy (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
ReorderJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateMergeJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateMergeJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateLookupJoins (no changes)
--------------------------------------------------------------------------------
================================================================================
Final best expression
  Cost: 2235.71
================================================================================
  project
   ├── columns: k:1!null i:2 f:3 s:4 j:5
   ├── key: (1)
   ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
   └── inner-join (hash)
        ├── columns: k:1!null i:2!null f:3 s:4 j:5 y:9!null
        ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)
        ├── key: (1)
        ├── fd: (1)-->(2-5), (3,4)~~>(1,2,5), (2)==(9), (9)==(2)
        ├── scan a
        │    ├── columns: k:1!null i:2 f:3 s:4 j:5
        │    ├── key: (1)
        │    └── fd: (1)-->(2-5), (3,4)~~>(1,2,5)
        ├── distinct-on
        │    ├── columns: y:9
        │    ├── grouping columns: y:9
        │    ├── key: (9)
        │    └── scan xy
        │         └── columns: y:9
        └── filters
             └── y:9 = i:2 [outer=(2,9), constraints=(/2: (/NULL - ]; /9: (/NULL - ]), fd=(2)==(9), (9)==(2)]

# Decorrelation pattern using ANY function.
optsteps
SELECT 5=ANY(SELECT i FROM a WHERE k=x) AS r FROM xy
----
================================================================================
Initial expression
  Cost: 2261.67
================================================================================
  project
   ├── columns: r:12
   ├── scan xy
   │    ├── columns: x:1!null y:2 xy.crdb_internal_mvcc_timestamp:3 xy.tableoid:4
   │    ├── key: (1)
   │    └── fd: (1)-->(2-4)
   └── projections
        └── any: eq [as=r:12, outer=(1), correlated-subquery]
             ├── project
             │    ├── columns: i:6
             │    ├── outer: (1)
             │    ├── cardinality: [0 - 1]
             │    ├── key: ()
             │    ├── fd: ()-->(6)
             │    └── select
             │         ├── columns: k:5!null i:6 f:7 s:8 j:9 a.crdb_internal_mvcc_timestamp:10 a.tableoid:11
             │         ├── outer: (1)
             │         ├── cardinality: [0 - 1]
             │         ├── key: ()
             │         ├── fd: ()-->(5-11)
             │         ├── scan a
             │         │    ├── columns: k:5!null i:6 f:7 s:8 j:9 a.crdb_internal_mvcc_timestamp:10 a.tableoid:11
             │         │    ├── key: (5)
             │         │    └── fd: (5)-->(6-11), (7,8)~~>(5,6,9-11)
             │         └── filters
             │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
             └── 5
================================================================================
PruneSelectCols
  Cost: 2210.67
================================================================================
   project
    ├── columns: r:12
    ├── scan xy
    │    ├── columns: x:1!null y:2 xy.crdb_internal_mvcc_timestamp:3 xy.tableoid:4
    │    ├── key: (1)
    │    └── fd: (1)-->(2-4)
    └── projections
         └── any: eq [as=r:12, outer=(1), correlated-subquery]
              ├── project
              │    ├── columns: i:6
              │    ├── outer: (1)
              │    ├── cardinality: [0 - 1]
              │    ├── key: ()
              │    ├── fd: ()-->(6)
              │    └── select
  -           │         ├── columns: k:5!null i:6 f:7 s:8 j:9 a.crdb_internal_mvcc_timestamp:10 a.tableoid:11
  +           │         ├── columns: k:5!null i:6
              │         ├── outer: (1)
              │         ├── cardinality: [0 - 1]
              │         ├── key: ()
  -           │         ├── fd: ()-->(5-11)
  +           │         ├── fd: ()-->(5,6)
              │         ├── scan a
  -           │         │    ├── columns: k:5!null i:6 f:7 s:8 j:9 a.crdb_internal_mvcc_timestamp:10 a.tableoid:11
  +           │         │    ├── columns: k:5!null i:6
              │         │    ├── key: (5)
  -           │         │    └── fd: (5)-->(6-11), (7,8)~~>(5,6,9-11)
  +           │         │    └── fd: (5)-->(6)
              │         └── filters
              │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
              └── 5
================================================================================
PruneScanCols
  Cost: 2180.07
================================================================================
   project
    ├── columns: r:12
    ├── scan xy
  - │    ├── columns: x:1!null y:2 xy.crdb_internal_mvcc_timestamp:3 xy.tableoid:4
  - │    ├── key: (1)
  - │    └── fd: (1)-->(2-4)
  + │    ├── columns: x:1!null
  + │    └── key: (1)
    └── projections
         └── any: eq [as=r:12, outer=(1), correlated-subquery]
              ├── project
              │    ├── columns: i:6
              │    ├── outer: (1)
              │    ├── cardinality: [0 - 1]
              │    ├── key: ()
              │    ├── fd: ()-->(6)
              │    └── select
              │         ├── columns: k:5!null i:6
              │         ├── outer: (1)
              │         ├── cardinality: [0 - 1]
              │         ├── key: ()
              │         ├── fd: ()-->(5,6)
              │         ├── scan a
              │         │    ├── columns: k:5!null i:6
              │         │    ├── key: (5)
              │         │    └── fd: (5)-->(6)
              │         └── filters
              │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
              └── 5
================================================================================
HoistProjectSubquery
  Cost: 2202.71
================================================================================
   project
    ├── columns: r:12
  - ├── scan xy
  - │    ├── columns: x:1!null
  - │    └── key: (1)
  + ├── inner-join-apply
  + │    ├── columns: x:1!null case:15
  + │    ├── key: (1)
  + │    ├── fd: (1)-->(15)
  + │    ├── scan xy
  + │    │    ├── columns: x:1!null
  + │    │    └── key: (1)
  + │    ├── project
  + │    │    ├── columns: case:15
  + │    │    ├── outer: (1)
  + │    │    ├── cardinality: [1 - 1]
  + │    │    ├── key: ()
  + │    │    ├── fd: ()-->(15)
  + │    │    ├── scalar-group-by
  + │    │    │    ├── columns: bool_or:14
  + │    │    │    ├── outer: (1)
  + │    │    │    ├── cardinality: [1 - 1]
  + │    │    │    ├── key: ()
  + │    │    │    ├── fd: ()-->(14)
  + │    │    │    ├── project
  + │    │    │    │    ├── columns: notnull:13!null
  + │    │    │    │    ├── outer: (1)
  + │    │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │    ├── key: ()
  + │    │    │    │    ├── fd: ()-->(13)
  + │    │    │    │    ├── select
  + │    │    │    │    │    ├── columns: i:6
  + │    │    │    │    │    ├── outer: (1)
  + │    │    │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │    │    ├── key: ()
  + │    │    │    │    │    ├── fd: ()-->(6)
  + │    │    │    │    │    ├── project
  + │    │    │    │    │    │    ├── columns: i:6
  + │    │    │    │    │    │    ├── outer: (1)
  + │    │    │    │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │    │    │    ├── key: ()
  + │    │    │    │    │    │    ├── fd: ()-->(6)
  + │    │    │    │    │    │    └── select
  + │    │    │    │    │    │         ├── columns: k:5!null i:6
  + │    │    │    │    │    │         ├── outer: (1)
  + │    │    │    │    │    │         ├── cardinality: [0 - 1]
  + │    │    │    │    │    │         ├── key: ()
  + │    │    │    │    │    │         ├── fd: ()-->(5,6)
  + │    │    │    │    │    │         ├── scan a
  + │    │    │    │    │    │         │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │         │    ├── key: (5)
  + │    │    │    │    │    │         │    └── fd: (5)-->(6)
  + │    │    │    │    │    │         └── filters
  + │    │    │    │    │    │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    │    └── filters
  + │    │    │    │    │         └── (5 = i:6) IS NOT false [outer=(6)]
  + │    │    │    │    └── projections
  + │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    └── aggregations
  + │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  + │    │    │              └── notnull:13
  + │    │    └── projections
  + │    │         └── CASE WHEN bool_or:14 AND (5 IS NOT NULL) THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
  + │    └── filters (true)
    └── projections
  -      └── any: eq [as=r:12, outer=(1), correlated-subquery]
  -           ├── project
  -           │    ├── columns: i:6
  -           │    ├── outer: (1)
  -           │    ├── cardinality: [0 - 1]
  -           │    ├── key: ()
  -           │    ├── fd: ()-->(6)
  -           │    └── select
  -           │         ├── columns: k:5!null i:6
  -           │         ├── outer: (1)
  -           │         ├── cardinality: [0 - 1]
  -           │         ├── key: ()
  -           │         ├── fd: ()-->(5,6)
  -           │         ├── scan a
  -           │         │    ├── columns: k:5!null i:6
  -           │         │    ├── key: (5)
  -           │         │    └── fd: (5)-->(6)
  -           │         └── filters
  -           │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  -           └── 5
  +      └── case:15 [as=r:12, outer=(15)]
================================================================================
CommuteVar
  Cost: 2202.71
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    ├── project
    │    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    │    └── select
    │    │    │    │    │    │         ├── columns: k:5!null i:6
    │    │    │    │    │    │         ├── outer: (1)
    │    │    │    │    │    │         ├── cardinality: [0 - 1]
    │    │    │    │    │    │         ├── key: ()
    │    │    │    │    │    │         ├── fd: ()-->(5,6)
    │    │    │    │    │    │         ├── scan a
    │    │    │    │    │    │         │    ├── columns: k:5!null i:6
    │    │    │    │    │    │         │    ├── key: (5)
    │    │    │    │    │    │         │    └── fd: (5)-->(6)
    │    │    │    │    │    │         └── filters
    │    │    │    │    │    │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │    │    └── filters
  - │    │    │    │    │         └── (5 = i:6) IS NOT false [outer=(6)]
  + │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 AND (5 IS NOT NULL) THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
PushSelectIntoProject
  Cost: 2202.71
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    ├── project
    │    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    │    └── select
    │    │    │    │    │    │         ├── columns: k:5!null i:6
    │    │    │    │    │    │         ├── outer: (1)
    │    │    │    │    │    │         ├── cardinality: [0 - 1]
    │    │    │    │    │    │         ├── key: ()
    │    │    │    │    │    │         ├── fd: ()-->(5,6)
  - │    │    │    │    │    │         ├── scan a
  + │    │    │    │    │    │         ├── select
    │    │    │    │    │    │         │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │         │    ├── key: (5)
  - │    │    │    │    │    │         │    └── fd: (5)-->(6)
  + │    │    │    │    │    │         │    ├── outer: (1)
  + │    │    │    │    │    │         │    ├── cardinality: [0 - 1]
  + │    │    │    │    │    │         │    ├── key: ()
  + │    │    │    │    │    │         │    ├── fd: ()-->(5,6)
  + │    │    │    │    │    │         │    ├── scan a
  + │    │    │    │    │    │         │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │         │    │    ├── key: (5)
  + │    │    │    │    │    │         │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    │         │    └── filters
  + │    │    │    │    │    │         │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │    │    │         └── filters
  - │    │    │    │    │    │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    │    └── filters
  - │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    │              └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    └── filters (true)
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 AND (5 IS NOT NULL) THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
MergeSelects
  Cost: 2202.73
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    ├── project
    │    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    │    ├── fd: ()-->(6)
    │    │    │    │    │    │    └── select
    │    │    │    │    │    │         ├── columns: k:5!null i:6
    │    │    │    │    │    │         ├── outer: (1)
    │    │    │    │    │    │         ├── cardinality: [0 - 1]
    │    │    │    │    │    │         ├── key: ()
    │    │    │    │    │    │         ├── fd: ()-->(5,6)
  - │    │    │    │    │    │         ├── select
  + │    │    │    │    │    │         ├── scan a
    │    │    │    │    │    │         │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │         │    ├── outer: (1)
  - │    │    │    │    │    │         │    ├── cardinality: [0 - 1]
  - │    │    │    │    │    │         │    ├── key: ()
  - │    │    │    │    │    │         │    ├── fd: ()-->(5,6)
  - │    │    │    │    │    │         │    ├── scan a
  - │    │    │    │    │    │         │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │         │    │    ├── key: (5)
  - │    │    │    │    │    │         │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    │         │    └── filters
  - │    │    │    │    │    │         │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    │    │         │    ├── key: (5)
  + │    │    │    │    │    │         │    └── fd: (5)-->(6)
    │    │    │    │    │    │         └── filters
  + │    │    │    │    │    │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │    │    │              └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    │    └── filters (true)
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 AND (5 IS NOT NULL) THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateSelect
  Cost: 2202.71
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
  - │    │    │    │    ├── select
  + │    │    │    │    ├── project
    │    │    │    │    │    ├── columns: i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(6)
  - │    │    │    │    │    ├── project
  - │    │    │    │    │    │    ├── columns: i:6
  - │    │    │    │    │    │    ├── outer: (1)
  - │    │    │    │    │    │    ├── cardinality: [0 - 1]
  - │    │    │    │    │    │    ├── key: ()
  - │    │    │    │    │    │    ├── fd: ()-->(6)
  - │    │    │    │    │    │    └── select
  - │    │    │    │    │    │         ├── columns: k:5!null i:6
  - │    │    │    │    │    │         ├── outer: (1)
  - │    │    │    │    │    │         ├── cardinality: [0 - 1]
  - │    │    │    │    │    │         ├── key: ()
  - │    │    │    │    │    │         ├── fd: ()-->(5,6)
  - │    │    │    │    │    │         ├── scan a
  - │    │    │    │    │    │         │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │         │    ├── key: (5)
  - │    │    │    │    │    │         │    └── fd: (5)-->(6)
  - │    │    │    │    │    │         └── filters
  - │    │    │    │    │    │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    │    │              └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    │    └── filters (true)
  + │    │    │    │    │    └── select
  + │    │    │    │    │         ├── columns: k:5!null i:6
  + │    │    │    │    │         ├── outer: (1)
  + │    │    │    │    │         ├── cardinality: [0 - 1]
  + │    │    │    │    │         ├── key: ()
  + │    │    │    │    │         ├── fd: ()-->(5,6)
  + │    │    │    │    │         ├── scan a
  + │    │    │    │    │         │    ├── columns: k:5!null i:6
  + │    │    │    │    │         │    ├── key: (5)
  + │    │    │    │    │         │    └── fd: (5)-->(6)
  + │    │    │    │    │         └── filters
  + │    │    │    │    │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    │              └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 AND (5 IS NOT NULL) THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
MergeProjects
  Cost: 2202.69
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
  - │    │    │    │    ├── project
  - │    │    │    │    │    ├── columns: i:6
  + │    │    │    │    ├── select
  + │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
  - │    │    │    │    │    ├── fd: ()-->(6)
  - │    │    │    │    │    └── select
  - │    │    │    │    │         ├── columns: k:5!null i:6
  - │    │    │    │    │         ├── outer: (1)
  - │    │    │    │    │         ├── cardinality: [0 - 1]
  - │    │    │    │    │         ├── key: ()
  - │    │    │    │    │         ├── fd: ()-->(5,6)
  - │    │    │    │    │         ├── scan a
  - │    │    │    │    │         │    ├── columns: k:5!null i:6
  - │    │    │    │    │         │    ├── key: (5)
  - │    │    │    │    │         │    └── fd: (5)-->(6)
  - │    │    │    │    │         └── filters
  - │    │    │    │    │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    │              └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    ├── fd: ()-->(5,6)
  + │    │    │    │    │    ├── scan a
  + │    │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    └── filters
  + │    │    │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 AND (5 IS NOT NULL) THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
FoldNonNullIsNotNull
  Cost: 2202.69
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(5,6)
    │    │    │    │    │    ├── scan a
    │    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    │    └── fd: (5)-->(6)
    │    │    │    │    │    └── filters
    │    │    │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
  - │    │         └── CASE WHEN bool_or:14 AND (5 IS NOT NULL) THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
  + │    │         └── CASE WHEN bool_or:14 AND true THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
SimplifyAndTrue
  Cost: 2202.69
================================================================================
   project
    ├── columns: r:12
    ├── inner-join-apply
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── scan xy
    │    │    ├── columns: x:1!null
    │    │    └── key: (1)
    │    ├── project
    │    │    ├── columns: case:15
    │    │    ├── outer: (1)
    │    │    ├── cardinality: [1 - 1]
    │    │    ├── key: ()
    │    │    ├── fd: ()-->(15)
    │    │    ├── scalar-group-by
    │    │    │    ├── columns: bool_or:14
    │    │    │    ├── outer: (1)
    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    ├── key: ()
    │    │    │    ├── fd: ()-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    ├── outer: (1)
    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    ├── key: ()
    │    │    │    │    ├── fd: ()-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
    │    │    │    │    │    ├── fd: ()-->(5,6)
    │    │    │    │    │    ├── scan a
    │    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    │    └── fd: (5)-->(6)
    │    │    │    │    │    └── filters
    │    │    │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── aggregations
    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │              └── notnull:13
    │    │    └── projections
  - │    │         └── CASE WHEN bool_or:14 AND true THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
  + │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
TryDecorrelateProject
  Cost: 2232.68
================================================================================
   project
    ├── columns: r:12
  - ├── inner-join-apply
  + ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
  - │    ├── scan xy
  - │    │    ├── columns: x:1!null
  - │    │    └── key: (1)
    │    ├── project
  - │    │    ├── columns: case:15
  - │    │    ├── outer: (1)
  - │    │    ├── cardinality: [1 - 1]
  - │    │    ├── key: ()
  - │    │    ├── fd: ()-->(15)
  - │    │    ├── scalar-group-by
  - │    │    │    ├── columns: bool_or:14
  - │    │    │    ├── outer: (1)
  - │    │    │    ├── cardinality: [1 - 1]
  - │    │    │    ├── key: ()
  - │    │    │    ├── fd: ()-->(14)
  - │    │    │    ├── project
  - │    │    │    │    ├── columns: notnull:13!null
  + │    │    ├── columns: case:15 x:1!null
  + │    │    ├── key: (1)
  + │    │    ├── fd: (1)-->(15)
  + │    │    ├── inner-join-apply
  + │    │    │    ├── columns: x:1!null bool_or:14
  + │    │    │    ├── key: (1)
  + │    │    │    ├── fd: (1)-->(14)
  + │    │    │    ├── scan xy
  + │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    └── key: (1)
  + │    │    │    ├── scalar-group-by
  + │    │    │    │    ├── columns: bool_or:14
    │    │    │    │    ├── outer: (1)
  - │    │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │    ├── cardinality: [1 - 1]
    │    │    │    │    ├── key: ()
  - │    │    │    │    ├── fd: ()-->(13)
  - │    │    │    │    ├── select
  - │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    ├── fd: ()-->(14)
  + │    │    │    │    ├── project
  + │    │    │    │    │    ├── columns: notnull:13!null
    │    │    │    │    │    ├── outer: (1)
    │    │    │    │    │    ├── cardinality: [0 - 1]
    │    │    │    │    │    ├── key: ()
  - │    │    │    │    │    ├── fd: ()-->(5,6)
  - │    │    │    │    │    ├── scan a
  + │    │    │    │    │    ├── fd: ()-->(13)
  + │    │    │    │    │    ├── select
    │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    └── filters
  - │    │    │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    └── projections
  - │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    └── aggregations
  - │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  - │    │    │              └── notnull:13
  + │    │    │    │    │    │    ├── outer: (1)
  + │    │    │    │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │    │    │    ├── key: ()
  + │    │    │    │    │    │    ├── fd: ()-->(5,6)
  + │    │    │    │    │    │    ├── scan a
  + │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    │    └── filters
  + │    │    │    │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    └── projections
  + │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │    └── aggregations
  + │    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  + │    │    │    │              └── notnull:13
  + │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
TryDecorrelateScalarGroupBy
  Cost: 2292.82
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
  - │    │    ├── inner-join-apply
  + │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
  - │    │    │    ├── scan xy
  - │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    └── key: (1)
  - │    │    │    ├── scalar-group-by
  - │    │    │    │    ├── columns: bool_or:14
  - │    │    │    │    ├── outer: (1)
  - │    │    │    │    ├── cardinality: [1 - 1]
  - │    │    │    │    ├── key: ()
  - │    │    │    │    ├── fd: ()-->(14)
  - │    │    │    │    ├── project
  - │    │    │    │    │    ├── columns: notnull:13!null
  - │    │    │    │    │    ├── outer: (1)
  - │    │    │    │    │    ├── cardinality: [0 - 1]
  - │    │    │    │    │    ├── key: ()
  - │    │    │    │    │    ├── fd: ()-->(13)
  - │    │    │    │    │    ├── select
  - │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    ├── outer: (1)
  - │    │    │    │    │    │    ├── cardinality: [0 - 1]
  - │    │    │    │    │    │    ├── key: ()
  - │    │    │    │    │    │    ├── fd: ()-->(5,6)
  - │    │    │    │    │    │    ├── scan a
  - │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    │    └── filters
  - │    │    │    │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    │    └── projections
  - │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │    └── aggregations
  - │    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  - │    │    │    │              └── notnull:13
  + │    │    │    ├── project
  + │    │    │    │    ├── columns: x:1!null bool_or:14
  + │    │    │    │    ├── key: (1)
  + │    │    │    │    ├── fd: (1)-->(14)
  + │    │    │    │    └── group-by
  + │    │    │    │         ├── columns: x:1!null bool_or:14
  + │    │    │    │         ├── grouping columns: x:1!null
  + │    │    │    │         ├── key: (1)
  + │    │    │    │         ├── fd: (1)-->(14)
  + │    │    │    │         ├── left-join-apply
  + │    │    │    │         │    ├── columns: x:1!null notnull:13
  + │    │    │    │         │    ├── key: (1)
  + │    │    │    │         │    ├── fd: (1)-->(13)
  + │    │    │    │         │    ├── scan xy
  + │    │    │    │         │    │    ├── columns: x:1!null
  + │    │    │    │         │    │    └── key: (1)
  + │    │    │    │         │    ├── project
  + │    │    │    │         │    │    ├── columns: notnull:13!null
  + │    │    │    │         │    │    ├── outer: (1)
  + │    │    │    │         │    │    ├── cardinality: [0 - 1]
  + │    │    │    │         │    │    ├── key: ()
  + │    │    │    │         │    │    ├── fd: ()-->(13)
  + │    │    │    │         │    │    ├── select
  + │    │    │    │         │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │    │    │    ├── outer: (1)
  + │    │    │    │         │    │    │    ├── cardinality: [0 - 1]
  + │    │    │    │         │    │    │    ├── key: ()
  + │    │    │    │         │    │    │    ├── fd: ()-->(5,6)
  + │    │    │    │         │    │    │    ├── scan a
  + │    │    │    │         │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │    │    │    │    ├── key: (5)
  + │    │    │    │         │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │    │    │    └── filters
  + │    │    │    │         │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │         │    │    └── projections
  + │    │    │    │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │         │    └── filters (true)
  + │    │    │    │         └── aggregations
  + │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
  + │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
TryDecorrelateProjectSelect
  Cost: 2330.42
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
  - │    │    │    │         ├── left-join-apply
  + │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
  - │    │    │    │         │    ├── scan xy
  - │    │    │    │         │    │    ├── columns: x:1!null
  - │    │    │    │         │    │    └── key: (1)
  - │    │    │    │         │    ├── project
  - │    │    │    │         │    │    ├── columns: notnull:13!null
  - │    │    │    │         │    │    ├── outer: (1)
  - │    │    │    │         │    │    ├── cardinality: [0 - 1]
  - │    │    │    │         │    │    ├── key: ()
  - │    │    │    │         │    │    ├── fd: ()-->(13)
  - │    │    │    │         │    │    ├── select
  - │    │    │    │         │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │    │    │    ├── outer: (1)
  - │    │    │    │         │    │    │    ├── cardinality: [0 - 1]
  - │    │    │    │         │    │    │    ├── key: ()
  - │    │    │    │         │    │    │    ├── fd: ()-->(5,6)
  - │    │    │    │         │    │    │    ├── scan a
  - │    │    │    │         │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │    │    │    │    ├── key: (5)
  - │    │    │    │         │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │         │    │    │    └── filters
  - │    │    │    │         │    │    │         ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │         │    │    └── projections
  - │    │    │    │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │         │    └── filters (true)
  + │    │    │    │         │    └── left-join-apply
  + │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
  + │    │    │    │         │         ├── key: (1)
  + │    │    │    │         │         ├── fd: (1)-->(5,6,13)
  + │    │    │    │         │         ├── scan xy
  + │    │    │    │         │         │    ├── columns: x:1!null
  + │    │    │    │         │         │    └── key: (1)
  + │    │    │    │         │         ├── project
  + │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null i:6
  + │    │    │    │         │         │    ├── key: (5)
  + │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
  + │    │    │    │         │         │    ├── scan a
  + │    │    │    │         │         │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │         │    │    ├── key: (5)
  + │    │    │    │         │         │    │    └── fd: (5)-->(6)
  + │    │    │    │         │         │    └── projections
  + │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │         │         └── filters
  + │    │    │    │         │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │         │              └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
DecorrelateJoin
  Cost: 2330.42
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
    │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
  - │    │    │    │         │    └── left-join-apply
  + │    │    │    │         │    └── left-join (hash)
    │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
  + │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │         ├── key: (1)
  - │    │    │    │         │         ├── fd: (1)-->(5,6,13)
  + │    │    │    │         │         ├── fd: (5)-->(6), (6)~~>(13), (1)-->(5,6,13)
    │    │    │    │         │         ├── scan xy
    │    │    │    │         │         │    ├── columns: x:1!null
    │    │    │    │         │         │    └── key: (1)
    │    │    │    │         │         ├── project
    │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null i:6
    │    │    │    │         │         │    ├── key: (5)
    │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
    │    │    │    │         │         │    ├── scan a
    │    │    │    │         │         │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    ├── key: (5)
    │    │    │    │         │         │    │    └── fd: (5)-->(6)
    │    │    │    │         │         │    └── projections
    │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    │         │         └── filters
    │    │    │    │         │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         │              └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
PushFilterIntoJoinRight
  Cost: 2328.63
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
    │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
    │    │    │    │         │    └── left-join (hash)
    │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
    │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │         ├── key: (1)
    │    │    │    │         │         ├── fd: (5)-->(6), (6)~~>(13), (1)-->(5,6,13)
    │    │    │    │         │         ├── scan xy
    │    │    │    │         │         │    ├── columns: x:1!null
    │    │    │    │         │         │    └── key: (1)
  - │    │    │    │         │         ├── project
  - │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null i:6
  + │    │    │    │         │         ├── select
  + │    │    │    │         │         │    ├── columns: k:5!null i:6 notnull:13!null
    │    │    │    │         │         │    ├── key: (5)
    │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
  - │    │    │    │         │         │    ├── scan a
  - │    │    │    │         │         │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │         │    ├── project
  + │    │    │    │         │         │    │    ├── columns: notnull:13!null k:5!null i:6
    │    │    │    │         │         │    │    ├── key: (5)
  - │    │    │    │         │         │    │    └── fd: (5)-->(6)
  - │    │    │    │         │         │    └── projections
  - │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │         │         │    │    ├── fd: (5)-->(6), (6)-->(13)
  + │    │    │    │         │         │    │    ├── scan a
  + │    │    │    │         │         │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │         │    │    │    ├── key: (5)
  + │    │    │    │         │         │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │         │    │    └── projections
  + │    │    │    │         │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │         │         │    └── filters
  + │    │    │    │         │         │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │         │         └── filters
  - │    │    │    │         │              ├── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │         │              └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │         │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
PushSelectIntoProject
  Cost: 2318.64
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
    │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
    │    │    │    │         │    └── left-join (hash)
    │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
    │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │         ├── key: (1)
    │    │    │    │         │         ├── fd: (5)-->(6), (6)~~>(13), (1)-->(5,6,13)
    │    │    │    │         │         ├── scan xy
    │    │    │    │         │         │    ├── columns: x:1!null
    │    │    │    │         │         │    └── key: (1)
    │    │    │    │         │         ├── select
    │    │    │    │         │         │    ├── columns: k:5!null i:6 notnull:13!null
    │    │    │    │         │         │    ├── key: (5)
    │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
    │    │    │    │         │         │    ├── project
    │    │    │    │         │         │    │    ├── columns: notnull:13!null k:5!null i:6
    │    │    │    │         │         │    │    ├── key: (5)
    │    │    │    │         │         │    │    ├── fd: (5)-->(6), (6)-->(13)
  - │    │    │    │         │         │    │    ├── scan a
  + │    │    │    │         │         │    │    ├── select
    │    │    │    │         │         │    │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    │    ├── key: (5)
  - │    │    │    │         │         │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │         │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │         │         │    │    │    ├── scan a
  + │    │    │    │         │         │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │         │    │    │    │    ├── key: (5)
  + │    │    │    │         │         │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │         │    │    │    └── filters
  + │    │    │    │         │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │         │         │    │    └── projections
    │    │    │    │         │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │         │         │    └── filters
  - │    │    │    │         │         │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │         │         │    └── filters (true)
    │    │    │    │         │         └── filters
    │    │    │    │         │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateSelect
  Cost: 2315.30
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
    │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
    │    │    │    │         │    └── left-join (hash)
    │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
    │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │         ├── key: (1)
    │    │    │    │         │         ├── fd: (5)-->(6), (6)~~>(13), (1)-->(5,6,13)
    │    │    │    │         │         ├── scan xy
    │    │    │    │         │         │    ├── columns: x:1!null
    │    │    │    │         │         │    └── key: (1)
  - │    │    │    │         │         ├── select
  - │    │    │    │         │         │    ├── columns: k:5!null i:6 notnull:13!null
  + │    │    │    │         │         ├── project
  + │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null i:6
    │    │    │    │         │         │    ├── key: (5)
    │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
  - │    │    │    │         │         │    ├── project
  - │    │    │    │         │         │    │    ├── columns: notnull:13!null k:5!null i:6
  + │    │    │    │         │         │    ├── select
  + │    │    │    │         │         │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    ├── key: (5)
  - │    │    │    │         │         │    │    ├── fd: (5)-->(6), (6)-->(13)
  - │    │    │    │         │         │    │    ├── select
  + │    │    │    │         │         │    │    ├── fd: (5)-->(6)
  + │    │    │    │         │         │    │    ├── scan a
    │    │    │    │         │         │    │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    │    ├── key: (5)
  - │    │    │    │         │         │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │         │         │    │    │    ├── scan a
  - │    │    │    │         │         │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │         │    │    │    │    ├── key: (5)
  - │    │    │    │         │         │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │         │         │    │    │    └── filters
  - │    │    │    │         │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │         │         │    │    └── projections
  - │    │    │    │         │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │         │         │    └── filters (true)
  + │    │    │    │         │         │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │         │    │    └── filters
  + │    │    │    │         │         │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │         │         │    └── projections
  + │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    │         │         └── filters
    │    │    │    │         │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
PruneJoinRightCols
  Cost: 2315.30
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
    │    │    │    │         ├── project
    │    │    │    │         │    ├── columns: x:1!null notnull:13
    │    │    │    │         │    ├── key: (1)
    │    │    │    │         │    ├── fd: (1)-->(13)
    │    │    │    │         │    └── left-join (hash)
  - │    │    │    │         │         ├── columns: x:1!null k:5 i:6 notnull:13
  + │    │    │    │         │         ├── columns: x:1!null k:5 notnull:13
    │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │         ├── key: (1)
  - │    │    │    │         │         ├── fd: (5)-->(6), (6)~~>(13), (1)-->(5,6,13)
  + │    │    │    │         │         ├── fd: (5)-->(13), (1)-->(5,13)
    │    │    │    │         │         ├── scan xy
    │    │    │    │         │         │    ├── columns: x:1!null
    │    │    │    │         │         │    └── key: (1)
    │    │    │    │         │         ├── project
  - │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null i:6
  + │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null
    │    │    │    │         │         │    ├── key: (5)
  - │    │    │    │         │         │    ├── fd: (5)-->(6), (6)-->(13)
  + │    │    │    │         │         │    ├── fd: (5)-->(13)
    │    │    │    │         │         │    ├── select
    │    │    │    │         │         │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    ├── key: (5)
    │    │    │    │         │         │    │    ├── fd: (5)-->(6)
    │    │    │    │         │         │    │    ├── scan a
    │    │    │    │         │         │    │    │    ├── columns: k:5!null i:6
    │    │    │    │         │         │    │    │    ├── key: (5)
    │    │    │    │         │         │    │    │    └── fd: (5)-->(6)
    │    │    │    │         │         │    │    └── filters
    │    │    │    │         │         │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │         │         │    └── projections
    │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    │         │         └── filters
    │    │    │    │         │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateGroupByProject
  Cost: 2305.29
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
    │    │    │    ├── project
    │    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
    │    │    │    │    └── group-by
    │    │    │    │         ├── columns: x:1!null bool_or:14
    │    │    │    │         ├── grouping columns: x:1!null
    │    │    │    │         ├── key: (1)
    │    │    │    │         ├── fd: (1)-->(14)
  - │    │    │    │         ├── project
  - │    │    │    │         │    ├── columns: x:1!null notnull:13
  + │    │    │    │         ├── left-join (hash)
  + │    │    │    │         │    ├── columns: x:1!null k:5 notnull:13
  + │    │    │    │         │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │         │    ├── key: (1)
  - │    │    │    │         │    ├── fd: (1)-->(13)
  - │    │    │    │         │    └── left-join (hash)
  - │    │    │    │         │         ├── columns: x:1!null k:5 notnull:13
  - │    │    │    │         │         ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  - │    │    │    │         │         ├── key: (1)
  - │    │    │    │         │         ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    │    │         │         ├── scan xy
  - │    │    │    │         │         │    ├── columns: x:1!null
  - │    │    │    │         │         │    └── key: (1)
  - │    │    │    │         │         ├── project
  - │    │    │    │         │         │    ├── columns: notnull:13!null k:5!null
  - │    │    │    │         │         │    ├── key: (5)
  - │    │    │    │         │         │    ├── fd: (5)-->(13)
  - │    │    │    │         │         │    ├── select
  - │    │    │    │         │         │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │         │    │    ├── key: (5)
  - │    │    │    │         │         │    │    ├── fd: (5)-->(6)
  - │    │    │    │         │         │    │    ├── scan a
  - │    │    │    │         │         │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │         │    │    │    ├── key: (5)
  - │    │    │    │         │         │    │    │    └── fd: (5)-->(6)
  - │    │    │    │         │         │    │    └── filters
  - │    │    │    │         │         │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │         │         │    └── projections
  - │    │    │    │         │         │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │         │         └── filters
  - │    │    │    │         │              └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │         │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    │    │         │    ├── scan xy
  + │    │    │    │         │    │    ├── columns: x:1!null
  + │    │    │    │         │    │    └── key: (1)
  + │    │    │    │         │    ├── project
  + │    │    │    │         │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    │         │    │    ├── key: (5)
  + │    │    │    │         │    │    ├── fd: (5)-->(13)
  + │    │    │    │         │    │    ├── select
  + │    │    │    │         │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │    │    │    ├── key: (5)
  + │    │    │    │         │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │         │    │    │    ├── scan a
  + │    │    │    │         │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │         │    │    │    │    ├── key: (5)
  + │    │    │    │         │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │         │    │    │    └── filters
  + │    │    │    │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │         │    │    └── projections
  + │    │    │    │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │         │    └── filters
  + │    │    │    │         │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    │    │         └── aggregations
    │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
    │    │    │    │                   └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateProject
  Cost: 2295.28
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
    │    │    ├── select
    │    │    │    ├── columns: x:1!null bool_or:14
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
  - │    │    │    ├── project
  + │    │    │    ├── group-by
    │    │    │    │    ├── columns: x:1!null bool_or:14
  + │    │    │    │    ├── grouping columns: x:1!null
    │    │    │    │    ├── key: (1)
    │    │    │    │    ├── fd: (1)-->(14)
  - │    │    │    │    └── group-by
  - │    │    │    │         ├── columns: x:1!null bool_or:14
  - │    │    │    │         ├── grouping columns: x:1!null
  - │    │    │    │         ├── key: (1)
  - │    │    │    │         ├── fd: (1)-->(14)
  - │    │    │    │         ├── left-join (hash)
  - │    │    │    │         │    ├── columns: x:1!null k:5 notnull:13
  - │    │    │    │         │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  - │    │    │    │         │    ├── key: (1)
  - │    │    │    │         │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    │    │         │    ├── scan xy
  - │    │    │    │         │    │    ├── columns: x:1!null
  - │    │    │    │         │    │    └── key: (1)
  - │    │    │    │         │    ├── project
  - │    │    │    │         │    │    ├── columns: notnull:13!null k:5!null
  - │    │    │    │         │    │    ├── key: (5)
  - │    │    │    │         │    │    ├── fd: (5)-->(13)
  - │    │    │    │         │    │    ├── select
  - │    │    │    │         │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │    │    │    ├── key: (5)
  - │    │    │    │         │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │         │    │    │    ├── scan a
  - │    │    │    │         │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │         │    │    │    │    ├── key: (5)
  - │    │    │    │         │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │         │    │    │    └── filters
  - │    │    │    │         │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │         │    │    └── projections
  - │    │    │    │         │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │         │    └── filters
  - │    │    │    │         │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │         └── aggregations
  - │    │    │    │              └── bool-or [as=bool_or:14, outer=(13)]
  - │    │    │    │                   └── notnull:13
  + │    │    │    │    ├── left-join (hash)
  + │    │    │    │    │    ├── columns: x:1!null k:5 notnull:13
  + │    │    │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  + │    │    │    │    │    ├── key: (1)
  + │    │    │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    │    │    │    ├── scan xy
  + │    │    │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    │    │    └── key: (1)
  + │    │    │    │    │    ├── project
  + │    │    │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    │    ├── fd: (5)-->(13)
  + │    │    │    │    │    │    ├── select
  + │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    │    │    ├── scan a
  + │    │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    │    │    └── filters
  + │    │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    │    └── projections
  + │    │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │    │    └── filters
  + │    │    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    │    └── aggregations
  + │    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  + │    │    │    │              └── notnull:13
    │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateSelect
  Cost: 2285.27
================================================================================
   project
    ├── columns: r:12
    ├── select
    │    ├── columns: x:1!null case:15
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
    │    ├── project
    │    │    ├── columns: case:15 x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(15)
  - │    │    ├── select
  + │    │    ├── group-by
    │    │    │    ├── columns: x:1!null bool_or:14
  + │    │    │    ├── grouping columns: x:1!null
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (1)-->(14)
  - │    │    │    ├── group-by
  - │    │    │    │    ├── columns: x:1!null bool_or:14
  - │    │    │    │    ├── grouping columns: x:1!null
  + │    │    │    ├── left-join (hash)
  + │    │    │    │    ├── columns: x:1!null k:5 notnull:13
  + │    │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    │    ├── key: (1)
  - │    │    │    │    ├── fd: (1)-->(14)
  - │    │    │    │    ├── left-join (hash)
  - │    │    │    │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  - │    │    │    │    │    ├── key: (1)
  - │    │    │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    │    │    │    ├── scan xy
  - │    │    │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    │    │    └── key: (1)
  - │    │    │    │    │    ├── project
  - │    │    │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    │    │    ├── scan xy
  + │    │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    │    └── key: (1)
  + │    │    │    │    ├── project
  + │    │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    ├── fd: (5)-->(13)
  + │    │    │    │    │    ├── select
  + │    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    ├── fd: (5)-->(13)
  - │    │    │    │    │    │    ├── select
  + │    │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    │    ├── scan a
    │    │    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    │    │    │    ├── scan a
  - │    │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    │    │    └── filters
  - │    │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    │    │    └── projections
  - │    │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │    │    └── filters
  - │    │    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    │    └── aggregations
  - │    │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  - │    │    │    │              └── notnull:13
  - │    │    │    └── filters (true)
  + │    │    │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    │    └── filters
  + │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    │    └── projections
  + │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    │    └── filters
  + │    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    └── aggregations
  + │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  + │    │    │              └── notnull:13
    │    │    └── projections
    │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    │    └── filters (true)
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
EliminateSelect
  Cost: 2275.26
================================================================================
   project
    ├── columns: r:12
  - ├── select
  - │    ├── columns: x:1!null case:15
  + ├── project
  + │    ├── columns: case:15 x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(15)
  - │    ├── project
  - │    │    ├── columns: case:15 x:1!null
  + │    ├── group-by
  + │    │    ├── columns: x:1!null bool_or:14
  + │    │    ├── grouping columns: x:1!null
    │    │    ├── key: (1)
  - │    │    ├── fd: (1)-->(15)
  - │    │    ├── group-by
  - │    │    │    ├── columns: x:1!null bool_or:14
  - │    │    │    ├── grouping columns: x:1!null
  + │    │    ├── fd: (1)-->(14)
  + │    │    ├── left-join (hash)
  + │    │    │    ├── columns: x:1!null k:5 notnull:13
  + │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    ├── key: (1)
  - │    │    │    ├── fd: (1)-->(14)
  - │    │    │    ├── left-join (hash)
  - │    │    │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  - │    │    │    │    ├── key: (1)
  - │    │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    │    │    ├── scan xy
  - │    │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    │    └── key: (1)
  - │    │    │    │    ├── project
  - │    │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    │    ├── scan xy
  + │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    └── key: (1)
  + │    │    │    ├── project
  + │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    │    ├── key: (5)
  + │    │    │    │    ├── fd: (5)-->(13)
  + │    │    │    │    ├── select
  + │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    ├── fd: (5)-->(13)
  - │    │    │    │    │    ├── select
  + │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    ├── scan a
    │    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    │    │    ├── scan a
  - │    │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    │    └── filters
  - │    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    │    └── projections
  - │    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    │    └── filters
  - │    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    │    └── aggregations
  - │    │    │         └── bool-or [as=bool_or:14, outer=(13)]
  - │    │    │              └── notnull:13
  - │    │    └── projections
  - │    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
  - │    └── filters (true)
  + │    │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    └── filters
  + │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    └── projections
  + │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    │    └── filters
  + │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    └── aggregations
  + │    │         └── bool-or [as=bool_or:14, outer=(13)]
  + │    │              └── notnull:13
  + │    └── projections
  + │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
PruneProjectCols
  Cost: 2275.26
================================================================================
   project
    ├── columns: r:12
    ├── project
  - │    ├── columns: case:15 x:1!null
  - │    ├── key: (1)
  - │    ├── fd: (1)-->(15)
  + │    ├── columns: case:15
    │    ├── group-by
    │    │    ├── columns: x:1!null bool_or:14
    │    │    ├── grouping columns: x:1!null
    │    │    ├── key: (1)
    │    │    ├── fd: (1)-->(14)
    │    │    ├── left-join (hash)
    │    │    │    ├── columns: x:1!null k:5 notnull:13
    │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
    │    │    │    ├── scan xy
    │    │    │    │    ├── columns: x:1!null
    │    │    │    │    └── key: (1)
    │    │    │    ├── project
    │    │    │    │    ├── columns: notnull:13!null k:5!null
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(13)
    │    │    │    │    ├── select
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    │    ├── scan a
    │    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    │    └── fd: (5)-->(6)
    │    │    │    │    │    └── filters
    │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    │    └── projections
    │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    │    └── filters
    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    └── aggregations
    │    │         └── bool-or [as=bool_or:14, outer=(13)]
    │    │              └── notnull:13
    │    └── projections
    │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
    └── projections
         └── case:15 [as=r:12, outer=(15)]
================================================================================
InlineProjectInProject
  Cost: 2255.25
================================================================================
   project
    ├── columns: r:12
  - ├── project
  - │    ├── columns: case:15
  - │    ├── group-by
  - │    │    ├── columns: x:1!null bool_or:14
  - │    │    ├── grouping columns: x:1!null
  + ├── group-by
  + │    ├── columns: x:1!null bool_or:14
  + │    ├── grouping columns: x:1!null
  + │    ├── key: (1)
  + │    ├── fd: (1)-->(14)
  + │    ├── left-join (hash)
  + │    │    ├── columns: x:1!null k:5 notnull:13
  + │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    ├── key: (1)
  - │    │    ├── fd: (1)-->(14)
  - │    │    ├── left-join (hash)
  - │    │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  - │    │    │    ├── key: (1)
  - │    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    │    ├── scan xy
  - │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    └── key: (1)
  - │    │    │    ├── project
  - │    │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    ├── scan xy
  + │    │    │    ├── columns: x:1!null
  + │    │    │    └── key: (1)
  + │    │    ├── project
  + │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    ├── key: (5)
  + │    │    │    ├── fd: (5)-->(13)
  + │    │    │    ├── select
  + │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
  - │    │    │    │    ├── fd: (5)-->(13)
  - │    │    │    │    ├── select
  + │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    │    ├── scan a
  - │    │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    │    └── fd: (5)-->(6)
  - │    │    │    │    │    └── filters
  - │    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    │    └── projections
  - │    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    │    └── filters
  - │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  - │    │    └── aggregations
  - │    │         └── bool-or [as=bool_or:14, outer=(13)]
  - │    │              └── notnull:13
  - │    └── projections
  - │         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=case:15, outer=(14)]
  + │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    └── filters
  + │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    └── projections
  + │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    └── filters
  + │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    └── aggregations
  + │         └── bool-or [as=bool_or:14, outer=(13)]
  + │              └── notnull:13
    └── projections
  -      └── case:15 [as=r:12, outer=(15)]
  +      └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GeneratePartialIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateConstrainedScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateZigzagJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
ReorderJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
CommuteLeftJoin (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
  - │    ├── left-join (hash)
  + │    ├── right-join (hash)
    │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── scan xy
  - │    │    │    ├── columns: x:1!null
  - │    │    │    └── key: (1)
    │    │    ├── project
    │    │    │    ├── columns: notnull:13!null k:5!null
    │    │    │    ├── key: (5)
    │    │    │    ├── fd: (5)-->(13)
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    └── fd: (5)-->(6)
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    └── projections
    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    ├── scan xy
  + │    │    │    ├── columns: x:1!null
  + │    │    │    └── key: (1)
    │    │    └── filters
    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
================================================================================
GenerateMergeJoins
  Cost: 2250.24
================================================================================
   project
    ├── columns: r:12
    ├── group-by
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
  - │    ├── left-join (hash)
  + │    ├── left-join (merge)
    │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
  + │    │    ├── left ordering: +1
  + │    │    ├── right ordering: +5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
    │    │    ├── scan xy
    │    │    │    ├── columns: x:1!null
  - │    │    │    └── key: (1)
  + │    │    │    ├── key: (1)
  + │    │    │    └── ordering: +1
    │    │    ├── project
    │    │    │    ├── columns: notnull:13!null k:5!null
    │    │    │    ├── key: (5)
    │    │    │    ├── fd: (5)-->(13)
  + │    │    │    ├── ordering: +5
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    ├── ordering: +5
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    └── ordering: +5
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    └── projections
    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    └── filters
  - │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    └── filters (true)
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
HoistProjectFromLeftJoin (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
  - │    ├── left-join (merge)
  - │    │    ├── columns: x:1!null k:5 notnull:13
  - │    │    ├── left ordering: +1
  - │    │    ├── right ordering: +5
  + │    ├── project
  + │    │    ├── columns: notnull:13 x:1!null k:5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── scan xy
  - │    │    │    ├── columns: x:1!null
  + │    │    ├── left-join (hash)
  + │    │    │    ├── columns: x:1!null k:5 i:6
  + │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    ├── key: (1)
  - │    │    │    └── ordering: +1
  - │    │    ├── project
  - │    │    │    ├── columns: notnull:13!null k:5!null
  - │    │    │    ├── key: (5)
  - │    │    │    ├── fd: (5)-->(13)
  - │    │    │    ├── ordering: +5
  + │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
  + │    │    │    ├── scan xy
  + │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    └── key: (1)
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    ├── ordering: +5
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    │    └── ordering: +5
  + │    │    │    │    │    └── fd: (5)-->(6)
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    └── projections
  - │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  - │    │    └── filters (true)
  + │    │    │    └── filters
  + │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    └── projections
  + │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
ReorderJoins (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
CommuteLeftJoin (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
    │    ├── project
    │    │    ├── columns: notnull:13 x:1!null k:5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── left-join (hash)
  + │    │    ├── right-join (hash)
    │    │    │    ├── columns: x:1!null k:5 i:6
  - │    │    │    ├── multiplicity: left-rows(exactly-one), right-rows(zero-or-one)
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
  - │    │    │    ├── scan xy
  - │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    └── key: (1)
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    └── fd: (5)-->(6)
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    ├── scan xy
  + │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    └── key: (1)
    │    │    │    └── filters
    │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
    │    │    └── projections
    │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
GenerateMergeJoins (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
    │    ├── project
    │    │    ├── columns: notnull:13 x:1!null k:5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── right-join (hash)
  + │    │    ├── left-join (merge)
    │    │    │    ├── columns: x:1!null k:5 i:6
  + │    │    │    ├── left ordering: +1
  + │    │    │    ├── right ordering: +5
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
  + │    │    │    ├── scan xy
  + │    │    │    │    ├── columns: x:1!null
  + │    │    │    │    ├── key: (1)
  + │    │    │    │    └── ordering: +1
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    ├── ordering: +5
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    └── fd: (5)-->(6)
  + │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    └── ordering: +5
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    ├── scan xy
  - │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    └── key: (1)
  - │    │    │    └── filters
  - │    │    │         └── k:5 = x:1 [outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]
  + │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
GenerateLookupJoinsWithFilter (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
    │    ├── project
    │    │    ├── columns: notnull:13 x:1!null k:5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── left-join (merge)
  + │    │    ├── left-join (lookup a)
    │    │    │    ├── columns: x:1!null k:5 i:6
  - │    │    │    ├── left ordering: +1
  - │    │    │    ├── right ordering: +5
  + │    │    │    ├── key columns: [1] = [5]
  + │    │    │    ├── lookup columns are key
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
    │    │    │    ├── scan xy
    │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    ├── key: (1)
  - │    │    │    │    └── ordering: +1
  - │    │    │    ├── select
  - │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    ├── key: (5)
  - │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    ├── ordering: +5
  - │    │    │    │    ├── scan a
  - │    │    │    │    │    ├── columns: k:5!null i:6
  - │    │    │    │    │    ├── key: (5)
  - │    │    │    │    │    ├── fd: (5)-->(6)
  - │    │    │    │    │    └── ordering: +5
  - │    │    │    │    └── filters
  - │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    └── filters (true)
  + │    │    │    │    └── key: (1)
  + │    │    │    └── filters
  + │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    └── projections
    │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
GenerateMergeJoins (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
    │    ├── project
    │    │    ├── columns: notnull:13 x:1!null k:5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── left-join (lookup a)
  + │    │    ├── right-join (merge)
    │    │    │    ├── columns: x:1!null k:5 i:6
  - │    │    │    ├── key columns: [1] = [5]
  - │    │    │    ├── lookup columns are key
  + │    │    │    ├── left ordering: +5
  + │    │    │    ├── right ordering: +1
    │    │    │    ├── key: (1)
    │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
  + │    │    │    ├── select
  + │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    ├── key: (5)
  + │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    ├── ordering: +5
  + │    │    │    │    ├── scan a
  + │    │    │    │    │    ├── columns: k:5!null i:6
  + │    │    │    │    │    ├── key: (5)
  + │    │    │    │    │    ├── fd: (5)-->(6)
  + │    │    │    │    │    └── ordering: +5
  + │    │    │    │    └── filters
  + │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    ├── scan xy
    │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    └── key: (1)
  - │    │    │    └── filters
  - │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  + │    │    │    │    ├── key: (1)
  + │    │    │    │    └── ordering: +1
  + │    │    │    └── filters (true)
    │    │    └── projections
    │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
--------------------------------------------------------------------------------
GenerateMergeJoins (higher cost)
--------------------------------------------------------------------------------
   project
    ├── columns: r:12
    ├── group-by
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
  - │    ├── project
  - │    │    ├── columns: notnull:13 x:1!null k:5
  + │    ├── right-join (merge)
  + │    │    ├── columns: x:1!null k:5 notnull:13
  + │    │    ├── left ordering: +5
  + │    │    ├── right ordering: +1
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  - │    │    ├── right-join (merge)
  - │    │    │    ├── columns: x:1!null k:5 i:6
  - │    │    │    ├── left ordering: +5
  - │    │    │    ├── right ordering: +1
  - │    │    │    ├── key: (1)
  - │    │    │    ├── fd: (5)-->(6), (1)-->(5,6)
  + │    │    ├── project
  + │    │    │    ├── columns: notnull:13!null k:5!null
  + │    │    │    ├── key: (5)
  + │    │    │    ├── fd: (5)-->(13)
  + │    │    │    ├── ordering: +5
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    ├── ordering: +5
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    │    └── ordering: +5
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
  - │    │    │    ├── scan xy
  - │    │    │    │    ├── columns: x:1!null
  - │    │    │    │    ├── key: (1)
  - │    │    │    │    └── ordering: +1
  - │    │    │    └── filters (true)
  - │    │    └── projections
  - │    │         └── CASE k:5 IS NULL WHEN true THEN CAST(NULL AS BOOL) ELSE i:6 IS NOT NULL END [as=notnull:13, outer=(5,6)]
  + │    │    │    └── projections
  + │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
  + │    │    ├── scan xy
  + │    │    │    ├── columns: x:1!null
  + │    │    │    ├── key: (1)
  + │    │    │    └── ordering: +1
  + │    │    └── filters (true)
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
================================================================================
GenerateStreamingGroupBy
  Cost: 2240.09
================================================================================
   project
    ├── columns: r:12
    ├── group-by
    │    ├── columns: x:1!null bool_or:14
    │    ├── grouping columns: x:1!null
  + │    ├── internal-ordering: +1
    │    ├── key: (1)
    │    ├── fd: (1)-->(14)
    │    ├── left-join (merge)
    │    │    ├── columns: x:1!null k:5 notnull:13
    │    │    ├── left ordering: +1
    │    │    ├── right ordering: +5
    │    │    ├── key: (1)
    │    │    ├── fd: (5)-->(13), (1)-->(5,13)
  + │    │    ├── ordering: +1
    │    │    ├── scan xy
    │    │    │    ├── columns: x:1!null
    │    │    │    ├── key: (1)
    │    │    │    └── ordering: +1
    │    │    ├── project
    │    │    │    ├── columns: notnull:13!null k:5!null
    │    │    │    ├── key: (5)
    │    │    │    ├── fd: (5)-->(13)
    │    │    │    ├── ordering: +5
    │    │    │    ├── select
    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    ├── key: (5)
    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    ├── ordering: +5
    │    │    │    │    ├── scan a
    │    │    │    │    │    ├── columns: k:5!null i:6
    │    │    │    │    │    ├── key: (5)
    │    │    │    │    │    ├── fd: (5)-->(6)
    │    │    │    │    │    └── ordering: +5
    │    │    │    │    └── filters
    │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
    │    │    │    └── projections
    │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
    │    │    └── filters (true)
    │    └── aggregations
    │         └── bool-or [as=bool_or:14, outer=(13)]
    │              └── notnull:13
    └── projections
         └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
================================================================================
Final best expression
  Cost: 2240.09
================================================================================
  project
   ├── columns: r:12
   ├── group-by
   │    ├── columns: x:1!null bool_or:14
   │    ├── grouping columns: x:1!null
   │    ├── internal-ordering: +1
   │    ├── key: (1)
   │    ├── fd: (1)-->(14)
   │    ├── left-join (merge)
   │    │    ├── columns: x:1!null k:5 notnull:13
   │    │    ├── left ordering: +1
   │    │    ├── right ordering: +5
   │    │    ├── key: (1)
   │    │    ├── fd: (5)-->(13), (1)-->(5,13)
   │    │    ├── ordering: +1
   │    │    ├── scan xy
   │    │    │    ├── columns: x:1!null
   │    │    │    ├── key: (1)
   │    │    │    └── ordering: +1
   │    │    ├── project
   │    │    │    ├── columns: notnull:13!null k:5!null
   │    │    │    ├── key: (5)
   │    │    │    ├── fd: (5)-->(13)
   │    │    │    ├── ordering: +5
   │    │    │    ├── select
   │    │    │    │    ├── columns: k:5!null i:6
   │    │    │    │    ├── key: (5)
   │    │    │    │    ├── fd: (5)-->(6)
   │    │    │    │    ├── ordering: +5
   │    │    │    │    ├── scan a
   │    │    │    │    │    ├── columns: k:5!null i:6
   │    │    │    │    │    ├── key: (5)
   │    │    │    │    │    ├── fd: (5)-->(6)
   │    │    │    │    │    └── ordering: +5
   │    │    │    │    └── filters
   │    │    │    │         └── (i:6 = 5) IS NOT false [outer=(6)]
   │    │    │    └── projections
   │    │    │         └── i:6 IS NOT NULL [as=notnull:13, outer=(6)]
   │    │    └── filters (true)
   │    └── aggregations
   │         └── bool-or [as=bool_or:14, outer=(13)]
   │              └── notnull:13
   └── projections
        └── CASE WHEN bool_or:14 THEN true WHEN bool_or:14 IS NULL THEN false ELSE CAST(NULL AS BOOL) END [as=r:12, outer=(14)]
