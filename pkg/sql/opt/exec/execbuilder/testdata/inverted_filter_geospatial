# LogicTest: local

# EXPLAIN test cases for using invertedFilterer on an inverted geospatial index.

statement ok
CREATE TABLE geo_table2(
  k int,
  geom geometry,
  k_plus_one int,
  PRIMARY KEY (k, k_plus_one),
  INVERTED INDEX geom_index(geom)
)

query T
EXPLAIN (DISTSQL) SELECT k FROM geo_table2 WHERE ST_Intersects('POINT(3.0 3.0)'::geometry, geom)
----
distribution: local
vectorized: true
·
• filter
│ filter: st_intersects('010100000000000000000008400000000000000840', geom)
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUk1GP0kAQx9_9FJt5OUjWY7fFaPYJPXtawwECiRqXkMqO2FB26-7W1BC-u2mrcnCBu_Kwyczw2_n_pzs7cD8zEBB9ngxfxyPSeRvP5rOPwy6ZRcPoZk425HY6viNrNEuffMswIJ_eR9OIOL9MtUfrcOVd52oyjkfzTnjNSHjNuldCvIvGd9F8-oVW6LYLFLRROEq26EB8BQ4LCrk1K3TO2Cq1q_8QqxIEo5DqvPBVekFhZSyC2IFPfYYgYF7pmGKi0PYYUFDokzSrrz3IHFRtl6lWWAKFG5MVW-0E2VCyWeZZ4ZZGY6MNKMzypCr2JLyRsvyupCw5k7Jkjx3wvC3DJZBEKxIyYvwPtA4Wewqm8Ae_zidrBMH39OkzifUvtB7VbZp5tGh7_Hgw_-pRmVtiNBkEgrjKNXE-sV7ULsKXL6RkAZOSsccOIKhVW6wyf-Kewrjwggw4HQRnRxG0GcUHk-q_ryM4-zpym24T-_tp7cM27f9_gfC4eZMXp4vDOOPs4e9V_0F8Je5v1SDoHsSfVd5vo3yKLjfa4ZHuczez_YICqjU2u-tMYVc4sWZVt2nCcc3VCYXON1XeBLFuSpXA-zC_CAeX4eAiHF6Gw4tw_wRe7J_9CQAA___iRKak

query T
EXPLAIN (DISTSQL) SELECT k, k_plus_one FROM geo_table2 WHERE ST_Intersects('POINT(3.0 3.0)'::geometry, geom)
----
distribution: local
vectorized: true
·
• filter
│ filter: st_intersects('010100000000000000000008400000000000000840', geom)
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUk1GP0kAQx9_9FJt5AZL12G0xmn2qnj2t4QCBRI1LSGVHbK7s1t2tqSF8d9NWPeACd_Cwyczw2_n_pztbcD9zEBB_ngxfJyPSfZvM5rOPwx6ZxcP4ek7uKLlbFnnplkYjuZmOb8kazdKn33IMyKf38TQmzi8z7dE6XHnX7UzGyWjeDa8YCa9YryPEu3h8G8-nX2iNbnpAQRuFo3SDDsRX4LCgUFizQueMrVPb5g-JqkAwCpkuSl-nFxRWxiKILfjM5wgC5rWOKaYKbZ8BBYU-zfLm2nuZUd12mWmFFVC4Nnm50U4cWmu1AYVZkdbFvoQ3UlbflZQVZ1JW7LEDnl_KcAkk1YqEjBj_A62DxY6CKf29X-fTNYLgO_r0mST6F1qP6ibLPVq0fX44mH_1uCosMZpEgSCudk2cT60XjYvw5QspWcCkZOyxAwhqdSlWmz9yT2FcekEiTqPg5CiCS0bxwWT67-sITr6Owmab1P4-aE-j8KSC8BIF_z9CeNi_zYvj3WGccfbw92rwIO6I_cWKgt6-_tPiB5eIn6IrjHZ4IP3UzWy3oIBqje0GO1PaFU6sWTVt2nDccE1CofNtlbdBottSLXAf5mfh4DwcnIXD83B4Fh4cwYvdsz8BAAD__wPdrF0=

query T
EXPLAIN SELECT k, k_plus_one FROM geo_table2 WHERE ST_Intersects('POINT(3.0 3.0)'::geometry, geom)
----
distribution: local
vectorized: true
·
• filter
│ filter: st_intersects('010100000000000000000008400000000000000840', geom)
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 31 spans

query T
EXPLAIN SELECT k, k_plus_one FROM geo_table2 WHERE ST_DFullyWithin('POINT(3.0 3.0)'::geometry, geom, 1)
----
distribution: local
vectorized: true
·
• filter
│ filter: st_dfullywithin('010100000000000000000008400000000000000840', geom, 1.0)
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 30
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 30 spans

# Bounding box operations.
statement ok
SET CLUSTER SETTING sql.spatial.experimental_box2d_comparison_operators.enabled = on

query T
EXPLAIN SELECT k FROM geo_table2 WHERE geom && 'POINT(3.0 3.0)'::geometry
----
distribution: local
vectorized: true
·
• filter
│ filter: geom && '010100000000000000000008400000000000000840'
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 31 spans

query T
EXPLAIN SELECT k FROM geo_table2 WHERE 'POINT(3.0 3.0)'::geometry::box2d && geom
----
distribution: local
vectorized: true
·
• filter
│ filter: 'BOX(3 3,3 3)' && geom
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 31 spans

query T
EXPLAIN SELECT k FROM geo_table2 WHERE 'LINESTRING(1.0 1.0, 5.0 5.0)'::geometry ~ geom
----
distribution: local
vectorized: true
·
• filter
│ filter: '010200000002000000000000000000F03F000000000000F03F00000000000014400000000000001440' ~ geom
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 33
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 33 spans

query T
EXPLAIN SELECT k FROM geo_table2 WHERE geom ~ 'LINESTRING(1.0 1.0, 5.0 5.0)'::geometry::box2d
----
distribution: local
vectorized: true
·
• filter
│ filter: geom ~ 'BOX(1 1,5 5)'
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 30
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 30 spans
