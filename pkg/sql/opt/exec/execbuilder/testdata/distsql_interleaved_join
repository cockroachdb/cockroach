# LogicTest: 5node-dist

# The following tables form the interleaved hierarchy:
#   name:             primary key:                # rows:   'a' = id mod X :
#   parent1           (pid1)                      40        8
#     child1          (pid1, cid1)                150       66
#       grandchild1   (pid1, cid1, gcid1)         410       201
#     child2          (pid1, cid2, cid3)          15        7
#       grandchild2   (pid1, cid2, cid3, gcid2)   51        13
#   parent2           (pid2)                      5         2
# Additional rows in child1, child2, and grandchild1 with no corresponding
# parent row are also inserted.
#
# All IDs belonging to a table (pid1 --> parent1, cid1 --> child1, cid2,cid3
# --> child2, etc.) start from 1 up to (# rows).
# Foreign keys are modded by their ancestor's (# rows). For example, for child1
# row with cid1=500, we take ((cid1-1) % 200 + 1) = 100 as pid1.
# One exception is cid3, which is taken as cid2 % 15.
# There's a column 'a' that's modded by a factor.
#
# This allows us to test the following edge cases (in order of tests):
#   - one-to-many (parent1 - child1)
#   - one-to-one and one-to-none (parent1 - child2)
#   - parent-grandchild (parent1 - grandchild1)
#   - multiple interleaved columns (child2 - grandchild2)
#   - additional ancestor above (child2 - grandchild2)
#   - no interleaved relationship (parent1 - parent2, parent2 - child1)
#   - TODO(richardwu): sibling-sibling (child1 - child2)

#################
# Create tables #
#################

statement ok
CREATE TABLE parent1 (pid1 INT PRIMARY KEY, pa1 INT)

statement ok
CREATE TABLE parent2 (pid2 INT PRIMARY KEY, pa2 INT)

statement ok
CREATE TABLE child1 (
  pid1 INT,
  cid1 INT,
  ca1 INT,
  PRIMARY KEY(pid1, cid1)
)
INTERLEAVE IN PARENT parent1 (pid1)

statement ok
CREATE TABLE child2 (
  pid1 INT,
  cid2 INT,
  cid3 INT,
  ca2 INT,
  PRIMARY KEY(pid1, cid2, cid3)
)
INTERLEAVE IN PARENT parent1 (pid1)

statement ok
CREATE TABLE grandchild1 (
  pid1 INT,
  cid1 INT,
  gcid1 INT,
  gca1 INT,
  PRIMARY KEY(pid1, cid1, gcid1)
)
INTERLEAVE IN PARENT child1 (pid1, cid1)

# No foreign key since we are permitting the rows to overflow out of child2
# for pid1 > 15.
statement ok
CREATE TABLE grandchild2 (
  pid1 INT,
  cid2 INT,
  cid3 INT,
  gcid2 INT,
  gca2 INT,
  PRIMARY KEY(pid1, cid2, cid3, gcid2)
)
INTERLEAVE IN PARENT child2 (pid1, cid2, cid3)

####################
# Split our ranges #
####################

# Split at parent1 key into five parts.
statement ok
ALTER TABLE parent1 SPLIT AT SELECT i FROM generate_series(8, 32, 8) AS g(i)

# Split at child1 keys in between parent1 parts (total 10 parts).
statement ok
ALTER TABLE child1 SPLIT AT SELECT pid1, pid1 + 40 FROM
generate_series(4, 36, 8) AS g(pid1)

# Split at grandchild2 keys in between the 10 parts (total 20 parts).
statement ok
ALTER TABLE grandchild2 SPLIT AT SELECT pid1, pid1 + 40, pid1, pid1 FROM
generate_series(2, 38, 4) AS g(pid1)

# Relocate the twenty parts to the five nodes.
statement ok
ALTER TABLE grandchild2 EXPERIMENTAL_RELOCATE
  SELECT ARRAY[((i-1)/2)::INT%5+1], i, i+20, i, i FROM generate_series(1, 39, 2) AS g(i)

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE parent1]
----
start_key                   end_key                     replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        {5}       5

query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE child1]
----
start_key                   end_key                     replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        {5}       5

query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE grandchild1]
----
start_key                   end_key                     replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        {5}       5

statement ok
SET CLUSTER SETTING sql.distsql.interleaved_joins.enabled = true;

#####################
# Interleaved joins #
#####################

# Select over two ranges for parent/child with split at children key.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMkl9r1EAUxd_9FMN52uiVZrL2JbCQYqOmrNmarSjUPITM7TaQZuLMRJSy312SWTAruqhPPgRy__zunDNzH2E_t4ixTdfpyxsxmFa8KjZvxW368Xp9keVicZltb7bv1oE4tDz1DX1luHNSXG2yXNT3TaukeL_N8tdi0TdKBuLDm7RIfSA-DWG45JVYBuIiv5wn65U4D0oQOq04rx7YIr6FBCECYYmS0Btds7XajKXHqTFTXxGHhKbrB-fTrnEtI8bQaaPYsAJBsauadprYdI5mH8p9Sai1YcQ_2Fw_1_1ZdESWe4Ie3OGckmBdtWPE0Z5mWuRMyy8GZ51j03L1hQuuFJsr3XRszsJjjWu-cxj9Ng-V-ZYcbhiEotndzyv-ukHwc0Bo-c4tEvksWJmxd_oFYTO4WCSSkoiSF5Sc43du5JGb6J_cyP_UTXjaTcG2153lP3r1cFwbVjv2S2f1YGq-NrqejvHhZuKmhGLrfHXpg6zzpVHgHJYn4fAIlj_D0V_B5f7J9wAAAP__b8hDcQ==

# Swap parent1 and child1 tables.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child1 JOIN parent1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMkl9r1EwUxu_fTzE8V5vXI80k9CawkGKjpqzZmq0o1FyEzOk2kGbizESUst9dklkwK1rUKy8COX9-Z55n5jzCfuqQYJdtshc3YjSdeFlu34jb7MP15iIvxOoy393s3m4CcWz53zc0922npLja5oUYasO9k-LdLi9eidXQKhmI96-zMvOB-DiGYcxrEQfiorhcJpu1OA8qEHqtuKgf2CK5hQQhAiFGRRiMbthababS49yYqy9IQkLbD6Pzade6jpFg7LVRbFiBoNjVbTdPbHtHiw_VoSI02jCS72yhn-vhLDohqwNBj-54TkWwrt4zkuhACy1yoeUng_Pesem4_swl14rNlW57NmfhqcYN3zlMftuH2nxN_Q2DULb7-2XheN0g-DkgdHznVql8FqzN1Dz_grAdXSJSSWlEaUzpOX7lRp64if7KjfxH3YRPuynZDrq3_FuvHk5rw2rPfumsHk3D10Y38zE-3M7cnFBsna_GPsh7X5oELmH5JByewPJHOPojuDr89y0AAP__YF9Dbw==

# Select over two ranges for parent/child with split at grandchild key.
# Also, rows with pid1 <= 30 should have 4 rows whereas pid1 > 30 should
# have 3 rows.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 ON parent1.pid1 = child1.pid1 WHERE parent1.pid1 >= 29 AND parent1.pid1 <= 31 ORDER BY parent1.pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUUcFu00AQvfMVq3dK6EK9Dj1gKZILMcJVsItTCVDxwfJO05Vcr9ldI1Dkf0e2g1pXCQJuPVjyzLw3783bHey3CgE20Tp6e8VaU7F3WfqBXUefL9fnccJmq3hztfm4nrM95PkIaApDtRPsIo0TVt6qSgqWJr_bLxslBVvuB2P16X2URWw2QXxtPW9BS-a_nrPzZHVoWi7ZQsxZmq2ijL35MlHIwVFrSUlxRxbBNQQ4zpBzNEaXZK02fXs3gGL5A4HHoeqmdX075yi1IQQ7OOUqQoC4dmQqKr5TRoUkc6FVTea0XyvJFaoaVNZ049BrqLvC_Az3jsCRqe3tw8l4PjjGPeCo6MbNQnEyX5oeO_yCI21dwELBQ5-HCx6-4uEZ8o5Dt-7erHXFlhCIjh856P4ObSQZklPbqnb80QeOUJwg7w5kkegXujn1JzuOefInnsR_hew9jZAPHJSRbXRt6a-i8vqsSW5pfDGrW1PSpdHlIDOW6cAbGpKsG6diLOJ6GA0GH5LFH8mLCdl7TPb_STnvnv0KAAD__0A7WLM=

# Parent-child where pid1 <= 15 have one joined row and pid1 > 15 have no
# joined rows (since child2 only has 15 rows up to pid1 = 15).
# Note this spans all 5 nodes, which makes sense since we want to read all
# parent rows even if child rows are non-existent (so we can support OUTER
# joins).
# TODO(richardwu): we can remove nodes reading from just one table for INNER
# joins or LEFT/RIGHT joins.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 >= 12 ORDER BY pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMlE9v00AQxe98itU7JXRQvY7Tg6VKBmrAVbCLUwSo-GB5p6kl12vWawSK8t2R7UptKsqf5JLDSrs783beb6SdNdpvFXwsw0X4-lJ0phJv0uS9uAo_XyxeRrGYnEXLy-WHxVTcpTwfE5rccG2lOE-iWBQ3ZaVc8XEZxW_FpCmVnIpP78I0FP1efO0cZ8anQroiSc_CVLz6MgQyEGqtOM5vuYV_BQmCC8IMBA-EOTJCY3TBbatNn7IeBJH6Ad8hlHXT2f46IxTaMPw1bGkrho-otmwqzr9zyrlic67Lms2xA4Jim5fVUHHB1xZ9jfI2Nz-DOyoQ0nJ18zAyIoIwvgNCxdd2Esij6anpc4ctCElnfRFIClwKPArmFJwg2xB0Z-_NtjZfMXy5oSeA7jm0UWxYbdsua0uPFgiBPEK2-U0vYv1CN8fzrTee8uRueZI7NVkebpPdnYDcwwWa7QQ0O1wgbycg73CB_jKoUm4bXbf8T7_T6b83qxWPQ6LVnSn4wuhiKDMek0E3XChu7RiV4yGqh9Bg8KFY_lF8siV2HovdfSrP9hF7-4jn_yXONs9-BQAA___GQ0uJ

# These rows are all on the same node 1 (gateway).
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 IN (1, 11, 21, 31) ORDER BY pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMUE2L2zAQvfdXDHOK24FG6cfBUHDbuK2Da6d2SluCD8aaJALHciV52SX4vy-2Art7WNjbzHtP7-nNBe3_FkMs4zT-uoPBtPCtyH_CPv67TT8nGSzWSbkrf6UBXCWvvaCvDXdOwCZPMmhOqpUr-F0m2XdY9EqKAP78iIsYphkmG0EgBMFKELwTAeTFOi7gy79ZUCFhpyVn9ZkthnsUWBH2RjdsrTYTdJkFibzFcEmoun5wE1wRNtowhhd0yrWMISadY9NyfcMF15LNRquOzdslEkp2tWrnhJQPDqcMda7NXXRtg4SFOp4eM74aEnofJGz54BaReBN8MpN2HpEwH1wIkaBoRdF7ij5Q9BGrkVAP7uGz1tVHxlCM9PJCBdted5afFHjOeTlWhCyP7I9m9WAa3hrdzDF-zed3MyDZOs8KvySdp8ZqfHUfAAD__0Q3qDk=

# Parent-grandchild.
# We add the pa1 > 0 condition so a lookup join is not considered to be a better plan.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM parent1 JOIN grandchild2 USING(pid1) WHERE
    pid1 >= 11 AND pid1 <= 13
    OR pid1 >= 19 AND pid1 <= 21
    OR pid1 >= 31 AND pid1 <= 33
    OR pa1 > 0
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzslVGLm0AQx9_7KZZ50nbKuW5y7QkBj16u9UjN1aS0cPVBdC4neK5d19IS8t1LNLkzwZQ2gfQlD4K78__v7M5vYOZQfs_AgclwNHw3ZZXK2HUw_sjuhl9vR5eez4wrbzKdfBqZbCV52QiKSFGuObsZez6bqShP4oc0S2z2eeL575lRpAk32ZcPw2DIDMOo1-xbZVmCBoxzk136V6y1Gw8YF6bJxgHbFl90iW1udqpF59FCrNVFtNYyywwBIZcJ-dEjleDcAQcEGxAEIPQAoQ8hQqFkTGUp1VIyrw1e8hMcCyHNi0ovt0OEWCoCZw461RmBA16uSWUU_aCAooTUjUxzUmcWICSkozSrM47oXsMyR_oYqV_uqqyAdYBdp5km5dQVdNv1cxzH86dvV29120Vch1bVadsudtrspxM7fGJ3OiG2fK79VN51BBCCdPbQfmarYQChqQwgZHSvDZe_Mgdqaah_AWFcaYe5HF0b3R66fXTP0X0D4QJBVvqZQKmjGYHDF7iD0jOcKpcqIUXJJo0019jxQbjoAOzL17I462-csOtO9sad-F6dw0-dc9TOsfeiZJ8oHZWS2IuSOFE6KqXeXpR6J0r_bVZ2UAqoLGRe0l9NPGs5MimZUTN4S1mpmG6VjOs0zXJc--qNhErdRHmz8PI6VF-wbeZ_NJ9vmK1ts31IZnGIuXeIuf9P5nDx4ncAAAD__zzZbHE=

query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM grandchild2 JOIN parent1 USING(pid1) WHERE
    pid1 >= 11 AND pid1 <= 13
    OR pid1 >= 19 AND pid1 <= 21
    OR pid1 >= 31 AND pid1 <= 33
    OR pa1 > 0
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzslVFr2zAUhd_3K8R9sjeNWlayrYaAyppuLpnTORkbdH4w1m1qcC1PlsdGyH8fsZPWCc7YEkhf8hCIdM_Rlc8nuHMof2TgwWQ4Gr6fkkpn5CocfyK3w283ows_INalP5lOPo9sspK8bAQzHecyuU8z6ZLrsR-QItaYG0a-TPzgA7GKVDKbfP04DIfEsqx6Tb5XjsNxQBizyUVwSVq7yYAwbttkHJJt8XmX2GV2p5p3Hs35Wl3Eay1x7Ago5EpiED9gCd4tMKDgAgUOFHpAoQ8RhUKrBMtS6aVkXht8-Qs8h0KaF5VZbkcUEqURvDmY1GQIHvi5QZ1h_BNDjCXqa5XmqM8coCDRxGlWdxzhnYFlj_Qh1r9FK1agEKaz-3Z1lfG6Qq7SzKD26oBFO17P8_xg-m4VhWhnvC6twmvbznfa3McTO3x8dzvOt3zCfUx_XQEKTTRAIcM7Ywn2yh7o5QfWf4HCuDIeEYwKlwpORY-KPhVvIVpQUJV5QlCaeIbgsQXdgemJTpUrLVGj3MSR5oZ2_CBadBAO1GtVnPU3Tth1J3fjTmyvp8NOT-e4T8fdC5N7wnRcTHwvTPyE6biYenth6p0wPd-87MAUYlmovMR_mnrOcmyinGEzfEtV6QRvtErqNs1yXPvqDYmlaaqsWfh5Xaov2Dazv5rfbJidbbN7SGd-iLl3iLn_X-Zo8eJPAAAA__9YgG6h

query TTT
EXPLAIN SELECT * FROM grandchild2 JOIN parent1 USING(pid1) WHERE
  pid1 >= 11 AND pid1 <= 13
  OR pid1 >= 19 AND pid1 <= 21
  OR pid1 >= 31 AND pid1 <= 33
  OR pa1 > 0
----
·                distributed         true
·                vectorized          true
render           ·                   ·
 └── merge-join  ·                   ·
      │          type                inner
      │          equality            (pid1) = (pid1)
      │          right cols are key  ·
      │          mergeJoinOrder      +"(pid1=pid1)"
      ├── scan   ·                   ·
      │          table               grandchild2@primary
      │          spans               ALL
      └── scan   ·                   ·
·                table               parent1@primary
·                spans               ALL
·                filter              ((((pid1 >= 11) AND (pid1 <= 13)) OR ((pid1 >= 19) AND (pid1 <= 21))) OR ((pid1 >= 31) AND (pid1 <= 33))) OR (pa1 > 0)

# Join on multiple interleaved columns with an overarching ancestor (parent1).
# Note there are 5 nodes because the filter cid2 >= 12 AND cid2 <= 14
# creates a giant parent span which requires reading from all rows.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM child2 JOIN grandchild2 ON
    child2.pid1=grandchild2.pid1
    AND child2.cid2=grandchild2.cid2
    AND child2.cid3=grandchild2.cid3
  WHERE
    child2.pid1 >= 5 AND child2.pid1 <= 7
    OR child2.cid2 >= 12 AND child2.cid2 <= 14
    OR gcid2 >= 49 AND gcid2 <= 51
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzslU1r20wQx-_Pp1jmZD2ZNl5JzovAsKFxqIIrp06ghVQHoZ0oAkXrrlalJfi7F0lWLDlJXxxILz4YrJn57cz-_wtzD8XXDDy4nEwn765YqTN2Np99YNeTzxfTEz9gg1P_8ury49Riq5L_m4L4Ns2kzc5nfsASHeVyFZgFbDBo_r9dpJKzcTddhyx2EpyytihOpb1RVIWsR1XO4yrHYp_eT-YTNuj3_FIOhw6N2ah_yDoXj9mhZbHZfD1sPUcLcvuJIVuSu1bLJj3KPV5RSa9-xC0rBIRcSQqiOyrAuwYOCDYgOIDgAsIIQoSFVjEVhdJVyX0N-PI7eEOENF-UpgqHCLHSBN49mNRkBB74uSGdUfSN5hRJ0ucqzUnvDwFBkonSrO44pRsDVY_0LtI_RHMzQJinyW030dG4zbKzNDOkvUpn0ZHX8zw_uDpa3Vp0xG0zK51EV9oNqivsA9ZybkfcDc7tCPzAAUJze0DI6MYMBN9DYe-hcPassa4u0wsBwqw0HhMchY3CQeGiGKE4QHGI4gjFMYRLBFWatfyFiRICjy_xGYvWzpS50pI0yb4VaW7wNz8Il084Hag3arE_6p323Hx2bz6-1RPiuyf0ek_I3soie2fR61nkbGWRs7Po9Sxyt7LI3Vn0b3blExbNqViovKA_2nLDak2STKhZvIUqdUwXWsV1m-ZzVnN1QFJhmixvPvy8TtUDdmH-S_igBw83YfslnZ2XwO5L4NFfweHyv58BAAD__zDhjfE=

query TTT
EXPLAIN
  SELECT * FROM child2 JOIN grandchild2 ON
    child2.pid1=grandchild2.pid1
    AND child2.cid2=grandchild2.cid2
    AND child2.cid3=grandchild2.cid3
  WHERE
    child2.pid1 >= 5 AND child2.pid1 <= 7
    OR child2.cid2 >= 12 AND child2.cid2 <= 14
    OR gcid2 >= 49 AND gcid2 <= 51
----
·           distributed        true
·           vectorized         true
merge-join  ·                  ·
 │          type               inner
 │          equality           (pid1, cid2, cid3) = (pid1, cid2, cid3)
 │          left cols are key  ·
 │          mergeJoinOrder     +"(pid1=pid1)",+"(cid2=cid2)",+"(cid3=cid3)"
 ├── scan   ·                  ·
 │          table              child2@primary
 │          spans              ALL
 └── scan   ·                  ·
·           table              grandchild2@primary
·           spans              ALL
·           filter             (((pid1 >= 5) AND (pid1 <= 7)) OR ((cid2 >= 12) AND (cid2 <= 14))) OR ((gcid2 >= 49) AND (gcid2 <= 51))

# Aggregation over parent and child keys.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT sum(parent1.pid1), sum(child1.cid1) FROM parent1 JOIN child1 USING(pid1) WHERE
    pid1 >= 10 AND pid1 <= 39
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUlVFv2jAUhd_3K6z7RDSrjROgEAkJtLItFYUOWm1Sl4covk0jhZg5zrQJ8d8nJ3QN1XAm4IWnxL735LvnOJLXkP9IwYPFeDL-cE8KmZKP89kteRx_u5uM_ClpXfuL-8WXiUW2LXmxbK1CiZliF6uEM4uWW9FzknJ2Eemd6hPbJnIz86ekKpOHhT_9RFqljnz9PJ6PqwX5Xti2iwPCbIuMptf13WhA3L4VAIVMcJyGS8zBewQGFByg4AKFNlDoQEBhJUWEeS6kblmXAp__As-mkGSrQuntgEIkJIK3BpWoFMEDP1MoUwx_4hxDjvJGJBnKS43gqMIkLYkTfFKgGckylL-HW39AywKZFcojQ72cJ_FzvbHy_lJ4aaRDPX1FAgopPqnWkL23BlJ3la9A4W-zC8GGgijUq4tchTGCxzb0_52O4lhiHCohL7u77hYPt60h08zyzbH2Ap29wFdOkQnJUSLfhXCMkmWY0u0Tgo15RmYfOqS7MyQ76PydMzz_Bqe1bK9Oc_7OQdG6Zxhtg9NatL3TROseFG37DKNtcFqLtn-aaNsHRWufYbQNTmvRdk5_IfwDOMd8JbIcd2D7vmzr-wF5jNXtkotCRngnRVRiquWs1JUbHHNVVVm18LOqpAesi5lR7OyI2VuxYyY3oF2jum0Wt4-Zu2MUd83k7jHkK6O4Zyb3jiH3zWdlN_wm5p_sLTvYvPsTAAD__7z_ms4=

###############
# Outer joins #
###############

# The schema/values for each table are as follows:
# Table:        pkey:                     pkey values (same):   values:
# outer_p1      (pid1)                    {1, 2, 3, ... 20}     100 + pkey
# outer_c1      (pid1, cid1, cid2)        {2, 4, 6, ... 28}     200 + pkey
# outer_gc1     (pid1, cid1, cid2, gcid1) {4, 8, 12, ... 36}    300 + pkey

# Split between 4 nodes based on pkey value (p):
# node 1:       p - 1 mod 20 ∈ [1...5)
# node 2:       p - 1 mod 20 ∈ [5...10)
# node 3:       p - 1 mod 20 ∈ [10...15)
# node 4:       p - 1 mod 20 ∈ [15...20)

statement ok
CREATE TABLE outer_p1 (
  pid1 INT PRIMARY KEY,
  pa1 INT
)

statement ok
CREATE TABLE outer_c1 (
  pid1 INT,
  cid1 INT,
  cid2 INT,
  ca1 INT,
  PRIMARY KEY (pid1, cid1, cid2)
) INTERLEAVE IN PARENT outer_p1 (pid1)

statement ok
CREATE TABLE outer_gc1 (
  pid1 INT,
  cid1 INT,
  cid2 INT,
  gcid1 INT,
  gca1 INT,
  PRIMARY KEY (pid1, cid1, cid2, gcid1)
) INTERLEAVE IN PARENT outer_c1 (pid1, cid1, cid2)

statement ok
ALTER TABLE outer_p1 SPLIT AT
  SELECT i FROM generate_series(0, 40, 5) AS g(i)

statement ok
ALTER TABLE outer_p1 EXPERIMENTAL_RELOCATE
  SELECT ARRAY[(((i-3)/5)%4)::INT + 1], i FROM generate_series(3, 40, 5) AS g(i)

query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE outer_p1]
----
start_key  end_key  replicas  lease_holder
NULL       /0       {5}       5
/0         /5       {1}       1
/5         /10      {2}       2
/10        /15      {3}       3
/15        /20      {4}       4
/20        /25      {1}       1
/25        /30      {2}       2
/30        /35      {3}       3
/35        /40      {4}       4
/40        NULL     {5}       5

### Begin OUTER queries

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_p1 FULL OUTER JOIN outer_c1 USING (pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzclN9r2zAQx9_3V4h7SrYbjRynD4aBS-YOF8_u7AQGxQxjXTODK3mSPFZC_vdhuaNLt-5H8pYHg3V33_veR4LbgvnSQgBFlETLFet1yy7z7D27iT5eJxdxyiZv42JVfEim7KHk5Vigekv6U8fZ5TpJ2FUWpw-hmrN1Eafv2KRrBJ-WgCCVoLS6IwPBDXBA8ABhDgg-ICygROi0qskYpYeSrRPE4hsEM4RGdr0dwiVCrTRBsAXb2JYggFha0i1VXymnSpC-Uo0kfTZYCLJV0zrHhG4tDB7NXaXvwx-TA0LebD7_mqqH1NgKEFb3HQUjZbZeRbljBYSWbu0k5K-mb_TQxf0OLUkK0gFbZhdJVCyjScgxnE-RhR6y0EcWLpCF51DuEFRvH9mMrTYEAd_hM_yP2L1UWpAmsc_ZSItPPih3v7m2VL1W3dliT_3cPN7ePPyg9_BO5j28g_jnJ8M_P4jfPxl-_yD-2cnw_2Uf52Q6JQ3902aZDauJxIbG5WZUr2u61qp2NuMxczoXEGTsmOXjIZYu5Qb8Wcz_KD7fE8-eir1jnOfHiP1jxIv_Epe7F98DAAD__xlhhIU=

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_gc1 FULL OUTER JOIN outer_c1 USING (pid1, cid1, cid2)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzkVd9rnEAQfu9fsczTXW9KbtVLW6Gw4WqKwWqqd1AIUsSdXAXj2nUtDcf970VNm9gm_XH3eA8K-8188818C7NbaL6U4ELiBd5yxVpdsvM4es-uvI-XwZkfsslbP1klH4Ipu0t5PiSo1pD-tMk5O18HAbuI_PAOyzlbJ374jk3qQnJk-Y-_NU0BoVKSwuyGGnCvgAOCBQg2IDiAsIAUodYqp6ZRukvZ9gRffgN3jlBUdWs6OEXIlSZwt2AKUxK44FeGdEnZV4opk6QvVFGRPukkJJmsKHvFgK4NdBrFTaZvxc8xACEuNp9_j_WhoRYgrG5rcoeRo_XKi_vBAaGkazMRfIbCmqGwZ9M3uqs2gjoJqiRply2js8BLlt5EcBSnU3wAWChejgAbxaspMuEgEwtk4jWkOwTVmnsrGpNtCFy-wyfsuneprZSWpEmObSkqg498kO4ecTpUL1R9shhVeKona9QT3-sKrWO9Qmsvu-xjtcveyy7nWO1y9rJrfqx2_eX5iampVdXQP23FebdWSW5oWM6NanVOl1rlvcxwjHpeD0hqzBDlw8Gv-lDf4EMy_yP5dESe_0q2DlG2DyE7h5AX_0VOd8--BwAA__9Hf78N

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_c1 LEFT OUTER JOIN outer_p1 USING (pid1) WHERE pid1 >= 0 AND pid1 < 40]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUVNFulFAQffcrbs7Tro4pF1YfSJrQWKo0CJWl0aQSQ2C6klAuXi7GZrP_boCadqtVu33aBxJmzpyZOSeZu0b3rYaLpR_6b1LR61qcJPF7ceF_OguPgkjMjoNluvwQzsVNyfOpQPWG9ZdCitA_ScVpHEQ3qVaK82UQvRWztirlXHx85yf-FIjPvWU5fCisuTiKju8mC7Gw5hkIjSo5yq-4g3sBCYINggPCAhmh1argrlN6gNdjcVD-gGsRqqbtzZDOCIXSDHcNU5ma4SJoDOua8--ccF6yPlVVw_rAAqFkk1f1OC3kS4NhRnWV62vvl0IQkmr19XeoHaCpFQjpdcvu5EZ8nvrJ6AkINV-amSdfzA_10GX8BSHujSs8SZ5NnkPegrzXyDYE1ZtbHZ3JVwxXbugBrbcS-0bpkjWX25qqxtC9D9nmDxZF6qVqDxZb7If2sbf2kTt5L_fSe3snrfZeanV20urspdZ_vB8Jd61qOv6v67CG8-JyxdOBdqrXBZ9pVYxjpjAeeWOi5M5MqJyCoBmhccG7ZPlX8qstsnWfbD9lsvMU8uJR5Gzz7GcAAAD__zmvF4k=

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_p1 RIGHT OUTER JOIN outer_gc1 USING (pid1) WHERE pid1 >= 1 AND pid1 <= 20]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUVF1rnFAQfe-vuJynbDslXt20ICwYGpsYtm7qGlpIpYhOrGC89notDcv-96JuSbZN-rF52gfBmTNnZs4Mc1dov1ZwsfTn_ptYdLoSb6PFO3Hlf7yYHwehODgJlvHy_XwiNiHPxwDVGdafGymi4PQsFueLINz4ikyKy2UQnoqDpszlRHw48yN_NMSnzrIcngk5EcfhyX1nNhO2NUlAqFXOYXrDLdwrSBBsEBwQpkgIjVYZt63SPbwagoP8O1yLUNZNZ3p3QsiUZrgrmNJUDBdBbVhXnH7jiNOc9bkqa9aHFgg5m7Sshmpzvjboa5Q3qb71fooEISqLL79DRdZjYy4Q4tuG3c1EFpexHw1zAaHia3PgyReTme7zDL8gLDrjCs8hzyZvSt4Rea_Ie41kTVCduRPTmrRguHJNjwi-09nVSuesOd8WVtaGHviQrB-YVahequZwupXhsZ7srZ7kTkuQ-7sEeyfB9v4KdnYS7Oyv4L-8KxG3japb_qdjsfpr47zg8WZb1emML7TKhjKjuRh4gyPn1oyoHI2gHqChwftk-Ufy0RbZ-pVsP6Wy8xTy9L_IyfrZjwAAAP__7i0feg==

########################
# Non-interleaved joins #
########################

# Join on siblings uses merge joiner.
# TODO(richardwu): Update this once sibling joins are implemented.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child1 JOIN child2 USING(pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMll1r2zAUhu_3K8zZTbsqyJI_mhgGHls3UtqkazoYlFy4sZYYUjuTHVgp-e_DcdY2XzryhEMuAnLiJzqvziM4z5D_nkIAg4uri8931lxOra-3_Wvr_uLnzdWnbs86-dId3A2-X51aq1c-VC-MJsk0ZtZlv9ur1tz6Mej2vlknsyRmp0MgkGax6EWPIofgHhgQ4EDAAQIuEPBgSGAms5HI80yWrzwvgW78BwKbQJLO5kX59ZDAKJMCgmcokmIqIIC76GEqbkUUC0ltIBCLIkqmy21mMnmM5FNYlQcEBrMozQOrRTl9Tz2fMuryat2mjHIrSmPLsbJiImQOwwWBbF6sdn7d8OHJmkT5ZH2rkMFwMSSQF9FYQMAW5P8SeIoE_JAJ-N4Er_-TyVhIEa__T5IWZPUBAiE7K8vQZ9a4HYd1LeRYXGZJKiRlG_2eil_FScjOTj_KZDyplkCgPy8CK2Qk5CR0SOiR0Cfh-cbpvCZ3NJLPU50cL3l2JullrWxG2XrH9xXlrhXF9IVieldij08t6pZrr_zebep61Ejj612Pw6bhe9Mc0VVhzV8Vrt9Hrmnlm361qP_SVL9al031m7KyRppzTSsPmobvTXNEVvLmrXT0--hoWrm7dS3absrFGhnami4eIAPfm-GIDHSaN9DV756raWC7RZn9r4OevXooW8jspiSsEaOjKeFhYvC9MY7IQ_ewo-yOcm5FPsvSXGjNo3YZSMRjUR1jns3lSNzIbLTcpnrsL7nlRBSLvKh-5dVDN61-KgvUh30TuGMCM6O6maemWY0j4_Vg3wTumMDMqO6NI9ui-SZtv6Ud9Xk7Spitn5m9SbsmgqthRHA1jAiuhjHBERoR3DMRXA0jgqthRHA1jAmO0Ijgvong5yaKqmFEUTWMKKqGMUURGlG0baKoGkYUVcOIomoYUxShEUU7JooyozkBoRFJERqxFKExTTEcmxXMhgWzacFsXDCcF8wGBmY0MbCtkaGWrWoas1VNY7aqadRWBMdsrTMsbfeszrRUl8ZsrTUv1cYxW7eGB6Wtw8W7vwEAAP__D4H1VA==

# Join on non-interleaved tables (with key) uses merge joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN parent2 ON pid1=pid2]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMllFr2z4Uxd__n0Lc_0u7KsiSHdc1FDy2DlLapGv6MCh-cGMtMaSWJymwUvLdh-NsaUIjOQhveapk6-d7zzmXKq-gfswhhvHVzdWnB7SQc_TlfnSLHq--3d18HAzRyefB-GH89eYUrY98aA5UmeSlpuh6NBiuNwyNhqgqcoou6z8sBQylyPkwe-YK4keggIEBBh8wBIChDymGSooJV0rI-sjrChjkPyH2MBRltdD14xTDREgO8SvoQs85xPCQPc35Pc9yLokHGHKus2K-KlPJ4jmTL8m6RcAwrrJSxahHGPmf9ENCScCadUQoYSgrc-QjoWdcKkiXGMRCr0tvKj69oFmmZtu1EgrpMsWgdDblENMl3iNh8x0hcy55vv2dotS4KDVgSOhZ3cLm_KI0Eqvyu-7ccjnl16IouSThNjfn3_VJQs9OL2UxnTVLwDBa6BglFCcMJz5Ogh0bNhL9FhLNLWNj60PRExWhdAvd10yw1QxtPzK05cjsmZgeCep1v34edDU-9CjG57zL8WHtE2NtE3uTTI-Ef-ILm3UdX9hVYuwoEou6TMxvn5jfNrH3Q-qRqKuc_KPI6aLLnIL2OQVtc4p6hHq_s-p7600dFvW6iuoAHX2TDvbmZ4BTe2xve_9ukqj3t-74dxq556oSpeKtLmyvlsLzKW8MU2IhJ_xOismqTLMdrbjV_ZdzpZu3682gbF7VDbaHAxc4dIEjF5haRNNd2ntLMzPMjDDdpr1d2ncJywxbwjLDlrDMsCUsi2aL6MAlrL6L3WbYYrcZtththi12WzRbRIcudp-72G2GLXabYYvdZthit0WzRXTkYveFi91m2GK3GbbYbYYtdls02_7zH3JZsgPpwIkOnejIiaY24YfdmOnyv18BAAD__5qWNlQ=

# Join on non-interleaved column uses hash joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 ON pa1 = ca1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMll1r2zwUx--fTyHOc9MOBVvySxNDwWPrWEqXdE0vBiUXbqw1htT2ZAVWSr77cJytzUt15AmP3NmJfpbOOT_B_xmqHwuIYHJxdfHhlizlgny6GX8hdxffrq_eD0fk5ONwcjv5enVKNkveNQvKRIpcMXI5Ho7IbJ4tUkbGI1ImjJyTWcKmQCEvUjFKHkUF0R0woMCBggcUfKAQwJRCKYuZqKpC1kue18Aw_QmRSyHLy6Wqf55SmBVSQPQMKlMLARHcJvcLcSOSVEjHBQqpUEm2WG9TyuwxkU_x5nxAYVImeRWRnsOd_50gdJjj8-a57zCHkyRPiUcKNReygumKQrFUm61fdrx_IvOkmm_vFXOYrqYUKpU8CIjYiv5dCcHhEpqudluBt1UBf7OCl-8s80KmQop0-0tZrmiWq3p707Wb9Qea8zmp5pdFlgvpsJ35LsR3dRLz03OZPczVSeydAoXxUkUkZjTmNPZo7NM42OnDS42edY0UPf-o6BWlw7bn-taB_K0DMXNtmKH5b2jTc_z6Oah_97u6BS3KCc1uQdfV6G4EO4obwTq9Edx8YtxUwFej6Tnhn_mFzXM9v7ArAVuUc2YoYMfV6ATkRyEg71RAz3xinqmAh6fUc_pdadeiiL6hdp3UoJPNOwrZvE5l883n5JvK1u85zP09rMDdvNTTYm5XvrWoY2DoW1dl6JTzj0I5_59FzgMHuRFVWeSVMMqObl2KSB9E07CqWMqZuJbFbL1N8zpec-vwkopKNf_y5mWYN3_VBzSHQxt4YAMzq3OzQE-zFi3j7eDQBh7YwMzq3Dst26P5Lu2-pj19vz0tzLZ75u7Svo3gehgRXA8jguthTHCERgQPbATXw4jgehgRXA9jgiM0InhoI_iZjaJ6GFFUDyOK6mFMUYRGFO3bKKqHEUX1MKKoHsYURWhE0YGNoswqJyA0IilCI5YiNKYphmNZwS4s2KUFu7hgmRfsAgOzSgxsLzK0slVPY7bqacxWPY3aiuCYrW3C0v7M2qSltjRma6u81BrHbN0LD1pbp6v_fgUAAP__X7Pfog==

# Prefix join on interleaved columns uses merge joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child2 JOIN grandchild2 USING(pid1, cid2)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMll9r2zwUh-_fTyHOe9OuCrZkx00MA4-tGylt0jUdDEou3FhLDKmdyQ6slHz34Thr_utYE_FyEbAdP5Z-5zyC8wrZzwn40L-6ufr4QGZyQj7f927J49X3u5sPnS45-9TpP_S_3pyT5SvvyheG43gScXLd63TJSIZJtHzwrd_pfiFn0zhilAzjiJ8PgEKSRqIbPosM_EdgQIEDBQcouEChCQMKU5kORZalsnjldQF0ol_g2xTiZDrLi8cDCsNUCvBfIY_ziQAfHsKnibgXYSSkZQOFSORhPFksM5XxcyhfgnJjQKE_DZPMJw2LW_9bTc9ilsvL65bFLE7CJCIOSfOxkBkM5hTSWb5cebXg0wsZh9l4c6mA0YDDYD6gkOXhSIDP5vTvQjT3h1grcc1J-MEkq0-lMhJSRJufipOcrv2AQsAuaMAvih3psTv8niLeCjkS12mcCGmxLRUm4kd-tqTP38t4NF7dAoXeLPfJIjkNHBq4NLikQYsG7a3arYriVCjKLKka7S3i3mDdtJFOLbYpxqGNuRsbY9W9Y9UOzwHjGpZbXDeL5-4RD5JGIE_jINWeih9MdcKHitV6qHj1VvOK7q51s2F5by33yuui5d4R3dUIdKnjbt2p-MFUJ-wur9Vdp3qrnYru7m9sw2od0ViNGC0dY-vJwg9mOWFPnVo9das32K3oaathMftPf5v28qZoMLOPqKpGkraOqrXF4QfjnLCt7j8bs_fs7F5k0zTJRKU52S6yiWgkygpn6UwOxZ1Mh4tlytvegluMZ5HI8vJfXt50kvKvYoPVYc8EbpvAzGjfrKmmmUbJuB7smcBtE5gZ7XurZDs036btddpR19tRwmyzZvY27ZoIroYRwdUwIrgaxgRHaETwpongahgRXA0jgqthTHCERgT3TAS_NFFUDSOKqmFEUTWMKYrQiKItE0XVMKKoGkYUVcOYogiNKNo2UZQZzQkIjUiK0IilCI1piuHYrGA2LJhNC2bjguG8YDYwMKOJge2MDFq2qmnMVjWN2aqmUVsRHLNVZ1ja7ZnOtKRLY7ZqzUvaOGbrzvCgtHUw_-93AAAA__-zfiya

# Subset join on interleaved columns uses hash joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child2 JOIN grandchild2 USING(pid1, cid3)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMlt9r2zoUx9_vXyHOfWkvCrZkx00MFzy2bkvpkq7pYFDy4MZaYkjtTHZgpeR_H47TNb-sY02Ll4eC5foT6XvOR3CeIfs-Ax-Gl9eXb-_IQs7I-9vBJ3J_-fXm-k2vT87e9YZ3w8_X52T9yX_lB-NpPIs4uRr0-mQiwyRav_gy7PU_kLN5HDFKxnHknI-AQpJGoh8-igz8e2BAgQMFByi4QKENIwpzmY5FlqWy-OR5BfSiH-DbFOJkvsiL1yMK41QK8J8hj_OZAB_uwoeZuBVhJKRlA4VI5GE8W20zl_FjKJ-C8mBAYTgPk8wnLYtb_1ptz2KWy8vnjsUsTsIkIg5J86mQGYyWFNJFvt75dcOHJzINs-n2VgGjgQOj5YhClocTAT5b0t8L0T4cYqPEDSfhlUlef2qRpDISUkTbPxYnOd34K06iy6y5A0X7GGbTqzROhLTYTudn4lt-tkpy_r-MJ9OXBVAYLHKfrFY04DRwaeDRoEOD7k6ZXvM7fyw_nqmfttK5xbYdqDqYu3UwVl8xVu-eVMjVstziuV28d494ZzQCeRp3pvFUvDLV6dwf1tj94fW7ymtqutG4luX96q5XPhfd9Y6oqUagCx1Nm07FK1Odjqa8MU2d-l11amp6uIctq3NEOTVidHTkbCYLr8xyOko6jSnp1u-lW1PJTsti9ksr2_Z6UfSS2Ue0UiNJV8fKxuLwyjinI6b7V0biA4e6Fdk8TTJRa6a1i1gimoiymFm6kGNxI9PxaptyOVhxq1EqElle_peXi15S_qs4YH3YM4G7JjAzOjdrq2mmUTKuB3smcNcEZkbn3inZHs13aXuTdtT1dpQw266ZvUu7JoKrYURwNYwIroYxwREaEbxtIrgaRgRXw4jgahgTHKERwT0TwS9MFFXDiKJqGFFUDWOKIjSiaMdEUTWMKKqGEUXVMKYoQiOKdk0UZUZzAkIjkiI0YilCY5piODYrmA0LZtOC2bhgOC-YDQzMaGJgeyODlq1qGrNVTWO2qmnUVgTHbNUZlvZ7pjMt6dKYrVrzkjaO2bo3PChtHS3_-RkAAP__w3sdvg==

# Multi-table staggered join uses interleaved joiner on the bottom join
# and a lookup join on the higher join.
query T
SELECT url FROM[EXPLAIN (DISTSQL)
  SELECT * FROM grandchild1
  JOIN child1 USING (pid1, cid1)
  JOIN parent1 USING (pid1)
ORDER BY pid1
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUVU1r20wQvr-_YplT_GZKvJJsJ4LCto1bFFw7lVNoCToI7cRRq2jV1aq0BP_3IitNpGBLwQYXHwzenXn0fOzA3EP-IwEX5uPJ-N0VK3TC3vuzj-x6_OVy8sabsqNzb341_zTpsYeW_6uGhQ5TGd3GieTsYuZN2cP_z3Nv-oEdZbHkyKJY8l5VzkJNqWnUe2zmn4999vYrK48BIKRK0jS8oxzca-CAYAGCDQgOIAwgQMi0iijPlS5b7lcAT_4Ct48Qp1lhyusAIVKawL0HE5uEwAUvNaQTCn-ST6EkfaHilPRJHxAkmTBOVowTujFQcsR3of4tah4BwY8Xt_XqY6H6FiAkdGOOBD9GYR33Xuuy__EICLPCuExwFBYKG4WDYoBiiGIEwRJBFeZJfm7CBYHLl_hyi6WMytzJoGnrr-KHNwCEiVLfi4x9U3HKVFqqWqtvhOJsozhro7gnTUpL0iSbcuLU4JofIAh-DMFyjbepeqWyE958rk3C7IYwvtVg8EMajA6LtcEY7n8wrK3ytw4p_w6LtfxH-8_f3ip_-5Dy77BYy_90__k7W-XvHFL-HRZr-Z_928W0RpxPeabSnF60WfrlbiK5oGrL5arQEV1qFa1oquNshVtdSMpNVeXVwUurUimwDuatYKsB5s_BVjtzB7Xdinbawc4uuget4GE783AX5lEr-LSd-XQX5rP2t-p3jEn7kD3nDpb__QkAAP__GHrGNw==

# Multi-table join with parent1 and child1 at the bottom uses interleaved
# joiner but induces a hash joiner on the higher join.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM parent1
  JOIN child1 USING (pid1)
  JOIN grandchild1 USING (pid1, cid1)
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUld9r2z4Uxd-_f4W4T823dySynV-GgceWDZcs6ZIOBsUPxr5NvbmSJ8tjI-R_H7a71ulSuSSQkYc8yNLJ-ZyjC1pD_j0FF5aT6eTtFStUyt4v5h_Z9eTL5fSNP2Nn7_zl1fLTtMPuj_xfH8hCRUJzdjH3Zyy6TdKYs89Lf_aBnWVJzDv1xkqFIv57F1lUngkAQciYZuEd5eBeAwcECxBsQHAAoQ8BQqZkRHkuVXlkXQn8-Ce4PYREZIUuPwcIkVQE7hp0olMCF3yhSaUU_qAFhTGpC5kIUt0eIMSkwyStHKd0o6H0SO5C9curUQFhkaxumxuNIIBQ_xcgpHSjzzx-jp513nmtStHDEhDmhXaZx9Gz0LPRc9DrozdAbwjBBkEW-hE_1-GKwOUbfHnEEqMO1-1vx_qDfX9LgDCV8luRsa8yEUyKkuqBb1TxjStEI5z1LNwjUyGkiklRvA2UCI07fhBsduSayVcy6_Ltq3oOyt6C4nsNBT-loWiJ2BiKwfGHwtqrf-uU-m-J2Oh_ePz-7b36t0-p_5aIjf5Hx-_f2at_55T6b4nY6H_8bx-lHXALyjMpcnrRy9Ir3yaKV1S_cLksVESXSkaVTb2cV7rqQ0y5rnd5vfBFvVUCNsXcKLa2xPyp2DI7t1jbRrVjFjuHcPeN4oHZeXCI89AoHpmdR4c4j8131WsZE_OQPfUONv_9DgAA__81O8JW
