# LogicTest: 5node-dist-opt

# The following tables form the interleaved hierarchy:
#   name:             primary key:                # rows:   'a' = id mod X :
#   parent1           (pid1)                      40        8
#     child1          (pid1, cid1)                150       66
#       grandchild1   (pid1, cid1, gcid1)         410       201
#     child2          (pid1, cid2, cid3)          15        7
#       grandchild2   (pid1, cid2, cid3, gcid2)   51        13
#   parent2           (pid2)                      5         2
# Additional rows in child1, child2, and grandchild1 with no corresponding
# parent row are also inserted.
#
# All IDs belonging to a table (pid1 --> parent1, cid1 --> child1, cid2,cid3
# --> child2, etc.) start from 1 up to (# rows).
# Foreign keys are modded by their ancestor's (# rows). For example, for child1
# row with cid1=500, we take ((cid1-1) % 200 + 1) = 100 as pid1.
# One exception is cid3, which is taken as cid2 % 15.
# There's a column 'a' that's modded by a factor.
#
# This allows us to test the following edge cases (in order of tests):
#   - one-to-many (parent1 - child1)
#   - one-to-one and one-to-none (parent1 - child2)
#   - parent-grandchild (parent1 - grandchild1)
#   - multiple interleaved columns (child2 - grandchild2)
#   - additional ancestor above (child2 - grandchild2)
#   - no interleaved relationship (parent1 - parent2, parent2 - child1)
#   - TODO(richardwu): sibling-sibling (child1 - child2)

#################
# Create tables #
#################

statement ok
CREATE TABLE parent1 (pid1 INT PRIMARY KEY, pa1 INT)

statement ok
CREATE TABLE parent2 (pid2 INT PRIMARY KEY, pa2 INT)

statement ok
CREATE TABLE child1 (
  pid1 INT,
  cid1 INT,
  ca1 INT,
  PRIMARY KEY(pid1, cid1)
)
INTERLEAVE IN PARENT parent1 (pid1)

statement ok
CREATE TABLE child2 (
  pid1 INT,
  cid2 INT,
  cid3 INT,
  ca2 INT,
  PRIMARY KEY(pid1, cid2, cid3)
)
INTERLEAVE IN PARENT parent1 (pid1)

statement ok
CREATE TABLE grandchild1 (
  pid1 INT,
  cid1 INT,
  gcid1 INT,
  gca1 INT,
  PRIMARY KEY(pid1, cid1, gcid1)
)
INTERLEAVE IN PARENT child1 (pid1, cid1)

# No foreign key since we are permitting the rows to overflow out of child2
# for pid1 > 15.
statement ok
CREATE TABLE grandchild2 (
  pid1 INT,
  cid2 INT,
  cid3 INT,
  gcid2 INT,
  gca2 INT,
  PRIMARY KEY(pid1, cid2, cid3, gcid2)
)
INTERLEAVE IN PARENT child2 (pid1, cid2, cid3)

####################
# Split our ranges #
####################

# Prevent the merge queue from immediately discarding our splits.
statement ok
SET CLUSTER SETTING kv.range_merge.queue_enabled = false;

# Split at parent1 key into five parts.
statement ok
ALTER TABLE parent1 SPLIT AT SELECT i FROM generate_series(8, 32, 8) AS g(i)

# Split at child1 keys in between parent1 parts (total 10 parts).
statement ok
ALTER TABLE child1 SPLIT AT SELECT pid1, pid1 + 40 FROM
generate_series(4, 36, 8) AS g(pid1)

# Split at grandchild2 keys in between the 10 parts (total 20 parts).
statement ok
ALTER TABLE grandchild2 SPLIT AT SELECT pid1, pid1 + 40, pid1, pid1 FROM
generate_series(2, 38, 4) AS g(pid1)

# Relocate the twenty parts to the five nodes.
statement ok
ALTER TABLE grandchild2 EXPERIMENTAL_RELOCATE
  SELECT ARRAY[((i-1)/2)::INT%5+1], i, i+20, i, i FROM generate_series(1, 39, 2) AS g(i)

# Verify data placement.
query TTITI colnames
SHOW EXPERIMENTAL_RANGES FROM TABLE parent1
----
start_key                   end_key                     range_id  replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     1         {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                11        {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     6         {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          12        {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  2         {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               13        {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  7         {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         14        {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  3         {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               15        {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  8         {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         16        {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  4         {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               17        {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  9         {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         18        {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  5         {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               19        {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  10        {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        20        {5}       5

query TTITI colnames
SHOW EXPERIMENTAL_RANGES FROM TABLE child1
----
start_key                   end_key                     range_id  replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     1         {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                11        {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     6         {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          12        {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  2         {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               13        {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  7         {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         14        {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  3         {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               15        {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  8         {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         16        {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  4         {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               17        {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  9         {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         18        {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  5         {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               19        {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  10        {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        20        {5}       5

query TTITI colnames
SHOW EXPERIMENTAL_RANGES FROM TABLE grandchild1
----
start_key                   end_key                     range_id  replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     1         {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                11        {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     6         {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          12        {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  2         {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               13        {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  7         {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         14        {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  3         {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               15        {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  8         {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         16        {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  4         {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               17        {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  9         {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         18        {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  5         {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               19        {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  10        {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        20        {5}       5

statement ok
SET CLUSTER SETTING sql.distsql.interleaved_joins.enabled = true;

#####################
# Interleaved joins #
#####################

# Select over two ranges for parent/child with split at children key.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUkkFr6zAQhO_vV5g5vcfbEstpL4aAriklKbkWH4S1SQSOZCS5tJT89yKrUCe0oe2tN69mZscf7Aus07xSBw6oHyBAqECYoyH03rUcgvNJysalfkJdEozth5ifo4kdo8ZgndfsWYOgOSrTJb05NoTWeUb9bl25K9fPqjMjwQ3xbW1DCFHtGHV1pEm1mFR_sHhpI_uO1SNvWGn2t85Y9rPypAl3vI1IeOag_LPslWcbE_nG7PZTpd2bTich7wGh4238K8X_fwufvOMnCOtVIUWxKOQ8DUOsCylIViSvSd7gMzRxglb9CE38BrTyMtqGQ-9s4C_dQ5kOivWO8_UFN_iW771rx5o8rsfc-KA5xKzO87C0WUo_OA2Li-HyJCzOw9W3ws3xz2sAAAD__y3KHZU=

# Swap parent1 and child1 tables.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child1 JOIN parent1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUkkFr6zAQhO_vV5g5vcfbEstpL4aAriklKbkWH4S1SQSOZCS5tJT89yKrUCe0oe2tN69mZscf7Aus07xSBw6oHyBAqECYoyH03rUcgvNJysalfkJdEozth5ifo4kdo8ZgndfsWYOgOSrTJb05NoTWeUb9bl25K9fPqjMjwQ3xbW1DCFHtGHV1pEm1mFR_sHhpI_uO1SNvWGn2t85Y9rPypAl3vI1IeOag_LNs96bTCXxjdvup0CvPNiYl7wGh4238K8X_fwufzOMnCOtVIUWxKOR1GoZYF1KQrEjOSd7gMzRxglb9CE38BrTyMtqGQ-9s4C_dQ5kOivWO8_UFN_iW771rx5o8rsfc-KA5xKzO87C0WUo_OA2Li-HyJCzOw9W3ws3xz2sAAAD__yRsHZU=

# Select over two ranges for parent/child with split at grandchild key.
# Also, rows with pid1 <= 30 should have 4 rows whereas pid1 > 30 should
# have 3 rows.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 ON parent1.pid1 = child1.pid1 WHERE parent1.pid1 >= 29 AND parent1.pid1 <= 31 ORDER BY parent1.pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUUcFq6zAQvL-vMHt6JSqxnOZiCOiaUpKSa_FBWBtH4EhmtS4twf9eJB8Sl6S0vfXm3ZnR7IxP4LzBjT5igPIFJAhYQiWgI19jCJ7ieiStzRuUuQDrup7juhJQe0IoT8CWW4QS1o6RWtSvuENtkB69dUjz-KxB1rZNLk-4Z4ge9qjpXXWa0HHk7GxzuETqg21NBMZ3QECLe_6v5OxuRZGbPkHAdpMpma0ytYhDz2WmpFCFUAuhHoRaQjUI8D2fLw-sG4RSDuJGunMoTwYJzTSDkjOohisVbPy97-bFhH3LvZi4y191m__Bbq-k22HovAv4rd7yWDyaBscfFXxPNT6Tr5PNOG6TLi0MBh5ROQ5rl6B04KVYfileTMT5Z3HxI-dq-PcRAAD__3DaHjA=

# Parent-child where pid1 <= 15 have one joined row and pid1 > 15 have no
# joined rows (since child2 only has 15 rows up to pid1 = 15).
# Note this spans all 5 nodes, which makes sense since we want to read all
# parent rows even if child rows are non-existent (so we can support OUTER
# joins).
# TODO(richardwu): we can remove nodes reading from just one table for INNER
# joins or LEFT/RIGHT joins.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 >= 12 ORDER BY pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUlM_K2zAQxO99CjOnlmyJ5T85GAK6ppSk5Fp8MNYmMTiWkeTSEvzuRfYhcWna73NOvlnaHc_8FrQ3NFrxvriyRfYdAoQIhBiEBIQUOaE1umRrtfEto2CnfiILCVXTds5f54RSG0Z2g6tczciwaxybmosffORCsfmiq4bNOgRBsSuqenD8yicH71FdC_NLtoXhxvkYx-p8eayUl6pWPtv4HxBqPrmPUqw-bY3vHT5BOOwDKYJtID3EoXNZIAXJiGRCMiW5Qd4TdOfuya0rzoxM9PSE7g6ljWLDasogxQp5_5cR7PVn3a7TSfcz92jiLmbNVixkttEsumghdPEsunghdMksumQhdP_ZaUe2rW4sv-lFh34lsDrzuEKs7kzJ34wuB5vxeBh0w4Vi68aqGA-7ZigNAR_F4p_izUQc_imOXnGOXxEnr4jTd4nz_sPvAAAA__9VWS06

# These rows are all on the same node 1 (gateway).
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 IN (1, 11, 21, 31) ORDER BY pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMUE1LxDAUvPsrypwUH7hZPw6BhVwrsiu9Sg-hedsNdJOSvIqy9L9Lm4N6ELxlPjKTyQUhOt7bM2foNyi0hDHFjnOOaaGKoXYf0BuCD-MkC90SupgY-gLxMjA06iCcBrbv3LB1nJ6jD5zuNiA4FuuHteGFj4Klw59t-jSjTRxEgdD4_vRT6U5-cFsQSg4IAx_l2qjbm11avOsRhMO-MqraVeZ-AZPoyigyWzIPZB7JPKGdCXGS75dnsT1Dq5n-v67hPMaQ-deav5I3c0tg13P5wRyn1PFrit1aU-BhvbcSjrMUVRVQhyLN7Xz1FQAA__9AfoaM

# Parent-grandchild.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM parent1 JOIN grandchild2 USING(pid1) WHERE
    pid1 >= 11 AND pid1 <= 13
    OR pid1 >= 19 AND pid1 <= 21
    OR pid1 >= 31 AND pid1 <= 33
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzslE9r3DAQxe_9FGJOu3RKLDlpqWBBhVLYUrxl6a31QVgTR-BIRpJLS_B3L7K7xBvSfymEHPbm0dOPN_iN5gacN1Tpa4ogPwMHBAEIF1Aj9ME3FKMPWZovbs03kAWCdf2Q8nGN0PhAIG8g2dQRSNi6RKEj_ZX2pA2F9946CmcFIBhK2naT0we6TJA97LUO31WvA7mU7bPA3tkuUZBstVKcfRmKomw2jJdSym31ac12-4VCG8ZfH5Q31Vu2ZAT_qaxnagGVBwkQ9ra9WrbTBu1Mc2U7Iw7qo_c0_zdA6OgyrRR_vt6E3Mj0CQi7iinONkyVuRiSZIqjEqjOUV2geonqFdQjgh_SbVgx6ZZA8hF_EehtjoPzwVAgcxRcPd4TeeVf-P6svHPxfmtxZM0fNEv8NEtPdZbEgwIVp0CfaqB_2PZ7ir13kf7q7Rd5eZBpad400Q-hoY_BN5PNXO4mbjowFNOs8rnYukmaGlzC_Lfw-RFc3IXF_ziX_wTX47MfAQAA__8YYyxn

query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM grandchild2 JOIN parent1 USING(pid1) WHERE
    pid1 >= 11 AND pid1 <= 13
    OR pid1 >= 19 AND pid1 <= 21
    OR pid1 >= 31 AND pid1 <= 33
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzslE9r3DAQxe_9FGJOu3RKLDtpqWBBhVJwKd5iemt9ENbEETiSkeTSEvzdi-wu8Yb0Xwohh7159PTjDX6juQHrNFXqmgKIz8ABIQeEC2gQBu9aCsH5JC0XS_0NRIZg7DDGdNwgtM4TiBuIJvYEAkobyfekvlJNSpN_74wlf5YBgqaoTD87faDLCMnDXCv_XXZeWd1emV4n-ySyd6aP5AXbbCRnX8YsK9od44UQoqw-bdm-Xim0Y_z1QXlTvWVrJuc_le1CraDiIAFCbbqrdUuD8mQjPyiP3s_y3wChp8u4kfz5dudTI_MnIOwrJjnbMfkyFWMUTHKUOcoC5TnKC5SvoJkQ3BhvwwpRdQSCT_iLQG9zHK3zmjzpo-Ca6Z7IK_fCDWfFnYv3W-dH1vxBs8RPs_RUZyl_UKD5KdCnGugftn1NYXA20F-9_SwtD9IdLZsmuNG39NG7drZZyv3MzQeaQlxUvhSlnaW5wTXMfwufH8HZXTj_H-fin-BmevYjAAD__-kZLGc=

query TTT
EXPLAIN SELECT * FROM grandchild2 JOIN parent1 USING(pid1) WHERE
  pid1 >= 11 AND pid1 <= 13
  OR pid1 >= 19 AND pid1 <= 21
  OR pid1 >= 31 AND pid1 <= 33
----
render          ·               ·
 └── join       ·               ·
      │         type            inner
      │         equality        (pid1) = (pid1)
      │         mergeJoinOrder  +"(pid1=pid1)"
      ├── scan  ·               ·
      │         table           grandchild2@primary
      │         spans           /11/#/56/1-/13/#/56/2 /19/#/56/1-/21/#/56/2 /31/#/56/1-/33/#/56/2
      └── scan  ·               ·
·               table           parent1@primary
·               spans           /11-/13/# /19-/21/# /31-/33/#

# Join on multiple interleaved columns with an overarching ancestor (parent1).
# Note there are 5 nodes because the filter cid2 >= 12 AND cid2 <= 14
# creates a giant parent span which requires reading from all rows.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM child2 JOIN grandchild2 ON
    child2.pid1=grandchild2.pid1
    AND child2.cid2=grandchild2.cid2
    AND child2.cid3=grandchild2.cid3
  WHERE
    child2.pid1 >= 5 AND child2.pid1 <= 7
    OR child2.cid2 >= 12 AND child2.cid2 <= 14
    OR gcid2 >= 49 AND gcid2 <= 51
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzsls-K2zAQh-99CjEnh0xZS5aTrsCgQimkFKeE3lofjDWbNXitIMulZcm7F9uNs162_5JLDjmORh8_iU8weoTaGkrzB2pAfQEOCAIQIkCQgBBDhrBztqCmsa7bMgAr8x1UiFDWu9Z3yxlCYR2BegRf-opAwar25CrKv9GGckPugy1rcjchIBjyeVn1iR_pzkOXUT7k7ocu7svKdCfYlNv7p42ty2sz7bL3ZeXJKRYEgebsaxuGESUsVkqt0s8z9jZ9x8ZGkbDlr8aMrTcsCLQYES6mjBgZLg_QgZIjJW-nlBypmB8oQBjuDQgV3flA8zlqMUcdzWeJ664xWQKEdcr6-yRMx8cDJUwvZocy6splv7n1immOWqCOUEvUMeoF6iXqN6hvIdsj2NYfLTU-3xIovsffmDwKbGvrDDkyE2PZ_gXXqX1tdzfxs40vR4tJND_pEfHrI7q4RyROMimuJi_OZHSSyehq8uJMypNMyqvJizP5l8_WhpqdrRv6pwkcdiOczJaGed_Y1hX0ydmijxnKdc_1C4YaP3T5UKzqvtUf8CnM_wgvJnD4HBbnJEfnwPIcOP4vONu_-hkAAP__KSY_SA==

query TTT
EXPLAIN
  SELECT * FROM child2 JOIN grandchild2 ON
    child2.pid1=grandchild2.pid1
    AND child2.cid2=grandchild2.cid2
    AND child2.cid3=grandchild2.cid3
  WHERE
    child2.pid1 >= 5 AND child2.pid1 <= 7
    OR child2.cid2 >= 12 AND child2.cid2 <= 14
    OR gcid2 >= 49 AND gcid2 <= 51
----
join       ·               ·
 │         type            inner
 │         equality        (pid1, cid2, cid3) = (pid1, cid2, cid3)
 │         mergeJoinOrder  +"(pid1=pid1)",+"(cid2=cid2)",+"(cid3=cid3)"
 ├── scan  ·               ·
 │         table           child2@primary
 │         spans           ALL
 └── scan  ·               ·
·          table           grandchild2@primary
·          spans           ALL

# Aggregation over parent and child keys.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT sum(parent1.pid1), sum(child1.cid1) FROM parent1 JOIN child1 USING(pid1) WHERE
    pid1 >= 10 AND pid1 <= 39
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUlVGLnDAQx9_7KWSe7mjgjLp7e8KBfdzS3pYtfSo-BDPnCV4iSSwti9-9ROmuLruxuL74ZjLz9zfzn8AcQEiOL-wdNcQ_gQKBAAiEQCACAitICVRKZqi1VDalE2z5b4h9AoWoamOvUwKZVAjxAUxhSoQYtsKgKpH9wj0yjuqzLASqB4vgaFhRtsQv-GrAMop3pv4kFVMojM2xAW9Xm9hL7HFf5G_9xOytKPkx8C-RJLb6jgQESnw1dwn9eP-sbFb7CQR2L15CvWevTT4qQ0gbArI2p5a0YTlCTBvy_21_ynOFOTNSPayHrX7_8fUuobaA9iu4vwoMrgJPnFpIxVEhH0DSxl0S9afWFA5qopNmHyx99iNt94x-nGf2wSSfw6X7PNJ2z-fNPD6Hk3yOlu7zSNs9n5_m8Tma5LO_dJ9H2u75vJp_Z1wA7lFXUmg82x2X_-zbnYI8x24BaVmrDL8pmbWY7rhrde0FR226KO0OW9GFbIF9MXWKg4GYnosDN3kEHTrVkVsc3VL3yileu8nrW8iPTvHGTd7cQn5yz8ofeSbuR3bOTpsPfwMAAP__nfNwjw==

###############
# Outer joins #
###############

# The schema/values for each table are as follows:
# Table:        pkey:                     pkey values (same):   values:
# outer_p1      (pid1)                    {1, 2, 3, ... 20}     100 + pkey
# outer_c1      (pid1, cid1, cid2)        {2, 4, 6, ... 28}     200 + pkey
# outer_gc1     (pid1, cid1, cid2, gcid1) {4, 8, 12, ... 36}    300 + pkey

# Split between 4 nodes based on pkey value (p):
# node 1:       p - 1 mod 20 ∈ [1...5)
# node 2:       p - 1 mod 20 ∈ [5...10)
# node 3:       p - 1 mod 20 ∈ [10...15)
# node 4:       p - 1 mod 20 ∈ [15...20)

statement ok
CREATE TABLE outer_p1 (
  pid1 INT PRIMARY KEY,
  pa1 INT
)

statement ok
CREATE TABLE outer_c1 (
  pid1 INT,
  cid1 INT,
  cid2 INT,
  ca1 INT,
  PRIMARY KEY (pid1, cid1, cid2)
) INTERLEAVE IN PARENT outer_p1 (pid1)

statement ok
CREATE TABLE outer_gc1 (
  pid1 INT,
  cid1 INT,
  cid2 INT,
  gcid1 INT,
  gca1 INT,
  PRIMARY KEY (pid1, cid1, cid2, gcid1)
) INTERLEAVE IN PARENT outer_c1 (pid1, cid1, cid2)

statement ok
ALTER TABLE outer_p1 SPLIT AT
  SELECT i FROM generate_series(0, 40, 5) AS g(i)

statement ok
ALTER TABLE outer_p1 EXPERIMENTAL_RELOCATE
  SELECT ARRAY[(((i-3)/5)%4)::INT + 1], i FROM generate_series(3, 40, 5) AS g(i)

query TTITI colnames
SHOW EXPERIMENTAL_RANGES FROM TABLE outer_p1
----
start_key  end_key  range_id  replicas  lease_holder
NULL       /0       20        {5}       5
/0         /5       31        {1}       1
/5         /10      32        {2}       2
/10        /15      33        {3}       3
/15        /20      34        {4}       4
/20        /25      35        {1}       1
/25        /30      36        {2}       2
/30        /35      37        {3}       3
/35        /40      38        {4}       4
/40        NULL     39        {5}       5

### Begin OUTER queries

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_p1 FULL OUTER JOIN outer_c1 USING (pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzclE1r3DAQhu_9FWJOCZ0Syx85GAIqYQsOxi5uciqmGGuyNTiSkeTSEPzfi-xDutvtl_fmm6XRo9fzCOYFlJZUNE9kIf0MHBBCQIgAIQaEBGqEweiWrNXGH1mATH6HNEDo1DA6v10jtNoQpC_gOtcTpJApR6an5htV1Egyd7pTZK58hCTXdP2cmNOjA5_RPTXmWejRkfky-ENVt__6a6n1peUqQLh_HihlHx7ynJUP97uK3ZVZAQg9PboLwd9e3hh_y_wJCGXBBGc3TPj-KlKSTMpuy_f57tPt7kJwFNElMhEiEzEykSAT11BPCHp0r41a1-wJUj7hb2S8OhiVNpIMyYOm6-mErkK_08NVcnTwdHR4EM1XvUO4zXcIV8mItikjWiUj3qaMeJWMYJsy_jK7K7KDVpb-aRoFfpyR3NMy-6weTUsfjW7nmGVZzty8Icm6pcqXRabm0vyDP8P8j_D1ARwcw-E5ydE5cHwOnPwXXE9vfgQAAP__bK5tZg==

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_gc1 FULL OUTER JOIN outer_c1 USING (pid1, cid1, cid2)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzsldFr2zAQxt_3V4h7ssmNxrKTdoaCSpdBSrCH1z4NM4x1zQypZCR5rJT870M2o3WXlTR5zeN9d58-8TuQnkBpSVn1QBbS7xABAgeEGBASQJhBidAaXZO12viRwbCUvyGdIjSq7ZyXS4RaG4L0CVzjNgQpLJUjs6HqFxVUSTI3ulFkznyEJFc1mz5xRfcOfEbzUJlHoTtH5se69lNFs_75b69vDWcBwu1jSyn7crdasfzudlGwm3yZAcKG7l0gogkKPkERT8JL408bSYCQZywIRMQumZiH7Cr7zALBfXUe_i1jX1744YKUJJOy6_xqtfh2vQhEhGIe4guBozgfCTGKixCZSJCJGTLxCcotgu7cMzfrqjVBGm3xP2yfkXZKG0mG5Ihhud1BP9MfdXs2ezW4O5qPoqOD1spPa91jrfwgtvGJ7R5s44PYJie2e7BNDmI7PbF951O_g21BttXK0l4v-dR_BSTXNPwbVnempq9G133MUOa9rxckWTd0o6FYqr7VX_ClOXrTPB-Zp6_N_Jjk-Bhzcox59i5zuf3wJwAA___QpMHp

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_c1 LEFT OUTER JOIN outer_p1 USING (pid1) WHERE pid1 >= 0 AND pid1 < 40]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUlE9rg0AQxe_9FDKnlk6Jq6YHIbCXFAxBi6SnIkXcSSoYV3bX0hD87mX1kCZN_yWn3Jx9-_bNb2DcQi0FxfmaNITPwADBAwQfEALIEBolC9JaKisPlyPxDqGLUNZNa-xxhlBIRRBuwZSmIgghqg2pivI3SikXpGayrEmNXEAQZPKy6tPmtDRgM8p1rjZctobUS2F7SMvV61epsdLwFCAsNg2Fznz6sHCSp8U0dWZJFANCRUtzzdntzUTZV_pPQEhihzNn4vCxLVoTOpwh95D7yAPk95B1CLI1Oyht8hVByDr8BnzH29ZSCVIk9gCz7shoYnknm1FwcPF4tLcXzU6aObv8mXsngXuXD-6fBO5fPvgvv5eUdCNrTX9aItduIYkVDSurZasKelSy6GOGMul9_YEgbQaVDUVU91Lf4Gcz-9E83jO7h2bvnGT_HHPwL3PWXX0EAAD__3y68rA=

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_p1 RIGHT OUTER JOIN outer_gc1 USING (pid1) WHERE pid1 >= 1 AND pid1 <= 20]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzclE9rs0AQxu_vp5A5vS_vlLhqWhACeymtoWiR9FSkiDuxgnFldy0Nwe9eVg9p0vRfcsvN3WefeeY3MG6gkYLifEUawkdggOABgg8IAWQIrZIFaS2VlcfHkXiF0EWomrYz9jpDKKQiCDdgKlMThBA1hlRN-QullAtSc1k1pCYuIAgyeVUPaXe0NGAzqlWu1lx2htRTa3tIq_L5o1QWVhtrAcJi3VLopNHN7cJJHhbXqTNPohgQalqav5z9_zdTts7wCQhJ7HDmzBxu6ZLOhA73kXvIA-RT5JfIryDrEWRntmTa5CVByHr8hH4L3TVSCVIkdiiz_sB8Ynkh20mw9_BwtLcTzY4aPDuTwXtH0XtnQu8fRe-fCf03v5yUdCsbTT_aKdcuJYmSxg3WslMF3StZDDHjMRl8w4UgbUaVjYeoGaShwfdm9qV5umN2983eKcn-KebgV-as__MWAAD__72G-Cw=

########################
# Non-interleaved joins #
########################

# Join on siblings uses merge joiner.
# TODO(richardwu): Update this once sibling joins are implemented.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child1 JOIN child2 USING(pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzElkFr2zAUx-_7FOGdNqrRSLaTxlDQtYMlo-w2cnDjt8SQWkF2YKXkuw_HgyyOp2ftgXyra_2kv55_kP87lCbHZfaKFaQ_QIIABQIiEBCDgATWAg7WbLCqjG2WtMBT_gvSqYCiPBzr5t9rARtjEdJ3qIt6j5DC9-xlj8-Y5WjvpyAgxzor9udjDrZ4zeyb3uyKfS5hfRJgjvWfrS47vLxNdlm1u2Z1s34toKqzLUIqT-L_IiWOSIoVSf0z0mUfY3O0mHf3uWsOHrSq53Zf0W7xiylKtPeyM_E9_qw_ann36dEW2137JwhYLSdaTh4nuvnYq2OdTrQUWgkdCZ0IPRN63hnF5ZrRgGsey74r9KZfms_mcC-Tzsr-s-Ors-Xwry4DiegRaRZIRDmOiDKwiGr45FUgGTwizQPJoMaRQQWWIRo--SiQDB6RHgLJEI0jQxRYhnj45ONAMnhEWgSSIR5HhnjEvtKT7RmrgykrHNRGps3tMN9iO7PKHO0Gv1mzOR_TPq7O3PlXOMeqbt-q9uGpbF81AYfDMw684MCSlVsmblp6jEz5wTMOvODAkpW7M7IbWnXp6d905J535ITl9cymXTrmCO6GCcHdMCG4G6YEJ2hC8IQjuBsmBHfDhOBumBKcoAnBZxzB5xxF3TChqBsmFHXDlKIETSj6wFHUDROKumFCUTdMKUrQhKILjqKS1RMImpCUoAlLCZrSlMKprsArC7y2wKsLzL7AKwyS1RjkTWXwstVNU7a6acpWN03aSuCUrT5l6fab-bQlX5qy1asveeOUrTflwWnr-vThdwAAAP__Z2kpbQ==

# Join on non-interleaved tables (with key) uses merge joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN parent2 ON pid1=pid2]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzElVFr2zAQx9_3Kcw9bVQjluykqaGg1w6WjLK34Qc3viWG1DKSDCsl333YLmQxic5GoL3FsX66-_8u5N6hViVuilc0kP0CDgwEMEiAQQoMlpAzaLTaoTFKd0cG4Kn8A1nMoKqb1nZf5wx2SiNk72Are0TI4GfxcsRnLErUixgYlGiL6tiXaXT1Wug32RQaa8shPzFQrf2463zFy1t0KMzhEpbd-ZyBscUeIeMndqOn8z1Kl6ixHN9z1xU-n2rra-f6WuNs31Hv8ZuqatSL1eW1R_xtP0t-9-VRV_vD8BEYbDeR5NFjJDu129ZmkeRMCiYTJtORgHO4ZEK4GW1v1FfVLDgfnbxeO72ozacPm4caNg8_7PtgwxbThYtQwkV44etgwpPpwpNQwpPwwh-CCU-nC09DCZ_R09LVk_DqSdzsKdCPgMf_Zald6eoZTaNqg5NWVtzlwnKPgyqjWr3DH1rt-jLD47bn-uVRorHD24-Hp3p41TU4HU594JUPvPaBORGaj-n4X1q4YeGE-SUdj-nEZ1humBiWGyaG5YaJYRGZidCpz7CWPrrdMKHbDRO63TChm8hMhF756L730e2GCd1umNDthgndRGYi9NpH94OPbjdM6HbDhG43TOgmMlP__HOWpZhJp170yotee9GcCj5vY-anT38DAAD__zUYv7M=

# Join on non-interleaved column uses hash joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 ON pa1 = ca1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJy8llFr2zwUhu-_X1HOVQv6SCTZaWMY-HLdRTvK7oYv3PgsMaSWkRVYKfnvI_Egi-PpWDtEl2nySK_OeaDvBzSmwqfyDTvIvoMEAQoEaBCQgIAUCgGtNSvsOmMPP-mBx-onZHMBddPu3OHPhYCVsQjZB7jabREy-Fa-bvEFywrtbA4CKnRlvT1e09r6rbTveVtabJyEYi_A7Nzvs05HvL7fbMpucw7nCop9IaBz5Rohk3vxb5nS8UyrTb2tQiPps0jqr5FO5-waYyu0WJ2dVBxI6icj7_pcdpsvpm7QzuRg1lv84W5zdffJ1uuNu831HQh43rnsJpciVyLXIk9Eng5efHqNZrxmJOqT-d-0M5kO3z16d3J2t5y-XBlLuIBMi0jCycjCyasKp6YPWMVaekCm-0hLV5GXrq66dD19wDrW0gMyPURauo68dH3VpSfTB5zEWnpApmWkpSeRl55E6xMjQV6wa03T4aS2MD88Bas19qPpzM6u8Ks1q-M1_cfnI3f8J1lh5_pvVf_hsem_OgScDi848JIDS1ZumfppGTAyFQYvOPCSA0tW7sHILmg1pOd_0to_b-2F5fnM5kM64QjuhwnB_TAhuB-mBCdoQvCUI7gfJgT3w4TgfpgSnKAJwRccwe85ivphQlE_TCjqhylFCZpQ9IGjqB8mFPXDhKJ-mFKUoAlFlxxFJasnEDQhKUETlhI0pSmFU12BVxZ4bYFXF5h9gVcYJKsxyIvKEGSrn6Zs9dOUrX6atJXAKVtDytLlzkLaUihN2RrUl4JxytaL8uC1tdj_9ysAAP__U3kYdA==

# Prefix join on interleaved columns uses merge joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child2 JOIN grandchild2 USING(pid1, cid2)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMls9r2zAUx-_7K8w7tVQjkWznh6GgwS4dLB1lt5GDG70lhtQKsgMrJf_7sF3I4nh61jScHGXrIz299zl83yDXChfpCxaQ_AAODAQwCIFBBAxiWDLYGb3CotCm2tIAD-oXJGMGWb7bl9XnJYOVNgjJG5RZuUVI4Hv6vMUnTBWa0RgYKCzTbFtfszPZS2pe5WqTbZWA5YGB3pfvRx1PeH4NNmmxOWUlZ7JClgyKMl0jJPzA_q2quLuqtUlz9X9KE38t7XiUNgoNqvZRd0yKu-r-3js7XvsVzRq_6CxHM-KtIWzxZ3nzTt_em2y9OS6BweMiuJE8uA9kfBt8WnwObqSoVpP6575Mgvq5TIZMRkxOmZwxOW817NiJsEcn9nnXCzsfttAf9W7E49bO7rujk7t5f0H4cNo6VDUZWFt-WW359Wgr-g9JDKeOQ1XTgdURl1VHXI86Yf8hhcOp41DVbGB1wsuqE16POlH_IUXDqeNQ1XxgdaLLqhNdjzpEGH7CYqfzAnulqHH1cFRrbNpa6L1Z4TejV_U1zfKx5urIoLAom7-iWTzkza-qwP7wxAee-8Dcq24e22nu0DLhBk984LkPzL3qbrXsjBZtevwnHdr7HVphftqzcZuOfAS3w4TgdpgQ3A5TghM0IXjsI7gdJgS3w4TgdpgSnKAJwSc-gk99FLXDhKJ2mFDUDlOKEjSh6MxHUTtMKGqHCUXtMKUoQROKzn0U5V45gaAJSQmasJSgKU0pnMoKfmHBLy34xQXPvOAXGLhXYuBnkcHJVjtN2WqnKVvtNGkrgVO2uoSl85m5pCVXmrLVKS8545StZ-HBauvy8OF3AAAA___ImVxT

# Subset join on interleaved columns uses hash joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child2 JOIN grandchild2 USING(pid1, cid3)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzElsGK2zAQhu99imVOLagkkp1sYij42O1htyy9FR-80TQxZK0gOdBlybsX2y1pHFdjdYp6VOxP-jX-IP8r1EbjffmMDrKvIEGAAgEJCEhBwAIKAQdrNuicse0rPXCnv0M2F1DVh2PT_lwI2BiLkL1CUzV7hAy-lE97fMRSo53NQYDGpqz23TEHWz2X9iXf7Kq9VlCcBJhj83Or8w5PLze70u0u2VyKPIHiVAhwTblFyORJ_F2qxXiqrS1r_W-iqT9GO291rI3VaFFfbFa0JPXKyP0-lm73yVQ12pkcTH2P35q3XcZ3H2y13f1agICHY5PddCuRK5GnIl-KfCXy9WAA55sljJuNxL43781hJhfDGYyenV6cLad_cBlPw4BUy8gaysgaymgaqulDV_FUCEh1G1kFFVkFFU2FZPrQk3gqBKRaRVYhiaxCEk2FdPrQ03gqBKRaR1YhjaxC-l96ykioR3QHUzuc1ELm7bVQb7EfkzNHu8HP1my6Y_rlQ8d1f7kaXdM_Vf3iru4ftQGnw0sOvObAkpVbLvy0DBiZCoOXHHjNgSUr92BkV7Qa0vPf6cQ_78QLy8uZzYd0yhHcDxOC-2FCcD9MCU7QhOALjuB-mBDcDxOC-2FKcIImBF9yBL_lKOqHCUX9MKGoH6YUJWhC0RVHUT9MKOqHCUX9MKUoQROKrjmKSlZPIGhCUoImLCVoSlMKp7oCryzw2gKvLjD7Aq8wSFZjkFeVIchWP03Z6qcpW_00aSuBU7aGlKXrbxbSlkJpytagvhSMU7ZelQevrcXpzY8AAAD__5b5Mtw=

# Multi-table staggered join uses interleaved joiner on the bottom join
# and a lookup join on the higher join.
query T
SELECT url FROM[EXPLAIN (DISTSQL)
  SELECT * FROM grandchild1
  JOIN child1 USING (pid1, cid1)
  JOIN parent1 USING (pid1)
ORDER BY pid1
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzcVU9r204Qvf8-hZiTQ-aHvfpnWxDYQi8uwSm-Fh2EduKoVXbFalVagr97WS1NZOOsgn1w8XE0-_Te4z2YF5BK0Lp4phayb8AAIQSECBBiQEggR2i0KqltlbZPHGAlfkE2Q6hk0xn7OUcolSbIXsBUpibIYCUN6ZqKn7ShQpD-oipJejoDBEGmqOqe8Z4eDViO6rnQv_lWF1KUT1UtrJRNtX0abl8X7l-AUNOjmXB2izy8vbnT9v3rCAgP62DCWXAX8OQm-LT-HEx4aKe0X3YmCzhDHiKPkMfIE-Qp8jnkOwTVmTdvrSm2BBnb4cf9W43O-TTZ9_zXTlNoksb6uVfqR9cE31UlAyWtKifeaV8cFTtHvnxXafiu0jeBnVRakCaxpy7fHfGyVv-rZspmBy-Pc0d73OyklrCracmI_0FL0gu3JDwpqfBqkhrxP0hqfuGkopOSiq4mqRH_g6QWF04qPimp-GqSGvE_SGr5D93II0o31DZKtvShCzizN5TEltzBbVWnS_qqVdnTuPGhx_UfBLXGbZkbVtKtrMAhmHnB4R6YHYJDP_MIdeRFx35wfI7uxAtO_czpOcxzL3jhZ16cw7z0ZzUbqYm_ZIfc-e6_PwEAAP__SEW9zw==

# Multi-table join with parent1 and child1 at the bottom uses interleaved
# joiner but induces a hash joiner on the higher join.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM parent1
  JOIN child1 USING (pid1)
  JOIN grandchild1 USING (pid1, cid1)
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzclk9r2z4Yx--_VxGe069Mo5Fsp42hoOM6RjvCbsMHN36aGFwryMpYKXnvw3ZGbCfTE0egQ25N5Y_0_Pkcvh9Qqgyf0jesIP4JHBgIYBAAgxAYRJAw2Gi1xKpSuv6kBR6z3xBPGeTlZmvqfycMlkojxB9gclMgxPBYGtQFpr9wgWmG-qvKS9S3U2CQoUnzonnxG74aqN_I31L9LjepxtLUZSzy1bp7slznRVYftPcAgwJfzf-Sf7p50PW3zZ_A4PlpIvnkYSLrJp63Jp5IzqRgMmAyZDKCZMdAbc2-8kPBL--TdVqt-_XVbAjJLmFQmXSFEPMdO38IP9KXYt__bdS_-W9jK52W2b670aWJXmnin6UdrtqWSmeoMetdltQk9cmJ_r6k1Xq_WD7Y7H49TIaHBTEpbrpbCZvFREzeMzkfdH9oK3Bo60TNT-qz2tzyaDiAk2-Hvbf5Rcrz61KeGEJX-Zln5bln5bkf5cVF2onr0o4YQle7O8_aCc_aCT_aBRdpF1yXdsQQutrde9Yu8Kxd4Ee78CLtwuvSjhhCV7u5Z-1Cz9qF_nPliYoWWG1UWeFZqXFa94TZCtsZVWqrl_hdq2XzTPvzueGazJJhZdpT0f54LNujusDz4ZkLPHeBuVPdPLLTfMTIxDh45gLPXWDuVPdgZEe0GNLTLh3Y5x1YYd6f2XRIhy6C22FCcDtMCG6HKcEJmhA8chHcDhOC22FCcDtMCU7QhOAzF8HvXBS1w4SidphQ1A5TihI0oei9i6J2mFDUDhOK2mFKUYImFJ27KMqdcgJBE5ISNGEpQVOaUjiVFdzCgltacIsLjnnBLTBwp8TAjyLDKFvtNGWrnaZstdOkrQRO2TomLB3vbExaGktTto7KS6Nxytaj8GC1Ndn99ycAAP__c9_P7g==
