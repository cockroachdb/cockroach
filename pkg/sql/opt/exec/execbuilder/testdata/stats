# LogicTest: 5node

# Tests that verify we retrieve the stats correctly. Note that we can't create
# statistics if distsql mode is OFF.

statement ok
CREATE TABLE uv (u INT, v INT, INDEX (u) STORING (v), INDEX (v) STORING (u));
INSERT INTO uv VALUES (1, 1), (1, 2), (1, 3), (1, 4), (2, 4), (2, 5), (2, 6), (2, 7)

statement ok
CREATE STATISTICS u ON u FROM uv;
CREATE STATISTICS v ON v FROM uv

statement ok
set enable_zigzag_join = false

# Verify we scan index v which has the more selective constraint.
query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM uv WHERE u = 1 AND v = 1
----
·     distributed  true         ·       ·
·     vectorized   true         ·       ·
scan  ·            ·            (u, v)  ·
·     table        uv@uv_v_idx  ·       ·
·     spans        /1-/2        ·       ·
·     filter       u = 1        ·       ·

# Verify that injecting different statistics changes the plan.
statement ok
ALTER TABLE uv INJECT STATISTICS '[
  {
    "columns": ["u"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 100,
    "distinct_count": 100
  },
  {
    "columns": ["v"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 100,
    "distinct_count": 10
  }
]'

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM uv WHERE u = 1 AND v = 1
----
·     distributed  true         ·       ·
·     vectorized   true         ·       ·
scan  ·            ·            (u, v)  ·
·     table        uv@uv_u_idx  ·       ·
·     spans        /1-/2        ·       ·
·     filter       v = 1        ·       ·

# Verify that injecting different statistics with null counts
# changes the plan.
statement ok
ALTER TABLE uv INJECT STATISTICS '[
  {
    "columns": ["u"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 100,
    "distinct_count": 20,
    "null_count": 0
  },
  {
    "columns": ["v"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 100,
    "distinct_count": 10,
    "null_count": 0
  }
]'

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM uv WHERE u = 1 AND v = 1
----
·     distributed  true         ·       ·
·     vectorized   true         ·       ·
scan  ·            ·            (u, v)  ·
·     table        uv@uv_u_idx  ·       ·
·     spans        /1-/2        ·       ·
·     filter       v = 1        ·       ·

statement ok
ALTER TABLE uv INJECT STATISTICS '[
  {
    "columns": ["u"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 100,
    "distinct_count": 20,
    "null_count": 0
  },
  {
    "columns": ["v"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 100,
    "distinct_count": 10,
    "null_count": 90
  }
]'

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM uv WHERE u = 1 AND v = 1
----
·     distributed  true         ·       ·
·     vectorized   true         ·       ·
scan  ·            ·            (u, v)  ·
·     table        uv@uv_v_idx  ·       ·
·     spans        /1-/2        ·       ·
·     filter       u = 1        ·       ·

statement ok
ALTER TABLE uv INJECT STATISTICS '[
  {
    "columns": ["u"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 100,
    "distinct_count": 20,
    "null_count": 0,
    "histo_col_type":"INT4",
    "histo_buckets":[{
      "num_eq":50,
      "num_range":0,
      "distinct_range":0,
      "upper_bound":"1"
    },
    {
      "num_eq":20,
      "num_range":0,
      "distinct_range":0,
      "upper_bound":"2"
    },
    {
      "num_eq":5,
      "num_range":8,
      "distinct_range":7,
      "upper_bound":"10"
    },
    {
      "num_eq":5,
      "num_range":12,
      "distinct_range":9,
      "upper_bound":"20"
    }]
  },
  {
    "columns": ["v"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 100,
    "distinct_count": 10,
    "null_count": 90
  },
  {
    "columns": ["u", "v"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 100,
    "distinct_count": 25,
    "null_count": 90
  }
]'

# Test that we respect the session settings for using histograms and
# multi-column stats.
statement ok
set optimizer_use_histograms = false

query T
EXPLAIN (OPT, VERBOSE) SELECT * FROM uv WHERE u < 30 GROUP BY u, v
----
distinct-on
 ├── columns: u:1 v:2
 ├── grouping columns: u:1 v:2
 ├── internal-ordering: +1
 ├── stats: [rows=20.0617284, distinct(1,2)=20.0617284, null(1,2)=0]
 ├── cost: 37.7306173
 ├── key: (1,2)
 └── scan uv@uv_u_idx
      ├── columns: u:1 v:2
      ├── constraint: /1/3: (/NULL - /29]
      ├── stats: [rows=33.3333333, distinct(1)=6.66666667, null(1)=0, distinct(1,2)=20.0617284, null(1,2)=0]
      ├── cost: 36.6766667
      ├── ordering: +1
      ├── prune: (2)
      └── interesting orderings: (+1) (+2)

statement ok
set optimizer_use_multicol_stats = false

query T
EXPLAIN (OPT, VERBOSE) SELECT * FROM uv WHERE u < 30 GROUP BY u, v
----
distinct-on
 ├── columns: u:1 v:2
 ├── grouping columns: u:1 v:2
 ├── internal-ordering: +1
 ├── stats: [rows=33.3333333, distinct(1,2)=33.3333333, null(1,2)=0]
 ├── cost: 37.8633333
 ├── key: (1,2)
 └── scan uv@uv_u_idx
      ├── columns: u:1 v:2
      ├── constraint: /1/3: (/NULL - /29]
      ├── stats: [rows=33.3333333, distinct(1)=6.66666667, null(1)=0, distinct(1,2)=33.3333333, null(1,2)=0]
      ├── cost: 36.6766667
      ├── ordering: +1
      ├── prune: (2)
      └── interesting orderings: (+1) (+2)

statement ok
set optimizer_use_histograms = true

query T
EXPLAIN (OPT, VERBOSE) SELECT * FROM uv WHERE u < 30 GROUP BY u, v
----
distinct-on
 ├── columns: u:1 v:2
 ├── grouping columns: u:1 v:2
 ├── internal-ordering: +1
 ├── stats: [rows=100, distinct(1,2)=100, null(1,2)=0]
 ├── cost: 113.53
 ├── key: (1,2)
 └── scan uv@uv_u_idx
      ├── columns: u:1 v:2
      ├── constraint: /1/3: (/NULL - /29]
      ├── stats: [rows=100, distinct(1)=20, null(1)=0, distinct(1,2)=100, null(1,2)=0]
      │   histogram(1)=  0 50  0 20  8  5   12  5
      │                <--- 1 --- 2 --- 10 ---- 20
      ├── cost: 110.01
      ├── ordering: +1
      ├── prune: (2)
      └── interesting orderings: (+1) (+2)

statement ok
set optimizer_use_multicol_stats = true

query T
EXPLAIN (OPT, VERBOSE) SELECT * FROM uv WHERE u < 30 GROUP BY u, v
----
distinct-on
 ├── columns: u:1 v:2
 ├── grouping columns: u:1 v:2
 ├── internal-ordering: +1
 ├── stats: [rows=25, distinct(1,2)=25, null(1,2)=0]
 ├── cost: 112.78
 ├── key: (1,2)
 └── scan uv@uv_u_idx
      ├── columns: u:1 v:2
      ├── constraint: /1/3: (/NULL - /29]
      ├── stats: [rows=100, distinct(1)=20, null(1)=0, distinct(1,2)=25, null(1,2)=0]
      │   histogram(1)=  0 50  0 20  8  5   12  5
      │                <--- 1 --- 2 --- 10 ---- 20
      ├── cost: 110.01
      ├── ordering: +1
      ├── prune: (2)
      └── interesting orderings: (+1) (+2)
