# LogicTest: 5node-dist

subtest scrub

# TODO(radu): rework or remove these tests (the inner ORDER BY is ignored by
# the optimizer).
#
# # Verify the index check execution plan uses a merge join.
#
# statement ok
# CREATE TABLE test (k INT PRIMARY KEY, v INT, data INT, INDEX secondary (v) STORING (data))
#
# query T
# SELECT url FROM [EXPLAIN (DISTSQL)
#     SELECT leftside.v, leftside.k, leftside.data, rightside.v, rightside.k, rightside.data
#     FROM
#       (SELECT v,k,data FROM test@{FORCE_INDEX=[1]} ORDER BY v,k,data) AS leftside
#     FULL OUTER JOIN
#       (SELECT v,k,data FROM test@{FORCE_INDEX=[2]} ORDER BY v,k,data) AS rightside
#       ON leftside.v = rightside.v AND leftside.k = rightside.k AND leftside.data = rightside.data
#     WHERE (leftside.k IS NULL) OR
#           (rightside.k IS NULL)
# ]
# ----
# https://cockroachdb.github.io/distsqlplan/decode.html#eJyckc2K2zAQgO99CjGnLBlIJDs9CAq6dCFLGpdscio-uNY0a3AkM5Khy5J3L45hNw5x2vQ4I33zzc8bOG9pXRwogP4BEnKEhn1JIXjuUv2Hpf0Neo5QuaaNXTpHKD0T6DeIVawJNGyLnzVtqLDEszkgWIpFVZ_KNlwdCn41kUIEhKyNWhiFRqJJID8i-DZ-FA6x2BNoecR_lz97jsQzOfQaOUWjpmiS6ahG3aM5n1ENXYFK7-zdUyb_MWUyPiXCoYjli6jJaaFGremo9UPWOs-WmOzAlnfk375caf0b8Z6efOWIZ-mw_-1rQ1o87lYrke22XzfiKVuuAaGmX3FyNtzDF672L8MUIDxWdSTWYmKUWD6L9W61ehDZRkzM4j1-P4fE7iIJmhTNAs3n0Q0t7rnLhkLjXaDLTV2tPO_WQ3ZP_bqDb7mk7-zLk6YPsxN3SlgKsX-VfbB0_VPX4Dksb8LpAJaXsLoJJ7fNyR1mdQmnN-HFhTk_fvoTAAD__3P7gDg=
#
# # Verify the foreign key check execution plan uses a merge join.
#
# statement ok
# CREATE TABLE parent (
#   id INT PRIMARY KEY,
#   id2 INT,
#   UNIQUE INDEX (id, id2)
# )
#
# statement ok
# CREATE TABLE child (
#   child_id INT PRIMARY KEY,
#   id INT,
#   id2 INT,
#   FOREIGN KEY (id, id2) REFERENCES parent (id, id2)
# )
#
# query T
# SELECT url FROM [EXPLAIN (DISTSQL)
#     SELECT p.child_id, p.id, p.id2
#     FROM
#       (SELECT child_id, id, id2 FROM child@{NO_INDEX_JOIN} ORDER BY id, id2) AS p
#     FULL OUTER JOIN
#       (SELECT id, id2 FROM parent@{FORCE_INDEX=[2]} ORDER BY id, id2) AS c
#       ON p.id = c.id AND p.id2 = c.id2
#     WHERE (p.id IS NOT NULL OR p.id2 IS NOT NULL) AND
#           c.id IS NULL AND c.id2 IS NULL
# ]
# ----
# https://cockroachdb.github.io/distsqlplan/decode.html#eJycklFrnTAUx9_3KcJ58nID1bi9BAYZbAWL0-G8T0PEmXNtqEskidBS_O7DCGstvRvdY345__wO5-QRtJFYdL_QAf8BCTQUJmt6dM7YFW0FmbwHHlNQepr9ihsKvbEI_BG88iMCh7r7OWKFnUR7FQMFib5TY3i2v1WjbLvZm1Zpifft-a5VsrV4bqfOovYiVECzUDCzf3I43w0IPFno__WR7PvYZKtaSdbe4YPYyEUxuyh-8s3aWIkW5c7VrMl_lbzS_Ve0A94YpdFesX339cOEnFyf8pyUp_pLRW7KrAAKI559JNiRivR4-GjVcOsjkRypYMcDULhWo0fLSRRFgpHsOynKmhSnPD-QsiKRSHfsQD4Vn0kk3gf6nHz4Q4BCOXtOREIFoyK9OL70LXur0E1GO3w5xldfjtfZoRxw24Uzs-3xmzV90GzHMuQCkOj8dsu2Q6bDVfhYz8PJG8LsZZj9NZzuwvHSLO9-BwAA__9_viDb

subtest stats

statement ok
CREATE TABLE data (a INT, b INT, c FLOAT, d DECIMAL, PRIMARY KEY (a, b, c, d))

# Split into ten parts.
statement ok
ALTER TABLE data SPLIT AT SELECT i FROM generate_series(1, 9) AS g(i)

# Relocate the ten parts to the five nodes.
statement ok
ALTER TABLE data EXPERIMENTAL_RELOCATE
  SELECT ARRAY[i%5+1], i FROM generate_series(0, 9) AS g(i)

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW RANGES FROM TABLE data]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {1}       1
/1         /2       {2}       2
/2         /3       {3}       3
/3         /4       {4}       4
/4         /5       {5}       5
/5         /6       {1}       1
/6         /7       {2}       2
/7         /8       {3}       3
/8         /9       {4}       4
/9         NULL     {5}       5

query T
SELECT url FROM [EXPLAIN (DISTSQL) CREATE STATISTICS s1 ON a FROM data]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJy0lEGPojwYx-_vp2ie00xSAwV0HE5jfN2ExNVZ4bDJhEOVJy5ZpGxbkp01fvcNEjOLWUsT3IMHin9-__6epkdQPwoIIV4sF_OE1LIgnzbrz-Rt8fV1OYtW5OH_KE7iL8tHMt8sZsmCxMksieIkmsdEMbJeEd4mMq55ChRKkeGKH1BB-AYMKHhAwQcKAVAYQ0qhkmKHSgnZ_OV4DkTZTwhdCnlZ1bpZTinshEQIj6BzXSCEkPBtgRvkGUrHBQoZap4XZ0wl8wOX7y9NB6AQV7xUIRk5jPAyI4wI_Q0lUFjXOiQvDNITBVHrD5bSfI8QshO17xPzQ1WgdMbdLu1ynP_CkDDXdZuqseZmsHcT_MGrSyEzlJh1eXmp6fVv-65RQXq62Xq230vccy2kw1z7_uTBc12yrXffUavHm7vxO7th9mNlNmN12MjxBg22p9FlsJO7D9azV-FZqfBGjj9IRU-ji4qnu6vw7VX4Vir8kRMMUtHT6KJiencVgb2KwEpFMHLGg1T0NLqoeP6nN99fwBtUlSgVdri3vuw21x9me2yvUSVqucNXKXZnTPu4PufOCxkq3b5l7UNUtq-agn-GmTHsdcLsOuyZyT1o35gOzOFgSO-xMTwxkydDyE_G8NRMng4hP5tn5fYcE_Mhu2anp_9-BwAA__8-kRRf

statement ok
INSERT INTO data SELECT a, b, c::FLOAT, 1
FROM generate_series(1,10) AS a, generate_series(1,10) AS b, generate_series(1,10) AS c;

query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) CREATE STATISTICS s1 ON a FROM data]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzElUFvm0AQhe_9FaM5JdI6sIATh1Pc1JWsunZqOLSNfNiYkYuKWbq7qE0j__cKqJUS1bCWEuXgAwsz773PT_CA-keGIUaT2eQ6hlJl8H65-Ai3k883s_F0DuP5ePbl6wRO3k2jOPo0O4Xr5WQcTyCKx_E0iqfXEWgOizmIZjIRRqyQYS4TmostaQxvkSNDDxn6yDBAhkNcMSyUXJPWUlWPPNQD0-QXhi7DNC9KUx2vGK6lIgwf0KQmIwwxFncZLUkkpBwXGSZkRJrVMoVKt0LdX1UekGFUiFyHMHA4iDwBDtJ8I4UMF6UJ4aoypeRPDYpEEgJ3q23aiCwDk24pBFcjw7t7Q_tH_LNL-JC-xdWOoSzNo0dtxIYw5DtmnyMS2yIj5QzbGZrjKP1NtaXaVGREY_iQsHdQ-FGvzKVKSFHS1ktzw57-6sy42h10Pd5sFG2Ekcrhrr1_OPFcF-7K9Xcy-vRgGr-VhtvXgdvUweEDx7MphNdfiIuz0RGF6EmyL8T5sxfCs0foWSH0Bo7_Kgh7kuwRXjw7Qt8eoW-F0B84wasg7EmyRzh6doSBPcLACmEwcIY2CP1-hNw7gmBPkD3Byxd9sf9HeEm6kLmmlu6hzW71dqdkQ81XQstSrelGyXUt01wu6rn6ICFtmru8uZjmza3K4L_DvHPYaw3zp8Net3KPtN85HXQPB8f4rinWQP-2SFNuQnChrlB78bBz8Xm3q_OXcnXRuXjU7Wr0Uq4uu_9_t6d63cU9xtdq9-ZPAAAA__8zUIx5
