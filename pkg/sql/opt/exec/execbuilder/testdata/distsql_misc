# LogicTest: 5node

subtest scrub

# TODO(radu): rework or remove these tests (the inner ORDER BY is ignored by
# the optimizer).
#
# # Verify the index check execution plan uses a merge join.
#
# statement ok
# CREATE TABLE test (k INT PRIMARY KEY, v INT, data INT, INDEX secondary (v) STORING (data))
#
# query T
# EXPLAIN (DISTSQL)
#     SELECT leftside.v, leftside.k, leftside.data, rightside.v, rightside.k, rightside.data
#     FROM
#       (SELECT v,k,data FROM test@{FORCE_INDEX=[1]} ORDER BY v,k,data) AS leftside
#     FULL OUTER JOIN
#       (SELECT v,k,data FROM test@{FORCE_INDEX=[2]} ORDER BY v,k,data) AS rightside
#       ON leftside.v = rightside.v AND leftside.k = rightside.k AND leftside.data = rightside.data
#     WHERE (leftside.k IS NULL) OR
#           (rightside.k IS NULL)
# ----
# https://cockroachdb.github.io/distsqlplan/decode.html#eJyckc2K2zAQgO99CjGnLBlIJDs9CAq6dCFLGpdscio-uNY0a3AkM5Khy5J3L45hNw5x2vQ4I33zzc8bOG9pXRwogP4BEnKEhn1JIXjuUv2Hpf0Neo5QuaaNXTpHKD0T6DeIVawJNGyLnzVtqLDEszkgWIpFVZ_KNlwdCn41kUIEhKyNWhiFRqJJID8i-DZ-FA6x2BNoecR_lz97jsQzOfQaOUWjpmiS6ahG3aM5n1ENXYFK7-zdUyb_MWUyPiXCoYjli6jJaaFGremo9UPWOs-WmOzAlnfk375caf0b8Z6efOWIZ-mw_-1rQ1o87lYrke22XzfiKVuuAaGmX3FyNtzDF672L8MUIDxWdSTWYmKUWD6L9W61ehDZRkzM4j1-P4fE7iIJmhTNAs3n0Q0t7rnLhkLjXaDLTV2tPO_WQ3ZP_bqDb7mk7-zLk6YPsxN3SlgKsX-VfbB0_VPX4Dksb8LpAJaXsLoJJ7fNyR1mdQmnN-HFhTk_fvoTAAD__3P7gDg=
#
# # Verify the foreign key check execution plan uses a merge join.
#
# statement ok
# CREATE TABLE parent (
#   id INT PRIMARY KEY,
#   id2 INT,
#   UNIQUE INDEX (id, id2)
# )
#
# statement ok
# CREATE TABLE child (
#   child_id INT PRIMARY KEY,
#   id INT,
#   id2 INT,
#   FOREIGN KEY (id, id2) REFERENCES parent (id, id2)
# )
#
# query T
# EXPLAIN (DISTSQL)
#     SELECT p.child_id, p.id, p.id2
#     FROM
#       (SELECT child_id, id, id2 FROM child@{NO_INDEX_JOIN} ORDER BY id, id2) AS p
#     FULL OUTER JOIN
#       (SELECT id, id2 FROM parent@{FORCE_INDEX=[2]} ORDER BY id, id2) AS c
#       ON p.id = c.id AND p.id2 = c.id2
#     WHERE (p.id IS NOT NULL OR p.id2 IS NOT NULL) AND
#           c.id IS NULL AND c.id2 IS NULL
# ----
# https://cockroachdb.github.io/distsqlplan/decode.html#eJycklFrnTAUx9_3KcJ58nID1bi9BAYZbAWL0-G8T0PEmXNtqEskidBS_O7DCGstvRvdY345__wO5-QRtJFYdL_QAf8BCTQUJmt6dM7YFW0FmbwHHlNQepr9ihsKvbEI_BG88iMCh7r7OWKFnUR7FQMFib5TY3i2v1WjbLvZm1Zpifft-a5VsrV4bqfOovYiVECzUDCzf3I43w0IPFno__WR7PvYZKtaSdbe4YPYyEUxuyh-8s3aWIkW5c7VrMl_lbzS_Ve0A94YpdFesX339cOEnFyf8pyUp_pLRW7KrAAKI559JNiRivR4-GjVcOsjkRypYMcDULhWo0fLSRRFgpHsOynKmhSnPD-QsiKRSHfsQD4Vn0kk3gf6nHz4Q4BCOXtOREIFoyK9OL70LXur0E1GO3w5xldfjtfZoRxw24Uzs-3xmzV90GzHMuQCkOj8dsu2Q6bDVfhYz8PJG8LsZZj9NZzuwvHSLO9-BwAA__9_viDb

subtest stats

statement ok
CREATE TABLE data (a INT, b INT, c FLOAT, d DECIMAL, PRIMARY KEY (a, b, c, d))

# Split into ten parts.
statement ok
ALTER TABLE data SPLIT AT SELECT i FROM generate_series(1, 9) AS g(i)

# Relocate the ten parts to the five nodes.
statement ok
ALTER TABLE data EXPERIMENTAL_RELOCATE
  SELECT ARRAY[i%5+1], i FROM generate_series(0, 9) AS g(i)

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW RANGES FROM TABLE data WITH DETAILS]
ORDER BY 1
----
start_key           end_key       replicas  lease_holder
<before:/Table/62>  …/1/1         {1}       1
…/1/1               …/1/2         {2}       2
…/1/2               …/1/3         {3}       3
…/1/3               …/1/4         {4}       4
…/1/4               …/1/5         {5}       5
…/1/5               …/1/6         {1}       1
…/1/6               …/1/7         {2}       2
…/1/7               …/1/8         {3}       3
…/1/8               …/1/9         {4}       4
…/1/9               <after:/Max>  {5}       5

query T
EXPLAIN (DISTSQL) CREATE STATISTICS s1 ON a FROM data
----
distribution: full
vectorized: false
·
• create statistics
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJy0lt9uozgUh-_3Kaxz1UogbCCBcNWo7UpI_beBi5VWUeXEJykqwaztqNOp8u4jyGRamAElSLmJAibf-fw7tskH6P9ziOD236e7afxALm7iJE3-ubsk17PbaXpLknSaxkkaXydEM_L4QDj5e_Z4TwQ3HCwopMAHvkEN0X_AwAIXLPDAAh8sGMHcglLJJWotVfXIR_2DWHyDiFqQFeXWVLfnFiylQog-wGQmR4gg5YscZ8gFKoeCBQINz_K6TFX6qvp4Ll_xHSy4lvl2U-iIVEZJyauvtsMILwRhRJoXVDDfWSC35rOgNnyNELEvhvENRHRnHS-Z8E2Zo3JGTcH97ST7jhFhlNLKPzHcROSKdYq4LZFRp8hn_W0hlUCFolF_vutUna7XCtfcSOUwerw0uXApJYvt8hWNvuycgteaAmuGyY7vOBvQcYfZjjuo5-wUzUPPx2fo-bgh4h6flzskL9d2vEF5uadoHvIKzpBX0BDxjs_LG5KXZzv-oLy8UzQPeYVnyCtsiPjH5-UPycu3ndGgvPxTNA95Tc6Q1-SUl8EMdSkLja2z-M-VaKuSzapDG8Ua9ye8llu1xCcll_Wz-8vHGlTfEKjNfpTtL-LiMKSNQr759S77SmK9JLdBYl9JozbJ7Xc6RcrrRfndJNYm-UOnN26TRr2kcbeT2yaNhzoFbVLQSwq7nbw2KRzqFLZJk_5lQLul_N_WZv8y77GaVFtnlcu350xABMFiNAlpGNjjQHDbXwhh81UY2sFqLMIVpV5Q_19a5Xytq_2bvMi3Gpu-l9XuW_FcowX3_BVv0KDaZEWmTbb8ObLb_fUjAAD__0Tlnzs=

statement ok
INSERT INTO data SELECT a, b, c::FLOAT, 1
FROM generate_series(1,10) AS a, generate_series(1,10) AS b, generate_series(1,10) AS c;

query T
EXPLAIN ANALYZE (DISTSQL) CREATE STATISTICS s1 ON a FROM data
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows decoded from KV: 1,000 (7.8 KiB, 2,000 KVs, 1,000 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
·
• create statistics
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzslsGO2zYQhu99CmJOCSCtRIq2ZZ2ydVLACDYb2EYuxSKgxbEjWBZVksJmu_Bj9QX6ZIWkumsplmsZMZBDLosVOZ75f87HAZ_B_JFCBJPZu9vFOzJf3C6m88V0MieGkvsPRJDfZvd3RAorwIFMSfwgtmgg-h0oOMDAgQAc4ODAAB4cyLWK0Rily5Dn6gdT-RUi34EkywtbLj84ECuNED2DTWyKEMFCLFOcoZCoPR8ckGhFklZlytJvyj-f8w0-gQMTlRbbzESkVDTPRfmv61EiMkkoUfYLanDg_Sdiky1GxP_7L1N_xyqzmNlEZd9safVoiMRYSZQRob5fLy-fLBqiUciIhL5Pfq2X17OPExKLNDUHsblI9D6WVYt3nyYTYizmJFZFZskr_Gq9JLOvI-J7LwGIm66ASpYqbF7YutLDzoH6-9-DNFasESJ6cPLTtxD5O-f8w5-LbZ6i9gbNg6-X58mfWNWuLM2tsBF5QzuFsJaQQaeQl_pFprREjbJR_2HXKfV2vda4FlZpj_rniyavmO-TZRFv0JrXnRaClgXaPEx6Psn0ApI96nrsO7LMjrFMb4bkfXKEZnaMZn4NmlkPmmmfBuxpHl6B5mFDCDufBHYJCcz1gp8kNBrA-jRgT8LoCiSMGkKC80kILiEhcD3-k4RGA4I-DdiTEF6BhLAhhJ9PAr-EBO56g-9IQnCMBHYTHCchOEbC8BokBD1I4H0asCdhfAUSxn0eXTM0ucoMtt48xyv5rUouLR9HKNdYv6SMKnSMH7WKq9j6875KVC1INLbepfXHNNtvGatRbP97Mx5moiczsUYmephp0M7ETmvqIyo4mYp3Z6LtTLyvPVF1BTK0j0pv6ptkMKsGV_nU22_Ud6neeZmq-90tGiPWLwEl6Yc6h22dg5M6h92OWTvT8Md0PGrrHJ3UGXY7DtqZwh_TcdjWOT59Qfxuy_ybW3t6APTyHHR6Zjf8fzwPWp7H5chaperxcyIhAuGHS8a5dFf-mLtcxNwVfBW4dBksaSgwlKNyCK9SsTbl3Jx_UY-V6MVTXk69lUgNOnAnNvgWLeptkiXGJjFEVhe42_3yTwAAAP__lnhf8w==

query T retry
EXPLAIN (DISTSQL, TYPES) SELECT * FROM data
----
distribution: full
vectorized: true
·
• scan
  columns: (a int, b int, c float, d decimal)
  estimated row count: 1,000 (100% of the table; stats collected <hidden> ago)
  table: data@data_pkey
  spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyklF9r2zAQwN_3KcQ9bUPClv-0oKeNJoNAmmZxHjZGKIp1SU0dy5NkuhLy3YecsdahKcZ5EehO-d0vZ532YH-XIGD8Yz79OpmRj6NJtsy-TylZ_pyPs08kG0_HN0vymXxb3N0SJZ0ECpVWOJM7tCB-AQcKEVCIgUICFFJYUaiNztFabfyRffuDifoDIqRQVHXjfHhFIdcGQezBFa5EELCU6xIXKBWaIAQKCp0syraML_3FL_f1Iz4DhRtdNrvKCiIpWVOSU6KAQlZLH2MBJ7JShBPtHtDA6kBBN-6lsnVyiyD4K9XJCER4oGdsXySbShuFBlVXsKgc0H_rptTStem82MkSVoc3_uxMM10HaYdyzjM68Uw7nrx_V_klXQ04C6JBfeUd36i_b3SRb8SCeJBv1PGN-_vGF_nGLEgG-cYd36S_b3KRb8KCdJBvcnbO3vBdoK11ZbHXpIQnlRj3s4dqi8cptroxOc6Nztuzx-1dC2oDCq07ZvlxM6naFPcVDMrd_2fiNYm_S7rqkMJ3SdFQJ35KioeSolNSMpQUn5LSoaTEf8VNqZ_uCwUCMFwjv0oUS9fpNUvCjWQyvlIsD_l6o9R1Gqe8fYfl1vqrlD3opxa7fK79RXCmQQq38hFH6NDsiqqwrshBbGRp8XD48DcAAP__RkJIaQ==

subtest regression_98373

statement ok
CREATE TABLE IF NOT EXISTS t98373 AS
        SELECT
                g::INT2 AS _int2,
                g::INT4 AS _int4,
                g::INT8 AS _int8,
                g::FLOAT8 AS _float8,
                '2001-01-01'::DATE + g AS _date,
                '2001-01-01'::TIMESTAMP + g * '1 day'::INTERVAL AS _timestamp
        FROM
                generate_series(1, 5) AS g;

statement OK
SET vectorize = off

statement OK
SET distsql = always

# These query plans should be disallowed from executing in a distributed
# fashion, even with distsql = always. Check different flavors of EXPLAIN.

query T
EXPLAIN SELECT
        regproc(_int2::INT8)::REGPROC AS col865
FROM
        t98373@[0]
----
distribution: local
vectorized: false
·
• render
│
└── • scan
      missing stats
      table: t98373@t98373_pkey
      spans: FULL SCAN

query T
EXPLAIN(DISTSQL) SELECT
        regproc(_int2::INT8)::REGPROC AS col865
FROM
        t98373@[0]
----
distribution: local
vectorized: false
·
• render
│
└── • scan
      missing stats
      table: t98373@t98373_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkF-Lm0AUxd_7KeQ87cJIx8Zs3HnaJUmLkE1S9aGwSJg4N6mscezMyDYEv3tR079Q2Ce591zP-Z25wH6rILD8sl09xmvvZhGnWfp5deuly9VynnmGjo3Rxc2urN0HIeJ1Ft0KkSw_bZPN3HtMvUJX0d3U-5hsnjx3H01mk4dnnoOh1orW8kQW4hkBcobeiKzVpl9dhoNYfYfgDGXdtK5f5wyFNgRxgStdRRDI5L6ihKQi856DQZGTZTXYXgPHz655oTMY5rpqT7UV3sAMhrSR_eiDIaFakRG_aj0E107IOwbdut8Y1skjQQR_cMcLCN6xt6MnZBtdW_qL-n9J_J8kP-hyBlJHGt_L6tYUtDW6GG7HcTMYDQtF1o1qMA5x_VOyzpA8jfg5w6HSr7tSQUByFfJJGPhhqA5-eK-4v49U5E_vZgEvDtPpTO3R_yCPti-WftWvg212bnqsg6wsMTzJF1qQI3Mq69K6srgqXffuRwAAAP__j7rBkQ==

statement OK
RESET vectorize

statement OK
RESET distsql
