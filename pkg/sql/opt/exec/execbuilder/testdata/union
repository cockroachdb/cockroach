# LogicTest: opt distsql-opt

query I rowsort,colnames
VALUES (1), (1), (1), (2), (2) UNION VALUES (1), (3), (1)
----
column1
1
2
3

query I rowsort
VALUES (1), (1), (1), (2), (2) UNION ALL VALUES (1), (3), (1)
----
1
1
1
1
1
2
2
3

query I rowsort
VALUES (1), (1), (1), (2), (2) INTERSECT VALUES (1), (3), (1)
----
1

query I rowsort
VALUES (1), (1), (1), (2), (2) INTERSECT ALL VALUES (1), (3), (1)
----
1
1

query I rowsort
VALUES (1), (1), (1), (2), (2) EXCEPT VALUES (1), (3), (1)
----
2

query I rowsort
VALUES (1), (1), (1), (2), (2) EXCEPT ALL VALUES (1), (3), (1)
----
1
2
2

query II rowsort
VALUES (1, 2), (1, 1), (1, 2), (2, 1), (2, 1) UNION VALUES (1, 3), (3, 4), (1, 1)
----
1  2
1  1
1  3
2  1
3  4

# The ORDER BY and LIMIT apply to the UNION, not the last VALUES.
query I
VALUES (1), (1), (1), (2), (2) UNION ALL VALUES (1), (3), (1) ORDER BY 1 DESC LIMIT 2
----
3
2

# UNION with NULL columns in operands works.
query I
VALUES (1) UNION ALL VALUES (NULL) ORDER BY 1
----
NULL
1

query I
VALUES (NULL) UNION ALL VALUES (1) ORDER BY 1
----
NULL
1

query T
VALUES (NULL) UNION ALL VALUES (NULL)
----
NULL
NULL

query IT rowsort
SELECT x, pg_typeof(y) FROM (SELECT 1, NULL UNION ALL SELECT 2, 4) AS t(x, y)
----
1  unknown
2  int

query IT rowsort
SELECT x, pg_typeof(y) FROM (SELECT 1, 3 UNION ALL SELECT 2, NULL) AS t(x, y)
----
1  int
2  unknown

statement ok
CREATE DATABASE t;
CREATE TABLE t.uniontest (
  k INT,
  v INT
)

statement ok
INSERT INTO t.uniontest VALUES
(1, 1),
(1, 1),
(1, 1),
(1, 2),
(1, 2),
(2, 1),
(2, 3),
(2, 1)

query I rowsort
SELECT v FROM t.uniontest WHERE k = 1 UNION SELECT v FROM t.uniontest WHERE k = 2
----
1
2
3

query I rowsort
SELECT v FROM t.uniontest WHERE k = 1 UNION ALL SELECT v FROM t.uniontest WHERE k = 2
----
1
1
1
1
1
2
2
3

query I rowsort
SELECT v FROM t.uniontest WHERE k = 1 INTERSECT SELECT v FROM t.uniontest WHERE k = 2
----
1

query I rowsort
SELECT v FROM t.uniontest WHERE k = 1 INTERSECT ALL SELECT v FROM t.uniontest WHERE k = 2
----
1
1

query I rowsort
SELECT v FROM t.uniontest WHERE k = 1 EXCEPT SELECT v FROM t.uniontest WHERE k = 2
----
2

query I rowsort
SELECT v FROM t.uniontest WHERE k = 1 EXCEPT ALL SELECT v FROM t.uniontest WHERE k = 2
----
1
2
2

query I
(SELECT v FROM t.uniontest WHERE k = 1 UNION ALL SELECT v FROM t.uniontest WHERE k = 2) ORDER BY 1 DESC LIMIT 2
----
3
2

# The ORDER BY and LIMIT apply to the UNION, not the last SELECT.
query I
SELECT v FROM t.uniontest WHERE k = 1 UNION ALL SELECT v FROM t.uniontest WHERE k = 2 ORDER BY 1 DESC LIMIT 2
----
3
2

query TTTTT
EXPLAIN (VERBOSE) SELECT v FROM t.uniontest UNION SELECT k FROM t.uniontest
----
union      ·      ·                  (v)  ·
 ├── scan  ·      ·                  (k)  ·
 │         table  uniontest@primary  ·    ·
 │         spans  ALL                ·    ·
 └── scan  ·      ·                  (v)  ·
·          table  uniontest@primary  ·    ·
·          spans  ALL                ·    ·

query TTTTT
EXPLAIN (VERBOSE) SELECT v FROM t.uniontest UNION ALL SELECT k FROM t.uniontest
----
append     ·      ·                  (v)  ·
 ├── scan  ·      ·                  (k)  ·
 │         table  uniontest@primary  ·    ·
 │         spans  ALL                ·    ·
 └── scan  ·      ·                  (v)  ·
·          table  uniontest@primary  ·    ·
·          spans  ALL                ·    ·

query II
SELECT * FROM (SELECT * FROM (VALUES (1)) a LEFT JOIN (VALUES (1) UNION VALUES (2)) b on a.column1 = b.column1);
----
1  1

query II
SELECT * FROM (VALUES (1)) a LEFT JOIN (VALUES (1) UNION VALUES (2)) b on a.column1 = b.column1;
----
1  1
