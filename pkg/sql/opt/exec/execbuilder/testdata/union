# LogicTest: local-opt

statement ok
CREATE TABLE uniontest (
  k INT,
  v INT
)

query T
EXPLAIN (OPT) SELECT v FROM uniontest UNION SELECT k FROM uniontest
----
union
 ├── columns: v:7(int)
 ├── left columns: uniontest.v:2(int)
 ├── right columns: uniontest.k:4(int)
 ├── stats: [rows=200, distinct(7)=200]
 ├── cost: 2102
 ├── key: (7)
 ├── scan uniontest
 │    ├── columns: uniontest.v:2(int)
 │    ├── stats: [rows=1000, distinct(2)=100]
 │    └── cost: 1040
 └── scan uniontest
      ├── columns: uniontest.k:4(int)
      ├── stats: [rows=1000, distinct(4)=100]
      └── cost: 1040

query TTT
EXPLAIN SELECT v FROM uniontest UNION SELECT k FROM uniontest
----
union      ·      ·
 ├── scan  ·      ·
 │         table  uniontest@primary
 │         spans  ALL
 └── scan  ·      ·
·          table  uniontest@primary
·          spans  ALL

query TTT
EXPLAIN SELECT v FROM uniontest UNION ALL SELECT k FROM uniontest
----
append     ·      ·
 ├── scan  ·      ·
 │         table  uniontest@primary
 │         spans  ALL
 └── scan  ·      ·
·          table  uniontest@primary
·          spans  ALL

# Check that EXPLAIN properly releases memory for virtual tables.
query TTT
EXPLAIN SELECT node_id FROM crdb_internal.node_build_info UNION VALUES(123)
----
union                    ·       ·
 ├── values              ·       ·
 │                       size    1 column, 1 row
 └── render              ·       ·
      └── virtual table  ·       ·
·                        source  ·

statement ok
CREATE TABLE abc (a INT, b INT, c INT)

query TTTTT
EXPLAIN (VERBOSE) (SELECT a FROM abc ORDER BY b) INTERSECT (SELECT a FROM abc ORDER BY c) ORDER BY a
----
sort                 ·         ·            (a)     +a
 │                   order     +a           ·       ·
 └── union           ·         ·            (a)     ·
      ├── render     ·         ·            (a)     ·
      │    │         render 0  a            ·       ·
      │    └── scan  ·         ·            (a, c)  ·
      │              table     abc@primary  ·       ·
      │              spans     ALL          ·       ·
      └── render     ·         ·            (a)     ·
           │         render 0  a            ·       ·
           └── scan  ·         ·            (a, b)  ·
·                    table     abc@primary  ·       ·
·                    spans     ALL          ·       ·
