# LogicTest: local

statement ok
CREATE TABLE uniontest (
  k INT,
  v INT
)

query T
EXPLAIN SELECT v FROM uniontest UNION SELECT k FROM uniontest
----
distribution: local
vectorized: true
·
• union
│
├── • scan
│     missing stats
│     table: uniontest@primary
│     spans: FULL SCAN
│
└── • scan
      missing stats
      table: uniontest@primary
      spans: FULL SCAN

query T
EXPLAIN SELECT v FROM uniontest UNION ALL SELECT k FROM uniontest
----
distribution: local
vectorized: true
·
• union all
│
├── • scan
│     missing stats
│     table: uniontest@primary
│     spans: FULL SCAN
│
└── • scan
      missing stats
      table: uniontest@primary
      spans: FULL SCAN

# Check that EXPLAIN properly releases memory for virtual tables.
query T
EXPLAIN SELECT node_id FROM crdb_internal.node_build_info UNION VALUES(123)
----
distribution: local
vectorized: true
·
• union
│
├── • virtual table
│     table: node_build_info@primary
│
└── • values
      size: 1 column, 1 row

statement ok
CREATE TABLE abc (a INT, b INT, c INT)

query T
EXPLAIN (VERBOSE) (SELECT a FROM abc ORDER BY b) INTERSECT (SELECT a FROM abc ORDER BY c) ORDER BY a
----
distribution: local
vectorized: true
·
• sort
│ columns: (a)
│ ordering: +a
│ estimated row count: 100 (missing stats)
│ order: +a
│
└── • intersect
    │ columns: (a)
    │ estimated row count: 100 (missing stats)
    │
    ├── • project
    │   │ columns: (a)
    │   │
    │   └── • scan
    │         columns: (a, b)
    │         estimated row count: 1,000 (missing stats)
    │         table: abc@primary
    │         spans: FULL SCAN
    │
    └── • project
        │ columns: (a)
        │
        └── • scan
              columns: (a, c)
              estimated row count: 1,000 (missing stats)
              table: abc@primary
              spans: FULL SCAN

# Regression test for #32723.
query T
EXPLAIN (VERBOSE) SELECT a FROM ((SELECT '' AS a , '') EXCEPT ALL (SELECT '', ''))
----
distribution: local
vectorized: true
·
• project
│ columns: (a)
│
└── • except all
    │ columns: (a, a)
    │ estimated row count: 1
    │
    ├── • project
    │   │ columns: (a, a)
    │   │
    │   └── • values
    │         columns: (a)
    │         size: 1 column, 1 row
    │         row 0, expr 0: ''
    │
    └── • project
        │ columns: ("?column?", "?column?")
        │
        └── • values
              columns: ("?column?")
              size: 1 column, 1 row
              row 0, expr 0: ''

query T
EXPLAIN (VERBOSE) ((SELECT '', '', 'x' WHERE false))
UNION ALL ((SELECT * FROM (VALUES ('', '', 'x'), ('', '', 'x'))) EXCEPT (VALUES ('', '', 'x')))
----
distribution: local
vectorized: true
·
• render
│ columns: ("?column?", "?column?", "?column?")
│ estimated row count: 1
│ render ?column?: column1
│ render ?column?: column2
│ render ?column?: column3
│
└── • except
    │ columns: (column1, column2, column3)
    │ estimated row count: 1
    │
    ├── • values
    │     columns: (column1, column2, column3)
    │     size: 3 columns, 2 rows
    │     row 0, expr 0: ''
    │     row 0, expr 1: ''
    │     row 0, expr 2: 'x'
    │     row 1, expr 0: ''
    │     row 1, expr 1: ''
    │     row 1, expr 2: 'x'
    │
    └── • values
          columns: (column1, column2, column3)
          size: 3 columns, 1 row
          row 0, expr 0: ''
          row 0, expr 1: ''
          row 0, expr 2: 'x'

query T
EXPLAIN (VERBOSE)
SELECT 1 FROM (SELECT k FROM uniontest WHERE k > 3 UNION ALL SELECT k FROM uniontest)
----
distribution: local
vectorized: true
·
• render
│ columns: ("?column?")
│ estimated row count: 1,333 (missing stats)
│ render ?column?: 1
│
└── • union all
    │ columns: ()
    │ estimated row count: 1,333 (missing stats)
    │
    ├── • project
    │   │ columns: ()
    │   │ estimated row count: 333 (missing stats)
    │   │
    │   └── • filter
    │       │ columns: (k)
    │       │ estimated row count: 333 (missing stats)
    │       │ filter: k > 3
    │       │
    │       └── • scan
    │             columns: (k)
    │             estimated row count: 1,000 (missing stats)
    │             table: uniontest@primary
    │             spans: FULL SCAN
    │
    └── • scan
          columns: ()
          estimated row count: 1,000 (missing stats)
          table: uniontest@primary
          spans: FULL SCAN

statement ok
CREATE TABLE ab (a INT NOT NULL, b INT, INDEX(a, b), INDEX (b, a))

statement ok
CREATE TABLE xy (x INT NOT NULL, y INT, INDEX(x, y), INDEX (y, x))

# Regression tests for #41245, #40797. Ensure we can plan ordered set ops
# without a sort.
query T
EXPLAIN (DISTSQL,VERBOSE) SELECT a FROM ab UNION SELECT x AS a FROM xy ORDER BY a
----
distribution: local
vectorized: true
·
• union
│ columns: (a)
│ ordering: +a
│ estimated row count: 200 (missing stats)
│
├── • scan
│     columns: (a)
│     ordering: +a
│     estimated row count: 1,000 (missing stats)
│     table: ab@ab_a_b_idx
│     spans: FULL SCAN
│
└── • scan
      columns: (x)
      ordering: +x
      estimated row count: 1,000 (missing stats)
      table: xy@xy_x_y_idx
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkVFruzAUxd__nyLcp_9YRtW-5cl2dSB02mk3NoZINJciOOOSCErxu48qpXOsg26P99ycc35J9qDfS2DgPW_WCz8g_1d-vI0f1pQ8edEyjL0rEntr73ZLOLmLwnvCM_IY-GFwlFuyiI-7tiNhtPIisnwhHChUUmDA31ADewUbEgq1kjlqLdVB2g8HfNECsygUVd2Yg5xQyKVCYHswhSkRGGx5VmKEXKCaWUBBoOFFOcS2ndt2aZt2aSFaoBDXvNKM3ACFsDGMuDYkPQXZmFO8NnyHwOye_g7BniLwzOVZytPscgTnLMKpWSqBCsW007WvIem_4VwV2hRVbmbOV8NZiPkl7xChrmWlcZJ-Ltk6EKLY4XgjLRuV40bJfKgZx3DwDYJAbcatMw5-NayGj_pstv9idn40zydmq0_6fx8BAAD__07uAmE=

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT a, b FROM ab UNION SELECT x AS a, y AS b FROM xy ORDER BY a
----
distribution: local
vectorized: true
·
• union
│ columns: (a, b)
│ ordering: +a,+b
│ estimated row count: 2,000 (missing stats)
│
├── • scan
│     columns: (a, b)
│     ordering: +a,+b
│     estimated row count: 1,000 (missing stats)
│     table: ab@ab_a_b_idx
│     spans: FULL SCAN
│
└── • scan
      columns: (x, y)
      ordering: +x,+y
      estimated row count: 1,000 (missing stats)
      table: xy@xy_x_y_idx
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkdFro0AQxt_vr1jm6Y7sETVv-2Ry8UDIaU5zR0sRWd0hCNa1uysowf-9qC2ppQk0fVpmvvnm--3uCfRTCQy8u_1u7Qfk-9aPD_HfHSX_vWgTxt4PEns779eBcEoy8jsK_xCekX-BHwavSkvW8SB3w_ky03YkjLZeRDb3hAOFSgoM-CNqYA9gQ0KhVjJHraUaWqdxwBctMItCUdWNGdoJhVwqBHYCU5gSgcGBZyVGyAWqpQUUBBpelOPatnPbLm3TLi1ECxTimleakZ9AIWwMI65NXQeSnoJszDlBG35EYHZPb6Ow5xQ8c3mW8jS7icK5SHEOl0qgQjGPde0FdZ0FJP0HuNtCm6LKzdJ5b7rGsvrMi0Soa1lpnAVc2mwNkCiOOF1My0bluFcyH2OmMhx9Y0OgNpPqTIVfjdL4ZW_N9lfMzlXzama2-qT_9hwAAP__ZggHrQ==

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT a, b FROM ab UNION ALL SELECT x AS a, y AS b FROM xy ORDER BY a
----
distribution: local
vectorized: true
·
• union all
│ columns: (a, b)
│ ordering: +a
│ estimated row count: 2,000 (missing stats)
│
├── • scan
│     columns: (a, b)
│     ordering: +a
│     estimated row count: 1,000 (missing stats)
│     table: ab@ab_a_b_idx
│     spans: FULL SCAN
│
└── • scan
      columns: (x, y)
      ordering: +x
      estimated row count: 1,000 (missing stats)
      table: xy@xy_x_y_idx
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykUV1rpDAUfd9fEe7TLpth1H3LkzM7LgiuzupsaSki0VwGwRqbRFAG_3tRW6ZCp7TTp3DPxz0nyQn0YwUMvNt9sPFD8n3nJ4fkX0DJjRdvo8T7QRIv8H4fCKckJ3_i6C_hOfkf-lFINkHwwnZkk4ySfjyfdV1PonjnxWR7RzhQqKXAkD-gBnYPNqQUGiUL1FqqETpNAl90wCwKZd20ZoRTCoVUCOwEpjQVAoMDzyuMkQtUawsoCDS8rKa1Xe92fdZlfVaKDigkDa81IyugELWGEdemrgPpQEG25pygDT8iMHug17Wwly147vI841l-VQvnYotzuFQCFYplrGv_hHR4o2ooV7JZOwv1pXTrM28Qo25krfGDm1MKKI44X0XLVhW4V7KYYuYxmnwTIFCbmXXmwa8navqk12b7K2bnXfOvhdka0uHbUwAAAP__lnwFDg==

# TODO(yuzefovich): The synchronizers in the below DistSQL plans are all
# unordered. This is not a problem, but we shouldn't need an input synchronizer
# at all when there is only one incoming stream. We should look into removing
# it.
query T
EXPLAIN (DISTSQL,VERBOSE) SELECT a, b FROM ab INTERSECT SELECT x AS a, y AS b FROM xy ORDER BY b, a
----
distribution: local
vectorized: true
·
• intersect
│ columns: (a, b)
│ ordering: +b,+a
│ estimated row count: 1,000 (missing stats)
│
├── • scan
│     columns: (a, b)
│     ordering: +b,+a
│     estimated row count: 1,000 (missing stats)
│     table: ab@ab_b_a_idx
│     spans: FULL SCAN
│
└── • scan
      columns: (x, y)
      ordering: +y,+x
      estimated row count: 1,000 (missing stats)
      table: xy@xy_y_x_idx
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykktGLm0AQxt_7VyzzdMdtSTS5l4WCucaC4MWrSmkpIqs7TQXr2t0VlJD_vagHOcOdbdInmZnvN9-36x5A_y6Bgfv1yd94O3Kz9aI4-uxT8sUNH4LIvSWR67sfY8IpycinMHgkPCPeLnbDqG8_T1uyiXpJ13-fdW1HgnDrhuThG8ko4UChkgJ3_BdqYN_BgoRCrWSOWkvVtw6DwBMtsCWFoqob07cTCrlUCOwApjAlAoOYZyWGyAWqxRIoCDS8KIe1bee0XdqlbVqIFihENa80I--BQtAYRhyLOjYkRwqyMScHbfgegVlHel0Ka5qCZw7P0izlV6WwL0mxLbQpqtws7GmE0YJCoAQqFIw4NnWsNz1XV3mu_stz_abnyaqp5Lhs4pT05N8krwR_RLXHCE1QL9bT6HFXI3vxsje-DxRK_GFuHPuOOtbd7QdV7H-eyn_7l_eX3GuIupaVxvOzvrp52R8QxR7HC9OyUTk-KZkPNmMZDNzQEKjNOF2NhVeNoz7gS9iahe152J6F1xPYOodXF8D2Obyehe_PYifHd38CAAD__xYClq8=

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT b FROM ab INTERSECT ALL SELECT x AS b FROM xy ORDER BY b
----
distribution: local
vectorized: true
·
• intersect all
│ columns: (b)
│ ordering: +b
│ estimated row count: 1,000 (missing stats)
│
├── • scan
│     columns: (b)
│     ordering: +b
│     estimated row count: 1,000 (missing stats)
│     table: ab@ab_b_a_idx
│     spans: FULL SCAN
│
└── • scan
      columns: (x)
      ordering: +x
      estimated row count: 1,000 (missing stats)
      table: xy@xy_x_y_idx
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJycUWGLnDAQ_d5fEebTHU059b4FCu71LAjeejVSWopINFMrWGOTCMrify8qx9Zlt-3et8ybeTPvvRzA_GqAQfDlOdqFe3LzGPKUf4oo-RwkDzEPbgkPouBDSgryMYmfiChIuE-DhM_YLope2gPZ8ZeZYSRx8hgk5OErKYBCqyTuxU80wL6BCxmFTqsSjVF6hg7LQCgHYA6Fuu16O8MZhVJpBHYAW9sGgUEqigYTFBL1nQMUJFpRN8vaYfSHMR_yMa_lABR4J1rDyDugEPeWEd-FbKKgentcb6yoEJg70ddJcLcSROGLIi9ycUmCd1GCd1HC8XLfKi1Ro9xczWbmv0bO-HhCXSFHG3d33tZGOnbItp8MFBr8bm989-3te11XP9bnf2R7f022CZpOtQZPDZ7d7MyuUFa4pmRUr0t81qpczqxlvPAWQKKxa9dbi7BdWkvyf5LdK8juKdn7K_l-Q3ambHrzOwAA__8EXx8z

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT b, a FROM ab INTERSECT ALL SELECT y AS b, x AS a FROM xy ORDER BY b
----
distribution: local
vectorized: true
·
• intersect all
│ columns: (b, a)
│ ordering: +b,+a
│ estimated row count: 1,000 (missing stats)
│
├── • scan
│     columns: (b, a)
│     ordering: +b,+a
│     estimated row count: 1,000 (missing stats)
│     table: ab@ab_b_a_idx
│     spans: FULL SCAN
│
└── • scan
      columns: (y, x)
      ordering: +y,+x
      estimated row count: 1,000 (missing stats)
      table: xy@xy_y_x_idx
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJycUVFrnTAYfd-vCN9TSzN6Y98CA29XB4K9dkbGxhCJ5psTnHFJBOXifx_qtjtLu9L7FL6Tc3LOyXcE-7MBDsHnh2gfHsjFXShS8TGi5FOQ3MYiuCQiiIL3KSkokeRDEt8TWZDwkAaJmOF9FP1hjGQvZtown7-5w0ji5C5IyO0XUgCFVis8yB9ogX8FBhmFzugSrdVmho4LIVQD8B2Fuu16N8MZhVIbBH4EV7sGgUMqiwYTlArN9Q4oKHSybpZnh9EfxnzMh7xWA1AQnWwtJ2-BQtw7TnyP-gyyiYLu3cnBOlkhcDbR81KwbQpZ-LLIi1yelcJ7NsXJvG-1UWhQbYyzWfkS5Ykq92gqFOji7trbNknHDvl25UChwW_uwmdX1PeuLt-Zuvp-Gv92ZNT3nu1485qfTtB2urX4uOuTL-_mgqgqXD_M6t6U-GB0udisY7zoFkChdeuttw5hu1wtS_hXzF4hZo_F3n_FNxvxbsqmN78CAAD__zutJUU=

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT b, a FROM ab EXCEPT SELECT y AS b, x AS a FROM xy ORDER BY b
----
distribution: local
vectorized: true
·
• except
│ columns: (b, a)
│ ordering: +b,+a
│ estimated row count: 1,000 (missing stats)
│
├── • scan
│     columns: (b, a)
│     ordering: +b,+a
│     estimated row count: 1,000 (missing stats)
│     table: ab@ab_b_a_idx
│     spans: FULL SCAN
│
└── • scan
      columns: (y, x)
      ordering: +y,+x
      estimated row count: 1,000 (missing stats)
      table: xy@xy_y_x_idx
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykktGLm0AQxt_7VyzzdMdtSTS5l4WCuYuFgHemKuVKEVndaSpY1-6uoIT870XtNTVcLEmfwnwzv_m-2bgH_bMABu7L1lttnsnNehNG4SePks9u8OCH7i0JXc99jEhKCScfA_-J8JS4L4_uNnpttWQVdv2m-_091LTED9ZuQB6-kBQolFLgM_-BGthXsCCmUCmZodZSddK-H9iIBticQl5WtenkmEImFQLbg8lNgcAg4mmBAXKBajYHCgINz4t-LU8dniZpwpNcNEAhrHipGXkPFPzaMOLY1LEgPlCQtTk6aMN3CMw60OtSWOMUTes0bdImzVUp7EtSrHNt8jIzM3scwbGo00m-EqhQMDII5zwXV3ku_stzedbzaFWXclg2coo78l8jbwR_QrXDEI1fzZbj6FFbIXv9pleeBxQK_GZuHOuOOvbd7QeV774fyz9_5OSB95c8aoC6kqXG00Pf3DzvrkOxw-G1tKxVhlsls95mKP2e6wWB2gxdeyg25dDqAv4NW5PwYhq2J-HlCLZO4cUFsH0KLyfh-5PY8eHdrwAAAP__SsSUMg==

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT a, b FROM ab EXCEPT ALL SELECT x AS a, y AS b FROM xy ORDER BY b, a
----
distribution: local
vectorized: true
·
• except all
│ columns: (a, b)
│ ordering: +b,+a
│ estimated row count: 1,000 (missing stats)
│
├── • scan
│     columns: (a, b)
│     ordering: +b,+a
│     estimated row count: 1,000 (missing stats)
│     table: ab@ab_b_a_idx
│     spans: FULL SCAN
│
└── • scan
      columns: (x, y)
      ordering: +y,+x
      estimated row count: 1,000 (missing stats)
      table: xy@xy_y_x_idx
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJycUmFrnEAQ_d5fMcynhGzJab4tFLwkWzgw8apSUorIeju1gnXt7grK4X8vasvFkLZJPsnMvDfvvXGPaH_WyFE87MPt7h7ObndJmnwKGXwW8XWUiHNIRChuUpAMCvgYR3cgCxAPN2KfwjYM_4x72CYTZpi-v4H9AFF8K2K4_gIFA4kMG63oXv4gi_wrepgxbI0-kLXaTK3jDNipHvmGYdW0nZvaGcODNoT8iK5yNSHHVBY1xSQVmcsNMlTkZFXPa2URyCIvcplXqkeGSSsby-E9Mow6xyHwWOBjNjLUnTspWCdLQu6N7G0uvLWLfgj6IR_y_k0u_L-6OIl3jTaKDKmVcDYx_wd5JsodmZISclF76a-TpENL_NEvR4Y1fXNngX_BAu_i_IOpyu-n8mUBr15z5phsqxtLT4M-u3kzpSNV0nItqztzoL3Rh1lmKaOZNzcUWbdM_aXYNfNofgePyd4ryP5Tsv9P8tWKvBmz8d2vAAAA___aYCQi

statement ok
CREATE TABLE abcde (a INT PRIMARY KEY, b INT, c INT, d INT, e INT, INDEX (b, c, d, e))

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT * FROM (SELECT a, b, c, d, e FROM abcde UNION SELECT a, c, b, d, e FROM abcde) WHERE c = 1 AND d = e ORDER BY a
----
distribution: local
vectorized: true
·
• union
│ columns: (a, b, c, d, e)
│ ordering: +a,+b,+c,+d,+e
│ estimated row count: 2 (missing stats)
│
├── • filter
│   │ columns: (a, b, c, d, e)
│   │ ordering: +a
│   │ estimated row count: 1 (missing stats)
│   │ filter: (c = 1) AND (d = e)
│   │
│   └── • scan
│         columns: (a, b, c, d, e)
│         ordering: +a
│         estimated row count: 1,000 (missing stats)
│         table: abcde@primary
│         spans: FULL SCAN
│
└── • sort
    │ columns: (a, c, b, d, e)
    │ ordering: +a
    │ estimated row count: 1 (missing stats)
    │ order: +a
    │
    └── • filter
        │ columns: (a, b, c, d, e)
        │ estimated row count: 1 (missing stats)
        │ filter: d = e
        │
        └── • scan
              columns: (a, b, c, d, e)
              estimated row count: 10 (missing stats)
              table: abcde@abcde_b_c_d_e_idx
              spans: /1-/2
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykku-L2k4Qxt9__4phXunXOWJ-HWVB2LuaowGbXBP7iyISs8MR8BK7WeGK-L8XE8HTalrbN4GdmWc-T57dDdbflygw-PI4uQsj6I3DdJp-mBB8CpL7OA36kAaT4O0U_oeHJH4Pvf0xI1gQ5ASKgNtWtsgVw8cojCM4TOXN4MlUHz6_C5IAejmMwO7DXTSGnoIRcB_iZBwkcP8VMiQsK8VR9sw1im9o44xwpauc67rSu9KmGQjVC4ohYVGu1mZXnhHmlWYUGzSFWTIKnGaLJSecKdbWEAkVm6xYNmsbR7L5zhfzfK7mPC_UCxKmq6ysBVj2jeXgbEtYrc0BUZvsiVHYW_pzGw_F0rBmbdnHHtq6AOnBCKR_EeZcA0srbVhbzjFK2gMkjNdGgLRJuiQdkh51QN1roK-Dds8FvdLFc6Z_HOK9uQj2_ipa73y0PenuHpsQIoymb_Zvbp93_6IF_6KFA7nSijWrX2Im6QxIugOS3oCkP8DZ9ozvcVGbosyN5Z8uaG7G_c3l3F6TUcL1qiprPiJd2jzcuWX1xO3f1tVa5_yoq7zBtMe40TUFxbVpu3Z7CMu2tTP4Wmx3ip1usdMp9o_E9qnY7RR73WTvX8h-p_j2hDzb_vczAAD__6qVwrQ=

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT * FROM (SELECT a, b, c, d, e FROM abcde UNION SELECT  a, c, b, d, e FROM abcde) WHERE c = 1 AND d = e ORDER BY b, c, d, e, a
----
distribution: local
vectorized: true
·
• union
│ columns: (a, b, c, d, e)
│ ordering: +b,+c,+d,+a,+e
│ estimated row count: 2 (missing stats)
│
├── • filter
│   │ columns: (a, b, c, d, e)
│   │ ordering: +b,+d,+a
│   │ estimated row count: 1 (missing stats)
│   │ filter: (c = 1) AND (d = e)
│   │
│   └── • scan
│         columns: (a, b, c, d, e)
│         ordering: +b,+c,+d,+e,+a
│         estimated row count: 1,000 (missing stats)
│         table: abcde@abcde_b_c_d_e_idx
│         spans: FULL SCAN
│
└── • filter
    │ columns: (a, c, b, d, e)
    │ ordering: +c,+d,+a
    │ estimated row count: 1 (missing stats)
    │ filter: d = e
    │
    └── • scan
          columns: (a, b, c, d, e)
          ordering: +c,+d,+e,+a
          estimated row count: 10 (missing stats)
          table: abcde@abcde_b_c_d_e_idx
          spans: /1-/2
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkm-L2kAQxt_3UwzzSuscukmEsiDsXc3RgE2u0f6jiMTscARsYndXOBC_ezER_MPF1vZNYGfmmeeXZ3eL9tcKJYbfnib3UQydcTSdTT9NCL6E6UMyDbswDSfh-xm8hcc0-QidwzEjWBLkBJqAm1a2zDXD5zhKYjhO5fXgxVQXvn4I0xA6OYxAdOE-HkNHwwi4C0k6DlN4-H6ynyBDwrLSHGc_2aL8gQLnhGtT5WxtZfalbT0Q6ReUA8KiXG_cvjwnzCvDKLfoCrdilDjLlitOOdNs-gMk1OyyYlWvrelU_V0sF_lCL3hR6BcknK6z0kroi7u-h_MdYbVxRwvrsmdGKXb09xiPxcqxYdMX5wxNXYIKYARqiITJxklQgpRPyiMVkBq2Ini3IJwm4d2YxF0rgv9PKfivp9BR_v6NSCmjePbu8FQO0XRbEYJWhKNzZTQb1ue2yuuR8nukgh4p0SM17OF89wr3uLCuKHPXDy4WiPqO_D9c0_CWjFK266q0fObUtnmwp2X9zM3f2mpjcn4yVV7bNMek1tUFzdY1XdEcorJp7QFPxeKqODgTi0uxd1XsX3f2_8c5uCoeXjjPd29-BwAA__-0e5X_

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT * FROM (SELECT * FROM abcde UNION ALL SELECT * FROM abcde) WHERE c = 1 AND d = e ORDER BY a
----
distribution: local
vectorized: true
·
• union all
│ columns: (a, b, c, d, e)
│ ordering: +a
│ estimated row count: 2 (missing stats)
│
├── • filter
│   │ columns: (a, b, c, d, e)
│   │ ordering: +a
│   │ estimated row count: 1 (missing stats)
│   │ filter: (c = 1) AND (d = e)
│   │
│   └── • scan
│         columns: (a, b, c, d, e)
│         ordering: +a
│         estimated row count: 1,000 (missing stats)
│         table: abcde@primary
│         spans: FULL SCAN
│
└── • filter
    │ columns: (a, b, c, d, e)
    │ ordering: +a
    │ estimated row count: 1 (missing stats)
    │ filter: (c = 1) AND (d = e)
    │
    └── • scan
          columns: (a, b, c, d, e)
          ordering: +a
          estimated row count: 1,000 (missing stats)
          table: abcde@primary
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyskN1q20AQhe_7FMNcSe0GW5YCZcEgp95QgSqlkvtH0cVGOwSBolV319Bi_O7FUiFRiE3S5HJ-znznzA7trxY5iu9X6SrJwFsn5ab8nDL4KoqLvBQ-lCIVHzbwFi6L_BN401Je14rgS5bkGazSFB6Z-vDtoygEeDUsIfBhla3BU7AE8iEv1qKAix8gkWGnFWXylizynxhgxbA3uiZrtTm0dsNCon4jnzNsun7rDu2KYa0NId-ha1xLyHEjr1sqSCoyszkyVORk0w5nB0dxb5pbaf4gw7KXneVwhtWeod66u6PWyRtCHuzZ08GXTevIkJkFU-rY5-DF4eEHnPMk27z_94o4giXE5_5RC4vnWLifffHC7OF_ZQ9fM3t01MIdWRtFhtQUGwfvsNo_4jPTZ7qfRZPtY_T5cx5QkO11Z-mJlyuGpG5ojGL11tR0ZXQ9YMYyH3RDQ5F14zQYi6QbRweD98XBSXE0EQcPxYuT4vA0OXwJOTopPn9ArvZv_gYAAP__aIR-OA==

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT * FROM (SELECT * FROM abcde UNION ALL SELECT * FROM abcde) WHERE c = 1 AND d = e ORDER BY b, c, d, e, a
----
distribution: local
vectorized: true
·
• union all
│ columns: (a, b, c, d, e)
│ ordering: +b,+c,+d,+a
│ estimated row count: 2 (missing stats)
│
├── • filter
│   │ columns: (a, b, c, d, e)
│   │ ordering: +b,+d,+a
│   │ estimated row count: 1 (missing stats)
│   │ filter: (c = 1) AND (d = e)
│   │
│   └── • scan
│         columns: (a, b, c, d, e)
│         ordering: +b,+c,+d,+e,+a
│         estimated row count: 1,000 (missing stats)
│         table: abcde@abcde_b_c_d_e_idx
│         spans: FULL SCAN
│
└── • filter
    │ columns: (a, b, c, d, e)
    │ ordering: +b,+d,+a
    │ estimated row count: 1 (missing stats)
    │ filter: (c = 1) AND (d = e)
    │
    └── • scan
          columns: (a, b, c, d, e)
          ordering: +b,+c,+d,+e,+a
          estimated row count: 1,000 (missing stats)
          table: abcde@abcde_b_c_d_e_idx
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyskG9rm1AUxt_vUxzOq7ickhgtjAsB08UywWmn2T-GiPEeiuC87l4DhZDvPqKD1tKEdu0b4TzH5zy_--zR_KlRoP_jJlwFEUzWQbpJv4QE3_zkKk59C1I_9D9u4D1cJ_FnmIzHYltKhq9REEewCkN4YmvB909-4sOkhCXYFqyiNUwkLIEtiJO1n8DVT9gSlASSgAkKJGyU5Kj4zQbFL7QxI2y1KtkYpY_Svv8hkHco5oRV0-66o5wRlkozij12VVczCtwU25oTLiTr2RwJJXdFVfdnezqv_-bbvMxlznkl75AwbYvGCLjA7ECodt39edMVt4zCPtDzEa6rumPNemaP8wddwMRzjs0IIYJo8-FfQZ4LS_AurZMIi5cgPGxh8WYtOP_VgvOWLbgnEe6TlZasWY5jvcWUPGdKnjslz55idniCOVIXqp25I-cpkvlLykjYtKox_MzLGSHLWx6eZdROl3yjVdnHDGPc-3pBsumGrT0MQTOsjoAPzfZZszsy24_Ni7Nm53yy85pk96z58lFydnj3NwAA__-m3oqG

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT b, c, d, e FROM (SELECT b, c, d, e FROM abcde INTERSECT SELECT b, c, d, e FROM abcde) WHERE c = 1 AND d = e ORDER BY b
----
distribution: local
vectorized: true
·
• intersect
│ columns: (b, c, d, e)
│ ordering: +b,+c,+d,+e
│ estimated row count: 1 (missing stats)
│
├── • filter
│   │ columns: (b, c, d, e)
│   │ ordering: +b,+d
│   │ estimated row count: 1 (missing stats)
│   │ filter: (c = 1) AND (d = e)
│   │
│   └── • scan
│         columns: (b, c, d, e)
│         ordering: +b,+c,+d
│         estimated row count: 1,000 (missing stats)
│         table: abcde@abcde_b_c_d_e_idx
│         spans: FULL SCAN
│
└── • filter
    │ columns: (b, c, d, e)
    │ ordering: +b,+d
    │ estimated row count: 1 (missing stats)
    │ filter: (c = 1) AND (d = e)
    │
    └── • scan
          columns: (b, c, d, e)
          ordering: +b,+c,+d
          estimated row count: 1,000 (missing stats)
          table: abcde@abcde_b_c_d_e_idx
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJy0lF-L2kAUxd_7KS73KcEpbv7olgFhdmuWBlyzTUL_UERi5tYG0iSdjLBF_O4lSdtVu6Z12b4Ic2Z-95x7kGyx_pYjR-_D3ezKn4Mx9aM4ejtj8M4Lr4PIMyHyZt7rGFYMUgaSAcFNGNyCcUJPVqkk8OexF0bNfd8zE96_8UIPjBQmYJlwNZ-CIWECZEIQTr0Qrj_CChkWpaR58pVq5J_QwgXDSpUp1XWpGmnbPvDlPfILhllRbXQjLximpSLkW9SZzgk5xskqp5ASSWp4gQwl6STL27FtItH-LlfLdCmXtMzkPTKMqqSoObxEhsFGcxA2Ew4TLhMjXOwYlhv94FjrZE3IrR3791Q3Wa5JkRpah5E6nYMh7KYgzrk_j1_97Ek4MAHhmicj2OdE2C_G_p_FOE8qxnnOYtxzIkyzWmdFqofuYQRhsV_rNusrSYokh0Z2TjqPnuQ8egbn8UnnB8NNUXbDDvwWDfm3J4_EvyW1poh0UA3HhwvE3yvie5-Iq9kMGeb0WRvCGjBhD5hwBky4A3OisvWXP-Xff7i9Kk5tfnlO5yHVVVnUdNzAo5MvmrVJrqmrsS43KqU7VaatTXcMWq4VJNW6u7W6g190V03AfdjqhUf9sN0LO_2w0wu7_bDbC48PYOsYHp0B28fwuBe-PIq92L34EQAA___K-yzi

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT b, c, d, e FROM (SELECT b, c, d, e FROM abcde EXCEPT SELECT b, c, d, e FROM abcde) WHERE c = 1 AND d = e ORDER BY b, c, d, e
----
distribution: local
vectorized: true
·
• except
│ columns: (b, c, d, e)
│ ordering: +b,+c,+d,+e
│ estimated row count: 1 (missing stats)
│
├── • filter
│   │ columns: (b, c, d, e)
│   │ ordering: +b,+d
│   │ estimated row count: 1 (missing stats)
│   │ filter: (c = 1) AND (d = e)
│   │
│   └── • scan
│         columns: (b, c, d, e)
│         ordering: +b,+c,+d
│         estimated row count: 1,000 (missing stats)
│         table: abcde@abcde_b_c_d_e_idx
│         spans: FULL SCAN
│
└── • filter
    │ columns: (b, c, d, e)
    │ ordering: +b,+d
    │ estimated row count: 1 (missing stats)
    │ filter: (c = 1) AND (d = e)
    │
    └── • scan
          columns: (b, c, d, e)
          ordering: +b,+c,+d
          estimated row count: 1,000 (missing stats)
          table: abcde@abcde_b_c_d_e_idx
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJy0lN9q20wQxe-_pxjmSsL74eiPnbJg2CRWqMGxUkm0KcUYWTt1BaqkrtaQEvzuRVLT2G6k1iG9MezZ_c05czB6wOpbhhy9u9v5xWwBxnQWRuG7OYP3XnDph54JoTf3riJYM0gYSAYE14F_A0aHHq8TSeDdXXm3URfbvDHhw1sv8MBIYAKWCReLKRgSJkAm-MHUC-Dy4x6JDPNC0iL-ShXyT2jhkmGpioSqqlC19NA8mMl75GcM07zc6lpeMkwKRcgfUKc6I-QYxeuMAoolqeEZMpSk4zRrxjbRRPO7Wq-SlVzRKpX3yDAs47zi8D8y9Leag7CZcJhwmRjhcsew2Oonx0rHG0Ju7djfp7pOM02K1NA6jNTqHAxh101xzmeL6M3PwoQDExCu2RnBPiXCfjH2vyzGeVExzmsW454SYZpWOs0TPXQPIwiLPa5br68kKZIcatnpdB69yHn0Cs7jTucnw21etMMO_JY1-acnz8S_IbWhkLRfDseHC0TfS-KPH4qL-RwZZvRZG8IaMGEPmHAGTLgDc6LSzZff5V__tr0eutY-P6XwgKqyyCs6Xv_ZyWf1ziQ31HZYFVuV0K0qksamPfoN1wiSKt3eWu1hlrdXdcB92OqF3X7Y7oWdftjphUf9sNsLjw9g6xgenQDbx_C4Fz4_ir3c_fcjAAD__7UbLSI=

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT * FROM (SELECT * FROM abcde EXCEPT ALL SELECT * FROM abcde) WHERE c = 1 AND d = e ORDER BY a
----
distribution: local
vectorized: true
·
• except all
│ columns: (a, b, c, d, e)
│ ordering: +a,+b,+c,+d,+e
│ estimated row count: 1 (missing stats)
│
├── • filter
│   │ columns: (a, b, c, d, e)
│   │ ordering: +a
│   │ estimated row count: 1 (missing stats)
│   │ filter: (c = 1) AND (d = e)
│   │
│   └── • scan
│         columns: (a, b, c, d, e)
│         ordering: +a
│         estimated row count: 1,000 (missing stats)
│         table: abcde@primary
│         spans: FULL SCAN
│
└── • filter
    │ columns: (a, b, c, d, e)
    │ ordering: +a
    │ estimated row count: 1 (missing stats)
    │ filter: (c = 1) AND (d = e)
    │
    └── • scan
          columns: (a, b, c, d, e)
          ordering: +a
          estimated row count: 1,000 (missing stats)
          table: abcde@primary
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyskm-L2kAQxt_3UwzzKqlbNH-EsiCsd-ao4BmbhPZK8UUuO7WBXJLurtBD_O4lSeGMqK3tvZyZ_c0zz5PsUP8okGPwsFpM50uwZvM4iT8uGHwKopswDmyIg0Vwm8BbuIvCe7D6ZfqYSYLg4TZYJTBdLODE2IbPH4IoACuDCTg2TJczsCRMgGwIo1kQwc0XSJFhWUlapk-kkX9FB9cMa1VlpHWlmtaufTCXP5GPGOZlvTVNe80wqxQh36HJTUHIMUkfC4oolaSGI2QoyaR50a5tLxK1yp9S9YwM4zotNYd3uN4zrLbmZak26YaQO3v298J3eWFIkRo6fdWuz8ESXpMB53y-TN7_jkL4MAExts-e4F5zwqF39z-9e__k3XtN7_7ZE16Ut2WlJCmSPeF1Q_7pyQkf96Q2FJMJ66Hfd5I818QPfnZkWNA3YwlnwIQ7YMIbMOEPmBgP7InKN99Pj5BhuDUchMOEy4THhM_E-GwC42s-QkS6rkpNx0mc3Dxq7JPcUBenrrYqo5WqslamK8OWaxuStOmmTlfMy27UHHgIOxdhvwc7x7B7EfYuK3tXKLvHsH8RHh8pr_dvfgUAAP__ApejQg==

query T
EXPLAIN (DISTSQL,VERBOSE) SELECT * FROM (SELECT * FROM abcde INTERSECT ALL SELECT * FROM abcde) WHERE c = 1 AND d = e ORDER BY b, c, d, e, a
----
distribution: local
vectorized: true
·
• intersect all
│ columns: (a, b, c, d, e)
│ ordering: +b,+c,+d,+a,+e
│ estimated row count: 1 (missing stats)
│
├── • filter
│   │ columns: (a, b, c, d, e)
│   │ ordering: +b,+d,+a
│   │ estimated row count: 1 (missing stats)
│   │ filter: (c = 1) AND (d = e)
│   │
│   └── • scan
│         columns: (a, b, c, d, e)
│         ordering: +b,+c,+d,+e,+a
│         estimated row count: 1,000 (missing stats)
│         table: abcde@abcde_b_c_d_e_idx
│         spans: FULL SCAN
│
└── • filter
    │ columns: (a, b, c, d, e)
    │ ordering: +b,+d,+a
    │ estimated row count: 1 (missing stats)
    │ filter: (c = 1) AND (d = e)
    │
    └── • scan
          columns: (a, b, c, d, e)
          ordering: +b,+c,+d,+e,+a
          estimated row count: 1,000 (missing stats)
          table: abcde@abcde_b_c_d_e_idx
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJysk9uLm1AQxt_7VwzzpM2UjZdAORA42calQjZuVXqhhGA801Swao8GtoT870Ut7BqStCn7EpjLN993fsE91j9zFOh9fljM_CUYcz-Kow8Lgo9eeBtEngmRt_DexfAa7sLgHoxhmWxSxeAvYy-M2vZssYATGyZ8eu-FHhgpTMEyYbacg6FgCmxCEM69EG6_wIYgJVAETJAgYVEqXiY_uEbxFS1cEVa6TLmuS9229t2Crx5RjAmzoto1bXtFmJaaUeyxyZqcUWCcbHIOOVGsb8ZIqLhJsrw726WT3e96s07Xas3rTD0iYVQlRS3gDa4OhOWueTpfN8mWUVgH-vcId1nesGZ9Yw39-74AQzotGSGEv4zf_gEkXZiCnJhnI9jXRHhOwX4xCs5_UXBekoJ7NsKT864otWLNamC8apV_WznxjnvWW464Caobd_iS-FfFYvg9IGHO3xpD2iOSzoikOyJpjUhORuZUZ9vvp0dIGOwaAdIiaZN0SLokJ2chTK75H0Kuq7Ko-RjGycvjlgCrLfdE63KnU37QZdrZ9GXQ6bqG4rrpp1Zf-EU_agM-F1sXxe5AbB-L7Yti57Kzc4WzdSx2L4onR86rw6vfAQAA___SNa8C

# Regression test for #64181. Ensure that a projection on top of an ordered
# UNION ALL correctly projects away ordering columns.
query T
EXPLAIN (DISTSQL,VERBOSE) WITH q (x, y) AS (
  SELECT * FROM (VALUES ('a', 'a'), ('b', 'b'), ('c', 'c'))
  UNION ALL
  SELECT * FROM (VALUES ('d', 'd'))
)
SELECT 'e', y FROM q
ORDER BY x
----
distribution: local
vectorized: true
·
• project
│ columns: ("?column?", y)
│
└── • render
    │ columns: ("?column?", x, y)
    │ ordering: +x
    │ estimated row count: 4
    │ render ?column?: 'e'
    │ render x: column1
    │ render y: column2
    │
    └── • union all
        │ columns: (column1, column2)
        │ ordering: +column1
        │ estimated row count: 4
        │
        ├── • sort
        │   │ columns: (column1, column2)
        │   │ ordering: +column1
        │   │ estimated row count: 3
        │   │ order: +column1
        │   │
        │   └── • values
        │         columns: (column1, column2)
        │         size: 2 columns, 3 rows
        │         row 0, expr 0: 'a'
        │         row 0, expr 1: 'a'
        │         row 1, expr 0: 'b'
        │         row 1, expr 1: 'b'
        │         row 2, expr 0: 'c'
        │         row 2, expr 1: 'c'
        │
        └── • values
              columns: (column1, column2)
              size: 2 columns, 1 row
              row 0, expr 0: 'd'
              row 0, expr 1: 'd'
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkUFv1DAQhe_8itFcHIPRJllOPnVLA0QKSYm3BYT2kMajaqUQZ20HbbXa_46SCJWtmqqF23j8vvfGngO6XYMSk2-X2SrNIbhI1Vp9yQRcJ-V5oRIOX9P1J9hBsBdwx2GlIFBJlrxfw2v4UBafIbheZVeJgoBVTACrGBcQsJuhvpnqeqhrxjlc5WmRwyrLYM5DD1rNOOd_JIyYgLtJt4OivEhKOP8OexTYGk159ZMcyh8Y4UZgZ01Nzhk7tA6jINV7lKHAbdv1fmhvBNbGEsoD-q1vCCU2pq4a-FU1PTkIFyEK1OSrbTPqjwJN7-9p56tbQhkdxT8mRIvoWQnxSxKUsZ7sIj5xxrPoDc7ZL2ft712N1WRJP2b6yAy5eWu6xfJUXVKrycphkVJKtS7T_KOAs3h2rvAlzy7JdaZ19KwPDYehSd_S9EhnelvTpTX1GDMdi5EbG5qcn26X0yFtx6tx83_D0ZNwfAKHD-H4f5KXT8LvHiRvjq9-BwAA__9bjjq0
