# LogicTest: local

# EXPLAIN test cases for using invertedFilterer on an inverted geospatial index.

statement ok
CREATE TABLE geo_table2(
  k int,
  geom geometry,
  k_plus_one int,
  PRIMARY KEY (k, k_plus_one),
  INVERTED INDEX geom_index(geom)
)

query T
EXPLAIN (DISTSQL) SELECT k FROM geo_table2 WHERE ST_Intersects('POINT(3.0 3.0)'::geometry, geom)
----
distribution: local
vectorized: true
·
• filter
│ filter: st_intersects('010100000000000000000008400000000000000840', geom)
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUk1Fv0zAQx9_5FNa9rJXM6iRFID8VRgZBXVvaSoBwFYX6KFFTO9gOCqr63VGSQddOzUgerPguP_t__9ztwf7MgEP4eTZ-HU1I7220WC4-jvtkEY7DmyXZktv59I5sUMcu-ZahTz69D-chsS5OlUNjce1s72o2jSbLXnDNSHDN-lecvwund-Fy_oVW6K4PFJSWOEl2aIF_BQ9WFHKj12itNlVoX38QyRI4o5CqvHBVeEVhrQ0C34NLXYbAYVnpmGMi0QwYUJDokjSrjz3KHFXXxqmSWAKFG50VO2U52VKyjfOssLFW2GgDCos8qZIDAW-EKL9LIUqPCVGypxZ43pXxBJBESRIwot0PNBZWBwq6cMd6rUs2CNw70P_3JFK_0DiUt2nm0KAZeKfG_M2HZW6IVmTkc2Krqol1iXG8riJ4-UII5jMhGHtqAYJKdsWq4s-qpzAtHCcjj478i1b4Xaz4oFN13x1-W3fcv8b5Fn-ftUjdFpfEBF3E_PsfwamUJs7Px4h5zGOPn1fDR_sr_nDGRn7_6ORF5cMuyudoc60snui-dDI7rCig3GAzyVYXZo0zo9f1Nc12WnN1QKJ1TdZrNpFqUpXAh7DXCvvtsN8KB-1w0AoPz-DV4dmfAAAA__9IUKyF

query T
EXPLAIN (DISTSQL) SELECT k, k_plus_one FROM geo_table2 WHERE ST_Intersects('POINT(3.0 3.0)'::geometry, geom)
----
distribution: local
vectorized: true
·
• filter
│ filter: st_intersects('010100000000000000000008400000000000000840', geom)
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUk1Fv0zAQx9_5FNa9rJXM6iRFID8VRgZBXVvaSoBwFYX6KFFTO9gOCqr63VGSwdpOzUgerPguP_v_v9ztwf7MgEP4eTZ-HU1I7220WC4-jvtkEY7DmyXZUrKN86ywsVZIbufTO7JBHbvkW4Y--fQ-nIfEujhVDo3FtbO9q9k0mix7wTUjwTXrX3H-Lpzehcv5F1qhuz5QUFriJNmhBf4VPFhRyI1eo7XaVKF9_UEkS-CMQqrywlXhFYW1Ngh8Dy51GQKHZaVjjolEM2BAQaJL0qw-9kHmqLo2TpXEEijc6KzYKctPrTXagMIiT6rkQMAbIcrvUojSY0KU7KkFnndlPAEkUZIEjGj3A42F1YGCLtyDX-uSDQL3DvT_axKpX2gcyts0c2jQDLzTwvzNh2VuiFZk5HNiK9fEusQ4XrsIXr4QgvlMCMaeWoCgkl2xyvyZewrTwnEy8ujIv1gKv0spPuhU3XeH39Yd969xvsXfZy1StcVxo1wUFnQR9u_fBKeymjg_HynmMY89fl4NH-2v-PG8jfz-cVWDi-KHXcTP0eZaWTyRfulkdlhRQLnBZrCtLswaZ0av62ua7bTm6oBE65qs12wi1aQqgcew1wr77bDfCgftcNAKD8_g1eHZnwAAAP__TcK2Gg==

query T
EXPLAIN SELECT k, k_plus_one FROM geo_table2 WHERE ST_Intersects('POINT(3.0 3.0)'::geometry, geom)
----
distribution: local
vectorized: true
·
• filter
│ filter: st_intersects('010100000000000000000008400000000000000840', geom)
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 31 spans

query T
EXPLAIN SELECT k, k_plus_one FROM geo_table2 WHERE ST_DFullyWithin('POINT(3.0 3.0)'::geometry, geom, 1)
----
distribution: local
vectorized: true
·
• filter
│ filter: st_dfullywithin('010100000000000000000008400000000000000840', geom, 1.0)
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 30
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 30 spans

# Bounding box operations.
statement ok
SET CLUSTER SETTING sql.spatial.experimental_box2d_comparison_operators.enabled = on

query T
EXPLAIN SELECT k FROM geo_table2 WHERE geom && 'POINT(3.0 3.0)'::geometry
----
distribution: local
vectorized: true
·
• filter
│ filter: geom && '010100000000000000000008400000000000000840'
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 31 spans

query T
EXPLAIN SELECT k FROM geo_table2 WHERE 'POINT(3.0 3.0)'::geometry::box2d && geom
----
distribution: local
vectorized: true
·
• filter
│ filter: 'BOX(3 3,3 3)' && geom
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 31 spans

query T
EXPLAIN SELECT k FROM geo_table2 WHERE 'LINESTRING(1.0 1.0, 5.0 5.0)'::geometry ~ geom
----
distribution: local
vectorized: true
·
• filter
│ filter: '010200000002000000000000000000F03F000000000000F03F00000000000014400000000000001440' ~ geom
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 33
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 33 spans

query T
EXPLAIN SELECT k FROM geo_table2 WHERE geom ~ 'LINESTRING(1.0 1.0, 5.0 5.0)'::geometry::box2d
----
distribution: local
vectorized: true
·
• filter
│ filter: geom ~ 'BOX(1 1,5 5)'
│
└── • index join
    │ table: geo_table2@geo_table2_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 30
        │
        └── • scan
              missing stats
              table: geo_table2@geom_index
              spans: 30 spans
