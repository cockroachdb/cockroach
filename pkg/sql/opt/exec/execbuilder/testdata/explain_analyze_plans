# LogicTest: 5node

# These tests are different from explain_analyze because they require manual
# data placement.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i);

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT, FAMILY (k, w))

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify that EXPLAIN ANALYZE (DISTSQL) annotates plans with collected
# statistics.

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {1}       1
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {5}       5
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# This query verifies stat collection for the tableReader, mergeJoiner, and
# aggregator.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT kv.k, avg(kw.k) FROM kv JOIN kw ON kv.k=kw.k GROUP BY kv.k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• group (streaming)
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ group by: k
│ ordered: +k
│
└── • merge join
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │ estimated max memory allocated: 0 B
    │ estimated max sql temp disk usage: 0 B
    │ equality: (k) = (k)
    │ left cols are key
    │ right cols are key
    │
    ├── • scan
    │     nodes: <hidden>
    │     regions: <hidden>
    │     actual row count: 5
    │     KV time: 0µs
    │     KV contention time: 0µs
    │     KV rows read: 5
    │     KV bytes read: 40 B
    │     estimated max memory allocated: 0 B
    │     missing stats
    │     table: kv@kv_pkey
    │     spans: FULL SCAN
    │
    └── • scan
          nodes: <hidden>
          regions: <hidden>
          actual row count: 5
          KV time: 0µs
          KV contention time: 0µs
          KV rows read: 5
          KV bytes read: 40 B
          estimated max memory allocated: 0 B
          missing stats
          table: kw@kw_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsm29vm7oXx5__XoXlR51GRgykS5EmZav2u-pum0z9M2m6iioazk0RCWTgJO2t-rLuG7iv7ApY1iQkdpx11xT7GWBMDh8fny8-PnnA6bcRdvHFx9OPx5conL0JDeTNhgfh_E34Cv3_vHeGwhn61DvponCOet38FvQOZe3ot_Pe1Wf04Wt-ERs4in3oemNIsfsHJtjAFjawjQ3sYAO3cN_AkyQeQJrGSXbLQ97hxL_DbtPAQTSZ0uxy38CDOAHsPmAa0BFgF196NyM4B8-HxGxiA_tAvWCU_0w464Sz60kI99jAx_FoOo5SF2XWXEy87LBhZlb8_gXRYAwuav7zd1qcD-KIQkSDOCo1JfE8RQl4votIceXmnsLiUht9wAY--3J8jFIKEzSIpxFFB3BHzSCir1zUzI0sbgAIt90w9u7QGMZxco-80SgeeBR8FzXzp994dHALKYqndDKlLsruz61aXCC4_2jg4qyAuYB1c49uvfR2FVMnu79v4JR6Q8AueTT2o3-4Rn_eCecs-ibR_Dfwt7byf3pOnPiQgL_-nNfZD-9014ahPINkCJ_iIILEJGszaQR_0oMOef3qXRIMb4tDbOBe9rYdYnSyYYQ7GEzLQ8YimbWl30aIwniC_CAN0TT1hrA36CeItogTvx8OExh6NE5M0iqNjYF7BcfsVbGB33e_Xnd7l9fdq9PTgw7JOFxcnR10rOzouHfVvfx-vAXIL3Yf5-fch43Hav4cnours-uTDJCdnZ1D5EOSexDqWGbHfkZoT0BaOwCZRpuQbKTRjRvxxLTW_GRfs1tbzT5cMZvsHoaJoAiaVsO0dRhmy6AA_7eiMqj582WQyJFBUisZ5Djxsgwe1ksGhd2HI4PkpcugtXs8s0T1xG6Yjo5nbD0R4N8W1RPNn68nlhw9sWqlJxwnXtaTt_XSE2H34eiJ9dL1xN49ntmieuI0zJaOZ2w9EeB_JKonmj9fT2w5emLXSk84TrysJ-166Ymw-3D0xH7peuLsHs8cUT1pNXQ0Y6uJAP2WoJo0TIK8yEcExfQWEj0SbF1x5OiKUytd4bjzsq4c1UtXhN2HoyvOS9cVzk7gOaSTOEphbRto85ObGS3wh1DQTeNpMoDPSTzIf6Y47eX98gSkDyktWq3i5CRaNKXUo6xtpF85iZpF0Njd-vZW6yOg8zgJ0cijEA3uf5i_uD73Arr6Yj6kkATeKPjLK7_1otv3kD-AYJa_9lLTIvb_aMvfedE6hjRDsd75-ZEQWzITwmDSfhYmRJiJ9pPyxJftJ1KYEIFgaFUuGLKtb2-1XtkBXQuG_z0TKcGQw0T7CS8YKsLEWmfSXGayiqS53tlmAnWq9Fm5YYqwrSdNFbWRw6SlmZTChvaTMhMl_cRhhtI1JOudW8zO1uFqIK7cV-nhngmGGrsDG8n21ehLGFDpCYYKjqiaCQbOxJftJ1LWXm_3TDDU2E3YSLavRqsRDNnWS08wVHBE1UwwcCa-bD-REgzbzA_bI3aC4WjPBEONfYyNhJG1qEbShWO-kgtHNhM1EwwcJkr6CSnt5rEyDGrICxHZzVPFT0T2CDUTTkKjGksQnv2yB7WSk1929kGOp5e29HT6gcNEycUqhwkjq1GRiMixX_agyomInMkvOwUhx9NLu5Ur383EYSchSGljT2chOEzULJ7gQdm-QKtGboZjv5qJCB4U2atuOVDY5QqymciRXl0DIcpEzUWrLq0Qh1L1chne5FdzUHUhhCgTNRetur5CHErVa2Z4k1_NQWVXQxBOOQTR9RBlpHsXRCgMRfYCrYpQGOmNiqRndE3Ehv-v6ZqIMpNq10RUkYnsTIScubN3TYTCULSnCKU3qrEYsapdEyEnIuqaCFEmamYieFC0pwilNyoSEdk1ERanJsLSNRFlpLomQhyK7AVaFaGoWWjBg1L16hlL10T0H_uP__s3AAD__0UxHqY=

# This query verifies stats collection for the hashJoiner, distinct and sorter.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT DISTINCT(kw.w) FROM kv JOIN kw ON kv.k = kw.w ORDER BY kw.w
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│ order: +w
│
└── • distinct
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │ estimated max memory allocated: 0 B
    │ estimated max sql temp disk usage: 0 B
    │ distinct on: w
    │
    └── • hash join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 5
        │ estimated max memory allocated: 0 B
        │ estimated max sql temp disk usage: 0 B
        │ equality: (k) = (w)
        │ left cols are key
        │
        ├── • scan
        │     nodes: <hidden>
        │     regions: <hidden>
        │     actual row count: 5
        │     KV time: 0µs
        │     KV contention time: 0µs
        │     KV rows read: 5
        │     KV bytes read: 40 B
        │     estimated max memory allocated: 0 B
        │     missing stats
        │     table: kv@kv_pkey
        │     spans: FULL SCAN
        │
        └── • scan
              nodes: <hidden>
              regions: <hidden>
              actual row count: 5
              KV time: 0µs
              KV contention time: 0µs
              KV rows read: 5
              KV bytes read: 40 B
              estimated max memory allocated: 0 B
              missing stats
              table: kw@kw_pkey
              spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsm9Fuo0YUhu_7FKO52qh4YQbsOEgrRZukarbduEqilarKqghMYwQGLzOOk0Z5rL5An6wCl_XamDkm2Yaph7vYgHPmO2fOP_wDj5h_jrGLr85-Pju5RqfnV9fnFyfX6E20eLs4QD9cjj6i6A59GJ1foGiBRhcounsboXcoP45Gl6dnl-j9r8UnbOAkDdiFN2Ucu79hgg1MsYFtbGAHG7iPxwaeZanPOE-z_JTH4oLz4B67loHDZDYX-ddjA_tpxrD7iEUoYoZdfO3dxOySeQHLTAsbOGDCC-Pi30R3x9Hd77OIPWADn6TxfJpwF0XYwFczL_-zZ-ZR_PQJiXDKXGT9_RdffvbTRLBEhGlSOZSlC44y5gUuIstvbh4EK78aovfYwB8_nZwgLtgM-ek8EegNuxdmmIgDF1lFkMsTGIvqTph692jKpmn2gLw4Tn1PsMBFVvHrN57wJ4yjdC5mc-Gi_PwiqvILgsdPBl5-WsIsYd08oInHJ-uYjvPzxwbmwrtl2CVPxvPoDzboL46jRYX-YkXfJB3_LfxpLf_V78yTNAtYxoK1XxrnV0KnbEnijx6ffEjDhGUm2ZhCMftDvDkmB--y8HZS_IUNPMoHeZynjt0zf15Nk4xefox_jpFg0xkKQh6hOfdu2bPhrsDZTQr3NOQiTHxhkn4lG0qMq1nROC8oGhkdaqlJZzXyfpOsX6WZYJlJKzn_XrVhDXZI6LZ0FmPZmtOLtJfOTHsjoTWDBiPv10Z-uBY52V0_SEP1NmnPtDv9kOt3A_6HTfW74w_rN3ll_Sb7ot9A4a70e6CmQr1Ev5sVjVS_iZp06vQbyHqp35WcK67fdPcuTJuqoN0zna4Ly1WwAf9hUxXs-MMqSF9ZBem-qCBQuCsVPFSzz79EBZsVjVQFqZp06lQQyHqpgpWcK66C9u5d2G6qgk7P7HddWK6CDfgfNVXBjj-sgvYrq6C9LyoIFO5KBYdq9vmXqGCzopGqoK0mnToVBLJeqmAl54qroLN7F3aaqmC_1_VguQY2oN9vqIE9kyAvCRBBqZiwrMuEXA2dV1ZDZ1_UECjhlRoeqdnvX6KGzYpGqoaOmnTq1BDIeqmGlZwrrobAhu0l47M04WyzG2z9ZStPOAtu2bI6eDrPfPZLlvrFv1l-HBXXFUZzwLhYHqXLD-dJeYgLT8i2R_9LchYuut3u0R_VRp8wsUizCMWeYIn_8CX88vuFF4r1gQWMsyz04vBPrzrq8rJ_hcpn4V0x7K8OlYr15Vgx5vLolPEcxebF3x4J6bfMhEiYDL8JE9KUCSVdnVSYHOrIhDRohlS5ZiiP_qg2em0TutEMX59JK80QKHLS1QnQDDVhQjeZWF8zsdeQWJsX21KgjkrLyi1TRB490XK9ADDRcr0gZ0LtjkmFiZb3ZI60lfblrbQvvXiwznPz4oG8ia93Mku5Je3hM92JPa4lOZL66fV_SGjr7oSCGdXTnQCYtL3aaOXGbfhMd2KPy0SOpN7yUKMZyqNv3Z1QMKN6uhMAk7bdiVaa4ZF0YUss-ZqayN3ven9ij6sMYCJxPdQwbaD4214zqJhUPS0KCIqWHgWpeODrHZUCHVVuFw90XLATwAvTsszkTPSceoC3Xu-KqHEfA9V52w6GkpNfz-VIxQnvPAyAiZ7PbciZSKwRRToiUOdt2xjtdEQASts-RjuVLt_eIwNg2V3Z4OuMDICJno9vQFDqlyOKuDvy-DU1MgAoet5NVfYO1zvqEOioFbe9MzJIxW3vjAyASdtTT8U60fPxDmjyKLWv8oz4tTQyaJP35jS5lQGYtG1ktNIRASZ6PuMBTZ56d0SNjgjFr6WRQeX7hxTYP6SV_cPOyACY6GlkQFD0XI7IoUjcETXcHSj-tu-m2klqZQdxvaM6QEeVv3WipZFBK267UkaGikz0nHpyJnoaGdDk0XM5AkBRal9lW_zAFoKWN-1yJm0bGe3UObB_qKeRAUyeth_zUBJKvTuiSEeU7x9SYP-Qyt_W0dPIAN5003PlAEDR08gA3nXT8jEPCIpSL_1vW0_JX9azgZf17IrdrqGRMX767p8AAAD__40T8XU=

# This query verifies stats collection for WITH ORDINALITY and the hashJoiner.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT * FROM kv WITH ORDINALITY AS a, kv WITH ORDINALITY AS b
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• cross join
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 25
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│
├── • ordinality
│   │ nodes: <hidden>
│   │ regions: <hidden>
│   │ actual row count: 5
│   │
│   └── • scan
│         nodes: <hidden>
│         regions: <hidden>
│         actual row count: 5
│         KV time: 0µs
│         KV contention time: 0µs
│         KV rows read: 5
│         KV bytes read: 40 B
│         estimated max memory allocated: 0 B
│         missing stats
│         table: kv@kv_pkey
│         spans: FULL SCAN
│
└── • ordinality
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │
    └── • scan
          nodes: <hidden>
          regions: <hidden>
          actual row count: 5
          KV time: 0µs
          KV contention time: 0µs
          KV rows read: 5
          KV bytes read: 40 B
          estimated max memory allocated: 0 B
          missing stats
          table: kv@kv_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsUcFu00AQvfMVozkBWhTbcTjsySUUNdA2KImKEIrQxjtKLdu77u46JIryWfwAX4bspaJJm7QBceM4b-bNvHlvjfamQI7j0_PT_gRewrvR8ALyBXwaTM5gOHo7uDw5H0w-w8kYBNvTmCFDpSVdipIs8i8Y4pRhZXRK1mrTQOt2YCCXyAOGmapq18BThqk2hHyNLnMFIceJmBU0IiHJdAJkKMmJrGjX5oskX3ytclohw74u6lJZDjmDBTIcV6KpXiHDD1fgspI4BD--W1-nWjlSLtPqXsvobxYMCcmh55HZytEtFAfwBhleXPX7YB1VkOpaOXhOS9fJlHvBIWhl-gGifN9AKZZQUqnNCkRR6FQ4khz89plw6TVZ0LWrasehmW9l3QI9nG4Y-uqXb9aJOSEPN-zp3g6NzJQoMrfqhNvW0pLS-r49fyEsOkbY3dCj_6E_5m33D0Pv_uvQ473CfuuplTaSDMktMdOG-djIA9-dCXv9XmeKTCfe_m7YSE1ClkQs6bIkZkmPJa-R7Xv7UFZNz94U4KisQGY2h9qKOT05ymi_Zb1jshyRrbSytGvdg5uDxi-Sc_L-W12blD4anbZnfDlseS0gyTrfDX0xUL7VCLxLDg-S4y1yuEuODpK7hy93j7gc7ZLjg-TezuXp5tnPAAAA___reVE7

# Verify that EXPLAIN ANALYZE on an unsupported query doesn't return an error.
statement ok
EXPLAIN ANALYZE (DISTSQL) SHOW QUERIES;

statement ok
EXPLAIN ANALYZE (DISTSQL) EXPLAIN SELECT 1

# This query verifies support for zeroNode in DistSQL.
query T
EXPLAIN (DISTSQL) SELECT sum(k) FROM kv WHERE FALSE
----
distribution: local
vectorized: true
·
• group (scalar)
│ estimated row count: 1
│
└── • norows
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkE1LxDAQhu_-ijCnLgS28ZiTq1YsdD9s1w-QHkI71tJuUzOJCKX_XZoeVoUVPc47eebJzAD01oKE6GmXrOINC67jbJ_dJQuWRUl0tWfkDkGzYDfpds2ad_Z4G6URe1EtIXDodIkbdUAC-QwCcg690QUSaTNFg38Qlx8gQw511zs7xTmHQhsEOYCtbYsg4UG1DmkZAocSrapbPzFklywIWfHquoYWkI8ctLPHKWRVhSDDkf_dtKoqg5Wy2izFd1t2vw4uxGmN-I8mRep15490VJxeIOeAZYXz0Ug7U-DO6MJr5nLrOR-USHbuirmIu7k1ffArLH6Fz3_A-Xj2GQAA__8VEanA

# This query verifies stat collection for the tableReader and windower.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT avg(k) OVER () FROM kv
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 5 (40 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• window
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│
└── • scan
      nodes: <hidden>
      regions: <hidden>
      actual row count: 5
      KV time: 0µs
      KV contention time: 0µs
      KV rows read: 5
      KV bytes read: 40 B
      estimated max memory allocated: 0 B
      missing stats
      table: kv@kv_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzslcuO0zAUhvc8xdFZtZKrJL0glNVANaARDEWdUVmgCnnio2IlsTO20wujPhYvwJOhOBOYdi6k63bXc_nt469_dO7Q3mYY49X5p_PxNfDlopN2YTI7n0KnC--nk0tIl8hQaUGfeU4W428YIcM-MhwgwyEyHOGcYWF0QtZqU7XcecGFWGMcMpSqKF2VnjNMtCGM79BJlxHGeM1vMpoSF2SCEBkKclxm_pp0eZYuvxcpbZDhWGdlrmwMKTK8Knj1sxdUU3ycgZM5xRD-_mXrONHKkXJSq0clo1cWDHERQ1RnbjaOmtQbeIcML2fjMVhHBSS6VA46tHaBVK4bQ-iHrBuI0ucacr6GnHJtNsCzTCfckYgh9KffcJf8IAu6dEXpYqj6_VRNIsL5lmEd3VOzji8I42jLniH7D2iptBFkSOzAnG-fYP9VKqFXZILRLvi3sw-ds6iLDCfVPGcVZVpTUj4m-tJDq5q9zcBRXoCQNoXS8gW15jB6lkN_h0PU3mHRgQ4L-r1gcMwe67dn2z-U7aAXDI-Z7aA928GhbIc9_1EfLdthe7bDQ9mOesdM9j_7fEq20MrS3vZ5-uSw2kokFlSvMKtLk9AXoxN_TR1OvM4nBFlXV6M6uFC-5Ad8KI5eFL_eEYf74v4hN_un-FehIrfSJoWMO1LJ5u_f3-RXXLpdYwiyZCTP5E_-2DWN7N46Cckl3dunKTUeamq1j5pqTrZatw8bwtZG2EUyOCHZRzI8IdlHMjoh2c63r_4EAAD__1b2Y4s=

# Very simple query to make it easier to spot regressions when rewriting results
# in test files.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM kv WHERE k = 0
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• scan
  nodes: <hidden>
  regions: <hidden>
  actual row count: 0
  KV time: 0µs
  KV contention time: 0µs
  KV rows read: 0
  KV bytes read: 0 B
  estimated max memory allocated: 0 B
  missing stats
  table: kv@kv_pkey
  spans: [/0 - /0]
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyMUdFq4zAQfL-vWPbpDgRxXgUHxxmXhjZNcUL6UExR5CU1siVXWqcJwZ_VH-iXFVshpZRA3zSzM7PL6IjhpUaJy-w2S1dg4CpfzMHs4OE6yzMw8BcSFGhdSXeqoYDyEadYCGy90xSC8wN1HAWzco8yEVjZtuOBLgRq5wnlEbnimlDiSm1qykmV5CdDcEmsqnqMNbt_ZvfUGjqgwNTVXWODBIMCl60anpNktNysgauGJCTvbyFi7SyT5crZbyPvXgN4UqWEk3lzYDpT8B8FztdpCoGpBe06y_Cb9jypLP-REFdGAZG5JGjUHhpqnD-AqmunFdM5faNYP1MA13HbcTxjvOqTKHqBEZ1qC6y2hHLai59Xm1NonQ30pdVLyUlfCKRyS_H7guu8pnvv9LgmwsXoG4mSAsfpNIKZjaO-6H99BAAA__9qHbnN

# Test a query that has a subquery and a postquery.
statement ok
CREATE TABLE parent (p INT PRIMARY KEY);
INSERT INTO parent VALUES (1), (2);
CREATE TABLE child (c INT PRIMARY KEY, p INT REFERENCES parent(p))

query T
EXPLAIN ANALYZE (DISTSQL) INSERT INTO child VALUES (1, (SELECT min(p) FROM parent))
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 2 (16 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• root
│
├── • insert
│   │ nodes: <hidden>
│   │ regions: <hidden>
│   │ actual row count: 1
│   │ into: child(c, p)
│   │
│   └── • buffer
│       │ label: buffer 1
│       │
│       └── • values
│             size: 2 columns, 1 row
│
├── • subquery
│   │ id: @S1
│   │ original sql: (SELECT min(p) FROM parent)
│   │ exec mode: one row
│   │
│   └── • group (scalar)
│       │ nodes: <hidden>
│       │ regions: <hidden>
│       │ actual row count: 1
│       │
│       └── • scan
│             nodes: <hidden>
│             regions: <hidden>
│             actual row count: 1
│             KV time: 0µs
│             KV contention time: 0µs
│             KV rows read: 1
│             KV bytes read: 8 B
│             estimated max memory allocated: 0 B
│             missing stats
│             table: parent@parent_pkey
│             spans: LIMITED SCAN
│             limit: 1
│
└── • constraint-check
    │
    └── • error if rows
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 0
        │
        └── • lookup join (anti)
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 0
            │ KV time: 0µs
            │ KV contention time: 0µs
            │ KV rows read: 1
            │ KV bytes read: 8 B
            │ table: parent@parent_pkey
            │ equality: (column2) = (p)
            │ equality cols are key
            │
            └── • filter
                │ nodes: <hidden>
                │ regions: <hidden>
                │ actual row count: 1
                │ estimated row count: 1
                │ filter: column2 IS NOT NULL
                │
                └── • scan buffer
                      nodes: <hidden>
                      regions: <hidden>
                      actual row count: 1
                      label: buffer 1
·
Diagram 1 (subquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJysU9Fq20oQfb9fMcyTDRssOVwo-5TUuGDiyMV2DKWYsFkNyhJpV90dNXaDP6s_0C8rkqw2IsRtaZ_sPTNn9szZoycMn3KUOEtW0-UaZsl6Afre5ClsLuc30xUMYgGD1XQ-nayhMHZQDuHdcnENpfJkeThEgdallKiCAsqPGKPA_3ErsPROUwjO1_BT0zRLdygjgcaWFdfwVqB2nlA-IRvOCSUm7syVozEKTImVyZuhtCNdsXEW2BQkIfr2NaDAO8X6ngK4isuKJUQo0LvHn0CM24PA9nS8L7DKCOX5QTzTFJ_WtFZ3OS1JpeRHUV9Za8NF-3NbPtAeBU5cXhU2SChR4KpU9d8zFDg3hWGoHbra9De52oB2lsm-XPJqA81OnlQqO_LdnqmD3sBbFHi9mUwgMJWgXWUZBrTjkbE8lBA1otsGoofXGgq1g4IK5_eg8txpxZRKiJrpf-F0_CdOX2aZp0yx86O4b_Rl8uE2Waxvk5v5fHAR17n796kY97T-IqlLCqWzgXo6X5scHbYCKc2o_RqCq7ym997p5pr2uGh4DZBS4LZ63h5mti3VAp-T45Pk8Wny-CQ56pObVZqt0BI_Ov8AuWKyev_D-Q5_VIb7b5JSIG9Ubr6olw_W0Y4x12Q-0zHqXanLe1drM99VCwpBZb2G6HeDsD389z0AAP__LpmnwQ==
Diagram 2 (main-query): https://cockroachdb.github.io/distsqlplan/decode.html#eJyMj89K80AUxfffU1zOqoWBL9nOTiRCoLbSVjeSRZxc2oF0bpy5wULJY_kCPpk0I4gLweX53Tl_5oL02sOiXu-q7Z7q9X5D7uj7jp5uVo_VjhalocWuWlW3ezr5sBiWdLfd3NPQRg66XMIgSMfr9sQJ9hklGoMhiuOUJF7RZX5Qd2fYwsCHYdQrbgycRIa9QL32DIteXNuTkzEoFf8LGHSsre_nYD6zG9VLIPUntlR8vCcYvLTqjpxIRh1GtXR1RXn7BiWaySCrr96k7YFhy8n8fduW0yAh8Y9RvyUXU2PA3YHz_5OM0fFDFDfXZLmZfTPoOGm-llnUIZ-mZvr3GQAA__9Sm4hi
Diagram 3 (postquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJy0lMGO2j4Qxu__pxjNCSRLJLCHv3xii0DKkk0qyHKpUBWcYdcl2KntqCDEY_UF-mRVYlYtXYFK1Z5gPs83-U0-Kwe0n0vkGCXz8SyDKMlSEC-yLGBxHz-N59AJGXTm43g8ymArVafqwmSWPkKVG1Ku20WGSheU5FuyyD9giEuGldGCrNWmkQ5tQ1TskAcMpapq18hLhkIbQn5AJ11JyLHUIi_BilzBql6vyUDQC5BhQS6XZTs-rR2HYR8Z0o5E7aRW4OSWOATfvlpkuMqdeCELunZV09v4jf7yQwhxeWToqxOHdfkzIQ-P7PdZJ7J0ZMj0wnNAr3MYhhDNIUkzSJ7i-J_w9m_hfdBSzSgvyPT658TZviIO8XiSwX2SRfCQRgky9AEP_c_HakN7ZBhrvakr-KSlAq2aLZGdMmn-tQDQ4Dfcr7V1eVmebz1dvKmFVo7U2xc0XbQDwVBe-KnTBaz2jl6l_-EdMnxcjEZgHVUgdK0cdGjnelK5Lj9dIt9AtLnU8KcBBRcDGtwSkL_8ZIw2INd-57A3OM_q7zPe3cI4I1tpZekM6tLk4LhkSMUz-Y-A1bUR9N5o0T7Gl2nra4WCrPOnoS8i5Y8awJ_N4VVz_7q5f9U8uG4eXDXf_WJeHv_7HgAA__9_S8JN
