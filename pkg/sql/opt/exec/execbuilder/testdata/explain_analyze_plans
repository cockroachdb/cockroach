# LogicTest: 5node

# These tests are different from explain_analyze because they require manual
# data placement.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i);

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT, FAMILY (k, w))

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify that EXPLAIN ANALYZE (DISTSQL) annotates plans with collected
# statistics.

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv WITH DETAILS]
ORDER BY 1
----
start_key           end_key                 replicas  lease_holder
<before:/Table/62>  …/1/1                   {1}       1
…/1/1               …/1/2                   {1}       1
…/1/2               …/1/3                   {2}       2
…/1/3               …/1/4                   {3}       3
…/1/4               …/1/5                   {4}       4
…/1/5               <after:/Table/107/1/1>  {5}       5

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw WITH DETAILS]
----
start_key                end_key       replicas  lease_holder
<before:/Table/106/1/5>  …/1/1         {5}       5
…/1/1                    …/1/2         {1}       1
…/1/2                    …/1/3         {2}       2
…/1/3                    …/1/4         {3}       3
…/1/4                    …/1/5         {4}       4
…/1/5                    <after:/Max>  {5}       5

# This query verifies stat collection for the tableReader, mergeJoiner, and
# aggregator.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT kv.k, avg(kw.k) FROM kv JOIN kw ON kv.k=kw.k GROUP BY kv.k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B, 10 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• group (streaming)
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ group by: k
│ ordered: +k
│
└── • merge join
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │ estimated max memory allocated: 0 B
    │ estimated max sql temp disk usage: 0 B
    │ equality: (k) = (k)
    │ left cols are key
    │ right cols are key
    │
    ├── • scan
    │     nodes: <hidden>
    │     regions: <hidden>
    │     actual row count: 5
    │     KV time: 0µs
    │     KV contention time: 0µs
    │     KV rows read: 5
    │     KV bytes read: 40 B
    │     KV gRPC calls: 5
    │     estimated max memory allocated: 0 B
    │     missing stats
    │     table: kv@kv_pkey
    │     spans: FULL SCAN
    │
    └── • scan
          nodes: <hidden>
          regions: <hidden>
          actual row count: 5
          KV time: 0µs
          KV contention time: 0µs
          KV rows read: 5
          KV bytes read: 40 B
          KV gRPC calls: 5
          estimated max memory allocated: 0 B
          missing stats
          table: kw@kw_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsm2Fv2kgTx98_n2K1r1LV1KxtUmKpEi3qc0qvgYoklaoTihx7jlg2NrUXSK7Kx7ovcJ_sZLs0gGGXpfTWwfsO27th_JvZ-bOzk284_RpiG1--__i-e4WC2atAQ85sdBLMXwUv0P8H_QsUzNCH_nkPBXPU7-VD0BuUPUe_DfrXn9C7L_lNrOEo9qDnjCHF9h-YYA0bWMMm1rCFNdzCQw1PktiFNI2TbMi3fMK5d4_tpob9aDKl2e2hht04AWx_w9SnIWAbXzm3IQzA8SDRm1jDHlDHD_OvCWadYHYzCeABa7gbh9NxlNoos-Zy4mQfG3pmxe-fEfXHYKPmP3-nxbUbRxQi6sdR6VESz1OUgOPZiBR3bh8oLG610bvi5mjwqYtcJwzTH-Mmjp8sT7343O2ilMIEufE0ougE7qnuR_SFjZr5qxQDAIJtA8bOPRrDOE4ekBOGsetQ8GzUzG24dah7BymKp3QypTbKxue2L24QPHzUcHFVIF8gvX1Ad056twqzk40fajilzgiwTR61_Xx0uuajeSeYs3ykE-Wlvb1kbPXS09-JEw8S8Nb_zsvsi3catcHhF5CM4EPsR5DoZG1VhvAnPemQly_eJP7orviINdzP3rZDtE7mbLgHd1p2LItk9iz9GiIK4wny_DRA09QZwd6gnyCaIqH-djRKYOTQONFJq-QbDfcLjtmrYg2_7X256fWvbnrXHz-edEjG4fL64qRjZJ-6_eve1ffPW4D84vCxfi582HiM5s_huby-uDnPAJnZ1QAiD5I8glDH0DvmAaE9AWntAGQabUKykUYvbsQT3ViLk33Nbm01-3TFbLJ7siaCgqobDd1UyfoQkirgpdeikqq8dChJJXIklRyVpHJCfVlST49LUoXDhyOp5LlLqrF71jNEtcls6JbKeofQJgEvtUW1SXnpUNpkyNEm46i0iRPqy9r0-ri0STh8ONpkPHdtMnfPeqaoNlkNvaWy3iG0ScBLZ6LapLx0KG0y5WiTeVTaxAn1ZW1qH5c2CYcPR5vM565N1u5ZzxLVplZD5bxDKJOAj1qCytTQCXIiDxEU0ztIlL8OoVGWHI2yjkqjOEG_rFFnx6VRwuHD0SjruWsU5-R0AOkkjlJYOzbb_JebGS3wRlDQTeNp4sKnJHbzryku-_m8vMjqQUqLp0ZxcR4tHqXUoaxjt1-5iJpF0tjd-vZW6yOg8zgJUOhQiNyHH-Yv7s8dn66-mAcpJL4T-n855bdeTPsuDC74s_y1lx4tFOLHs_ydF0_HkGYo1icfHgkxJTMhDCbtgzAhwkxUnJQXvuw4kcKECCRDo3LJkG19e6v1tXXoWjL875lISYYcJipOeMmwJkyMdSbNZSarSJrrk00mUKtKPys3LBG29aRZR23kMGkpJqW0oeKkzKSWcWIxU-kakvXJLeZk43Q1EVfuV-npngWGIw4HNpLtu9Hn4FDpBYYKerSeBQbOwpcdJ1L2Xq_3LDAccZiwkWzfjVYjGbKtl15gqKBH61lg4Cx82XEiJRm2mT9sz9gFhrM9CwxHHGNsJIyqRTWKLhzza7lxZDOpZ4GBw6SWcUJKp3msCkM95IWInObVJU5EzggVE05BoxpbEJ79sp1aycUvu_ogJ9JLR3qq_MBhUsvNKocJo6pRkYzIsV-2U-VkRM7il12CkBPppdPKld_NxGIXIUjpYE9VIThM6tk8wYOyfYNWjdoMx_56FiJ4UGTvuuVAYbcryGYiR3pVD4Qok3puWlVrhTiUqrfL8BZ_PZ2qGiFEmdRz06r6K8ShVL1nhrf46-lUdjcE4bRDENUPUUa6d0NEjaHI3qBVEQqjvFGR8ozqidjw_2uqJ6LMpNo9EVVkIrsSIWft7N0TUWMoKlKEyhvV2IwY1e6JkJMRVU-EKJN6ViJ4UFSkCJU3KpIR2T0RBqcnwlA9EWWkqidCHIrsDVoVodSz0YIHperdM4bqiRg-Dh__928AAAD__2mHirI=

# This query verifies stats collection for the hashJoiner, distinct and sorter.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT DISTINCT(kw.w) FROM kv JOIN kw ON kv.k = kw.w ORDER BY kw.w
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B, 10 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│ order: +w
│
└── • distinct
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │ estimated max memory allocated: 0 B
    │ estimated max sql temp disk usage: 0 B
    │ distinct on: w
    │
    └── • hash join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 5
        │ estimated max memory allocated: 0 B
        │ estimated max sql temp disk usage: 0 B
        │ equality: (k) = (w)
        │ left cols are key
        │
        ├── • scan
        │     nodes: <hidden>
        │     regions: <hidden>
        │     actual row count: 5
        │     KV time: 0µs
        │     KV contention time: 0µs
        │     KV rows read: 5
        │     KV bytes read: 40 B
        │     KV gRPC calls: 5
        │     estimated max memory allocated: 0 B
        │     missing stats
        │     table: kv@kv_pkey
        │     spans: FULL SCAN
        │
        └── • scan
              nodes: <hidden>
              regions: <hidden>
              actual row count: 5
              KV time: 0µs
              KV contention time: 0µs
              KV rows read: 5
              KV bytes read: 40 B
              KV gRPC calls: 5
              estimated max memory allocated: 0 B
              missing stats
              table: kw@kw_pkey
              spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsW-9uo8YX_f57itF82tUPLwxgx0FaKVrvVs22G6-caKWqsioC0xiBwcuM46RRHqsv0CerwCWOjZlrHDdMPXwLf8a5c86dey5n4AGz7xF28OWnnz8NrtDH88ur84vBFXoTLt4t3qIfRsMvKLxFn4fnFyhcoOEFCm_fheg9yq6j4ejjpxH68Et-hDUcJz69cKeUYedXTLCGTaxhC2vYxhru4rGGZ2niUcaSNLvlIR9w7t9hx9BwEM_mPDs91rCXpBQ7D5gHPKLYwVfudURH1PVpqhtYwz7lbhDl_ya8PQtvf5uF9B5reJBE82nMHBRiDV_O3OzPjp5F8dM3xIMpdZDx159seewlMacxD5K4dClNFgyl1PUdRJZnru85LU710YflyZvR1wHy3ChiT_fN3CB9PvTLt8EAMU5nyEvmMUdv6B3Xg5i_dZCRT2V5A6Vh1Q1T9w5N6TRJ75EbRYnncuo7yMhjuHa5N6EMJXM-m3MHZffnsRcnCB4_anh5tIS8gPT6Hk1cNlkH8yy7f6xhxt0bih3yqO3HUW-Do8VZuChxtFhxpJOWpb1ZMitZWv3OPE5Sn6bUX_ulcTYSumUL1T-6bPI5CWKa6mRjOUb0d_7mjLx9nwY3k_wvrOFhNsmzjGB6R715mUwRetk19j1CnE5nyA9YiObMvaF7g7sCzqqT3h8DxoPY4zrpltiQYl71ksZ-QdKI0DENOdFZzbxbh_XLJOU01c0S5_-XbVq9HQjdRmc-l62cXiSdZKZbG4RWTBqMvFsZ-cla5GR3lSE1OwHd7OhWqzKH6AVqsHRStxdoWTpUL0BeuRcgx9ILAOm96gV6cqrdS3qBekkj7AWInOhU9QIA60UvUOJc8l7A3L1Wm3UV1erodlurD6GoNVjq11XUlqVDKar5yopqHouiAum9UtQTOTXjJYpaL2mEimrKiU6VogKsF4pa4lxyRbV2r9VWXUW1O3q3rdWHUNQaLJ3WVdSWpUMpqvXKimodi6IC6b1S1L6cmvESRa2XNEJFteREp0pRAdYLRS1xLrmi2rvXaruuonY7baU-hJ7W4KhbU087OkFu7COCEj6hacvXIZTVfmVltY9FWYFEXynrqZza8RJlrZc0QmW15USnSlkB1gtlLXEuubICG9wjymZJzOhmNdj6y0ZGOPVv6DI7WDJPPfo1Tbz83ywPh_m43Ez3KePLq-by4DwuLjHuctF28r-JnIHzard79KeV0ceUL5I0RJHLaezdP4VfnF-4AV-fmE8ZTQM3Cv5wy7Muhv0jZx4NbvNpP7tU6NrTtXzOxdUpZRkUm4MPDwnpNowJEWDSPwgmpC4mJmnzpITJiYqYkBrF0JSuGIqjP62MXllCN4rh62PSSDEEkpy0eQIUQ0UwMTcxMZ5jYq1BYmwOtoSA2jK1lVuWiDh6omS_AGCiZL8gxsS0WkxKmCj5TGYLS2lXXEq7wsG9dTw3B_fERXy9khnStbQne7oTR5xLYkiql9d_gdDG3QkJGVXTnQAwabrbaOTBrb-nO3HEaSKGpNrykKMYiqNv3J2QkFE13QkAk6bdiUaK4amwsSWGuKcmYve72p844iwDMBG4HnKYNlD8TfcMMpKqpkUBgaKkR0FKHvh6RTWBiiq2i3sqNuwE8MKUTDMxJmouPcBbr3ZF5HiOgfK8aQdDysWvZjtScsJbDwPARM33NsSYCKwRSSoikOdN2xjNVEQAlKZ9jGYyXby9R3pA213a4GuNDAATNV_fgECpbkckcXfE8StqZACgqPk0Vdo7XK-ofaCiltz21sggJbe9NTIATJpeejLmiZqvd0CLR6p9lT3iV9LIMOt8N6fIowyASdNGRiMVEcBEzXc8oMVT7Y7IURGh-JU0Mkzx_qEJ7B-apf3D1sgAMFHTyIBAUbMdEYMicEfkcHeg-Jt-mmqG1NIO4npFtYGKKv7qREkjwyy57VIZGTJioubSE2OippEBLR412xEAFKn2VbbFD2whKPnQLsakaSOjmTwH9g_VNDKAxdP0ax5SglLtjkhSEcX7hyawf2iKv9ZR08gAvnRTs3MAQFHTyAC-dVPyNQ8IFKk--t_WT4k_1rOAj_Wskt2uoJExfvzf3wEAAP__rx5dkA==

# This query verifies stats collection for WITH ORDINALITY and the hashJoiner.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT * FROM kv WITH ORDINALITY AS a, kv WITH ORDINALITY AS b
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B, 10 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• cross join
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 25
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│
├── • ordinality
│   │ nodes: <hidden>
│   │ regions: <hidden>
│   │ actual row count: 5
│   │
│   └── • scan
│         nodes: <hidden>
│         regions: <hidden>
│         actual row count: 5
│         KV time: 0µs
│         KV contention time: 0µs
│         KV rows read: 5
│         KV bytes read: 40 B
│         KV gRPC calls: 5
│         estimated max memory allocated: 0 B
│         missing stats
│         table: kv@kv_pkey
│         spans: FULL SCAN
│
└── • ordinality
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │
    └── • scan
          nodes: <hidden>
          regions: <hidden>
          actual row count: 5
          KV time: 0µs
          KV contention time: 0µs
          KV rows read: 5
          KV bytes read: 40 B
          KV gRPC calls: 5
          estimated max memory allocated: 0 B
          missing stats
          table: kv@kv_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsUk1v00AQvfMrRnMCtCi243DYk0soaqBtqjQqQihCG-8otWzvurvrkKjKz-IP8MuQvRSStAkNHzeO8-a93Tdv5hbtTYEcL49Pj_tjeA5vRsMzyOfwfjA-geHo9eD86HQw_gBHlyDYjsYUGSot6VyUZJF_xBAnDCujU7JWmwa6bQkDuUAeMMxUVbsGnjBMtSHkt-gyVxByHItpQSMSkkwnQIaSnMiK9tl8nuTzT1VOS2TY10VdKsshZzBHhpeVaKoXyPDdFbisJA7B1y_W16lWjpTLtLrXMvqzBUNCcuh5ZLp0dAfFAbzy6Gx00YdUFIX9QaxEZta1Z1f9PlhHFaS6Vg6e0sJ1MuWecQjaYTyBKN9FKMUCSiq1WYIoCp0KR5KD9zAVLr0mC7p2Ve04NPzW_B3Qw8mKoa--p2udmBHycMUev4GhkZkSReaWnXBzAbSgtL4f4h8Yiw4xtn4a0f_T-Dun0f3N0-j-69OIdxr76adW2kgyJDfMTBrlrygPTHci7PVbnSkynXhzumFjNQlZErGky5KYJT2WvES2a-x9u2p69qYAR2UFMrM51FbM6NGrjHZH1jtklyOylVaWtqN78OWgyYvkjHz-VtcmpQuj0_YbXw5bXQtIss53Q18MlG81BtfF4V5xvCEOt8XRXnF3_8_dA36OtsXxXnFv6-fJ6sm3AAAA__9e3mbn

# Verify that EXPLAIN ANALYZE on an unsupported query doesn't return an error.
statement ok
EXPLAIN ANALYZE (DISTSQL) SHOW QUERIES;

statement ok
EXPLAIN ANALYZE (DISTSQL) EXPLAIN SELECT 1

# This query verifies support for zeroNode in DistSQL.
query T
EXPLAIN (DISTSQL) SELECT sum(k) FROM kv WHERE FALSE
----
distribution: local
vectorized: true
·
• group (scalar)
│ estimated row count: 1
│
└── • norows
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkE1LxDAQhu_-ijCnLgS28ZiTq1YsdD9s1w-QHkI71tJuUzOJCKX_XZoeVoUVPc47eebJzAD01oKE6GmXrOINC67jbJ_dJQuWRUl0tWfkDkGzYDfpds2ad_Z4G6URe1EtIXDodIkbdUAC-QwCcg690QUSaTNFg38Qlx8gQw511zs7xTmHQhsEOYCtbYsg4UG1DmkZAocSrapbPzFklywIWfHquoYWkI8ctLPHKWRVhSDDkf_dtKoqg5Wy2izFd1t2vw4uxGmN-I8mRep15490VJxeIOeAZYXz0Ug7U-DO6MJr5nLrOR-USHbuirmIu7k1ffArLH6Fz3_A-Xj2GQAA__8VEanA

# This query verifies stat collection for the tableReader and windower.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT avg(k) OVER () FROM kv
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 5 (40 B, 5 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• window
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│
└── • scan
      nodes: <hidden>
      regions: <hidden>
      actual row count: 5
      KV time: 0µs
      KV contention time: 0µs
      KV rows read: 5
      KV bytes read: 40 B
      KV gRPC calls: 5
      estimated max memory allocated: 0 B
      missing stats
      table: kv@kv_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzslstu2zoQhvfnKQazsgEaknw5KLRKa6RF0KYOnMBdFEbBiAOXkEQqJOVLAz9WX6BPVoiK0thJHHuvnTkXc_j9Pzy-R3uXYYzX51_OxzfAl4tO2oXJ7HwKnS58nE4uIV0iQ6UFfeU5WYy_Y4QM-8hwgAyHyHCEc4aF0QlZq01Vcu8bLsQa45ChVEXpqvCcYaINYXyPTrqMMMYbfpvRlLggE4TIUJDjMvPXpMuzdPmjSGmDDMc6K3NlY0iR4XXBq4-9oJri8wyczCmG8M9vW58TrRwpJ7V6ljJ6ZcEQFzFEdeR246gJvYMPdXAxvRpDwrPMPtYVXJqnrZez8RisowISXSoHHVq7QCrXjSH0T6kLiNLXCnK-hpxybTbAs0wn3JGIIfQz3HKX_CQLunRF6WKo6v3sTSDC-ZZhfXpgax1fEMbRlr3C_x_2UmkjyJDYQT7fvqDQN6mEXpEJRrvyvJ996pxFXWQ4qeY5q7SgNSXlc-6HHlrl7F0GjvIChLQplJYv6GgOo1c59Hc4RMf7MDrRh0G_FwxaJ77lxP7xCvRPVWDQC4atAm8pMDhegcGpCgx7_geiVeCgAsPjFRieqsCo1_I_ZRu-wH9KttDK0t5WfPmbw2pbklhQvVqtLk1CV0Yn_pr6OPF9PiDIujob1YcL5VN-wKfN0cHm_3eaw_3m_ik3-6f4V6Eit9ImhYw7Usnm0SRNfMWl27WPIEtG8kz-4s-91bQ9GCwhuaQHpzSpxmlNrnZbk83JVn8DnhaERxthF8mgRbKPZNgi2UcyapFs59v__gYAAP__LTOZkQ==

# Very simple query to make it easier to spot regressions when rewriting results
# in test files.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM kv WHERE k = 0
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• scan
  nodes: <hidden>
  regions: <hidden>
  actual row count: 0
  KV time: 0µs
  KV contention time: 0µs
  KV rows read: 0
  KV bytes read: 0 B
  KV gRPC calls: 0
  estimated max memory allocated: 0 B
  missing stats
  table: kv@kv_pkey
  spans: [/0 - /0]
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkdHKEzEQhe99imGuFALd3gYEcVnxR2vLttQLWSTNDnVJNonJbG0p-1i-gE8muylVkcJ_l_PNOZNh5orpu0WJ2-pjVe7AwLt6vQJzgs_vq7oCA6-hQIHOt_RJ9ZRQfsElNgJD9JpS8nFC19nw1J5RFgI7FwaecCNQ-0gor8gdW0KJO3WwVJNqKS6mxi2x6uzc1pzemNPXYOiCAktvh94lCQYFboOanotijnzYA3c9SSh-_UxZa--YHHfe_VeK_keCSKqVcAsfLkx3BG8zPNabErSyNt19QXXx7-hqX5aQmAJoPziGl3TmRef4lYQ8WDYQmUeGXp2hp97HCyhrvVZM9xkOivU3SuAHDgPnH-fZ_4BmFJjVbbmJ1ZFQLkfx_APUlIJ3if7Z_aPOxdgIpPZI-cjJD1HTJno9f5Ples7NoKXEubrM4snl0tiML34HAAD__9UkxJk=

# Test a query that has a subquery and a postquery.
statement ok
CREATE TABLE parent (p INT PRIMARY KEY);
INSERT INTO parent VALUES (1), (2);
CREATE TABLE child (c INT PRIMARY KEY, p INT REFERENCES parent(p))

query T
EXPLAIN ANALYZE (DISTSQL) INSERT INTO child VALUES (1, (SELECT min(p) FROM parent))
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 2 (16 B, 2 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• root
│
├── • insert
│   │ nodes: <hidden>
│   │ regions: <hidden>
│   │ actual row count: 1
│   │ into: child(c, p)
│   │
│   └── • buffer
│       │ label: buffer 1
│       │
│       └── • values
│             size: 2 columns, 1 row
│
├── • subquery
│   │ id: @S1
│   │ original sql: (SELECT min(p) FROM parent)
│   │ exec mode: one row
│   │
│   └── • group (scalar)
│       │ nodes: <hidden>
│       │ regions: <hidden>
│       │ actual row count: 1
│       │
│       └── • scan
│             nodes: <hidden>
│             regions: <hidden>
│             actual row count: 1
│             KV time: 0µs
│             KV contention time: 0µs
│             KV rows read: 1
│             KV bytes read: 8 B
│             KV gRPC calls: 1
│             estimated max memory allocated: 0 B
│             missing stats
│             table: parent@parent_pkey
│             spans: LIMITED SCAN
│             limit: 1
│
└── • constraint-check
    │
    └── • error if rows
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 0
        │
        └── • lookup join (anti)
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 0
            │ KV time: 0µs
            │ KV contention time: 0µs
            │ KV rows read: 1
            │ KV bytes read: 8 B
            │ KV gRPC calls: 1
            │ estimated max memory allocated: 0 B
            │ table: parent@parent_pkey
            │ equality: (column2) = (p)
            │ equality cols are key
            │
            └── • filter
                │ nodes: <hidden>
                │ regions: <hidden>
                │ actual row count: 1
                │ estimated row count: 1
                │ filter: column2 IS NOT NULL
                │
                └── • scan buffer
                      nodes: <hidden>
                      regions: <hidden>
                      actual row count: 1
                      estimated row count: 1
                      label: buffer 1
·
Diagram 1 (subquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJysU91q20wQvf-eYpgrGzZYcvig6CqpccHEkYPtGEoxYbMalCXS7nZ31NgNfqy-QJ-sSIrSiBC3pb2S9syc3XPm5xHD5wITnKWr6XINs3S9AHWniww25_Pr6QoGsYDBajqfTtZQajNwQ_iwXFyCk54MD4co0NiMUllSwOQTxijwf9wKdN4qCsH6Gn5skmbZDpNIoDau4hreClTWEyaPyJoLwgRTe2LdaIwCM2Kpi-ZS2pGqWFsDrEtKIPr-LaDAW8nqjgLYil3FCUQo0NuHn0CM24PA9vT0XmCZEyanB_FCU3xc01reFrQkmZEfRX1lbRnO2s-Nu6c9CpzYoipNSMChwJWT9e8JCpzrUjPUFbrY9J1cbEBZw2Rem7zYQOPJk8ySjny7Z-qgd_C-BfPl1QSULIrwnOek9i-pl5vJBAKTA2UrwzCgHY-04WECUWOtTSC6fyuhlDsoqbR-D7IorJJMWQJRo-Ev-hH_ST_O89xTLtn6Udxvx3n68SZdrG_S6_l8cBbX0_nvZ2fc0_qLeV5ScNYE6ul86-bosBVIWU7tzgRbeUVX3qrmmfa4aHgNkFHgNnraHmamDdUCX5Ljo-TxcfL4KDnqkxsrjSs0xA_W30MhmYzaP1e-wx-k5n5PMgrktSz0V_m6YR3taRkU6S_0NNVdqNuKLtZuRhctKQSZ9xKi3x2E7eG_HwEAAP__oKKyjw==
Diagram 2 (main-query): https://cockroachdb.github.io/distsqlplan/decode.html#eJyMj89K80AUxfffU1zOqoWBL9nOTiRCoLbSVjeSRZxc2oF0bpy5wULJY_kCPpk0I4gLweX53Tl_5oL02sOiXu-q7Z7q9X5D7uj7jp5uVo_VjhalocWuWlW3ezr5sBiWdLfd3NPQRg66XMIgSMfr9sQJ9hklGoMhiuOUJF7RZX5Qd2fYwsCHYdQrbgycRIa9QL32DIteXNuTkzEoFf8LGHSsre_nYD6zG9VLIPUntlR8vCcYvLTqjpxIRh1GtXR1RXn7BiWaySCrr96k7YFhy8n8fduW0yAh8Y9RvyUXU2PA3YHz_5OM0fFDFDfXZLmZfTPoOGm-llnUIZ-mZvr3GQAA__9Sm4hi
Diagram 3 (postquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJy0lNFq2zAUhu_3FIdzlYAgdtKLoat2IQW3qVMSNzcjDNU-bbXKkibJLKHksfYCe7Jhq92alWTLYFfm_Dr_8Sf9sp_Qf1HIMcsXk3kBWV7MoHyQqoLl2fRmsoBeyqC3mEwn4wJqqXu2D-fz2RVY4UiHfh8ZalNRLmryyD9iiiuG1pmSvDeulZ66hqxaI08YSm2b0MorhqVxhPwJgwyKkKMypVDgS6Hhtrm7IwfJIEGGFQUhVTd-1gQOp0NkSGsqmyCNhiBr4pB8_-aR4a0I5QN5ME2wbW_rd-brLyHF1ZZhrJ45fBD3hDzdsr9nPZcqkCM3SHcBo87hNIVsAfmsgPxmOv0vvMNjeC-M1HMSFbnBcJe42FjiMJ2cF3CWFxlczLIcGcaAT-Pjk32kDTKcGvPYWPhspAaj210iw7FRTa09B4vPDNDuoEV_qX0QSu1u_HL5pi6NDqTfntHlshsIjkQVp14u4XYT6EV6Dx-ieD-_HkMplPI_-6yQ7rX1ajkegw9koTSNDtCjdRhIHfr8-bbFBqLHfQ17kqzFGmqqjduAUO1VDlRxSDq0P6ac7E15dEzK8Qsi54wDeRdPLR2MdgP_15u4n_HkGMY5eWu0px2ofZOT7YohVfcU_yTeNK6ka2fK7jWxnHW-TqjIh7iaxiLTcakFfG1OD5qHh83Dg-bRYfPooPnkN_Nq--5HAAAA__95O9fn
