# LogicTest: 5node

# These tests are different from explain_analyze because they require manual
# data placement.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i);

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT, FAMILY (k, w))

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify that EXPLAIN ANALYZE (DISTSQL) annotates plans with collected
# statistics.

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv WITH DETAILS]
ORDER BY 1
----
start_key           end_key                 replicas  lease_holder
<before:/Table/62>  …/1/1                   {1}       1
…/1/1               …/1/2                   {1}       1
…/1/2               …/1/3                   {2}       2
…/1/3               …/1/4                   {3}       3
…/1/4               …/1/5                   {4}       4
…/1/5               <after:/Table/107/1/1>  {5}       5

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw WITH DETAILS]
----
start_key                end_key       replicas  lease_holder
<before:/Table/106/1/5>  …/1/1         {5}       5
…/1/1                    …/1/2         {1}       1
…/1/2                    …/1/3         {2}       2
…/1/3                    …/1/4         {3}       3
…/1/4                    …/1/5         {4}       4
…/1/5                    <after:/Max>  {5}       5

# This query verifies stat collection for the tableReader, mergeJoiner, and
# aggregator.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT kv.k, avg(kw.k) FROM kv JOIN kw ON kv.k=kw.k GROUP BY kv.k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B, 20 KVs, 10 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• group (streaming)
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ group by: k
│ ordered: +k
│
└── • merge join
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │ estimated max memory allocated: 0 B
    │ estimated max sql temp disk usage: 0 B
    │ equality: (k) = (k)
    │ left cols are key
    │ right cols are key
    │
    ├── • scan
    │     nodes: <hidden>
    │     regions: <hidden>
    │     actual row count: 5
    │     KV time: 0µs
    │     KV contention time: 0µs
    │     KV rows read: 5
    │     KV pairs read: 10
    │     KV bytes read: 40 B
    │     KV gRPC calls: 5
    │     estimated max memory allocated: 0 B
    │     missing stats
    │     table: kv@kv_pkey
    │     spans: FULL SCAN
    │
    └── • scan
          nodes: <hidden>
          regions: <hidden>
          actual row count: 5
          KV time: 0µs
          KV contention time: 0µs
          KV rows read: 5
          KV pairs read: 10
          KV bytes read: 40 B
          KV gRPC calls: 5
          estimated max memory allocated: 0 B
          missing stats
          table: kw@kw_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsm2Fv2kgTx98_n2K1r1LV1KxtUmKpEi3qc0qvgYoklaoTihx7jlg2NrUXSK7Kx7ovcJ_sZLs0gGGXpfTWwfsOe9dh_JvZ-bOzk284_RpiG1--__i-e4WC2atAQ85sdBLMXwUv0P8H_QsUzNCH_nkPBXPU7-VT0BuUjaPfBv3rT-jdl_wm1nAUe9BzxpBi-w9MsIYNrGETa9jCGm7hoYYnSexCmsZJNuVb_sC5d4_tpob9aDKl2e2hht04AWx_w9SnIWAbXzm3IQzA8SDRm1jDHlDHD_OvCWadYHYzCeABa7gbh9NxlNoos-Zy4mQfG3pmxe-fEfXHYKPmP3-nxbUbRxQi6sdRaSiJ5ylKwPFsRIo7tw8UFrfa6F1xczT41EWuE4bpj3kTx08W87Lvvfjc7aKUwgS58TSi6ATuqe5H9IWNmvmrFBMAgm0Txs49GsM4Th6QE4ax61DwbNTMbbh1qHsHKYqndDKlNsrm57YvbhA8fNRwcVUgXyC9fUB3Tnq3CrOTzR9qOKXOCLBNHrX9fHS65qN5J5izfKQT5aW9vWRs9dLT34kTDxLw1v_Oy-yLd5q1weEXkIzgQ-xHkOhkbVWG8Cc96ZCXL94k_uiu-Ig13M_etkO0TgYd7sGdlh3LIpmNpV9DRGE8QZ6fBmiaOiPYG_QTRFMk1N-ORgmMHBonOmmVfKPhfsExe1Ws4be9Lze9_tVN7_rjx5MOyThcXl-cdIzsU7d_3bv6_nkLkF8cPtbPhQ8bj9H8OTyX1xc35xkgM7saQORBkkcQ6hh6xzwgtCcgrR2ATKNNSDbS6MWNeKIba3Gyr9mtrWafrphNdk_WRFBQdaOhmypZH0JSBbz0WlRSlZcOJalEjqSSo5JUTqgvS-rpcUmqcPhwJJU8d0k1ds96hqg2mQ3dUlnvENok4KW2qDYpLx1Kmww52mQclTZxQn1Zm14flzYJhw9Hm4znrk3m7lnPFNUmq6G3VNY7hDYJeOlMVJuUlw6lTaYcbTKPSps4ob6sTe3j0ibh8OFok_nctcnaPetZotrUaqicdwhlEvBRS1CZGjpBTuQhgmJ6B4ny1yE0ypKjUdZRaRQn6Jc16uy4NEo4fDgaZT13jeKcnA4gncRRCmvHZpv_cjOjBd4ICrppPE1c-JTEbv41xWU_fy4vsnqQ0mLUKC7Oo8VQSh3KOnb7lYuoWSSN3a1vb7U-AjqPkwCFDoXIffhh_uL-3PHp6ot5kELiO6H_l1N-68Vj34XBBX-Wv_bS0EIhfozl77wYHUOaoVh_-PBIiCmZCWEwaR-ECRFmouKkvPBlx4kUJkQgGRqVS4Zs69tbra-tQ9eS4X_PREoy5DBRccJLhjVhYqwzaS4zWUXSXH_YZAK1qvSzcsMSYVtPmnXURg6TlmJSShsqTspMahknFjOVriFZf7jFfNg4XU3ElftVerpngeGIw4GNZPtu9Dk4VHqBoYIerWeBgbPwZceJlL3X6z0LDEccJmwk23ej1UiGbOulFxgq6NF6Fhg4C192nEhJhm3mD9szdoHhbM8CwxHHGBsJo2pRjaILx_xabhzZTOpZYOAwqWWckNJpHqvCUA95ISKneXWJE5EzQsWEU9CoxhaEZ79sp1Zy8cuuPsiJ9NKRnio_cJjUcrPKYcKoalQkI3Lsl-1UORmRs_hllyDkRHrptHLldzOx2EUIUjrYU1UIDpN6Nk_woGzfoFWjNsOxv56FCB4U2btuOVDY7QqymciRXtUDIcqknptW1VohDqXq7TK8xV9Pp6pGCFEm9dy0qv4KcShV75nhLf56OpXdDUE47RBE9UOUke7dEFFjKLI3aFWEwihvVKQ8o3oiNvz_muqJKDOpdk9EFZnIrkTIWTt790TUGIqKFKHyRjU2I0a1eyLkZETVEyHKpJ6VCB4UFSlC5Y2KZER2T4TB6YkwVE9EGanqiRCHInuDVkUo9Wy04EGpeveMoXoiho_Dx__9GwAA__9dXYq8

# This query verifies stats collection for the hashJoiner, distinct and sorter.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT DISTINCT(kw.w) FROM kv JOIN kw ON kv.k = kw.w ORDER BY kw.w
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B, 20 KVs, 10 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│ order: +w
│
└── • distinct
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │ estimated max memory allocated: 0 B
    │ estimated max sql temp disk usage: 0 B
    │ distinct on: w
    │
    └── • hash join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 5
        │ estimated max memory allocated: 0 B
        │ estimated max sql temp disk usage: 0 B
        │ equality: (k) = (w)
        │ left cols are key
        │
        ├── • scan
        │     nodes: <hidden>
        │     regions: <hidden>
        │     actual row count: 5
        │     KV time: 0µs
        │     KV contention time: 0µs
        │     KV rows read: 5
        │     KV pairs read: 10
        │     KV bytes read: 40 B
        │     KV gRPC calls: 5
        │     estimated max memory allocated: 0 B
        │     missing stats
        │     table: kv@kv_pkey
        │     spans: FULL SCAN
        │
        └── • scan
              nodes: <hidden>
              regions: <hidden>
              actual row count: 5
              KV time: 0µs
              KV contention time: 0µs
              KV rows read: 5
              KV pairs read: 10
              KV bytes read: 40 B
              KV gRPC calls: 5
              estimated max memory allocated: 0 B
              missing stats
              table: kw@kw_pkey
              spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsW-9uo8YX_f57itF82tUPLwxgx0FaKVpvqmbbjVdOtFJVWRWBaYzA4GXGcdIoj9UX6JNV4BKvjZlrHDdMPXwL_-I759y553KGecTsW4QdfHX-8_ngGn28uLq-uBxcozfh4t3iLfphNPyMwjv0aXhxicIFGl6i8O5diN6j7Doajj6ej9CHX_IjrOE48emlO6UMO79igjVsYg1bWMM21nAXjzU8SxOPMpak2S2P-QMX_j12DA0H8WzOs9NjDXtJSrHziHnAI4odfO3eRHREXZ-muoE17FPuBlH-M-HdWXj32yykD1jDgySaT2PmoBBr-GrmZn929CyKn74iHkypg4y__mTLYy-JOY15kMSlS2myYCilru8gsjxz88BpcaqPPixP3o6-DJDnRhF7vm_mBmlxX_a7n78OBohxOkNeMo85ekPvuR7E_K2DjHwoyxsoDatumLr3aEqnSfqA3ChKPJdT30FGHsONy70JZSiZ89mcOyi7P4-9OEHw-EnDy6Ml5AWkNw9o4rLJOphn2f1jDTPu3lLskCdtP456GxwtzsJFiaPFiiOdtCztzZJZydLq_8zjJPVpSv21_zTOnoRu2UL1jy6bfEqCmKY62ZiOEf2dvzkjb9-nwe0k_wtreJgN8iwDmt5Tb14mU4Redo19ixCn0xnyAxaiOXNv6d7groCz6qT3x4DxIPa4TrolNqQYV72ksV-QNCJ0TENOdFYj79Zh_SpJOU11s8T5_2UbVm8HQrfRmY9lK6eXSSeZ6dYGoRWDBiPvVkZ-shY52V1lSM1OQDc7utWqzCF6gRosndTtBVqWDtULkFfuBcix9AJAeq96gZ6caveSXqBe0gh7ASInOlW9AMB60QuUOJe8FzB3r9VmXUW1Orrd1upDKGoNlvp1FbVl6VCKar6yoprHoqhAeq8U9UROzXiJotZLGqGimnKiU6WoAOuFopY4l1xRrd1rtVVXUe2O3m1r9SEUtQZLp3UVtWXpUIpqvbKiWseiqEB6rxS1L6dmvERR6yWNUFEtOdGpUlSA9UJRS5xLrqj27rXarquo3U5bqQ-hpzU46tbU045OkBv7iKCET2ja8nUIZbVfWVntY1FWINFXynoqp3a8RFnrJY1QWW050alSVoD1QllLnEuurMAC94iyWRIzulkNtv5nIyOc-rd0mR0smace_ZImXv4zy8Nh_lxupvuU8eVVc3lwEReXGHe5aDn530TOwHm12z3608roY8oXSRqiyOU09h6ewy_OL9yArw_Mp4ymgRsFf7jlUReP_SNnHg3u8mF_d6nQtedr-ZiLq1PKMig2Hz48JKTbMCZEgEn_IJiQupiYpM2TEiYnKmJCahRDU7piKI7-tDJ6ZQndKIavj0kjxRBIctLmCVAMFcHE3MTE-B4Taw0SY_NhSwioLVNbuWWKiKMnSvYLACZK9gtiTEyrxaSEiZLvZLawlHbFpbQrfLi3jufmwz1xEV-vZIZ0Le3Jnu7EEeeSGJLq6fVfILRxd0JCRtV0JwBMmu42Gnlx6-_pThxxmoghqbY85CiG4ugbdyckZFRNdwLApGl3opFieCpsbIkh7qmJ2P2u9ieOOMsATASuhxymDRR_0z2DjKSqaVFAoCjpUZCSB75eUU2goort4p6KDTsBvDAl00yMiZpTD_DWq10ROd5joDxv2sGQcvKr2Y6UnPDWwwAwUfO7DTEmAmtEkooI5HnTNkYzFREApWkfo5lMFy_vkR7QdpcW-FojA8BEzc83IFCq2xFJ3B1x_IoaGQAoar5NldYO1ytqH6ioJbe9NTJIyW1vjQwAk6annox5oubnHdDkkWpdZY_4lTQyzDr75hR5lQEwadrIaKQiApio-Y0HNHmq3RE5KiIUv5JGhilePzSB9UOztH7YGhkAJmoaGRAoarYjYlAE7ogc7g4Uf9NvU82QWlpBXK-oNlBRxbtOlDQyzJLbLpWRISMmak49MSZqGhnQ5FGzHQFAkWpdZVv8wBKCki_tYkyaNjKayXNg_VBNIwOYPE1_5iElKNXuiCQVUbx-aALrh6Z4t46aRgaw003NzgEARU0jA9jrpuRnHhAoUm3639ZPiTfrWcBmPatktytoZIyf_vd3AAAA___ExF2a

# This query verifies stats collection for WITH ORDINALITY and the hashJoiner.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT * FROM kv WITH ORDINALITY AS a, kv WITH ORDINALITY AS b
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B, 20 KVs, 10 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• cross join
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 25
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│
├── • ordinality
│   │ nodes: <hidden>
│   │ regions: <hidden>
│   │ actual row count: 5
│   │
│   └── • scan
│         nodes: <hidden>
│         regions: <hidden>
│         actual row count: 5
│         KV time: 0µs
│         KV contention time: 0µs
│         KV rows read: 5
│         KV pairs read: 10
│         KV bytes read: 40 B
│         KV gRPC calls: 5
│         estimated max memory allocated: 0 B
│         missing stats
│         table: kv@kv_pkey
│         spans: FULL SCAN
│
└── • ordinality
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │
    └── • scan
          nodes: <hidden>
          regions: <hidden>
          actual row count: 5
          KV time: 0µs
          KV contention time: 0µs
          KV rows read: 5
          KV pairs read: 10
          KV bytes read: 40 B
          KV gRPC calls: 5
          estimated max memory allocated: 0 B
          missing stats
          table: kv@kv_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsUs1u2zwQvH9PsdjT14KFJVnugSelboq4TeLAMVIUhVHQ4sIRRJEKSbk2Aj9WX6BPVkiqm9iJ3bg_tx53doY7nN1bdDcKOV4enx73x_Ac3oyGZ5DP4f1gfALD0evB-dHpYPwBji5BsB2NKTLURtK5KMgh_4ghThiW1qTknLE1dNsQBnKBPGCY6bLyNTxhmBpLyG_RZ14RchyLqaIRCUm2EyBDSV5kqnk2nyf5_FOZ0xIZ9o2qCu045AzmyPCyFHX1Ahm-uwKfFcQh-PrFtXVqtCftM6MftKz57MCSkBx6LTJdelpDcQCvWnQ2uuhDKpRyP4ilyOyaGNZmz676fXCeSkhNpT38TwvfybR_xiHo3BGI8l2EQiygoMLYJQilTCo8SQ6tianw6TU5MJUvK8-h5jfu10APJyuGbfU9XufFjJCHK_b0FQytzLRQmV92ws0N0ILS6mGKv2EsOsTY_duI_t3GH7qN7i_eRvdv30a809idn0obK8mS3DAzqZU_ozzyuxPhrt-aTJPtxJu_G9ZWk5AlEUu6LIlZ0mPJS2S7vr1vV3XP3SjwVJQgM5dD5cSMnrzKaHdkvUN2OSJXGu1oO7pHXw7qvEjOqM3fmcqmdGFN2oxpy2GjawBJzrfdsC0Gum3VBu-Lw73ieEMcboujveLu_sndAyZH2-J4r7i3NXmy-u9bAAAA__-WDGc_

# Verify that EXPLAIN ANALYZE on an unsupported query doesn't return an error.
statement ok
EXPLAIN ANALYZE (DISTSQL) SHOW QUERIES;

statement ok
EXPLAIN ANALYZE (DISTSQL) EXPLAIN SELECT 1

# This query verifies support for zeroNode in DistSQL.
query T
EXPLAIN (DISTSQL) SELECT sum(k) FROM kv WHERE FALSE
----
distribution: local
vectorized: true
·
• group (scalar)
│ estimated row count: 1
│
└── • norows
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkE1LxDAQhu_-ijCnLgS28ZiTq1YsdD9s1w-QHkI71tJuUzOJCKX_XZoeVoUVPc47eebJzAD01oKE6GmXrOINC67jbJ_dJQuWRUl0tWfkDkGzYDfpds2ad_Z4G6URe1EtIXDodIkbdUAC-QwCcg690QUSaTNFg38Qlx8gQw511zs7xTmHQhsEOYCtbYsg4UG1DmkZAocSrapbPzFklywIWfHquoYWkI8ctLPHKWRVhSDDkf_dtKoqg5Wy2izFd1t2vw4uxGmN-I8mRep15490VJxeIOeAZYXz0Ug7U-DO6MJr5nLrOR-USHbuirmIu7k1ffArLH6Fz3_A-Xj2GQAA__8VEanA

# This query verifies stat collection for the tableReader and windower.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT avg(k) OVER () FROM kv
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 5 (40 B, 10 KVs, 5 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• window
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│
└── • scan
      nodes: <hidden>
      regions: <hidden>
      actual row count: 5
      KV time: 0µs
      KV contention time: 0µs
      KV rows read: 5
      KV pairs read: 10
      KV bytes read: 40 B
      KV gRPC calls: 5
      estimated max memory allocated: 0 B
      missing stats
      table: kv@kv_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzslstu2zoQhvfnKQazsgEaknw5KLRKa6RF0KYOnMBdFEbBiAOXkEQqJOVLAz9WX6BPVoiK0thJHHuvnTkXc_j9Pzy-R3uXYYzX51_OxzfAl4tO2oXJ7HwKnS58nE4uIV0iQ6UFfeU5WYy_Y4QM-8hwgAyHyHCEc4aF0QlZq01Vcu8bLsQa45ChVEXpqvCcYaINYXyPTrqMMMYbfpvRlLggE4TIUJDjMvPXpMuzdPmjSGmDDMc6K3NlY0iR4XXBq4-9oJri8wyczCmG8M9vW58TrRwpJ7V6ljJ6ZcEQFzFEdeR246gJvYMPdXAxvRpDwrPMPtYVXJqmrrr3cjYeg3VUQKJL5aBDaxdI5boxhP4pdQFR-lpBzteQU67NBniW6YQ7EjGEfoZb7pKfZEGXrihdDFW9n70JRDjfMqxPD2yt4wvCONqyV_j_w14qbQQZEjvI59sXFPomldArMsFoV573s0-ds6iLDCfVPGcVE1pTUj7nfuihVc7eZeAoL0BIm0Jp-YKO5jB6lUN_h0N0vA-jE30Y9HvBoHXiW07sH69A_1QFBr1g2CrwlgKD4xUYnKrAsOd_IFoFDiowPF6B4akKjHot_1O24Qv8p2QLrSztbcWXvzmstiWJBdWr1erSJHRldOKvqY8T3-cDgqyrs1F9uFA-5Qd82hwdbP5_pzncb-6fcrN_in8VKnIrbVLIuCOVbB5N0sRXXLpd-wiyZCTP5C_-3FtN24PBEpJLejBZk2qc1uRqtzXZnGz1N-BpQXi0EXaRDFok-0iGLZJ9JKMWyXa-_e9vAAAA__9aQ5mW

# Very simple query to make it easier to spot regressions when rewriting results
# in test files.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM kv WHERE k = 0
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• scan
  nodes: <hidden>
  regions: <hidden>
  actual row count: 0
  KV time: 0µs
  KV contention time: 0µs
  KV rows read: 0
  KV bytes read: 0 B
  KV gRPC calls: 0
  estimated max memory allocated: 0 B
  missing stats
  table: kv@kv_pkey
  spans: [/0 - /0]
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkdHKEzEQhe99imGuFALd3gYEcVnxR2vLttQLWSTNDnVJNonJbG0p-1i-gE8muylVkcJ_l_PNOZNh5orpu0WJ2-pjVe7AwLt6vQJzgs_vq7oCA6-hQIHOt_RJ9ZRQfsElNgJD9JpS8nFC19nw1J5RFgI7FwaecCNQ-0gor8gdW0KJO3WwVJNqKS6mxi2x6uzc1pzemNPXYOiCAktvh94lCQYFboOanotijnzYA3c9SSh-_UxZa--YHHfe_VeK_keCSKqVcAsfLkx3BG8zPNabErSyNt19QXXx7-hqX5aQmAJoPziGl3TmRef4lYQ8WDYQmUeGXp2hp97HCyhrvVZM9xkOivU3SuAHDgPnH-fZ_4BmFJjVbbmJ1ZFQLkfx_APUlIJ3if7Z_aPOxdgIpPZI-cjJD1HTJno9f5Ples7NoKXEubrM4snl0tiML34HAAD__9UkxJk=

# Test a query that has a subquery and a postquery.
statement ok
CREATE TABLE parent (p INT PRIMARY KEY);
INSERT INTO parent VALUES (1), (2);
CREATE TABLE child (c INT PRIMARY KEY, p INT REFERENCES parent(p))

query T
EXPLAIN ANALYZE (DISTSQL) INSERT INTO child VALUES (1, (SELECT min(p) FROM parent))
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 2 (16 B, 4 KVs, 2 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• root
│
├── • insert
│   │ nodes: <hidden>
│   │ regions: <hidden>
│   │ actual row count: 1
│   │ into: child(c, p)
│   │
│   └── • buffer
│       │ label: buffer 1
│       │
│       └── • values
│             size: 2 columns, 1 row
│
├── • subquery
│   │ id: @S1
│   │ original sql: (SELECT min(p) FROM parent)
│   │ exec mode: one row
│   │
│   └── • group (scalar)
│       │ nodes: <hidden>
│       │ regions: <hidden>
│       │ actual row count: 1
│       │
│       └── • scan
│             nodes: <hidden>
│             regions: <hidden>
│             actual row count: 1
│             KV time: 0µs
│             KV contention time: 0µs
│             KV rows read: 1
│             KV pairs read: 2
│             KV bytes read: 8 B
│             KV gRPC calls: 1
│             estimated max memory allocated: 0 B
│             missing stats
│             table: parent@parent_pkey
│             spans: LIMITED SCAN
│             limit: 1
│
└── • constraint-check
    │
    └── • error if rows
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 0
        │
        └── • lookup join (anti)
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 0
            │ KV time: 0µs
            │ KV contention time: 0µs
            │ KV rows read: 1
            │ KV pairs read: 2
            │ KV bytes read: 8 B
            │ KV gRPC calls: 1
            │ estimated max memory allocated: 0 B
            │ table: parent@parent_pkey
            │ equality: (column2) = (p)
            │ equality cols are key
            │
            └── • filter
                │ nodes: <hidden>
                │ regions: <hidden>
                │ actual row count: 1
                │ estimated row count: 1
                │ filter: column2 IS NOT NULL
                │
                └── • scan buffer
                      nodes: <hidden>
                      regions: <hidden>
                      actual row count: 1
                      estimated row count: 1
                      label: buffer 1
·
Diagram 1 (subquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJysU91q20wQvf-eYpgrGzZYcvig6CqpccHEkYPtGEoxYbMalCXS7nZ31NgNfqy-QJ-sSIrSiBC3pb2S9syc3XPm5xHD5wITnKWr6XINs3S9AHWniww25_Pr6QoGsYDBajqfTtZQajNwQ_iwXFyCk54MD4co0NiMUllSwOQTxijwf9wKdN4qCsH6Gn5skmbZDpNIoDau4hreClTWEyaPyJoLwgRTe2LdaIwCM2Kpi-ZS2pGqWFsDrEtKIPr-LaDAW8nqjgLYil3FCUQo0NuHn0CM24PA9vT0XmCZEyanB_FCU3xc01reFrQkmZEfRX1lbRnO2s-Nu6c9CpzYoipNSMChwJWT9e8JCpzrUjPUFbrY9J1cbEBZw2Rem7zYQOPJk8ySjny7Z-qgd_C-BfPl1QSULIrwnOek9l1eXdPLzWQCgcmBspVhGNCOR9rwMIGosdYmEN2_lVDKHZRUWr8HWRRWSaYsgajR8Bf9iP-kH-d57imXbP0o7rfjPP14ky7WN-n1fD44i-vp_PezM-5p_cU8Lyk4awL1dL51c3TYCqQsp3Zngq28oitvVfNMe1w0vAbIKHAbPW0PM9OGaoEvyfFR8vg4eXyUHPXJjZXGFRriB-vvoZBMRu2fK9_hD1JzvycZBfJaFvqrfN2wjva0DIr0F3paiC7UbUUXazeji5YUgsx7CdHvDsL28N-PAAAA__-j4bKQ
Diagram 2 (main-query): https://cockroachdb.github.io/distsqlplan/decode.html#eJyMj89K80AUxfffU1zOqoWBL9nOTiRCoLbSVjeSRZxc2oF0bpy5wULJY_kCPpk0I4gLweX53Tl_5oL02sOiXu-q7Z7q9X5D7uj7jp5uVo_VjhalocWuWlW3ezr5sBiWdLfd3NPQRg66XMIgSMfr9sQJ9hklGoMhiuOUJF7RZX5Qd2fYwsCHYdQrbgycRIa9QL32DIteXNuTkzEoFf8LGHSsre_nYD6zG9VLIPUntlR8vCcYvLTqjpxIRh1GtXR1RXn7BiWaySCrr96k7YFhy8n8fduW0yAh8Y9RvyUXU2PA3YHz_5OM0fFDFDfXZLmZfTPoOGm-llnUIZ-mZvr3GQAA__9Sm4hi
Diagram 3 (postquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJy0lMFu2zwMx-_fUxA8JYCA2EkPH3RqF6SA29QuEjeXIRhUm221ypImyViCIo-1F9iTDbbabVmRbB2wk8G_-Kd_FGk_of-kkGOWL2eLErK8LKB6kKqG1dn8ZraEQcpgsJzNZ9MSGqkHdgjni-IKrHCkw3CIDLWpKRcNeeTvMcU1Q-tMRd4b10lPfUJWb5AnDKW2bejkNcPKOEL-hEEGRchRmUoo8JXQcNve3ZGDZJQgw5qCkKovX7SBw-kYGdKGqjZIoyHIhjgkX794ZHgrQvVAHkwbbJfb-Z35_ENIcb1jGKNnDh_EPSFPd-zPWc-lCuTIjdJ9wKhzOE0hW0JelJDfzOf_hHf8Ft4LI_WCRE1uNN4nLreWOMxn5yWc5WUGF0WWI8M44NP4-GAfaYsM58Y8thY-GqnB6K5LZDg1qm2052DxmQG6Djr0l9gHodR-45erV3FldCD9-o4uV31BcCTqWPVyBbfbQC_S__AuiveL6ylUQin_Pc8K6V7yus6vVtMp-EAWKtPqAAPahJHUYcifty0mED0eSjgwyUZsoKHGuC0I1a1yoJpD0qP9dsrJwSlP3jLl-AWRc8aBvIu3lo4m-wP_2008zHjyFsYFeWu0pz2oQ5WT3Zoh1fcU_yTetK6ia2eq_jUxLHpfL9TkQzxNY5DpeNQB_mxOj5rHx83jo-bJcfPkqPnkF_N699-3AAAA__978Nfo
