# LogicTest: 5node

# These tests are different from explain_analyze because they require manual
# data placement.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i);

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT, FAMILY (k, w))

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify that EXPLAIN ANALYZE (DISTSQL) annotates plans with collected
# statistics.

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {1}       1
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {5}       5
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# This query verifies stat collection for the tableReader, mergeJoiner, and
# aggregator.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT kv.k, avg(kw.k) FROM kv JOIN kw ON kv.k=kw.k GROUP BY kv.k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• group (streaming)
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ group by: k
│ ordered: +k
│
└── • merge join
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │ estimated max memory allocated: 0 B
    │ estimated max sql temp disk usage: 0 B
    │ equality: (k) = (k)
    │ left cols are key
    │ right cols are key
    │
    ├── • scan
    │     nodes: <hidden>
    │     regions: <hidden>
    │     actual row count: 5
    │     KV time: 0µs
    │     KV contention time: 0µs
    │     KV rows read: 5
    │     KV bytes read: 40 B
    │     estimated max memory allocated: 0 B
    │     missing stats
    │     table: kv@kv_pkey
    │     spans: FULL SCAN
    │
    └── • scan
          nodes: <hidden>
          regions: <hidden>
          actual row count: 5
          KV time: 0µs
          KV contention time: 0µs
          KV rows read: 5
          KV bytes read: 40 B
          estimated max memory allocated: 0 B
          missing stats
          table: kw@kw_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsm99u4rgXx-9_T2H5qtWECU5CSyONxEw1v1VnWxj1z0ijFapScpZGQMIkprRb9bH2BfbJVkmGKRCwMdNZu9h3SRyHk4-Pzzc-Pjzi7NsQ-_ji4-nH40s0uHs7sFBw198bTN8O9tH_zztnaHCHPnVO2mgwRZ12cQt6h_J29Nt55-oz-vC1uIgtHCchtIMRZNj_AxNsYQdb2MUW9rCFG7hr4XGa9CDLkjS_5bHocBLeY79u4SgeT2h-uWvhXpIC9h8xjegQsI8vg5shnEMQQmrXsYVDoEE0LH5mcNcap9EoSB-whY-T4WQUZz7KrbkYB_lhzc6t-P0LotEIfFT_5--sPO8lMYWYRklcaUqTaYZSCEIfkfLKzQOF2aUm-oAtfPbl-BhlFMaol0xiivbgntpRTPd9VC-MLG8AGKy7YRTcoxGMkvQBBcNh0gsohD6qF0-_CWjvFjKUTOh4Qn2U319YNbtAcPfJwuVZCXMG6-YB3QbZ7SKmVn5_18IZDfqAffJkbUf_YIn-lEPfJob_Cv7OWv7Pz0nSEFIIl5_zJv_hje5aMZRnkPbhUxLFkNpkaSYN4U-61yJv9t-lUf-2PMQW7uRv2yJWKx9GuIfepDpkLJJ5W_ZtiCiMxiiMsgGaZEEftgb9DNEVceL3_X4K_YAmqU0albGxcKfkmL8qtvD79tfrdufyun11errXIjmHi6uzvZaTHx13rtqX34_XAPnF7uP9nPuw8Tj1n8NzcXV2fZIDcvOzc4hDSAsPQi3HbrkvCO0ZSGMDIJN4FZKVNNpJLRnbzpKfbGt2Y63ZBwtmk83DMBEUQdup2a4Jw2wZFOB_KCqDhj9fBokcGSQ7JYMcJ56XwYPdkkFh9-HIIHntMuhsHs8cUT1xa7Zn4hlbTwT4N0X1xPDn64kjR0-cndITjhPP68nhbumJsPtw9MR57Xribh7PXFE98Wp2w8Qztp4I8D8S1RPDn68nrhw9cXdKTzhOPK8nzd3SE2H34eiJ-9r1xNs8nnmietKomWjGVhMB-g1BNanZBAVxiAhK6C2kZiTYuuLJ0RVvp3SF487zunK0W7oi7D4cXfFeu65wdgLPIRsncQZL20Crn1zPaUHYh5JulkzSHnxOk17xM-Vpp-hXJCBDyGjZ6pQnJ_GsKaMBZW0j_cpJVC-DxubWN9daHwOdJukADQMKce_hh_mz69MgoosvFkIGaRQMo7-C6lvPun0P-T2I7orXnmuaxf4fbcU7z1pHkOUolju_PBLiSmZCGEyaL8KECDMxflKd-LL9RAoTIhAMHeWCIdv65lrrtR3QpWD43zOREgw5TIyf8IKhJkycZSb1eSaLSOrLnV0mUE-lz8oVU4RtPanrqI0cJg3DpBI2jJ9UmWjpJx4zlC4hWe7cYHZ2DhYDsXJfpQdbJhh22B3YSNavRl_DgEpPMCg4onomGDgTX7afSFl7HW6ZYNhhN2EjWb8aVSMYsq2XnmBQcET1TDBwJr5sP5ESDJvMD9sjdoLhaMsEww77GBsJI2uhRtKFY76WC0c2Ez0TDBwmWvoJqezmsTIMesgLEdnN08VPRPYIDRNOQkONJQjPftmDquTkl519kOPplS09k37gMNFyscphwshqKBIROfbLHlQ5EZEz-WWnIOR4emW3cuG7mXjsJASpbOyZLASHiZ7FEzwo6xdoauRmOPbrmYjgQZG96pYDhV2uIJuJHOk1NRCiTPRctJrSCnEoqpfL8Ca_noNqCiFEmei5aDX1FeJQVK-Z4U1-PQeVXQ1BOOUQxNRDVJFuXRChMRTZCzQVoTDSG4qkZ0xNxIr_r5maiCoTtWsiVGQiOxMhZ-5sXROhMRTjKULpDTUWI47aNRFyIqKpiRBlomcmggfFeIpQekORiMiuiXA4NRGOqYmoIjU1EeJQZC_QVISiZ6EFD4rq1TOOqYnoPnWf_vdvAAAA__-xnB8P

# This query verifies stats collection for the hashJoiner, distinct and sorter.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT DISTINCT(kw.w) FROM kv JOIN kw ON kv.k = kw.w ORDER BY kw.w
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│ order: +w
│
└── • distinct
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │ estimated max memory allocated: 0 B
    │ estimated max sql temp disk usage: 0 B
    │ distinct on: w
    │
    └── • hash join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 5
        │ estimated max memory allocated: 0 B
        │ estimated max sql temp disk usage: 0 B
        │ equality: (k) = (w)
        │ left cols are key
        │
        ├── • scan
        │     nodes: <hidden>
        │     regions: <hidden>
        │     actual row count: 5
        │     KV time: 0µs
        │     KV contention time: 0µs
        │     KV rows read: 5
        │     KV bytes read: 40 B
        │     estimated max memory allocated: 0 B
        │     missing stats
        │     table: kv@kv_pkey
        │     spans: FULL SCAN
        │
        └── • scan
              nodes: <hidden>
              regions: <hidden>
              actual row count: 5
              KV time: 0µs
              KV contention time: 0µs
              KV rows read: 5
              KV bytes read: 40 B
              estimated max memory allocated: 0 B
              missing stats
              table: kw@kw_pkey
              spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsm9Fuo0YXx--_pxjNVaIPL8yAHQdppWiTVM22G1dJtFJV-YLANEa2wcuM46RRHqsv0CerwGW9NmaOSbaZqYe72IBz5nfOnP_wH3jC_MsE-_j6_Ofz0xt0dnF9c3F5eoMOxot3i0P0w9XgExrfo4-Di0s0XqDBJRrfvxuj9yg_jgZXZ-dX6MOvxSds4SSN2GUwZRz7v2GCLUyxhV1sYQ9buIuHFp5lacg4T7P8lKfigovoAfuOheNkNhf510MLh2nGsP-ERSwmDPv4JridsCsWRCyzHWzhiIkgnhT_Znx_MsviaZA9YgufppP5NOE-GmMLX8-C_M-OnUfx02ck4inzkfPXn3z5OUwTwRIRp0nlUJYuOMpYEPmILL-5fRSs_KqPPmALf_p8eoq4YDMUpvNEoAP2IOw4EYc-cooglycwNq47YRo8oCmbptkjCiaTNAwEi3zkFL9-G4hwxDhK52I2Fz7Kzy-iKr8gePhs4eWnJcwS1u0jGgV8tI7pJD9_aGEugjuGffJsvYx-b4P-Yhv9xYq-TVr-W_jTWv6r35knaRaxjEVrvzTMr4RO2ZLEHwM--pjGCctssjGFJux3cXBCDt9n8d2o-AtbeJAP8iRPHXtg4byaJhm9_Bj_MkGCTWcoivkYzXlwx14MdwXObVK4ZzEXcRIKm3Qr2dBiXM2KxntF0cjoUEdPOquRd5tk_TrNBMtsWsn5_3UbVm-HhG5LZzGWrTm9TDvpzHY3ElozaDDybm3kR2uRk931gzRUb5t2bLfVD7l-N-B_1FS_W_6wfpM31m-yL_oNFO5Kv3t6KtRr9LtZ0Uj1m-hJp06_gayX-l3Jueb6TXfvwrSpCrod22u7sFwFG_DvN1XBlj-sgvSNVZDuiwoChbtSwSM9-_xrVLBZ0UhVkOpJp04FgayXKljJueYq6O7ehd2mKuh17G7bheUq2ID_cVMVbPnDKui-sQq6-6KCQOGuVLCvZ59_jQo2KxqpCrp60qlTQSDrpQpWcq65Cnq7d2GvqQp2O20PlmtgA_rdhhrYsQkKkggRlIoRy9pMyNXQe2M19PZFDYESXqnhsZ79_jVq2KxopGro6UmnTg2BrJdqWMm55moIbNheMT5LE842u8HWX3byhLPoji2rg6fzLGS_ZGlY_Jvlx0FxXWE0R4yL5VG6_HCRlIe4CIRse_TfJOfgotvtHv1xbfQJE4s0G6NJIFgSPn4Nv_x-EcRifWAR4yyLg0n8R1AddXnZP0IVsvi-GPY3h0rF-nqsGHN5dMp4jmLz4u-PhHQVMyESJv3vwoQ0ZUJJWycVJkcmMiENmiHVrhnKoz-ujd7YhG40w7dnoqQZAkVO2joBmqEhTOgmE-dbJu4aEmfzYlcK1NNpWbllisijJ0auFwAmRq4X5Eyo2zKpMDHynsyTttKuvJV2pRf31nluXtyTN_H1TuZot6Q9eqE7sce1JEdSP73-CwlV7k5omFEz3QmAierVhpIbt_4L3Yk9LhM5knrLQ49mKI9euTuhYUbNdCcAJqrdCSXN8Fi6sCWOfE1N5O53vT-xx1UGMJG4HnqYNlD8qtcMOibVTIsCgmKkR0EqHvh6R6VAR5XbxT0TF-wE8MKMLDM5EzOnHuCt17sietzHQHWu2sHQcvKbuRypOOGthwEwMfO5DTkTiTWiSUcE6ly1jaGmIwJQVPsYaipdvr1HesCyu7LB1xoZABMzH9-AoNQvRzRxd-TxG2pkAFDMvJuq7B2ud9Q-0FErbntrZJCK294aGQAT1VNPxzox8_EOaPJota_ygviNNDJok_fmDLmVAZioNjKUdESAiZnPeECTp94d0aMjQvEbaWRQ-f4hBfYPaWX_sDUyACZmGhkQFDOXI3IoEndED3cHil_13ZSapFZ2ENc7qgd0VPlbJ0YaGbTitmtlZOjIxMypJ2dippEBTR4zlyMAFK32VbbFD2whGHnTLmei2shQU-fA_qGZRgYweVQ_5qEllHp3RJOOKN8_pMD-IZW_rWOmkQG86WbmygGAYqaRAbzrZuRjHhAUrV7637aekr-s5wIv67kVu91AI2P4_L-_AwAA__9cpPHe

# This query verifies stats collection for WITH ORDINALITY and the hashJoiner.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT * FROM kv WITH ORDINALITY AS a, kv WITH ORDINALITY AS b
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 10 (80 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• cross join
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 25
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│
├── • ordinality
│   │ nodes: <hidden>
│   │ regions: <hidden>
│   │ actual row count: 5
│   │
│   └── • scan
│         nodes: <hidden>
│         regions: <hidden>
│         actual row count: 5
│         KV time: 0µs
│         KV contention time: 0µs
│         KV rows read: 5
│         KV bytes read: 40 B
│         estimated max memory allocated: 0 B
│         missing stats
│         table: kv@kv_pkey
│         spans: FULL SCAN
│
└── • ordinality
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │
    └── • scan
          nodes: <hidden>
          regions: <hidden>
          actual row count: 5
          KV time: 0µs
          KV contention time: 0µs
          KV rows read: 5
          KV bytes read: 40 B
          estimated max memory allocated: 0 B
          missing stats
          table: kv@kv_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsUcFu00AQvfMVozkBWhTbcTjsySUUNdA2KImKEMph4x2lq9i77u46JIryWfwAX4ZsU9GkjduAuPU4b-bNvHlvg-4mQ47j0_PT_gRew4fR8AIWS_gymJzBcPR-cHlyPph8hZMxCHagMUOG2ki6FDk55N8wxCnDwpqUnDO2gjb1wECukAcMlS5KX8FThqmxhHyDXvmMkONEzDIakZBkOwEylOSFyuq1i2VSWJULu0aGfZOVuXYcFgyWyHBciKp6gww_XYFXOXEIfv5wTZ0a7Ul7ZfS9ljXfHVgSkkOvQWZrT7dQHMA7ZHhx1e-D81RAakrt4SWtfEdp_4pDUMtsBogWhwZysYKccmPXILLMpMKT5NBsnwmfXpMDU_qi9Byq-VrWLdDD6ZZhU_32zXkxJ-Thlj3d26GVSotM-XUn3LWWVpSW9-35B2HRMcLuhh49h_6Yt92_DL37v0OPDwr7o6fUxkqyJHfETCvmYyMPfHcm3PVHozTZTrz73bCSmoQsiVjSZUnMkh5L3iI79HZbVlXP3WTgKS9AKreA0ok5PTnK6LBlvWOyHJErjHa0b92Dm4PKL5Jzavx3prQpfbYmrc805bDm1YAk55tu2BQD3bQqgXfJYSs53iGH--Soldxtv9w94nK0T45byb29y9Pti18BAAD__2MJUVE=

# Verify that EXPLAIN ANALYZE on an unsupported query doesn't return an error.
statement ok
EXPLAIN ANALYZE (DISTSQL) SHOW QUERIES;

statement ok
EXPLAIN ANALYZE (DISTSQL) EXPLAIN SELECT 1

# This query verifies support for zeroNode in DistSQL.
query T
EXPLAIN (DISTSQL) SELECT sum(k) FROM kv WHERE FALSE
----
distribution: local
vectorized: true
·
• group (scalar)
│ estimated row count: 1
│
└── • norows
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkE1LxDAQhu_-ijCnLgS28ZiTq1YsdD9s1w-QHkI71tJuUzOJCKX_XZoeVoUVPc47eebJzAD01oKE6GmXrOINC67jbJ_dJQuWRUl0tWfkDkGzYDfpds2ad_Z4G6URe1EtIXDodIkbdUAC-QwCcg690QUSaTNFg38Qlx8gQw511zs7xTmHQhsEOYCtbYsg4UG1DmkZAocSrapbPzFklywIWfHquoYWkI8ctLPHKWRVhSDDkf_dtKoqg5Wy2izFd1t2vw4uxGmN-I8mRep15490VJxeIOeAZYXz0Ug7U-DO6MJr5nLrOR-USHbuirmIu7k1ffArLH6Fz3_A-Xj2GQAA__8VEanA

# This query verifies stat collection for the tableReader and windower.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT avg(k) OVER () FROM kv
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 5 (40 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• window
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│
└── • scan
      nodes: <hidden>
      regions: <hidden>
      actual row count: 5
      KV time: 0µs
      KV contention time: 0µs
      KV rows read: 5
      KV bytes read: 40 B
      estimated max memory allocated: 0 B
      missing stats
      table: kv@kv_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzslctu2zoQhvfnKQazsgEaknw5KLhKa6RF0KYunMBdFF4w4sAlJJEKSfnSwI_VF-iTFaKiNnYutdfOznP5yeHnX5g7dLc5crw6_3Q-vgaxXHSyLkxm51PodOH9dHIJ2RIZaiPpsyjIIf-GCTLsI8MBMhwiwxHOGZbWpOScsXXLXRBcyDXymKHSZeXr9Jxhaiwhv0OvfE7I8Vrc5DQlIclGMTKU5IXKwzXZ8qy0qhB2gwzHJq8K7ThkyPCqFPXPXlRP8XEGXhXEIf710zVxarQn7ZXRj0rWrBxYEpJD0mRuNp7a1Bt4hwwvZ-MxOE8lpKbSHjq09pHSvsshDkM2DUTZcw2FWENBhbEbEHluUuFJcojD6TfCp9_Jgal8WXkOdX-Yqk0kON8ybKJ7as6LBSFPtuwZsn-BVtpYSZbkDsz59gn2X5WWZkU2Gu2Cfzv70DlLushwUs9zVlOmNaXVY6IvPbSuudscPBUlSOUyqJxY0MEcRs9y6O9wSA53WHKkw6J-Lxqcssf6h7PtH8t20IuGp8x2cDjbwbFsh73wUZ8s2-HhbIfHsh31TpnsP_b5lFxptKO97fP0yXG9lUguqFlhzlQ2pS_WpOGaJpwEXUhIcr6pJk1woUMpDPhQnLwo_n9HHO-L-8fcHJ4SXoWa_MrYDHLhSaebP39_m18J5XeNIcmRVSJXP8Rj17Sye-ukpJZ0b5-21HqorTU-aqsFuXrdPmyIDzbCLpLBK5J9JMNXJPtIRq9ItvPtf78DAAD__06QY8I=

# Very simple query to make it easier to spot regressions when rewriting results
# in test files.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM kv WHERE k = 0
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• scan
  nodes: <hidden>
  regions: <hidden>
  actual row count: 0
  KV time: 0µs
  KV contention time: 0µs
  KV rows read: 0
  KV bytes read: 0 B
  estimated max memory allocated: 0 B
  missing stats
  table: kv@kv_pkey
  spans: [/0 - /0]
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyMUcFq20AQvfcrhjm1sGD5ulAoFSo1resiG-cQdFivBkdI2lF2R46N0WflB_JlQVrjEIIht31v3nszvD1jeGxQ4zr7m6UbqOFXvlpCfYC731meQQ3fIUGFjkv6Z1oKqO9xjoXCzrOlENiP1HkSLMoj6kRh5bpeRrpQaNkT6jNKJQ2hxo3ZNZSTKcnPxuCSxFTNFFsffnS-ao0_ocKUm751QUONCtedGZ-zZLL82YJULWlIXp5DxJadkJOK3YeR56cAnkyp4WLenYSuFPxEhcttmkIQ6sBy7wS-0lFmlZNvGuLKKCCqbwlac4SWWvYnME3D1ghd03dG7AMF4F66XuIZ01VvRDEojOhSWxCzJ9TzQX2-2pxCxy7Qu1ZvJSdDoZDKPcXvC9x7S_8922lNhKvJNxElBYnTeQQLF0dDMXx5DQAA__98z7nY

# Test a query that has a subquery and a postquery.
statement ok
CREATE TABLE parent (p INT PRIMARY KEY);
INSERT INTO parent VALUES (1), (2);
CREATE TABLE child (c INT PRIMARY KEY, p INT REFERENCES parent(p))

query T
EXPLAIN ANALYZE (DISTSQL) INSERT INTO child VALUES (1, (SELECT min(p) FROM parent))
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows read from KV: 2 (16 B)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• root
│
├── • insert
│   │ nodes: <hidden>
│   │ regions: <hidden>
│   │ actual row count: 1
│   │ into: child(c, p)
│   │
│   └── • buffer
│       │ label: buffer 1
│       │
│       └── • values
│             size: 2 columns, 1 row
│
├── • subquery
│   │ id: @S1
│   │ original sql: (SELECT min(p) FROM parent)
│   │ exec mode: one row
│   │
│   └── • group (scalar)
│       │ nodes: <hidden>
│       │ regions: <hidden>
│       │ actual row count: 1
│       │
│       └── • scan
│             nodes: <hidden>
│             regions: <hidden>
│             actual row count: 1
│             KV time: 0µs
│             KV contention time: 0µs
│             KV rows read: 1
│             KV bytes read: 8 B
│             estimated max memory allocated: 0 B
│             missing stats
│             table: parent@parent_pkey
│             spans: LIMITED SCAN
│             limit: 1
│
└── • constraint-check
    │
    └── • error if rows
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 0
        │
        └── • lookup join (anti)
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 0
            │ KV time: 0µs
            │ KV contention time: 0µs
            │ KV rows read: 1
            │ KV bytes read: 8 B
            │ table: parent@parent_pkey
            │ equality: (column2) = (p)
            │ equality cols are key
            │
            └── • filter
                │ nodes: <hidden>
                │ regions: <hidden>
                │ actual row count: 1
                │ estimated row count: 1
                │ filter: column2 IS NOT NULL
                │
                └── • scan buffer
                      nodes: <hidden>
                      regions: <hidden>
                      actual row count: 1
                      label: buffer 1
·
Diagram 1 (subquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJysU9Fq20oQfb9fMcyTDRssOVwo-5TUuGDiyMV2DKWYsFkNyhJpV90dNXaDP6s_0C8rkqw2IsRtad-0Z-bMnjl79IThU44SZ8lqulzDLFkvQN-bPIXN5fxmuoJBLGCwms6nkzUUxg7KIbxbLq6hVJ4sD4co0LqUElVQQPkRYxT4P24Flt5pCsH5Gn5qmmbpDmUk0Niy4hreCtTOE8onZMM5ocTEnblyNEaBKbEyeTOUdqQrNs4Cm4IkRN--BhR4p1jfUwBXcVmxhAgFevf4E4hxexDYno73BVYZoTw_iGea4tOa1uoupyWplPwo6itrbbgovSmU36PAicurwgYJJQpclar-PEOBc1MYhtqdq01_i6sNaGeZ7MsFrzbQ7ONJpbIj3-2ZOugNvEWB15vJBAJTCdpVlmFAOx4Zy0MJUSO4bSB6eK2hUDsoqHB-DyrPnVZMqYSomf4XLsd_4vJllnnKFDs_ivsmXyYfbpPF-ja5mc8HF3GduX-fiHFP6y9SuqRQOhuop_O1ydFhK5DSjNo_IbjKa3rvnW6uaY-LhtcAKQVuq-ftYWbbUi3wOTk-SR6fJo9PkqM-uVml2Qot8aPzD5ArJqv3P5zv8EdluP8mKQXyRuXmi3r5YB3tGHNN5jMdo96Vurx3tTbzXbWgEFTWa4h-Nwjbw3_fAwAA__-BaaYj
Diagram 2 (main-query): https://cockroachdb.github.io/distsqlplan/decode.html#eJyMj89K80AUxfffU1zOqoWBL9nOTiRCoLbSVjeSRZxc2oF0bpy5wULJY_kCPpk0I4gLweX53Tl_5oL02sOiXu-q7Z7q9X5D7uj7jp5uVo_VjhalocWuWlW3ezr5sBiWdLfd3NPQRg66XMIgSMfr9sQJ9hklGoMhiuOUJF7RZX5Qd2fYwsCHYdQrbgycRIa9QL32DIteXNuTkzEoFf8LGHSsre_nYD6zG9VLIPUntlR8vCcYvLTqjpxIRh1GtXR1RXn7BiWaySCrr96k7YFhy8n8fduW0yAh8Y9RvyUXU2PA3YHz_5OM0fFDFDfXZLmZfTPoOGm-llnUIZ-mZvr3GQAA__9Sm4hi
Diagram 3 (postquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJy0lMGO2jAQhu99itGcQLJEAnuofNrtipWyZJMKslwqDsYZdt0Ndmo7KgjxWH2BPlmVmFVLV6BStTfm9_zjb_it7NB9qZBjks3G0wKSrMhBPquqhPlN-jieQS9m0JuN0_FtAWule3Uf7qb5A9TCkvb9PjLUpqRMrMkh_4QxLhjW1khyzthW2nUNSblBHjFUum58Ky8YSmMJ-Q698hUhx8pIUYGTQsOyWa3IQjSIkGFJXqiqG583nsP1EBnShmTjldHg1Zo4RN-_OWS4FF4-kwPT-Lrtbf3WfP0pxLjYMwzVgcN58UTI4z37c9Y7VXmyZAfxMWDQOVzHkMwgywvIHtP0v_AOL-G9N0pPSZRkB8Nj4mJbE4d0fFfATVYkcJ8nGTIMAV_XVq2F3SLD1JiXpobPRmkwut0Q2SGP9ld3ObToLfNr7byoquONJ_M3tTTak37750zm3UCwJMowdTKH5dbTq_QePiDDh_ntLThPNUjTaA892viB0r7PDw8oNBC9nGr423Cik-GMLgknPHyy1lhQq7BzPBgd5_TvGa8uYZySq412dAR1anK0XzCk8onCB8CZxkr6aI3srgll3vk6oSTnw2kcikSHoxbwV3N81jw8bx6eNY_Om0dnzVe_mRf7dz8CAAD__4iLwK8=
