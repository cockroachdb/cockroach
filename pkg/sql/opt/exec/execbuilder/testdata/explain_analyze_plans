# LogicTest: 5node

# These tests are different from explain_analyze because they require manual
# data placement.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i);

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT, FAMILY (k, w))

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify that EXPLAIN ANALYZE (DISTSQL) annotates plans with collected
# statistics.

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv WITH DETAILS]
ORDER BY 1
----
start_key           end_key                 replicas  lease_holder
<before:/Table/62>  …/1/1                   {1}       1
…/1/1               …/1/2                   {1}       1
…/1/2               …/1/3                   {2}       2
…/1/3               …/1/4                   {3}       3
…/1/4               …/1/5                   {4}       4
…/1/5               <after:/Table/107/1/1>  {5}       5

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw WITH DETAILS]
----
start_key                end_key       replicas  lease_holder
<before:/Table/106/1/5>  …/1/1         {5}       5
…/1/1                    …/1/2         {1}       1
…/1/2                    …/1/3         {2}       2
…/1/3                    …/1/4         {3}       3
…/1/4                    …/1/5         {4}       4
…/1/5                    <after:/Max>  {5}       5

# This query verifies stat collection for the tableReader, mergeJoiner, and
# aggregator.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT kv.k, avg(kw.k) FROM kv JOIN kw ON kv.k=kw.k GROUP BY kv.k
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows decoded from KV: 10 (80 B, 10 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• group (streaming)
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ group by: k
│ ordered: +k
│
└── • merge join
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │ estimated max memory allocated: 0 B
    │ estimated max sql temp disk usage: 0 B
    │ equality: (k) = (k)
    │ left cols are key
    │ right cols are key
    │
    ├── • scan
    │     nodes: <hidden>
    │     regions: <hidden>
    │     actual row count: 5
    │     KV time: 0µs
    │     KV contention time: 0µs
    │     KV rows decoded: 5
    │     KV bytes read: 40 B
    │     KV gRPC calls: 5
    │     estimated max memory allocated: 0 B
    │     missing stats
    │     table: kv@kv_pkey
    │     spans: FULL SCAN
    │
    └── • scan
          nodes: <hidden>
          regions: <hidden>
          actual row count: 5
          KV time: 0µs
          KV contention time: 0µs
          KV rows decoded: 5
          KV bytes read: 40 B
          KV gRPC calls: 5
          estimated max memory allocated: 0 B
          missing stats
          table: kw@kw_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsm-Fu2kgQx7_fU6z2U6qamrVNSixVokW9U3oNVCSpVJ1Q5NhzxLKxqb1AclUe617gnuxk-2gBwy5L6K2D9xv2rsP4N7PzZ2cn33D6NcQ2vnz_8X33CgWzV4GGnNnoJJi_Cl6gXwf9CxTM0If-eQ8Fc9Tv5VPQG5SNo98G_etP6N2X_CbWcBR70HPGkGL7D0ywhg2sYRNr2MIabuGhhidJ7EKaxkk25Vv-wLl3j-2mhv1oMqXZ7aGG3TgBbH_D1KchYBtfObchDMDxINGbWMMeUMcP868JZp1gdjMJ4AFruBuH03GU2iiz5nLiZB8bembF758R9cdgo-Y_f6fFtRtHFCLqx1FpKInnKfLAjT3wbESKm7cPFFKUgOPZqI3eFTdHg09d5DphmH6fN3H8ZDEvu3XxudtFKYUJcuNpRNEJ3FPdj-gLGzXztykmAATbJoydezSGcZw8ICcMY9ehmVnN3IZbh7p3kKJ4SidTaqNsfm7-4gbBw0cNF1cF9QXV2wd056R3qzw72fyhhlPqjADb5FHbz02na26ad4I5y006UY56iqOMrY768XfixIMEvPW_8zL74p1mbfD5BSQj-BD7ESQ6WVubIfxJTzrk5Ys3iT-6Kz5iDfezt-0QrZP5G-7BnZZ9yyKZjaVfQ0RhPEGenwZomjoj2Bv0D4imSLS_HY0SGDk0TnTSKvlGw_2CY_aqWMNve19uev2rm971x48nHZJxuLy-OOkY2adu_7p39d_nLUB-cvhYTwsfNh6j-TQ8l9cXN-cZIDO7GkDkQZJHEOoYesc8ILQfQFo7AJlGm5BspNGLG_FEN9biZF-zW1vNPl0xm-yer4mgrOpGQzdVvj6QsAo46rWosCpHHVBYiRxhJUclrJxoXxbW0-MSVuHw4Qgree7Cauye-AxRhTIbuqUS34EUSsBRbVGFUo46oEIZchTKOCqF4kT7skK9Pi6FEg4fjkIZz12hzN0TnymqUFZDb6nEdyCFEnDUmahCKUcdUKFMOQplHpVCcaJ9WaHax6VQwuHDUSjzuSuUtXvis0QVqtVQae9A-iTgppagPjV0gpzIQwTF9A4S5bIDKZUlR6mso1IqTtwvK9XZcSmVcPhwlMp67krFOVEdQDqJoxTWjtM2_-VmRgu8ERR003iauPApid38a4rLfv5cXnb1IKXFqFFcnEeLoZQ6lHUc9zMXUbNIGrtb395qfQR0HicBCh0Kkfvw3fzF_bnj09UX8yCFxHdC_y-n_NaLx3JzE3DBn-WvvTS0UIjvY_k7L0bHkGYo1h8-PBJiSmZCGEzaB2FChJmoOCkvfNlxIoUJEUiGRuWSIdv69lbra-vQtWT4_zORkgw5TFSc8JJhTZgY60yay0xWkTTXHzaZQK0q_azcsETY1pNmHbWRw6SlmJTShoqTMpNaxonFTKVrSNYfbjEfNk5XE3HlfpWe7llgOOJwYCPZvht9Dg6VXmCooEfrWWDgLHzZcSJl7_V6zwLDEYcJG8n23Wg1kiHbeukFhgp6tJ4FBs7Clx0nUpJhm_nD9oxdYDjbs8BwxDHGRsKoWlSj6MIxv5YbRzaTehYYOExqGSekdJrHqjDUQ16IyGleXeJE5IxQMeEUNKqxBeHZL9uplVz8sqsPciK9dKSnyg8cJrXcrHKYMKoaFcmIHPtlO1VORuQsftklCDmRXjqtXPndTCx2EYKUDvZUFYLDpJ7NEzwo2zdo1ajNcOyvZyGCB0X2rlsOFHa7gmwmcqRX9UCIMqnnplW1VohDqXq7DG_x19OpqhFClEk9N62qv0IcStV7ZniLv55OZXdDEE47BFH9EGWkezdE1BiK7A1aFaEwyhsVKc-onogN_7-meiLKTKrdE1FFJrIrEXLWzt49ETWGoiJFqLxRjc2IUe2eCDkZUfVEiDKpZyWCB0VFilB5oyIZkd0TYXB6IgzVE1FGqnoixKHI3qBVEUo9Gy14UKrePWOonojh4_Dxl38DAAD__5cglmo=

# This query verifies stats collection for the hashJoiner, distinct and sorter.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT DISTINCT(kw.w) FROM kv JOIN kw ON kv.k = kw.w ORDER BY kw.w
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows decoded from KV: 10 (80 B, 10 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• sort
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│ order: +w
│
└── • distinct
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │ estimated max memory allocated: 0 B
    │ estimated max sql temp disk usage: 0 B
    │ distinct on: w
    │
    └── • hash join
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 5
        │ estimated max memory allocated: 0 B
        │ estimated max sql temp disk usage: 0 B
        │ equality: (k) = (w)
        │ left cols are key
        │
        ├── • scan
        │     nodes: <hidden>
        │     regions: <hidden>
        │     actual row count: 5
        │     KV time: 0µs
        │     KV contention time: 0µs
        │     KV rows decoded: 5
        │     KV bytes read: 40 B
        │     KV gRPC calls: 5
        │     estimated max memory allocated: 0 B
        │     missing stats
        │     table: kv@kv_pkey
        │     spans: FULL SCAN
        │
        └── • scan
              nodes: <hidden>
              regions: <hidden>
              actual row count: 5
              KV time: 0µs
              KV contention time: 0µs
              KV rows decoded: 5
              KV bytes read: 40 B
              KV gRPC calls: 5
              estimated max memory allocated: 0 B
              missing stats
              table: kw@kw_pkey
              spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsW-1uo0YU_d-nGM2vXRUvDGDHQVopWm-qZtuNV060UlVZFYFpjMDgZcZx0iiP1Rfok1VgEa-NmWtiN0w9_Atfzp1z7txzOcM8YvYtwg6-Ov_1fHCNPl5cXV9cDq7Rm3DxbvEW_TQafkbhHfo0vLhE4QINL1F49y5E71F2HQ1HH89H6MNv-RHWcJz49NKdUoad3zHBGjaxhi2sYRtruIvHGp6liUcZS9Lslsf8gQv_HjuGhoN4NufZ6bGGvSSl2HnEPOARxQ6-dm8iOqKuT1PdwBr2KXeDKP834d1ZePfHLKQPWMODJJpPY-agEGv4auZmf3b0LIpfviIeTKmDjH_-ZstjL4k5jXmQxKVLabJgyKde4lPfQWR58uaBU4ZS6voO6qMPy5O3oy8D5LlRxJ7vm7lBWtyXnfr8dTBAjNMZ8pJ5zNEbes_1IOZvHWTko1neQGlYdcPUvUdTOk3SB-RGUeK5PAvLyGO4cbk3oQwlcz6bcwdl9-fhFycIHj9peHm0RL1A9eYBTVw2WcfzLLt_rGHG3VuKHfKkvYym3gZNi7NwUaJpsaJJJy1R-xBlVhK1-p15nKQ-Tam_9kvj7Enoli1s_-yyyackiGmqk41JGdE_-Zsz8vZ9GtxO8r-whofZIM8yjuk99eZlPkXoZdfYtwhxOp0hP2AhmjP3lr4Y3BVwVp0M_xgwHsQe10m3xIYU46qXNPYeSSNCxzTkRGc18m4d1q-SlNNUN0uc_yjbsHo7ELqNznwsWzm9TDrJTLc2CK0YNBh5tzLyk7XIye5CQ2r2A7rZ0a1WaA7UEdQg6qRuR9ASdcCOgLxyR0COpSMAMnzVEfTk1Lx9OoJ6SSPsCIic6FR1BADrRUdQ4lzyjsDcvVybdXXV6uh2W64PpKs1iOrX1dWWqAPqqvnKumoei64CGb7S1RM5lWMfXa2XNEJdNeVEp0pXAdYLXS1xLrmuWruXa6uurtodvduW6wPpag2iTuvqakvUAXXVemVdtY5FV4EMX-lqX07l2EdX6yWNUFctOdGp0lWA9UJXS5xLrqv27uXarqur3U5brA-kqjVo6tZU1Y5OkBv7iKCET2jaUnYgfbVfWV_tY9FXINdX-noqp4Lso6_1kkaor7ac6FTpK8B6oa8lziXXV2Dhe0TZLIkZ3awGW3_ZyAin_i1dZgdL5qlHv6SJl_-b5eEwfy63133K-PKquTy4iItLjLtctMz8XyJn4Lza7R79aWX0MeWLJA1R5HIaew_P4RfnF27A1wfmU0bTwI2Cv9zyqIvH8nBT6tHgLh_2d5cKXXu-lo-5uDqlLINi8-HDQ0K6DWNCBJj0D4IJqYuJSdo8KWFyoiImpEYxNKUrhuLoTyujV5bQjWL4-pg0UgyBJCdtngDFUBFMzE1MjO8xsdYgMTYftoSA2jK1lVumiDh6omS_AGCiZL8gxsS0WkxKmCj5TmYLS2lXXEq7wod763huPtwTF_H1SmZI19KevNCdOOJcEkNSPb3-D4Q27k5IyKia7gSASdPdRiMvbv0XuhNHnCZiSKotDzmKoTj6xt0JCRlV050AMGnanWikGJ4KG1tiiHtqIna_q_2JI84yABOB6yGHaQPF33TPICOpaloUEChKehSk5IGvV1QTqKhiu7inYsNOAC9MyTQTY6Lm1AO89WpXRI73GCjPm3YwpJz8arYjJSe89TAATNT8bkOMicAakaQiAnnetI3RTEUEQGnax2gm08XLe6QHtN2lBb7WyAAwUfPzDQiU6nZEEndHHL-iRgYAippvU6W1w_WK2gcqasltb40MUnLbWyMDwKTpqSdjnqj5eQc0eaRaV3lB_EoaGWadfXOKvMoAmDRtZDRSEQFM1PzGA5o81e6IHBURil9JI8MUrx-awPqhWVo_bI0MABM1jQwIFDXbETEoAndEDncHir_pt6lmSC2tIK5XVBuoqOJdJ0oaGWbJbZfKyJAREzWnnhgTNY0MaPKo2Y4AoEi1rrItfmAJQcmXdjEmTRsZzeQ5sH6oppEBTJ6mP_OQEpRqd0SSiihePzSB9UNTvFtHTSMD2OmmZucAgKKmkQHsdVPyMw8IFKk2_W_rp8Sb9Sxgs55VstsVNDLGTz_8GwAA__9bQmlI

# This query verifies stats collection for WITH ORDINALITY and the hashJoiner.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT * FROM kv WITH ORDINALITY AS a, kv WITH ORDINALITY AS b
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows decoded from KV: 10 (80 B, 10 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• cross join
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 25
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│
├── • ordinality
│   │ nodes: <hidden>
│   │ regions: <hidden>
│   │ actual row count: 5
│   │
│   └── • scan
│         nodes: <hidden>
│         regions: <hidden>
│         actual row count: 5
│         KV time: 0µs
│         KV contention time: 0µs
│         KV rows decoded: 5
│         KV bytes read: 40 B
│         KV gRPC calls: 5
│         estimated max memory allocated: 0 B
│         missing stats
│         table: kv@kv_pkey
│         spans: FULL SCAN
│
└── • ordinality
    │ nodes: <hidden>
    │ regions: <hidden>
    │ actual row count: 5
    │
    └── • scan
          nodes: <hidden>
          regions: <hidden>
          actual row count: 5
          KV time: 0µs
          KV contention time: 0µs
          KV rows decoded: 5
          KV bytes read: 40 B
          KV gRPC calls: 5
          estimated max memory allocated: 0 B
          missing stats
          table: kv@kv_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzsUk1v00AQvfMrRnMCtCi243DYk0soaqBtqjQqQihCG-8otWzvurvrkCjKz-IP8MuQvRSatAkNHzeO8-a93TdvZoX2pkCOl8enx_0xPIc3o-EZ5HN4PxifwHD0enB-dDoYf4CjSxBsR2OKDJWWdC5Kssg_YogThpXRKVmrTQOtWsJALpAHDDNV1a6BJwxTbQj5Cl3mCkKOYzEtaERCkukEyFCSE1nRPpvPk3z-qcppiQz7uqhLZTnkDObI8LISTfUCGb67ApeVxCH4-sX6OtXKkXKZVvdaRn-2ICnVkiSHngenS0cWDAnJIQ7glUdno4s-pKIo7A9iJTJzS2ygs6t-H6yjClJdKwdPaeE6mXLPOATtPJ5AlO8ilGIBJZXaLEEUhU6Fa3x5D1Ph0muyoGtX1Y5Dw2_93wI9nKwZ-up7wNaJGSEP1-zxSxgamSlRZG7ZCTd3QAtK6_s5_oGx6BBjd68j-n8df-06ur95Hd1_fR3xTmM__dRKG0mG5IaZSaP8FeWB6U6EvX6rM0WmE29ON2ysJiFLIpZ0WRKzpMeSl8h2jb1vV03P3hTgqKxAZjaH2ooZPXqV0e7IeofsckS20srSdnQPvhw0eZGckc_f6tqkdGF02n7jy2GrawFJ1vlu6IuB8q3G4F1xuFccb4jDbXG0V9zd_3P3gJ-jbXG8V9zb-nmyfvItAAD__9mnaT8=

# Verify that EXPLAIN ANALYZE on an unsupported query doesn't return an error.
statement ok
EXPLAIN ANALYZE (DISTSQL) SHOW QUERIES;

statement ok
EXPLAIN ANALYZE (DISTSQL) EXPLAIN SELECT 1

# This query verifies support for zeroNode in DistSQL.
query T
EXPLAIN (DISTSQL) SELECT sum(k) FROM kv WHERE FALSE
----
distribution: local
vectorized: true
·
• group (scalar)
│ estimated row count: 1
│
└── • norows
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkE1LxDAQhu_-ijCnLgS28ZiTq1YsdD9s1w-QHkI71tJuUzOJCKX_XZoeVoUVPc47eebJzAD01oKE6GmXrOINC67jbJ_dJQuWRUl0tWfkDkGzYDfpds2ad_Z4G6URe1EtIXDodIkbdUAC-QwCcg690QUSaTNFg38Qlx8gQw511zs7xTmHQhsEOYCtbYsg4UG1DmkZAocSrapbPzFklywIWfHquoYWkI8ctLPHKWRVhSDDkf_dtKoqg5Wy2izFd1t2vw4uxGmN-I8mRep15490VJxeIOeAZYXz0Ug7U-DO6MJr5nLrOR-USHbuirmIu7k1ffArLH6Fz3_A-Xj2GQAA__8VEanA

# This query verifies stat collection for the tableReader and windower.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT avg(k) OVER () FROM kv
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows decoded from KV: 5 (40 B, 5 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• window
│ nodes: <hidden>
│ regions: <hidden>
│ actual row count: 5
│ estimated max memory allocated: 0 B
│ estimated max sql temp disk usage: 0 B
│
└── • scan
      nodes: <hidden>
      regions: <hidden>
      actual row count: 5
      KV time: 0µs
      KV contention time: 0µs
      KV rows decoded: 5
      KV bytes read: 40 B
      KV gRPC calls: 5
      estimated max memory allocated: 0 B
      missing stats
      table: kv@kv_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzslstu2zoQhvfnKQazsgEaknw5KLRKa6RF0KYOnMBdFEbBiAOXkEQqJOVLAz9WX6BPVoiq0ti5VN5rZ87FHP7fD4_v0d5lGOP1-afz6Q3w9aqX9mG2OJ9Drw_v57NLSNfIUGlBn3lOFuOvGCHDITIcIcMxMpzgkmFhdELWalOV3PuGC7HFOGQoVVG6KrxkmGhDGN-jky4jjPGG32Y0Jy7IBCEyFOS4zPw16fosXX8rUtohw6nOylzZGFJkeF3w6uMgqKb4uAAnc4oh_PXT1udEK0fKSa2epIzeWBCUaEEihqgO3u4cWTDERQxv4F0dXM2vppDwLLMPdQWXpqmrQpeL6RSsowISXSoHPdq6QCrXjyH0r6kLiNKXCnK-hZxybXbAs0wn3FVjhX6GW-6S72RBl64oXQxVvR-_CUS43DOsT3_ktY6vCONoz15A8Ff5UmkjyJA4UH25fwbSF6mE3pAJJoeE3i4-9M6iPjKcVfOcVThoS0n5VPrXHlrl7F0GjvIChLQplJavqLUOkxd1GB7oELW3YnSiFYPhIBh1ZmxhxmF7CMNTIYwGwbiD0ALCqD2E0akQxgP_M9FB-BeEcXsI41MhTAYdghM34zMI5mQLrSwdbcjnvzmsNieJFdVr1urSJHRldOKvqY8z3-cDgqyrs1F9uFA-5Qd83By92vz_QXN43Dw85Wb_FP8qVOQ22qSQcUcq2T34pIlvuHSHDhJkyUieyR_8qb2aNg_JUEJy3ZisSTVOa3K125psTrb6S_C4IGxthENJRp0kx5KMO0mOJZl0kuyX-_9-BwAA__9o8p9t

# Very simple query to make it easier to spot regressions when rewriting results
# in test files.
query T
EXPLAIN ANALYZE (DISTSQL) SELECT k FROM kv WHERE k = 0
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• scan
  nodes: <hidden>
  regions: <hidden>
  actual row count: 0
  KV time: 0µs
  KV contention time: 0µs
  KV rows decoded: 0
  KV bytes read: 0 B
  KV gRPC calls: 0
  estimated max memory allocated: 0 B
  missing stats
  table: kv@kv_pkey
  spans: [/0 - /0]
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyMkcGKFDEQhu8-RVEnhcD0XAOC2LS46LpL77IepJFMUoxNp5OYqh5nGPqxfAGfTLqzjIgMeMv_1V-Vn6oz8nePGh-aj039CAO8a-9uYTjA5_dN28AAr6FChSE6-mRGYtRfcIudwpSjJeaYF3ReDTfuiLpS2Ic0yYI7hTZmQn1G6cUTanw0O08tGUd5swx2JKb369jh8GY4fE0DnVBhHf00BtYwoMKHZJbnplpbPjyB9CNpqH795KJtDEJB-hj-KeX4g8GRjY6chuf-3UmIIZNZELwtcN_e12CN93zxJdPniw8V3j7VNbBQAhunIPCSjrLpg7zSULIVA9FwzTCaI4w0xnwC4320RuiSYWfEfiOGOEmapPy4xv8DullhUc_7ZTF7Qr2d1f_foCVOMTD9tf5rk6u5U0huT-XOHKds6T5Hu35T5N3atwJHLKW6LeImlNLczS9-BwAA__95TcXF

# Test a query that has a subquery and a postquery.
statement ok
CREATE TABLE parent (p INT PRIMARY KEY);
INSERT INTO parent VALUES (1), (2);
CREATE TABLE child (c INT PRIMARY KEY, p INT REFERENCES parent(p))

query T
EXPLAIN ANALYZE (DISTSQL) INSERT INTO child VALUES (1, (SELECT min(p) FROM parent))
----
planning time: 10µs
execution time: 100µs
distribution: <hidden>
vectorized: <hidden>
rows decoded from KV: 2 (16 B, 2 gRPC calls)
maximum memory usage: <hidden>
network usage: <hidden>
regions: <hidden>
·
• root
│
├── • insert
│   │ nodes: <hidden>
│   │ regions: <hidden>
│   │ actual row count: 1
│   │ into: child(c, p)
│   │
│   └── • buffer
│       │ label: buffer 1
│       │
│       └── • values
│             size: 2 columns, 1 row
│
├── • subquery
│   │ id: @S1
│   │ original sql: (SELECT min(p) FROM parent)
│   │ exec mode: one row
│   │
│   └── • group (scalar)
│       │ nodes: <hidden>
│       │ regions: <hidden>
│       │ actual row count: 1
│       │
│       └── • scan
│             nodes: <hidden>
│             regions: <hidden>
│             actual row count: 1
│             KV time: 0µs
│             KV contention time: 0µs
│             KV rows decoded: 1
│             KV bytes read: 8 B
│             KV gRPC calls: 1
│             estimated max memory allocated: 0 B
│             missing stats
│             table: parent@parent_pkey
│             spans: LIMITED SCAN
│             limit: 1
│
└── • constraint-check
    │
    └── • error if rows
        │ nodes: <hidden>
        │ regions: <hidden>
        │ actual row count: 0
        │
        └── • lookup join (anti)
            │ nodes: <hidden>
            │ regions: <hidden>
            │ actual row count: 0
            │ KV time: 0µs
            │ KV contention time: 0µs
            │ KV rows decoded: 1
            │ KV bytes read: 8 B
            │ KV gRPC calls: 1
            │ estimated max memory allocated: 0 B
            │ table: parent@parent_pkey
            │ equality: (column2) = (p)
            │ equality cols are key
            │
            └── • filter
                │ nodes: <hidden>
                │ regions: <hidden>
                │ actual row count: 1
                │ estimated row count: 1
                │ filter: column2 IS NOT NULL
                │
                └── • scan buffer
                      nodes: <hidden>
                      regions: <hidden>
                      actual row count: 1
                      estimated row count: 1
                      label: buffer 1
·
Diagram 1 (subquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJysU-Fq2zAQ_r-nOO5XAiqxUwbDv9qFDEJTpyRpYIxQVPlwRW1Jk85rspLH2gvsyYbtuaspzTa2X7a-u0_67r67RwyfC0xwlq6myzXM0vUC1J0uMticz6-nKxjEAgar6Xw6WUOpzcAN4cNycQlOejI8HKJAYzNKZUkBk08Yo8C3uBXovFUUgvU1_NgkzbIdJpFAbVzFNbwVqKwnTB6RNReECab2xLrRGAVmxFIXzaW0I1WxtgZYl5RA9P1bQIG3ktUdBbAVu4oTiFCgtw-_gBi3B4Ht6ed7gWVOmJwexDNN8XFNa3lb0JJkRn4U9ZW1bThrPzfunvYocGKLqjQhAYcCV07WvycocK5LzVB36GLTr-RiA8oaJvOyyIsNNDVlpGxGWdLxb_dMATzJLIF38L4F8-XVBJQsivCU56T2XV4NXW4mEwhMDpStDMOAdjzShocJRE11bQLR_WsJpdxBSaX1e5BFYZXkWlbUaPgHS-K_seQ8zz3lkq0fxX1HztOPN-lifZNez-eDs7ge0P8_PuOe1t-M9JKCsyZQT-drN0eHrUDKcmrXJtjKK7ryVjXPtMdFw2uAjAK30dP2MDNtqBb4nBwfJY-Pk8dHyVGf3JTSVIWG-MH6eygkk1H7p853-IPU3Pcko0Bey0J_lS8N62iNSZ4U6S_dQnShbiu6WLsZXbSkEGTeS4j-dBC2hzc_AgAA__9ZlbO7
Diagram 2 (main-query): https://cockroachdb.github.io/distsqlplan/decode.html#eJyMj89K80AUxfffU1zOqoWBL9nOTiRCoLbSVjeSRZxc2oF0bpy5wULJY_kCPpk0I4gLweX53Tl_5oL02sOiXu-q7Z7q9X5D7uj7jp5uVo_VjhalocWuWlW3ezr5sBiWdLfd3NPQRg66XMIgSMfr9sQJ9hklGoMhiuOUJF7RZX5Qd2fYwsCHYdQrbgycRIa9QL32DIteXNuTkzEoFf8LGHSsre_nYD6zG9VLIPUntlR8vCcYvLTqjpxIRh1GtXR1RXn7BiWaySCrr96k7YFhy8n8fduW0yAh8Y9RvyUXU2PA3YHz_5OM0fFDFDfXZLmZfTPoOGm-llnUIZ-mZvr3GQAA__9Sm4hi
Diagram 3 (postquery): https://cockroachdb.github.io/distsqlplan/decode.html#eJy0lEFu2zwQhff_KQazsgECluwsfnCV1HAAJY4U2Io3hVEw1CRhQ5EqSaE2Ah-rF-jJColJWzew2xToSpjHeaOPfJSe0H_SyDHLl7NFCVleFiAflK5gdTa_mS1hkDIYLGfz2bSEWplBM4TzRXEFjXBkwnCIDI2tKBc1eeTvMcU1w8ZZSd5b10lPfUNWbZAnDJVp2tDJa4bSOkL-hEEFTchRWyk0eCkM3LZ3d-QgGSXIsKIglO7HF23gcDpGhrQh2QZlDQRVE4fk6xePDG9FkA_kwbah6Xo7v7OffwgprncMY_XM4YO4J-Tpjv0567nSgRy5UboPGHUOpylkS8iLEvKb-fyf8I7fwnthlVmQqMiNxvvE5bYhDvPZeQlneZnBRZHlyDAGfBofH5pH2iLDubWPbQMfrTJgTbdLZDi1uq2N59DgMwN0O-jQX2ofhNb7G79cvaqlNYHM6zO6XPUDoSJpK6ri4MsV3G4DeXAkKg7_w7so3i-upyCF1v57XyOUe-nrpKvVdAo-UAPStibAgDZhpEwY8ucLFxuIHg81HAizFhuoqbZuC0J3tzl0tEmP9tugk4NBT94SdPyIyDnrQN3Fg0tHk_3M__YyHmY8eQvjgnxjjac9qEOTk92aIVX3FH8m3rZO0rWzsn9NLIve1wsV-RBX01hkJi51gD-b06Pm8XHz-Kh5ctw8OWo--cW83v33LQAA__-P39kT
