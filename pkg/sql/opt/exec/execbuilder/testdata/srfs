# LogicTest: local-opt

subtest generate_series

query TTT
EXPLAIN SELECT * FROM generate_series(1, 3)
----
project set    ·  ·
 └── emptyrow  ·  ·

query TTT
EXPLAIN SELECT * FROM generate_series(1, 2), generate_series(1, 2)
----
join                ·     ·
 │                  type  cross
 ├── project set    ·     ·
 │    └── emptyrow  ·     ·
 └── project set    ·     ·
      └── emptyrow  ·     ·

query TTT
EXPLAIN SELECT * FROM ROWS FROM (cos(1))
----
project set    ·  ·
 └── emptyrow  ·  ·

query TTT
EXPLAIN SELECT generate_series(1, 3)
----
project set    ·  ·
 └── emptyrow  ·  ·

subtest multiple_SRFs
# See #20511

query TTT
EXPLAIN SELECT generate_series(1, 2), generate_series(1, 2)
----
project set    ·  ·
 └── emptyrow  ·  ·

statement ok
CREATE TABLE t (a string)

statement ok
CREATE TABLE u (b string)

query TTTTT
EXPLAIN (VERBOSE) SELECT t.*, u.*, generate_series(1,2), generate_series(3, 4) FROM t, u
----
join                ·         ·                      (a, b, generate_series, generate_series)  ·
 │                  type      cross                  ·                                         ·
 ├── join           ·         ·                      (a, b)                                    ·
 │    │             type      cross                  ·                                         ·
 │    ├── scan      ·         ·                      (a)                                       ·
 │    │             table     t@primary              ·                                         ·
 │    │             spans     ALL                    ·                                         ·
 │    └── scan      ·         ·                      (b)                                       ·
 │                  table     u@primary              ·                                         ·
 │                  spans     ALL                    ·                                         ·
 └── project set    ·         ·                      (generate_series, generate_series)        ·
      │             render 0  generate_series(1, 2)  ·                                         ·
      │             render 1  generate_series(3, 4)  ·                                         ·
      └── emptyrow  ·         ·                      ()                                        ·

subtest correlated_SRFs

statement ok
CREATE TABLE data (a INT PRIMARY KEY)

query TTTTT
EXPLAIN (VERBOSE) SELECT a, generate_series(a, a + 1) FROM data ORDER BY 1, 2
----
sort              ·         ·                            (a, generate_series)  +a,+generate_series
 │                order     +a,+generate_series          ·                     ·
 └── project set  ·         ·                            (a, generate_series)  ·
      │           render 0  generate_series(@1, @1 + 1)  ·                     ·
      └── scan    ·         ·                            (a)                   ·
·                 table     data@primary                 ·                     ·
·                 spans     ALL                          ·                     ·

statement ok
CREATE TABLE xy (x INT PRIMARY KEY, y INT)

statement ok
CREATE TABLE xz (x INT PRIMARY KEY, z INT)

query TTTTT
EXPLAIN (VERBOSE) SELECT x, y, z, information_schema._pg_expandarray(ARRAY[x, y, z])
  FROM xy NATURAL JOIN xz WHERE y < z ORDER BY 1, 2, 3
----
render                         ·               ·                                                      (x, y, z, "information_schema._pg_expandarray")  ·
 │                             render 0        x                                                      ·                                                ·
 │                             render 1        y                                                      ·                                                ·
 │                             render 2        z                                                      ·                                                ·
 │                             render 3        "information_schema._pg_expandarray"                   ·                                                ·
 └── sort                      ·               ·                                                      ("information_schema._pg_expandarray", x, y, z)  +x
      │                        order           +x                                                     ·                                                ·
      └── render               ·               ·                                                      ("information_schema._pg_expandarray", x, y, z)  ·
           │                   render 0        ((x, n) AS x, n)                                       ·                                                ·
           │                   render 1        x                                                      ·                                                ·
           │                   render 2        y                                                      ·                                                ·
           │                   render 3        z                                                      ·                                                ·
           └── project set     ·               ·                                                      (x, y, x, z, x, n)                               ·
                │              render 0        information_schema._pg_expandarray(ARRAY[@1, @2, @4])  ·                                                ·
                └── join       ·               ·                                                      (x, y, x, z)                                     ·
                     │         type            inner                                                  ·                                                ·
                     │         equality        (x) = (x)                                              ·                                                ·
                     │         mergeJoinOrder  +"(x=x)"                                               ·                                                ·
                     │         pred            y < z                                                  ·                                                ·
                     ├── scan  ·               ·                                                      (x, y)                                           +x
                     │         table           xy@primary                                             ·                                                ·
                     │         spans           ALL                                                    ·                                                ·
                     └── scan  ·               ·                                                      (x, z)                                           +x
·                              table           xz@primary                                             ·                                                ·
·                              spans           ALL                                                    ·                                                ·

query TTTTT
EXPLAIN (VERBOSE) SELECT generate_series(x, z) FROM xz WHERE z < ANY(SELECT generate_series(x, y) FROM xy)
----
render                      ·         ·                        (generate_series)        ·
 │                          render 0  generate_series          ·                        ·
 └── project set            ·         ·                        (x, z, generate_series)  ·
      │                     render 0  generate_series(@1, @2)  ·                        ·
      └── join              ·         ·                        (x, z)                   ·
           │                type      semi                     ·                        ·
           │                pred      z < generate_series      ·                        ·
           ├── scan         ·         ·                        (x, z)                   ·
           │                table     xz@primary               ·                        ·
           │                spans     ALL                      ·                        ·
           └── project set  ·         ·                        (x, y, generate_series)  ·
                │           render 0  generate_series(@1, @2)  ·                        ·
                └── scan    ·         ·                        (x, y)                   ·
·                           table     xy@primary               ·                        ·
·                           spans     ALL                      ·                        ·

query TTTTT
EXPLAIN (VERBOSE) SELECT generate_subscripts(ARRAY[0, x, 1, 2]), generate_series(x, y), unnest(ARRAY[0, x, y, z]), y, z
  FROM xy NATURAL LEFT OUTER JOIN xz
----
render               ·               ·                                        (generate_subscripts, generate_series, unnest, y, z)        ·
 │                   render 0        generate_subscripts                      ·                                                           ·
 │                   render 1        generate_series                          ·                                                           ·
 │                   render 2        unnest                                   ·                                                           ·
 │                   render 3        y                                        ·                                                           ·
 │                   render 4        z                                        ·                                                           ·
 └── project set     ·               ·                                        (x, y, x, z, generate_subscripts, generate_series, unnest)  ·
      │              render 0        generate_subscripts(ARRAY[0, @1, 1, 2])  ·                                                           ·
      │              render 1        generate_series(@1, @2)                  ·                                                           ·
      │              render 2        unnest(ARRAY[0, @1, @2, @4])             ·                                                           ·
      └── join       ·               ·                                        (x, y, x, z)                                                ·
           │         type            left outer                               ·                                                           ·
           │         equality        (x) = (x)                                ·                                                           ·
           │         mergeJoinOrder  +"(x=x)"                                 ·                                                           ·
           ├── scan  ·               ·                                        (x, y)                                                      +x
           │         table           xy@primary                               ·                                                           ·
           │         spans           ALL                                      ·                                                           ·
           └── scan  ·               ·                                        (x, z)                                                      +x
·                    table           xz@primary                               ·                                                           ·
·                    spans           ALL                                      ·                                                           ·

query TTTTT
EXPLAIN (VERBOSE) SELECT generate_series((SELECT unnest(ARRAY[x, y]) FROM xy), z) FROM xz
----
root                        ·             ·                                     (generate_series)     ·
 ├── render                 ·             ·                                     (generate_series)     ·
 │    │                     render 0      generate_series                       ·                     ·
 │    └── project set       ·             ·                                     (z, generate_series)  ·
 │         │                render 0      generate_series(@S1, @1)              ·                     ·
 │         └── scan         ·             ·                                     (z)                   ·
 │                          table         xz@primary                            ·                     ·
 │                          spans         ALL                                   ·                     ·
 └── subquery               ·             ·                                     (generate_series)     ·
      │                     id            @S1                                   ·                     ·
      │                     original sql  (SELECT unnest(ARRAY[x, y]) FROM xy)  ·                     ·
      │                     exec mode     one row                               ·                     ·
      └── render            ·             ·                                     (unnest)              ·
           │                render 0      unnest                                ·                     ·
           └── project set  ·             ·                                     (x, y, unnest)        ·
                │           render 0      unnest(ARRAY[@1, @2])                 ·                     ·
                └── scan    ·             ·                                     (x, y)                ·
·                           table         xy@primary                            ·                     ·
·                           spans         ALL                                   ·                     ·

# Regression test for #24676.
statement ok
CREATE TABLE groups(
  id SERIAL,
  data jsonb,
  primary key (id)
)

query error could not decorrelate subquery
EXPLAIN (VERBOSE) SELECT
  g.data->>'name' AS group_name,
  jsonb_array_elements( (SELECT gg.data->'members' FROM groups gg WHERE gg.data->>'name' = g.data->>'name') )
FROM
  groups g

# Regression test for #32162.
query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM ROWS FROM (IF(length('abc') = length('def'), 1, 0))
----
project set    ·         ·  ("if")  ·
 │             render 0  1  ·       ·
 └── emptyrow  ·         ·  ()      ·
