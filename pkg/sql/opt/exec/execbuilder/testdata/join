exec-raw
CREATE TABLE a (x INT PRIMARY KEY, y INT);
CREATE TABLE b (x INT PRIMARY KEY, z INT);
INSERT INTO a VALUES (1, 10), (2, 20), (3, 30);
INSERT INTO b VALUES (2, 200), (3, 300), (4, 400)
----

exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a, b
----
join       0  join  ·      ·          (x, y, x, z)  ·
 │         0  ·     type   cross      ·             ·
 ├── scan  1  scan  ·      ·          (x, y)        ·
 │         1  ·     table  a@primary  ·             ·
 │         1  ·     spans  ALL        ·             ·
 └── scan  1  scan  ·      ·          (x, z)        ·
·          1  ·     table  b@primary  ·             ·
·          1  ·     spans  ALL        ·             ·

exec
SELECT * FROM a, b
----
x:int  y:int  x:int  z:int
1      10     2      200
1      10     3      300
1      10     4      400
2      20     2      200
2      20     3      300
2      20     4      400
3      30     2      200
3      30     3      300
3      30     4      400

exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a, b WHERE a.x = b.x
----
join       0  join  ·         ·          (x, y, x, z)  ·
 │         0  ·     type      inner      ·             ·
 │         0  ·     equality  (x) = (x)  ·             ·
 ├── scan  1  scan  ·         ·          (x, y)        ·
 │         1  ·     table     a@primary  ·             ·
 │         1  ·     spans     ALL        ·             ·
 └── scan  1  scan  ·         ·          (x, z)        ·
·          1  ·     table     b@primary  ·             ·
·          1  ·     spans     ALL        ·             ·

exec
SELECT * FROM a, b WHERE a.x = b.x
----
x:int  y:int  x:int  z:int
2      20     2      200
3      30     3      300

exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a INNER JOIN b ON a.x = b.x
----
join       0  join  ·         ·          (x, y, x, z)  ·
 │         0  ·     type      inner      ·             ·
 │         0  ·     equality  (x) = (x)  ·             ·
 ├── scan  1  scan  ·         ·          (x, y)        ·
 │         1  ·     table     a@primary  ·             ·
 │         1  ·     spans     ALL        ·             ·
 └── scan  1  scan  ·         ·          (x, z)        ·
·          1  ·     table     b@primary  ·             ·
·          1  ·     spans     ALL        ·             ·

exec
SELECT * FROM a INNER JOIN b ON a.x = b.x
----
x:int  y:int  x:int  z:int
2      20     2      200
3      30     3      300

exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a NATURAL JOIN b
----
render          0  render  ·         ·          (x, y, z)     ·
 │              0  ·       render 0  x          ·             ·
 │              0  ·       render 1  y          ·             ·
 │              0  ·       render 2  z          ·             ·
 └── join       1  join    ·         ·          (x, y, x, z)  ·
      │         1  ·       type      inner      ·             ·
      │         1  ·       equality  (x) = (x)  ·             ·
      ├── scan  2  scan    ·         ·          (x, y)        ·
      │         2  ·       table     a@primary  ·             ·
      │         2  ·       spans     ALL        ·             ·
      └── scan  2  scan    ·         ·          (x, z)        ·
·               2  ·       table     b@primary  ·             ·
·               2  ·       spans     ALL        ·             ·

exec
SELECT * FROM a NATURAL JOIN b
----
x:int  y:int  z:int
2      20     200
3      30     300

exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a LEFT OUTER JOIN b ON a.x = b.x
----
join       0  join  ·         ·           (x, y, x, z)  ·
 │         0  ·     type      left outer  ·             ·
 │         0  ·     equality  (x) = (x)   ·             ·
 ├── scan  1  scan  ·         ·           (x, y)        ·
 │         1  ·     table     a@primary   ·             ·
 │         1  ·     spans     ALL         ·             ·
 └── scan  1  scan  ·         ·           (x, z)        ·
·          1  ·     table     b@primary   ·             ·
·          1  ·     spans     ALL         ·             ·

exec
SELECT * FROM a LEFT OUTER JOIN b ON a.x = b.x
----
x:int  y:int  x:int  z:int
1      10     NULL   NULL
2      20     2      200
3      30     3      300

exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a NATURAL RIGHT OUTER JOIN b
----
render          0  render  ·         ·            (x, y, z)     ·
 │              0  ·       render 0  x            ·             ·
 │              0  ·       render 1  y            ·             ·
 │              0  ·       render 2  z            ·             ·
 └── join       1  join    ·         ·            (x, y, x, z)  ·
      │         1  ·       type      right outer  ·             ·
      │         1  ·       equality  (x) = (x)    ·             ·
      ├── scan  2  scan    ·         ·            (x, y)        ·
      │         2  ·       table     a@primary    ·             ·
      │         2  ·       spans     ALL          ·             ·
      └── scan  2  scan    ·         ·            (x, z)        ·
·               2  ·       table     b@primary    ·             ·
·               2  ·       spans     ALL          ·             ·

exec
SELECT * FROM a NATURAL RIGHT OUTER JOIN b
----
x:int  y:int  z:int
2      20     200
3      30     300
4      NULL   400

exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a FULL OUTER JOIN b USING(x)
----
render          0  render  ·         ·               (x, y, z)     ·
 │              0  ·       render 0  COALESCE(x, x)  ·             ·
 │              0  ·       render 1  y               ·             ·
 │              0  ·       render 2  z               ·             ·
 └── join       1  join    ·         ·               (x, y, x, z)  ·
      │         1  ·       type      full outer      ·             ·
      │         1  ·       equality  (x) = (x)       ·             ·
      ├── scan  2  scan    ·         ·               (x, y)        ·
      │         2  ·       table     a@primary       ·             ·
      │         2  ·       spans     ALL             ·             ·
      └── scan  2  scan    ·         ·               (x, z)        ·
·               2  ·       table     b@primary       ·             ·
·               2  ·       spans     ALL             ·             ·

exec
SELECT * FROM a FULL OUTER JOIN b USING(x)
----
x:int  y:int  z:int
1      10     NULL
2      20     200
3      30     300
4      NULL   400

# Select filters are pushed through join, down to scans.
exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a, b WHERE y > 10 AND z < 400
----
join            0  join    ·       ·          (x, y, x, z)  ·
 │              0  ·       type    cross      ·             ·
 ├── filter     1  filter  ·       ·          (x, y)        ·
 │    │         1  ·       filter  y > 10     ·             ·
 │    └── scan  2  scan    ·       ·          (x, y)        ·
 │              2  ·       table   a@primary  ·             ·
 │              2  ·       spans   ALL        ·             ·
 └── filter     1  filter  ·       ·          (x, z)        ·
      │         1  ·       filter  z < 400    ·             ·
      └── scan  2  scan    ·       ·          (x, z)        ·
·               2  ·       table   b@primary  ·             ·
·               2  ·       spans   ALL        ·             ·

exec
SELECT * FROM a, b WHERE y > 10 AND z < 400
----
x:int  y:int  x:int  z:int
2      20     2      200
2      20     3      300
3      30     2      200
3      30     3      300

# Join filter is pushed through join, down to scan.
exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a LEFT JOIN b ON a.x=b.x AND z < 300
----
join            0  join    ·         ·           (x, y, x, z)  ·
 │              0  ·       type      left outer  ·             ·
 │              0  ·       equality  (x) = (x)   ·             ·
 ├── scan       1  scan    ·         ·           (x, y)        ·
 │              1  ·       table     a@primary   ·             ·
 │              1  ·       spans     ALL         ·             ·
 └── filter     1  filter  ·         ·           (x, z)        ·
      │         1  ·       filter    z < 300     ·             ·
      └── scan  2  scan    ·         ·           (x, z)        ·
·               2  ·       table     b@primary   ·             ·
·               2  ·       spans     ALL         ·             ·

exec
SELECT * FROM a LEFT JOIN b ON a.x=b.x AND z < 300
----
x:int  y:int  x:int  z:int
1      10     NULL   NULL
2      20     2      200
3      30     NULL   NULL

# TODO(radu): we create another table because we have some name resolution bugs
# when two tables have the same column name and we use both columns in the EXISTS
# condition.
exec-raw
CREATE TABLE c (u INT PRIMARY KEY, v INT);
INSERT INTO c VALUES (2, 200), (3, 300), (4, 400)
----

exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a WHERE EXISTS(SELECT * FROM c WHERE x = u)
----
join       0  join  ·         ·          (x, y)  ·
 │         0  ·     type      semi       ·       ·
 │         0  ·     equality  (x) = (u)  ·       ·
 ├── scan  1  scan  ·         ·          (x, y)  ·
 │         1  ·     table     a@primary  ·       ·
 │         1  ·     spans     ALL        ·       ·
 └── scan  1  scan  ·         ·          (u, v)  ·
·          1  ·     table     c@primary  ·       ·
·          1  ·     spans     ALL        ·       ·

exec
SELECT * FROM a WHERE EXISTS(SELECT * FROM c WHERE x = u)
----
x:int  y:int
2      20
3      30

exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a WHERE EXISTS(SELECT * FROM c WHERE x-1 = u)
----
join       0  join  ·      ·            (x, y)  ·
 │         0  ·     type   semi         ·       ·
 │         0  ·     pred   u = (x - 1)  ·       ·
 ├── scan  1  scan  ·      ·            (x, y)  ·
 │         1  ·     table  a@primary    ·       ·
 │         1  ·     spans  ALL          ·       ·
 └── scan  1  scan  ·      ·            (u, v)  ·
·          1  ·     table  c@primary    ·       ·
·          1  ·     spans  ALL          ·       ·

exec
SELECT * FROM a WHERE EXISTS(SELECT * FROM c WHERE x-1 = u)
----
x:int  y:int
3      30

exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a WHERE NOT EXISTS(SELECT * FROM c WHERE x = u)
----
join       0  join  ·         ·          (x, y)  ·
 │         0  ·     type      anti       ·       ·
 │         0  ·     equality  (x) = (u)  ·       ·
 ├── scan  1  scan  ·         ·          (x, y)  ·
 │         1  ·     table     a@primary  ·       ·
 │         1  ·     spans     ALL        ·       ·
 └── scan  1  scan  ·         ·          (u, v)  ·
·          1  ·     table     c@primary  ·       ·
·          1  ·     spans     ALL        ·       ·

exec
SELECT * FROM a WHERE NOT EXISTS(SELECT * FROM c WHERE x = u)
----
x:int  y:int
1      10

exec hide-colnames
EXPLAIN (VERBOSE) SELECT * FROM a WHERE NOT EXISTS(SELECT * FROM c WHERE x-1 = u)
----
join       0  join  ·      ·            (x, y)  ·
 │         0  ·     type   anti         ·       ·
 │         0  ·     pred   u = (x - 1)  ·       ·
 ├── scan  1  scan  ·      ·            (x, y)  ·
 │         1  ·     table  a@primary    ·       ·
 │         1  ·     spans  ALL          ·       ·
 └── scan  1  scan  ·      ·            (u, v)  ·
·          1  ·     table  c@primary    ·       ·
·          1  ·     spans  ALL          ·       ·

exec
SELECT * FROM a WHERE NOT EXISTS(SELECT * FROM c WHERE x-1 = u)
----
x:int  y:int
1      10
2      20
