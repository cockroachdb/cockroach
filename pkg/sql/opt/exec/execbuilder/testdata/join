# LogicTest: opt distsql-opt

statement ok
CREATE TABLE a (x INT PRIMARY KEY, y INT);
CREATE TABLE b (x INT PRIMARY KEY, z INT);
INSERT INTO a VALUES (1, 10), (2, 20), (3, 30);
INSERT INTO b VALUES (2, 200), (3, 300), (4, 400)

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a, b
----
join       ·      ·          (x, y, x, z)  ·
 │         type   cross      ·             ·
 ├── scan  ·      ·          (x, y)        ·
 │         table  a@primary  ·             ·
 │         spans  ALL        ·             ·
 └── scan  ·      ·          (x, z)        ·
·          table  b@primary  ·             ·
·          spans  ALL        ·             ·

query IIII rowsort,colnames
SELECT * FROM a, b
----
x  y   x  z
1  10  2  200
1  10  3  300
1  10  4  400
2  20  2  200
2  20  3  300
2  20  4  400
3  30  2  200
3  30  3  300
3  30  4  400

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a, b WHERE a.x = b.x
----
join       ·         ·          (x, y, x, z)  ·
 │         type      inner      ·             ·
 │         equality  (x) = (x)  ·             ·
 ├── scan  ·         ·          (x, y)        ·
 │         table     a@primary  ·             ·
 │         spans     ALL        ·             ·
 └── scan  ·         ·          (x, z)        ·
·          table     b@primary  ·             ·
·          spans     ALL        ·             ·

query IIII rowsort
SELECT * FROM a, b WHERE a.x = b.x
----
2  20     2      200
3  30     3      300

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a INNER JOIN b ON a.x = b.x
----
join       ·         ·          (x, y, x, z)  ·
 │         type      inner      ·             ·
 │         equality  (x) = (x)  ·             ·
 ├── scan  ·         ·          (x, y)        ·
 │         table     a@primary  ·             ·
 │         spans     ALL        ·             ·
 └── scan  ·         ·          (x, z)        ·
·          table     b@primary  ·             ·
·          spans     ALL        ·             ·

query IIII rowsort
SELECT * FROM a INNER JOIN b ON a.x = b.x
----
2  20  2  200
3  30  3  300

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a NATURAL JOIN b
----
render          ·         ·          (x, y, z)     ·
 │              render 0  x          ·             ·
 │              render 1  y          ·             ·
 │              render 2  z          ·             ·
 └── join       ·         ·          (x, y, x, z)  ·
      │         type      inner      ·             ·
      │         equality  (x) = (x)  ·             ·
      ├── scan  ·         ·          (x, y)        ·
      │         table     a@primary  ·             ·
      │         spans     ALL        ·             ·
      └── scan  ·         ·          (x, z)        ·
·               table     b@primary  ·             ·
·               spans     ALL        ·             ·

query III rowsort,colnames
SELECT * FROM a NATURAL JOIN b
----
x  y   z
2  20  200
3  30  300

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a LEFT OUTER JOIN b ON a.x = b.x
----
join       ·         ·           (x, y, x, z)  ·
 │         type      left outer  ·             ·
 │         equality  (x) = (x)   ·             ·
 ├── scan  ·         ·           (x, y)        ·
 │         table     a@primary   ·             ·
 │         spans     ALL         ·             ·
 └── scan  ·         ·           (x, z)        ·
·          table     b@primary   ·             ·
·          spans     ALL         ·             ·

query IIII rowsort
SELECT * FROM a LEFT OUTER JOIN b ON a.x = b.x
----
1  10  NULL  NULL
2  20  2     200
3  30  3     300

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a NATURAL RIGHT OUTER JOIN b
----
render          ·         ·            (x, y, z)     ·
 │              render 0  x            ·             ·
 │              render 1  y            ·             ·
 │              render 2  z            ·             ·
 └── join       ·         ·            (x, y, x, z)  ·
      │         type      right outer  ·             ·
      │         equality  (x) = (x)    ·             ·
      ├── scan  ·         ·            (x, y)        ·
      │         table     a@primary    ·             ·
      │         spans     ALL          ·             ·
      └── scan  ·         ·            (x, z)        ·
·               table     b@primary    ·             ·
·               spans     ALL          ·             ·

query III rowsort
SELECT * FROM a NATURAL RIGHT OUTER JOIN b
----
2  20    200
3  30    300
4  NULL  400

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a FULL OUTER JOIN b USING(x)
----
render          ·         ·               (x, y, z)     ·
 │              render 0  COALESCE(x, x)  ·             ·
 │              render 1  y               ·             ·
 │              render 2  z               ·             ·
 └── join       ·         ·               (x, y, x, z)  ·
      │         type      full outer      ·             ·
      │         equality  (x) = (x)       ·             ·
      ├── scan  ·         ·               (x, y)        ·
      │         table     a@primary       ·             ·
      │         spans     ALL             ·             ·
      └── scan  ·         ·               (x, z)        ·
·               table     b@primary       ·             ·
·               spans     ALL             ·             ·

query III rowsort
SELECT * FROM a FULL OUTER JOIN b USING(x)
----
1  10    NULL
2  20    200
3  30    300
4  NULL  400

# Select filters are pushed through join, down to scans.
query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a, b WHERE y > 10 AND z < 400
----
join            ·       ·          (x, y, x, z)  ·
 │              type    cross      ·             ·
 ├── filter     ·       ·          (x, y)        ·
 │    │         filter  y > 10     ·             ·
 │    └── scan  ·       ·          (x, y)        ·
 │              table   a@primary  ·             ·
 │              spans   ALL        ·             ·
 └── filter     ·       ·          (x, z)        ·
      │         filter  z < 400    ·             ·
      └── scan  ·       ·          (x, z)        ·
·               table   b@primary  ·             ·
·               spans   ALL        ·             ·

query IIII rowsort
SELECT * FROM a, b WHERE y > 10 AND z < 400
----
2  20  2  200
2  20  3  300
3  30  2  200
3  30  3  300

# Join filter is pushed through join, down to scan.
query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a LEFT JOIN b ON a.x=b.x AND z < 300
----
join            ·         ·           (x, y, x, z)  ·
 │              type      left outer  ·             ·
 │              equality  (x) = (x)   ·             ·
 ├── scan       ·         ·           (x, y)        ·
 │              table     a@primary   ·             ·
 │              spans     ALL         ·             ·
 └── filter     ·         ·           (x, z)        ·
      │         filter    z < 300     ·             ·
      └── scan  ·         ·           (x, z)        ·
·               table     b@primary   ·             ·
·               spans     ALL         ·             ·

query IIII rowsort
SELECT * FROM a LEFT JOIN b ON a.x=b.x AND z < 300
----
1  10  NULL  NULL
2  20  2     200
3  30  NULL  NULL

# TODO(radu): we create another table because we have some name resolution bugs
# when two tables have the same column name and we use both columns in the EXISTS
# condition.
statement ok
CREATE TABLE c (u INT PRIMARY KEY, v INT);
INSERT INTO c VALUES (2, 200), (3, 300), (4, 400)

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a WHERE EXISTS(SELECT * FROM c WHERE x = u)
----
join       ·         ·          (x, y)  ·
 │         type      semi       ·       ·
 │         equality  (x) = (u)  ·       ·
 ├── scan  ·         ·          (x, y)  ·
 │         table     a@primary  ·       ·
 │         spans     ALL        ·       ·
 └── scan  ·         ·          (u, v)  ·
·          table     c@primary  ·       ·
·          spans     ALL        ·       ·

query II rowsort
SELECT * FROM a WHERE EXISTS(SELECT * FROM c WHERE x = u)
----
2  20
3  30

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a WHERE EXISTS(SELECT * FROM c WHERE x-1 = u)
----
join       ·      ·            (x, y)  ·
 │         type   semi         ·       ·
 │         pred   u = (x - 1)  ·       ·
 ├── scan  ·      ·            (x, y)  ·
 │         table  a@primary    ·       ·
 │         spans  ALL          ·       ·
 └── scan  ·      ·            (u, v)  ·
·          table  c@primary    ·       ·
·          spans  ALL          ·       ·

query II
SELECT * FROM a WHERE EXISTS(SELECT * FROM c WHERE x-1 = u)
----
3  30

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a WHERE NOT EXISTS(SELECT * FROM c WHERE x = u)
----
join       ·         ·          (x, y)  ·
 │         type      anti       ·       ·
 │         equality  (x) = (u)  ·       ·
 ├── scan  ·         ·          (x, y)  ·
 │         table     a@primary  ·       ·
 │         spans     ALL        ·       ·
 └── scan  ·         ·          (u, v)  ·
·          table     c@primary  ·       ·
·          spans     ALL        ·       ·

query II
SELECT * FROM a WHERE NOT EXISTS(SELECT * FROM c WHERE x = u)
----
1  10

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a WHERE NOT EXISTS(SELECT * FROM c WHERE x-1 = u)
----
join       ·      ·            (x, y)  ·
 │         type   anti         ·       ·
 │         pred   u = (x - 1)  ·       ·
 ├── scan  ·      ·            (x, y)  ·
 │         table  a@primary    ·       ·
 │         spans  ALL          ·       ·
 └── scan  ·      ·            (u, v)  ·
·          table  c@primary    ·       ·
·          spans  ALL          ·       ·

query II rowsort
SELECT * FROM a WHERE NOT EXISTS(SELECT * FROM c WHERE x-1 = u)
----
1  10
2  20

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM (SELECT x, x+1 plus1 FROM a) NATURAL FULL JOIN (SELECT x, 2 two FROM b)
----
render               ·         ·                       (x, plus1, two)             ·
 │                   render 0  COALESCE("a.x", "b.x")  ·                           ·
 │                   render 1  plus1                   ·                           ·
 │                   render 2  two                     ·                           ·
 └── join            ·         ·                       (plus1, "a.x", two, "b.x")  ·
      │              type      full outer              ·                           ·
      │              equality  ("a.x") = ("b.x")       ·                           ·
      ├── render     ·         ·                       (plus1, "a.x")              ·
      │    │         render 0  x + 1                   ·                           ·
      │    │         render 1  x                       ·                           ·
      │    └── scan  ·         ·                       (x)                         ·
      │              table     a@primary               ·                           ·
      │              spans     ALL                     ·                           ·
      └── render     ·         ·                       (two, "b.x")                ·
           │         render 0  2                       ·                           ·
           │         render 1  x                       ·                           ·
           └── scan  ·         ·                       (x)                         ·
·                    table     b@primary               ·                           ·
·                    spans     ALL                     ·                           ·

query III rowsort
SELECT * FROM (SELECT x, x+1 plus1 FROM a) NATURAL FULL JOIN (SELECT x, 2 two FROM b)
----
1  2     NULL
2  3     2
3  4     2
4  NULL  2
