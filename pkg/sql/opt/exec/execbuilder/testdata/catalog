# LogicTest: local-opt

statement ok
CREATE TABLE xyz (
  x INT PRIMARY KEY,
  y INT,
  z INT,
  INDEX foo (z, y)
)

query T
EXPLAIN (OPT, CATALOG) SELECT * from xyz
----
TABLE xyz
 ├── x int not null
 ├── y int
 ├── z int
 ├── INDEX primary
 │    └── x int not null
 └── INDEX foo
      ├── z int
      ├── y int
      └── x int not null
scan xyz

# Verify that column qualifications in check constraints and computed columns
# are stripped.
statement ok
CREATE TABLE abcdef (
    a INT NOT NULL,
    b INT,
    c INT DEFAULT (10),
    d INT AS (abcdef.b + c + 1) STORED,
    e INT AS (a) STORED,
    f INT CHECK (test.abcdef.f > 2)
)

query T
EXPLAIN (OPT, CATALOG) SELECT * from abcdef
----
TABLE abcdef
 ├── a int not null
 ├── b int
 ├── c int default (10:::INT8)
 ├── d int as ((b + c) + 1) stored
 ├── e int as (a) stored
 ├── f int
 ├── rowid int not null default (unique_rowid()) [hidden]
 ├── CHECK (f > 2)
 └── INDEX primary
      └── rowid int not null default (unique_rowid()) [hidden]
scan abcdef

statement ok
CREATE TABLE uvwxy (
    u INT,
    v INT,
    w INT,
    x INT,
    y INT,
    PRIMARY KEY (u,v),
    FAMILY (u,v,w),
    FAMILY (x),
    FAMILY (y)
)

query T
EXPLAIN (OPT, CATALOG) SELECT * from uvwxy
----
TABLE uvwxy
 ├── u int not null
 ├── v int not null
 ├── w int
 ├── x int
 ├── y int
 ├── FAMILY fam_0_u_v_w (u, v, w)
 ├── FAMILY fam_1_x (x)
 ├── FAMILY fam_2_y (y)
 └── INDEX primary
      ├── u int not null
      └── v int not null
scan uvwxy

# Test foreign keys.
statement ok
CREATE TABLE parent (p INT, q INT, r INT, other INT, PRIMARY KEY (p, q, r))

statement ok
CREATE TABLE child  (
  c INT PRIMARY KEY,
  p INT, q INT, r INT,
  CONSTRAINT fk FOREIGN KEY (p,q,r) REFERENCES parent(p,q,r) MATCH FULL
)

query T
EXPLAIN (OPT, CATALOG) SELECT * from child
----
TABLE child
 ├── c int not null
 ├── p int
 ├── q int
 ├── r int
 ├── INDEX primary
 │    └── c int not null
 ├── INDEX child_auto_index_fk
 │    ├── p int
 │    ├── q int
 │    ├── r int
 │    └── c int not null
 └── CONSTRAINT fk FOREIGN KEY child (p, q, r) REFERENCES parent (p, q, r) MATCH FULL
scan child

# TODO(lucy/jordan/radu): the inbound foreign key reference is borked.
query T
EXPLAIN (OPT, CATALOG) SELECT * from parent
----
TABLE parent
 ├── p int not null
 ├── q int not null
 ├── r int not null
 ├── other int
 ├── INDEX primary
 │    ├── p int not null
 │    ├── q int not null
 │    └── r int not null
 └── REFERENCED BY CONSTRAINT  FOREIGN KEY child () REFERENCES parent ()
scan parent
