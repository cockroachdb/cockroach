# LogicTest: local

statement ok
CREATE TABLE kv2 (
  k CHAR PRIMARY KEY,
  v CHAR,
  UNIQUE INDEX a (v),
  FAMILY (k),
  FAMILY (v)
)

statement count 4
INSERT INTO kv2 VALUES ('a', 'b'), ('c', 'd'), ('e', 'f'), ('f', 'g')

statement ok
SET tracing = on,kv,results; SELECT * FROM kv2; SET tracing = off

query T
SELECT message FROM [SHOW KV TRACE FOR SESSION] WITH ORDINALITY
 WHERE message LIKE 'fetched:%' OR message LIKE 'output row%'
 ORDER BY message LIKE 'fetched:%' DESC, ordinality ASC
----
fetched: /kv2/primary/'a' -> NULL
fetched: /kv2/primary/'a'/v -> 'b'
fetched: /kv2/primary/'c' -> NULL
fetched: /kv2/primary/'c'/v -> 'd'
fetched: /kv2/primary/'e' -> NULL
fetched: /kv2/primary/'e'/v -> 'f'
fetched: /kv2/primary/'f' -> NULL
fetched: /kv2/primary/'f'/v -> 'g'
output row: ['a' 'b']
output row: ['c' 'd']
output row: ['e' 'f']
output row: ['f' 'g']

statement ok
SET tracing = on,kv,results; SELECT * FROM kv2@a; SET tracing = off

query T
SELECT message FROM [SHOW KV TRACE FOR SESSION] WITH ORDINALITY
 WHERE message LIKE 'fetched:%' OR message LIKE 'output row%'
 ORDER BY message LIKE 'fetched:%' DESC, ordinality ASC
----
fetched: /kv2/a/'b' -> /'a'
fetched: /kv2/a/'d' -> /'c'
fetched: /kv2/a/'f' -> /'e'
fetched: /kv2/a/'g' -> /'f'
output row: ['a' 'b']
output row: ['c' 'd']
output row: ['e' 'f']
output row: ['f' 'g']

statement error duplicate key value \(v\)=\('g'\) violates unique constraint "a"
UPDATE kv2 SET v = 'g' WHERE k IN ('a')

statement ok
SET tracing = on,kv,results; SELECT * FROM kv2; SET tracing = off

query T
SELECT message FROM [SHOW KV TRACE FOR SESSION] WITH ORDINALITY
 WHERE message LIKE 'fetched:%' OR message LIKE 'output row%'
 ORDER BY message LIKE 'fetched:%' DESC, ordinality ASC
----
fetched: /kv2/primary/'a' -> NULL
fetched: /kv2/primary/'a'/v -> 'b'
fetched: /kv2/primary/'c' -> NULL
fetched: /kv2/primary/'c'/v -> 'd'
fetched: /kv2/primary/'e' -> NULL
fetched: /kv2/primary/'e'/v -> 'f'
fetched: /kv2/primary/'f' -> NULL
fetched: /kv2/primary/'f'/v -> 'g'
output row: ['a' 'b']
output row: ['c' 'd']
output row: ['e' 'f']
output row: ['f' 'g']

statement ok
SET tracing = on,kv,results; SELECT * FROM kv2@a; SET tracing = off

query T
SELECT message FROM [SHOW KV TRACE FOR SESSION] WITH ORDINALITY
 WHERE message LIKE 'fetched:%' OR message LIKE 'output row%'
 ORDER BY message LIKE 'fetched:%' DESC, ordinality ASC
----
fetched: /kv2/a/'b' -> /'a'
fetched: /kv2/a/'d' -> /'c'
fetched: /kv2/a/'f' -> /'e'
fetched: /kv2/a/'g' -> /'f'
output row: ['a' 'b']
output row: ['c' 'd']
output row: ['e' 'f']
output row: ['f' 'g']

statement ok
CREATE TABLE xyz (
  x INT PRIMARY KEY,
  y INT,
  z INT
)

query TTT
EXPLAIN UPDATE xyz SET y = x
----
·                    distribution      local
·                    vectorized        false
count                ·                 ·
 └── update          ·                 ·
      │              table             xyz
      │              set               y
      │              strategy          updater
      │              auto commit       ·
      └── render     ·                 ·
           └── scan  ·                 ·
·                    table             xyz@primary
·                    spans             FULL SCAN
·                    locking strength  for update

query TTTTT
EXPLAIN (VERBOSE) UPDATE xyz SET (x, y) = (1, 2)
----
·                    distribution      local        ·                        ·
·                    vectorized        false        ·                        ·
count                ·                 ·            ()                       ·
 └── update          ·                 ·            ()                       ·
      │              table             xyz          ·                        ·
      │              set               x, y         ·                        ·
      │              strategy          updater      ·                        ·
      │              auto commit       ·            ·                        ·
      └── render     ·                 ·            (x, y, z, x_new, y_new)  ·
           │         render 0          x            ·                        ·
           │         render 1          y            ·                        ·
           │         render 2          z            ·                        ·
           │         render 3          1            ·                        ·
           │         render 4          2            ·                        ·
           └── scan  ·                 ·            (x, y, z)                ·
·                    table             xyz@primary  ·                        ·
·                    spans             FULL SCAN    ·                        ·
·                    locking strength  for update   ·                        ·

query TTTTT
EXPLAIN (VERBOSE) UPDATE xyz SET (x, y) = (y, x)
----
·                    distribution      local        ·                ·
·                    vectorized        false        ·                ·
count                ·                 ·            ()               ·
 └── update          ·                 ·            ()               ·
      │              table             xyz          ·                ·
      │              set               x, y         ·                ·
      │              strategy          updater      ·                ·
      │              auto commit       ·            ·                ·
      └── render     ·                 ·            (x, y, z, y, x)  ·
           │         render 0          x            ·                ·
           │         render 1          y            ·                ·
           │         render 2          z            ·                ·
           │         render 3          y            ·                ·
           │         render 4          x            ·                ·
           └── scan  ·                 ·            (x, y, z)        ·
·                    table             xyz@primary  ·                ·
·                    spans             FULL SCAN    ·                ·
·                    locking strength  for update   ·                ·

query TTTTT
EXPLAIN (VERBOSE) UPDATE xyz SET (x, y) = (2, 2)
----
·                         distribution      local        ·                        ·
·                         vectorized        false        ·                        ·
count                     ·                 ·            ()                       ·
 └── update               ·                 ·            ()                       ·
      │                   table             xyz          ·                        ·
      │                   set               x, y         ·                        ·
      │                   strategy          updater      ·                        ·
      │                   auto commit       ·            ·                        ·
      └── render          ·                 ·            (x, y, z, x_new, x_new)  ·
           │              render 0          x            ·                        ·
           │              render 1          y            ·                        ·
           │              render 2          z            ·                        ·
           │              render 3          x_new        ·                        ·
           │              render 4          x_new        ·                        ·
           └── render     ·                 ·            (x_new, x, y, z)         ·
                │         render 0          2            ·                        ·
                │         render 1          x            ·                        ·
                │         render 2          y            ·                        ·
                │         render 3          z            ·                        ·
                └── scan  ·                 ·            (x, y, z)                ·
·                         table             xyz@primary  ·                        ·
·                         spans             FULL SCAN    ·                        ·
·                         locking strength  for update   ·                        ·

statement ok
CREATE TABLE pks (
  k1 INT,
  k2 INT,
  v INT,
  PRIMARY KEY (k1, k2),
  UNIQUE INDEX i (k2, v),
  FAMILY (k1, k2),
  FAMILY (v)
)

statement count 2
INSERT INTO pks VALUES (1, 2, 3), (4, 5, 3)

statement error duplicate key value \(k2,v\)=\(5,3\) violates unique constraint "i"
UPDATE pks SET k2 = 5 where k1 = 1

# Test updating only one of the columns of a multi-column primary key.

statement count 1
UPDATE pks SET k1 = 2 WHERE k1 = 1

statement ok
SET tracing = on,kv,results; SELECT * FROM pks WHERE k1 = 2; SET tracing = off

query T
SELECT message FROM [SHOW KV TRACE FOR SESSION] WITH ORDINALITY
 WHERE message LIKE 'fetched:%' OR message LIKE 'output row%'
 ORDER BY message LIKE 'fetched:%' DESC, ordinality ASC
----
fetched: /pks/primary/2/2 -> NULL
fetched: /pks/primary/2/2/v -> 3
output row: [2 2 3]

# Check that UPDATE properly supports ORDER BY (MySQL extension)

statement ok
CREATE TABLE kv (
  k INT PRIMARY KEY,
  v INT,
  FAMILY (k, v)
)

query TTT
EXPLAIN UPDATE kv SET v = v + 1 ORDER BY v DESC LIMIT 10
----
·                              distribution  local
·                              vectorized    false
count                          ·             ·
 └── update                    ·             ·
      │                        table         kv
      │                        set           v
      │                        strategy      updater
      │                        auto commit   ·
      └── render               ·             ·
           └── limit           ·             ·
                │              count         10
                └── sort       ·             ·
                     │         order         -v
                     └── scan  ·             ·
·                              table         kv@primary
·                              spans         FULL SCAN

# Use case for UPDATE ... ORDER BY: renumbering a PK without unique violation.
query TTT
EXPLAIN UPDATE kv SET v = v - 1 WHERE k < 3 LIMIT 1
----
·                    distribution      local
·                    vectorized        false
count                ·                 ·
 └── update          ·                 ·
      │              table             kv
      │              set               v
      │              strategy          updater
      │              auto commit       ·
      └── render     ·                 ·
           └── scan  ·                 ·
·                    table             kv@primary
·                    spans             -/2/#
·                    limit             1
·                    locking strength  for update

# Check that updates on tables with multiple column families behave as
# they should.

statement ok
CREATE TABLE tu (a INT PRIMARY KEY, b INT, c INT, d INT, FAMILY (a), FAMILY (b), FAMILY (c,d));
  INSERT INTO tu VALUES (1, 2, 3, 4)

# Update single column family.
query TTT
SELECT tree, field, description FROM [
EXPLAIN (VERBOSE) UPDATE tu SET c=c+1
]
----
·                    distribution      local
·                    vectorized        false
count                ·                 ·
 └── update          ·                 ·
      │              table             tu
      │              set               c
      │              strategy          updater
      │              auto commit       ·
      └── render     ·                 ·
           │         render 0          a
           │         render 1          c
           │         render 2          d
           │         render 3          c + 1
           └── scan  ·                 ·
·                    table             tu@primary
·                    spans             FULL SCAN
·                    locking strength  for update

statement ok
SET tracing = on,kv,results; UPDATE tu SET c=c+1; SET tracing = off

query T
SELECT message FROM [SHOW KV TRACE FOR SESSION]
 WHERE operation != 'dist sender send'
----
Scan /Table/57/{1-2}
fetched: /tu/primary/1 -> NULL
fetched: /tu/primary/1/b -> 2
fetched: /tu/primary/1/c/d -> /3/4
Put /Table/57/1/1/2/1 -> /TUPLE/3:3:Int/4/1:4:Int/4
fast path completed
rows affected: 1

statement ok
SET tracing = on,kv,results; UPDATE tu SET b = NULL, c = NULL, d = NULL; SET tracing = off

query T
SELECT message FROM [SHOW KV TRACE FOR SESSION]
 WHERE operation != 'dist sender send'
----
Scan /Table/57/{1-2}
fetched: /tu/primary/1 -> NULL
fetched: /tu/primary/1/b -> 2
fetched: /tu/primary/1/c/d -> /4/4
Del /Table/57/1/1/1/1
Del /Table/57/1/1/2/1
fast path completed
rows affected: 1

# Regression test for #35564: make sure we use the Update's input required
# ordering for the internal projection.

statement ok
CREATE TABLE abc (a INT, b INT, c INT, INDEX(c) STORING(a,b))

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM [ UPDATE abc SET a=c RETURNING a ] ORDER BY a
----
·                                             distribution      local                             ·                         ·
·                                             vectorized        false                             ·                         ·
root                                          ·                 ·                                 (a)                       +a
 ├── sort                                     ·                 ·                                 (a)                       +a
 │    │                                       order             +a                                ·                         ·
 │    └── scan buffer node                    ·                 ·                                 (a)                       ·
 │                                            label             buffer 1                          ·                         ·
 └── subquery                                 ·                 ·                                 ·                         ·
      │                                       id                @S1                               ·                         ·
      │                                       original sql      UPDATE abc SET a = c RETURNING a  ·                         ·
      │                                       exec mode         all rows                          ·                         ·
      └── buffer node                         ·                 ·                                 (a)                       ·
           │                                  label             buffer 1                          ·                         ·
           └── spool                          ·                 ·                                 (a)                       ·
                └── render                    ·                 ·                                 (a)                       ·
                     │                        render 0          a                                 ·                         ·
                     └── run                  ·                 ·                                 (a, rowid[hidden])        ·
                          └── update          ·                 ·                                 (a, rowid[hidden])        ·
                               │              table             abc                               ·                         ·
                               │              set               a                                 ·                         ·
                               │              strategy          updater                           ·                         ·
                               └── render     ·                 ·                                 (a, b, c, rowid, c)       ·
                                    │         render 0          a                                 ·                         ·
                                    │         render 1          b                                 ·                         ·
                                    │         render 2          c                                 ·                         ·
                                    │         render 3          rowid                             ·                         ·
                                    │         render 4          c                                 ·                         ·
                                    └── scan  ·                 ·                                 (a, b, c, rowid[hidden])  ·
·                                             table             abc@primary                       ·                         ·
·                                             spans             FULL SCAN                         ·                         ·
·                                             locking strength  for update                        ·                         ·

# ------------------------------------------------------------------------------
# Regression for #35364. This tests behavior that is different between the CBO
# and the HP. The CBO will (deliberately) round any input columns *before*
# evaluating any computed columns, as well as rounding the output.
# ------------------------------------------------------------------------------

statement ok
CREATE TABLE t35364(
    x DECIMAL(10,0) CHECK(round(x) = x) PRIMARY KEY,
    y DECIMAL(10,0) DEFAULT (1.5),
    z DECIMAL(10,0) AS (x+y+2.5) STORED CHECK(z >= 7)
)

query TTT
INSERT INTO t35364 (x) VALUES (1.5) RETURNING *
----
2  2  7

query TTT
UPDATE t35364 SET x=2.5 RETURNING *
----
3  2  8

# Ensure that index hints in UPDATE statements force the choice of a specific index
# as described in #38799.
statement ok
CREATE TABLE t38799 (a INT PRIMARY KEY, b INT, c INT, INDEX foo(b), FAMILY "primary" (a, b, c))

query TTTTT
EXPLAIN (VERBOSE) UPDATE t38799@foo SET c=2 WHERE a=1
----
·                               distribution  local           ·                 ·
·                               vectorized    false           ·                 ·
count                           ·             ·               ()                ·
 └── update                     ·             ·               ()                ·
      │                         table         t38799          ·                 ·
      │                         set           c               ·                 ·
      │                         strategy      updater         ·                 ·
      │                         auto commit   ·               ·                 ·
      └── render                ·             ·               (a, b, c, c_new)  ·
           │                    render 0      a               ·                 ·
           │                    render 1      b               ·                 ·
           │                    render 2      c               ·                 ·
           │                    render 3      2               ·                 ·
           └── filter           ·             ·               (a, b, c)         ·
                │               filter        a = 1           ·                 ·
                └── index-join  ·             ·               (a, b, c)         ·
                     │          table         t38799@primary  ·                 ·
                     │          key columns   a               ·                 ·
                     └── scan   ·             ·               (a, b)            ·
·                               table         t38799@foo      ·                 ·
·                               spans         FULL SCAN       ·                 ·

# ------------------------------------------------------------------------------
# Test without implicit SELECT FOR UPDATE.
# Some cases were all tested earlier in this file with implicit SFU enabled.
# ------------------------------------------------------------------------------

query TTT
EXPLAIN UPDATE kv SET v = 10 WHERE k = 3
----
·                    distribution      local
·                    vectorized        false
count                ·                 ·
 └── update          ·                 ·
      │              table             kv
      │              set               v
      │              strategy          updater
      │              auto commit       ·
      └── render     ·                 ·
           └── scan  ·                 ·
·                    table             kv@primary
·                    spans             /3-/3/#
·                    locking strength  for update

query TTT
EXPLAIN UPDATE kv SET v = k WHERE k > 1 AND k < 10
----
·                    distribution      local
·                    vectorized        false
count                ·                 ·
 └── update          ·                 ·
      │              table             kv
      │              set               v
      │              strategy          updater
      │              auto commit       ·
      └── render     ·                 ·
           └── scan  ·                 ·
·                    table             kv@primary
·                    spans             /2-/9/#
·                    parallel          ·
·                    locking strength  for update

query TTT
EXPLAIN UPDATE kv SET v = 10
----
·                    distribution      local
·                    vectorized        false
count                ·                 ·
 └── update          ·                 ·
      │              table             kv
      │              set               v
      │              strategy          updater
      │              auto commit       ·
      └── render     ·                 ·
           └── scan  ·                 ·
·                    table             kv@primary
·                    spans             FULL SCAN
·                    locking strength  for update

statement ok
CREATE TABLE kv3 (
  k    INT PRIMARY KEY,
  v    INT,
  meta INT,
  INDEX (v),
  FAMILY (k, v, meta)
)

query TTT
EXPLAIN UPDATE kv3 SET k = 3 WHERE v = 10
----
·                          distribution      local
·                          vectorized        false
count                      ·                 ·
 └── update                ·                 ·
      │                    table             kv3
      │                    set               k
      │                    strategy          updater
      │                    auto commit       ·
      └── render           ·                 ·
           └── index-join  ·                 ·
                │          table             kv3@primary
                │          key columns       k
                └── scan   ·                 ·
·                          table             kv3@kv3_v_idx
·                          spans             /10-/11
·                          locking strength  for update

query TTT
EXPLAIN UPDATE kv3 SET k = v WHERE v > 1 AND v < 10
----
·                          distribution      local
·                          vectorized        false
count                      ·                 ·
 └── update                ·                 ·
      │                    table             kv3
      │                    set               k
      │                    strategy          updater
      │                    auto commit       ·
      └── render           ·                 ·
           └── index-join  ·                 ·
                │          table             kv3@primary
                │          key columns       k
                └── scan   ·                 ·
·                          table             kv3@kv3_v_idx
·                          spans             /2-/10
·                          locking strength  for update

statement ok
SET enable_implicit_select_for_update = false

query TTT
EXPLAIN UPDATE kv SET v = 10 WHERE k = 3
----
·                    distribution  local
·                    vectorized    false
count                ·             ·
 └── update          ·             ·
      │              table         kv
      │              set           v
      │              strategy      updater
      │              auto commit   ·
      └── render     ·             ·
           └── scan  ·             ·
·                    table         kv@primary
·                    spans         /3-/3/#

query TTT
EXPLAIN UPDATE kv SET v = k WHERE k > 1 AND k < 10
----
·                    distribution  local
·                    vectorized    false
count                ·             ·
 └── update          ·             ·
      │              table         kv
      │              set           v
      │              strategy      updater
      │              auto commit   ·
      └── render     ·             ·
           └── scan  ·             ·
·                    table         kv@primary
·                    spans         /2-/9/#
·                    parallel      ·

query TTT
EXPLAIN UPDATE kv SET v = 10
----
·                    distribution  local
·                    vectorized    false
count                ·             ·
 └── update          ·             ·
      │              table         kv
      │              set           v
      │              strategy      updater
      │              auto commit   ·
      └── render     ·             ·
           └── scan  ·             ·
·                    table         kv@primary
·                    spans         FULL SCAN

query TTTTT
EXPLAIN (VERBOSE) UPDATE xyz SET (x, y) = (1, 2)
----
·                    distribution  local        ·                        ·
·                    vectorized    false        ·                        ·
count                ·             ·            ()                       ·
 └── update          ·             ·            ()                       ·
      │              table         xyz          ·                        ·
      │              set           x, y         ·                        ·
      │              strategy      updater      ·                        ·
      │              auto commit   ·            ·                        ·
      └── render     ·             ·            (x, y, z, x_new, y_new)  ·
           │         render 0      x            ·                        ·
           │         render 1      y            ·                        ·
           │         render 2      z            ·                        ·
           │         render 3      1            ·                        ·
           │         render 4      2            ·                        ·
           └── scan  ·             ·            (x, y, z)                ·
·                    table         xyz@primary  ·                        ·
·                    spans         FULL SCAN    ·                        ·

query TTT
EXPLAIN UPDATE kv SET v = v - 1 WHERE k < 3 LIMIT 1
----
·                    distribution  local
·                    vectorized    false
count                ·             ·
 └── update          ·             ·
      │              table         kv
      │              set           v
      │              strategy      updater
      │              auto commit   ·
      └── render     ·             ·
           └── scan  ·             ·
·                    table         kv@primary
·                    spans         -/2/#
·                    limit         1

query TTT
EXPLAIN UPDATE kv3 SET k = 3 WHERE v = 10
----
·                          distribution  local
·                          vectorized    false
count                      ·             ·
 └── update                ·             ·
      │                    table         kv3
      │                    set           k
      │                    strategy      updater
      │                    auto commit   ·
      └── render           ·             ·
           └── index-join  ·             ·
                │          table         kv3@primary
                │          key columns   k
                └── scan   ·             ·
·                          table         kv3@kv3_v_idx
·                          spans         /10-/11

query TTT
EXPLAIN UPDATE kv3 SET k = v WHERE v > 1 AND v < 10
----
·                          distribution  local
·                          vectorized    false
count                      ·             ·
 └── update                ·             ·
      │                    table         kv3
      │                    set           k
      │                    strategy      updater
      │                    auto commit   ·
      └── render           ·             ·
           └── index-join  ·             ·
                │          table         kv3@primary
                │          key columns   k
                └── scan   ·             ·
·                          table         kv3@kv3_v_idx
·                          spans         /2-/10

# Update single column family.
query TTT
SELECT tree, field, description FROM [
EXPLAIN UPDATE tu SET c=c+1
]
----
·                    distribution  local
·                    vectorized    false
count                ·             ·
 └── update          ·             ·
      │              table         tu
      │              set           c
      │              strategy      updater
      │              auto commit   ·
      └── render     ·             ·
           └── scan  ·             ·
·                    table         tu@primary
·                    spans         FULL SCAN

# Reset for rest of test.
statement ok
SET enable_implicit_select_for_update = true
