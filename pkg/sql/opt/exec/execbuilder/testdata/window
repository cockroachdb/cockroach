# LogicTest: local

statement ok
CREATE TABLE kv (
  k INT PRIMARY KEY,
  v INT,
  w INT,
  f FLOAT,
  d DECIMAL,
  s STRING,
  b BOOL,
  FAMILY (k, v, w, f, b),
  FAMILY (d),
  FAMILY (s)
)

statement OK
INSERT INTO kv VALUES
(1, 2, 3, 1.0, 1, 'a', true),
(3, 4, 5, 2, 8, 'a', true),
(5, NULL, 5, 9.9, -321, NULL, false),
(6, 2, 3, 4.4, 4.4, 'b', true),
(7, 2, 2, 6, 7.9, 'b', true),
(8, 4, 2, 3, 3, 'A', false)

statement ok
SET tracing = on,kv,results; SELECT k, stddev(d) OVER w FROM kv WINDOW w as (PARTITION BY v) ORDER BY variance(d) OVER w, k; SET tracing = off

query T rowsort
SELECT message FROM [SHOW KV TRACE FOR SESSION] WITH ORDINALITY
 WHERE message LIKE 'fetched:%' OR message LIKE 'output row%'
 ORDER BY message LIKE 'fetched:%' DESC, ordinality ASC
----
fetched: /kv/primary/1/v -> /2
fetched: /kv/primary/1/d -> 1
fetched: /kv/primary/1/s -> 'a'
fetched: /kv/primary/3/v -> /4
fetched: /kv/primary/3/d -> 8
fetched: /kv/primary/3/s -> 'a'
fetched: /kv/primary/5 -> NULL
fetched: /kv/primary/5/d -> -321
fetched: /kv/primary/6/v -> /2
fetched: /kv/primary/6/d -> 4.4
fetched: /kv/primary/6/s -> 'b'
fetched: /kv/primary/7/v -> /2
fetched: /kv/primary/7/d -> 7.9
fetched: /kv/primary/7/s -> 'b'
fetched: /kv/primary/8/v -> /4
fetched: /kv/primary/8/d -> 3
fetched: /kv/primary/8/s -> 'A'
output row: [5 NULL]
output row: [1 3.4501207708330056852]
output row: [6 3.4501207708330056852]
output row: [7 3.4501207708330056852]
output row: [3 3.5355339059327376220]
output row: [8 3.5355339059327376220]

query TTTTT
EXPLAIN (VERBOSE) SELECT ntile(1) OVER () FROM kv
----
·                    distributed  false                                                               ·                      ·
·                    vectorized   false                                                               ·                      ·
render               ·            ·                                                                   (ntile)                ·
 │                   render 0     ntile                                                               ·                      ·
 └── window          ·            ·                                                                   (ntile_1_arg1, ntile)  ·
      │              window 0     ntile(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·                      ·
      │              render 1     ntile(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·                      ·
      └── render     ·            ·                                                                   (ntile_1_arg1)         ·
           │         render 0     1                                                                   ·                      ·
           └── scan  ·            ·                                                                   ()                     ·
·                    table        kv@primary                                                          ·                      ·
·                    spans        ALL                                                                 ·                      ·

query TTTTT
EXPLAIN (VERBOSE) SELECT nth_value(1, 2) OVER () FROM kv
----
·                    distributed  false                                                                       ·                                                ·
·                    vectorized   false                                                                       ·                                                ·
render               ·            ·                                                                           (nth_value)                                      ·
 │                   render 0     nth_value                                                                   ·                                                ·
 └── window          ·            ·                                                                           (nth_value_1_arg1, nth_value_1_arg2, nth_value)  ·
      │              window 0     nth_value(@1, @2) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·                                                ·
      │              render 2     nth_value(@1, @2) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·                                                ·
      └── render     ·            ·                                                                           (nth_value_1_arg1, nth_value_1_arg2)             ·
           │         render 0     1                                                                           ·                                                ·
           │         render 1     2                                                                           ·                                                ·
           └── scan  ·            ·                                                                           ()                                               ·
·                    table        kv@primary                                                                  ·                                                ·
·                    spans        ALL                                                                         ·                                                ·

statement error column "v" must appear in the GROUP BY clause or be used in an aggregate function
EXPLAIN (VERBOSE) SELECT max(v) OVER (), min(v) FROM kv ORDER BY 1

query TTT
EXPLAIN SELECT k, stddev(d) OVER w FROM kv WINDOW w as (PARTITION BY v) ORDER BY variance(d) OVER w, k
----
·                         distributed  false
·                         vectorized   false
render                    ·            ·
 └── sort                 ·            ·
      │                   order        +variance,+k
      └── render          ·            ·
           └── window     ·            ·
                └── scan  ·            ·
·                         table        kv@primary
·                         spans        ALL

query TTTTT
EXPLAIN (TYPES) SELECT k, stddev(d) OVER w FROM kv WINDOW w as (PARTITION BY v) ORDER BY variance(d) OVER w, k
----
·                         distributed  false                                                                                                               ·                                                            ·
·                         vectorized   false                                                                                                               ·                                                            ·
render                    ·            ·                                                                                                                   (k int, stddev decimal)                                      ·
 │                        render 0     (k)[int]                                                                                                            ·                                                            ·
 │                        render 1     (stddev)[decimal]                                                                                                   ·                                                            ·
 └── sort                 ·            ·                                                                                                                   (k int, stddev decimal, variance decimal)                    +variance,+k
      │                   order        +variance,+k                                                                                                        ·                                                            ·
      └── render          ·            ·                                                                                                                   (k int, stddev decimal, variance decimal)                    ·
           │              render 0     (k)[int]                                                                                                            ·                                                            ·
           │              render 1     (stddev)[decimal]                                                                                                   ·                                                            ·
           │              render 2     (variance)[decimal]                                                                                                 ·                                                            ·
           └── window     ·            ·                                                                                                                   (k int, v int, d decimal, stddev decimal, variance decimal)  ·
                │         window 0     (stddev((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]    ·                                                            ·
                │         window 1     (variance((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                                            ·
                │         render 3     (stddev((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]    ·                                                            ·
                │         render 4     (variance((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                                            ·
                └── scan  ·            ·                                                                                                                   (k int, v int, d decimal)                                    ·
·                         table        kv@primary                                                                                                          ·                                                            ·
·                         spans        ALL                                                                                                                 ·                                                            ·

query TTTTT
EXPLAIN (TYPES) SELECT k, stddev(d) OVER (PARTITION BY v, 'a') FROM kv ORDER BY variance(d) OVER (PARTITION BY v, 100), k
----
·                              distributed  false                                                                                                               ·                                                            ·
·                              vectorized   false                                                                                                               ·                                                            ·
render                         ·            ·                                                                                                                   (k int, stddev decimal)                                      ·
 │                             render 0     (k)[int]                                                                                                            ·                                                            ·
 │                             render 1     (stddev)[decimal]                                                                                                   ·                                                            ·
 └── sort                      ·            ·                                                                                                                   (k int, stddev decimal, variance decimal)                    +variance,+k
      │                        order        +variance,+k                                                                                                        ·                                                            ·
      └── render               ·            ·                                                                                                                   (k int, stddev decimal, variance decimal)                    ·
           │                   render 0     (k)[int]                                                                                                            ·                                                            ·
           │                   render 1     (stddev)[decimal]                                                                                                   ·                                                            ·
           │                   render 2     (variance)[decimal]                                                                                                 ·                                                            ·
           └── window          ·            ·                                                                                                                   (k int, v int, d decimal, stddev decimal, variance decimal)  ·
                │              window 0     (variance((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                                            ·
                │              render 4     (variance((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                                            ·
                └── window     ·            ·                                                                                                                   (k int, v int, d decimal, stddev decimal)                    ·
                     │         window 0     (stddev((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]    ·                                                            ·
                     │         render 3     (stddev((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]    ·                                                            ·
                     └── scan  ·            ·                                                                                                                   (k int, v int, d decimal)                                    ·
·                              table        kv@primary                                                                                                          ·                                                            ·
·                              spans        ALL                                                                                                                 ·                                                            ·

query TTTTT
EXPLAIN (TYPES,NONORMALIZE) SELECT k, stddev(d) OVER (PARTITION BY v, 'a') FROM kv ORDER BY k
----
·                    distributed  false                                                                                                             ·                                          ·
·                    vectorized   false                                                                                                             ·                                          ·
sort                 ·            ·                                                                                                                 (k int, stddev decimal)                    +k
 │                   order        +k                                                                                                                ·                                          ·
 └── render          ·            ·                                                                                                                 (k int, stddev decimal)                    ·
      │              render 0     (k)[int]                                                                                                          ·                                          ·
      │              render 1     (stddev)[decimal]                                                                                                 ·                                          ·
      └── window     ·            ·                                                                                                                 (k int, v int, d decimal, stddev decimal)  ·
           │         window 0     (stddev((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                          ·
           │         render 3     (stddev((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                          ·
           └── scan  ·            ·                                                                                                                 (k int, v int, d decimal)                  ·
·                    table        kv@primary                                                                                                        ·                                          ·
·                    spans        ALL                                                                                                               ·                                          ·

query TTTTT
EXPLAIN (TYPES) SELECT k, k + stddev(d) OVER (PARTITION BY v, 'a') FROM kv ORDER BY variance(d) OVER (PARTITION BY v, 100), k
----
·                              distributed  false                                                                                                               ·                                                            ·
·                              vectorized   false                                                                                                               ·                                                            ·
render                         ·            ·                                                                                                                   (k int, "?column?" decimal)                                  ·
 │                             render 0     (k)[int]                                                                                                            ·                                                            ·
 │                             render 1     ("?column?")[decimal]                                                                                               ·                                                            ·
 └── sort                      ·            ·                                                                                                                   ("?column?" decimal, k int, variance decimal)                +variance,+k
      │                        order        +variance,+k                                                                                                        ·                                                            ·
      └── render               ·            ·                                                                                                                   ("?column?" decimal, k int, variance decimal)                ·
           │                   render 0     ((k)[int] + (stddev)[decimal])[decimal]                                                                             ·                                                            ·
           │                   render 1     (k)[int]                                                                                                            ·                                                            ·
           │                   render 2     (variance)[decimal]                                                                                                 ·                                                            ·
           └── window          ·            ·                                                                                                                   (k int, v int, d decimal, stddev decimal, variance decimal)  ·
                │              window 0     (variance((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                                            ·
                │              render 4     (variance((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                                            ·
                └── window     ·            ·                                                                                                                   (k int, v int, d decimal, stddev decimal)                    ·
                     │         window 0     (stddev((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]    ·                                                            ·
                     │         render 3     (stddev((@3)[decimal]) OVER (PARTITION BY (@2)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]    ·                                                            ·
                     └── scan  ·            ·                                                                                                                   (k int, v int, d decimal)                                    ·
·                              table        kv@primary                                                                                                          ·                                                            ·
·                              spans        ALL                                                                                                                 ·                                                            ·

query TTTTT
EXPLAIN (TYPES) SELECT max(k), max(k) + stddev(d) OVER (PARTITION BY v, 'a') FROM kv GROUP BY d, v ORDER BY variance(d) OVER (PARTITION BY v, 100)
----
·                                   distributed  false                                                                                                               ·                                                              ·
·                                   vectorized   false                                                                                                               ·                                                              ·
render                              ·            ·                                                                                                                   (max int, "?column?" decimal)                                  ·
 │                                  render 0     (max)[int]                                                                                                          ·                                                              ·
 │                                  render 1     ("?column?")[decimal]                                                                                               ·                                                              ·
 └── sort                           ·            ·                                                                                                                   ("?column?" decimal, max int, variance decimal)                +variance
      │                             order        +variance                                                                                                           ·                                                              ·
      └── render                    ·            ·                                                                                                                   ("?column?" decimal, max int, variance decimal)                ·
           │                        render 0     ((max)[int] + (stddev)[decimal])[decimal]                                                                           ·                                                              ·
           │                        render 1     (max)[int]                                                                                                          ·                                                              ·
           │                        render 2     (variance)[decimal]                                                                                                 ·                                                              ·
           └── window               ·            ·                                                                                                                   (v int, d decimal, max int, stddev decimal, variance decimal)  ·
                │                   window 0     (variance((@2)[decimal]) OVER (PARTITION BY (@1)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                                              ·
                │                   render 4     (variance((@2)[decimal]) OVER (PARTITION BY (@1)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                                              ·
                └── window          ·            ·                                                                                                                   (v int, d decimal, max int, stddev decimal)                    ·
                     │              window 0     (stddev((@2)[decimal]) OVER (PARTITION BY (@1)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]    ·                                                              ·
                     │              render 3     (stddev((@2)[decimal]) OVER (PARTITION BY (@1)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]    ·                                                              ·
                     └── group      ·            ·                                                                                                                   (v int, d decimal, max int)                                    ·
                          │         aggregate 0  v                                                                                                                   ·                                                              ·
                          │         aggregate 1  d                                                                                                                   ·                                                              ·
                          │         aggregate 2  max(k)                                                                                                              ·                                                              ·
                          │         group by     v, d                                                                                                                ·                                                              ·
                          └── scan  ·            ·                                                                                                                   (k int, v int, d decimal)                                      ·
·                                   table        kv@primary                                                                                                          ·                                                              ·
·                                   spans        ALL                                                                                                                 ·                                                              ·

query TTTTT
EXPLAIN (TYPES) SELECT max(k), stddev(d) OVER (PARTITION BY v, 'a') FROM kv GROUP BY d, v ORDER BY 1
----
·                         distributed  false                                                                                                             ·                                            ·
·                         vectorized   false                                                                                                             ·                                            ·
sort                      ·            ·                                                                                                                 (max int, stddev decimal)                    +max
 │                        order        +max                                                                                                              ·                                            ·
 └── render               ·            ·                                                                                                                 (max int, stddev decimal)                    ·
      │                   render 0     (max)[int]                                                                                                        ·                                            ·
      │                   render 1     (stddev)[decimal]                                                                                                 ·                                            ·
      └── window          ·            ·                                                                                                                 (v int, d decimal, max int, stddev decimal)  ·
           │              window 0     (stddev((@2)[decimal]) OVER (PARTITION BY (@1)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                            ·
           │              render 3     (stddev((@2)[decimal]) OVER (PARTITION BY (@1)[int] RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW))[decimal]  ·                                            ·
           └── group      ·            ·                                                                                                                 (v int, d decimal, max int)                  ·
                │         aggregate 0  v                                                                                                                 ·                                            ·
                │         aggregate 1  d                                                                                                                 ·                                            ·
                │         aggregate 2  max(k)                                                                                                            ·                                            ·
                │         group by     v, d                                                                                                              ·                                            ·
                └── scan  ·            ·                                                                                                                 (k int, v int, d decimal)                    ·
·                         table        kv@primary                                                                                                        ·                                            ·
·                         spans        ALL                                                                                                               ·                                            ·

# Partition

query TTTTT
EXPLAIN (VERBOSE) SELECT lag(1) OVER (PARTITION BY 2), lead(2) OVER (PARTITION BY 1) FROM kv
----
·                              distributed  false                                                                      ·                                                       ·
·                              vectorized   false                                                                      ·                                                       ·
render                         ·            ·                                                                          (lag, lead)                                             ·
 │                             render 0     lag                                                                        ·                                                       ·
 │                             render 1     lead                                                                       ·                                                       ·
 └── window                    ·            ·                                                                          (lag, lag_1_arg1, lag_1_arg3, lag_1_partition_1, lead)  ·
      │                        window 0     lead(@4, @2, @3) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·                                                       ·
      │                        render 4     lead(@4, @2, @3) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·                                                       ·
      └── render               ·            ·                                                                          (lag, lag_1_arg1, lag_1_arg3, lag_1_partition_1)        ·
           │                   render 0     lag                                                                        ·                                                       ·
           │                   render 1     lag_1_arg1                                                                 ·                                                       ·
           │                   render 2     lag_1_arg3                                                                 ·                                                       ·
           │                   render 3     lag_1_partition_1                                                          ·                                                       ·
           └── window          ·            ·                                                                          (lag_1_arg1, lag_1_arg3, lag_1_partition_1, lag)        ·
                │              window 0     lag(@1, @1, @2) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)   ·                                                       ·
                │              render 3     lag(@1, @1, @2) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)   ·                                                       ·
                └── render     ·            ·                                                                          (lag_1_arg1, lag_1_arg3, lag_1_partition_1)             ·
                     │         render 0     1                                                                          ·                                                       ·
                     │         render 1     CAST(NULL AS INT8)                                                         ·                                                       ·
                     │         render 2     2                                                                          ·                                                       ·
                     └── scan  ·            ·                                                                          ()                                                      ·
·                              table        kv@primary                                                                 ·                                                       ·
·                              spans        ALL                                                                        ·                                                       ·

# Ordering

query TTTTT
EXPLAIN (VERBOSE) SELECT k, v, rank() OVER (ORDER BY k) FROM kv ORDER BY 1
----
·               distributed  false                                                                            ·             ·
·               vectorized   false                                                                            ·             ·
sort            ·            ·                                                                                (k, v, rank)  +k
 │              order        +k                                                                               ·             ·
 └── window     ·            ·                                                                                (k, v, rank)  ·
      │         window 0     rank() OVER (ORDER BY @1 ASC RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·             ·
      │         render 2     rank() OVER (ORDER BY @1 ASC RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·             ·
      └── scan  ·            ·                                                                                (k, v)        ·
·               table        kv@primary                                                                       ·             ·
·               spans        ALL                                                                              ·             ·


# Frames

query TTTTT
EXPLAIN (VERBOSE) SELECT avg(k) OVER () FROM kv
----
·               distributed  false                                                             ·         ·
·               vectorized   false                                                             ·         ·
render          ·            ·                                                                 (avg)     ·
 │              render 0     avg                                                               ·         ·
 └── window     ·            ·                                                                 (k, avg)  ·
      │         window 0     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·         ·
      │         render 1     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·         ·
      └── scan  ·            ·                                                                 (k)       ·
·               table        kv@primary                                                        ·         ·
·               spans        ALL                                                               ·         ·

query TTTTT
EXPLAIN (VERBOSE) SELECT avg(k) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM kv
----
·               distributed  false                                                                     ·         ·
·               vectorized   false                                                                     ·         ·
render          ·            ·                                                                         (avg)     ·
 │              render 0     avg                                                                       ·         ·
 └── window     ·            ·                                                                         (k, avg)  ·
      │         window 0     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)  ·         ·
      │         render 1     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)  ·         ·
      └── scan  ·            ·                                                                         (k)       ·
·               table        kv@primary                                                                ·         ·
·               spans        ALL                                                                       ·         ·

query TTTTT
EXPLAIN (VERBOSE) SELECT avg(k) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM kv
----
·               distributed  false                                                             ·         ·
·               vectorized   false                                                             ·         ·
render          ·            ·                                                                 (avg)     ·
 │              render 0     avg                                                               ·         ·
 └── window     ·            ·                                                                 (k, avg)  ·
      │         window 0     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·         ·
      │         render 1     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  ·         ·
      └── scan  ·            ·                                                                 (k)       ·
·               table        kv@primary                                                        ·         ·
·               spans        ALL                                                               ·         ·

query TTTTT
EXPLAIN (VERBOSE)
    SELECT
        avg(k) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),
        avg(k) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),
        avg(k) OVER (RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING),
        avg(k) OVER (RANGE BETWEEN CURRENT ROW AND CURRENT ROW),
        avg(k) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),
        avg(k) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),
        avg(k) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING),
        avg(k) OVER (ROWS BETWEEN CURRENT ROW AND CURRENT ROW),
        avg(k) OVER (ORDER BY k GROUPS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),
        avg(k) OVER (ORDER BY k GROUPS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),
        avg(k) OVER (ORDER BY k GROUPS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING),
        avg(k) OVER (ORDER BY k GROUPS BETWEEN CURRENT ROW AND CURRENT ROW)
    FROM
        kv
----
·                    distributed  false                                                                                      ·                                                                ·
·                    vectorized   false                                                                                      ·                                                                ·
render               ·            ·                                                                                          (avg, avg, avg, avg, avg, avg, avg, avg, avg, avg, avg, avg)     ·
 │                   render 0     avg                                                                                        ·                                                                ·
 │                   render 1     avg                                                                                        ·                                                                ·
 │                   render 2     avg                                                                                        ·                                                                ·
 │                   render 3     avg                                                                                        ·                                                                ·
 │                   render 4     avg                                                                                        ·                                                                ·
 │                   render 5     avg                                                                                        ·                                                                ·
 │                   render 6     avg                                                                                        ·                                                                ·
 │                   render 7     avg                                                                                        ·                                                                ·
 │                   render 8     avg                                                                                        ·                                                                ·
 │                   render 9     avg                                                                                        ·                                                                ·
 │                   render 10    avg                                                                                        ·                                                                ·
 │                   render 11    avg                                                                                        ·                                                                ·
 └── window          ·            ·                                                                                          (k, avg, avg, avg, avg, avg, avg, avg, avg, avg, avg, avg, avg)  ·
      │              window 0     avg(@1) OVER (ORDER BY @1 ASC GROUPS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)  ·                                                                ·
      │              window 1     avg(@1) OVER (ORDER BY @1 ASC GROUPS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)          ·                                                                ·
      │              window 2     avg(@1) OVER (ORDER BY @1 ASC GROUPS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)          ·                                                                ·
      │              window 3     avg(@1) OVER (ORDER BY @1 ASC GROUPS BETWEEN CURRENT ROW AND CURRENT ROW)                  ·                                                                ·
      │              render 9     avg(@1) OVER (ORDER BY @1 ASC GROUPS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)  ·                                                                ·
      │              render 10    avg(@1) OVER (ORDER BY @1 ASC GROUPS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)          ·                                                                ·
      │              render 11    avg(@1) OVER (ORDER BY @1 ASC GROUPS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)          ·                                                                ·
      │              render 12    avg(@1) OVER (ORDER BY @1 ASC GROUPS BETWEEN CURRENT ROW AND CURRENT ROW)                  ·                                                                ·
      └── window     ·            ·                                                                                          (k, avg, avg, avg, avg, avg, avg, avg, avg)                      ·
           │         window 0     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)                   ·                                                                ·
           │         window 1     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)                           ·                                                                ·
           │         window 2     avg(@1) OVER (RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)                           ·                                                                ·
           │         window 3     avg(@1) OVER (RANGE BETWEEN CURRENT ROW AND CURRENT ROW)                                   ·                                                                ·
           │         window 4     avg(@1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)                    ·                                                                ·
           │         window 5     avg(@1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)                            ·                                                                ·
           │         window 6     avg(@1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)                            ·                                                                ·
           │         window 7     avg(@1) OVER (ROWS BETWEEN CURRENT ROW AND CURRENT ROW)                                    ·                                                                ·
           │         render 1     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)                   ·                                                                ·
           │         render 2     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)                           ·                                                                ·
           │         render 3     avg(@1) OVER (RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)                           ·                                                                ·
           │         render 4     avg(@1) OVER (RANGE BETWEEN CURRENT ROW AND CURRENT ROW)                                   ·                                                                ·
           │         render 5     avg(@1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)                    ·                                                                ·
           │         render 6     avg(@1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)                            ·                                                                ·
           │         render 7     avg(@1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)                            ·                                                                ·
           │         render 8     avg(@1) OVER (ROWS BETWEEN CURRENT ROW AND CURRENT ROW)                                    ·                                                                ·
           └── scan  ·            ·                                                                                          (k)                                                              ·
·                    table        kv@primary                                                                                 ·                                                                ·
·                    spans        ALL                                                                                        ·                                                                ·

query TTTTT
EXPLAIN (VERBOSE)
    SELECT
        avg(v) OVER (
            PARTITION BY
                w
            ROWS
                BETWEEN (SELECT count(*) FROM kv) PRECEDING AND 1 FOLLOWING
        )
    FROM
        kv
----
·                    distributed   false                                                                      ·             ·
·                    vectorized    false                                                                      ·             ·
root                 ·             ·                                                                          (avg)         ·
 ├── render          ·             ·                                                                          (avg)         ·
 │    │              render 0      avg                                                                        ·             ·
 │    └── window     ·             ·                                                                          (v, w, avg)   ·
 │         │         window 0      avg(@1) OVER (PARTITION BY @2 ROWS BETWEEN @S1 PRECEDING AND 1 FOLLOWING)  ·             ·
 │         │         render 2      avg(@1) OVER (PARTITION BY @2 ROWS BETWEEN @S1 PRECEDING AND 1 FOLLOWING)  ·             ·
 │         └── scan  ·             ·                                                                          (v, w)        ·
 │                   table         kv@primary                                                                 ·             ·
 │                   spans         ALL                                                                        ·             ·
 └── subquery        ·             ·                                                                          (avg)         ·
      │              id            @S1                                                                        ·             ·
      │              original sql  (SELECT count(*) FROM kv)                                                  ·             ·
      │              exec mode     one row                                                                    ·             ·
      └── group      ·             ·                                                                          (count_rows)  ·
           │         aggregate 0   count_rows()                                                               ·             ·
           │         scalar        ·                                                                          ·             ·
           └── scan  ·             ·                                                                          ()            ·
·                    table         kv@primary                                                                 ·             ·
·                    spans         ALL                                                                        ·             ·

query TTTTT
EXPLAIN (VERBOSE)
    SELECT
        avg(k) OVER (RANGE UNBOUNDED PRECEDING EXCLUDE CURRENT ROW),
        avg(k) OVER (RANGE UNBOUNDED PRECEDING EXCLUDE GROUP),
        avg(k) OVER (RANGE UNBOUNDED PRECEDING EXCLUDE TIES),
        avg(k) OVER (RANGE UNBOUNDED PRECEDING EXCLUDE NO OTHERS)
    FROM
        kv
----
·               distributed  false                                                                                 ·                        ·
·               vectorized   false                                                                                 ·                        ·
render          ·            ·                                                                                     (avg, avg, avg, avg)     ·
 │              render 0     avg                                                                                   ·                        ·
 │              render 1     avg                                                                                   ·                        ·
 │              render 2     avg                                                                                   ·                        ·
 │              render 3     avg                                                                                   ·                        ·
 └── window     ·            ·                                                                                     (k, avg, avg, avg, avg)  ·
      │         window 0     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE CURRENT ROW)  ·                        ·
      │         window 1     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE GROUP)        ·                        ·
      │         window 2     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE TIES)         ·                        ·
      │         window 3     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)                      ·                        ·
      │         render 1     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE CURRENT ROW)  ·                        ·
      │         render 2     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE GROUP)        ·                        ·
      │         render 3     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE TIES)         ·                        ·
      │         render 4     avg(@1) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)                      ·                        ·
      └── scan  ·            ·                                                                                     (k)                      ·
·               table        kv@primary                                                                            ·                        ·
·               spans        ALL                                                                                   ·                        ·
