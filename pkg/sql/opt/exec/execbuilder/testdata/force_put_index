# LogicTest: local !metamorphic

# ---------------------------------------------------------
# Ensure ForcePut indexes forces Puts even on unique indexes.
# ---------------------------------------------------------
statement ok
CREATE TABLE ti (
    a INT PRIMARY KEY,
    b INT,
    FAMILY (a, b),
    UNIQUE INDEX (b)
);

let $t_id
SELECT id FROM system.namespace WHERE name = 'ti'

let $updated_t_jsonb
WITH
  descs
    AS (
      SELECT
        id,
        crdb_internal.pb_to_json(
          'cockroach.sql.sqlbase.Descriptor',
          descriptor
        )
          AS descriptor
      FROM
        system.descriptor
    )
SELECT
  CAST (json_set(descriptor, ARRAY['table', 'indexes', '0', 'forcePut'], 'true') AS STRING)
FROM
  descs WHERE id = $t_id;

statement ok
SELECT * FROM crdb_internal.unsafe_upsert_descriptor($t_id, crdb_internal.json_to_pb('cockroach.sql.sqlbase.Descriptor',$$ $updated_t_jsonb $$), true)

statement ok
INSERT INTO ti VALUES (1, 1), (2, 2)

# Test that it's okay to insert into the unique
# force put index.
query T kvtrace
INSERT INTO ti VALUES (3, 1)
----
CPut /Table/56/1/3/0 -> /TUPLE/2:2:Int/1
Put /Table/56/2/1/0 -> /BYTES/0x8b

# Test that Put's triggered but update that should fail, continue to
# work.
statement ok
INSERT INTO ti VALUES (4, 4)

query T kvtrace
UPDATE ti SET b = 2 WHERE a = 4
----
Scan /Table/56/1/4/0
Put /Table/56/1/4/0 -> /TUPLE/2:2:Int/2
Del /Table/56/2/4/0
Put /Table/56/2/2/0 -> /BYTES/0x8c
