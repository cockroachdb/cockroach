# LogicTest: local

statement ok
CREATE TABLE d (
  a INT PRIMARY KEY,
  b JSONB,
  FAMILY (a,b)
)

statement ok
CREATE TABLE e (
  a INT PRIMARY KEY,
  b INT[],
  FAMILY (a,b),
  INVERTED INDEX(b)
)

statement ok
CREATE TABLE f (
  a INT PRIMARY KEY,
  b DECIMAL[],
  FAMILY (a,b),
  INVERTED INDEX(b)
)

statement ok
CREATE INVERTED INDEX foo_inv ON d(b)

# Tests for json inverted indexes.

query T kvtrace
INSERT INTO d VALUES(0, '{"a": "b"}')
----
CPut /Table/53/1/0/0 -> /TUPLE/
InitPut /Table/53/2/"a"/"b"/0/0 -> /BYTES/

# Make sure duplicate values don't get inserted.
query T kvtrace
INSERT INTO d VALUES(1, '[7,0,7]')
----
CPut /Table/53/1/1/0 -> /TUPLE/
InitPut /Table/53/2/Arr/0/1/0 -> /BYTES/
InitPut /Table/53/2/Arr/7/1/0 -> /BYTES/

# Make sure duplicate values don't get deleted either.
query T kvtrace
DELETE FROM d WHERE a=1
----
Scan /Table/53/1/1{-/#}
Del /Table/53/2/Arr/0/1/0
Del /Table/53/2/Arr/7/1/0
Del /Table/53/1/1/0

query T kvtrace
INSERT INTO d VALUES(2, '[{"a": "b"}, 3, {"a": "b"}]')
----
CPut /Table/53/1/2/0 -> /TUPLE/
InitPut /Table/53/2/Arr/3/2/0 -> /BYTES/
InitPut /Table/53/2/Arr/"a"/"b"/2/0 -> /BYTES/

query T kvtrace
INSERT INTO d VALUES(3, '[{"a": [0,1,0]}, 3, {"a": "b"}]')
----
CPut /Table/53/1/3/0 -> /TUPLE/
InitPut /Table/53/2/Arr/3/3/0 -> /BYTES/
InitPut /Table/53/2/Arr/"a"/"b"/3/0 -> /BYTES/
InitPut /Table/53/2/Arr/"a"/Arr/0/3/0 -> /BYTES/
InitPut /Table/53/2/Arr/"a"/Arr/1/3/0 -> /BYTES/

# Make sure that inserting NULL doesn't make an index entry.
query T kvtrace
INSERT INTO d VALUES(4, NULL)
----
CPut /Table/53/1/4/0 -> /TUPLE/

# Update away from null.
query T kvtrace
UPDATE d SET b='[1]' WHERE a=4
----
Scan /Table/53/1/4{-/#}
Put /Table/53/1/4/0 -> /TUPLE/
InitPut /Table/53/2/Arr/1/4/0 -> /BYTES/

# Update back to null.
query T kvtrace
UPDATE d SET b=NULL WHERE a=4
----
Scan /Table/53/1/4{-/#}
Put /Table/53/1/4/0 -> /TUPLE/
Del /Table/53/2/Arr/1/4/0

# Deleting a null shouldn't remove anything from the inv idx.
query T kvtrace
DELETE FROM d WHERE a=4
----
Scan /Table/53/1/4{-/#}
Del /Table/53/1/4/0

# Tests for array inverted indexes.

# Make sure that duplicate entries do not get emitted more than once, and that
# null keys don't get emitted.
query T kvtrace
INSERT INTO e VALUES(0, ARRAY[7,0,0,1,NULL,10,0,1,7,NULL])
----
CPut /Table/54/1/0/0 -> /TUPLE/
InitPut /Table/54/2/0/0/0 -> /BYTES/
InitPut /Table/54/2/1/0/0 -> /BYTES/
InitPut /Table/54/2/7/0/0 -> /BYTES/
InitPut /Table/54/2/10/0/0 -> /BYTES/

# Make sure that empty arrays do not emit any keys at all.
query T kvtrace
INSERT INTO e VALUES(1, ARRAY[])
----
CPut /Table/54/1/1/0 -> /TUPLE/

# Make sure that NULL arrays do not emit any keys at all.
query T kvtrace
INSERT INTO e VALUES(2, NULL)
----
CPut /Table/54/1/2/0 -> /TUPLE/

# Make sure that NULL entries within an array don't emit any keys.
query T kvtrace
INSERT INTO e VALUES(3, ARRAY[NULL])
----
CPut /Table/54/1/3/0 -> /TUPLE/

# Test that array inverted indexes work okay with decimals (a type with
# composite encoding). Also, make sure that the composite encoding is
# de-duplicated - 1.0 and 1.00 should just have one entry.

query T kvtrace
INSERT INTO f VALUES(0, ARRAY[7,0,0,1.000,10,0,1,7,1.0,1.00])
----
CPut /Table/55/1/0/0 -> /TUPLE/
InitPut /Table/55/2/0/0/0 -> /BYTES/
InitPut /Table/55/2/1/0/0 -> /BYTES/
InitPut /Table/55/2/7/0/0 -> /BYTES/
InitPut /Table/55/2/1E+1/0/0 -> /BYTES/

query T kvtrace
INSERT INTO f VALUES(1, ARRAY[])
----
CPut /Table/55/1/1/0 -> /TUPLE/

query T kvtrace
INSERT INTO f VALUES(2, NULL)
----
CPut /Table/55/1/2/0 -> /TUPLE/

# Test that updating a row that edits inverted index entries doesn't delete and
# re-put things that exist both in the old and in the new value.
# This case adds 15 and removes 1, so we should just see those commands.
query T kvtrace
UPDATE f SET b = ARRAY[0,15,7,10] WHERE a = 0
----
Scan /Table/55/1/0{-/#}
Put /Table/55/1/0/0 -> /TUPLE/
Del /Table/55/2/1/0/0
InitPut /Table/55/2/15/0/0 -> /BYTES/

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @>'{"a": "b"}'
----
·           distribution  local                        ·       ·
·           vectorized    true                         ·       ·
index-join  ·             ·                            (a, b)  ·
 │          table         d@primary                    ·       ·
 │          key columns   a                            ·       ·
 └── scan   ·             ·                            (a)     ·
·           table         d@foo_inv                    ·       ·
·           spans         /"a"/"b"-/"a"/"b"/PrefixEnd  ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @>'{"a": {"b": [1]}}'
----
·           distribution  local                                    ·       ·
·           vectorized    true                                     ·       ·
index-join  ·             ·                                        (a, b)  ·
 │          table         d@primary                                ·       ·
 │          key columns   a                                        ·       ·
 └── scan   ·             ·                                        (a)     ·
·           table         d@foo_inv                                ·       ·
·           spans         /"a"/"b"/Arr/1-/"a"/"b"/Arr/1/PrefixEnd  ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '{"a": {"b": [[2]]}}';
----
·           distribution  local                                            ·       ·
·           vectorized    true                                             ·       ·
index-join  ·             ·                                                (a, b)  ·
 │          table         d@primary                                        ·       ·
 │          key columns   a                                                ·       ·
 └── scan   ·             ·                                                (a)     ·
·           table         d@foo_inv                                        ·       ·
·           spans         /"a"/"b"/Arr/Arr/2-/"a"/"b"/Arr/Arr/2/PrefixEnd  ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '{"a": {"b":true}}';
----
·           distribution  local                         ·       ·
·           vectorized    true                          ·       ·
index-join  ·             ·                             (a, b)  ·
 │          table         d@primary                     ·       ·
 │          key columns   a                             ·       ·
 └── scan   ·             ·                             (a)     ·
·           table         d@foo_inv                     ·       ·
·           spans         /"a"/"b"/True-/"a"/"b"/False  ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @>'[1]'
----
·           distribution  local                    ·       ·
·           vectorized    true                     ·       ·
index-join  ·             ·                        (a, b)  ·
 │          table         d@primary                ·       ·
 │          key columns   a                        ·       ·
 └── scan   ·             ·                        (a)     ·
·           table         d@foo_inv                ·       ·
·           spans         /Arr/1-/Arr/1/PrefixEnd  ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @>'[{"a": {"b": [1]}}]'
----
·           distribution  local                                            ·       ·
·           vectorized    true                                             ·       ·
index-join  ·             ·                                                (a, b)  ·
 │          table         d@primary                                        ·       ·
 │          key columns   a                                                ·       ·
 └── scan   ·             ·                                                (a)     ·
·           table         d@foo_inv                                        ·       ·
·           spans         /Arr/"a"/"b"/Arr/1-/Arr/"a"/"b"/Arr/1/PrefixEnd  ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '[]';
----
·          distribution  local      ·       ·
·          vectorized    true       ·       ·
filter     ·             ·          (a, b)  ·
 │         filter        b @> '[]'  ·       ·
 └── scan  ·             ·          (a, b)  ·
·          table         d@primary  ·       ·
·          spans         FULL SCAN  ·       ·


query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '{}';
----
·          distribution  local      ·       ·
·          vectorized    true       ·       ·
filter     ·             ·          (a, b)  ·
 │         filter        b @> '{}'  ·       ·
 └── scan  ·             ·          (a, b)  ·
·          table         d@primary  ·       ·
·          spans         FULL SCAN  ·       ·


query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b->'a' = '"b"'
----
·           distribution  local                        ·       ·
·           vectorized    true                         ·       ·
index-join  ·             ·                            (a, b)  ·
 │          table         d@primary                    ·       ·
 │          key columns   a                            ·       ·
 └── scan   ·             ·                            (a)     ·
·           table         d@foo_inv                    ·       ·
·           spans         /"a"/"b"-/"a"/"b"/PrefixEnd  ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b->'a'->'c' = '"b"'
----
·           distribution  local                                ·       ·
·           vectorized    true                                 ·       ·
index-join  ·             ·                                    (a, b)  ·
 │          table         d@primary                            ·       ·
 │          key columns   a                                    ·       ·
 └── scan   ·             ·                                    (a)     ·
·           table         d@foo_inv                            ·       ·
·           spans         /"a"/"c"/"b"-/"a"/"c"/"b"/PrefixEnd  ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b->(NULL::STRING) = '"b"'
----
·       distribution  local  ·       ·
·       vectorized    true   ·       ·
norows  ·             ·      (a, b)  ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where '"b"' = b->'a'
----
·           distribution  local                        ·       ·
·           vectorized    true                         ·       ·
index-join  ·             ·                            (a, b)  ·
 │          table         d@primary                    ·       ·
 │          key columns   a                            ·       ·
 └── scan   ·             ·                            (a)     ·
·           table         d@foo_inv                    ·       ·
·           spans         /"a"/"b"-/"a"/"b"/PrefixEnd  ·       ·

# Make sure that querying for NULL equality doesn't use the inverted index.
query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b IS NULL
----
·          distribution  local      ·       ·
·          vectorized    true       ·       ·
filter     ·             ·          (a, b)  ·
 │         filter        b IS NULL  ·       ·
 └── scan  ·             ·          (a, b)  ·
·          table         d@primary  ·       ·
·          spans         FULL SCAN  ·       ·

query TTT
EXPLAIN SELECT * from d where b @> '{"a": []}' ORDER BY a;
----
·          distribution  local
·          vectorized    true
filter     ·             ·
 │         filter        b @> '{"a": []}'
 └── scan  ·             ·
·          table         d@primary
·          spans         FULL SCAN

query TTT
EXPLAIN SELECT * from d where b @> '{"a": {}}' ORDER BY a;
----
·          distribution  local
·          vectorized    true
filter     ·             ·
 │         filter        b @> '{"a": {}}'
 └── scan  ·             ·
·          table         d@primary
·          spans         FULL SCAN

# Multi-path contains queries. Should create zigzag joins.

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '{"a": {"b": "c"}, "f": "g"}'
----
·                 distribution           local                               ·       ·
·                 vectorized             true                                ·       ·
lookup-join       ·                      ·                                   (a, b)  ·
 │                table                  d@primary                           ·       ·
 │                type                   inner                               ·       ·
 │                equality               (a) = (a)                           ·       ·
 │                equality cols are key  ·                                   ·       ·
 │                parallel               ·                                   ·       ·
 │                pred                   b @> '{"a": {"b": "c"}, "f": "g"}'  ·       ·
 └── zigzag-join  ·                      ·                                   (a)     ·
      │           type                   inner                               ·       ·
      ├── scan    ·                      ·                                   (a)     ·
      │           table                  d@foo_inv                           ·       ·
      │           fixedvals              1 column                            ·       ·
      └── scan    ·                      ·                                   ()      ·
·                 table                  d@foo_inv                           ·       ·
·                 fixedvals              1 column                            ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '{"a": {"b": "c", "d": "e"}, "f": "g"}'
----
·                 distribution           local                                         ·       ·
·                 vectorized             true                                          ·       ·
lookup-join       ·                      ·                                             (a, b)  ·
 │                table                  d@primary                                     ·       ·
 │                type                   inner                                         ·       ·
 │                equality               (a) = (a)                                     ·       ·
 │                equality cols are key  ·                                             ·       ·
 │                parallel               ·                                             ·       ·
 │                pred                   b @> '{"a": {"b": "c", "d": "e"}, "f": "g"}'  ·       ·
 └── zigzag-join  ·                      ·                                             (a)     ·
      │           type                   inner                                         ·       ·
      ├── scan    ·                      ·                                             (a)     ·
      │           table                  d@foo_inv                                     ·       ·
      │           fixedvals              1 column                                      ·       ·
      └── scan    ·                      ·                                             ()      ·
·                 table                  d@foo_inv                                     ·       ·
·                 fixedvals              1 column                                      ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '[{"a": {"b": [[2]]}}, "d"]'
----
·                 distribution           local                              ·       ·
·                 vectorized             true                               ·       ·
lookup-join       ·                      ·                                  (a, b)  ·
 │                table                  d@primary                          ·       ·
 │                type                   inner                              ·       ·
 │                equality               (a) = (a)                          ·       ·
 │                equality cols are key  ·                                  ·       ·
 │                parallel               ·                                  ·       ·
 │                pred                   b @> '[{"a": {"b": [[2]]}}, "d"]'  ·       ·
 └── zigzag-join  ·                      ·                                  (a)     ·
      │           type                   inner                              ·       ·
      ├── scan    ·                      ·                                  (a)     ·
      │           table                  d@foo_inv                          ·       ·
      │           fixedvals              1 column                           ·       ·
      └── scan    ·                      ·                                  ()      ·
·                 table                  d@foo_inv                          ·       ·
·                 fixedvals              1 column                           ·       ·

statement ok
SET enable_zigzag_join = true

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '{"a": {"b": "c"}, "f": "g"}'
----
·                 distribution           local                               ·       ·
·                 vectorized             true                                ·       ·
lookup-join       ·                      ·                                   (a, b)  ·
 │                table                  d@primary                           ·       ·
 │                type                   inner                               ·       ·
 │                equality               (a) = (a)                           ·       ·
 │                equality cols are key  ·                                   ·       ·
 │                parallel               ·                                   ·       ·
 │                pred                   b @> '{"a": {"b": "c"}, "f": "g"}'  ·       ·
 └── zigzag-join  ·                      ·                                   (a)     ·
      │           type                   inner                               ·       ·
      ├── scan    ·                      ·                                   (a)     ·
      │           table                  d@foo_inv                           ·       ·
      │           fixedvals              1 column                            ·       ·
      └── scan    ·                      ·                                   ()      ·
·                 table                  d@foo_inv                           ·       ·
·                 fixedvals              1 column                            ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '{"a": {"b": "c", "d": "e"}, "f": "g"}'
----
·                 distribution           local                                         ·       ·
·                 vectorized             true                                          ·       ·
lookup-join       ·                      ·                                             (a, b)  ·
 │                table                  d@primary                                     ·       ·
 │                type                   inner                                         ·       ·
 │                equality               (a) = (a)                                     ·       ·
 │                equality cols are key  ·                                             ·       ·
 │                parallel               ·                                             ·       ·
 │                pred                   b @> '{"a": {"b": "c", "d": "e"}, "f": "g"}'  ·       ·
 └── zigzag-join  ·                      ·                                             (a)     ·
      │           type                   inner                                         ·       ·
      ├── scan    ·                      ·                                             (a)     ·
      │           table                  d@foo_inv                                     ·       ·
      │           fixedvals              1 column                                      ·       ·
      └── scan    ·                      ·                                             ()      ·
·                 table                  d@foo_inv                                     ·       ·
·                 fixedvals              1 column                                      ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '[{"a": {"b": [[2]]}}, "d"]'
----
·                 distribution           local                              ·       ·
·                 vectorized             true                               ·       ·
lookup-join       ·                      ·                                  (a, b)  ·
 │                table                  d@primary                          ·       ·
 │                type                   inner                              ·       ·
 │                equality               (a) = (a)                          ·       ·
 │                equality cols are key  ·                                  ·       ·
 │                parallel               ·                                  ·       ·
 │                pred                   b @> '[{"a": {"b": [[2]]}}, "d"]'  ·       ·
 └── zigzag-join  ·                      ·                                  (a)     ·
      │           type                   inner                              ·       ·
      ├── scan    ·                      ·                                  (a)     ·
      │           table                  d@foo_inv                          ·       ·
      │           fixedvals              1 column                           ·       ·
      └── scan    ·                      ·                                  ()      ·
·                 table                  d@foo_inv                          ·       ·
·                 fixedvals              1 column                           ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '{"a": {}, "b": 2}'
----
·                distribution  local                     ·       ·
·                vectorized    true                      ·       ·
filter           ·             ·                         (a, b)  ·
 │               filter        b @> '{"a": {}, "b": 2}'  ·       ·
 └── index-join  ·             ·                         (a, b)  ·
      │          table         d@primary                 ·       ·
      │          key columns   a                         ·       ·
      └── scan   ·             ·                         (a)     ·
·                table         d@foo_inv                 ·       ·
·                spans         /"b"/2-/"b"/2/PrefixEnd   ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from d where b @> '{"a": {}, "b": {}}'
----
·          distribution  local                      ·       ·
·          vectorized    true                       ·       ·
filter     ·             ·                          (a, b)  ·
 │         filter        b @> '{"a": {}, "b": {}}'  ·       ·
 └── scan  ·             ·                          (a, b)  ·
·          table         d@primary                  ·       ·
·          spans         FULL SCAN                  ·       ·

subtest array

# Tests for array inverted indexes.
query TTTTT
EXPLAIN (VERBOSE) SELECT * from e where b @> ARRAY[1]
----
·           distribution  local      ·       ·
·           vectorized    true       ·       ·
index-join  ·             ·          (a, b)  ·
 │          table         e@primary  ·       ·
 │          key columns   a          ·       ·
 └── scan   ·             ·          (a)     ·
·           table         e@e_b_idx  ·       ·
·           spans         /1-/2      ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from e where b @> ARRAY[]::INT[]
----
·          distribution  local         ·       ·
·          vectorized    true          ·       ·
filter     ·             ·             (a, b)  ·
 │         filter        b @> ARRAY[]  ·       ·
 └── scan  ·             ·             (a, b)  ·
·          table         e@primary     ·       ·
·          spans         FULL SCAN     ·       ·

# Test that searching for a NULL element using the inverted index.
query TTTTT
EXPLAIN (VERBOSE) SELECT * from e where b @> ARRAY[NULL]::INT[]
----
·            distribution  local      ·       ·
·            vectorized    true       ·       ·
index-join   ·             ·          (a, b)  ·
 │           table         e@primary  ·       ·
 │           key columns   a          ·       ·
 └── norows  ·             ·          (a)     ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from e where b @> NULL
----
·       distribution  local  ·       ·
·       vectorized    true   ·       ·
norows  ·             ·      (a, b)  ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from e where b IS NULL
----
·          distribution  local      ·       ·
·          vectorized    true       ·       ·
filter     ·             ·          (a, b)  ·
 │         filter        b IS NULL  ·       ·
 └── scan  ·             ·          (a, b)  ·
·          table         e@primary  ·       ·
·          spans         FULL SCAN  ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from e where b @> ARRAY[1,2]
----
·                 distribution           local            ·       ·
·                 vectorized             true             ·       ·
lookup-join       ·                      ·                (a, b)  ·
 │                table                  e@primary        ·       ·
 │                type                   inner            ·       ·
 │                equality               (a) = (a)        ·       ·
 │                equality cols are key  ·                ·       ·
 │                parallel               ·                ·       ·
 │                pred                   b @> ARRAY[1,2]  ·       ·
 └── zigzag-join  ·                      ·                (a)     ·
      │           type                   inner            ·       ·
      ├── scan    ·                      ·                (a)     ·
      │           table                  e@e_b_idx        ·       ·
      │           fixedvals              1 column         ·       ·
      └── scan    ·                      ·                ()      ·
·                 table                  e@e_b_idx        ·       ·
·                 fixedvals              1 column         ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * from e where b @> ARRAY[1] AND b @> ARRAY[2]
----
·                 distribution           local                                ·       ·
·                 vectorized             true                                 ·       ·
lookup-join       ·                      ·                                    (a, b)  ·
 │                table                  e@primary                            ·       ·
 │                type                   inner                                ·       ·
 │                equality               (a) = (a)                            ·       ·
 │                equality cols are key  ·                                    ·       ·
 │                parallel               ·                                    ·       ·
 │                pred                   (b @> ARRAY[1]) AND (b @> ARRAY[2])  ·       ·
 └── zigzag-join  ·                      ·                                    (a)     ·
      │           type                   inner                                ·       ·
      ├── scan    ·                      ·                                    (a)     ·
      │           table                  e@e_b_idx                            ·       ·
      │           fixedvals              1 column                             ·       ·
      └── scan    ·                      ·                                    ()      ·
·                 table                  e@e_b_idx                            ·       ·
·                 fixedvals              1 column                             ·       ·

# Ensure that an inverted index with a composite primary key still encodes
# the primary key data in the composite value.
statement ok
DROP TABLE IF EXISTS t;
CREATE TABLE t (x DECIMAL PRIMARY KEY, y int[], FAMILY (x, y));
CREATE INVERTED INDEX ON t(y)

query T kvtrace
INSERT INTO t VALUES (1.00, ARRAY[1,2])
----
CPut /Table/56/1/1/0 -> /TUPLE/1:1:Decimal/1.00/
InitPut /Table/56/2/1/1/0 -> /BYTES/0x1503348964
InitPut /Table/56/2/2/1/0 -> /BYTES/0x1503348964

statement ok
CREATE TABLE geo_table(
  k int primary key,
  geom geometry,
  INVERTED INDEX geom_index(geom)
)

query TTTTT
EXPLAIN (VERBOSE) SELECT k FROM geo_table WHERE ST_Intersects('POINT(3.0 3.0)'::geometry, geom)
----
·                                    distribution     local·          ·
·                                    vectorized       false·          ·
render                               ·                ·k)        ·
 │                                   render 0         k·          ·
 └── filter                          ·                ·k, geom)  ·
      │                              filter           st_intersects('010100000000000000000008400000000000000840', geom·          ·
      └── index-join                 ·                ·k, geom)  ·
           │                         table            geo_table@primary                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ·          ·
           │                         key columns      k                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ·          ·
           └── render                ·                ·                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      (k)        ·
                │                    render 0         k·          ·
                └── inverted-filter  ·                ·k, geom)  ·
                     │               inverted column  2                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ·          ·
                     │               num spans·          ·
                     └── scan        ·                ·k, geom)  ·
·                                    table            geo_table@geom_index·          ·
·                                    spans            /1152921504606846976-/1152921504606846977 /1152921573326323712-/1152921573326323713 /1152921574400065536-/1152921574400065537 /1152921574668500992-/1152921574668500993 /1152921574735609856-/1152921574735609857 /1152921574739804160-/1152921574739804161 /1152921574740066304-/1152921574740066305 /1152921574740070400-/1152921574740070401 /1152921574740070464-/1152921574740070465 /1152921574740070468-/1152921574740070469 /1152921574740070469-/1152921574740070470 /1152921574740070480-/1152921574740070481 /1152921574740070656-/1152921574740070657 /1152921574740071424-/1152921574740071425 /1152921574740082688-/1152921574740082689 /1152921574740131840-/1152921574740131841 /1152921574740852736-/1152921574740852737 /1152921574752387072-/1152921574752387073 /1152921577621291008-/1152921577621291009 /1152921590506192896-/1152921590506192897 /1152921779484753920-/1152921779484753921 /1152922604118474752-/1152922604118474753 /1152925902653358080-/1152925902653358081 /1152939096792891392-/1152939096792891393 /1152991873351024640-/1152991873351024641 /1153202979583557632-/1153202979583557633 /1154047404513689600-/1154047404513689601 /1157425104234217472-/1157425104234217473 /1170935903116328960-/1170935903116328961 /1224979098644774912-/1224979098644774913 /1441151880758558720-/1441151880758558721  ·          ·

statement ok
CREATE TABLE geo_table2(
  k int primary key,
  geom geometry
)

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM geo_table2 JOIN geo_table@geom_index
ON ST_Intersects(geo_table2.geom, geo_table.geom)
----
·                        distribution           local                      ·                   ·
·                        vectorized             true                       ·                   ·
lookup-join              ·                      ·                          (k, geom, k, geom)  ·
 │                       table                  geo_table@primary          ·                   ·
 │                       type                   inner                      ·                   ·
 │                       equality               (k) = (k)                  ·                   ·
 │                       equality cols are key  ·                          ·                   ·
 │                       parallel               ·                          ·                   ·
 │                       pred                   st_intersects(geom, geom)  ·                   ·
 └── render              ·                      ·                          (k, geom, k)        ·
      │                  render 0               k                          ·                   ·
      │                  render 1               geom                       ·                   ·
      │                  render 2               k                          ·                   ·
      └── inverted-join  ·                      ·                          (k, geom, k, geom)  ·
           │             table                  geo_table@geom_index       ·                   ·
           │             type                   inner                      ·                   ·
           │             ·                      st_intersects(@2, @4)      ·                   ·
           │             parallel               ·                          ·                   ·
           └── scan      ·                      ·                          (k, geom)           ·
·                        table                  geo_table2@primary         ·                   ·
·                        spans                  FULL SCAN                  ·                   ·

# Do not use the index when using a _ prefixed builtin.
query TTTTT
EXPLAIN (VERBOSE) SELECT k FROM geo_table WHERE _ST_Intersects('POINT(3.0 3.0)'::geometry, geom)
----
·               distribution  local                                                               ·          ·
·               vectorized    true                                                                ·          ·
render          ·             ·                                                                   (k)        ·
 │              render 0      k                                                                   ·          ·
 └── filter     ·             ·                                                                   (k, geom)  ·
      │         filter        _st_intersects('010100000000000000000008400000000000000840', geom)  ·          ·
      └── scan  ·             ·                                                                   (k, geom)  ·
·               table         geo_table@primary                                                   ·          ·
·               spans         FULL SCAN                                                           ·          ·
