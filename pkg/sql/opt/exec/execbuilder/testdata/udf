# LogicTest: local-udf

statement ok
CREATE TABLE t (
  k INT PRIMARY KEY,
  a INT,
  FAMILY (k, a)
);
INSERT INTO t VALUES (1, 1), (2, 2), (3, 3), (4, 1), (5, 1);

statement ok
CREATE FUNCTION one() RETURNS INT LANGUAGE SQL AS 'SELECT 1';

query T
EXPLAIN SELECT one()
----
distribution: local
vectorized: true
·
• values
  size: 1 column, 1 row

query T
EXPLAIN SELECT * FROM t WHERE a = one()
----
distribution: local
vectorized: true
·
• filter
│ filter: a = one()
│
└── • scan
      missing stats
      table: t@t_pkey
      spans: FULL SCAN

statement ok
CREATE FUNCTION fetch_one_then_two() RETURNS INT LANGUAGE SQL AS $$
  SELECT a FROM t WHERE k = 1;
  SELECT a FROM t WHERE k = 2;
$$

# This test shows evidence of the execution of multiple statements within a UDF.
# The trace includes the two point lookups made by the UDF.
query T kvtrace
SELECT fetch_one_then_two()
----
Scan /Table/106/1/1/0
Scan /Table/106/1/2/0

# This test shows that six point lookups are performed - two for each invocation
# of the UDF.
query T kvtrace
SELECT i FROM (VALUES (1), (2), (3)) AS v(i) WHERE i = fetch_one_then_two()
----
Scan /Table/106/1/1/0
Scan /Table/106/1/2/0
Scan /Table/106/1/1/0
Scan /Table/106/1/2/0
Scan /Table/106/1/1/0
Scan /Table/106/1/2/0
