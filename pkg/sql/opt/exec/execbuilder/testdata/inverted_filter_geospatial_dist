# LogicTest: 5node

statement ok
CREATE TABLE geo_table(
  k int primary key,
  geom geometry,
  INVERTED INDEX geom_index(geom)
)

statement ok
INSERT INTO geo_table VALUES
  (1, 'POINT(1 1)'),
  (2, 'LINESTRING(1 1, 2 2)'),
  (3, 'POINT(3 3)'),
  (4, 'LINESTRING(4 4, 5 5)'),
  (5, 'LINESTRING(40 40, 41 41)'),
  (6, 'POLYGON((1 1, 5 1, 5 5, 1 5, 1 1))'),
  (7, 'LINESTRING(1 1, 3 3)')

# Not distributed.
query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_Intersects('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: local
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_intersects('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@geo_table_pkey
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlFFv2jAQx9_3Kax7KWgBbCcI8BNtSbdMUDpg2qoFoTS50ogQM9usVBXffQppaUkHLX4Ivjv7d-e_zzyC_pOAAPfXVffUuySljjccDb93y2Todt3zEZmRi0G_R6YoJya4SZD8_OoOXKLNJE4NKo2h0aWT3o_uyLvqe5ejUolXOeFVXrZIya5SYldpuXwixBe333NHg2srY83LpD_ouANydk1mYEEqI7wM5qhB_AYGYwsWSoaotVSZ63GzwItWIKgFcbpYmsw9tiCUCkE8golNgiBglNU4wCBCVaNgQYQmiJMNdnuEdlbAJE4jXIEF5zJZzlMtyCyvDCwYLoLMUfPhzPdXt5Hvrxj1_RV97wOVY_cwH0iQRsSmRJo7VBrGawvk0rwcUZtgiiDYK028Dgi6tj4ui5f-RWUwuogTgwpVje1q8xx3VwtFZEraTBCdqUC0CZQRm1PZjbrvU059n9L3PkAwjY7dlolRUMOC_tII0mZ7deEFXdgxunyTcfrULfxAt-SzyWKGD__rmH2l2YXS-DGlba_K3i0s94viC6SMOjQf_OmXUZZPWqet7aDMeWO_rNwZTeeNfSJeP-Q2L3_ggpyCCvYxKgylMqhqzq4GbfZ5b7p6IZ1zTLoB6oVMNe6k25eJFjJV2HpsAUZTzP-ztFyqEK-UDDdrc7O_AW0cEWqTR1lueOlzSBuFwXz7zF-T2EES309iRRI_SLL3k3iRZB8kOftJdpHkHCTVD-k0tuA2kfeTOAIBLe7UnWajUWnwqFFxsBlUmo0GraATNps3GLCoFUK2IZjqrAGGd_J-gx09LLLruw0SjRb0ghl20KCax2msTRw-RdbrT_8CAAD__8QLQsU=

# The inverted filterer handles five inverted index rows with decoded
# datums, where the first column is the PK (k) and the second is the cellid
# and is sorted in cellid order.
#  7, 1152921521786716160
#  2, 1152921526081683456
#  6, 1152921573326323712
#  7, 1152921574400065536
#  3, 1152921574740070469
# To test distribution, we inject a split after the third row and relocate
# the second part of the inverted index. Both inverted filterers will produce 7,
# which will need to be de-duplicated.

statement ok
ALTER INDEX geo_table@geom_index SPLIT AT VALUES (1152921574000000000)

query TI colnames,rowsort
SELECT replicas, lease_holder FROM [SHOW RANGES FROM INDEX geo_table@geom_index WITH DETAILS]
----
replicas  lease_holder
{1}       1
{1}       1

# Not distributed, since both ranges of the index are on the same node,
# which is also the gateway node.
query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_Intersects('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: local
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_intersects('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@geo_table_pkey
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlEFv4joQx-_vU1hzKegFsJNULT7RlvS9rKB0gdVutUHI4IFGhJi1zZaq4ruvQlpa0oUWH4Jnxv7N-O8xT2B-JcAh-HHbughvSKkZ9vq9r60y6QWt4KpPZuS622mTKaqhFaMEyff_g25AjB3GqUVtcGxN6aT9rdUPbzvhTb9Ucqsucatu2SElr0qJV6Xl8gnn_wWddtDv3jkZa14mnW4z6JLLOzIDB1Il8UbM0QD_CQwGDiy0GqMxSmeup82CUK6AUwfidLG0mXvgwFhpBP4ENrYJAod-VmMXhURdo-CARCviZIPdHqGRFTCMU4krcOBKJct5ajiZ5ZWBA72FyBy1CC6jaDWRUbRiNIpW9KMPVI7dwyIgIpXEo0TZe9QGBmsH1NK-HtFYMUXg7I0mYRM4XTuflyVMf6O2KK_jxKJGXWO72rzEg9VCE5WSBuPEZCoQY4W2fHMq7-w0iqhLo4jSjz5AMJXHbsvEKKjhQGdpOWmwvbq4BV3YMbp8UXH63C3ugW7JZ8PFDB__1jH7SvMKpbnHlLa9Km-3sNzPiy-QMurTfLjPv4yyfFK_qG8HZf47-3Xlzjj339kn_O1DbrjlT1yQX1DBO0aFntIWdc3f1aDB_t2b7rSQzj8mXRfNQqUGd9Lty0QLmSpsPXAA5RTz_yyjlnqMt1qNN2tzs7MBbRwSjc2jLDfC9CVkrEYx3z7ztyR2kOTuJ7EiyT1I8vaT3CLJO0jy95O8Isk_SDo9pNPAgUmiHoaxBA4TMRn5cnRWkXWPVnwmRKVex_OKHKMnzimKkXcG2QYxNVkD9O7Vwwbbf1xk1zcRiUEH2mKGTbSo53EaGxuPnyPr9T9_AgAA__81KUP2

statement ok
ALTER INDEX geo_table@geom_index EXPERIMENTAL_RELOCATE VALUES (ARRAY[2], 1152921574000000000)

query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW RANGES FROM INDEX geo_table@geom_index WITH DETAILS]
ORDER BY 1
----
start_key              end_key                replicas  lease_holder
<before:/Table/62>     …/1152921574000000000  {1}       1
…/1152921574000000000  <after:/Max>           {2}       2

# Distributed. TODO(treilly): This claims to be distributed, but it isn't. What gives?
query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_Intersects('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: local
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_intersects('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@geo_table_pkey
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlNFv-jYQx9_3V1j3UtAC2EmA4ifakm6ZoHTAtFULQh4-aESImW1Wqor_fQppaUl_0OKH4LuzP3f--swLmH8T4BD8dd-9Cu9IqRMOR8Pfu2UyDLrBzYgsyO2g3yNzVBMr_kmQ_PlrMAiIsZM4tagNTq0pXfT-6I7C-354NyqV3KpL3KpbdkjJq1LiVWm5fMH5L0G_F4wGD07GWpZJf9AJBuT6gSzAgVRJvBNLNMD_BgZjB1ZaTdEYpTPXy25BKDfAqQNxulrbzD12YKo0An8BG9sEgcMoq3GAQqKuUXBAohVxssPuj9DOCpjEqcQNOHCjkvUyNZws8srAgeFKZI5aBNdRtJnJKNowGkUb-tUHKufuYREQkUriUaLsI2oD460Dam3fj2ismCNw9kGTsAOcbp3vyxKm_6G2KG_jxKJGXWOH2rzFg81KE5WSNuPEZCoQY4W2fHcqr1mPIurSKKL0qw8QTOW52zIxCmo40F9bTtrsqC5uQRd2ji6_qTh97Rb3RLfks8lqgc8_6phjpXmF0txzSttflXdYWO7nxRdIGfVpPtzXX0ZZPmldtfaDMv-T_b7yYFz6n-wL_vEht93yNy7IL6jgnaPCUGmLuuYfatBmPx9NVy-k889JN0CzUqnBg3THMtFCpgrbjh1AOcf8P8uotZ7ivVbT3drc7O9AO4dEY_Moy40wfQsZq1Es98_8I4mdJLnHSaxIck-SvOMkt0jyTpL84ySvSPJPkuqndBo7MEvU0ySWwEG0Gs1LKVml6TUaFd-rY0U0pKg0Zs3WpYvejHpNyDaIuckaYPionnbY0fMqu76ZSAw60BML7KBFvYzT2Nh4-hrZbn_6PwAA___Pn0K_

# Data is distributed, but the filterer can't be distributed since it is not a union.
query T
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_CoveredBy('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: local
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_coveredby('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@geo_table_pkey
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlNFv-jYQx9_3V1j3UtAC2EkY4Cfakm6ZoHTAtFULQiE-aESImW1aqor__aeQlpb0By1-CL47-3Pnr8-8gP4_AQ7ev3fdS_-WlDr-cDT8q1smQ6_rXY_IgtwM-j0yRzkx4TRB8s8f3sAj2kwi-YgKxfS5dNH7uzvy7_r-7ahUsqs2sat22SIlp0qJU6Xl8gXnv3v9njca3FsZalkm_UHHG5Cre7IAC1Ip8DZcogb-HzAYW7BSMkKtpcpcL7sFvtgApxbE6WptMvfYgkgqBP4CJjYJAodRVuIAQ4GqRsECgSaMkx12f4J2VsAkTgVuwIJrmayXqeZkkVcGFgxXYeaoBXAVBJuZCIINo0GwoV99oHLuHhYACVNBHEqkeUClYby1QK7N-xG1CecInH3QxO8Ap1vr-7L46SMqg-ImTgwqVDV2qM1b3NusFJEpaTNOdKYC0SZUhu9O5TTqQUBtGgSUfvUBgqk4d1smRkENC_prw0mbHdXFLujCztHlTxmnr91in-iWfDZZLfD5Zx1zrDSnUJp9Tmn7q3IOC8v9vPAAKaMuzYf9-ssoyyety9Z-UOZ-st9XHoym-8m-4B_fcdsuf-N-3IIIzjkiDKUyqGruoQRt9uvRdPVCOvecdAPUK5lqPEh3LBMtZKqw7dgCFHPM_7K0XKsI75SMdmtzs78D7RwCtcmjLDf89C2kjcJwuX_lH0nsJMk-TmJFkn2S5Bwn2UWSc5LkHic5RZJ7klQ_pdPYglkinyaxAA6NkArhNqeV5pRhxW3Ofqu0WlGz0nTrImrUbRG6Dcg2hHOdNcDwQT7tsKPnVXZ9szDRaEEvXGAHDaplnMbaxNFrZLv95UcAAAD__2tLQh0=

# Move all the index data that will be read to node 2 while the query executes
# at node 1. The filtering moves to node 2 when it is distributable.

statement ok
ALTER INDEX geo_table@geom_index EXPERIMENTAL_RELOCATE VALUES (ARRAY[2], 1)

query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW RANGES FROM INDEX geo_table@geom_index WITH DETAILS]
ORDER BY 1
----
start_key              end_key                replicas  lease_holder
<before:/Table/62>     …/1152921574000000000  {2}       2
…/1152921574000000000  <after:/Max>           {2}       2

# Filtering is placed at node 2. We need a retry here to account for possibly
# stale dist sender caches.
query T retry
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_Intersects('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: full
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_intersects('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@geo_table_pkey
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlF1v8jYUx-_3KaxzU9AC2Hmhe3zF05JumXjpgGmrlgqlyQmNCHFmm5Wq4rtPIS2F9AktvkjiY_v3d_4-Pi-g_k2Bg_v37eC7NyKNvjedTf8YNMnUHbjXM7IkN5PxkCxQzHXwkCL56zd34hKl50mmUSoMtWpcDP8czLzbsTeaNRpm2yRm22wapGG1KbHatNm84PxXdzx0Z5M7o2CtmmQ86bsTcnVHlmBAJiIcBStUwP8BBgaYcG9ALkWISglZhF92k7xoA5wakGT5WhfhewNCIRH4C-hEpwgcRqIl8o4DBkSogyTdTdsaINb6fZHSwQKBdw9UvD5wZ2scCLHTQrPCkAkGEcoOPZKDvV-94m_nSRbhBgy4Ful6lSlOlqUNYMA0D4pAx4cr39_Eke9vGPX9Df3sAa1z1zAfSJBFxKJE6EeUCupsYRVb6Dm2eNl_KDVGN0mqUaLssGNv3sbdTS6JyEiPcaIKF4jSgdR891fWpeP71KS-T-lnDyCYRecuK8youGHAeK056bFaX8yKL-wcX34XSfaaLeaJbCm_5vkSn3-UMXVbsypbM8_Z2v6orOONlXFeve6UUZuWzXx9M8rKj2_fv-0bZfaH_vvMo_aL_aF_wQ-rRs9sfuGA7IoL1jkuTIXUKDv2sQc99nOtnFORs4_kPqlTE1S5yBR-qVDRilKLbe8NwGiBZXFUYi1DvJUi3M0tu-MdaBeIUOlytFt2vOxtSGmJwWp_zQ9J7CTJPINkniRZ9SRWJVknSXY9yayS7JMkp55kVUnOSRKtJ9nFKcapeJonEXCIrTgILRq3zNh5aNmxQ1sPzqXVot1ut4vWpW1FIRQLgoUqUmn6KJ522NlzXiRCHKQKDRgGS-yjRrlKskTpJHwd2W5_-j8AAP__ZBB-ZQ==

# Filtering is at gateway node since the filter is not distributable.
#
# TODO(treilly): What the text above claims does not square with the figure
# generated below.
query T retry
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE ST_CoveredBy('MULTIPOINT((2.2 2.2), (3.0 3.0))'::geometry, geom) ORDER BY k
----
distribution: full
vectorized: true
·
• sort
│ order: +k
│
└── • filter
    │ filter: st_coveredby('01040000000200000001010000009A999999999901409A99999999990140010100000000000000000008400000000000000840', geom)
    │
    └── • index join
        │ table: geo_table@geo_table_pkey
        │
        └── • inverted filter
            │ inverted column: geom_inverted_key
            │ num spans: 31
            │
            └── • scan
                  missing stats
                  table: geo_table@geom_index
                  spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlN-S2jYUxu_7FJpzszA1iySbDeiKJDitO_zZAp02U-8wXutAPBjLlUTCzg7v3jHeEHBiNujCto6k3yd_OjrPYP5LQYD_z_3wbTAmjUEwm8_-HDbJzB_67-dkTT5MJyOyQrWw0WOK5O_f_alPjF3E6jNqlI9PjZvRX8N5cD8JxvNGg99ywm950yEN95YS95Y2mzdC_OZPRv58-tEpUJsmmUwH_pS8-0jW4ECmJI6jDRoQ_wIDBzg8OJBrFaMxShfh58OkQO5AUAeSLN_aIvzgQKw0gngGm9gUQcBYtVTe7oADEm2UpIdpewfU1n5bZGy0QhB3JyrBAERn75wIsctC88KPKUYSdZueycHRrn7xt4skk7gDB96rdLvJjCDr0gZwYJZHRaAdwrsw3C1lGO4YDcMdfe0BrWvXsBBIlEniUqLsJ9QG6mxhFVvoNbYE2WfUFuWHJLWoUbfZuTdfx_1dronKSJ8JYgoXiLGRtuLwV-6bThhSTsOQ0tceQDCT1y4rzKi44cBkawXps1pfeMUXdo0vf6gke8kWfiFbyq9FvsanH2VM3dbcytb4NVs7HpV7vrEyLiq3nTLq0bLxlzejrPzove0dG2Xed_1vM89a1_uufyNOi0afN3_ifLyKCe41JsyUtqjb3rkFffZrrVynIuedyb1SpqZocpUZ_Kk6RStKLbZ_cADlCsvaaNRWx3ivVXyYW3YnB9AhINHYcvSu7ATZ1yFjNUab4y0_JbGLJH4FiV8kufUkViW5F0lePYlXSd5FUqee5FZJnYskWk_yilNcpurLIpEggMUuj1iPth573buW53W6rS5ncUveyTcS467HWVE5lmm0MkUqzT6pLwfs_CkvEmEZpQYdGEVrHKBFvUmyxNgkfhnZ73_5PwAA__8DkXzV

# Bounding box operations.
statement ok
SET CLUSTER SETTING sql.spatial.experimental_box2d_comparison_operators.enabled = on

query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW RANGES FROM INDEX geo_table@geom_index WITH DETAILS]
ORDER BY 1
----
start_key              end_key                replicas  lease_holder
<before:/Table/62>     …/1152921574000000000  {2}       2
…/1152921574000000000  <after:/Max>           {2}       2

query ITTTI colnames,rowsort
SELECT range_id, start_key, end_key, replicas, lease_holder FROM [SHOW RANGES FROM INDEX geo_table@primary WITH DETAILS]
ORDER BY lease_holder, start_key
----
range_id  start_key           end_key                                   replicas  lease_holder
63        <before:/Table/62>  <after:/Table/106/2/1152921574000000000>  {2}       2

# We should see a distributed execution (though need to retry to purge possibly
# stale dist sender caches).
query T retry
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE geom && 'POINT(3.0 3.0)'::geometry
----
distribution: full
vectorized: true
·
• filter
│ filter: geom && '010100000000000000000008400000000000000840'
│
└── • index join
    │ table: geo_table@geo_table_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table@geom_index
              spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlG9v2j4Qx5__XoV1T9pKTrHzp1A_4rc23TK10AHSNi0VSpODRoQ4s81KVfHepyRtB-mAwQML39nfu_v4Ls-gf2YgwP92e_1_0CPHl8FwNPxyfUKG_rV_MSIzcjXo35ApyrGJ7jMkXz_5A7_cz0m4YMw-q1dydNsPeqNj55QR55SdHAnx0e_f-KPBd6CQywR70Rw1iB_AgYINdxQKJWPUWqrS_FwdCpIlCEYhzYuFKc13FGKpEMQzmNRkCAJ60pJFywUKCZoozapjKwpyYf5c0iaaIghvLUpwCcJd0bVAfHegUVnwAKMEVYtthIM3Ht2SxDjNE1wChQuZLea5FmRGK0RAYVhEpaEVwocwXE6SMFxyFoZLtm8B69A7PAQS5QlxGJHmAZWGbVh4Aws7BEuQ_0JlMLlKM4MKVYtvsnn1-8tCEZmTLhdElxSINpEyoqrKaXthyGwWhoztW4Bgnhx6rYTRoEGhvzCCdPlWLnaDCz-Ey2eZ5i_dYu_olvrfuJjh0986ZltqTiM1-5DU3p7K2UystgvStRvDzDjj7P2v477bH4mNSd9H2G2U4WyUsWfyB6gLmWv8p9FnjUgWX91RwGSK9edGy4WK8VbJuDpbb_uVUGVIUJva69WbIH91aaMwmr8NzroS36lkH6Bk71RytivxppKzU8ndrmQ3ldydSmy7klOyn2TycZwmIOAsOu94rB1b3nnbtty4zaxOh3uW42HHcfjZ-b1djtAki6a6bIDhg3ysZEdPRfl8kyjTSOEmmuElGlTzNE-1SeMXz2r13-8AAAD__02WKJQ=

query T retry
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE 'POINT(3.0 3.0)'::geometry::box2d && geom
----
distribution: full
vectorized: true
·
• filter
│ filter: 'BOX(3 3,3 3)' && geom
│
└── • index join
    │ table: geo_table@geo_table_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 31
        │
        └── • scan
              missing stats
              table: geo_table@geom_index
              spans: 31 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlFFP2zAQx9_3Kax7KUiOasdpB37qoEXrBJS1lYY0oypNjhI1jTPbHUWo331KAowGWmgfrPrO97_zz3d5BPsnBQm966vzb_1LctDtj8ajn-eHZNQ7752OyZycDQcXZIZ64sJpiuTX996wRxqMM87e_o6CN_uGlCeDa79L1JIxv12theACKGQ6xstwgRbkb-BAwYcbCrnREVqrTWF-LA_14xVIRiHJ8qUrzDcUIm0Q5CO4xKUIEi61p_NmABRidGGSlsfWFPTS_Q-yLpwhyNarLP0uyGBNXyXiuxONCxJDDGM0TbaRDl5AdYobTpIsxhVQONXpcpFZSeb0-eqjPCwMTQUnSq1uY6VWnCm1Yh8t4O0bwxWQMIuJYES7OzQWtmHhNSxsHyz97C8ah_FZkjo0aJp8k82zv7fKDdEZ6XBJbEGBWBcaJ8tbia8tpZjPlGLsowUIZvG-YQWMGg0Kg6WTpMO3cvFrXPg-XH7oJHvqFn9Ht1T_JvkcH97rmG2liVpp_j6lvTyV2CysskvSOBlcHwgiqCDisCHfHeWO_wmAQa1KsVHlB4M9RJvrzOKnJpvVMnl8fUMB4xlWXxOrlybCK6Oj8my1HZRCpSFG6ypvq9r0s2eXdQbDxctcvFbiO5X8PZT8nUpiuxKvK4mdSsF2Jb-uFOxUYtuVRMH-NtX3kyQGCdP2lEfRsfCOoxb3Aiam3jEGba8dtY9aTBy1A78FRUA4s0UDjO70fSk7fsiL57sNU4sULsI5dtGhWSRZYl0SPXnW6y__AgAA__8DTCZU

query T retry
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE 'LINESTRING(1.0 1.0, 5.0 5.0)'::geometry ~ geom
----
distribution: full
vectorized: true
·
• filter
│ filter: '010200000002000000000000000000F03F000000000000F03F00000000000014400000000000001440' ~ geom
│
└── • index join
    │ table: geo_table@geo_table_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 33
        │
        └── • scan
              missing stats
              table: geo_table@geom_index
              spans: 33 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUVFFv4jgQfr9fYc0LrRSK7YRS_MRdG3o5UegB0u5qUyEvHmhEiLO22VJV7G9fBUoXooUWS3EyM55vZj5P5gXs9xQEhJ_vO39HXXJ2Ew2Gg_8752QQdsLrIZmRdr93R6aoR05-S5F8-jfsh6TSibrhYNiPurdn7IISdkE9Ur-gxXNeEeI27N2Fw_4X8rNwnYMHmVbYlXO0IL4CAw84PHiQGz1Ga7Up1C_rQ5FagqAeJFm-cIX6wYOxNgjiBVziUgQBXV3VeS0ADxQ6maTrYysP9ML9drJOThFEfSdKdAMiWHk7gdjxQMOi5j5KhaZG98LBGyWtosJRkilcggfXOl3MMyvIzNuWPshloajF8E8cLycqjpeMxvGSvrdB9VQfFgORmSI-J9o9orFwiBZWooWeQkuU_UDjULWT1KFBU2P73Gzt4TI3RGekxQSxBQvEOmmcWFflN-pxTDmNY0rf24Bgpk51K8goseFBb-EEabGDvPASL-wUXv7TSfbaLfxIt2y-RvkMn__UMYdS80up8VNSe7sqfz-xjV6QCmWU083avndWm_rtYzILAlqWK2JvELT4B-gPSjX6ezW-Mxb6aHOdWfzQXKClSFW2evAA1RQ3s8jqhRnjvdHj9dmN2FsDrRUKrdtY6xshyrYm6wzK-dtftYvEjiLxE5D4UST_MBIrI_lHkYLDSLyMFBxFooeR_IL7SaqfRokCAQ1-xRuycVltNrmqBgHDqrySrFpvjseqGdTlJS2G_ySVU1s0wOBRP61hh895cX0TmVr04E7O8AYdmnmSJdYl41fLavXXrwAAAP__VtcuyQ==

query T retry
EXPLAIN (DISTSQL)
SELECT k FROM geo_table WHERE geom ~ 'LINESTRING(1.0 1.0, 5.0 5.0)'::geometry::box2d
----
distribution: full
vectorized: true
·
• filter
│ filter: geom ~ 'BOX(1 1,5 5)'
│
└── • index join
    │ table: geo_table@geo_table_pkey
    │
    └── • inverted filter
        │ inverted column: geom_inverted_key
        │ num spans: 30
        │
        └── • scan
              missing stats
              table: geo_table@geom_index
              spans: 30 spans
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUlN9v4jgQx9_vr7Dmpa3kCNsJvcNPXAvoOLWlC0hbaVOh_BhoRIizttlSVezfvkrSHxAtYclDYGY835l8MpNXMN9TkNB_uL_5d3hHznvDyXTy5eaCTPo3_espWZLBeHRLFqhmNghTJF__64_7hb0iP8kZ40yw6nr_3bkGzB002dzzWN0-k_Jq9CB6QCFTMd4FKzQgvwEHCgIeKeRaRWiM0oX7tTw0jDcgGYUky9e2cD9SiJRGkK9gE5siSLhTjspbHlCI0QZJWh7bUlBr-5lkbLBAkO2dKsMeSG9Ldwrx5kLTAtMYgxh1i-2Vgw-K3YLfLMli3ACFa5WuV5mRZElLsEBhkgeFo-XDle9v5rHvbzjz_Q07dgPn1BzuAwmymIgOUfYJtYFDWHgNCzsFyzD7gdpiPEhSixp1i--zeY_3N7kmKiNdLokpKBBjA21l-VTu323fZ4L5PmPHbkAwi09NK2DUaFAYra0kXX6Qi6hx4adw-V8l2du0iIZpqf7N8iW-_G5iDrXm1loTp7T28arc_cYqvyRdUXwCrkYP55xw2ibtizP5ub3HqHm11ty91o5s8xhNrjKDf7TOrFbJ4dtHChgvsPqEGLXWEd5rFZVnK3NUCpWOGI2tou3KGGbvIWM1BquPZdhV4o1K4gQl0ajkHlbidSW3Uck7rCTqSl6jEjus5Bbs56l6niUxSMAOuuwfN3SiUISO5122nTBEdJAJ7nXCecQ7l1AkBAtTDMDkST2XstOXvHh98yA1SOE2WGIPLepVkiXGJtFbZLv961cAAAD__7LSKew=
