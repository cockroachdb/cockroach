# LogicTest: local

statement ok
SET enable_json_path_exists_filter_inverted_index = true;

# Inverted index acceleration for jsonb_path_query.
statement ok
CREATE TABLE json_tab (
  a INT PRIMARY KEY,
  b JSONB
)

statement ok
CREATE INVERTED INDEX foo_inv ON json_tab(b)

statement ok
INSERT INTO json_tab VALUES
  (1, '{"a": "b"}'),
  (2, '[1,2,3,4, "foo"]'),
  (3, '{"a": {"b": "c", "d": "e"}}'),
  (4, '{"a": {"b": [1, 2, 3, 4]}}'),
  (5, '{"a": {}}'),
  (6, '{"a": {"b": {"c": "d"}, "d": "e"}}'),
  (7, '{"a": [{"b": {"x": "y"}}, {"b": "e"}]}'),
  (8, '{"a": [{"b":[]}]}'),
  (9, '{"a": {"b": "c"}}'),
  (10, '{"a": {"d": "e"}}'),
  (11, '{"a": [{"b": [{"x": {"y": {"z": "y"}}}, {"x": {"y": {"z": "yuu"}}}, {"x": {"y": {"z": ["y", "yuu"]}}}, [{"x": "y"}], [[[{"x": "y"}]]], {"xx": [{"zz":"oo"}]}]}, {"b": "e"}]}'),
  (12, '{"a": [{"b": [{"x": {"y": {"ztrue": true}}},  {"x": {"y": {"ztrue": [true, "y1"]}}}]}]}'),
  (13, '{"a": [{"b": [{"x": {"y": {"zfalse": false}}},  {"x": {"y": {"zfalse": [false, "y1"]}}}]}]}'),
  (14, '{"a": [{"b": [{"x": {"y": {"zint": 10}}},  {"x": {"y": {"zint": [10, "y1"]}}}]}]}'),
  (15, '{"a": [{"b": [{"x": {"y": {"znull": null}}},  {"x": {"y": {"znull": [null, "y1"]}}}]}]}'),
  (16, '{"a": [{"b": [{"x": {"y": {"znull": null}}},  {"x": {"y": {"znull": [null, "y1"]}}}]}]}');

query T
EXPLAIN SELECT jsonb_path_query(b, '$.a.b') FROM json_tab WHERE jsonb_path_exists(b, '$.a.b') ORDER BY a;
----
distribution: local
vectorized: true
·
• sort
│ order: +a
│
└── • project set
    │
    └── • filter
        │ filter: jsonb_path_exists(b, '$."a"."b"')
        │
        └── • scan
              missing stats
              table: json_tab@json_tab_pkey
              spans: FULL SCAN

query T
EXPLAIN SELECT jsonb_path_query(b, '$.a.b') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b') ORDER BY a;
----
distribution: local
vectorized: true
·
• sort
│ order: +a
│
└── • project set
    │
    └── • index join
        │ table: json_tab@json_tab_pkey
        │
        └── • inverted filter
            │ inverted column: b_inverted_key
            │ num spans: 2
            │
            └── • scan
                  missing stats
                  table: json_tab@foo_inv
                  spans: 2 spans

query T
EXPLAIN SELECT jsonb_path_query(b, '$.a.b.c') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b.c') ORDER BY a;
----
distribution: local
vectorized: true
·
• sort
│ order: +a
│
└── • project set
    │
    └── • index join
        │ table: json_tab@json_tab_pkey
        │
        └── • inverted filter
            │ inverted column: b_inverted_key
            │ num spans: 4
            │
            └── • scan
                  missing stats
                  table: json_tab@foo_inv
                  spans: 4 spans

query T
EXPLAIN SELECT a, jsonb_path_query(b, '$.a[*].b') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a[*].b') ORDER BY a;
----
distribution: local
vectorized: true
·
• sort
│ order: +a
│
└── • project set
    │
    └── • index join
        │ table: json_tab@json_tab_pkey
        │
        └── • inverted filter
            │ inverted column: b_inverted_key
            │ num spans: 2
            │
            └── • scan
                  missing stats
                  table: json_tab@foo_inv
                  spans: 2 spans

query T
EXPLAIN SELECT a, jsonb_path_query(b, '$.a') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a') ORDER BY a;
----
distribution: local
vectorized: true
·
• sort
│ order: +a
│
└── • project set
    │
    └── • index join
        │ table: json_tab@json_tab_pkey
        │
        └── • inverted filter
            │ inverted column: b_inverted_key
            │ num spans: 1
            │
            └── • scan
                  missing stats
                  table: json_tab@foo_inv
                  spans: 1 span

# If inverted index is not hinted, we would scan the whole table.
query T kvtrace
SELECT jsonb_path_query(b, '$.a.b[*].c') FROM json_tab WHERE jsonb_path_exists(b, '$.a.b[*].c') ORDER BY a;
----
Scan /Table/106/{1-2}

# With inverted index hinted, we only scan the relevant keys. The second
# row of `Scan` are rows that filtered with the inverted index.
query T kvtrace
SELECT jsonb_path_query(b, '$.a.b') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b') ORDER BY a;
----
Scan /Table/106/2/{???-"a"/Arr/Arr/}, /Table/106/2/{???-"a"/Arr/}
Scan /Table/106/1/7/0, /Table/106/1/11/0, /Table/106/1/8/0, /Table/106/1/13/0, /Table/106/1/14/0, /Table/106/1/15/0, /Table/106/1/16/0, /Table/106/1/12/0, /Table/106/1/3/0, /Table/106/1/9/0, /Table/106/1/4/0, /Table/106/1/6/0

query T kvtrace
SELECT jsonb_path_query(b, '$.a[*].b') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a[*].b') ORDER BY a;
----
Scan /Table/106/2/{???-"a"/Arr/Arr/}, /Table/106/2/{???-"a"/Arr/}
Scan /Table/106/1/7/0, /Table/106/1/11/0, /Table/106/1/8/0, /Table/106/1/13/0, /Table/106/1/14/0, /Table/106/1/15/0, /Table/106/1/16/0, /Table/106/1/12/0, /Table/106/1/3/0, /Table/106/1/9/0, /Table/106/1/4/0, /Table/106/1/6/0

query T kvtrace
SELECT jsonb_path_query(b, '$.a[*][*].b') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a[*][*].b') ORDER BY a;
----
Scan /Table/106/2/{???-"a"/Arr/Arr/}, /Table/106/2/{???-"a"/Arr/}
Scan /Table/106/1/7/0, /Table/106/1/11/0, /Table/106/1/8/0, /Table/106/1/13/0, /Table/106/1/14/0, /Table/106/1/15/0, /Table/106/1/16/0, /Table/106/1/12/0, /Table/106/1/3/0, /Table/106/1/9/0, /Table/106/1/4/0, /Table/106/1/6/0

query T kvtrace
SELECT jsonb_path_query(b, '$.a.b[*].c') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b[*].c') ORDER BY a;
----
Scan /Table/106/2/{???-"a"/Arr/"b"/Arr/Arr/}, /Table/106/2/{???-"a"/Arr/"b"/Arr/}, /Table/106/2/{???-"a"/"b"/Arr/Arr/}, /Table/106/2/{???-"a"/"b"/Arr/}
Scan /Table/106/1/6/0

query T kvtrace
SELECT jsonb_path_query(b, '$.a.b ? (@.x.y.z == "y")') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b ? (@.x.y.z == "y")') ORDER BY a;
----
Scan /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/"b"/Arr/"x"/Arr/"y"/Arr/"z"/"y"{-/PrefixEnd} ... /Table/106/2/"a"/"b"/"x"/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/"b"/"x"/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/"b"/"x"/"y"/"z"/Arr/"y"{-/PrefixEnd}
Scan /Table/106/1/11/0

query T kvtrace
SELECT jsonb_path_query(b, '$.a.b ? (@.x.y.ztrue == true)') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b ? (@.x.y.ztrue == true)') ORDER BY a;
----
Scan /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/"b"/Arr/"x"/Arr/"y"/Arr/"ztrue"/{True-False} ... /Table/106/2/"a"/"b"/"x"/"y"/Arr/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/"b"/"x"/"y"/"ztrue"/{True-False}, /Table/106/2/"a"/"b"/"x"/"y"/"ztrue"/Arr/{True-False}
Scan /Table/106/1/12/0

query T kvtrace
SELECT jsonb_path_query(b, '$.a.b ? (@.x.y.zfalse == false)') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b ? (@.x.y.zfalse == false)') ORDER BY a;
----
Scan /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"zfalse"/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"zfalse"/Arr/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"zfalse"/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"zfalse"/Arr/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"zfalse"/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"zfalse"/Arr/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"zfalse"/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"zfalse"/Arr/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"zfalse"/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"zfalse"/Arr/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"zfalse"/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"zfalse"/Arr/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"zfalse"/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"zfalse"/Arr/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"zfalse"/{False-"\f"}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"zfalse"/Arr/{False-"\f"}, /Table/106/2/"a"/"b"/Arr/"x"/Arr/"y"/Arr/"zfalse"/{False-"\f"} ... /Table/106/2/"a"/"b"/"x"/"y"/Arr/"zfalse"/Arr/{False-"\f"}, /Table/106/2/"a"/"b"/"x"/"y"/"zfalse"/{False-"\f"}, /Table/106/2/"a"/"b"/"x"/"y"/"zfalse"/Arr/{False-"\f"}
Scan /Table/106/1/13/0

query T kvtrace
SELECT jsonb_path_query(b, '$.a.b ? (@.x.y.zint == 10)') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b ? (@.x.y.zint == 10)') ORDER BY a;
----
Scan /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"zint"/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"zint"/Arr/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"zint"/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"zint"/Arr/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"zint"/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"zint"/Arr/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"zint"/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"zint"/Arr/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"zint"/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"zint"/Arr/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"zint"/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"zint"/Arr/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"zint"/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"zint"/Arr/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"zint"/1E+1{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"zint"/Arr/1E+1{-/PrefixEnd} ... /Table/106/2/"a"/"b"/"x"/"y"/Arr/"zint"/Arr/1E+1{-/PrefixEnd}, /Table/106/2/"a"/"b"/"x"/"y"/"zint"/1E+1{-/PrefixEnd}, /Table/106/2/"a"/"b"/"x"/"y"/"zint"/Arr/1E+1{-/PrefixEnd}
Scan /Table/106/1/14/0

query T kvtrace
SELECT jsonb_path_query(b, '$.a.b ? (@.x.y.znull == null)') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b ? (@.x.y.znull == null)') ORDER BY a;
----
Scan /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"znull"/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"znull"/Arr/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"znull"/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"znull"/Arr/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"znull"/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"znull"/Arr/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"znull"/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"znull"/Arr/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"znull"/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"znull"/Arr/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"znull"/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"znull"/Arr/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"znull"/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"znull"/Arr/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"znull"/{NULL-!NULL}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"znull"/Arr/{NULL-!NULL}, /Table/106/2/"a"/"b"/Arr/"x"/Arr/"y"/Arr/"znull"/{NULL-!NULL} ... /Table/106/2/"a"/"b"/"x"/"y"/Arr/"znull"/Arr/{NULL-!NULL}, /Table/106/2/"a"/"b"/"x"/"y"/"znull"/{NULL-!NULL}, /Table/106/2/"a"/"b"/"x"/"y"/"znull"/Arr/{NULL-!NULL}
Scan /Table/106/1/15/0, /Table/106/1/16/0

# Multiple jsonb_path_exists in the filter. For all select clause to be
# accelerated by the inverted index, use OR to concatenate the jsonb_path_exists
# filters with the same json path expressions.
query T kvtrace
SELECT a, jsonb_path_query(b, '$.a.b ? (@.x.y.z == "y")'), jsonb_path_query(b, '$.a.b ? (@.x.y.ztrue == true)') FROM json_tab ORDER BY a;
----
Scan /Table/106/{1-2}

query T kvtrace
SELECT a, jsonb_path_query(b, '$.a.b ? (@.x.y.z == "y")'), jsonb_path_query(b, '$.a.b ? (@.x.y.ztrue == true)') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b ? (@.x.y.z == "y")') ORDER BY a;
----
Scan /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/Arr/"y"/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/"x"/"y"/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/"b"/Arr/"x"/Arr/"y"/Arr/"z"/"y"{-/PrefixEnd} ... /Table/106/2/"a"/"b"/"x"/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/"b"/"x"/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/"b"/"x"/"y"/"z"/Arr/"y"{-/PrefixEnd}
Scan /Table/106/1/11/0

query T kvtrace
SELECT a, jsonb_path_query(b, '$.a.b ? (@.x.y.z == "y")'), jsonb_path_query(b, '$.a.b ? (@.x.y.ztrue == true)') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b ? (@.x.y.z == "y")') OR jsonb_path_exists(b, '$.a.b ? (@.x.y.ztrue == true)') ORDER BY a;
----
Scan /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/Arr/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/Arr/"y"/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/Arr/"ztrue"/Arr/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"z"/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"ztrue"/{True-False}, /Table/106/2/"a"/Arr/"b"/Arr/"x"/"y"/"ztrue"/Arr/{True-False} ... /Table/106/2/"a"/"b"/"x"/"y"/"z"/Arr/"y"{-/PrefixEnd}, /Table/106/2/"a"/"b"/"x"/"y"/"ztrue"/{True-False}, /Table/106/2/"a"/"b"/"x"/"y"/"ztrue"/Arr/{True-False}
Scan /Table/106/1/11/0, /Table/106/1/12/0

# Test with concatenation of different json path expressions with AND in the filter.
query T kvtrace
SELECT a, jsonb_path_query(b, '$.a.d') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.d') ORDER BY a;
----
Scan /Table/106/2/{???-"a"/Arr/Arr/}, /Table/106/2/{???-"a"/Arr/}
Scan /Table/106/1/3/0, /Table/106/1/6/0, /Table/106/1/10/0

query T kvtrace
SELECT a, jsonb_path_query(b, '$.a.b') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b') ORDER BY a;
----
Scan /Table/106/2/{???-"a"/Arr/Arr/}, /Table/106/2/{???-"a"/Arr/}
Scan /Table/106/1/7/0, /Table/106/1/11/0, /Table/106/1/8/0, /Table/106/1/13/0, /Table/106/1/14/0, /Table/106/1/15/0, /Table/106/1/16/0, /Table/106/1/12/0, /Table/106/1/3/0, /Table/106/1/9/0, /Table/106/1/4/0, /Table/106/1/6/0

query T kvtrace
SELECT a, jsonb_path_query(b, '$.a.b'), jsonb_path_query(b, '$.a.d') FROM json_tab@foo_inv WHERE jsonb_path_exists(b, '$.a.b') AND jsonb_path_exists(b, '$.a.d') ORDER BY a;
----
Scan /Table/106/2/{???-"a"/Arr/Arr/}, /Table/106/2/{???-"a"/Arr/Arr/}, /Table/106/2/{???-"a"/Arr/}, /Table/106/2/{???-"a"/Arr/}
Scan /Table/106/1/3/0, /Table/106/1/6/0
