# LogicTest: local

statement ok
CREATE TABLE x(a INT)

statement ok
CREATE TABLE y(a INT)

query T
EXPLAIN (VERBOSE)
  WITH t AS (SELECT a FROM y) SELECT * FROM t JOIN t AS q ON true
----
distribution: local
vectorized: true
·
• root
│ columns: (a, a)
│
├── • cross join (inner)
│   │ columns: (a, a)
│   │ estimated row count: 1,000,000 (missing stats)
│   │
│   ├── • scan buffer
│   │     columns: (a)
│   │     estimated row count: 1,000 (missing stats)
│   │     label: buffer 1 (t)
│   │
│   └── • scan buffer
│         columns: (a)
│         estimated row count: 1,000 (missing stats)
│         label: buffer 1 (t)
│
└── • subquery
    │ id: @S1
    │ original sql: SELECT a FROM y
    │ exec mode: all rows
    │
    └── • buffer
        │ columns: (a)
        │ label: buffer 1 (t)
        │
        └── • scan
              columns: (a)
              estimated row count: 1,000 (missing stats)
              table: y@primary
              spans: FULL SCAN

query T
EXPLAIN (VERBOSE)
  WITH t AS (SELECT a FROM y) SELECT * FROM t
----
distribution: local
vectorized: true
·
• render
│ columns: (a)
│ estimated row count: 1,000 (missing stats)
│ render a: a
│
└── • scan
      columns: (a)
      estimated row count: 1,000 (missing stats)
      table: y@primary
      spans: FULL SCAN

query T
EXPLAIN (VERBOSE)
  WITH t AS (INSERT INTO x VALUES (1) RETURNING a) SELECT * FROM t
----
distribution: local
vectorized: true
·
• root
│ columns: (a)
│
├── • scan buffer
│     columns: (a)
│     estimated row count: 1
│     label: buffer 1 (t)
│
└── • subquery
    │ id: @S1
    │ original sql: INSERT INTO x VALUES (1) RETURNING a
    │ exec mode: all rows
    │
    └── • buffer
        │ columns: (a)
        │ label: buffer 1 (t)
        │
        └── • project
            │ columns: (a)
            │ estimated row count: 1
            │
            └── • insert
                │ columns: (a, rowid)
                │ estimated row count: 1
                │ into: x(a, rowid)
                │
                └── • values
                      columns: (column1, column6)
                      size: 2 columns, 1 row
                      row 0, expr 0: 1
                      row 0, expr 1: unique_rowid()

# Regression test for #39010.

statement ok
CREATE TABLE table39010 (col NAME)

query T
EXPLAIN (VERBOSE)
  WITH
    w AS (SELECT NULL, NULL FROM table39010)
  SELECT
    col
  FROM
    w, table39010
----
distribution: local
vectorized: true
·
• cross join (inner)
│ columns: (col)
│ estimated row count: 1,000,000 (missing stats)
│
├── • scan
│     columns: ()
│     estimated row count: 1,000 (missing stats)
│     table: table39010@primary
│     spans: FULL SCAN
│
└── • scan
      columns: (col)
      estimated row count: 1,000 (missing stats)
      table: table39010@primary
      spans: FULL SCAN

query T
EXPLAIN (VERBOSE)
  WITH RECURSIVE t(n) AS (
      VALUES (1)
    UNION ALL
      SELECT n+1 FROM t WHERE n < 100
  )
  SELECT sum(n) FROM t
----
distribution: local
vectorized: true
·
• group (scalar)
│ columns: (sum)
│ estimated row count: 1 (missing stats)
│ aggregate 0: sum(n)
│
└── • render
    │ columns: (n)
    │ estimated row count: 10 (missing stats)
    │ render n: column1
    │
    └── • recursive cte
        │ columns: (column1)
        │ estimated row count: 10 (missing stats)
        │
        └── • values
              columns: (column1)
              size: 1 column, 1 row
              row 0, expr 0: 1
