# LogicTest: 5node

statement ok
CREATE TABLE t (k INT PRIMARY KEY, v INT, w INT, INDEX v(v))

# Split the index into 5 parts, as if numbers were in the range 1 to 100.
statement ok
ALTER INDEX t@v SPLIT AT SELECT (i * 10)::int FROM generate_series(1, 4) AS g(i)

# Relocate the five parts to the five nodes.
statement ok
ALTER INDEX t@v EXPERIMENTAL_RELOCATE
  SELECT ARRAY[i+1], (i * 10)::int FROM generate_series(0, 4) AS g(i)

query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM INDEX t@v WITH DETAILS]
ORDER BY 1
----
start_key           end_key       replicas  lease_holder
<before:/Table/62>  …/10          {1}       1
…/10                …/20          {2}       2
…/20                …/30          {3}       3
…/30                …/40          {4}       4
…/40                <after:/Max>  {5}       5

query T
EXPLAIN (DISTSQL) SELECT * FROM t WHERE v > 10 AND v < 50
----
distribution: local
vectorized: true
·
• filter
│ filter: (v > 10) AND (v < 50)
│
└── • scan
      missing stats
      table: t@t_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkV9vmzAUxd_3Kaz7lExGtVOyNn5q1VANKU27gLRJG6oM3GQoBjPbNKsivvsENP0ntVof7zmXc38c78H-USAg-HGzOA-XZDQPozj6thiTKFgEFzH5TC5X11fEke9fg1VARnfkV8PYMRLOxuR8OX9UMjJlY6BQ6RyXskQL4idwSCjURmdorTadtO8XwvwvCEahqOrGdXJCIdMGQezBFU4hCIhlqnCFMkdzxIBCjk4Wqo91Z-623uI9ULjQqikrK8iWkjtKdkAhqmUneJC0FHTjnk5YJzcIgj9jCucgWEv_H-uyUA4NmiP-kmnQBRmdTZ4qEkKEy_j0oamD01V1cN6EnLyC5B-BXKGtdWXxBeJbl9irSx5vEwqYb3B4MKsbk-GN0Vm_O4zXfVAv5Gjd4PJhCKuDZZ1BWT52_DyJv5s0eS8pobBWendb5CBg5mfH6VROPMn81PNPUu6l_FR6vj87mX3xWcana-g-kBvbVRT91rs-Nr6vux9cS2WRwpXc4hwdmrKoCuuK7MFp20__AgAA__-iCPw-

query T
EXPLAIN (DISTSQL) SELECT * FROM t WHERE v > 10 AND v < 50 ORDER BY v
----
distribution: local
vectorized: true
·
• sort
│ order: +v
│
└── • filter
    │ filter: (v > 10) AND (v < 50)
    │
    └── • scan
          missing stats
          table: t@t_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUklFv2jwYhe-_X2G9V_DNEbZpu-IrupJqkSh0CdI2bagyyRsWEeLMNrAK8d-nJKUtSKD10udY5zw69hbs7xwk-N8ehjfBiLQGQTSJvgzbJPKH_u2E_E_uwvE9ceTrZz_0SWtNfq4Y6yLhrE1uRoMXJSaXrE3G4cAPyafvZA0UCp3gSC3RgvwBHKYUSqNjtFabStrWF4LkD0hGISvKlavkKYVYGwS5BZe5HEHCRM1yDFElaDoMKCToVJbXsa7vHssFPgGFW52vloWVZEHJmpINUIhKVQkeTHcU9Mq9Vlin5giSv2EKBiDZjv471l2WOzRoOvyQqdElafXF61pSymA0uX4ebe9Uq-2dk5DiCJK_BzLSxqHpiEPEvvhwsq57VCfeUxeiLXVh8aDuVBM7avL4bkoBkzk2_8PqlYnxwei4vtscx3VQLSRoXePy5hAUe8s6g2r58qRvk_jZJHE6iR8nibNJ3XNMUwpprjePWQIS2OyCpUp89DgK5l2kVz2v1xMzL2HXadrrzfjVZfV-aa7mtho7-qU3dezkqaymSlVukcK9WuAAHZplVmTWZfGzs9v99zcAAP__eD87hw==

# Here we care about ordering by v, but v is not otherwise used.
query T
EXPLAIN (DISTSQL) SELECT w FROM t WHERE v > 10 AND v < 50 ORDER BY v
----
distribution: local
vectorized: true
·
• sort
│ order: +v
│
└── • filter
    │ filter: (v > 10) AND (v < 50)
    │
    └── • scan
          missing stats
          table: t@t_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUklFv2jAUhd_3K6z7BJoj4jAq8BNdSbVIFLoEaZs2VBn7wqKGOLMdWIX471OS0hYk0Pp4zzHfOTpkB_ZPBhzC7_fj62hCWqMomSVfx22ShOPwZka25Dae3hFHvn0J45C0NuRX6ftdJMxvk-vJ6EWRpOe3yTQehTH5_INsgEKuFU7EGi3wn8BgTqEwWqK12lTSrn4Qqb_AfQppXpSukucUpDYIfAcudRkCh5lYZBijUGg6PlBQ6ESa1Vg3dA_FIz4BhRudlevccrKhZAsUkkJUlwfzPQVdule-dWKFwNmbQtEIuL-n_9_pNs0cGjQddlyo0TlpDdnrVJzzaDLrPy92cKrJDs7ZksFJSfaekok2Dk0nOK44ZB-BwrR0nAyDs8Hdk-DgPcEx2kLnFo-CzyX5J0ke288poFph85lYXRqJ90bL-m1zTmtQLSi0rnFZc0T5wbLOoFi__LlvSewiKThPYqek4CKpe6nTnMIy09uHVAEHqboDIa96nlJMeZ8QF16_L6-8hewtZW_gL7qDAVQ_ECtbjZ381tsaO3sqqqmWIrNI4U484ggdmnWap9al8tnZ7z_8CwAA___HHD63

# The single join reader should be on node 5, and doesn't need to output v.
query T
EXPLAIN (DISTSQL) SELECT w FROM t WHERE v > 40 AND v < 50 ORDER BY v
----
distribution: full
vectorized: true
·
• index join
│ table: t@t_pkey
│
└── • scan
      missing stats
      table: t@v
      spans: [/41 - /49]
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkt9u2jAUxu_3FNa5KpIj7CSgylftmkzLRKFLkLZpQ5UbH1hEiLPYgVUo7z4ldIwiwcrl-fd9v3PsLZhfOQgIvz6MbqMxuQqiZJp8HvVIEo7CuynZkA_x5J5Y8uVjGIfkak1-1Ix5SHzWI7fjYJ9JyYD1yCQOwpi8_0bWQKHQCsdyhQbEd-BAYQAzCmWlUzRGV2162zVF6jcIRiErytq26RmFVFcIYgs2szmCgLF2dNl3gYJCK7O8a2so6Nr-GzJWLhCEd-ASBSDchh4Y8fNGU_mUY4xSYdVnr-zA3rRr3em8XhVGkCXt1kxK2UZ9nzv9QTsxqa0gNxxO4fEjPHYJ3iedFS90_JjOPpZLfD5EXFOy2RO5J4ncIyL-iug_LxOjKXVh8E1Pw46cHN7MKKBa4O47GF1XKT5UOu16d-GkE-oSCo3dVb1dEBV_S8ZWKFf7gx4q8bNK7gVK7lkldlqp23Oe681jpkAA87g_9NnQ4Z7HHV89zZ1rF5XjD_3U9YbXLJ0PoB2QC9MeO_mpN53s9LlsTzWXuUEK93KJAVqsVlmRGZulL5WmefcnAAD__0pXOKM=

statement ok
CREATE TABLE abc (
    a INT,
    b INT,
    c INT,
    INDEX (c, b)
);

query T
EXPLAIN SELECT * FROM abc WHERE b between 1 AND 3 ORDER BY c, b LIMIT 2;
----
distribution: full
vectorized: true
·
• top-k
│ order: +c,+b
│ k: 2
│
└── • filter
    │ filter: (b >= 1) AND (b <= 3)
    │
    └── • scan
          missing stats
          table: abc@abc_pkey
          spans: FULL SCAN

statement ok
SET unconstrained_non_covering_index_scan_enabled = true;

# The cluster setting should allow generation of an unconstrained index scan.
query T
EXPLAIN SELECT * FROM abc WHERE b between 1 AND 3 ORDER BY c, b LIMIT 2;
----
distribution: full
vectorized: true
·
• limit
│ count: 2
│
└── • filter
    │ filter: (b >= 1) AND (b <= 3)
    │
    └── • index join
        │ table: abc@abc_pkey
        │
        └── • scan
              missing stats
              table: abc@abc_c_b_idx
              spans: FULL SCAN (SOFT LIMIT)
