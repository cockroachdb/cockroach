# LogicTest: local

# Use multiple column families.

statement ok
CREATE TABLE t9 (
  a INT PRIMARY KEY,
  b INT,
  c INT,
  d INT,
  e INT,
  FAMILY (a),
  FAMILY (b),
  FAMILY (c),
  FAMILY (d, e),
  CHECK (a > b),
  CHECK (d IS NULL)
)

# Only column families that are needed to validate check constraints are fetched.
query T
EXPLAIN (VERBOSE) UPDATE t9 SET b = b + 1 WHERE a = 5
----
distribution: local
vectorized: true
·
• update
│ columns: ()
│ estimated row count: 0 (missing stats)
│ table: t9
│ set: b
│ auto commit
│
└── • render
    │ columns: (a, b, b_new, check1)
    │ estimated row count: 1 (missing stats)
    │ render 0: a > b_new
    │ render 1: a
    │ render 2: b
    │ render 3: b_new
    │
    └── • render
        │ columns: (b_new, a, b)
        │ estimated row count: 1 (missing stats)
        │ render 0: b + 1
        │ render 1: a
        │ render 2: b
        │
        └── • scan
              columns: (a, b)
              estimated row count: 1 (missing stats)
              table: t9@primary
              spans: /5/0-/5/1/2

query T
EXPLAIN (VERBOSE) UPDATE t9 SET a = 2 WHERE a = 5
----
distribution: local
vectorized: true
·
• update
│ columns: ()
│ estimated row count: 0 (missing stats)
│ table: t9
│ set: a
│ auto commit
│
└── • render
    │ columns: (a, b, c, d, e, a_new, check1)
    │ estimated row count: 1 (missing stats)
    │ render 0: b < 2
    │ render 1: 2
    │ render 2: a
    │ render 3: b
    │ render 4: c
    │ render 5: d
    │ render 6: e
    │
    └── • scan
          columns: (a, b, c, d, e)
          estimated row count: 1 (missing stats)
          table: t9@primary
          spans: /5-/5/#
          locking strength: for update
