# LogicTest: 5node

# TODO(rytaft): When zigzag joins are supported with multicolumn inverted
# indexes, change this test to use a multicolumn inverted index and split
# the index.

subtest json

statement ok
CREATE TABLE json_tab (
  a INT PRIMARY KEY,
  b JSONB,
  FAMILY (a, b)
)

statement ok
CREATE INVERTED INDEX foo_inv ON json_tab(b)

statement ok
INSERT INTO json_tab VALUES
  (1, '{"a": "b"}'),
  (2, '[1,2,3,4, "foo"]'),
  (3, '{"a": {"b": "c"}}'),
  (4, '{"a": {"b": [1]}}'),
  (5, '{"a": {"b": [1, [2]]}}'),
  (6, '{"a": {"b": [[2]]}}'),
  (7, '{"a": "b", "c": "d"}'),
  (8, '{"a": {"b":true}}'),
  (9, '{"a": {"b":false}}'),
  (10, '"a"'),
  (11, 'null'),
  (12, 'true'),
  (13, 'false'),
  (14, '1'),
  (15, '1.23'),
  (16, '[{"a": {"b": [1, [2]]}}, "d"]'),
  (17, '{}'),
  (18, '[]'),
  (19, '["a", "a"]'),
  (20, '[{"a": "a"}, {"a": "a"}]'),
  (21, '[[[["a"]]], [[["a"]]]]'),
  (22, '[1,2,3,1]'),
  (23, '{"a": 123.123}'),
  (24, '{"a": 123.123000}'),
  (25, '{"a": [{}]}'),
  (26, '[[], {}]'),
  (27, '[true, false, null, 1.23, "a"]'),
  (28, '{"a": {}}'),
  (29, NULL),
  (30, '{"a": []}'),
  (31, '{"a": {"b": "c", "d": "e"}, "f": "g"}'),
  (32, '{"a": [1]}'),
  (33, '[1, "bar"]')

statement ok
ANALYZE json_tab

statement ok
ALTER TABLE json_tab SPLIT AT VALUES (10), (20)

statement ok
ALTER TABLE json_tab EXPERIMENTAL_RELOCATE VALUES (ARRAY[1], 1), (ARRAY[2], 10), (ARRAY[3], 20)

query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder
FROM [SHOW RANGES FROM INDEX json_tab@primary WITH DETAILS] ORDER BY lease_holder, start_key
----
start_key           end_key       replicas  lease_holder
<before:/Table/57>  …/10          {1}       1
…/10                …/20          {2}       2
…/20                …/<IndexMax>  {3}       3

query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder
FROM [SHOW RANGES FROM TABLE json_tab WITH DETAILS] ORDER BY lease_holder, start_key
----
start_key           end_key       replicas  lease_holder
<before:/Table/57>  …/1/10        {1}       1
…/2                 <after:/Max>  {1}       1
…/1/10              …/1/20        {2}       2
…/1/20              …/2           {3}       3

# Filter with a fully-specified array. This should not use a zigzag join due
# to distribution costs.
query T
EXPLAIN (DISTSQL)
SELECT a FROM json_tab WHERE b @> '[1, 2]' ORDER BY a
----
distribution: full
vectorized: true
·
• filter
│ estimated row count: 0
│ filter: b @> '[1, 2]'
│
└── • scan
      estimated row count: 33 (100% of the table; stats collected <hidden> ago)
      table: json_tab@json_tab_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJy8k9Fv0zAQxt_5K073MhCuEjtbkfwUtmWiqDQjqQRoRJPbnKZCFgfbkUBV_3eURNsIrFlQBW-5O3_-frrP2aL9VqDE6OPl_PVsAc_PZ-kyfT9_AWk0j86WoOAiid_BF6vLa6dW8OFNlESwgvBz7fsBwdEVZyCyI4iT8yiB00-gkGGpc1qoW7Ior5AjQ4EMA8wYVkavyVptmtG2PTjLv6P0GW7KqnZNO2O41oZQbtFtXEEocalWBSWkcjKejwxzcmpTtNffoYV3H9fVV_qBDM90Ud-WVoJisEKGaaWaauJxH7MdQ127B0Pr1A2h5Ds2HupiUzgyZLygT9T1JYTijzVJKd-m8eJ0L4DYC_Dgq01OhvK-achfYrZ7hHKhJ7rypv3Tce0khHwvRtDD4OPD4YeF43F_4omx-TzBdZ_P8b_KR4xfjDhwMcKfjNzKE1D3Wzn5H6_2EYCEbKVLSz37fTf7zZOm_Ia6X8Dq2qzp0uh1a9OVcatrGzlZ1015V8zKbtQA_irmg2LRE_PfxWJQ_GrYORgUHw-Ljw_BPhkUT4edp3_lnO2e_QwAAP__EgULFQ==

# Combine predicates with AND. Should have the same output as b @> '[1, 2]'.
# This should not use a zigzag join due to distribution costs.
query T
EXPLAIN (DISTSQL)
SELECT a FROM json_tab WHERE b @> '[1]' AND b @> '[2]' ORDER BY a
----
distribution: full
vectorized: true
·
• filter
│ estimated row count: 0
│ filter: (b @> '[1]') AND (b @> '[2]')
│
└── • scan
      estimated row count: 33 (100% of the table; stats collected <hidden> ago)
      table: json_tab@json_tab_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJzEk19vmzAUxd_3Kaz70lRzBDZpJvmJtqFapgw6iLRNHaqccFVlo5jZRtoU5btPwPqHqaFMechb7r0-vr-cg7dgfuYgIPhyvTifh2Q0myfL5NPilCTBIrhcEkmu4ugj-W5UcWvlinx-H8QBGa2I_61yXQ_JyQ1LT07JeTjrdnndjeJZEJOLr0QChUJlGMp7NCBugAEFDhQ8SCmUWq3RGKXr0bY5OM9-gXApbIqysnU7pbBWGkFswW5sjiBgKVc5xigz1I4LFDK0cpM31z_w-g8_bssf-BsoXKq8ui-MIJKSFVBISllXY4e5kO4oqMo-LTRW3iEItqPDoa42uUWN2vG6RG1fkJHPu94JIT4kUXjx18POmD8b78Xje_GeqJTOUGPWRfLZW0h3L_yHUI1V6Uy7p6PKCuKzvRheB4MNj44dFp3D3LHDh6b3CtdjepPjpMeH28YPtI2744GevQL16NnZ8b_4F_BiNKUqDHbg9t3s1s8Bsztsn49RlV7jtVbrZk1bRo2uaWRobDtlbTEv2lEN-FzMesW8I2b_inmv-F3_Zq9XPOkXTw7BPusVT_s3T_9rc7p78ycAAP__7U0mKw==

# Filter with a nested array. This index expression is not tight.
# This should not use a zigzag join due to distribution costs.
query T
EXPLAIN (DISTSQL)
SELECT a FROM json_tab WHERE b @> '[[1, 2]]' ORDER BY a
----
distribution: full
vectorized: true
·
• filter
│ estimated row count: 0
│ filter: b @> '[[1, 2]]'
│
└── • scan
      estimated row count: 33 (100% of the table; stats collected <hidden> ago)
      table: json_tab@json_tab_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJy8k9Fv0zAQxt_5K6x7GQhXiZ2uSH4K2zJRVJqRVAJUosmtT1Mhi4PtSKCq_ztKom0EtWlQxd5yd_78_XSfswX7IwcB0eeb2dvpnLy8mqaL9OPsFUmjWXS5IJJcJ_EH8s3q4tbJFfn0LkoisiLh18r3AyRnyyWjhGfZGYmTqyghF1-IBAqFVjiX92hBLIEBBQ4UAsgolEav0Vpt6tG2OThVP0H4FDZFWbm6nVFYa4MgtuA2LkcQsJCrHBOUCo3nAwWFTm7y5voHuPDh47b8jr-AwqXOq_vCCiIpWQGFtJR1NfKYD9mOgq7ck6F18g5BsB0dDnW9yR0aNF7QJWr7goR8z6KEEO_TeH5xEIEfRHhy1kahQdW1DdlryHZ7OOd6pEtv0j0dV06QkB3ECDoYbHg87LR4POaPPD40oSNcjwmN_19CfPhq-Imr4f5o4F6OQD3u5fx5Xu4ehARtqQuLHYBDN_v1s0Z1h-1vYHVl1nhj9Lqxacu40TUNhda1U9YW06Id1YB_ilmvmHfE7G8x7xW_6XcOesXjfvH4FOzzXvGk33nyT87Z7sXvAAAA__-LJA31

subtest array

statement ok
CREATE TABLE array_tab (
  a INT PRIMARY KEY,
  b INT[],
  FAMILY (a, b)
)

statement ok
CREATE INVERTED INDEX foo_inv ON array_tab(b)

statement ok
INSERT INTO array_tab VALUES
  (1, '{}'),
  (2, '{1}'),
  (3, '{1, 2}'),
  (4, '{1, 3}'),
  (5, '{1, 2, 3, 4}')

statement ok
ANALYZE array_tab

statement ok
ALTER TABLE array_tab SPLIT AT VALUES (3), (3)

statement ok
ALTER TABLE array_tab EXPERIMENTAL_RELOCATE VALUES (ARRAY[1], 1), (ARRAY[2], 3), (ARRAY[3], 5)

query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder
FROM [SHOW RANGES FROM INDEX array_tab@primary WITH DETAILS] ORDER BY lease_holder, start_key
----
start_key              end_key       replicas  lease_holder
<before:/Table/106/2>  …/3           {1}       1
…/3                    …/<IndexMax>  {3}       3

query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder
FROM [SHOW RANGES FROM TABLE array_tab WITH DETAILS] ORDER BY lease_holder
----
start_key              end_key       replicas  lease_holder
<before:/Table/106/2>  …/1/3         {1}       1
…/2                    <after:/Max>  {1}       1
…/1/3                  …/2           {3}       3

# This should use a zigzag join.
query T
EXPLAIN (DISTSQL)
SELECT a FROM array_tab@foo_inv WHERE b @> '{1, 2}' ORDER BY a
----
distribution: local
vectorized: true
·
• sort
│ estimated row count: 0
│ order: +a
│
└── • lookup join
    │ estimated row count: 0
    │ table: array_tab@array_tab_pkey
    │ equality: (a) = (a)
    │ equality cols are key
    │
    └── • zigzag join
          estimated row count: 0
          left table: array_tab@foo_inv
          left columns: (a, b_inverted_key)
          left fixed values: 1 column
          right table: array_tab@foo_inv
          right columns: (a, b_inverted_key)
          right fixed values: 1 column
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUkl1v0zAUhu_5FUfnZiAsNU7vfBXYgigq60gm8RlVbnKIzDKfYDuIEeW_oyQSXZlabXc-H8_rx5J79D8bVJh-ulq_Wl3C84tVfp1_WL-APF2n59eg4U22eQ_aOX23DXqXfGfeGvsLPr5NsxR2kHzromhJcNZLAfFwBpvsIs3g9WfQKNByRZf6ljyqryixENg6Lsl7dmOrnxZW1W9UkUBj2y6M7UJgyY5Q9RhMaAgVfjH1H12_Y2PJLSIUWFHQpplyc1MRROqhJAo856a7tV6BFrBDMe_Kx-1uuqAgWWIxCOQu7OV80DWhkoN4_ANG9Yx0RW4hD_X3Kv9O2_aG7lDgmvmma-EHGwtsFSTyvubeUR51jJ_imLML5BbxoV8iXx6NXz4lPiPfsvV0EH8sORoKgVTVNP8Tz50r6cpxOV0zl5uJmxoV-TBP5Vys7DwaBe_D8iQcn4bjk_DyP7gYnv0NAAD___D1GIU=
