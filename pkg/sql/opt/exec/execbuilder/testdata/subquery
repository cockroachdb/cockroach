# LogicTest: local

# ------------------------------------------------------------------------------
# Uncorrelated subqueries.
# ------------------------------------------------------------------------------
statement ok
CREATE TABLE abc (a INT PRIMARY KEY, b INT, c INT)

query TTT
EXPLAIN ALTER TABLE abc SPLIT AT VALUES ((SELECT 42))
----
·                 distribution  local
·                 vectorized    false
root              ·             ·
 ├── split        ·             ·
 │    └── values  ·             ·
 │                size          1 column, 1 row
 └── subquery     ·             ·
      │           id            @S1
      │           original sql  (SELECT 42)
      │           exec mode     one row
      └── values  ·             ·
·                 size          1 column, 1 row

statement ok
ALTER TABLE abc SPLIT AT VALUES ((SELECT 1))

query TTT
EXPLAIN SELECT EXISTS (SELECT a FROM abc)
----
·               distribution  local
·               vectorized    false
root            ·             ·
 ├── values     ·             ·
 │              size          1 column, 1 row
 └── subquery   ·             ·
      │         id            @S1
      │         original sql  EXISTS (SELECT a FROM abc)
      │         exec mode     exists
      └── scan  ·             ·
·               table         abc@primary
·               spans         LIMITED SCAN
·               limit         1

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM abc WHERE a = (SELECT max(a) FROM abc WHERE EXISTS(SELECT * FROM abc WHERE c=a+3))
----
·                            distribution  local                                                                        ·               ·
·                            vectorized    true                                                                         ·               ·
root                         ·             ·                                                                            (a, b, c)       ·
 ├── scan                    ·             ·                                                                            (a, b, c)       ·
 │                           table         abc@primary                                                                  ·               ·
 │                           spans         FULL SCAN                                                                    ·               ·
 │                           filter        a = @S2                                                                      ·               ·
 ├── subquery                ·             ·                                                                            ·               ·
 │    │                      id            @S1                                                                          ·               ·
 │    │                      original sql  EXISTS (SELECT * FROM abc WHERE c = (a + 3))                                 ·               ·
 │    │                      exec mode     exists                                                                       ·               ·
 │    └── limit              ·             ·                                                                            (a, b, c)       ·
 │         │                 count         1                                                                            ·               ·
 │         └── scan          ·             ·                                                                            (a, b, c)       ·
 │                           table         abc@primary                                                                  ·               ·
 │                           spans         FULL SCAN                                                                    ·               ·
 │                           filter        c = (a + 3)                                                                  ·               ·
 └── subquery                ·             ·                                                                            ·               ·
      │                      id            @S2                                                                          ·               ·
      │                      original sql  (SELECT max(a) FROM abc WHERE EXISTS (SELECT * FROM abc WHERE c = (a + 3)))  ·               ·
      │                      exec mode     one row                                                                      ·               ·
      └── group              ·             ·                                                                            (any_not_null)  ·
           │                 aggregate 0   any_not_null(a)                                                              ·               ·
           │                 scalar        ·                                                                            ·               ·
           └── limit         ·             ·                                                                            (a)             -a
                │            count         1                                                                            ·               ·
                └── revscan  ·             ·                                                                            (a)             -a
·                            table         abc@primary                                                                  ·               ·
·                            spans         FULL SCAN                                                                    ·               ·
·                            filter        @S1                                                                          ·               ·

# IN expression transformed into semi-join.
query TTTTT
EXPLAIN (VERBOSE) SELECT a FROM abc WHERE a IN (SELECT a FROM abc)
----
·           distribution        local        ·    ·
·           vectorized          true         ·    ·
merge-join  ·                   ·            (a)  ·
 │          type                semi         ·    ·
 │          equality            (a) = (a)    ·    ·
 │          left cols are key   ·            ·    ·
 │          right cols are key  ·            ·    ·
 │          mergeJoinOrder      +"(a=a)"     ·    ·
 ├── scan   ·                   ·            (a)  +a
 │          table               abc@primary  ·    ·
 │          spans               FULL SCAN    ·    ·
 └── scan   ·                   ·            (a)  +a
·           table               abc@primary  ·    ·
·           spans               FULL SCAN    ·    ·

query TTT
EXPLAIN SELECT * FROM (SELECT * FROM (VALUES (1, 8, 8), (3, 1, 1), (2, 4, 4)) AS moo (moo1, moo2, moo3) ORDER BY moo2) as foo (foo1) ORDER BY foo1
----
·            distribution  local
·            vectorized    false
sort         ·             ·
 │           order         +foo1
 └── values  ·             ·
·            size          3 columns, 3 rows

# the subquery's plan must be visible in EXPLAIN
query TTT
EXPLAIN VALUES (1), ((SELECT 2))
----
·                 distribution  local
·                 vectorized    false
root              ·             ·
 ├── values       ·             ·
 │                size          1 column, 2 rows
 └── subquery     ·             ·
      │           id            @S1
      │           original sql  (SELECT 2)
      │           exec mode     one row
      └── values  ·             ·
·                 size          1 column, 1 row

# This test checks that the double sub-query plan expansion caused by a
# sub-expression being shared by two or more plan nodes does not
# error out.
statement ok
CREATE TABLE tab4(col0 INTEGER, col1 FLOAT, col3 INTEGER, col4 FLOAT)

statement ok
CREATE INDEX idx_tab4_0 ON tab4 (col4,col0)

query TTTTT
EXPLAIN (VERBOSE)
SELECT col0
FROM tab4
WHERE
    (col0 <= 0 AND col4 <= 5.38)
    OR (col4 IN (SELECT col1 FROM tab4 WHERE col1 > 8.27))
    AND (col3 <= 5 AND (col3 BETWEEN 7 AND 9))
----
·                distribution  local            ·                                  ·
·                vectorized    true             ·                                  ·
render           ·             ·                (col0)                             ·
 │               render 0      col0             ·                                  ·
 └── index-join  ·             ·                (col0, col3, col4, rowid[hidden])  ·
      │          table         tab4@primary     ·                                  ·
      │          key columns   rowid            ·                                  ·
      └── scan   ·             ·                (col0, col4, rowid[hidden])        ·
·                table         tab4@idx_tab4_0  ·                                  ·
·                spans         /!NULL-/5.38/1   ·                                  ·
·                filter        col0 <= 0        ·                                  ·

# ------------------------------------------------------------------------------
# Correlated subqueries.
# ------------------------------------------------------------------------------
statement ok
CREATE TABLE a (x INT PRIMARY KEY, y INT);
CREATE TABLE b (x INT PRIMARY KEY, z INT);

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a WHERE EXISTS(SELECT * FROM b WHERE a.x=b.x)
----
·           distribution        local      ·       ·
·           vectorized          true       ·       ·
merge-join  ·                   ·          (x, y)  ·
 │          type                semi       ·       ·
 │          equality            (x) = (x)  ·       ·
 │          left cols are key   ·          ·       ·
 │          right cols are key  ·          ·       ·
 │          mergeJoinOrder      +"(x=x)"   ·       ·
 ├── scan   ·                   ·          (x, y)  +x
 │          table               a@primary  ·       ·
 │          spans               FULL SCAN  ·       ·
 └── scan   ·                   ·          (x)     +x
·           table               b@primary  ·       ·
·           spans               FULL SCAN  ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a WHERE EXISTS(SELECT * FROM b WHERE b.x-1 = a.x)
----
·               distribution       local            ·          ·
·               vectorized         true             ·          ·
hash-join       ·                  ·                (x, y)     ·
 │              type               semi             ·          ·
 │              equality           (x) = (column5)  ·          ·
 │              left cols are key  ·                ·          ·
 ├── scan       ·                  ·                (x, y)     ·
 │              table              a@primary        ·          ·
 │              spans              FULL SCAN        ·          ·
 └── render     ·                  ·                (column5)  ·
      │         render 0           x - 1            ·          ·
      └── scan  ·                  ·                (x)        ·
·               table              b@primary        ·          ·
·               spans              FULL SCAN        ·          ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM a WHERE NOT EXISTS(SELECT * FROM b WHERE b.x = a.x)
----
·           distribution        local      ·       ·
·           vectorized          true       ·       ·
merge-join  ·                   ·          (x, y)  ·
 │          type                anti       ·       ·
 │          equality            (x) = (x)  ·       ·
 │          left cols are key   ·          ·       ·
 │          right cols are key  ·          ·       ·
 │          mergeJoinOrder      +"(x=x)"   ·       ·
 ├── scan   ·                   ·          (x, y)  +x
 │          table               a@primary  ·       ·
 │          spans               FULL SCAN  ·       ·
 └── scan   ·                   ·          (x)     +x
·           table               b@primary  ·       ·
·           spans               FULL SCAN  ·       ·

query TTTTT
EXPLAIN (VERBOSE) SELECT * FROM b WHERE NOT EXISTS(SELECT * FROM a WHERE x-1 = b.x)
----
·               distribution       local            ·          ·
·               vectorized         true             ·          ·
hash-join       ·                  ·                (x, z)     ·
 │              type               anti             ·          ·
 │              equality           (x) = (column5)  ·          ·
 │              left cols are key  ·                ·          ·
 ├── scan       ·                  ·                (x, z)     ·
 │              table              b@primary        ·          ·
 │              spans              FULL SCAN        ·          ·
 └── render     ·                  ·                (column5)  ·
      │         render 0           x - 1            ·          ·
      └── scan  ·                  ·                (x)        ·
·               table              a@primary        ·          ·
·               spans              FULL SCAN        ·          ·

query TTTTT
EXPLAIN (VERBOSE) SELECT ARRAY(SELECT x FROM b)
----
·               distribution   local              ·          ·
·               vectorized     false              ·          ·
root            ·              ·                  ("array")  ·
 ├── values     ·              ·                  ("array")  ·
 │              size           1 column, 1 row    ·          ·
 │              row 0, expr 0  ARRAY @S1          ·          ·
 └── subquery   ·              ·                  ·          ·
      │         id             @S1                ·          ·
      │         original sql   (SELECT x FROM b)  ·          ·
      │         exec mode      all rows           ·          ·
      └── scan  ·              ·                  (x)        ·
·               table          b@primary          ·          ·
·               spans          FULL SCAN          ·          ·

# Case where the plan has an apply join.
query TTTTT
EXPLAIN(verbose) SELECT * FROM abc WHERE EXISTS(SELECT * FROM (VALUES (a), (b)) WHERE column1=a)
----
·           distribution  local        ·          ·
·           vectorized    false        ·          ·
apply-join  ·             ·            (a, b, c)  ·
 │          type          semi         ·          ·
 │          pred          column1 = a  ·          ·
 └── scan   ·             ·            (a, b, c)  ·
·           table         abc@primary  ·          ·
·           spans         FULL SCAN    ·          ·
