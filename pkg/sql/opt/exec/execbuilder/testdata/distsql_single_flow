# LogicTest: 5node

statement ok
SET CLUSTER SETTING sql.stats.automatic_collection.enabled = false

statement ok
CREATE TABLE t (a INT PRIMARY KEY, b INT, c INT)

# Move the single range to a remote node.
statement ok
ALTER TABLE t EXPERIMENTAL_RELOCATE VALUES (ARRAY[2], 2);

# There are no stats on the table, so the single flow should stay on the remote
# node.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
│
├ Node 1
│ └ *colrpc.Inbox
└ Node 2
  └ *colrpc.Outbox
    └ *colexecjoin.hashJoiner
      ├ *colfetcher.ColBatchScan
      └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
distribution: full
vectorized: true
·
• hash join
│ equality: (a) = (b)
│ left cols are key
│
├── • scan
│     missing stats
│     table: t@primary
│     spans: FULL SCAN
│
└── • scan
      missing stats
      table: t@primary
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkt9r2zAQx9_3V4h7Ssa1seRsD4KCyuZRjyzp7MAGIw-qdUsNruVJMmyE_O_D9qC1WdL9eJPu7nPf7x13AP-tAgnJ59vVdbpms7dpvs0_ruYsT1bJmy17yd5lmw8ssOucBY6_HoJ9ukmyhAV-qdkVC-LyDhBqa2itH8iD_AIcEATsEBpnC_Leui586ItS8x1khFDWTRu68A6hsI5AHiCUoSKQsLYXtlnEgGAo6LLqy44Itg2PkA96TyCXR3zSmJ9vvNV3FWWkDblFNGoPQTWufNDuByDkja69ZBdwSpT_qyj_D1FxUvRRq62tM-TITHf3fMlvnN9of__eljW5hRgbr-hrmCk-v3Ll_j7MlJgDwqYNkimOSqCKUS1RvUL1-uQ88WieZ04iI9_Y2tMf3UTUDUNmT8NyvG1dQbfOFr3M8N30XB8w5MOQXQ6ftB5SncGnMD8LxyOYT2HxF7CYwvFZOJrY3h1f_AwAAP__UoE-6Q==

# Inject stats so that column 'b' has few unique values whereas column 'c' has
# many unique values.
statement ok
ALTER TABLE t INJECT STATISTICS '[
  {
    "columns": ["a"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 10000
  },
  {
    "columns": ["b"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 3
  },
  {
    "columns": ["c"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 100
  }
]'

# Now check that the single flow with a join is moved to the gateway.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
│
└ Node 1
  └ *colexecjoin.hashJoiner
    ├ *colfetcher.ColBatchScan
    └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
distribution: local
vectorized: true
·
• hash join
│ estimated row count: 10,000
│ equality: (a) = (b)
│ left cols are key
│
├── • scan
│     estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
│     table: t@primary
│     spans: FULL SCAN
│
└── • scan
      estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
      table: t@primary
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkd-r2jAUx9_3V4TzpCPTJm57CAiRrcMOp64VNhh9iM2ZFmrTJSlsSP_30faCV9F78d63nB-f8z3fkyO4PwUICH-uF7NoSQafo2STfF8MSRIuwk8b8pZ8iVffiCezhHhGHx6c_JiHcUg8GykyJZ6PtkChNBqX6oAOxC9gkFKorMnQOWPb1LFriPRfEAGFvKxq36ZTCpmxCOIIPvcFgoCN2hYYo9JoxwFQ0OhVXnRjvaxsflD2H1BIKlU6Qd5B2lAwtT8NdF7tEARr6MtE2StE-U3Rk1ZdGqvRoj7TSVvyuZYrm8-V2381eYl2zM8XL_C3H0g2nNp8t_cDyYdAYVV7QSSjklM5ofI9lR-o_HjTz-SeI8boKlM6vPR1dXLQmkG9w_44ztQ2w7U1WSfTh6uO6xIane-rvA-isit1v_wYZnfA_BLmT8KTMzho0ubN_wAAAP__9MUM1w==


# If we add a not very selective filter, the flow is still moved to the gateway.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.b = 1 AND t1.a = t2.a
----
│
└ Node 1
  └ *colexecjoin.mergeJoinInnerOp
    ├ *colexecsel.selEQInt64Int64ConstOp
    │ └ *colfetcher.ColBatchScan
    └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.b = 1 AND t1.a = t2.a
----
distribution: local
vectorized: true
·
• merge join
│ estimated row count: 3,333
│ equality: (a) = (a)
│ left cols are key
│ right cols are key
│
├── • filter
│   │ estimated row count: 3,333
│   │ filter: b = 1
│   │
│   └── • scan
│         estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
│         table: t@primary
│         spans: FULL SCAN
│
└── • scan
      estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
      table: t@primary
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkFFr2zAQx9_3KY57SjatieRsDEFAYXWZR5p0cWCD4Qc1umUG1_IkGTZCvvuwPWhtmmxhb7qTfve7vw7ofxQoMf5yt1wkKxhdJ-k2_bQcQxov4_dbeAk3m_UtBFikEDj7cxDw-UO8iWEU-NU9zIGPYbG6bksNcwjiSo-RYWkNrfQDeZRfkWPGsHJ2R95b17QO7YPE_EQ5ZZiXVR2adsZwZx2hPGDIQ0EocavvC9qQNuQmU2RoKOi8aMcGVbn8QbtfyDCtdOklvMbsyNDW4XGgD3pPKPmR_bv0Ji8COXIT3jd2fQlKNMmllMlq--6kUlyifJpT_EfO6KT00VWX1hlyZHqerCH_9uSZzW_J7emjzUtyk6i_eUHfwkjxV-O5y_ffuyMyXNdBguJMCaYipmZMvWHq7clIs0v-cUO-sqWnYbRnJ0-bPGT21P2Pt7Xb0Z2zu1bTleuWaxuGfOhueVckZXfVLPgU5mfhqAfzISwugMUQjs7Cs8Ha2fHF7wAAAP__f31KBg==

# However, if we add a selective filter, the flow is kept on the remote node.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1 INNER MERGE JOIN t AS t2 ON t1.a = t2.a WHERE t1.c = 1
----
│
├ Node 1
│ └ *colrpc.Inbox
└ Node 2
  └ *colrpc.Outbox
    └ *colexecjoin.mergeJoinInnerOp
      ├ *colexecsel.selEQInt64Int64ConstOp
      │ └ *colfetcher.ColBatchScan
      └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1 INNER MERGE JOIN t AS t2 ON t1.a = t2.a WHERE t1.c = 1
----
distribution: full
vectorized: true
·
• merge join
│ estimated row count: 100
│ equality: (a) = (a)
│ left cols are key
│ right cols are key
│
├── • filter
│   │ estimated row count: 100
│   │ filter: c = 1
│   │
│   └── • scan
│         estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
│         table: t@primary
│         spans: FULL SCAN
│
└── • scan
      estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
      table: t@primary
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykktFv0zAQxt_5K073tIG31kmKkKVKniCDTG0ykkogoT6Y5CiRsjjYjgSq-r-jJEhbKpox9hZ_d7_77nO8R_ujQoHh59vVVRTD2bso22QfV-eQhavw7QZewnWarMHBVQaOQxTHYQrrMH0fwk0SxX8KHiQxOH6pYAnOu1Tw6UOYhp2SwxI4Mqx1QbG6I4viC3aCh1uGjdE5WatNJ-_7pqj4iWLOsKyb1nXylmGuDaHYoytdRSgw1he6mQXIsCCnyqpvOzDUrbuHrFM7QrE4sAeD-fTgjfpaUUqqIDObj8ajk40p75T5hQyzRtVWwAWeMuVPMb0uK0eGzIyPHQddgPS7OxRCRPHmzUlL739zes_I6Z80vfdqa20KMlQc_67HW_6y-ZrMjm50WZOZ-ePNK_rmziR_db405e778IkMk9YJkJxJj0mfyYDJBZOvT0YKRpEeeYgp2UbXlv7pJc67PFTsaLgfq1uT063ReW8zHJOe64WCrBuqi-EQ1UOpW_AhzCdhbxr2JuFgBPNj2H8C7B3DwSQ8P1p7e3jxOwAA__9d9n-X
