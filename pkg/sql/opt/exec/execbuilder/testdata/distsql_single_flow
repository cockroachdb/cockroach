# LogicTest: 5node

statement ok
SET CLUSTER SETTING sql.stats.automatic_collection.enabled = false

statement ok
CREATE TABLE t (a INT PRIMARY KEY, b INT, c INT)

# Move the single range to a remote node.
statement ok
ALTER TABLE t EXPERIMENTAL_RELOCATE VALUES (ARRAY[2], 2);

# There are no stats on the table, so the single flow should stay on the remote
# node.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
│
├ Node 1
│ └ *colrpc.Inbox
└ Node 2
  └ *colrpc.Outbox
    └ *colexecjoin.hashJoiner
      ├ *colfetcher.ColBatchScan
      └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
distribution: full
vectorized: true
·
• hash join
│ equality: (a) = (b)
│ left cols are key
│
├── • scan
│     missing stats
│     table: t@t_pkey
│     spans: FULL SCAN
│
└── • scan
      missing stats
      table: t@t_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkt9r2zAQx9_3V4h7Ssa1seRsD4KCyuZRjyzp7MAGIw-qdUsNruVJMmyE_O_D9qC1WdL9eJPu7nPf7x13AP-tAgnJ59vVdbpms7dpvs0_ruYsT1bJmy17yd5lmw8ssOucBY6_HoJ9ukmyhAV-qdkVC-LyDhBqa2itH8iD_AIcEATsEBpnC_Leui586ItS8x1khFDWTRu68A6hsI5AHiCUoSKQsLYXtlnEgGAo6LLqy44Itg2PkA96TyCXR3zSmJ9vvNV3FWWkDblFNGoPQTWufNDuByDkja69ZBdwSpT_qyj_D1FxUvRRq62tM-TITHf3fMlvnN9of__eljW5hRgbr-hrmCk-v3Ll_j7MlJgDwqYNkimOSqCKUS1RvUL1-uQ88WieZ04iI9_Y2tMf3UTUDUNmT8NyvG1dQbfOFr3M8N30XB8w5MOQXQ6ftB5SncGnMD8LxyOYT2HxF7CYwvFZOJrY3h1f_AwAAP__UoE-6Q==

# Inject stats so that column 'b' has few unique values whereas column 'c' has
# many unique values.
statement ok
ALTER TABLE t INJECT STATISTICS '[
  {
    "columns": ["a"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 10000
  },
  {
    "columns": ["b"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 3
  },
  {
    "columns": ["c"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 100
  }
]'

# Now check that the single flow with a join is moved to the gateway.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
│
└ Node 1
  └ *colexecjoin.hashJoiner
    ├ *colfetcher.ColBatchScan
    └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
distribution: local
vectorized: true
·
• hash join
│ estimated row count: 10,000
│ equality: (a) = (b)
│ left cols are key
│
├── • scan
│     estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
│     table: t@t_pkey
│     spans: FULL SCAN
│
└── • scan
      estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
      table: t@t_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkd-r2jAUx9_3V4TzpCPTJm57CAiRrcMOp64VNhh9iM2ZFmrTJSlsSP_30faCV9F78d63nB-f8z3fkyO4PwUICH-uF7NoSQafo2STfF8MSRIuwk8b8pZ8iVffiCezhHhGHx6c_JiHcUg8GykyJZ6PtkChNBqX6oAOxC9gkFKorMnQOWPb1LFriPRfEAGFvKxq36ZTCpmxCOIIPvcFgoCN2hYYo9JoxwFQ0OhVXnRjvaxsflD2H1BIKlU6Qd5B2lAwtT8NdF7tEARr6MtE2StE-U3Rk1ZdGqvRoj7TSVvyuZYrm8-V2381eYl2zM8XL_C3H0g2nNp8t_cDyYdAYVV7QSSjklM5ofI9lR-o_HjTz-SeI8boKlM6vPR1dXLQmkG9w_44ztQ2w7U1WSfTh6uO6xIane-rvA-isit1v_wYZnfA_BLmT8KTMzho0ubN_wAAAP__9MUM1w==


# If we add a not very selective filter, the flow is still moved to the gateway.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.b = 1 AND t1.a = t2.a
----
│
├ Node 1
│ └ *colrpc.Inbox
└ Node 2
  └ *colrpc.Outbox
    └ *colexecjoin.mergeJoinInnerOp
      ├ *colfetcher.ColBatchScan
      └ *colexecsel.selEQInt64Int64ConstOp
        └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.b = 1 AND t1.a = t2.a
----
distribution: full
vectorized: true
·
• merge join
│ estimated row count: 3,333
│ equality: (a) = (a)
│ left cols are key
│ right cols are key
│
├── • scan
│     estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
│     table: t@t_pkey
│     spans: FULL SCAN
│
└── • filter
    │ estimated row count: 3,333
    │ filter: b = 1
    │
    └── • scan
          estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
          table: t@t_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykklFr2zAQgN_3K457Sja1iWRnDEFAYXWZR-p0cWCDkQc1vmUG1_IkGTZC_vuwPWgdFndd33yn--67s3RA96NAidGX2-UiTmB0Faeb9NNyDGm0jN5v4DVcr1c34GGRgufsz4eAzx-idQQjzy_vYA58DIvkqg01zMGLSz1GhqXJKNH35FB-RY4MBW4ZVtbsyDljm_ShLYqznyinDPOyqn2T3jLcGUsoD-hzXxBKTMyFqSYhMszI67xoy44MTe0fIOf1nlDOjuxRYz7ceKPvClqTzshOpr326FVl83ttfyHDtNKlk3CB56T8f6X8BVLxHOl1XniyZCeib-zyEpRo7lJKGSebd2eVwVnlg6kujc3IUnZ6XU-X_GXuG7J7-mjykuwk6I9e0Dc_UvzNeG7z_ffuExmuai9BhUzNmHrLFGdKMBWcXSnsrfTEQ1yTq0zp6J9e4rTZh7I9df_Hmdru6NaaXavpwlXLtYmMnO9OZ10Ql91RM-BjmA_CYQ_mp7AYhINhc_AMsziFw0F4emLeHl_9DgAA___4BXwe

# However, if we add a selective filter, the flow is kept on the remote node.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1 INNER MERGE JOIN t AS t2 ON t1.a = t2.a WHERE t1.c = 1
----
│
├ Node 1
│ └ *colrpc.Inbox
└ Node 2
  └ *colrpc.Outbox
    └ *colexecjoin.mergeJoinInnerOp
      ├ *colfetcher.ColBatchScan
      └ *colexecsel.selEQInt64Int64ConstOp
        └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1 INNER MERGE JOIN t AS t2 ON t1.a = t2.a WHERE t1.c = 1
----
distribution: full
vectorized: true
·
• merge join
│ estimated row count: 100
│ equality: (a) = (a)
│ left cols are key
│ right cols are key
│
├── • scan
│     estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
│     table: t@t_pkey
│     spans: FULL SCAN
│
└── • filter
    │ estimated row count: 100
    │ filter: c = 1
    │
    └── • scan
          estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
          table: t@t_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykklFr1EAQx9_9FMM8tbrt3SY5kYWDLZpqyl1SkwMFuYc1Gc9Amo27G1CO--6SRGhzeKm1b9n_zH9-M5nZo_1RocDw8-3qKorh7F2UbbKPq3PIwlX4dgMv4TpN1uDgKgPHIYrjMIV1mL4P4SaJ4j8BD5IYHL9UsATnXSr49CFMw07JYQkcGda6oFjdkUXxBTvBwy3DxuicrNWmk_d9UlT8RDFnWNZN6zp5yzDXhlDs0ZWuIhQY6wvdzAJkWJBTZdWnHRjq1t2brFM7QrE4sAeF-XThjfpaUUqqIDObj8qjk40p75T5hQyzRtVWwAWegvL_hfJnQL2nQK_LypEhM_PGxEEXIP1ucUKIKN68OYn0TyLvSW2tTUGGiuN1PZ7yl77XZHZ0o8uazMwft17RN3cm-avzpSl334dPZJi0ToAMmFww-ZpJzqTHpH9ypGA00iOHmJJtdG3pny5x3s1DxY6G_2N1a3K6NTrvMcMz6X29UJB1Q3QxPKJ6CHUNPjTzSXMwMvNjszdp9qfJ_hPI3rE5mDTPj8jbw4vfAQAA___9Rn-Y
