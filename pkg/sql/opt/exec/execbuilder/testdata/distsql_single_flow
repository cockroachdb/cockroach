# LogicTest: 5node

statement ok
SET CLUSTER SETTING sql.stats.automatic_collection.enabled = false

statement ok
CREATE TABLE t (a INT PRIMARY KEY, b INT, c INT)

# Move the single range to a remote node.
statement ok
ALTER TABLE t EXPERIMENTAL_RELOCATE VALUES (ARRAY[2], 2);

# There are no stats on the table, so the single flow should stay on the remote
# node.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
│
├ Node 1
│ └ *colrpc.Inbox
└ Node 2
  └ *colrpc.Outbox
    └ *colexecjoin.hashJoiner
      ├ *colfetcher.ColBatchScan
      └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
distribution: full
vectorized: true
·
• hash join
│ equality: (a) = (b)
│ left cols are key
│
├── • scan
│     missing stats
│     table: t@t_pkey
│     spans: FULL SCAN
│
└── • scan
      missing stats
      table: t@t_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJysktFr2zAQxt_3V4h7Ssa1ieRsD4KCSufRjCzp7MAGIw-KdUsNjuVJMmyE_O_D9qC1WZJt9E36dL_T9x13AP-9AAnxl4fF7XzJRu_m6Tr9tBizNF7Ed2v2mr1PVh9ZYLcpCxx_HwT7fB8nMQv8WrMbFsT1FhBKa2ip9-RBfgUOCAI2CJWzGXlvXSMf2qK5-QFyipCXVR0aeYOQWUcgDxDyUBBIWNorW00iQDAUdF60ZUcEW4cnyAe9I5CzIz5rzM83XuttQQlpQ24y7bWHoCqX77X7CQh3tqj3pZdMI9siywAhrXQjXMEpH_x_ffCX9SFO-nj6vi6tM-TIDCd8ueQPYe61f_xg85LcRPSzFPQtjBQf37h89xhGSowBYVUHyRRHJVBFqGao3qB6ezJP1MtzYXES8pUtPf3V5kybMGR21A3H29pl9OBs1n7TXVct1wqGfOheZ91lXnZPjcHnMD8LRz2YD2HxD7AYwtFZeDqwvTm--hUAAP__Q89Juw==

# Inject stats so that column 'b' has few unique values whereas column 'c' has
# many unique values.
statement ok
ALTER TABLE t INJECT STATISTICS '[
  {
    "columns": ["a"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 10000
  },
  {
    "columns": ["b"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 3
  },
  {
    "columns": ["c"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 100
  }
]'

# Now check that the single flow with a join is moved to the gateway.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
│
└ Node 1
  └ *colexecjoin.hashJoiner
    ├ *colfetcher.ColBatchScan
    └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
distribution: local
vectorized: true
·
• hash join
│ estimated row count: 10,000
│ equality: (a) = (b)
│ left cols are key
│
├── • scan
│     estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
│     table: t@t_pkey
│     spans: FULL SCAN
│
└── • scan
      estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
      table: t@t_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyskdGL00AQxt_9K5Z5amW8y27Vh4WDPc7IReq1JgUFycM2O7aBNBt3N6CU_O-SRKgtrVK5t-w385tvvske_PcKJMRflvP75IlN3iXZKvs0n7IsnscPK_aSvU8XH1lg9xkLHH9_CPb5MU5jFviNZncsiJs1INTW0JPekQf5FTjkCI2zBXlvXS_th4bE_AAZIZR104ZezhEK6wjkHkIZKgIJK72uKCVtyN1GgGAo6LIaxgbVuHKn3U9AeLBVu6u9ZBrZGlkBCFmje-EV5B2CbcPBwwe9IZC8w__bgz_vHuLiHgf7trbOkCNzZJ335L9azoR51H77wZY1uVtxnKWib2Gi-PTOlZttmCgxBYRFGyRTHJVANUP1GtUbVG8v5pldc9eUfGNrT6e5zk6O-jBkNjQex9vWFbR0thhsxudi4AbBkA9jVYyPpB5Kw4__E-ZXwOIUFn-FZ0dw1OXdi18BAAD___VzF6k=


# If we add a not very selective filter, the flow is still moved to the gateway.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.b = 1 AND t1.a = t2.a
----
│
└ Node 1
  └ *colexecjoin.mergeJoinInnerOp
    ├ *colfetcher.ColBatchScan
    └ *colexecsel.selEQInt64Int64ConstOp
      └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.b = 1 AND t1.a = t2.a
----
distribution: local
vectorized: true
·
• merge join
│ estimated row count: 3,333
│ equality: (a) = (a)
│ left cols are key
│ right cols are key
│
├── • scan
│     estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
│     table: t@t_pkey
│     spans: FULL SCAN
│
└── • filter
    │ estimated row count: 3,333
    │ filter: b = 1
    │
    └── • scan
          estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
          table: t@t_pkey
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyskm-L00AQxt_7KYZ51erctflTkYVCyl0OI730bAoKkhfbZKyBNBt3N6CUfndJIpwtbbVy73ae3d88z0yyQ_O9RIHh56f5LIphcB8lq-TjfAhJOA_vVvAaHpaLR7AwS8A69Pvgwqf34TKEgXVu1zAFZwiz-L4rJUzBurdyiISVyjmWWzYovqCDKWGtVcbGKN1Ku-5BlP9AMSYsqrqxrZwSZkozih3awpaMAldyXfKSZc56NEbCnK0syq6tDWpdbKX-iYR3qmy2lREgCdYEGRImtWyFG0z3hKqxzx7Gyg2jcPb0fzmcl83hXpPjoSgta9Yj9zBErwsI3PajCCGiePXurKV31vLZqamUzllzfmCUtuTfnpzI_ch6wx9UUbEeeYfRS_5qB4HzZjjVxeZbf0TCRWMFBD4FEwreUuBQ4FLgnR3Jv2aLsbpR9cg_nuxk48k1jZdsalUZ_qfO43ZRnG-4X7xRjc74Sauss-nLRcd1Qs7G9rdeX0RVd9X9x3_CzkXYPYDHx7B7hbN7DHsXYf-ys38RnhzB6f7VrwAAAP__wgqGSw==

# However, if we add a selective filter, the flow is kept on the remote node.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1 INNER MERGE JOIN t AS t2 ON t1.a = t2.a WHERE t1.c = 1
----
│
├ Node 1
│ └ *colrpc.Inbox
└ Node 2
  └ *colrpc.Outbox
    └ *colexecjoin.mergeJoinInnerOp
      ├ *colexecsel.selEQInt64Int64ConstOp
      │ └ *colfetcher.ColBatchScan
      └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1 INNER MERGE JOIN t AS t2 ON t1.a = t2.a WHERE t1.c = 1
----
distribution: full
vectorized: true
·
• merge join
│ estimated row count: 100
│ equality: (a) = (a)
│ left cols are key
│ right cols are key
│
├── • filter
│   │ estimated row count: 100
│   │ filter: c = 1
│   │
│   └── • scan
│         estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
│         table: t@t_pkey
│         spans: FULL SCAN
│
└── • scan
      estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
      table: t@t_pkey
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJysktFr2zAQxt_3Vxz31G5qEznOGIKASuduLond2YENRh5U-5YZHMuTZNgI-d-H7UHrsLjr6Jv13f3uvk_WHu2PEgUGX-6WV2EEZ-_DdJ1-Wp5DGiyD6zW8hpskXoGDqxQchzCKggRWQfIhgNs4jP4UPIgjcPxSwQKcd6ng88cgCVolgwVwZFjpnCK1I4viK7aChxuGtdEZWatNK--7pjD_iWLKsKjqxrXyhmGmDaHYoytcSSgw0he6nvjIMCenirJrOzDUjXuArFNbQjE_sEeD-fjgtbovKSGVk5lMB-PRydoUO2V-IcNrXTa7ygpQDO4ZZMgwrVUrXOApH_w5Pm6K0pEhM-FDE70uQM7aaxVChNH63cmV3v9G9142-uykj4f1TaVNToby45_6dMtfwqzIbOlWFxWZyWwYpqRv7kzyN-cLU2y_95_IMG6cAMmZ9JicMekzOWfy7clI_iDSE881IVvrytI_vddpm4fyLfX3Y3VjMrozOuvW9Me44zohJ-v66rw_hFVfag0-hvko7I3D3ijsD2B-DM-eAXvHsD8KT49sbw6vfgcAAP__Lc6KaQ==
