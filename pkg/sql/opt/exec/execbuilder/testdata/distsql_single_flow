# LogicTest: 5node

statement ok
SET CLUSTER SETTING sql.stats.automatic_collection.enabled = false

statement ok
CREATE TABLE t (a INT PRIMARY KEY, b INT, c INT)

# Move the single range to a remote node.
statement ok
ALTER TABLE t EXPERIMENTAL_RELOCATE VALUES (ARRAY[2], 2);

# There are no stats on the table, so the single flow should stay on the remote
# node.
# TODO(yuzefovich): currently the optimizer assumes that t has 1000 rows, so it
# does provide a guess.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
│
└ Node 1
  └ *colexecjoin.hashJoiner
    ├ *colfetcher.ColBatchScan
    └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
distribution: local
vectorized: true
·
• hash join
│ equality: (a) = (b)
│ left cols are key
│
├── • scan
│     missing stats
│     table: t@primary
│     spans: FULL SCAN
│
└── • scan
      missing stats
      table: t@primary
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkd-r2jAUx9_3V4TzpCPTJm57CAiRrcMOp64VNhh9iM2ZFmrTJSlsSP_30faCV9F78d63nB-f8z3fkyO4PwUICH-uF7NoSQafo2STfF8MSRIuwk8b8pZ8iVffiCezhHhGHx6c_JiHcUg8GykyJZ6PtkChNBqX6oAOxC9gkFKorMnQOWPb1LFriPRfEAGFvKxq36ZTCpmxCOIIPvcFgoCN2hYYo9JoxwFQ0OhVXnRjvaxsflD2H1BIKlU6Qd5B2lAwtT8NdF7tEARr6MtE2StE-U3Rk1ZdGqvRoj7TSVvyuZYrm8-V2381eYl2zM8XL_C3H0g2nNp8t_cDyYdAYVV7QSSjklM5ofI9lR-o_HjTz-SeI8boKlM6vPR1dXLQmkG9w_44ztQ2w7U1WSfTh6uO6xIane-rvA-isit1v_wYZnfA_BLmT8KTMzho0ubN_wAAAP__9MUM1w==

# Inject stats so that column 'b' has few unique values whereas column 'c' has
# many unique values.
statement ok
ALTER TABLE t INJECT STATISTICS '[
  {
    "columns": ["a"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 10000
  },
  {
    "columns": ["b"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 3
  },
  {
    "columns": ["c"],
    "created_at": "2018-01-01 1:00:00.00000+00:00",
    "row_count": 10000,
    "distinct_count": 100
  }
]'

# Now check that the single flow with a join is moved to the gateway.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
│
└ Node 1
  └ *colexecjoin.hashJoiner
    ├ *colfetcher.ColBatchScan
    └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.a = t2.b
----
distribution: local
vectorized: true
·
• hash join
│ estimated row count: 10,000
│ equality: (a) = (b)
│ left cols are key
│
├── • scan
│     estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
│     table: t@primary
│     spans: FULL SCAN
│
└── • scan
      estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
      table: t@primary
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkd-r2jAUx9_3V4TzpCPTJm57CAiRrcMOp64VNhh9iM2ZFmrTJSlsSP_30faCV9F78d63nB-f8z3fkyO4PwUICH-uF7NoSQafo2STfF8MSRIuwk8b8pZ8iVffiCezhHhGHx6c_JiHcUg8GykyJZ6PtkChNBqX6oAOxC9gkFKorMnQOWPb1LFriPRfEAGFvKxq36ZTCpmxCOIIPvcFgoCN2hYYo9JoxwFQ0OhVXnRjvaxsflD2H1BIKlU6Qd5B2lAwtT8NdF7tEARr6MtE2StE-U3Rk1ZdGqvRoj7TSVvyuZYrm8-V2381eYl2zM8XL_C3H0g2nNp8t_cDyYdAYVV7QSSjklM5ofI9lR-o_HjTz-SeI8boKlM6vPR1dXLQmkG9w_44ztQ2w7U1WSfTh6uO6xIane-rvA-isit1v_wYZnfA_BLmT8KTMzho0ubN_wAAAP__9MUM1w==


# If we add a not very selective filter, the flow is still moved to the gateway.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.b = 1 AND t1.a = t2.a
----
│
└ Node 1
  └ *colexecjoin.mergeJoinInnerOp
    ├ *colexecsel.selEQInt64Int64ConstOp
    │ └ *colfetcher.ColBatchScan
    └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.b = 1 AND t1.a = t2.a
----
distribution: local
vectorized: true
·
• merge join
│ estimated row count: 3,333
│ equality: (a) = (a)
│ left cols are key
│ right cols are key
│
├── • filter
│   │ estimated row count: 3,333
│   │ filter: b = 1
│   │
│   └── • scan
│         estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
│         table: t@primary
│         spans: FULL SCAN
│
└── • scan
      estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
      table: t@primary
      spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJykkFFr2zAQx9_3KY57SjatieRsDEFAYXWZR5p0cWCD4Qc1umUG1_IkGTZCvvuwPWhtmmxhb7qTfve7vw7ofxQoMf5yt1wkKxhdJ-k2_bQcQxov4_dbeAk3m_UtBFikEDj7cxDw-UO8iWEU-NU9zIGPYbG6bksNcwjiSo-RYWkNrfQDeZRfkWPGsHJ2R95b17QO7YPE_EQ5ZZiXVR2adsZwZx2hPGDIQ0EocavvC9qQNuQmU2RoKOi8aMcGVbn8QbtfyDCtdOklvMbsyNDW4XGgD3pPKPmR_bv0Ji8COXIT3jd2fQlKNMmllMlq--6kUlyifJpT_EfO6KT00VWX1hlyZHqerCH_9uSZzW_J7emjzUtyk6i_eUHfwkjxV-O5y_ffuyMyXNdBguJMCaYipmZMvWHq7clIs0v-cUO-sqWnYbRnJ0-bPGT21P2Pt7Xb0Z2zu1bTleuWaxuGfOhueVckZXfVLPgU5mfhqAfzISwugMUQjs7Cs8Ha2fHF7wAAAP__f31KBg==

# However, if we add a selective filter, the flow is kept on the remote node.
query T
EXPLAIN (VEC) SELECT * FROM t AS t1, t AS t2 WHERE t1.c = 1 AND t1.a = t2.a
----
│
├ Node 1
│ └ *colrpc.Inbox
└ Node 2
  └ *colrpc.Outbox
    └ *rowexec.joinReader
      └ *colexecsel.selEQInt64Int64ConstOp
        └ *colfetcher.ColBatchScan

query T
EXPLAIN (DISTSQL) SELECT * FROM t AS t1, t AS t2 WHERE t1.c = 1 AND t1.a = t2.a
----
distribution: full
vectorized: true
·
• lookup join
│ estimated row count: 100
│ table: t@primary
│ equality: (a) = (a)
│ equality cols are key
│
└── • filter
    │ estimated row count: 100
    │ filter: c = 1
    │
    └── • scan
          estimated row count: 10,000 (100% of the table; stats collected <hidden> ago)
          table: t@primary
          spans: FULL SCAN
·
Diagram: https://cockroachdb.github.io/distsqlplan/decode.html#eJyUktFr2zAQxt_3Vxz31IxrE8nZGIKCwuoyj8zp4sAGIw-afRRvruRJMmyE_O_DdmHNIN76pvuk333f-XzA8KNBhennu_Uqy-HiJit2xcf1DIp0nb7dwUu43W4-QIRVAVHQ40HCp3fpNoWLKK5KuAYxg1V-M5QGriHKKzNDQusqzs0DB1RfUCChxD1h613JITjfy4fhUVb9RLUgrG3bxV7eE5bOM6oDxjo2jApzd-naeYKEFUdTN8OzI6Hr4h8oRHPPqJZHetJYTDfema8Nb9lU7OeLk_YYdevrB-N_IWHRGhsUXOI5U_Ec09u6iezZz8Wp46gr0En_WZVSWb57c9ZSPsfyvavt45jy_Jhr5753LXxztQVnFeg-4KaL_Ym0JJ2QXpJ-Rfr12VjJSax_7HXLoXU28H8tdnHcE3J1z-O_E1znS77zrhxsxnIzcINQcYjj7XIsMjte9QGfwmISltOwnISTaTiZhBd_wfvji98BAAD__03MLSA=
