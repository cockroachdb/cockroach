
exec-ddl
CREATE TABLE foo (a INT PRIMARY KEY, b INT[], c STRING, INVERTED INDEX b_inverted_index(b), UNIQUE INDEX c_idx(c))
----

exec-ddl
CREATE TABLE bar (ba INT PRIMARY KEY)
----

exec-ddl
CREATE TABLE abc (a INT PRIMARY KEY, b INT, c INT, INDEX(b), INDEX(c))
----

exec-ddl
CREATE TABLE xyz (x INT PRIMARY KEY, y INT, z INT)
----

# ConstructScan/ConstructSerializingProject
gist-explain-roundtrip
SELECT * from foo LIMIT 1
----
hash: 3862437846052724935
plan-gist: BAFqAgAHAAAAAgYG
explain(shape):
• scan
  missing stats
  table: foo@foo_pkey
  spans: LIMITED SCAN
  limit: 1
explain(gist):
• scan
  table: foo@foo_pkey
  spans: LIMITED SCAN
  limit: 1

# ConstructFilter
gist-explain-roundtrip
SELECT * from foo WHERE a = 1
----
hash: 8469211318139032471
plan-gist: BAFqAgAHAAIAAAYG
explain(shape):
• scan
  missing stats
  table: foo@foo_pkey
  spans: 1 span
explain(gist):
• scan
  table: foo@foo_pkey
  spans: 1 span

# ConstructInvertedFilter/ConstructIndexJoin
gist-explain-roundtrip
SELECT * from foo WHERE b @> ARRAY[1]
----
hash: 5110607601896578161
plan-gist: BAFqBAABAAACABNqAgYG
explain(shape):
• index join
│ table: foo@foo_pkey
│
└── • scan
      missing stats
      table: foo@b_inverted_index
      spans: 1 span
explain(gist):
• index join
│ table: foo@foo_pkey
│
└── • scan
      table: foo@b_inverted_index
      spans: 1 span

# ConstructSimpleProjectOp
gist-explain-roundtrip
select a,b from foo@c_idx where c = 'bar'
----
hash: 6329883477835906592
plan-gist: BAFqBgAFAAIAABNqAgUEBgQ=
explain(shape):
• index join
│ table: foo@foo_pkey
│
└── • scan
      missing stats
      table: foo@c_idx
      spans: 1 span
explain(gist):
• index join
│ table: foo@foo_pkey
│
└── • scan
      table: foo@c_idx
      spans: 1 span

# ConstructRender
gist-explain-roundtrip
select a + 1 from foo
----
hash: 16951747880842243841
plan-gist: BAFqBgABAAAAAAcCBgI=
explain(shape):
• render
│
└── • scan
      missing stats
      table: foo@c_idx
      spans: FULL SCAN
explain(gist):
• render
│
└── • scan
      table: foo@c_idx
      spans: FULL SCAN

# ConstructApplyJoin
gist-explain-roundtrip
SELECT * FROM abc WHERE EXISTS(SELECT * FROM (VALUES (a), (b)) WHERE column1=a)
----
hash: 4420372798255298833
plan-gist: BAFuAgAHAAAAAAgEAgYG
explain(shape):
• apply join (semi)
│ pred: column1 = a
│
└── • scan
      missing stats
      table: abc@abc_pkey
      spans: FULL SCAN
explain(gist):
• apply join (semi)
│
└── • scan
      table: abc@abc_pkey
      spans: FULL SCAN

# ConstructHashJoin
gist-explain-roundtrip
SELECT * FROM foo INNER HASH JOIN bar ON a = ba
----
hash: 6599296399176109584
plan-gist: BAFqAgAHAAAAAAFsAgABAAAAAAkAAgIBAQYI
explain(shape):
• hash join
│ equality: (a) = (ba)
│ left cols are key
│ right cols are key
│
├── • scan
│     missing stats
│     table: foo@foo_pkey
│     spans: FULL SCAN
│
└── • scan
      missing stats
      table: bar@bar_pkey
      spans: FULL SCAN
explain(gist):
• hash join
│ equality: (a) = (ba)
│ left cols are key
│ right cols are key
│
├── • scan
│     table: foo@foo_pkey
│     spans: FULL SCAN
│
└── • scan
      table: bar@bar_pkey
      spans: FULL SCAN

# ConstructMergeJoin
gist-explain-roundtrip
SELECT * FROM foo JOIN bar ON a = ba
----
hash: 12921941710004006485
plan-gist: BAFqAgAHAAAAAAFsAgABAAAAAAoAAQEGCA==
explain(shape):
• merge join
│ equality: (a) = (ba)
│ left cols are key
│ right cols are key
│
├── • scan
│     missing stats
│     table: foo@foo_pkey
│     spans: FULL SCAN
│
└── • scan
      missing stats
      table: bar@bar_pkey
      spans: FULL SCAN
explain(gist):
• merge join
│
├── • scan
│     table: foo@foo_pkey
│     spans: FULL SCAN
│
└── • scan
      table: bar@bar_pkey
      spans: FULL SCAN

# ConstructGroupBy
gist-explain-roundtrip
SELECT c, count(*) FROM foo, bar WHERE a = 1 GROUP BY c
----
hash: 1411954823131175618
plan-gist: BAFsAgAAAAAAAAFqAgAFAAIAAAkAAAAAAQUCCwAGBA==
explain(shape):
• group (streaming)
│
└── • cross join
    │
    ├── • scan
    │     missing stats
    │     table: bar@bar_pkey
    │     spans: FULL SCAN
    │
    └── • scan
          missing stats
          table: foo@foo_pkey
          spans: 1 span
explain(gist):
• group (hash)
│
└── • cross join
    │
    ├── • scan
    │     table: bar@bar_pkey
    │     spans: FULL SCAN
    │
    └── • scan
          table: foo@foo_pkey
          spans: 1 span

# ConstructScalarGroupBy
gist-explain-roundtrip
SELECT sum(a),max(c) FROM foo
----
hash: 1053538902551291500
plan-gist: BAFqBgAFAAAAAAwGBA==
explain(shape):
• group (scalar)
│
└── • scan
      missing stats
      table: foo@c_idx
      spans: FULL SCAN
explain(gist):
• group (scalar)
│
└── • scan
      table: foo@c_idx
      spans: FULL SCAN

# ConstructInsert
gist-explain-roundtrip
INSERT INTO foo VALUES (1,ARRAY[1,2],'str')
----
hash: 3090620430318353484
plan-gist: BCACagE=
explain(shape):
• insert fast path
  into: foo(a, b, c)
  auto commit
  size: 3 columns, 1 row
explain(gist):
• insert fast path
  into: foo()
  auto commit
  size: 0 columns, 1 row

# ConstructDistinct
gist-explain-roundtrip
SELECT DISTINCT ON (b,c) b,c from abc
----
hash: 8263049173473862947
plan-gist: BAFuAgAGAAAAAA0GBA==
explain(shape):
• distinct
│ distinct on: b, c
│
└── • scan
      missing stats
      table: abc@abc_pkey
      spans: FULL SCAN
explain(gist):
• distinct
│ distinct on
│
└── • scan
      table: abc@abc_pkey
      spans: FULL SCAN

# ConstructHashSetOpOp
gist-explain-roundtrip
SELECT * FROM abc INTERSECT ALL SELECT * FROM abc
----
hash: 11770807816610947387
plan-gist: BAFuAgAHAAAAAAFuAgAHAAAAAA8BBgY=
explain(shape):
• intersect all
│
├── • scan
│     missing stats
│     table: abc@abc_pkey
│     spans: FULL SCAN
│
└── • scan
      missing stats
      table: abc@abc_pkey
      spans: FULL SCAN
explain(gist):
• union all
│
├── • scan
│     table: abc@abc_pkey
│     spans: FULL SCAN
│
└── • scan
      table: abc@abc_pkey
      spans: FULL SCAN

# ConstructStreamingSetOpOp
gist-explain-roundtrip
SELECT * FROM abc UNION SELECT * FROM abc ORDER BY b,a
----
hash: 5204889425916003576
plan-gist: BAFuAgAHAAAAABEBbgIABwAAAAAREA0GBg==
explain(shape):
• distinct
│ distinct on: a
│
└── • union all
    │
    ├── • sort
    │   │ order: +b,+a
    │   │
    │   └── • scan
    │         missing stats
    │         table: abc@abc_pkey
    │         spans: FULL SCAN
    │
    └── • sort
        │ order: +b,+a
        │
        └── • scan
              missing stats
              table: abc@abc_pkey
              spans: FULL SCAN
explain(gist):
• distinct
│ distinct on
│
└── • union all
    │
    ├── • sort
    │   │ order
    │   │
    │   └── • scan
    │         table: abc@abc_pkey
    │         spans: FULL SCAN
    │
    └── • sort
        │ order
        │
        └── • scan
              table: abc@abc_pkey
              spans: FULL SCAN

# ConstructUnionAllOp
gist-explain-roundtrip
SELECT * FROM abc UNION ALL SELECT * FROM abc
----
hash: 7706204303380109057
plan-gist: BAFuAgAHAAAAAAFuAgAHAAAAABAGBg==
explain(shape):
• union all
│
├── • scan
│     missing stats
│     table: abc@abc_pkey
│     spans: FULL SCAN
│
└── • scan
      missing stats
      table: abc@abc_pkey
      spans: FULL SCAN
explain(gist):
• union all
│
├── • scan
│     table: abc@abc_pkey
│     spans: FULL SCAN
│
└── • scan
      table: abc@abc_pkey
      spans: FULL SCAN

# ConstructOrdinality
gist-explain-roundtrip
SELECT * FROM abc WITH ORDINALITY
----
hash: 4012857883565752755
plan-gist: BAFuAgAHAAAAABIGCA==
explain(shape):
• ordinality
│
└── • scan
      missing stats
      table: abc@abc_pkey
      spans: FULL SCAN
explain(gist):
• ordinality
│
└── • scan
      table: abc@abc_pkey
      spans: FULL SCAN

# ConstructLookupJoin
gist-explain-roundtrip
SELECT * FROM foo INNER LOOKUP JOIN bar ON a = ba
----
hash: 9923355519796991878
plan-gist: BAFqAgAHAAAAABQAbAICAQYI
explain(shape):
• lookup join
│ table: bar@bar_pkey
│ equality: (a) = (ba)
│ equality cols are key
│
└── • scan
      missing stats
      table: foo@foo_pkey
      spans: FULL SCAN
explain(gist):
• lookup join
│ table: bar@bar_pkey
│ equality: (a) = (ba)
│ equality cols are key
│
└── • scan
      table: foo@foo_pkey
      spans: FULL SCAN

# ConstructInvertedJoin
gist-explain-roundtrip
SELECT * FROM foo JOIN bar ON b @> ARRAY[1,2]
----
hash: 12759095371736027201
plan-gist: BAFsAgABAAAAABZqBGoEFABqAgIBCQAAAAAABgg=
explain(shape):
• cross join
│
├── • scan
│     missing stats
│     table: bar@bar_pkey
│     spans: FULL SCAN
│
└── • lookup join
    │ table: foo@foo_pkey
    │ equality: (a) = (a)
    │ equality cols are key
    │ pred: b @> _
    │
    └── • zigzag join
          left table: foo@b_inverted_index
          left columns: (a)
          left fixed values: 1 column
          right table: foo@b_inverted_index
          right columns: ()
          right fixed values: 1 column
explain(gist):
• cross join
│
├── • scan
│     table: bar@bar_pkey
│     spans: FULL SCAN
│
└── • lookup join
    │ table: foo@foo_pkey
    │ equality: (_) = (a)
    │ equality cols are key
    │
    └── • zigzag join
          left table: foo@b_inverted_index
          left columns: ()
          right table: foo@b_inverted_index
          right columns: ()

# ConstructZigzagJoin
gist-explain-roundtrip
SELECT * FROM abc WHERE b = 2 AND c = 3
----
hash: 8074151782567838210
plan-gist: BBZuBG4GBgY=
explain(shape):
• zigzag join
  pred: (b = _) AND (c = _)
  left table: abc@abc_b_idx
  left columns: (a, b)
  left fixed values: 1 column
  right table: abc@abc_c_idx
  right columns: (c)
  right fixed values: 1 column
explain(gist):
• zigzag join
  left table: abc@abc_b_idx
  left columns: ()
  right table: abc@abc_c_idx
  right columns: ()

# ConstructMax1Row
gist-explain-roundtrip
SELECT (SELECT a FROM abc FOR UPDATE)
----
hash: 17853431666615196459
plan-gist: BAFuBAABAAAAABkCAgIGAg==
explain(shape):
• root
│
├── • values
│     size: 1 column, 1 row
│
└── • subquery
    │ id: @S1
    │ original sql: (SELECT a FROM abc FOR UPDATE)
    │ exec mode: one row
    │
    └── • max1row
        │ estimated row count: 1
        │
        └── • scan
              missing stats
              table: abc@abc_b_idx
              spans: FULL SCAN
              locking strength: for update
explain(gist):
• root
│
├── • values
│     size: 1 column, 1 row
│
└── • subquery
    │ id: @S1
    │ exec mode: exists
    │
    └── • max1row
        │
        └── • scan
              table: abc@abc_b_idx
              spans: FULL SCAN

# ConstructProjectSet
gist-explain-roundtrip
SELECT * FROM generate_series(1, 3)
----
hash: 1108730773033687541
plan-gist: BAICABoCBgI=
explain(shape):
• project set
│ estimated row count: 10
│
└── • emptyrow
explain(gist):
• project set
│
└── • emptyrow

# ConstructWindow
gist-explain-roundtrip
SELECT * FROM (SELECT avg(a) OVER () FROM abc)
----
hash: 13059145870822860404
plan-gist: BAFuBAABAAAAABsFAgYC
explain(shape):
• window
│
└── • scan
      missing stats
      table: abc@abc_b_idx
      spans: FULL SCAN
explain(gist):
• window
│
└── • scan
      table: abc@abc_b_idx
      spans: FULL SCAN

# ConstructExplainOpt
gist-explain-roundtrip
EXPLAIN (OPT) SELECT 1
----
hash: 3089096058207135633
plan-gist: BBwGAg==
explain(shape):
• explain
explain(gist):
• explain

# ConstructExplain
gist-explain-roundtrip
EXPLAIN SELECT 1
----
hash: 3088143881137294132
plan-gist: BB0GAg==
explain(shape):
• explain
explain(gist):
• explain

# ConstructShowTrace
gist-explain-roundtrip
SHOW TRACE FOR SESSION
----
hash: 3091013606486357183
plan-gist: BB4GDg==
explain(shape):
• show trace
explain(gist):
• show trace

# ConstructInsert
gist-explain-roundtrip
INSERT INTO abc SELECT * from abc
----
hash: 14433331891269346889
plan-gist: BAFuAgAHAAAAAB9uAQ==
explain(shape):
• insert
│ into: abc(a, b, c)
│ auto commit
│
└── • scan
      missing stats
      table: abc@abc_pkey
      spans: FULL SCAN
explain(gist):
• insert
│ into: abc()
│ auto commit
│
└── • scan
      table: abc@abc_pkey
      spans: FULL SCAN

# ConstructUpdate
gist-explain-roundtrip
UPDATE abc SET b = 2 WHERE a = 1
----
hash: 15621265378531563699
plan-gist: BAFuAgAHAAIAAAcIBQghbgAB
explain(shape):
• update
│ table: abc
│ set: b
│ auto commit
│
└── • render
    │
    └── • scan
          missing stats
          table: abc@abc_pkey
          spans: 1 span
explain(gist):
• update
│ table: abc
│ set
│ auto commit
│
└── • render
    │
    └── • scan
          table: abc@abc_pkey
          spans: 1 span

# ConstructUpsert
gist-explain-roundtrip
UPSERT INTO abc (a,b,c) VALUES (1,2,3)
----
hash: 17688244554824920077
plan-gist: BAICBgFuAgAHAAIAAAkBAAABAQUSIm4B
explain(shape):
• upsert
│ into: abc(a, b, c)
│ auto commit
│ arbiter indexes: abc_pkey
│
└── • cross join (left outer)
    │
    ├── • values
    │     size: 3 columns, 1 row
    │
    └── • scan
          missing stats
          table: abc@abc_pkey
          spans: 1 span
explain(gist):
• upsert
│ into: abc()
│ auto commit
│
└── • cross join (left outer)
    │
    ├── • values
    │     size: 3 columns, 1 row
    │
    └── • scan
          table: abc@abc_pkey
          spans: 1 span

# ConstructDeleteRange
# FIXME: how to test?
gist-explain-roundtrip
DELETE FROM foo
----
hash: 3378728341796120245
plan-gist: BAFqAgAHAAAAACNqAQ==
explain(shape):
• delete
│ from: foo
│ auto commit
│
└── • scan
      missing stats
      table: foo@foo_pkey
      spans: FULL SCAN
explain(gist):
• delete
│ from: foo
│ auto commit
│
└── • scan
      table: foo@foo_pkey
      spans: FULL SCAN

# ConstructDelete
gist-explain-roundtrip
DELETE FROM foo WHERE a = 1
----
hash: 645339265709327771
plan-gist: BAFqAgAHAAIAACNqAQ==
explain(shape):
• delete
│ from: foo
│ auto commit
│
└── • scan
      missing stats
      table: foo@foo_pkey
      spans: 1 span
explain(gist):
• delete
│ from: foo
│ auto commit
│
└── • scan
      table: foo@foo_pkey
      spans: 1 span

# createTableOp
gist-explain-roundtrip
CREATE TABLE t1 (x int)
----
hash: 15654333189235896782
plan-gist: BCUC
explain(shape):
• create table
explain(gist):
• create table

# createTableAsOp
gist-explain-roundtrip
CREATE TABLE t2 AS SELECT * FROM abc
----
hash: 1312314678455054914
plan-gist: BAFuAgAHAAAAAAcIBggmAg==
explain(shape):
• create table as
│
└── • render
    │
    └── • scan
          missing stats
          table: abc@abc_pkey
          spans: FULL SCAN
explain(gist):
• create table as
│
└── • render
    │
    └── • scan
          table: abc@abc_pkey
          spans: FULL SCAN

#	createViewOp
gist-explain-roundtrip
CREATE VIEW v AS SELECT 1
----
hash: 3036488824854159506
plan-gist: BCcCAg==
explain(shape):
• create view
explain(gist):
• create view

exec-ddl
CREATE SEQUENCE select_test
----

# ConstructTopK
gist-explain-roundtrip
SELECT * FROM xyz ORDER BY y LIMIT 10
----
hash: 5039295229691556485
plan-gist: BAFwAgAHAAAAABgGBg==
explain(shape):
• top-k
│ order: +y
│ k: 10
│
└── • scan
      missing stats
      table: xyz@xyz_pkey
      spans: FULL SCAN
explain(gist):
• top-k
│ order
│
└── • scan
      table: xyz@xyz_pkey
      spans: FULL SCAN


# ConstructSequenceSelect
gist-explain-roundtrip
SELECT * FROM select_test
----
hash: 3039362948249735377
plan-gist: BCgGBg==
explain(shape):
• sequence select
  estimated row count: 1
explain(gist):
• sequence select

# ConstructSaveTable
# saveTableOp
# FIXME: couldn't find any examples of this, some internal thing?


# alterTableSplitOp
gist-explain-roundtrip
ALTER TABLE foo SPLIT AT VALUES(1)
----
hash: 16064523721676562109
plan-gist: BAICAgYCLGoCBgY=
explain(shape):
• split
│
└── • values
      size: 1 column, 1 row
explain(gist):
• split
│
└── • values
      size: 1 column, 1 row

# alterTableUnsplitOp
gist-explain-roundtrip
ALTER TABLE foo UNSPLIT AT VALUES(1)
----
hash: 4271961537048207324
plan-gist: BAICAgYCLWoCBgQ=
explain(shape):
• unsplit
│
└── • values
      size: 1 column, 1 row
explain(gist):
• unsplit
│
└── • values
      size: 1 column, 1 row


# alterTableUnsplitAllOp
gist-explain-roundtrip
ALTER TABLE foo UNSPLIT ALL
----
hash: 17345668356113436661
plan-gist: BC5qAgYE
explain(shape):
• unsplit all
explain(gist):
• unsplit all

# alterTableRelocateOp
gist-explain-roundtrip
ALTER TABLE abc EXPERIMENTAL_RELOCATE VALUES (ARRAY[1],1)
----
hash: 13190728670006073678
plan-gist: BAICBAYEL24CBgQ=
explain(shape):
• relocate
│
└── • values
      size: 2 columns, 1 row
explain(gist):
• relocate
│
└── • values
      size: 2 columns, 1 row

# ConstructBuffer/ConstructScanBuffer
gist-explain-roundtrip
SELECT * FROM [INSERT INTO abc SELECT a, b, c FROM abc RETURNING a] ORDER BY a
----
hash: 18313926946376313530
plan-gist: BAFuAgAHAAAAAB9uADAxEQYC
explain(shape):
• root
│
├── • sort
│   │ order: +a
│   │
│   └── • scan buffer
│         label: buffer 1
│
└── • subquery
    │ id: @S1
    │ original sql: INSERT INTO abc SELECT a, b, c FROM abc RETURNING a
    │ exec mode: all rows
    │
    └── • buffer
        │ label: buffer 1
        │
        └── • insert
            │ into: abc(a, b, c)
            │
            └── • scan
                  missing stats
                  table: abc@abc_pkey
                  spans: FULL SCAN
explain(gist):
• root
│
├── • sort
│   │ order
│   │
│   └── • scan buffer
│         label
│
└── • subquery
    │ id: @S1
    │ exec mode: exists
    │
    └── • buffer
        │ label
        │
        └── • insert
            │ into: abc()
            │
            └── • scan
                  table: abc@abc_pkey
                  spans: FULL SCAN

# ConstructRecursiveCTE/recursiveCTEOp
gist-explain-roundtrip
WITH RECURSIVE cte(x) AS (VALUES (1) UNION ALL SELECT x+1 FROM cte WHERE x < 10) SELECT * FROM cte
----
hash: 3616853926059870096
plan-gist: BAICAjIHAgYC
explain(shape):
• render
│
└── • recursive cte
    │
    └── • values
          size: 1 column, 1 row
explain(gist):
• render
│
└── • recursive cte
    │
    └── • values
          size: 1 column, 1 row

# controlSchedulesOp
gist-explain-roundtrip
PAUSE SCHEDULE 123
----
hash: 8515009161697345069
plan-gist: BAICAjQ=
explain(shape):
• control schedules
│
└── • values
      size: 1 column, 1 row
explain(gist):
• control schedules
│
└── • values
      size: 1 column, 1 row

# controlJobsOp
gist-explain-roundtrip
CANCEL JOBS SELECT 1
----
hash: 8064825081520190318
plan-gist: BAICAgYCMw==
explain(shape):
• control jobs
│
└── • values
      size: 1 column, 1 row
explain(gist):
• control jobs
│
└── • values
      size: 1 column, 1 row

# cancelQueriesOp
gist-explain-roundtrip
CANCEL QUERIES SELECT '1'
----
hash: 8064825081520190312
plan-gist: BAICAgYCNQ==
explain(shape):
• cancel queries
│
└── • values
      size: 1 column, 1 row
explain(gist):
• cancel queries
│
└── • values
      size: 1 column, 1 row

# cancelSessionsOp
gist-explain-roundtrip
CANCEL SESSIONS SELECT '1'
----
hash: 8064825081520190315
plan-gist: BAICAgYCNg==
explain(shape):
• cancel sessions
│
└── • values
      size: 1 column, 1 row
explain(gist):
• cancel sessions
│
└── • values
      size: 1 column, 1 row

# ConstructCreateStatistics
gist-explain-roundtrip
CREATE STATISTICS s1 FROM foo
----
hash: 590679669773920534
plan-gist: BDc=
explain(shape):
• create statistics
explain(gist):
• create statistics

# ConstructExport
gist-explain-roundtrip
EXPORT INTO CSV "tmp" FROM SELECT * FROM foo
----
hash: 3704669606492597023
plan-gist: BAFqAgAHAAAAAAYGOAYG
explain(shape):
• export
│
└── • scan
      missing stats
      table: foo@foo_pkey
      spans: FULL SCAN
explain(gist):
• export
│
└── • scan
      table: foo@foo_pkey
      spans: FULL SCAN

# ConstructValues
gist-explain-roundtrip
SELECT 1
----
hash: 17760103876463234735
plan-gist: BAICAgYC
explain(shape):
• values
  size: 1 column, 1 row
explain(gist):
• values
  size: 1 column, 1 row


# See what gist does on an explain query
gist-explain-roundtrip
EXPLAIN SELECT * from foo LIMIT 1
----
hash: 3088143881137294132
plan-gist: BB0GAg==
explain(shape):
• explain
explain(gist):
• explain
