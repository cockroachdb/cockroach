statement ok
CREATE TABLE t (
  k INT PRIMARY KEY,
  v INT
)

query ITTT colnames
EXPLAIN (TYPES) INSERT INTO t VALUES (1, 2)
----
Level  Type   Element       Description
0      insert result        ()
1      values result        (column1 int, column2 int)
1      values row 0, expr 0 (1)[int]
1      values row 0, expr 1 (2)[int]

statement ok
INSERT INTO t VALUES (1, 2)

query ITTT
EXPLAIN (TYPES) SELECT 42;
----
0  select        result    ("42" int)
1  render/filter result    ("42" int)
1  render/filter render 0  (42)[int]
2  empty         result    ()

query ITTT
EXPLAIN (TYPES) SELECT * FROM t
----
0      select        result   (k int, v int)
1      render/filter result   (k int, v int)
1      render/filter render 0 (k)[int]
1      render/filter render 1 (v)[int]
2      scan          result   (k int, v int)

query ITTT
EXPLAIN (TYPES,NOEXPAND) SELECT * FROM t WHERE v > 123
----
0  select        result   (k int, v int)
1  render/filter result   (k int, v int)
1  render/filter filter   ((v)[int] > (123)[int])[bool]
1  render/filter render 0 (k)[int]
1  render/filter render 1 (v)[int]
2  scan          result   (k int, v int)

query ITTT
EXPLAIN (TYPES) SELECT * FROM t WHERE v > 123
----
0   select          result     (k int, v int)
1   render/filter   result     (k int, v int)
1   render/filter   render 0   (k)[int]
1   render/filter   render 1   (v)[int]
2   scan            result     (k int, v int)
2   scan            filter     ((v)[int] > (123)[int])[bool]

query ITTT
EXPLAIN (TYPES) VALUES (1, 2, 3), (4, 5, 6)
----
0 select  result  (column1 int, column2 int, column3 int)
1 values  result  (column1 int, column2 int, column3 int)
1 values  row 0, expr 0 (1)[int]
1 values  row 0, expr 1 (2)[int]
1 values  row 0, expr 2 (3)[int]
1 values  row 1, expr 0 (4)[int]
1 values  row 1, expr 1 (5)[int]
1 values  row 1, expr 2 (6)[int]

query ITTT
EXPLAIN (TYPES,NOEXPAND) SELECT 2*COUNT(k) as z, v FROM t WHERE v>123 GROUP BY v HAVING v<2
----
0   select          result     (z int, v int)
0   select          having     ((v)[int] < (2)[int])[bool]
0   select          render z   ((2)[int] * (count((k)[int]))[int])[int]
0   select          render v   (v)[int]
1   render/filter   result     (z int, v int, v int)
1   render/filter   filter     ((v)[int] > (123)[int])[bool]
1   render/filter   render 0   (k)[int]
1   render/filter   render 1   (v)[int]
1   render/filter   render 2   (v)[int]
1   render/filter   render 3   (v)[int]
2   scan            result     (k int, v int)

query ITTT
EXPLAIN (TYPES) SELECT 2*COUNT(k) as z, v FROM t WHERE v>123 GROUP BY v HAVING v<2
----
0   select          result     (z int, v int)
1   group           result     (z int, v int)
1   group           having     ((v)[int] < (2)[int])[bool]
1   group           render z   ((2)[int] * (count((k)[int]))[int])[int]
1   group           render v   (v)[int]
2   render/filter   result     (z int, v int, v int)
2   render/filter   render 0   (k)[int]
2   render/filter   render 1   (v)[int]
2   render/filter   render 2   (v)[int]
2   render/filter   render 3   (v)[int]
3   scan            result     (k int, v int)
3   scan            filter     ((v)[int] > (123)[int])[bool]

query ITTT
EXPLAIN (TYPES,NOEXPAND) DELETE FROM t WHERE v > 1
----
0   delete          result     ()
1   select          result     (k int)
2   render/filter   result     (k int)
2   render/filter   filter     ((v)[int] > (1)[int])[bool]
2   render/filter   render 0   (k)[int]
3   scan            result     (k int, v int)

query ITTT
EXPLAIN (TYPES) DELETE FROM t WHERE v > 1
----
0   delete          result     ()
1   select          result     (k int)
2   render/filter   result     (k int)
2   render/filter   render 0   (k)[int]
3   scan            result     (k int, v int)
3   scan            filter     ((v)[int] > (1)[int])[bool]

query ITTT
EXPLAIN (TYPES) UPDATE t SET v = k + 1 WHERE v > 123
----
0   update          result     ()
1   select          result     (k int, v int, "k + 1" int)
2   render/filter   result     (k int, v int, "k + 1" int)
2   render/filter   render 0   (k)[int]
2   render/filter   render 1   (v)[int]
2   render/filter   render 2   ((k)[int] + (1)[int])[int]
3   scan            result     (k int, v int)
3   scan            filter     ((v)[int] > (123)[int])[bool]

query ITTT
EXPLAIN (TYPES,NOEXPAND) UPDATE t SET v = k + 1 WHERE v > 123
----
0   update          result     ()
1   select          result     (k int, v int, "k + 1" int)
2   render/filter   result     (k int, v int, "k + 1" int)
2   render/filter   filter     ((v)[int] > (123)[int])[bool]
2   render/filter   render 0   (k)[int]
2   render/filter   render 1   (v)[int]
2   render/filter   render 2   ((k)[int] + (1)[int])[int]
3   scan            result     (k int, v int)

query ITTT
EXPLAIN (TYPES) VALUES (1) UNION VALUES (2)
----
0   select   result          (column1 int)
1   union    result          (column1 int)
2   select   result          (column1 int)
3   values   result          (column1 int)
3   values   row 0, expr 0   (1)[int]
2   select   result          (column1 int)
3   values   result          (column1 int)
3   values   row 0, expr 0   (2)[int]

query ITTT
EXPLAIN (TYPES) SELECT DISTINCT k FROM t
----
0   select          result     (k int)
1   distinct        result     (k int)
2   render/filter   result     (k int)
2   render/filter   render 0   (k)[int]
3   scan            result     (k int, v int)

query ITTT
EXPLAIN (TYPES,NOEXPAND) SELECT DISTINCT k FROM t
----
0   select          result     (k int)
1   render/filter   result     (k int)
1   render/filter   render 0   (k)[int]
2   scan            result     (k int, v int)

query ITTT
EXPLAIN (TYPES) SELECT v FROM t ORDER BY v
----
0   select          result     (v int)
1   sort            result     (v int)
2   render/filter   result     (v int)
2   render/filter   render 0   (v)[int]
3   scan            result     (k int, v int)

query ITTT
EXPLAIN (TYPES,NOEXPAND) SELECT v FROM t ORDER BY v
----
0   select          result     (v int)
1   render/filter   result     (v int)
1   render/filter   render 0   (v)[int]
2   scan            result     (k int, v int)

query ITTT
EXPLAIN (TYPES) SELECT v FROM t LIMIT 1
----
0   select          result     (v int)
1   limit           result     (v int)
1   limit           count      (1)[int]
2   render/filter   result     (v int)
2   render/filter   render 0   (v)[int]
3   scan            result     (k int, v int)

query ITTT
EXPLAIN (TYPES,NOEXPAND) SELECT v FROM t LIMIT 1
----
0   select          result     (v int)
0   select          count      (1)[int]
1   render/filter   result     (v int)
1   render/filter   render 0   (v)[int]
2   scan            result     (k int, v int)

statement ok
CREATE TABLE tt (x INT, y INT, INDEX a(x), INDEX b(y))

query ITTT
EXPLAIN (TYPES) SELECT * FROM tt WHERE x < 10 AND y > 10
----
0   select          result     (x int, y int)
1   render/filter   result     (x int, y int)
1   render/filter   render 0   (x)[int]
1   render/filter   render 1   (y)[int]
2   index-join      result     (x int, y int, rowid[hidden] int)
3   scan            result     (x int, y int, rowid[hidden] int)
3   scan            filter     ((x)[int] < (10)[int])[bool]
3   scan            result     (x int, y int, rowid[hidden] int)
3   scan            filter     ((y)[int] > (10)[int])[bool]

query ITTT
EXPLAIN (TYPES,NOEXPAND) SELECT * FROM tt WHERE x < 10 AND y > 10
----
0   select          result     (x int, y int)
1   render/filter   result     (x int, y int)
1   render/filter   filter     ((((x)[int] < (10)[int])[bool]) AND (((y)[int] > (10)[int])[bool]))[bool]
1   render/filter   render 0   (x)[int]
1   render/filter   render 1   (y)[int]
2   scan            result     (x int, y int, rowid[hidden] int)

query ITTT
EXPLAIN (TYPES) SELECT $1 + 2 AS a
----
0      select          result     (a int)
1      render/filter   result     (a int)
1      render/filter   render 0   (($1)[int] + (2)[int])[int]
2      empty           result     ()

query ITTT
EXPLAIN (TYPES) SELECT ABS(2-3) AS a
----
0      select          result     (a int)
1      render/filter   result     (a int)
1      render/filter   render 0   (abs((-1)[int]))[int]
2      empty           result     ()

query ITTT
EXPLAIN (TYPES, NORMALIZE) SELECT ABS(2-3) AS a
----
0      select          result     (a int)
1      render/filter   result     (a int)
1      render/filter   render 0   (1)[int]
2      empty           result     ()
