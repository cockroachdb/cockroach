# LogicTest: 5node

# First, we set up two data tables:
#   - NumToSquare maps integers from 1 to 100 to their squares
#   - NumToStr maps integers from 1 to 100*100 to strings; this table is
#     split and distributed to all nodes.
statement ok
CREATE TABLE NumToSquare (x INT PRIMARY KEY, xsquared INT)

statement ok
INSERT INTO NumToSquare SELECT i, i*i FROM GENERATE_SERIES(1, 100) AS g(i)

statement ok
CREATE TABLE NumToStr (y INT PRIMARY KEY, str STRING)

# Split into five parts.
statement ok
ALTER TABLE NumToStr SPLIT AT SELECT (i * 100 * 100 / 5)::int FROM GENERATE_SERIES(1, 4) AS g(i)

# Relocate the five parts to the five nodes.
statement ok
ALTER TABLE NumToStr TESTING_RELOCATE
  SELECT ARRAY[i+1], (i * 100 * 100 / 5)::int FROM GENERATE_SERIES(0, 4) AS g(i)

statement ok
INSERT INTO NumToStr SELECT i, to_english(i) FROM GENERATE_SERIES(1, 100*100) AS g(i)

# Verify data placement.
query TTTI colnames
SHOW TESTING_RANGES FROM TABLE NumToSquare
----
Start Key  End Key  Replicas  Lease Holder
NULL       NULL     {1}       1

query TTTI colnames
SHOW TESTING_RANGES FROM TABLE NumToStr
----
Start Key  End Key  Replicas  Lease Holder
NULL       /2000    {1}       1
/2000      /4000    {2}       2
/4000      /6000    {3}       3
/6000      /8000    {4}       4
/8000      NULL     {5}       5

# Ready to roll!
statement ok
SET DISTSQL = ON


#
# -- Basic tests --
#

# Query with a restricted span.

# We hardcode the plan for the testcase that follows to make it easier to debug
# errors caused by changing planning logic.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT 5, 2+y, * FROM NumToStr WHERE y <= 10 ORDER BY str]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJykkLFqxDAQRPt8hdn2VMQmaVS5dXMJznVBhWINwWBrzWoNCYf_PVgikLgIgQM1O7PzdtCVIgec_YxE9pVqcoYW4QEpsexSWejCB9l7Q2NcVt1lZ2hgAdkr6agTyNLFv03o4QOEDAWoH6cMXWScvXy2cZ2Vk-5ujxggtnqsGmttd75Up6qt82vIbYZ41e9Lm_l_hxcWPZ5vH063IHukhWPCL-iR5wwhvKN8WOJVBjwLDxlexqe8nYWApMWty9DFYu21fobrP8PNIey2u68AAAD___YRmI8=

query IIIT
SELECT 5, 2+y, * FROM NumToStr WHERE y <= 10 ORDER BY str
----
5 10  8 eight
5  7  5 five
5  6  4 four
5 11  9 nine
5  3  1 one
5 12 10 one-zero
5  9  7 seven
5  8  6 six
5  5  3 three
5  4  2 two


# Query which requires a full table scan.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT 5, 2 + y, * FROM NumToStr WHERE y % 1000 = 0 ORDER BY str]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzUlMFLwzAUxu_-FeEDQVmEpuvmDAg9CbtMmbtJD7V5SKFrSpKCMva_S1tFN0Y61lNhh-W9973f99Lwdii1olW6JQv5BgGOEBxTcETgmCHhqIzOyFptmpJOsFSfkAFHXla1a8IJR6YNQe7gclcQJDbpe0FrShUZcChyaV60kMrk29R8xWW9ddq6JvuUF46MZDexYNdMBEEgpVyuNrfskf38BceaStVUzVjYxdiExaL9hUj2HLp2v372_Hynr9q4Y5NxNDm75V8nbRQZUqdaneCu9J2uDmp9RDGa6-5xesl1h6MZvsfpJcNPRzN8j9NLho9GM3yP06Fb5kTLNdlKl5a8OyThIPVB3aKyujYZvRidtc2743Nb3QYUWddlRXdYll2qsfVfLLzi8EAsjsWhn9yDnnrVkV8cDfE984rnfvJ8CPneK174yYsh5Af_twp6non_kR2zk_3VdwAAAP__D9e9OA==

query IIIT
SELECT 5, 2 + y, * FROM NumToStr WHERE y % 1000 = 0 ORDER BY str
----
5  8002  8000 eight-zero-zero-zero
5  5002  5000 five-zero-zero-zero
5  4002  4000 four-zero-zero-zero
5  9002  9000 nine-zero-zero-zero
5  1002  1000 one-zero-zero-zero
5 10002 10000 one-zero-zero-zero-zero
5  7002  7000 seven-zero-zero-zero
5  6002  6000 six-zero-zero-zero
5  3002  3000 three-zero-zero-zero
5  2002  2000 two-zero-zero-zero

# Query with a restricted span + filter.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT str FROM NumToStr WHERE y < 10 AND str LIKE '%e%' ORDER BY y]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJyMjzFLBDEQhXt_xfLguCaFZ5nqGpVFuZP1OkkRN4MEdjPLZALKsf9dNsFCK8v3vsebN1ckDnTyM2XYNxzgDBbhkXJm2awW6MMn7K1BTEvRzXYGIwvBXqFRJ4LFxb9PNJAPJDAIpD5OtXSROHv5OqYyK2fd6EOclMR2x7vuuX-67_Y72u2tta-XoT89wuBcdKNwqwEX_bm6mv_vGSgvnDL9GvO3zxlQ-KD2aeYiI70Ij7W8yXNNVyNQ1kYPTfSpodWtN98BAAD__-X-bJQ=


query T
SELECT str FROM NumToStr WHERE y < 10 AND str LIKE '%e%' ORDER BY y
----
one
three
five
seven
eight
nine

# Query which requires a full table scan.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT str FROM NumToStr WHERE y % 1000 = 0 AND str LIKE '%i%' ORDER BY y]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzUlEtr4zAQx-_7KcQfQhJ2Fiwn2YNgwQt9YFqckuZWfHCtoRgcy0gytAR_92KbPlLalJKTb57Hz_OTYLRHZTQn2Y4d1B0kCCEICxCWIKyQEmprcnbO2K5lAGL9CBUQiqpufJdOCbmxDLWHL3zJUNhm9yVvONNsQdDss6Lsh9S22GX2KaqanTfOd9WLovRslZjNIikmQgZBoJSKk-1c_BOvn_-TMzGLQnEdX52L6aSYTJVSt9tNnFzOQVg3XokopEgibQmm8S9yLX2h_WZrrGbL-tA0Cn8jbT85W2L-mPqg99hEOc6LCsepvRin9nKc2t88Aht2takcH92VlMD6gYeFdKaxOd9Yk_c_H8J1390nNDs_VOUQxFVfkp3We1gehf8ewMFHODxl8uIUeHkKvPoRnLa_ngMAAP__tYTcPw==

query T
SELECT str FROM NumToStr WHERE y % 1000 = 0 AND str LIKE '%i%' ORDER BY y
----
five-zero-zero-zero
six-zero-zero-zero
eight-zero-zero-zero
nine-zero-zero-zero


#
# -- Join tests --
#

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT x, str FROM NumToSquare JOIN NumToStr ON y = xsquared]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzUlcFq3DAQhu99ijCnBFRYyd5u11DwsekhKaG34oOymsYGr-VKMjSEffeydiFZ73amRj3YR9v65Jnvh5kXaKzBO71HD9l3kCBAgYAEBKQgYA2FgNbZHXpv3fHIANyaX5CtBFRN24Xj60LAzjqE7AVCFWqEDL7pxxofUBt0IMBg0FXd_6R11V6757zp9sH6n512CALuu5Bd5VLkCoqDANuFP1e_3vj4fFVqX57e1p8vDuK_FxZcTFWSrOqV7hrrDDo0J3xPckcutPZZ-_KLrZpxZzX-CNe5uvnkqqcyXOfy5m1v6ai3mLovFHVn39t23N5ffydnGZ5caHhqljbVQm0ms7SZLNRmOkub6UJtMkvvAX1rG4_kHC4EoHnCoXVvO7fDr87u-suHx_v-dD8PDfowfFXDw20zfDqW9e_wOgbexMDbGFhKmpYTjKlp8DoG3sTA2xh4ZOyMVmN69ZZOaN0JCctT36sxncaERcNMWDTMhEXDTFg0zIW1jgnrQ4xuGmZ00zCjm4YZ3TTM6d7E6P4Yo5uGGd00zOimYUY3DXO6tzG65ZRleT5Dp2zLqTQ3_Kfsy6k051yebQ9SenF49zsAAP__k0qWbw==

# Save the result of the following statement to a label.
query IT rowsort label-sq-str
SELECT i, to_english(i*i) FROM GENERATE_SERIES(1, 100) AS g(i)

# Compare the results of this query to the one above.
query IT rowsort label-sq-str
SELECT x, str FROM NumToSquare JOIN NumToStr ON y = xsquared


#
# -- Aggregation tests --
#

# Sum the numbers in the NumToStr table. The expected result is
#  n * n * (n * n + 1) / 2
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT SUM(y) FROM NumToStr]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJy8k09Lw0AQxe9-CnknhT1007TWnOqxB61UPUkOMTuEQJsN-weUku8uySLaILuFLTnuzr73m5fMHNFIQU_FgTSyd3AwJGCYgyEFwwI5Q6tkSVpL1T9xgo34RDZjqJvWmv46ZyilImRHmNrsCRlei4897agQpMAgyBT1foC0qj4U6mvd2IOR2vTVrTXZ9Zoj7xikNT-mHTsf91BViqrCyBHt5e3xZs1vz7b-dbSNVIIUiRPDvLswnE_7GQO4mCTJtEkCuJgk82mTBHAxSdJpkwRwl1rSf6x3pFvZaBot66lfzkCiIrfnWlpV0rOS5WDujtvh9XAhSBtX5e6waVypb-uvmHvFyYmYj8WJnxxAz73q1C9OY_peeMVLP3kZQ77zild-8iqGfO__V7PAmPiHbMzOu6vvAAAA__9Sb4l4

query R
SELECT SUM(y) FROM NumToStr
----
50005000

# Count the rows in the NumToStr table.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT COUNT(*) FROM NumToStr]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJy8k8Fq8zAQhO__U_zMqQUdYsdJU59SesqhSUmTUzHFtRZjSCSzkqEl-N2LbUobU-QUFR-l1cy3I2lPUFrSOj2SQfyMAAIhBKYQiCAwQyJQss7IGM3NkU6wkm-IJwKFKivbbCcCmWZCfIIt7IEQY5e-HmhLqSSGgCSbFocWUnJxTPl9qaqj1cY21S0pSRz_nyCpBXRlP21rcTnwLs-Z8tTqHu9-s1_vrpbB9cXmX56V0iyJSZ5ZJvUv8E_7h5fVBQ0EY1_nANDvOsOx0wwA_dJMx04zAPRLE42dZgD4d4P7g_mWTKmVod4An_slAiRz6mbf6IozemSdtebdctOebjckGdtVg26xUl2paeu7OHCKwzNx0BeHbvIAeupUR25x5NP3zCmeu8lzH_KNU7xwkxc-5Fv3W00Gvon7k_XZSf3vIwAA__8NEpIp

query I
SELECT COUNT(*) FROM NumToStr
----
10000

# Count how many numbers contain the digit 5.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT COUNT(*) FROM NumToStr WHERE str LIKE '%five%']
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzMlMFLwzAUxu_-FePBmEIOa9fNmdNEVIq6SbedpEhtnqXQJSVJRRn936UtoiuSTuKhx-a97_t9Lw1vD1wwXEY7VECfwAECLhCYAAEPCEwhJJBLEaNSQlYtjcBn70DHBFKeF7o6DgnEQiLQPehUZwgUNtFLhgFGDCUQYKijNKshuUx3kfxY8GKnhdJV9SbNNEo6WLiDe__uejAavqZvOBxRStebwF_eAoEAOat6xhCWBEShv9AlOT7UZZJITCItWpmuVtvl5nThnB1t_u1ZcCEZSmQHlmH5B_x6-_DsHxHA6eOVd4Syu3K3jxN3hLKbeNLHiTtC2U3s9XHijlD_t0h-MQ9Q5YIrbC2UQ7-QALIEm12kRCFjfJQirs2bz1XdXR8wVLqpOs2Hz5tSFeun2DGK3QOx0xa7ZnIHemJUe2axZ5N7ahTPzOSZDfncKJ6byXMb8oX5X407non5kbXZYXnyGQAA__-8uMMv

# Result calculated here: https://play.golang.org/p/e-YsJRDsXF
query I
SELECT COUNT(*) FROM NumToStr WHERE str LIKE '%five%'
----
3439


#
# -- Limit tests --
#

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT y FROM NumToStr LIMIT 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzMkk1Lw0AQhu_-ivKeR2i-POTUa0FaKd5kDzE7yEKyE_YDlJL_LkkQTami5BCPOzPPPLPwnmFF86Fq2aN8QgJCCkIGQg5CAUXonNTsvbhhZAL2-hXllmBsF8NQVoRaHKM8I5jQMEo8Vs8Nn7jS7EDQHCrTjJLOmbZybzsb2yA-DN1jDOVmN9jvTWvCpoDqCRLDx_qevhF_-qIVp9mxntlUf-W0g9xKNz_qN95krQ-na4mztcT5f8jWFfGJfSfW80XG5vsUgfULT_H0El3ND07qcfn0PI7TY0GzD1M3mR57O7aS4ayvcPIjfDeDt5dwusScLYHzJXDxJ1j1N-8BAAD__9IBmWo=

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT y FROM NumToStr ORDER BY y LIMIT 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html?eJzMkk1Lw0AQhu_-ivJeHaGbDw855VqQVoo32UPMDrKQZMLuBpSS_y5JEE2pouSQHndmnveZhTmhEcP7omaP7BkKhAiEGIQEhBSa0Dop2Xtxw8gE7Mwbsi3BNm0XhrImlOIY2QnBhoqR4al4qfjIhWEHguFQ2GqUtM7WhXvPm64O4sPQPXQh2-SD_cHWNmxS6J4gXfiM7-kH8ZdPnGHHZu7K1S10f2G7vdxJO5_9i1qt9edoLXG8lji5hvO6ID6yb6XxPLOe52kCm1eeLtRL50p-dFKO4dPzME6PBcM-TF01PXbN2FLDWt9h9St8P4O353C0xBwvgZMlcPovWPc3HwEAAP__mo2ZZw==

query I
SELECT y FROM NumToStr ORDER BY y LIMIT 5
----
1
2
3
4
5

query I
SELECT y FROM NumToStr ORDER BY y OFFSET 5 LIMIT 2
----
6 7

query I
SELECT y FROM NumToStr ORDER BY y LIMIT 0
----

query I
SELECT * FROM (SELECT y FROM NumToStr LIMIT 3) AS a ORDER BY y OFFSET 3
----

query I
SELECT y FROM NumToStr ORDER BY str LIMIT 5
----
8
88
888
8888
8885

query I
SELECT y FROM (SELECT y FROM NumToStr ORDER BY y LIMIT 5) AS a WHERE y <> 2
----
1
3
4
5

statement error memory budget exceeded
SELECT y, str, REPEAT('test', y) FROM NumToStr ORDER BY str

# Verify we use the "top K" strategy and thus don't hit OOM as above.
statement ok
SELECT y, str, REPEAT('test', y) FROM NumToStr ORDER BY str LIMIT 10
