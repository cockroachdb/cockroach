filter
builtins:
----

subtest at_ident

comp at=8
select xor
----
ii'
  ^
--
builtins: completing for "xor" (7,10)
--sql:
WITH p AS (SELECT DISTINCT proname FROM pg_catalog.pg_proc)
SELECT $4:::STRING || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
--placeholders: []interface {}{"xor", 7, 10, ""}

comp at=12
select xor
----
ii_
  ^
--
builtins: completing for "" (12,12)
--sql:
WITH p AS (SELECT DISTINCT proname FROM pg_catalog.pg_proc)
SELECT $4:::STRING || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
--placeholders: []interface {}{"", 12, 12, ""}

subtest end

subtest after_period_unknown

comp at=10
select a.xor
----
ii.i'
    ^
--
builtins: not completing

comp at=10
select a.
----
ii._
   ^
--
builtins: not completing

subtest end

subtest after_vschema

comp at=22
select crdb_internal.xor
----
ii.i'
    ^
--
builtins: completing for "crdb_internal.xor" (7,24)
--sql:
WITH p AS (SELECT DISTINCT proname FROM pg_catalog.pg_proc)
SELECT $4:::STRING || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
--placeholders: []interface {}{"crdb_internal.xor", 7, 24, ""}

comp at=21
select crdb_internal.
----
ii.'
   ^
--
builtins: completing for "crdb_internal." (7,21)
--sql:
WITH p AS (SELECT DISTINCT proname FROM pg_catalog.pg_proc)
SELECT $4:::STRING || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
--placeholders: []interface {}{"crdb_internal.", 7, 21, ""}


comp at=20
select pg_catalog.xor
----
ii.i'
    ^
--
builtins: completing for "xor" (7,21)
--sql:
WITH p AS (SELECT DISTINCT proname FROM pg_catalog.pg_proc)
SELECT $4:::STRING || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
--placeholders: []interface {}{"xor", 7, 21, "pg_catalog."}

comp at=18
select pg_catalog.
----
ii.'
   ^
--
builtins: completing for "" (7,18)
--sql:
WITH p AS (SELECT DISTINCT proname FROM pg_catalog.pg_proc)
SELECT $4:::STRING || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
--placeholders: []interface {}{"", 7, 18, "pg_catalog."}


comp at=27
select information_schema.xor
----
ii.i'
    ^
--
builtins: completing for "information_schema.xor" (7,29)
--sql:
WITH p AS (SELECT DISTINCT proname FROM pg_catalog.pg_proc)
SELECT $4:::STRING || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
--placeholders: []interface {}{"information_schema.xor", 7, 29, ""}

comp at=26
select information_schema.
----
ii.'
   ^
--
builtins: completing for "information_schema." (7,26)
--sql:
WITH p AS (SELECT DISTINCT proname FROM pg_catalog.pg_proc)
SELECT $4:::STRING || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
--placeholders: []interface {}{"information_schema.", 7, 26, ""}

subtest end

subtest quoted_ident

comp at=21
select "pg_catalog".xor
----
ii.i'
    ^
--
builtins: completing for "xor" (7,23)
--sql:
WITH p AS (SELECT DISTINCT proname FROM pg_catalog.pg_proc)
SELECT $4:::STRING || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
--placeholders: []interface {}{"xor", 7, 23, "pg_catalog."}

# Quoted uppercase is an entire schema entirely.
# Not completing in that case.
comp at=22
select "PG_CATALOG".xor
----
ii.i'
    ^
--
builtins: not completing


subtest end
