filter
functions:
----

subtest at_ident

comp at=8
select xor
----
ii'
  ^
--
functions: completing for "xor" (7,10)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"xor", 7, 10, ""}

comp at=12
select xor
----
ii_
  ^
--
functions: completing for "" (12,12)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"", 12, 12, ""}

subtest end

subtest after_period_unknown

comp at=10
select a.xor
----
ii.i'
    ^
--
functions: completing for "a.xor" (7,12)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"xor", 7, 12, "a"}

comp at=10
select a.
----
ii._
   ^
--
functions: completing for "a." (7,9)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"", 7, 9, "a"}

subtest end

subtest after_vschema

comp at=22
select crdb_internal.xor
----
ii.i'
    ^
--
functions: completing for "crdb_internal.xor" (7,24)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"xor", 7, 24, "crdb_internal"}

comp at=21
select crdb_internal.
----
ii.'
   ^
--
functions: completing for "crdb_internal." (7,21)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"", 7, 21, "crdb_internal"}


comp at=20
select pg_catalog.xor
----
ii.i'
    ^
--
functions: completing for "pg_catalog.xor" (7,21)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"xor", 7, 21, "pg_catalog"}

comp at=18
select pg_catalog.
----
ii.'
   ^
--
functions: completing for "pg_catalog." (7,18)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"", 7, 18, "pg_catalog"}


comp at=27
select information_schema.xor
----
ii.i'
    ^
--
functions: completing for "information_schema.xor" (7,29)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"xor", 7, 29, "information_schema"}

comp at=26
select information_schema.
----
ii.'
   ^
--
functions: completing for "information_schema." (7,26)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"", 7, 26, "information_schema"}

subtest end

subtest quoted_ident

comp at=21
select "pg_catalog".xor
----
ii.i'
    ^
--
functions: completing for "pg_catalog.xor" (7,23)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"xor", 7, 23, "pg_catalog"}

# Quoted uppercase is an entire schema entirely.
comp at=22
select "PG_CATALOG".xor
----
ii.i'
    ^
--
functions: completing for "PG_CATALOG.xor" (7,23)
--sql:
WITH p AS (SELECT DISTINCT proname, nspname FROM pg_catalog.pg_proc JOIN pg_catalog.pg_namespace n ON n.oid = pronamespace)
SELECT $4:::STRING || IF(length($4) > 0, '.', '') || proname || '(' AS completion,
       'functions' AS category,
       substr(COALESCE((SELECT details
          FROM "".crdb_internal.builtin_functions f2
         WHERE f2.function = p.proname
         LIMIT 1), ''), e'[^\n]{0,80}') AS description,
       $2:::INT AS start,
       $3:::INT AS end
  FROM p
 WHERE left(proname, length($1:::STRING)) = $1:::STRING
 AND ((length($4) > 0 AND $4 = nspname) OR (length($4) = 0 AND nspname = ANY current_schemas(true)))
--placeholders: []interface {}{"xor", 7, 23, "PG_CATALOG"}


subtest end
