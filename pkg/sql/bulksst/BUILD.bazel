load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "bulksst",
    srcs = [
        "sst_file_allocator.go",
        "sst_writer.go",
    ],
    embed = [":bulksst_go_proto"],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/bulksst",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/cloud",
        "//pkg/kv/kvpb",
        "//pkg/kv/kvserver/kvserverbase",
        "//pkg/roachpb",
        "//pkg/settings",
        "//pkg/settings/cluster",
        "//pkg/storage",
        "//pkg/util/hlc",
        "@com_github_cockroachdb_pebble//objstorage",
        "@com_github_cockroachdb_pebble//objstorage/objstorageprovider",
        "@com_github_cockroachdb_pebble//vfs",
    ],
)

go_test(
    name = "bulksst_test",
    srcs = [
        "main_test.go",
        "sst_writer_test.go",
    ],
    deps = [
        ":bulksst",
        "//pkg/base",
        "//pkg/roachpb",
        "//pkg/security/securityassets",
        "//pkg/security/securitytest",
        "//pkg/server",
        "//pkg/storage",
        "//pkg/testutils/serverutils",
        "//pkg/testutils/testcluster",
        "//pkg/util/intsets",
        "//pkg/util/leaktest",
        "//pkg/util/randutil",
        "@com_github_cockroachdb_pebble//sstable",
        "@com_github_cockroachdb_pebble//vfs",
        "@com_github_stretchr_testify//require",
    ],
)

proto_library(
    name = "bulksst_proto",
    srcs = ["sst_info.proto"],
    strip_import_prefix = "/pkg",
    visibility = ["//visibility:public"],
    deps = ["@com_github_gogo_protobuf//gogoproto:gogo_proto"],
)

go_proto_library(
    name = "bulksst_go_proto",
    compilers = ["//pkg/cmd/protoc-gen-gogoroach:protoc-gen-gogoroach_compiler"],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/bulksst",
    proto = ":bulksst_proto",
    visibility = ["//visibility:public"],
    deps = ["@com_github_gogo_protobuf//gogoproto"],
)
