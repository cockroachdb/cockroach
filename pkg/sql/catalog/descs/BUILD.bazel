load("//build/bazelutil/unused_checker:unused.bzl", "get_x_data")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "descs",
    srcs = [
        "collection.go",
        "database.go",
        "descriptor.go",
        "direct.go",
        "dist_sql_type_resolver.go",
        "errors.go",
        "factory.go",
        "function.go",
        "hydrate.go",
        "leased_descriptors.go",
        "object.go",
        "schema.go",
        "stored_descriptors.go",
        "synthetic_descriptors.go",
        "system_database_namespace_cache.go",
        "system_table.go",
        "table.go",
        "table_name.go",
        "temporary_descriptors.go",
        "txn.go",
        "type.go",
        "validate.go",
        "virtual_descriptors.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/catalog/descs",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/base",
        "//pkg/clusterversion",
        "//pkg/config/zonepb",
        "//pkg/keys",
        "//pkg/kv",
        "//pkg/settings",
        "//pkg/settings/cluster",
        "//pkg/spanconfig",
        "//pkg/sql/catalog",
        "//pkg/sql/catalog/bootstrap",
        "//pkg/sql/catalog/catalogkeys",
        "//pkg/sql/catalog/dbdesc",
        "//pkg/sql/catalog/descpb",
        "//pkg/sql/catalog/funcdesc",
        "//pkg/sql/catalog/hydrateddesc",
        "//pkg/sql/catalog/internal/catkv",
        "//pkg/sql/catalog/internal/validate",
        "//pkg/sql/catalog/lease",
        "//pkg/sql/catalog/nstree",
        "//pkg/sql/catalog/resolver",
        "//pkg/sql/catalog/schemadesc",
        "//pkg/sql/catalog/systemschema",
        "//pkg/sql/catalog/tabledesc",
        "//pkg/sql/catalog/typedesc",
        "//pkg/sql/pgwire/pgcode",
        "//pkg/sql/pgwire/pgerror",
        "//pkg/sql/sem/catconstants",
        "//pkg/sql/sem/tree",
        "//pkg/sql/sessiondata",
        "//pkg/sql/sessiondatapb",
        "//pkg/sql/sqlerrors",
        "//pkg/sql/sqlliveness",
        "//pkg/sql/sqlutil",
        "//pkg/sql/types",
        "//pkg/util/encoding",
        "//pkg/util/hlc",
        "//pkg/util/iterutil",
        "//pkg/util/log",
        "//pkg/util/mon",
        "//pkg/util/retry",
        "//pkg/util/syncutil",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_cockroachdb_redact//:redact",
        "@com_github_lib_pq//oid",
    ],
)

go_test(
    name = "descs_test",
    size = "small",
    srcs = [
        "collection_test.go",
        "errors_test.go",
        "helpers_test.go",
        "main_test.go",
        "txn_external_test.go",
        "txn_with_executor_datadriven_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":descs"],
    deps = [
        "//pkg/base",
        "//pkg/keys",
        "//pkg/kv",
        "//pkg/kv/kvserver",
        "//pkg/roachpb",
        "//pkg/security/securityassets",
        "//pkg/security/securitytest",
        "//pkg/security/username",
        "//pkg/server",
        "//pkg/settings/cluster",
        "//pkg/sql",
        "//pkg/sql/catalog",
        "//pkg/sql/catalog/catalogkeys",
        "//pkg/sql/catalog/catpb",
        "//pkg/sql/catalog/descpb",
        "//pkg/sql/catalog/desctestutils",
        "//pkg/sql/catalog/internal/catkv",
        "//pkg/sql/catalog/lease",
        "//pkg/sql/catalog/nstree",
        "//pkg/sql/catalog/tabledesc",
        "//pkg/sql/parser",
        "//pkg/sql/privilege",
        "//pkg/sql/sem/catid",
        "//pkg/sql/sem/tree",
        "//pkg/sql/sessiondata",
        "//pkg/sql/sqlutil",
        "//pkg/sql/tests",
        "//pkg/sql/types",
        "//pkg/testutils",
        "//pkg/testutils/serverutils",
        "//pkg/testutils/sqlutils",
        "//pkg/testutils/testcluster",
        "//pkg/util/leaktest",
        "//pkg/util/log",
        "//pkg/util/mon",
        "//pkg/util/randutil",
        "@com_github_cockroachdb_datadriven//:datadriven",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_cockroachdb_redact//:redact",
        "@com_github_lib_pq//oid",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
    ],
)

get_x_data(name = "get_x_data")
