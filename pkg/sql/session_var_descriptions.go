// Copyright 2024 The Cockroach Authors.
//
// Use of this software is governed by the CockroachDB Software License
// included in the /LICENSE file.

package sql

// sessionVarDescriptions contains the descriptions for session variables.
// These descriptions are sourced from the proto files and documentation.
// They will be merged into the sessionVar structs in vars.go.
var sessionVarDescriptions = map[string]string{
	"application_name":                                 "Sets the name of the application running the current session. Used for logging and per-application statistics.",
	"avoid_buffering":                                  "Indicates that the returned data should not be buffered by conn executor. This is currently used by replication primitives to ensure the data is flushed to the consumer immediately.",
	"bytea_output":                                     "Controls how to encode byte arrays when converting to string.",
	"client_encoding":                                  "Controls the client-side character encoding. Only UTF8 is supported.",
	"client_min_messages":                              "Controls which message levels are sent to the client.",
	"database":                                         "Sets the current database for resolving names in queries.",
	"datestyle":                                        "Controls the display format for date and time values as well as the rules for interpreting ambiguous date inputs.",
	"deadlock_timeout":                                 "Sets the amount of time to wait on a lock before checking for deadlock. If set to 0, there is no timeout.",
	"default_int_size":                                 "Specifies the size in bits or bytes (preferred) of how the INT type should be parsed.",
	"default_tablespace":                               "Supported only for pg compatibility - CockroachDB has no notion of tablespaces.",
	"default_transaction_isolation":                    "Sets the transaction isolation level of new transactions.",
	"default_transaction_priority":                     "Sets the default priority of newly created transactions.",
	"default_transaction_read_only":                    "Sets whether new transactions are read-only by default.",
	"default_transaction_use_follower_reads":           "Sets whether new transactions use follower reads by default.",
	"direct_columnar_scans_enabled":                    "Controls whether the COL_BATCH_RESPONSE scan format should be used for ScanRequests and ReverseScanRequests whenever possible.",
	"disable_plan_gists":                               "Controls whether plan gists are disabled.",
	"index_recommendations_enabled":                    "Controls whether index recommendations are enabled.",
	"distsql":                                          "Controls whether distributed SQL execution is enabled.",
	"distsql_workmem":                                  "Determines how much RAM (in bytes) a single operation of a single query can use before it has to spill to disk.",
	"experimental_distsql_planning":                    "Controls whether experimental distributed SQL planning is enabled.",
	"disable_partially_distributed_plans":              "Controls whether partially distributed plans are disabled.",
	"distribute_group_by_row_count_threshold":          "Sets the minimum number of rows estimated to be processed by the GroupBy operator to distribute the plan.",
	"distribute_sort_row_count_threshold":              "Sets the minimum number of rows estimated to be processed by the Sort operator to distribute the plan.",
	"distribute_scan_row_count_threshold":              "Sets the minimum number of rows estimated to be read by the Scan operator to distribute the plan.",
	"always_distribute_full_scans":                     "Controls whether full table scans always force the plan to be distributed, regardless of the estimated row count.",
	"distribute_join_row_count_threshold":              "Sets the minimum number of rows estimated to be processed from both inputs by the hash or merge join to distribute the plan.",
	"disable_vec_union_eager_cancellation":             "Disables the eager cancellation that is performed by the vectorized engine when transitioning into the draining state in some cases.",
	"testing_optimizer_inject_panics":                  "Controls whether random panics are injected during optimization to test error-propagation.",
	"optimizer":                                        "Controls whether the cost-based optimizer is enabled.",
	"foreign_key_cascades_limit":                       "Sets the maximum number of cascading operations for foreign key actions.",
	"optimizer_use_forecasts":                          "Controls whether the optimizer should use statistics forecasts for cardinality estimation.",
	"optimizer_use_merged_partial_statistics":          "Controls whether the optimizer should use statistics merged from partial and full statistics for cardinality estimation.",
	"optimizer_use_histograms":                         "Controls whether the optimizer should use histogram statistics for cardinality estimation.",
	"optimizer_use_multicol_stats":                     "Controls whether the optimizer should use multi-column statistics for cardinality estimation.",
	"optimizer_use_not_visible_indexes":                "Controls whether the optimizer can still choose to use not visible indexes for query plans.",
	"optimizer_merge_joins_enabled":                    "Controls whether the optimizer should explore query plans with merge joins.",
	"optimizer_use_improved_zigzag_join_costing":       "Controls whether the optimizer should use improved logic in the cost model for zigzag joins.",
	"locality_optimized_partitioned_index_scan":        "Controls whether locality-optimized partitioned index scans are enabled.",
	"enable_implicit_select_for_update":                "Controls whether FOR UPDATE locking may be used during the row-fetch phase of mutation statements.",
	"enable_insert_fast_path":                          "Controls whether the fast path for INSERT operations with VALUES input may be used.",
	"serial_normalization":                             "Controls how SERIAL columns are normalized.",
	"stub_catalog_tables":                              "Controls whether catalog tables are stubbed out.",
	"force_savepoint_restart":                          "Overrides the default SAVEPOINT behavior for compatibility with certain ORMs.",
	"intervalstyle":                                    "Controls the display format for interval values.",
	"intervalstyle_enabled":                            "Legacy setting that no longer has any effect. Always true.",
	"is_superuser":                                     "Indicates whether the current user has superuser privileges.",
	"system_identity":                                  "Indicates the original name of the client presented to pgwire before it was mapped to a SQL identifier.",
	"large_full_scan_rows":                             "Sets the estimated row count at which a full scan is considered large and worthy of logging or disabling.",
	"locality":                                         "The locality of the current node.",
	"max_identifier_length":                            "The maximum length allowed for identifiers.",
	"node_id":                                          "The ID of the current node.",
	"results_buffer_size":                              "Specifies the size at which the pgwire results buffer will self-flush.",
	"check_function_bodies":                            "Controls whether functions are validated during function creation.",
	"prefer_lookup_joins_for_fks":                      "Causes foreign key operations to prefer lookup joins.",
	"role":                                             "The current role for the session.",
	"strict_ddl_atomicity":                             "When enabled, causes errors when DDL operations inside an explicit transaction cannot be guaranteed to be performed atomically, preventing partial transaction commits.",
	"autocommit_before_ddl":                            "Causes any DDL statement received during a multi-statement transaction to auto-commit before executing.",
	"search_path":                                      "Sets the list of namespaces to search when resolving unqualified names.",
	"troubleshooting_mode":                             "Controls whether to refuse collecting and emitting telemetry data for queries.",
	"transaction_timeout":                              "Sets the maximum duration a transaction is permitted to run before cancellation.",
	"default_text_search_config":                       "Sets the default text search configuration used for builtins like to_tsvector and to_tsquery.",
	"ssl_renegotiation_limit":                          "Sets the limit for SSL renegotiation.",
	"authentication_method":                            "The authentication method used for the session.",
	"ssl":                                              "Controls whether SSL is enabled.",
	"crdb_version":                                     "The version of CockroachDB.",
	"session_id":                                       "The unique identifier for the current session.",
	"session_user":                                     "The user name of the current session.",
	"session_authorization":                            "The authorized user for the current session.",
	"password_encryption":                              "The encryption method used for passwords.",
	"standard_conforming_strings":                      "Controls whether strings conform to SQL standard.",
	"escape_string_warning":                            "Controls whether warnings are issued for escape string syntax.",
	"integer_datetimes":                                "Reports whether integer datetime representation is used (always on).",
	"default_table_access_method":                      "Sets the default table access method (compatibility setting).",
	"backslash_quote":                                  "Controls whether backslash can be used as a quote escape character (compatibility setting).",
	"default_with_oids":                                "Controls whether new tables are created with OIDs by default (compatibility setting).",
	"xmloption":                                        "Sets how XML data is to be implicitly parsed (compatibility setting).",
	"max_index_keys":                                   "Reports the maximum number of index keys (always 32).",
	"max_prepared_transactions":                        "Reports the maximum number of prepared transactions (always maximum int32).",
	"server_version":                                   "Reports the server version string.",
	"server_version_num":                               "Reports the server version as an integer.",
	"lc_collate":                                       "Reports the database collation locale.",
	"lc_ctype":                                         "Reports the database character classification locale.",
	"lc_messages":                                      "Sets the language in which messages are displayed (compatibility setting).",
	"lc_monetary":                                      "Sets the locale for formatting monetary amounts (compatibility setting).",
	"lc_numeric":                                       "Sets the locale for formatting numbers (compatibility setting).",
	"lc_time":                                          "Sets the locale for formatting dates and times (compatibility setting).",
	"synchronize_seqscans":                             "Controls whether synchronized sequential scans are enabled (compatibility setting).",
	"row_security":                                     "Controls whether row level security is enabled.",
	"vectorize":                                        "Controls if and when the Executor executes queries using the columnar execution engine. Can be 'off', 'on', or 'experimental_always'.",
	"testing_vectorize_inject_panics":                  "Controls whether random panics are injected into vectorized execution to test error propagation.",
	"server_encoding":                                  "Reports the database encoding (always UTF8). This cannot be changed.",
	"sql_safe_updates":                                 "When enabled, causes errors when the client sends syntax that may have unwanted side effects, like DELETE without a WHERE clause.",
	"timezone":                                         "Sets the timezone used for parsing timestamps.",
	"transaction_isolation":                            "The isolation level of the current transaction. Also allows the isolation level to change as long as queries have not been executed yet.",
	"transaction_priority":                             "The priority level of the current transaction.",
	"transaction_rows_written_err":                     "The limit for the number of rows written by a SQL transaction which - once exceeded - will fail the transaction (0 means disabled).",
	"work_mem":                                         "Determines how much RAM (in bytes) a single operation of a single query can use before it has to spill to disk.",
	"log_timezone":                                     "The timezone used for logging (always UTC).",
	"reorder_joins_limit":                              "Sets the number of joins at which the optimizer should stop attempting to reorder.",
	"enable_zigzag_join":                               "Controls whether the optimizer should try to plan a zigzag join.",
	"transaction_rows_read_err":                        "Sets the limit for the number of rows read by a SQL transaction which - once exceeded - will fail the transaction (0 means disabled).",
	"transaction_rows_read_log":                        "Sets the threshold for the number of rows read by a SQL transaction which - once exceeded - will trigger a logging event.",
	"statement_timeout":                                "Sets the maximum allowed duration for a statement. The query is cancelled if it exceeds this limit.",
	"idle_in_transaction_session_timeout":              "Sets the maximum allowed duration for an idle transaction session. The session is terminated if it exceeds this limit.",
	"lock_timeout":                                     "Sets the maximum amount of time that a query will wait while attempting to acquire a lock or while blocking on an existing lock.",
	"extra_float_digits":                               "Sets the number of digits beyond the standard number to use for float conversions.",
	"default_transaction_quality_of_service":           "Sets the default QoSLevel/WorkPriority of newly created transactions.",
	"tracing":                                          "Controls whether tracing is enabled for the session.",
	"enable_implicit_transaction_for_batch_statements": "Controls whether a batch of statements sent in one query is executed as an implicit transaction.",
	"enable_auto_rehoming":                             "Controls whether auto-rehoming is enabled for REGIONAL BY ROW tables.",
	"disallow_full_table_scans":                        "Controls whether queries that plan full table scans should be rejected.",
	"streamer_enabled":                                 "Controls whether the Streamer API can be used.",
	"unsafe_allow_triggers_modifying_cascades":         "When enabled, allows row-level BEFORE triggers to modify or filter rows that are being updated or deleted as part of a cascading foreign key action. This is unsafe because it can lead to constraint violations.",
	"use_declarative_schema_changer":                   "Controls whether the declarative schema changer is used.",
	"multiple_active_portals_enabled":                  "Determines if pgwire portal execution for certain queries can be paused, allowing interleaved execution with local plans.",
	"copy_fast_path_enabled":                           "Controls whether the optimized copy mode is enabled.",
	"close_cursors_at_commit":                          "Determines whether cursors remain open after their parent transaction closes.",
	"bypass_pcr_reader_catalog_aost":                   "Disables the AOST used by all user queries on the PCR reader catalog.",
	"legacy_varchar_typing":                            "Controls the legacy behavior of allowing some invalid mix-typed comparisons with VARCHAR types.",
	"unbounded_parallel_scans":                         "Controls whether the TableReader DistSQL processors should parallelize scans across ranges.",
	"transaction_read_only":                            "Controls whether the current transaction is read-only.",
	"transaction_status":                               "Reports the current transaction status.",
	"experimental_enable_temp_tables":                  "Controls whether temporary tables can be created.",
	"plan_cache_mode":                                  "Controls the method that the optimizer should use to choose between a custom and generic query plan.",
	"prepared_statements_cache_size":                   "Causes the LRU prepared statements in a session to be automatically deallocated when total prepared statement memory usage exceeds this value.",
	"cost_scans_with_default_col_size":                 "Controls whether the optimizer should cost scans and joins using a default number of bytes per column instead of column sizes from statistics.",
	"optimizer_always_use_histograms":                  "Ensures that the optimizer always uses histograms to calculate statistics if available.",
	"enable_implicit_fk_locking_for_serializable":      "Controls whether FOR SHARE locking is used when checking referenced tables during foreign key operations under serializable isolation.",
	"enable_durable_locking_for_serializable":          "Controls whether durable locking is used for FOR UPDATE/FOR SHARE statements and constraint checks under serializable isolation.",
	"optimizer_use_lock_op_for_serializable":           "Controls whether the optimizer implements SELECT FOR UPDATE and FOR SHARE using the Lock operator under serializable isolation.",
	"enable_shared_locking_for_serializable":           "Controls whether SELECT FOR SHARE statements acquire shared locks under serializable isolation.",
	"max_connections":                                  "Reports the maximum number of concurrent connections.",
	"variable_inequality_lookup_join_enabled":          "Controls whether the optimizer should consider lookup joins with inequality conditions.",
	"testing_optimizer_random_seed":                    "Sets a random seed for the optimizer for testing by initializing an RNG with the given integer.",
	"optimizer_use_improved_join_elimination":          "Allows the optimizer to eliminate joins in more cases by remapping columns from eliminated joins to equivalent columns.",
	"optimizer_use_improved_trigram_similarity_selectivity":     "Controls whether the optimizer should use an improved selectivity estimate for trigram similarity filters.",
	"kv_transaction_buffered_writes_enabled":                    "Controls whether the buffered writes KV transaction protocol is used for user queries on the current session.",
	"propagate_input_ordering":                                  "Controls whether to propagate inner ordering to the outer scope when planning subqueries or CTEs if the outer scope is unordered.",
	"streamer_always_maintain_ordering":                         "Controls whether the SQL users of the Streamer should always maintain ordering, even when not strictly necessary.",
	"optimizer_push_limit_into_project_filtered_scan":           "Controls whether the optimizer should push limit expressions into projects of filtered scans.",
	"optimizer_push_offset_into_index_join":                     "Controls whether the optimizer should push offset expressions into index joins.",
	"parallelize_multi_key_lookup_joins_enabled":                "Controls whether the join reader should parallelize lookup batches. When enabled, this increases the speed of lookup joins with multiple looked up rows at the cost of increased memory usage.",
	"expect_and_ignore_not_visible_columns_in_copy":             "Changes behavior for COPY FROM to expect and ignore not visible column fields.",
	"show_primary_key_constraint_on_not_visible_columns":        "Controls whether SHOW CONSTRAINTS and pg_catalog.pg_constraint include primary key constraints with only hidden columns.",
	"recursion_depth_limit":                                     "Sets the maximum depth that nested trigger-function calls can reach.",
	"allow_role_memberships_to_change_during_transaction":       "Controls whether operations consulting role membership cache retain their lease throughout the transaction.",
	"join_reader_ordering_strategy_batch_size":                  "Sets the size limit on input rows to the joinReader processor (when ordering must be maintained) for a single lookup KV batch.",
	"join_reader_no_ordering_strategy_batch_size":               "Sets the size limit on input rows to the joinReader processor (when ordering is not maintained) for a single lookup KV batch.",
	"distsql_plan_gateway_bias":                                 "Controls how many more partition spans the gateway node can be assigned compared to other nodes when distributing SQL execution.",
	"testing_optimizer_disable_rule_probability":                "Sets the probability of randomly disabling non-essential optimizer transformation rules for testing.",
	"optimizer_use_limit_ordering_for_streaming_group_by":       "Enables optimization for 'SELECT ... GROUP BY ... ORDER BY ... LIMIT n' queries by using the limit ordering to inform group-by requirements.",
	"optimizer_use_improved_disjunction_stats":                  "Controls whether the optimizer should use improved statistics calculations for disjunctive filters.",
	"optimizer_prefer_bounded_cardinality":                      "Instructs the optimizer to prefer query plans where every expression has a bounded cardinality over plans with unbounded cardinality expressions.",
	"optimizer_min_row_count":                                   "Sets a lower bound on row count estimates during query planning, except for expressions with zero cardinality.",
	"optimizer_check_input_min_row_count":                       "Sets a lower bound on row count estimates for the buffer scan of foreign key and uniqueness checks.",
	"join_reader_index_join_strategy_batch_size":                "Sets the size limit on input rows to the joinReader processor when performing index joins for a single lookup KV batch.",
	"experimental_enable_implicit_column_partitioning":          "Controls whether implicit column partitioning can be created.",
	"optimizer_use_improved_split_disjunction_for_joins":        "Enables the optimizer to split more disjunctions (OR expressions) in join conditions by building a UNION of join expressions.",
	"optimizer_use_polymorphic_parameter_fix":                   "Controls whether the optimizer validates routine polymorphic parameters during overload resolution and type-checking.",
	"optimizer_use_provided_ordering_fix":                       "Controls whether the optimizer reconciles provided orderings with required ordering choices to prevent internal errors.",
	"optimizer_use_virtual_computed_column_stats":               "Controls whether the optimizer should use statistics on virtual computed columns for cardinality estimation.",
	"optimizer_prove_implication_with_virtual_computed_columns": "Controls whether the optimizer should use virtual computed columns to prove partial index implication.",
	"testing_optimizer_cost_perturbation":                       "Controls the random cost perturbation factor for producing non-optimal query plans during testing.",
	"optimizer_hoist_uncorrelated_equality_subqueries":          "Controls whether the optimizer hoists uncorrelated subqueries in equality expressions with columns, potentially producing more efficient plans.",
	"pg_trgm.similarity_threshold":                              "Sets the value used to compare trigram similarities for the string % string overload.",
	"experimental_hash_group_join_enabled":                      "Controls whether the physical planner will convert a hash join followed by hash aggregator into a single hash group-join.",
	"null_ordered_last":                                         "Controls whether NULL values are ordered last. When true, NULL values appear after non-NULL values in ordered results.",
	"avoid_full_table_scans_in_mutations":                       "Controls whether mutation queries that plan full table scans should be avoided.",
	"inject_retry_errors_on_commit_enabled":                     "Causes statements inside explicit transactions to return a retry error just before transaction commit for testing retry logic.",
	"enforce_home_region":                                       "Controls whether to error on queries scanning rows from multiple regions or from a different home region than the gateway.",
	"enforce_home_region_follower_reads_enabled":                "Allows using follower reads to dynamically detect and report a query's home region when enforce_home_region is enabled.",
	"copy_write_pipelining_enabled":                             "Controls whether write pipelining is enabled for implicit transactions used by COPY.",
	"copy_num_retries_per_batch":                                "Determines the number of times a single batch of rows can be retried for non-atomic COPY operations.",
	"copy_from_retries_enabled":                                 "Controls whether retries should be internally attempted for retriable errors in COPY FROM operations.",
	"copy_transaction_quality_of_service":                       "Sets the QoSLevel/WorkPriority of the transactions used to evaluate COPY commands.",
	"copy_from_atomic_enabled":                                  "Controls whether implicit transaction COPY FROM operations are atomic or segmented.",
	"enable_super_regions":                                      "Controls whether super region functionality is enabled.",
	"enable_multiple_modifications_of_table":                    "Allows statements with multiple modification subqueries for the same table, risking data corruption if rows are modified multiple times.",
	"alter_primary_region_super_region_override":                "Controls whether the user can modify a primary region that is part of a super region.",
	"experimental_enable_unique_without_index_constraints":      "Controls whether creating unique constraints without an index is allowed.",
	"enable_create_stats_using_extremes":                        "Controls whether CREATE STATISTICS using the EXTREMES method is enabled.",
	"enable_create_stats_using_extremes_bool_enum":              "Controls whether CREATE STATISTICS using the EXTREMES method is enabled for boolean and enum types.",
	"max_retries_for_read_committed":                            "Sets the maximum number of automatic retries for statements in explicit READ COMMITTED transactions that encounter retry errors.",
	"declare_cursor_statement_timeout_enabled":                  "Controls whether statement timeouts apply during DECLARE CURSOR operations.",
	"disable_changefeed_replication":                            "Disables changefeed events from being emitted for data changes made in a session, applying to new transactions only.",
	"unconstrained_non_covering_index_scan_enabled":             "Controls whether unconstrained non-covering index scan access paths are explored by the optimizer.",
	"disable_hoist_projection_in_join_limitation":               "Disables the restrictions placed on projection hoisting during query planning in the optimizer.",
	"descriptor_validation":                                     "Controls whether descriptors are validated at read and write time, read time only, or never.",
	"enable_experimental_alter_column_type_general":             "Controls whether ALTER TABLE ... ALTER COLUMN ... TYPE can be used for general conversions requiring online schema changes.",
	"plpgsql_use_strict_into":                                   "Causes PL/pgSQL \"SELECT ... INTO\" and \"RETURNING INTO\" syntax to always behave as if specified with STRICT option.",
	"require_explicit_primary_keys":                             "Controls whether CREATE TABLE statements should error out if no primary key is provided.",
	"on_update_rehome_row_enabled":                              "Controls whether the ON UPDATE rehome_row() will actually trigger on row updates.",
	"allow_ordinal_column_references":                           "Controls whether the deprecated ordinal column reference syntax (e.g., SELECT @1 FROM t) is allowed.",
	"transaction_rows_written_log":                              "Sets the threshold for the number of rows written by a SQL transaction which - once exceeded - will trigger a logging event.",
	"inject_retry_errors_enabled":                               "Causes statements inside explicit transactions to return a transaction retry error for testing application retry logic.",
	"optimizer_use_conditional_hoist_fix":                       "Prevents the optimizer from hoisting volatile expressions that are conditionally executed by CASE, COALESCE, or IFERR expressions.",
	"optimizer_use_trigram_similarity_optimization":             "Controls whether the optimizer should generate improved plans for queries with trigram similarity filters.",
	"index_join_streamer_batch_size":                            "Sets the size limit on input rows to the ColIndexJoin operator when using the Streamer API for a single lookup KV batch.",
	"internal":                                                  "Indicates whether this query came from InternalExecutor or an internal planner.",
	"temporary_schema_name":                                     "Sets the name of the temporary schema.",
	"row_level_security_enabled":                                "Controls whether row level security is enabled.",
	"catalog_digest_staleness_check_enabled":                    "Controls whether to use catalog digest information for fast memo staleness checks.",
	"optimizer_use_improved_multi_column_selectivity_estimate":  "Controls whether the optimizer should use an improved selectivity estimate for multi-column predicates.",
	"optimizer_use_improved_computed_column_filters_derivation": "Enables the optimizer to derive filters on computed columns in more cases beyond simple single-column equations.",
	"optimizer_use_improved_distinct_on_limit_hint_costing":     "Controls whether the optimizer should use an improved costing estimate for DistinctOn operators with limit hints.",
	"enable_multiregion_placement_policy":                       "Controls whether placement can be used in multi-region contexts.",
	"override_multi_region_zone_config":                         "Controls whether zone configurations can be modified for multi-region databases and their objects.",
	"opt_split_scan_limit":                                      "Sets the maximum number of UNION ALL statements a Scan may be split into during query optimization to avoid a sort.",
	"streamer_in_order_eager_memory_usage_fraction":             "Controls the fraction of the streamer's memory budget that might be used for issuing requests eagerly in the InOrder mode.",
	"streamer_out_of_order_eager_memory_usage_fraction":         "Controls the fraction of the streamer's memory budget that might be used for issuing requests eagerly in the OutOfOrder mode.",
	"streamer_head_of_line_only_fraction":                       "Controls the fraction of the streamer's memory budget used for the head-of-the-line request when the eager memory usage limit has been exceeded.",
}
