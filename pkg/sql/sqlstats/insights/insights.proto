// Copyright 2022 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

syntax = "proto3";
package cockroach.sql.insights;
option go_package = "github.com/cockroachdb/cockroach/pkg/sql/sqlstats/insights";

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

enum Problem {
  // This statement execution was not itself problematic, but it happened in
  // the same transaction as another problematic statement.
  None = 0;

  // This statement execution was slow, either above a fixed latency threshold
  // or detected as an anomaly.
  SlowExecution = 1;

  // This statement execution failed completely, due to contention, resource
  // saturation, or syntax errors.
  FailedExecution = 2;
}

enum Cause {
  // We have not identified specific reasons why this statement was slow.
  // We will not explicitly use this zero value; it is here defensively.
  Unset = 0;

  // This statement was slow because we picked the wrong plan, possibly due to
  // outdated statistics, the statement using different literals or search
  // conditions, or a change in the database schema.
  PlanRegression = 1;

  // This statement was slow because a good plan was not available, whether
  // due to outdated statistics or missing indexes.
  SuboptimalPlan = 2;

  // This statement was slow because of contention.
  HighContention = 3;

  // This statement was slow because of being retried multiple times, again due
  // to contention. The "high" threshold may be configured by the
  // `sql.insights.high_retry_count.threshold` cluster setting.
  HighRetryCount = 4;
}

message Session {
  bytes id = 1 [(gogoproto.customname) = "ID",
    (gogoproto.customtype) = "github.com/cockroachdb/cockroach/pkg/sql/clusterunique.ID",
    (gogoproto.nullable) = false];
}

message Transaction {
  // TODO(gtr): Implement "Cancelled" status for transaction insights.
  enum Status {
    Completed = 0;
    Failed = 1;
  }

  bytes id = 1 [(gogoproto.customname) = "ID",
    (gogoproto.customtype) = "github.com/cockroachdb/cockroach/pkg/util/uuid.UUID",
    (gogoproto.nullable) = false];
  uint64 fingerprint_id = 2
  [(gogoproto.customname) = "FingerprintID",
    (gogoproto.customtype) = "github.com/cockroachdb/cockroach/pkg/sql/appstatspb.TransactionFingerprintID",
    (gogoproto.nullable) = false];
  string user_priority = 3;
  bool implicit_txn = 4;
  google.protobuf.Duration contention = 5 [(gogoproto.stdduration) = true];
  google.protobuf.Timestamp start_time = 6 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  google.protobuf.Timestamp end_time = 7 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  string user = 8;
  string application_name = 9;
  int64 rows_read = 10;
  int64 rows_written = 11;
  int64 retry_count = 12;
  string auto_retry_reason = 13;
  repeated Problem problems = 14;
  repeated Cause causes = 15;
  repeated bytes stmt_execution_ids = 16 [ (gogoproto.customname) = "StmtExecutionIDs",
    (gogoproto.customtype) = "github.com/cockroachdb/cockroach/pkg/sql/clusterunique.ID"];
  int64 cpu_sql_nanos = 17 [(gogoproto.customname) = "CPUSQLNanos"];
  // The error code of the last failed statement in the transaction.
  string last_error_code = 18; 
  // The error message of the last failed statement in the transaction.
  string last_error_msg = 20 [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cockroachdb/redact.RedactableString"];
  Status status = 19;

  // Next ID: 21.
}

message Statement {
  enum Status {
    Completed = 0;
    Failed = 1;
  }

  bytes id = 1 [(gogoproto.customname) = "ID",
    (gogoproto.customtype) = "github.com/cockroachdb/cockroach/pkg/sql/clusterunique.ID",
    (gogoproto.nullable) = false];
  uint64 fingerprint_id = 2 [(gogoproto.customname) = "FingerprintID",
    (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/sql/appstatspb.StmtFingerprintID"];
  double latency_in_seconds = 3;
  string query = 4;
  Status status = 5;
  google.protobuf.Timestamp start_time = 6 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  google.protobuf.Timestamp end_time = 7 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  bool full_scan = 8;
  reserved 9; // previously user
  reserved 10; // previously application_name
  string database = 11;
  string plan_gist = 12;
  int64 rows_read = 13;
  int64 rows_written = 14;
  int64 retries = 15;
  string auto_retry_reason = 16;
  // Nodes is the ordered list of nodes ids on which the statement was executed.
  repeated int64 nodes = 17;
  google.protobuf.Duration contention = 18 [(gogoproto.stdduration) = true];
  repeated string index_recommendations = 19;
  reserved 20; // previously contention_events
  Problem problem = 21;
  repeated Cause causes = 22;
  int64 cpu_sql_nanos = 23 [(gogoproto.customname) = "CPUSQLNanos"];
  // The most recent error code experienced by this statement.
  string error_code = 24;
  // The most recent error experienced by this statement.
  string error_msg = 25 [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cockroachdb/redact.RedactableString"];
}


message Insight {
  Session session = 1 [(gogoproto.nullable) = false];
  Transaction transaction = 2;
  repeated Statement statements = 6;

  // This field is deprecated, but we have to keep it around for 22.2
  // backwards compatibility. 22.2 actually expects this as non-null
  // when generating the exec insights virtual table. Removing this will
  // cause a nil pointer deref on versions <= 22.2.6.
  // TODO: Move these fields to 'reserved' at 23.2.
  Statement statement = 3;

  reserved  4; // Previously problem.
  reserved 5; // Previously causes.
}
