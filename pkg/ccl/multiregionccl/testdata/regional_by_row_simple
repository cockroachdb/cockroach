new-cluster localities=us-east-1,us-east-1,us-east-1,us-central-1,us-central-1,us-central-1,us-west-1,us-west-1,us-west-1,eu-central-1,eu-west-1
----

exec-sql idx=0
CREATE DATABASE db PRIMARY REGION "us-east-1" REGIONS  "us-west-1", "us-central-1", "eu-central-1";
----

exec-sql idx=0
CREATE TABLE db.rbr(k INT PRIMARY KEY, v INT) LOCALITY REGIONAL BY ROW;
----

exec-sql idx=0
INSERT INTO db.rbr (k, v, crdb_region) VALUES (1, 1, 'us-east-1'), (2, 2, 'us-central-1'), (3, 3, 'us-west-1'), (4, 4, 'eu-central-1')
----

# We can't constrain non-voters to specific replicas other than 9 because we
# have 7 candidates for non-voters, but only one per region will be allocated (3
# total).
wait-for-zone-config-changes db-name=db table-name=rbr partition-name=us-east-1 num-voters=3 num-non-voters=3 leaseholder=0 voter=1,2 non-voter=9 not-present=10
----

wait-for-zone-config-changes db-name=db table-name=rbr partition-name=us-central-1 num-voters=3 num-non-voters=3 leaseholder=3 voter=4,5 non-voter=9 not-present=10
----

wait-for-zone-config-changes db-name=db table-name=rbr partition-name=us-west-1 num-voters=3 num-non-voters=3 leaseholder=6 voter=7,8 non-voter=9 not-present=10
----

# For eu-central-1, we do not have enough nodes in eu-central-1 to fill all 3
# voters slots, so we cannot assert anything about replica placement other than
# the leaseholder location.
wait-for-zone-config-changes db-name=db table-name=rbr partition-name=eu-central-1 num-voters=3 num-non-voters=3 leaseholder=9
----

# Test the following:
# 1. Reads from leaseholder (0) for row only look locally.
# 2. Reads from voters (1) look remotely but only to leaseholder.
# 3. Reads from other partition's leaseholders (3) look locally first and
# then remotely.
# 4. Reads from non-leaseholders (4) only look remotely.

# This is a leaseholder, so scenario 1.
trace-sql idx=0 trace-analysis=rbr
SELECT * FROM db.rbr WHERE k = 1
----
served local region search on current node: true
served local region search via follower read: false
found in local region: true

refresh-range-descriptor-cache db-name=db idx=1 table-name=rbr partition-name=us-east-1
SELECT * FROM db.rbr WHERE k = 1
----
LAG_BY_CLUSTER_SETTING

# This is a voter, so scenario 2.
trace-sql idx=1 trace-analysis=rbr
SELECT * FROM db.rbr WHERE k = 1
----
served local region search on current node: false
found in local region: true

refresh-range-descriptor-cache db-name=db idx=3 table-name=rbr partition-name=us-east-1
SELECT * FROM db.rbr WHERE k = 1
----
LAG_BY_CLUSTER_SETTING

# This is a remote leaseholder, so scenario 3.
trace-sql idx=3 trace-analysis=rbr
SELECT * FROM db.rbr WHERE k = 1
----
served local region search on current node: true
served local region search via follower read: false
found in local region: false
served remote region read via follower read: false

refresh-range-descriptor-cache db-name=db idx=4 table-name=rbr partition-name=us-east-1
SELECT * FROM db.rbr WHERE k = 1
----
LAG_BY_CLUSTER_SETTING

# This is not a leaseholder or voter, so scenario 4.
trace-sql idx=4 trace-analysis=rbr
SELECT * FROM db.rbr WHERE k = 1
----
served local region search on current node: false
found in local region: false
served remote region read via follower read: false
