# LogicTest: local

statement ok
CREATE TABLE t (i INT)

statement ok
INSERT INTO t VALUES (2)

statement error pq: relation "t" does not exist
SELECT * FROM t AS OF SYSTEM TIME follower_read_timestamp()

statement error pq: relation "t" does not exist
SELECT * FROM t AS OF SYSTEM TIME experimental_follower_read_timestamp()

statement error pq: relation "t" does not exist
BEGIN; SET TRANSACTION AS OF SYSTEM TIME follower_read_timestamp(); SELECT * FROM t

statement ok
ROLLBACK

statement error pq: relation "t" does not exist
BEGIN AS OF SYSTEM TIME follower_read_timestamp(); SELECT * FROM t

statement ok
ROLLBACK

statement ok
SET DEFAULT_TRANSACTION_USE_FOLLOWER_READS TO TRUE

statement error pq: relation "t" does not exist
SELECT * FROM t

statement error pq: cannot execute CREATE DATABASE in a read-only transaction
CREATE DATABASE IF NOT EXISTS d2

statement error pq: relation "t" does not exist
BEGIN; SELECT * FROM t

statement ok
ROLLBACK

statement error pq: AS OF SYSTEM TIME specified with READ WRITE mode
BEGIN READ WRITE

statement error pq: cannot execute CREATE DATABASE in a read-only transaction
BEGIN; CREATE DATABASE IF NOT EXISTS d2

statement ok
ROLLBACK

statement ok
SET DEFAULT_TRANSACTION_USE_FOLLOWER_READS TO FALSE

statement ok
SELECT * FROM t

statement ok
CREATE DATABASE IF NOT EXISTS d2

statement ok
BEGIN; SELECT * FROM t; COMMIT

statement ok
BEGIN READ WRITE; COMMIT

statement ok
BEGIN; CREATE DATABASE IF NOT EXISTS d2; COMMIT

statement ok
SET SESSION CHARACTERISTICS AS TRANSACTION AS OF SYSTEM TIME follower_read_timestamp()

statement error pq: relation "t" does not exist
SELECT * FROM t

statement error pq: cannot execute CREATE DATABASE in a read-only transaction
CREATE DATABASE IF NOT EXISTS d2

statement error pq: relation "t" does not exist
BEGIN; SELECT * FROM t

statement ok
ROLLBACK

statement error pq: AS OF SYSTEM TIME specified with READ WRITE mode
BEGIN READ WRITE

statement error pq: cannot execute CREATE DATABASE in a read-only transaction
BEGIN; CREATE DATABASE IF NOT EXISTS d2

statement ok
ROLLBACK

statement ok
SET DEFAULT_TRANSACTION_USE_FOLLOWER_READS TO FALSE

query B
SELECT with_min_timestamp(statement_timestamp()) = statement_timestamp()
----
true

query B
SELECT with_min_timestamp(statement_timestamp() - '5s'::interval) = statement_timestamp() - '5s'::interval
----
true

statement error timestamp for with_min_timestamp must be less than or equal to statement_timestamp\(\)
SELECT with_min_timestamp(statement_timestamp() + '5s'::interval) = statement_timestamp()

query B
SELECT with_max_staleness('10s') = statement_timestamp() - '10s'::interval
----
true

statement error interval duration for with_max_staleness must be greater or equal to 0
SELECT with_max_staleness(-'1s')

statement ok
SELECT * FROM t AS OF SYSTEM TIME with_max_staleness('1ms')

statement ok
SELECT * FROM t AS OF SYSTEM TIME with_min_timestamp(statement_timestamp() - '1ms')

statement error AS OF SYSTEM TIME: only constant expressions or follower_read_timestamp are allowed
BEGIN AS OF SYSTEM TIME with_max_staleness('1ms')

statement error cannot use a bounded staleness query in a transaction
BEGIN; SELECT * FROM t AS OF SYSTEM TIME with_max_staleness('1ms')

statement ok
ROLLBACK

statement error bounded staleness queries do not yet work with prepared statements
PREPARE prep_stmt AS SELECT * FROM t AS OF SYSTEM TIME with_min_timestamp(statement_timestamp() - '10s'::interval)

statement error bounded staleness queries do not yet work with prepared statements
PREPARE prep_stmt AS SELECT * FROM t AS OF SYSTEM TIME with_max_staleness('1ms')
