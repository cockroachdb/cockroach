# LogicTest: multiregion-9node-3region-3azs

user root

statement ok
CREATE DATABASE db;
CREATE TABLE db.t();
GRANT CREATE ON DATABASE db TO testuser;
CREATE TABLE db.t2();
ALTER USER testuser CREATEDB;

user testuser

statement error user testuser must be owner of t or have CREATE privilege on t
ALTER DATABASE db SET PRIMARY REGION "us-east-1"

user root

statement ok
GRANT CREATE ON TABLE db.t TO testuser

user testuser

statement ok
ALTER DATABASE db SET PRIMARY REGION "us-east-1"

user root

statement ok
REVOKE CREATE ON TABLE db.t FROM testuser

user testuser

statement error user testuser must be owner of t or have CREATE privilege on t
ALTER DATABASE db DROP REGION "us-east-1"

user root

statement ok
GRANT CREATE ON TABLE db.t TO testuser

user testuser

statement ok
ALTER DATABASE db DROP REGION "us-east-1"

# Same thing, but this time testuser is the owner of the table (and doesn't have
# CREATE privileges on it).
user root

statement ok
REVOKE CREATE ON TABLE db.t FROM testuser;
ALTER TABLE db.t OWNER TO testuser

user testuser

statement ok
ALTER DATABASE db SET PRIMARY REGION "us-east-1"

statement ok
ALTER DATABASE db DROP REGION "us-east-1"

subtest alter_table_locality_privs

user root

statement ok
CREATE DATABASE alter_db PRIMARY REGION "us-east-1";
CREATE TABLE alter_db.t();

user testuser

statement error pq: user testuser must be owner of t or have CREATE privilege on t
ALTER TABLE alter_db.t SET LOCALITY GLOBAL

user root

statement ok
GRANT CREATE ON TABLE alter_db.t TO testuser

user testuser

statement ok
ALTER TABLE alter_db.t SET LOCALITY GLOBAL

# Same thing, this time make testuser the owner.

user root

statement ok
REVOKE CREATE ON TABLE alter_db.t FROM testuser

# To be able to gain ownership of the table, testuser needs to have CREATE
# privilege on the database.
statement ok
GRANT CREATE ON DATABASE alter_db to testuser;
ALTER TABLE alter_db.t OWNER TO testuser

user testuser

statement ok
ALTER TABLE alter_db.t SET LOCALITY REGIONAL
