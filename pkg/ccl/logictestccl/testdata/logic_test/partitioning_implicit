# LogicTest: local

statement error  declared partition columns \(partition_by\) do not match first 1 columns in index being partitioned \(a\)
CREATE TABLE t (
  pk INT PRIMARY KEY,
  partition_by int,
  a INT,
  INDEX (a) PARTITION BY LIST (partition_by) (
    PARTITION one VALUES IN (1),
    PARTITION two VALUES IN (2)
  )
)

statement error PARTITION ALL BY LIST/RANGE is currently experimental
CREATE TABLE public.t (
  pk int PRIMARY KEY,
  partition_by int
) PARTITION ALL BY LIST (partition_by) (
  PARTITION one VALUES IN (1),
  PARTITION two VALUES IN (2)
)

statement ok
SET experimental_enable_implicit_column_partitioning = true

statement error found multiple definitions in partition using column "a"
CREATE TABLE t (
  pk INT PRIMARY KEY,
  a INT,
  b INT,
  c INT
) PARTITION BY LIST (a, a) (
  PARTITION a1 VALUES IN ((1, 1))
)

statement error implicit column partitioning on a subpartition is not yet supported
CREATE TABLE t (
  pk INT PRIMARY KEY,
  a INT,
  b INT,
  c INT,
  INDEX (c) PARTITION BY LIST (a) (
    PARTITION a1 VALUES IN (1) PARTITION BY LIST (b) (
      PARTITION a1b1 VALUES IN ((1))
    )
  )
)

statement ok
CREATE TABLE t (
  pk INT PRIMARY KEY,
  a INT,
  b INT,
  c INT,
  d INT,
  INDEX (b) PARTITION BY LIST(a) (
    PARTITION b_implicit VALUES IN (2)
  ),
  UNIQUE INDEX (c) PARTITION BY LIST (a) (
    PARTITION c_implicit VALUES IN (3)
  ),
  INDEX (a, b, c) PARTITION BY LIST (d) (
    PARTITION a_b_c_implicit VALUES IN ((4))
  ),
  FAMILY (pk, a, b, c, d)
) PARTITION BY LIST(a) (
  PARTITION pk_implicit VALUES IN (1)
)

query T
SELECT create_statement FROM [SHOW CREATE TABLE t]
----
CREATE TABLE public.t (
  pk INT8 NOT NULL,
  a INT8 NULL,
  b INT8 NULL,
  c INT8 NULL,
  d INT8 NULL,
  CONSTRAINT "primary" PRIMARY KEY (pk ASC),
  INDEX t_b_idx (b ASC) PARTITION BY LIST (a) (
    PARTITION b_implicit VALUES IN ((2))
  ),
  UNIQUE INDEX t_c_key (c ASC) PARTITION BY LIST (a) (
    PARTITION c_implicit VALUES IN ((3))
  ),
  INDEX t_a_b_c_idx (a ASC, b ASC, c ASC) PARTITION BY LIST (d) (
    PARTITION a_b_c_implicit VALUES IN ((4))
  ),
  FAMILY fam_0_pk_a_b_c_d (pk, a, b, c, d)
) PARTITION BY LIST (a) (
  PARTITION pk_implicit VALUES IN ((1))
)
-- Warning: Partitioned table with no zone configurations.

statement ok
CREATE INDEX new_idx ON t(d) PARTITION BY LIST (a) (
  PARTITION d_implicit VALUES IN (1)
)

query T
SELECT create_statement FROM [SHOW CREATE TABLE t]
----
CREATE TABLE public.t (
  pk INT8 NOT NULL,
  a INT8 NULL,
  b INT8 NULL,
  c INT8 NULL,
  d INT8 NULL,
  CONSTRAINT "primary" PRIMARY KEY (pk ASC),
  INDEX t_b_idx (b ASC) PARTITION BY LIST (a) (
    PARTITION b_implicit VALUES IN ((2))
  ),
  UNIQUE INDEX t_c_key (c ASC) PARTITION BY LIST (a) (
    PARTITION c_implicit VALUES IN ((3))
  ),
  INDEX t_a_b_c_idx (a ASC, b ASC, c ASC) PARTITION BY LIST (d) (
    PARTITION a_b_c_implicit VALUES IN ((4))
  ),
  INDEX new_idx (d ASC) PARTITION BY LIST (a) (
    PARTITION d_implicit VALUES IN ((1))
  ),
  FAMILY fam_0_pk_a_b_c_d (pk, a, b, c, d)
) PARTITION BY LIST (a) (
  PARTITION pk_implicit VALUES IN ((1))
)
-- Warning: Partitioned table with no zone configurations.

query TTTTTT colnames
SELECT
  indexrelid, indrelid, indkey, indclass, indoption, indcollation
FROM pg_index
WHERE indrelid = (SELECT oid FROM pg_class WHERE relname = 't')
ORDER BY 1,2,3
----
indexrelid  indrelid  indkey  indclass  indoption  indcollation
969972496   57        2 3 4   0 0 0     2 2 2      0 0 0
969972497   57        5       0         2          0
969972501   57        1       0         2          0
969972502   57        3       0         2          0
969972503   57        4       0         2          0

query TTB colnames
SELECT index_name, column_name, implicit FROM crdb_internal.index_columns
WHERE descriptor_name = 't' AND column_type = 'key'
ORDER BY 1, 2
----
index_name   column_name  implicit
new_idx      a            true
new_idx      d            false
primary      a            true
primary      pk           false
t_a_b_c_idx  a            false
t_a_b_c_idx  b            false
t_a_b_c_idx  c            false
t_a_b_c_idx  d            true
t_b_idx      a            true
t_b_idx      b            false
t_c_key      a            true
t_c_key      c            false

query TTT colnames
SELECT
  tablename, indexname, indexdef
FROM pg_indexes
WHERE tablename = 't'
ORDER BY 1, 2, 3
----
tablename  indexname    indexdef
t          new_idx      CREATE INDEX new_idx ON test.public.t USING btree (d ASC)
t          primary      CREATE UNIQUE INDEX "primary" ON test.public.t USING btree (pk ASC)
t          t_a_b_c_idx  CREATE INDEX t_a_b_c_idx ON test.public.t USING btree (a ASC, b ASC, c ASC)
t          t_b_idx      CREATE INDEX t_b_idx ON test.public.t USING btree (b ASC)
t          t_c_key      CREATE UNIQUE INDEX t_c_key ON test.public.t USING btree (c ASC)

statement error cannot ALTER INDEX PARTITION BY on index which already has implicit column partitioning
ALTER INDEX new_idx PARTITION BY LIST (a) (
  PARTITION d_implicit VALUES IN (1)
)

statement error cannot ALTER TABLE PARTITION BY on table which already has implicit column partitioning
ALTER TABLE t PARTITION BY LIST (a) (
  PARTITION pk_implicit VALUES IN (1)
)

statement error PARTITION ALL BY not yet implemented
ALTER TABLE t PARTITION ALL BY LIST (a) (
  PARTITION pk_implicit VALUES IN (1)
)

statement ok
DROP TABLE t

statement error cannot define PARTITION BY on an index if the table has a PARTITION ALL BY definition
CREATE TABLE public.t (
  pk int PRIMARY KEY,
  partition_by int,
  a int,
  INDEX(a) PARTITION BY LIST (partition_by) (
    PARTITION one VALUES IN (1)
  )
) PARTITION ALL BY LIST (partition_by) (
  PARTITION one VALUES IN (1),
  PARTITION two VALUES IN (2)
)

statement error cannot define PARTITION BY on an unique constraint if the table has a PARTITION ALL BY definition
CREATE TABLE public.t (
  pk int PRIMARY KEY,
  partition_by int,
  a int,
  UNIQUE(a) PARTITION BY LIST (partition_by) (
    PARTITION one VALUES IN (1)
  )
) PARTITION ALL BY LIST (partition_by) (
  PARTITION one VALUES IN (1),
  PARTITION two VALUES IN (2)
)

statement ok
CREATE TABLE public.t (
  pk int PRIMARY KEY,
  partition_by int,
  a int,
  b int,
  c int,
  d int,
  INDEX (a),
  UNIQUE (b),
  INDEX (partition_by, c),
  FAMILY (pk, partition_by, a, b, c, d)
) PARTITION ALL BY LIST (partition_by) (
  PARTITION one VALUES IN (1),
  PARTITION two VALUES IN (2)
)

statement error cannot define PARTITION BY on an index if the table has a PARTITION ALL BY definition
CREATE INDEX created_idx ON t(c) PARTITION BY LIST (d) (
  PARTITION one VALUES IN ((1))
)

statement ok
CREATE INDEX created_idx ON t(c)

query T
SELECT create_statement FROM [SHOW CREATE TABLE t]
----
CREATE TABLE public.t (
  pk INT8 NOT NULL,
  partition_by INT8 NULL,
  a INT8 NULL,
  b INT8 NULL,
  c INT8 NULL,
  d INT8 NULL,
  CONSTRAINT "primary" PRIMARY KEY (pk ASC),
  INDEX t_a_idx (a ASC),
  UNIQUE INDEX t_b_key (b ASC),
  INDEX t_partition_by_c_idx (partition_by ASC, c ASC),
  INDEX created_idx (c ASC),
  FAMILY fam_0_pk_partition_by_a_b_c_d (pk, partition_by, a, b, c, d)
) PARTITION ALL BY LIST (partition_by) (
  PARTITION one VALUES IN ((1)),
  PARTITION two VALUES IN ((2))
)
-- Warning: Partitioned table with no zone configurations.

query TTB colnames
SELECT index_name, column_name, implicit FROM crdb_internal.index_columns
WHERE descriptor_name = 't' AND column_type = 'key'
ORDER BY 1, 2
----
index_name            column_name   implicit
created_idx           c             false
created_idx           partition_by  true
primary               partition_by  true
primary               pk            false
t_a_idx               a             false
t_a_idx               partition_by  true
t_b_key               b             false
t_b_key               partition_by  true
t_partition_by_c_idx  c             false
t_partition_by_c_idx  partition_by  false
