# tenant-cluster-setting-override-opt: allow-multi-region-abstractions-for-secondary-tenants
# LogicTest: multiregion-9node-3region-3azs

# Set the closed timestamp interval to be short to shorten the amount of time
# we need to wait for the system config to propagate.
statement ok
SET CLUSTER SETTING kv.closed_timestamp.side_transport_interval = '10ms';

statement ok
SET CLUSTER SETTING kv.closed_timestamp.target_duration = '10ms';

statement ok
CREATE DATABASE multi_region_test_db PRIMARY REGION "ca-central-1" REGIONS "ap-southeast-2", "us-east-1";

statement ok
USE multi_region_test_db

statement ok
CREATE TABLE parent (
  p_id INT PRIMARY KEY,
  cr crdb_internal_region NOT NULL DEFAULT gateway_region()::crdb_internal_region,
  p_data string,
  p_int INT,
  p_text TEXT,
  p_json JSON,
  UNIQUE INDEX (p_data),
  INVERTED INDEX (p_int, p_json),
  INVERTED INDEX (p_int, p_text gin_trgm_ops)
) LOCALITY REGIONAL BY ROW AS cr;

statement ok
CREATE TABLE child (
  c_id INT PRIMARY KEY,
  c_p_id INT,
  cr crdb_internal_region NOT NULL DEFAULT gateway_region()::crdb_internal_region,
  c_data string,
  c_int INt,
  c_json JSON,
  FOREIGN KEY (c_p_id, cr) REFERENCES parent (p_id, cr)
) LOCALITY REGIONAL BY ROW AS cr;

# A 'cr = cr' condition should be derived for this join.
query T
EXPLAIN SELECT *
FROM child
INNER LOOKUP JOIN parent ON c_p_id = p_id
----
distribution: local
vectorized: true
·
• lookup join
│ table: parent@parent_pkey
│ equality: (cr, c_p_id) = (cr,p_id)
│ equality cols are key
│
└── • scan
      missing stats
      table: child@child_pkey
      spans: FULL SCAN

# A 'cr = cr' condition should not be derived for this join.
query T
EXPLAIN SELECT 1
FROM child
INNER LOOKUP JOIN parent ON p_data = c_data
----
distribution: local
vectorized: true
·
• render
│
└── • lookup join
    │ table: parent@parent_p_data_key
    │ equality cols are key
    │ lookup condition: (cr = 'ap-southeast-2') AND (c_data = p_data)
    │ remote lookup condition: (cr IN ('ca-central-1', 'us-east-1')) AND (c_data = p_data)
    │
    └── • scan
          missing stats
          table: child@child_pkey
          spans: FULL SCAN

# Verify inverted index cases cannot derive a 'cr = cr' condition. Lookup join
# is not possible.
statement error could not produce a query plan conforming to the LOOKUP JOIN hint
EXPLAIN SELECT *
FROM child
INNER LOOKUP JOIN parent ON p_int = c_int AND p_text LIKE '%foo%'
