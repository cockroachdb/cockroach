load("@bazel_gomock//:gomock.bzl", "gomock")
load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
load("@rules_proto//proto:defs.bzl", "proto_library")

proto_library(
    name = "tenant_proto",
    srcs = ["directory.proto"],
    strip_import_prefix = "/pkg",
    visibility = ["//visibility:public"],
    deps = ["@com_github_gogo_protobuf//gogoproto:gogo_proto"],
)

go_proto_library(
    name = "tenant_go_proto",
    compilers = ["//pkg/cmd/protoc-gen-gogoroach:protoc-gen-gogoroach_grpc_compiler"],
    importpath = "github.com/cockroachdb/cockroach/pkg/ccl/sqlproxyccl/tenant",
    proto = ":tenant_proto",
    visibility = ["//visibility:public"],
    deps = ["@com_github_gogo_protobuf//gogoproto"],
)

go_library(
    name = "tenant",
    srcs = [
        "directory.go",
        "entry.go",
        "test_directory_svr.go",
        ":mocks_tenant",  # keep
    ],
    embed = [":tenant_go_proto"],
    importpath = "github.com/cockroachdb/cockroach/pkg/ccl/sqlproxyccl/tenant",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/roachpb",
        "//pkg/util/grpcutil",
        "//pkg/util/log",
        "//pkg/util/stop",
        "//pkg/util/syncutil",
        "//pkg/util/timeutil",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_cockroachdb_logtags//:logtags",
        "@com_github_golang_mock//gomock",  # keep
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//metadata",  # keep
        "@org_golang_google_grpc//status",
    ],
)

gomock(
    name = "mocks_tenant",
    out = "mocks_generated.go",
    interfaces = [
        "DirectoryClient",
        "Directory_WatchEndpointsClient",
    ],
    library = ":tenant_go_proto",
    package = "tenant",
    self_package = "github.com/cockroachdb/cockroach/pkg/ccl/sqlproxyccl/tenant",
)
