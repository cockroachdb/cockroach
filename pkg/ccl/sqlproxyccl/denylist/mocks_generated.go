// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package denylist is a generated GoMock package.
package denylist

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// Denied mocks base method.
func (m *MockService) Denied(entity DenyEntity) (*Entry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Denied", entity)
	ret0, _ := ret[0].(*Entry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Denied indicates an expected call of Denied.
func (mr *MockServiceMockRecorder) Denied(entity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Denied", reflect.TypeOf((*MockService)(nil).Denied), entity)
}
