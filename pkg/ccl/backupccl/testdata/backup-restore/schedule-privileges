new-server name=s1
----

exec-sql
CREATE DATABASE foo;
----

exec-sql
CREATE TABLE foo.foo (id INT);
----

exec-sql
CREATE EXTERNAL CONNECTION foo AS 'userfile:///foo';
----

# Admin can create all schedules.
exec-sql
CREATE SCHEDULE foocluster FOR BACKUP INTO 'external://foo/cluster' RECURRING '@hourly';
----

exec-sql
CREATE SCHEDULE foodb FOR BACKUP DATABASE foo INTO 'external://foo/database' RECURRING '@hourly';
----

exec-sql
CREATE SCHEDULE footable FOR BACKUP TABLE foo.foo INTO 'external://foo/table' RECURRING '@hourly';
----

# Non-root admin can create all schedules.
exec-sql
CREATE USER testuser;
GRANT ADMIN TO testuser;
----

exec-sql user=testuser
CREATE SCHEDULE foocluster FOR BACKUP INTO 'external://foo/cluster' RECURRING '@hourly';
----

exec-sql user=testuser
CREATE SCHEDULE foodb FOR BACKUP DATABASE foo INTO 'external://foo/database' RECURRING '@hourly';
----

exec-sql user=testuser
CREATE SCHEDULE footable FOR BACKUP TABLE foo.foo INTO 'external://foo/table' RECURRING '@hourly';
----

# Non-root non-admin cannot create any schedules.
exec-sql
REVOKE ADMIN FROM testuser;
----

exec-sql user=testuser
CREATE SCHEDULE foocluster FOR BACKUP INTO 'external://foo/cluster' RECURRING '@hourly';
----
pq: failed to dry run backup: only users with the admin role or the BACKUP system privilege are allowed to perform full cluster backups

exec-sql user=testuser
CREATE SCHEDULE foodb FOR BACKUP DATABASE foo INTO 'external://foo/database' RECURRING '@hourly';
----
pq: failed to dry run backup: user testuser does not have SELECT privilege on relation foo
HINT: The existing privileges are being deprecated in favour of a fine-grained privilege model explained here <link>. In a future release, to run BACKUP DATABASE, user testuser will exclusively require the BACKUP privilege on database foo.

exec-sql user=testuser
CREATE SCHEDULE footable FOR BACKUP TABLE foo.foo INTO 'external://foo/table' RECURRING '@hourly';
----
pq: failed to dry run backup: user testuser does not have SELECT privilege on relation foo
HINT: The existing privileges are being deprecated in favour of a fine-grained privilege model explained here <link>. In a future release, to run BACKUP TABLE, user testuser will exclusively require the BACKUP privilege on tables: foo.

# Grant `BACKUP` privileges to testuser.
exec-sql
GRANT SYSTEM BACKUP TO testuser;
GRANT BACKUP ON DATABASE foo TO testuser;
GRANT BACKUP ON TABLE foo.foo TO testuser;
----

exec-sql
GRANT USAGE ON EXTERNAL CONNECTION foo TO testuser;
----

exec-sql user=testuser
CREATE SCHEDULE foocluster FOR BACKUP INTO 'external://foo/cluster' RECURRING '@hourly';
----

exec-sql user=testuser
CREATE SCHEDULE foodb FOR BACKUP DATABASE foo INTO 'external://foo/database' RECURRING '@hourly';
----

exec-sql user=testuser
CREATE SCHEDULE footable FOR BACKUP TABLE foo.foo INTO 'external://foo/table' RECURRING '@hourly';
----
