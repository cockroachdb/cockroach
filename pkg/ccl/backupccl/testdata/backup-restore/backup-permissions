# Test permissions checks for non-admin users running BACKUP.
new-server name=s1
----

exec-sql
CREATE DATABASE d;
CREATE TABLE d.t (x INT);
INSERT INTO d.t VALUES (1), (2), (3);
----

# Cluster backup should succeed as a root user.
exec-sql
BACKUP TO 'nodelocal://0/test-root/'
----

# Backups should succeed as a non-root user with admin role.
exec-sql
CREATE USER testuser;
GRANT ADMIN TO testuser;
----

exec-sql user=testuser
BACKUP TO 'nodelocal://0/test-nonroot-cluster';
BACKUP DATABASE d TO 'nodelocal://0/test-nonroot-db';
BACKUP TABLE d.t TO 'nodelocal://0/test-nonroot-table';
----

# Start a new cluster with the same IO dir.
new-server name=s2 allow-implicit-access
----

exec-sql
CREATE DATABASE d2;
USE d2;
CREATE TABLE d2.t (x INT);
INSERT INTO d2.t VALUES (1), (2), (3);
----

exec-sql
CREATE USER testuser
----

# Cluster backup as a non-admin user should fail.
exec-sql user=testuser
BACKUP TO 'nodelocal://0/test2'
----
pq: only users with the admin role are allowed to perform full cluster backups

# Database backup as a non-admin user should have SELECT privileges.
exec-sql user=testuser
BACKUP DATABASE d2 TO 'nodelocal://0/d2'
----
pq: user testuser does not have SELECT privilege on database d2

exec-sql
GRANT SELECT ON DATABASE d2 TO testuser;
----

# Table backup as a non-admin user should have SELECT privileges.
exec-sql user=testuser
BACKUP TABLE d2.t TO 'nodelocal://0/d2-table'
----
pq: user testuser does not have SELECT privilege on relation t

exec-sql
GRANT SELECT ON TABLE d2.t TO testuser;
----

# Add user defined schema to the database.
exec-sql
CREATE SCHEMA sc2;
----

# Schema backup as a non-admin user should have USAGE privileges.
exec-sql user=testuser
BACKUP DATABASE d2 TO 'nodelocal://0/d2-schema';
----
pq: user testuser does not have USAGE privilege on schema sc2

exec-sql
GRANT USAGE ON SCHEMA sc2 TO testuser;
----

# Add user defined type to the database.
# By default `public` is given USAGE privilege on a UDT so we revoke it to
# test our BACKUP checks.
exec-sql
CREATE TYPE d2.greeting AS ENUM ('hello', 'hiya');
REVOKE USAGE ON TYPE d2.greeting FROM public;
----

# Type backup as a non-admin user should have USAGE privileges.
exec-sql user=testuser
BACKUP DATABASE d2 TO 'nodelocal://0/d2-schema';
----
pq: user testuser does not have USAGE privilege on type greeting

exec-sql
GRANT USAGE ON TYPE d2.greeting TO testuser;
----

# testuser should now have all the required privileges.
exec-sql server=s2 user=testuser
BACKUP DATABASE d2 TO 'nodelocal://0/d2';
BACKUP TABLE d2.t TO 'nodelocal://0/d2-table';
----

# Test that implicit access is disallowed when the testing knob isn't set.
new-server name=s3 share-io-dir=s1
----

exec-sql
CREATE DATABASE d;
CREATE USER testuser;
GRANT SELECT ON DATABASE d TO testuser;
----

exec-sql user=testuser
BACKUP DATABASE d TO 'nodelocal://0/test3'
----
pq: only users with the admin role are allowed to BACKUP to the specified nodelocal URI
