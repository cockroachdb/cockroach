// Copyright 2017 The Cockroach Authors.
//
// Licensed as a CockroachDB Enterprise file under the Cockroach Community
// License (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//     https://github.com/cockroachdb/cockroach/blob/master/licenses/CCL.txt

syntax = "proto3";
package cockroach.ccl.storageccl.engineccl.enginepbccl;
option go_package = "enginepbccl";

import "gogoproto/gogo.proto";

enum EncryptionType {
  // No encryption.
  Plaintext = 0;
  // AES in counter mode with various key lengths.
  AES128_CTR = 1;
  AES192_CTR = 2;
  AES256_CTR = 3;
}

message DataKeysRegistry {
  // Map of key_id to KeyInfo (raw key is not included).
  map<string, KeyInfo> store_keys = 1;
  // Map of key_id to SecretKey (raw key is included).
  map<string, SecretKey> data_keys = 2;
  // Active key IDs. Empty means no keys loaded yet.
  string active_store_key = 3;
  string active_data_key = 4;
}

// KeyInfo contains information about the key, but not the key itself.
// This is safe to pass around, log, and store.
message KeyInfo {
  // EncryptionType is the type of encryption (aka: cipher) used with this key.
  EncryptionType encryption_type = 1;
  // The ID (hash) of this key.
  string key_id = 2;
  // First time this key was seen (in seconds since epoch).
  int64 creation_time = 3;
  // Source is a description of the source. This could be a filename,
  // or the key manager that made the key. eg: "data key manager".
  string source = 4;

  // Was exposed is true if we ever wrote the key in plaintext.
  // This does not apply to store keys, only data keys.
  bool was_exposed = 5;
  // ID of the key that caused this key to be created.
  string parent_key_id = 6;
}

// SecretKey contains the information about the key AND the raw key itself.
// This should never be logged, displayed, or stored outside of the key registry.
// The name is intended to make users of the key wary of the usage.
message SecretKey {
  KeyInfo info = 1;
  // The raw key.
  bytes key = 2;
}
