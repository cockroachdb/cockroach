// Copyright 2016 The Cockroach Authors.
//
// Licensed under the Cockroach Community Licence (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://github.com/cockroachdb/cockroach/blob/master/pkg/ccl/LICENSE

syntax = "proto3";
package cockroach.ccl.sqlccl;
option go_package = "sqlccl";

import "cockroach/pkg/roachpb/api.proto";
import "cockroach/pkg/roachpb/data.proto";
import "cockroach/pkg/sql/sqlbase/structured.proto";
import "cockroach/pkg/util/hlc/timestamp.proto";
import "gogoproto/gogo.proto";

// BackupDescriptor represents a consistent snapshot of ranges.
//
// Each range snapshot includes a path to data that is a diff of the data in
// that key range between a start and end timestamp. The end timestamp of all
// ranges in a backup is the same, but the start may vary (to allow individual
// tables to be backed up on different schedules).
message BackupDescriptor {
  // TODO(dan): While this is feature is experimental, this proto may change in
  // ways that are backward incompatible. Remove this note when it launches.

  // BackupDescriptor_File represents a file that contains the diff for a key
  // range between two timestamps.
  message File {
    roachpb.Span span = 1 [(gogoproto.nullable) = false];
    string path = 2;
    uint32 crc = 3 [(gogoproto.customname) = "CRC"];
  }

  util.hlc.Timestamp start_time = 1 [(gogoproto.nullable) = false];
  util.hlc.Timestamp end_time = 2 [(gogoproto.nullable) = false];
  // Spans contains the spans requested for backup. The keyranges covered by
  // `files` may be a subset of this if there were ranges with no changes since
  // the last backup.
  repeated roachpb.Span spans = 3 [(gogoproto.nullable) = false];
  repeated File files = 4 [(gogoproto.nullable) = false];
  repeated sql.sqlbase.Descriptor descriptors = 5 [(gogoproto.nullable) = false];
  int64 data_size = 6;

  roachpb.ExportStorage dir = 7 [(gogoproto.nullable) = false];
}
