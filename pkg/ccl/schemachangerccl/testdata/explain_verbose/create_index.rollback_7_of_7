/* setup */
CREATE TABLE defaultdb.t1 (id INT PRIMARY KEY, name VARCHAR(256), money INT);

/* test */
CREATE INDEX id1
  ON defaultdb.t1 (id, name)
  STORING (money)
  PARTITION BY LIST (id) (PARTITION p1 VALUES IN (1));
EXPLAIN (ddl, verbose) rollback at post-commit stage 7 of 7;
----
• Schema change plan for rolling back CREATE INDEX ‹id1› ON ‹defaultdb›.public.‹t1› (‹id›, ‹name›) STORING (‹money›) PARTITION BY LIST (‹id›) (PARTITION ‹p1› VALUES IN (‹1›)); 
│
└── • PostCommitNonRevertiblePhase
    │
    ├── • Stage 1 of 2 in PostCommitNonRevertiblePhase
    │   │
    │   ├── • 10 elements transitioning toward ABSENT
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • skip PUBLIC → ABSENT operations
    │   │   │         rule: "skip index-column removal ops on index removal"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 2}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • skip PUBLIC → ABSENT operations
    │   │   │         rule: "skip index-column removal ops on index removal"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 2}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • skip PUBLIC → ABSENT operations
    │   │   │         rule: "skip index-column removal ops on index removal"
    │   │   │
    │   │   ├── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
    │   │   │   │ WRITE_ONLY → DELETE_ONLY
    │   │   │   │
    │   │   │   └── • PreviousTransactionPrecedence dependency from WRITE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
    │   │   │         rule: "SecondaryIndex transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->DELETE_ONLY"
    │   │   │
    │   │   ├── • IndexPartitioning:{DescID: 104, IndexID: 2}
    │   │   │     PUBLIC → ABSENT
    │   │   │
    │   │   ├── • TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 0, SourceIndexID: 1}
    │   │   │   │ WRITE_ONLY → DELETE_ONLY
    │   │   │   │
    │   │   │   └── • PreviousTransactionPrecedence dependency from WRITE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 0, SourceIndexID: 1}
    │   │   │         rule: "TemporaryIndex transitions to ABSENT uphold 2-version invariant: WRITE_ONLY->DELETE_ONLY"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • skip PUBLIC → ABSENT operations
    │   │   │         rule: "skip index-column removal ops on index removal"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 3}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • skip PUBLIC → ABSENT operations
    │   │   │         rule: "skip index-column removal ops on index removal"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 3}
    │   │   │   │ PUBLIC → ABSENT
    │   │   │   │
    │   │   │   └── • skip PUBLIC → ABSENT operations
    │   │   │         rule: "skip index-column removal ops on index removal"
    │   │   │
    │   │   └── • IndexPartitioning:{DescID: 104, IndexID: 3}
    │   │         PUBLIC → ABSENT
    │   │
    │   └── • 4 Mutation operations
    │       │
    │       ├── • MakeWriteOnlyIndexDeleteOnly
    │       │     IndexID: 2
    │       │     TableID: 104
    │       │
    │       ├── • MakeWriteOnlyIndexDeleteOnly
    │       │     IndexID: 3
    │       │     TableID: 104
    │       │
    │       ├── • SetJobStateOnDescriptor
    │       │     DescriptorID: 104
    │       │
    │       └── • UpdateSchemaChangerJob
    │             IsNonCancelable: true
    │             JobID: 1
    │             RunningStatus: PostCommitNonRevertiblePhase stage 2 of 2 with 5 MutationType ops pending
    │
    └── • Stage 2 of 2 in PostCommitNonRevertiblePhase
        │
        ├── • 2 elements transitioning toward ABSENT
        │   │
        │   ├── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
        │   │   │ DELETE_ONLY → ABSENT
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 2}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 2}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • PreviousTransactionPrecedence dependency from DELETE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
        │   │   │     rule: "SecondaryIndex transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT"
        │   │   │
        │   │   ├── • Precedence dependency from ABSENT IndexName:{DescID: 104, Name: id1, IndexID: 2}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   └── • Precedence dependency from ABSENT IndexPartitioning:{DescID: 104, IndexID: 2}
        │   │         rule: "dependents removed before index"
        │   │
        │   └── • TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 0, SourceIndexID: 1}
        │       │ DELETE_ONLY → ABSENT
        │       │
        │       ├── • PreviousTransactionPrecedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 0, SourceIndexID: 1}
        │       │     rule: "TemporaryIndex transitions to ABSENT uphold 2-version invariant: DELETE_ONLY->ABSENT"
        │       │
        │       ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}
        │       │     rule: "dependents removed before index"
        │       │
        │       ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 3}
        │       │     rule: "dependents removed before index"
        │       │
        │       ├── • Precedence dependency from ABSENT IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 3}
        │       │     rule: "dependents removed before index"
        │       │
        │       └── • Precedence dependency from ABSENT IndexPartitioning:{DescID: 104, IndexID: 3}
        │             rule: "dependents removed before index"
        │
        └── • 7 Mutation operations
            │
            ├── • LogEvent
            │     Element:
            │       SecondaryIndex:
            │         indexId: 2
            │         sourceIndexId: 1
            │         tableId: 104
            │         temporaryIndexId: 3
            │     EventBase:
            │       Authorization:
            │         UserName: root
            │       Statement: CREATE INDEX ‹id1› ON ‹defaultdb›.public.‹t1› (‹id›, ‹name›) STORING
            │         (‹money›) PARTITION BY LIST (‹id›) (PARTITION ‹p1› VALUES IN (‹1›))
            │       StatementTag: CREATE INDEX
            │       TargetMetadata:
            │         SourceElementID: 1
            │         SubWorkID: 1
            │     TargetStatus: 1
            │
            ├── • CreateGCJobForIndex
            │     IndexID: 2
            │     StatementForDropJob:
            │       Rollback: true
            │       Statement: removed secondary index; CREATE INDEX id1 ON defaultdb.public.t1 (id,
            │         name) STORING (money) PARTITION BY LIST (id) (PARTITION p1 VALUES IN (1))
            │     TableID: 104
            │
            ├── • MakeIndexAbsent
            │     IndexID: 2
            │     TableID: 104
            │
            ├── • CreateGCJobForIndex
            │     IndexID: 3
            │     StatementForDropJob:
            │       Rollback: true
            │       Statement: removed temporary index; CREATE INDEX id1 ON defaultdb.public.t1 (id,
            │         name) STORING (money) PARTITION BY LIST (id) (PARTITION p1 VALUES IN (1))
            │     TableID: 104
            │
            ├── • MakeIndexAbsent
            │     IndexID: 3
            │     TableID: 104
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 104
            │     JobID: 1
            │
            └── • UpdateSchemaChangerJob
                  DescriptorIDsToRemove:
                  - 104
                  IsNonCancelable: true
                  JobID: 1
                  RunningStatus: all stages completed
