/* setup */
CREATE TABLE defaultdb.t1 (id INT PRIMARY KEY, name VARCHAR(256), money INT);

/* test */
EXPLAIN (ddl, verbose) CREATE INDEX id1
  ON defaultdb.t1 (id, name)
  STORING (money)
  PARTITION BY LIST (id) (PARTITION p1 VALUES IN (1));
----
• Schema change plan for CREATE INDEX ‹id1› ON ‹defaultdb›.‹public›.‹t1› (‹id›, ‹name›) STORING (‹money›) PARTITION BY LIST (‹id›) (PARTITION ‹p1› VALUES IN (‹1›)); 
│
├── • StatementPhase
│   │
│   └── • Stage 1 of 1 in StatementPhase
│       │
│       ├── • 7 elements transitioning toward PUBLIC
│       │   │
│       │   ├── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│       │   │   │ ABSENT → BACKFILL_ONLY
│       │   │   │
│       │   │   └── • PreviousTransactionPrecedence dependency from ABSENT SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│       │   │         rule: "SecondaryIndex transitions to PUBLIC uphold 2-version invariant: ABSENT->BACKFILL_ONLY"
│       │   │
│       │   ├── • IndexPartitioning:{DescID: 104, IndexID: 2}
│       │   │   │ ABSENT → PUBLIC
│       │   │   │
│       │   │   └── • Precedence dependency from BACKFILL_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│       │   │         rule: "index existence precedes index dependents"
│       │   │
│       │   ├── • IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}
│       │   │   │ ABSENT → PUBLIC
│       │   │   │
│       │   │   └── • Precedence dependency from BACKFILL_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│       │   │         rule: "index existence precedes index dependents"
│       │   │
│       │   ├── • IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 2}
│       │   │   │ ABSENT → PUBLIC
│       │   │   │
│       │   │   └── • Precedence dependency from BACKFILL_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│       │   │         rule: "index existence precedes index dependents"
│       │   │
│       │   ├── • IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 2}
│       │   │   │ ABSENT → PUBLIC
│       │   │   │
│       │   │   └── • Precedence dependency from BACKFILL_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│       │   │         rule: "index existence precedes index dependents"
│       │   │
│       │   ├── • IndexData:{DescID: 104, IndexID: 2}
│       │   │   │ ABSENT → PUBLIC
│       │   │   │
│       │   │   └── • SameStagePrecedence dependency from BACKFILL_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│       │   │         rule: "index data exists as soon as index accepts backfills"
│       │   │
│       │   └── • IndexName:{DescID: 104, Name: id1, IndexID: 2}
│       │       │ ABSENT → PUBLIC
│       │       │
│       │       └── • Precedence dependency from BACKFILL_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│       │             rule: "index existence precedes index dependents"
│       │
│       ├── • 5 elements transitioning toward TRANSIENT_ABSENT
│       │   │
│       │   ├── • TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
│       │   │   │ ABSENT → DELETE_ONLY
│       │   │   │
│       │   │   └── • PreviousTransactionPrecedence dependency from ABSENT TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
│       │   │         rule: "TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: ABSENT->DELETE_ONLY"
│       │   │
│       │   ├── • IndexPartitioning:{DescID: 104, IndexID: 3}
│       │   │   │ ABSENT → TRANSIENT_ABSENT
│       │   │   │
│       │   │   └── • Precedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
│       │   │         rule: "temp index existence precedes index dependents"
│       │   │
│       │   ├── • IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}
│       │   │   │ ABSENT → PUBLIC
│       │   │   │
│       │   │   └── • Precedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
│       │   │         rule: "temp index existence precedes index dependents"
│       │   │
│       │   ├── • IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 3}
│       │   │   │ ABSENT → PUBLIC
│       │   │   │
│       │   │   └── • Precedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
│       │   │         rule: "temp index existence precedes index dependents"
│       │   │
│       │   └── • IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 3}
│       │       │ ABSENT → PUBLIC
│       │       │
│       │       └── • Precedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
│       │             rule: "temp index existence precedes index dependents"
│       │
│       └── • 11 Mutation operations
│           │
│           ├── • MakeAbsentIndexBackfilling
│           │     Index:
│           │       IndexID: 2
│           │       SourceIndexID: 1
│           │       TableID: 104
│           │       TemporaryIndexID: 3
│           │     IsSecondaryIndex: true
│           │
│           ├── • AddIndexPartitionInfo
│           │     Partitioning:
│           │       IndexID: 2
│           │       PartitioningDescriptor:
│           │         List:
│           │         - name: p1
│           │           values:
│           │           - - 3
│           │             - 2
│           │           subpartitioning:
│           │             numcolumns: 0
│           │             numimplicitcolumns: 0
│           │             list: []
│           │             range: []
│           │         NumColumns: 1
│           │       TableID: 104
│           │
│           ├── • AddColumnToIndex
│           │     ColumnID: 1
│           │     IndexID: 2
│           │     TableID: 104
│           │
│           ├── • AddColumnToIndex
│           │     ColumnID: 2
│           │     IndexID: 2
│           │     Ordinal: 1
│           │     TableID: 104
│           │
│           ├── • AddColumnToIndex
│           │     ColumnID: 3
│           │     IndexID: 2
│           │     Kind: 2
│           │     TableID: 104
│           │
│           ├── • SetIndexName
│           │     IndexID: 2
│           │     Name: id1
│           │     TableID: 104
│           │
│           ├── • MakeAbsentTempIndexDeleteOnly
│           │     Index:
│           │       ConstraintID: 1
│           │       IndexID: 3
│           │       SourceIndexID: 1
│           │       TableID: 104
│           │     IsSecondaryIndex: true
│           │
│           ├── • AddIndexPartitionInfo
│           │     Partitioning:
│           │       IndexID: 3
│           │       PartitioningDescriptor:
│           │         List:
│           │         - name: p1
│           │           values:
│           │           - - 3
│           │             - 2
│           │           subpartitioning:
│           │             numcolumns: 0
│           │             numimplicitcolumns: 0
│           │             list: []
│           │             range: []
│           │         NumColumns: 1
│           │       TableID: 104
│           │
│           ├── • AddColumnToIndex
│           │     ColumnID: 1
│           │     IndexID: 3
│           │     TableID: 104
│           │
│           ├── • AddColumnToIndex
│           │     ColumnID: 2
│           │     IndexID: 3
│           │     Ordinal: 1
│           │     TableID: 104
│           │
│           └── • AddColumnToIndex
│                 ColumnID: 3
│                 IndexID: 3
│                 Kind: 2
│                 TableID: 104
│
├── • PreCommitPhase
│   │
│   └── • Stage 1 of 1 in PreCommitPhase
│       │
│       └── • 2 Mutation operations
│           │
│           ├── • SetJobStateOnDescriptor
│           │     DescriptorID: 104
│           │     Initialize: true
│           │
│           └── • CreateSchemaChangerJob
│                 Authorization:
│                   UserName: root
│                 DescriptorIDs:
│                 - 104
│                 JobID: 1
│                 RunningStatus: PostCommitPhase stage 1 of 7 with 1 MutationType op pending
│                 Statements:
│                 - statement: CREATE INDEX id1 ON defaultdb.t1 (id, name) STORING (money) PARTITION
│                     BY LIST (id) (PARTITION p1 VALUES IN (1))
│                   redactedstatement: CREATE INDEX ‹id1› ON ‹defaultdb›.‹public›.‹t1› (‹id›, ‹name›)
│                     STORING (‹money›) PARTITION BY LIST (‹id›) (PARTITION ‹p1› VALUES IN (‹1›))
│                   statementtag: CREATE INDEX
│
├── • PostCommitPhase
│   │
│   ├── • Stage 1 of 7 in PostCommitPhase
│   │   │
│   │   ├── • 2 elements transitioning toward TRANSIENT_ABSENT
│   │   │   │
│   │   │   ├── • TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
│   │   │   │   │ DELETE_ONLY → WRITE_ONLY
│   │   │   │   │
│   │   │   │   ├── • PreviousTransactionPrecedence dependency from DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
│   │   │   │   │     rule: "TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: DELETE_ONLY->WRITE_ONLY"
│   │   │   │   │
│   │   │   │   ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}
│   │   │   │   │     rule: "index-column added to index before temp index receives writes"
│   │   │   │   │
│   │   │   │   ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 3}
│   │   │   │   │     rule: "index-column added to index before temp index receives writes"
│   │   │   │   │
│   │   │   │   └── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 3}
│   │   │   │         rule: "index-column added to index before temp index receives writes"
│   │   │   │
│   │   │   └── • IndexData:{DescID: 104, IndexID: 3}
│   │   │       │ ABSENT → PUBLIC
│   │   │       │
│   │   │       └── • SameStagePrecedence dependency from WRITE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
│   │   │             rule: "temp index data exists as soon as temp index accepts writes"
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeDeleteOnlyIndexWriteOnly
│   │       │     IndexID: 3
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 2 of 7 with 1 BackfillType op pending
│   │
│   ├── • Stage 2 of 7 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│   │   │       │ BACKFILL_ONLY → BACKFILLED
│   │   │       │
│   │   │       ├── • PreviousTransactionPrecedence dependency from BACKFILL_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│   │   │       │     rule: "SecondaryIndex transitions to PUBLIC uphold 2-version invariant: BACKFILL_ONLY->BACKFILLED"
│   │   │       │
│   │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}
│   │   │       │     rule: "index-column added to index before index is backfilled"
│   │   │       │
│   │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 2}
│   │   │       │     rule: "index-column added to index before index is backfilled"
│   │   │       │
│   │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 2}
│   │   │       │     rule: "index-column added to index before index is backfilled"
│   │   │       │
│   │   │       └── • Precedence dependency from WRITE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
│   │   │             rule: "temp index is WRITE_ONLY before backfill"
│   │   │
│   │   └── • 1 Backfill operation
│   │       │
│   │       └── • BackfillIndex
│   │             IndexID: 2
│   │             SourceIndexID: 1
│   │             TableID: 104
│   │
│   ├── • Stage 3 of 7 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│   │   │       │ BACKFILLED → DELETE_ONLY
│   │   │       │
│   │   │       └── • PreviousTransactionPrecedence dependency from BACKFILLED SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│   │   │             rule: "SecondaryIndex transitions to PUBLIC uphold 2-version invariant: BACKFILLED->DELETE_ONLY"
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeBackfillingIndexDeleteOnly
│   │       │     IndexID: 2
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 4 of 7 with 1 MutationType op pending
│   │
│   ├── • Stage 4 of 7 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│   │   │       │ DELETE_ONLY → MERGE_ONLY
│   │   │       │
│   │   │       └── • PreviousTransactionPrecedence dependency from DELETE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│   │   │             rule: "SecondaryIndex transitions to PUBLIC uphold 2-version invariant: DELETE_ONLY->MERGE_ONLY"
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeBackfilledIndexMerging
│   │       │     IndexID: 2
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 5 of 7 with 1 BackfillType op pending
│   │
│   ├── • Stage 5 of 7 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│   │   │       │ MERGE_ONLY → MERGED
│   │   │       │
│   │   │       └── • PreviousTransactionPrecedence dependency from MERGE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│   │   │             rule: "SecondaryIndex transitions to PUBLIC uphold 2-version invariant: MERGE_ONLY->MERGED"
│   │   │
│   │   └── • 1 Backfill operation
│   │       │
│   │       └── • MergeIndex
│   │             BackfilledIndexID: 2
│   │             TableID: 104
│   │             TemporaryIndexID: 3
│   │
│   ├── • Stage 6 of 7 in PostCommitPhase
│   │   │
│   │   ├── • 1 element transitioning toward PUBLIC
│   │   │   │
│   │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│   │   │       │ MERGED → WRITE_ONLY
│   │   │       │
│   │   │       └── • PreviousTransactionPrecedence dependency from MERGED SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│   │   │             rule: "SecondaryIndex transitions to PUBLIC uphold 2-version invariant: MERGED->WRITE_ONLY"
│   │   │
│   │   └── • 3 Mutation operations
│   │       │
│   │       ├── • MakeMergedIndexWriteOnly
│   │       │     IndexID: 2
│   │       │     TableID: 104
│   │       │
│   │       ├── • SetJobStateOnDescriptor
│   │       │     DescriptorID: 104
│   │       │
│   │       └── • UpdateSchemaChangerJob
│   │             JobID: 1
│   │             RunningStatus: PostCommitPhase stage 7 of 7 with 1 ValidationType op pending
│   │
│   └── • Stage 7 of 7 in PostCommitPhase
│       │
│       ├── • 1 element transitioning toward PUBLIC
│       │   │
│       │   └── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│       │       │ WRITE_ONLY → VALIDATED
│       │       │
│       │       ├── • PreviousTransactionPrecedence dependency from WRITE_ONLY SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
│       │       │     rule: "SecondaryIndex transitions to PUBLIC uphold 2-version invariant: WRITE_ONLY->VALIDATED"
│       │       │
│       │       └── • Precedence dependency from PUBLIC IndexName:{DescID: 104, Name: id1, IndexID: 2}
│       │             rule: "secondary index named before validation"
│       │
│       └── • 1 Validation operation
│           │
│           └── • ValidateIndex
│                 IndexID: 2
│                 TableID: 104
│
└── • PostCommitNonRevertiblePhase
    │
    ├── • Stage 1 of 2 in PostCommitNonRevertiblePhase
    │   │
    │   ├── • 1 element transitioning toward PUBLIC
    │   │   │
    │   │   └── • SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
    │   │       │ VALIDATED → PUBLIC
    │   │       │
    │   │       ├── • PreviousTransactionPrecedence dependency from VALIDATED SecondaryIndex:{DescID: 104, IndexID: 2, ConstraintID: 0, TemporaryIndexID: 3, SourceIndexID: 1}
    │   │       │     rule: "SecondaryIndex transitions to PUBLIC uphold 2-version invariant: VALIDATED->PUBLIC"
    │   │       │
    │   │       ├── • Precedence dependency from PUBLIC IndexPartitioning:{DescID: 104, IndexID: 2}
    │   │       │     rule: "index dependents exist before index becomes public"
    │   │       │
    │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 2}
    │   │       │     rule: "index dependents exist before index becomes public"
    │   │       │
    │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 2}
    │   │       │     rule: "index dependents exist before index becomes public"
    │   │       │
    │   │       ├── • Precedence dependency from PUBLIC IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 2}
    │   │       │     rule: "index dependents exist before index becomes public"
    │   │       │
    │   │       └── • Precedence dependency from PUBLIC IndexName:{DescID: 104, Name: id1, IndexID: 2}
    │   │             rule: "index dependents exist before index becomes public"
    │   │
    │   ├── • 4 elements transitioning toward TRANSIENT_ABSENT
    │   │   │
    │   │   ├── • TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
    │   │   │   │ WRITE_ONLY → TRANSIENT_DELETE_ONLY
    │   │   │   │
    │   │   │   └── • PreviousTransactionPrecedence dependency from WRITE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
    │   │   │         rule: "TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: WRITE_ONLY->TRANSIENT_DELETE_ONLY"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}
    │   │   │   │ PUBLIC → TRANSIENT_ABSENT
    │   │   │   │
    │   │   │   └── • skip PUBLIC → TRANSIENT_ABSENT operations
    │   │   │         rule: "skip index-column removal ops on index removal"
    │   │   │
    │   │   ├── • IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 3}
    │   │   │   │ PUBLIC → TRANSIENT_ABSENT
    │   │   │   │
    │   │   │   └── • skip PUBLIC → TRANSIENT_ABSENT operations
    │   │   │         rule: "skip index-column removal ops on index removal"
    │   │   │
    │   │   └── • IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 3}
    │   │       │ PUBLIC → TRANSIENT_ABSENT
    │   │       │
    │   │       └── • skip PUBLIC → TRANSIENT_ABSENT operations
    │   │             rule: "skip index-column removal ops on index removal"
    │   │
    │   └── • 6 Mutation operations
    │       │
    │       ├── • RefreshStats
    │       │     TableID: 104
    │       │
    │       ├── • LogEvent
    │       │     Element:
    │       │       SecondaryIndex:
    │       │         indexId: 2
    │       │         sourceIndexId: 1
    │       │         tableId: 104
    │       │         temporaryIndexId: 3
    │       │     EventBase:
    │       │       Authorization:
    │       │         UserName: root
    │       │       Statement: CREATE INDEX ‹id1› ON ‹defaultdb›.‹public›.‹t1› (‹id›, ‹name›) STORING
    │       │         (‹money›) PARTITION BY LIST (‹id›) (PARTITION ‹p1› VALUES IN (‹1›))
    │       │       StatementTag: CREATE INDEX
    │       │       TargetMetadata:
    │       │         SourceElementID: 1
    │       │         SubWorkID: 1
    │       │     TargetStatus: 2
    │       │
    │       ├── • MakeValidatedSecondaryIndexPublic
    │       │     IndexID: 2
    │       │     TableID: 104
    │       │
    │       ├── • MakeWriteOnlyIndexDeleteOnly
    │       │     IndexID: 3
    │       │     TableID: 104
    │       │
    │       ├── • SetJobStateOnDescriptor
    │       │     DescriptorID: 104
    │       │
    │       └── • UpdateSchemaChangerJob
    │             IsNonCancelable: true
    │             JobID: 1
    │             RunningStatus: PostCommitNonRevertiblePhase stage 2 of 2 with 2 MutationType ops pending
    │
    └── • Stage 2 of 2 in PostCommitNonRevertiblePhase
        │
        ├── • 2 elements transitioning toward TRANSIENT_ABSENT
        │   │
        │   ├── • TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
        │   │   │ TRANSIENT_DELETE_ONLY → TRANSIENT_ABSENT
        │   │   │
        │   │   ├── • PreviousTransactionPrecedence dependency from TRANSIENT_DELETE_ONLY TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
        │   │   │     rule: "TemporaryIndex transitions to TRANSIENT_ABSENT uphold 2-version invariant: TRANSIENT_DELETE_ONLY->TRANSIENT_ABSENT"
        │   │   │
        │   │   ├── • Precedence dependency from TRANSIENT_ABSENT IndexPartitioning:{DescID: 104, IndexID: 3}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • Precedence dependency from TRANSIENT_ABSENT IndexColumn:{DescID: 104, ColumnID: 1, IndexID: 3}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   ├── • Precedence dependency from TRANSIENT_ABSENT IndexColumn:{DescID: 104, ColumnID: 2, IndexID: 3}
        │   │   │     rule: "dependents removed before index"
        │   │   │
        │   │   └── • Precedence dependency from TRANSIENT_ABSENT IndexColumn:{DescID: 104, ColumnID: 3, IndexID: 3}
        │   │         rule: "dependents removed before index"
        │   │
        │   └── • IndexData:{DescID: 104, IndexID: 3}
        │       │ PUBLIC → TRANSIENT_ABSENT
        │       │
        │       └── • Precedence dependency from TRANSIENT_ABSENT TemporaryIndex:{DescID: 104, IndexID: 3, ConstraintID: 1, SourceIndexID: 1}
        │             rule: "index removed before garbage collection"
        │
        └── • 4 Mutation operations
            │
            ├── • MakeIndexAbsent
            │     IndexID: 3
            │     TableID: 104
            │
            ├── • CreateGCJobForIndex
            │     IndexID: 3
            │     StatementForDropJob:
            │       Statement: CREATE INDEX id1 ON defaultdb.public.t1 (id, name) STORING (money) PARTITION
            │         BY LIST (id) (PARTITION p1 VALUES IN (1))
            │     TableID: 104
            │
            ├── • RemoveJobStateFromDescriptor
            │     DescriptorID: 104
            │     JobID: 1
            │
            └── • UpdateSchemaChangerJob
                  DescriptorIDsToRemove:
                  - 104
                  IsNonCancelable: true
                  JobID: 1
                  RunningStatus: all stages completed
