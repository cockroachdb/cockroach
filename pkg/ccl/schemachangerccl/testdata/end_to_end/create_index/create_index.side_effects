/* setup */
CREATE TABLE defaultdb.t1 (id INT PRIMARY KEY, name VARCHAR(256), money INT);
----
...
+object {100 101 t1} -> 104

/* test */
CREATE INDEX id1
  ON defaultdb.t1 (id, name)
  STORING (money)
  PARTITION BY LIST (id) (PARTITION p1 VALUES IN (1));
----
begin transaction #1
# begin StatementPhase
checking for feature: CREATE INDEX
increment telemetry for sql.schema.create_index
write *eventpb.CreateIndex to event log:
  indexName: id1
  mutationId: 1
  sql:
    descriptorId: 104
    statement: CREATE INDEX ‹id1› ON ‹defaultdb›.‹public›.‹t1› (‹id›, ‹name›) STORING
      (‹money›) PARTITION BY LIST (‹id›) (PARTITION ‹p1› VALUES IN (‹1›))
    tag: CREATE INDEX
    user: root
  tableName: defaultdb.public.t1
## StatementPhase stage 1 of 1 with 11 MutationType ops
upsert descriptor #104
  ...
     id: 104
     modificationTime: {}
  +  mutations:
  +  - direction: ADD
  +    index:
  +      createdAtNanos: "1640998800000000000"
  +      createdExplicitly: true
  +      foreignKey: {}
  +      geoConfig: {}
  +      id: 2
  +      interleave: {}
  +      keyColumnDirections:
  +      - ASC
  +      - ASC
  +      keyColumnIds:
  +      - 1
  +      - 2
  +      keyColumnNames:
  +      - id
  +      - name
  +      name: id1
  +      partitioning:
  +        list:
  +        - name: p1
  +          subpartitioning: {}
  +          values:
  +          - AwI=
  +        numColumns: 1
  +      sharded: {}
  +      storeColumnIds:
  +      - 3
  +      storeColumnNames:
  +      - money
  +      version: 4
  +    mutationId: 1
  +    state: BACKFILLING
  +  - direction: ADD
  +    index:
  +      constraintId: 1
  +      createdExplicitly: true
  +      foreignKey: {}
  +      geoConfig: {}
  +      id: 3
  +      interleave: {}
  +      keyColumnDirections:
  +      - ASC
  +      - ASC
  +      keyColumnIds:
  +      - 1
  +      - 2
  +      keyColumnNames:
  +      - id
  +      - name
  +      name: crdb_internal_index_3_name_placeholder
  +      partitioning:
  +        list:
  +        - name: p1
  +          subpartitioning: {}
  +          values:
  +          - AwI=
  +        numColumns: 1
  +      sharded: {}
  +      storeColumnIds:
  +      - 3
  +      storeColumnNames:
  +      - money
  +      useDeletePreservingEncoding: true
  +      version: 4
  +    mutationId: 1
  +    state: DELETE_ONLY
     name: t1
     nextColumnId: 4
     nextConstraintId: 2
     nextFamilyId: 1
  -  nextIndexId: 2
  +  nextIndexId: 4
     nextMutationId: 1
     parentId: 100
  ...
       time: {}
     unexposedParentSchemaId: 101
  -  version: "1"
  +  version: "2"
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase stage 1 of 2 with 1 MutationType op
undo all catalog changes within txn #1
persist all catalog changes to storage
## PreCommitPhase stage 2 of 2 with 15 MutationType ops
upsert descriptor #104
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    currentStatuses: <redacted>
  +    jobId: "1"
  +    nameMapping:
  +      columns:
  +        "1": id
  +        "2": name
  +        "3": money
  +        "4294967294": tableoid
  +        "4294967295": crdb_internal_mvcc_timestamp
  +      families:
  +        "0": primary
  +      id: 104
  +      indexes:
  +        "1": t1_pkey
  +        "2": id1
  +      name: t1
  +    relevantStatements:
  +    - statement:
  +        redactedStatement: CREATE INDEX ‹id1› ON ‹defaultdb›.‹public›.‹t1› (‹id›,
  +          ‹name›) STORING (‹money›) PARTITION BY LIST (‹id›) (PARTITION ‹p1› VALUES
  +          IN (‹1›))
  +        statement: CREATE INDEX id1 ON defaultdb.t1 (id, name) STORING (money) PARTITION
  +          BY LIST (id) (PARTITION p1 VALUES IN (1))
  +        statementTag: CREATE INDEX
  +    revertible: true
  +    targetRanks: <redacted>
  +    targets: <redacted>
     families:
     - columnIds:
  ...
     id: 104
     modificationTime: {}
  +  mutations:
  +  - direction: ADD
  +    index:
  +      createdAtNanos: "1640998800000000000"
  +      createdExplicitly: true
  +      foreignKey: {}
  +      geoConfig: {}
  +      id: 2
  +      interleave: {}
  +      keyColumnDirections:
  +      - ASC
  +      - ASC
  +      keyColumnIds:
  +      - 1
  +      - 2
  +      keyColumnNames:
  +      - id
  +      - name
  +      name: id1
  +      partitioning:
  +        list:
  +        - name: p1
  +          subpartitioning: {}
  +          values:
  +          - AwI=
  +        numColumns: 1
  +      sharded: {}
  +      storeColumnIds:
  +      - 3
  +      storeColumnNames:
  +      - money
  +      version: 4
  +    mutationId: 1
  +    state: BACKFILLING
  +  - direction: ADD
  +    index:
  +      constraintId: 1
  +      createdExplicitly: true
  +      foreignKey: {}
  +      geoConfig: {}
  +      id: 3
  +      interleave: {}
  +      keyColumnDirections:
  +      - ASC
  +      - ASC
  +      keyColumnIds:
  +      - 1
  +      - 2
  +      keyColumnNames:
  +      - id
  +      - name
  +      name: crdb_internal_index_3_name_placeholder
  +      partitioning:
  +        list:
  +        - name: p1
  +          subpartitioning: {}
  +          values:
  +          - AwI=
  +        numColumns: 1
  +      sharded: {}
  +      storeColumnIds:
  +      - 3
  +      storeColumnNames:
  +      - money
  +      useDeletePreservingEncoding: true
  +      version: 4
  +    mutationId: 1
  +    state: DELETE_ONLY
     name: t1
     nextColumnId: 4
     nextConstraintId: 2
     nextFamilyId: 1
  -  nextIndexId: 2
  +  nextIndexId: 4
     nextMutationId: 1
     parentId: 100
  ...
       time: {}
     unexposedParentSchemaId: 101
  -  version: "1"
  +  version: "2"
persist all catalog changes to storage
create job #1 (non-cancelable: false): "CREATE INDEX id1 ON defaultdb.public.t1 (id, name) STORING (money) PARTITION BY LIST (id) (PARTITION p1 VALUES IN (1))"
  descriptor IDs: [104]
# end PreCommitPhase
commit transaction #1
notified job registry to adopt jobs: [1]
# begin PostCommitPhase
begin transaction #2
commit transaction #2
begin transaction #3
## PostCommitPhase stage 1 of 7 with 3 MutationType ops
upsert descriptor #104
  ...
         version: 4
       mutationId: 1
  -    state: DELETE_ONLY
  +    state: WRITE_ONLY
     name: t1
     nextColumnId: 4
  ...
       time: {}
     unexposedParentSchemaId: 101
  -  version: "2"
  +  version: "3"
persist all catalog changes to storage
update progress of schema change job #1: "PostCommitPhase stage 2 of 7 with 1 BackfillType op pending"
commit transaction #3
begin transaction #4
## PostCommitPhase stage 2 of 7 with 1 BackfillType op
backfill indexes [2] from index #1 in table #104
commit transaction #4
begin transaction #5
## PostCommitPhase stage 3 of 7 with 3 MutationType ops
upsert descriptor #104
  ...
         version: 4
       mutationId: 1
  -    state: BACKFILLING
  +    state: DELETE_ONLY
     - direction: ADD
       index:
  ...
       time: {}
     unexposedParentSchemaId: 101
  -  version: "3"
  +  version: "4"
persist all catalog changes to storage
update progress of schema change job #1: "PostCommitPhase stage 4 of 7 with 1 MutationType op pending"
commit transaction #5
begin transaction #6
## PostCommitPhase stage 4 of 7 with 3 MutationType ops
upsert descriptor #104
  ...
         version: 4
       mutationId: 1
  -    state: DELETE_ONLY
  +    state: MERGING
     - direction: ADD
       index:
  ...
       time: {}
     unexposedParentSchemaId: 101
  -  version: "4"
  +  version: "5"
persist all catalog changes to storage
update progress of schema change job #1: "PostCommitPhase stage 5 of 7 with 1 BackfillType op pending"
commit transaction #6
begin transaction #7
## PostCommitPhase stage 5 of 7 with 1 BackfillType op
merge temporary indexes [3] into backfilled indexes [2] in table #104
commit transaction #7
begin transaction #8
## PostCommitPhase stage 6 of 7 with 4 MutationType ops
upsert descriptor #104
  ...
         version: 4
       mutationId: 1
  -    state: MERGING
  -  - direction: ADD
  +    state: WRITE_ONLY
  +  - direction: DROP
       index:
         constraintId: 1
  ...
         version: 4
       mutationId: 1
  -    state: WRITE_ONLY
  +    state: DELETE_ONLY
     name: t1
     nextColumnId: 4
  ...
       time: {}
     unexposedParentSchemaId: 101
  -  version: "5"
  +  version: "6"
persist all catalog changes to storage
update progress of schema change job #1: "PostCommitPhase stage 7 of 7 with 1 ValidationType op pending"
commit transaction #8
begin transaction #9
## PostCommitPhase stage 7 of 7 with 1 ValidationType op
validate forward indexes [2] in table #104
commit transaction #9
begin transaction #10
## PostCommitNonRevertiblePhase stage 1 of 1 with 9 MutationType ops
upsert descriptor #104
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  -  declarativeSchemaChangerState:
  -    authorization:
  -      userName: root
  -    currentStatuses: <redacted>
  -    jobId: "1"
  -    nameMapping:
  -      columns:
  -        "1": id
  -        "2": name
  -        "3": money
  -        "4294967294": tableoid
  -        "4294967295": crdb_internal_mvcc_timestamp
  -      families:
  -        "0": primary
  -      id: 104
  -      indexes:
  -        "1": t1_pkey
  -        "2": id1
  -      name: t1
  -    relevantStatements:
  -    - statement:
  -        redactedStatement: CREATE INDEX ‹id1› ON ‹defaultdb›.‹public›.‹t1› (‹id›,
  -          ‹name›) STORING (‹money›) PARTITION BY LIST (‹id›) (PARTITION ‹p1› VALUES
  -          IN (‹1›))
  -        statement: CREATE INDEX id1 ON defaultdb.t1 (id, name) STORING (money) PARTITION
  -          BY LIST (id) (PARTITION p1 VALUES IN (1))
  -        statementTag: CREATE INDEX
  -    revertible: true
  -    targetRanks: <redacted>
  -    targets: <redacted>
     families:
     - columnIds:
  ...
     formatVersion: 3
     id: 104
  +  indexes:
  +  - createdAtNanos: "1640998800000000000"
  +    createdExplicitly: true
  +    foreignKey: {}
  +    geoConfig: {}
  +    id: 2
  +    interleave: {}
  +    keyColumnDirections:
  +    - ASC
  +    - ASC
  +    keyColumnIds:
  +    - 1
  +    - 2
  +    keyColumnNames:
  +    - id
  +    - name
  +    name: id1
  +    partitioning:
  +      list:
  +      - name: p1
  +        subpartitioning: {}
  +        values:
  +        - AwI=
  +      numColumns: 1
  +    sharded: {}
  +    storeColumnIds:
  +    - 3
  +    storeColumnNames:
  +    - money
  +    version: 4
     modificationTime: {}
  -  mutations:
  -  - direction: ADD
  -    index:
  -      createdAtNanos: "1640998800000000000"
  -      createdExplicitly: true
  -      foreignKey: {}
  -      geoConfig: {}
  -      id: 2
  -      interleave: {}
  -      keyColumnDirections:
  -      - ASC
  -      - ASC
  -      keyColumnIds:
  -      - 1
  -      - 2
  -      keyColumnNames:
  -      - id
  -      - name
  -      name: id1
  -      partitioning:
  -        list:
  -        - name: p1
  -          subpartitioning: {}
  -          values:
  -          - AwI=
  -        numColumns: 1
  -      sharded: {}
  -      storeColumnIds:
  -      - 3
  -      storeColumnNames:
  -      - money
  -      version: 4
  -    mutationId: 1
  -    state: WRITE_ONLY
  -  - direction: DROP
  -    index:
  -      constraintId: 1
  -      createdExplicitly: true
  -      foreignKey: {}
  -      geoConfig: {}
  -      id: 3
  -      interleave: {}
  -      keyColumnDirections:
  -      - ASC
  -      - ASC
  -      keyColumnIds:
  -      - 1
  -      - 2
  -      keyColumnNames:
  -      - id
  -      - name
  -      name: crdb_internal_index_3_name_placeholder
  -      partitioning:
  -        list:
  -        - name: p1
  -          subpartitioning: {}
  -          values:
  -          - AwI=
  -        numColumns: 1
  -      sharded: {}
  -      storeColumnIds:
  -      - 3
  -      storeColumnNames:
  -      - money
  -      useDeletePreservingEncoding: true
  -      version: 4
  -    mutationId: 1
  -    state: DELETE_ONLY
  +  mutations: []
     name: t1
     nextColumnId: 4
  ...
       time: {}
     unexposedParentSchemaId: 101
  -  version: "6"
  +  version: "7"
persist all catalog changes to storage
adding table for stats refresh: 104
create job #2 (non-cancelable: true): "GC for CREATE INDEX id1 ON defaultdb.public.t1 (id, name) STORING (money) PARTITION BY LIST (id) (PARTITION p1 VALUES IN (1))"
  descriptor IDs: [104]
update progress of schema change job #1: "all stages completed"
set schema change job #1 to non-cancellable
updated schema change job #1 descriptor IDs to []
write *eventpb.FinishSchemaChange to event log:
  sc:
    descriptorId: 104
commit transaction #10
notified job registry to adopt jobs: [2]
# end PostCommitPhase
