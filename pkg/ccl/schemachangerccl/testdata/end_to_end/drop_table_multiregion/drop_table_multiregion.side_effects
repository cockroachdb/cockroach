/* setup */
CREATE DATABASE multi_region_test_db PRIMARY REGION "us-east1" REGIONS "us-east2", "us-east3" SURVIVE REGION FAILURE;
CREATE TABLE multi_region_test_db.public.table_regional_by_row (
  k INT PRIMARY KEY
) LOCALITY REGIONAL BY ROW;
----
...
+database {0 0 multi_region_test_db} -> 104
+schema {104 0 public} -> 105
+object {104 105 crdb_internal_region} -> 106
+object {104 105 _crdb_internal_region} -> 107
+object {104 105 table_regional_by_row} -> 108

/* test */
DROP TABLE multi_region_test_db.public.table_regional_by_row;
----
begin transaction #1
# begin StatementPhase
checking for feature: DROP TABLE
increment telemetry for sql.schema.drop_table
write *eventpb.DropTable to event log:
  sql:
    descriptorId: 108
    statement: DROP TABLE ‹multi_region_test_db›.‹public›.‹table_regional_by_row›
    tag: DROP TABLE
    user: root
  tableName: multi_region_test_db.public.table_regional_by_row
## StatementPhase stage 1 of 1 with 38 MutationType ops
delete object namespace entry {104 105 table_regional_by_row} -> 108
upsert descriptor #106
  ...
         withGrantOption: "2"
       version: 3
  -  referencingDescriptorIds:
  -  - 108
     regionConfig:
       primaryRegion: us-east1
       zoneConfigExtensions: {}
  -  version: "2"
  +  version: "3"
upsert descriptor #107
  ...
         withGrantOption: "2"
       version: 3
  -  referencingDescriptorIds:
  -  - 108
  -  version: "2"
  +  version: "3"
upsert descriptor #108
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  +  dropTime: <redacted>"
     families:
     - columnIds:
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 105
  -  version: "1"
  +  version: "2"
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase stage 1 of 2 with 1 MutationType op
undo all catalog changes within txn #1
persist all catalog changes to storage
## PreCommitPhase stage 2 of 2 with 42 MutationType ops
delete object namespace entry {104 105 table_regional_by_row} -> 108
upsert descriptor #106
   type:
     arrayTypeId: 107
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    jobId: "1"
  +    nameMapping:
  +      id: 106
  +      name: crdb_internal_region
     enumMembers:
     - logicalRepresentation: us-east1
  ...
         withGrantOption: "2"
       version: 3
  -  referencingDescriptorIds:
  -  - 108
     regionConfig:
       primaryRegion: us-east1
       zoneConfigExtensions: {}
  -  version: "2"
  +  version: "3"
upsert descriptor #107
  ...
       family: ArrayFamily
       oid: 100107
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    jobId: "1"
  +    nameMapping:
  +      id: 107
  +      name: _crdb_internal_region
     id: 107
     kind: ALIAS
  ...
         withGrantOption: "2"
       version: 3
  -  referencingDescriptorIds:
  -  - 108
  -  version: "2"
  +  version: "3"
upsert descriptor #108
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    currentStatuses: <redacted>
  +    jobId: "1"
  +    nameMapping:
  +      id: 108
  +      name: table_regional_by_row
  +    relevantStatements:
  +    - statement:
  +        redactedStatement: DROP TABLE ‹multi_region_test_db›.‹public›.‹table_regional_by_row›
  +        statement: DROP TABLE multi_region_test_db.public.table_regional_by_row
  +        statementTag: DROP TABLE
  +    targetRanks: <redacted>
  +    targets: <redacted>
  +  dropTime: <redacted>"
     families:
     - columnIds:
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 105
  -  version: "1"
  +  version: "2"
persist all catalog changes to storage
create job #1 (non-cancelable: true): "DROP TABLE multi_region_test_db.public.table_regional_by_row"
  descriptor IDs: [106 107 108]
# end PreCommitPhase
commit transaction #1
notified job registry to adopt jobs: [1]
# begin PostCommitPhase
begin transaction #2
commit transaction #2
begin transaction #3
## PostCommitNonRevertiblePhase stage 1 of 1 with 6 MutationType ops
upsert descriptor #106
   type:
     arrayTypeId: 107
  -  declarativeSchemaChangerState:
  -    authorization:
  -      userName: root
  -    jobId: "1"
  -    nameMapping:
  -      id: 106
  -      name: crdb_internal_region
     enumMembers:
     - logicalRepresentation: us-east1
  ...
       primaryRegion: us-east1
       zoneConfigExtensions: {}
  -  version: "3"
  +  version: "4"
upsert descriptor #107
  ...
       family: ArrayFamily
       oid: 100107
  -  declarativeSchemaChangerState:
  -    authorization:
  -      userName: root
  -    jobId: "1"
  -    nameMapping:
  -      id: 107
  -      name: _crdb_internal_region
     id: 107
     kind: ALIAS
  ...
         withGrantOption: "2"
       version: 3
  -  version: "3"
  +  version: "4"
upsert descriptor #108
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  -  declarativeSchemaChangerState:
  -    authorization:
  -      userName: root
  -    currentStatuses: <redacted>
  -    jobId: "1"
  -    nameMapping:
  -      id: 108
  -      name: table_regional_by_row
  -    relevantStatements:
  -    - statement:
  -        redactedStatement: DROP TABLE ‹multi_region_test_db›.‹public›.‹table_regional_by_row›
  -        statement: DROP TABLE multi_region_test_db.public.table_regional_by_row
  -        statementTag: DROP TABLE
  -    targetRanks: <redacted>
  -    targets: <redacted>
     dropTime: <redacted>"
     families:
  ...
     state: DROP
     unexposedParentSchemaId: 105
  -  version: "2"
  +  version: "3"
persist all catalog changes to storage
create job #2 (non-cancelable: true): "GC for DROP TABLE multi_region_test_db.public.table_regional_by_row"
  descriptor IDs: [108]
update progress of schema change job #1: "all stages completed"
set schema change job #1 to non-cancellable
updated schema change job #1 descriptor IDs to []
write *eventpb.FinishSchemaChange to event log:
  sc:
    descriptorId: 108
commit transaction #3
notified job registry to adopt jobs: [2]
# end PostCommitPhase
