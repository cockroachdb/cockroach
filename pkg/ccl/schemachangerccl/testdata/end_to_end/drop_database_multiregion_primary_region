setup
CREATE DATABASE multi_region_test_db PRIMARY REGION "us-east1" REGIONS "us-east2", "us-east3" SURVIVE REGION FAILURE;
CREATE TABLE multi_region_test_db.public.table_regional_by_table (
  a INT PRIMARY KEY
) LOCALITY REGIONAL BY TABLE IN "us-east2";
----
...
+database {0 0 multi_region_test_db} -> 104
+object {104 106 crdb_internal_region} -> 105
+schema {104 0 public} -> 106
+object {104 106 _crdb_internal_region} -> 107
+object {104 106 table_regional_by_table} -> 108

test
DROP DATABASE multi_region_test_db CASCADE
----
begin transaction #1
# begin StatementPhase
checking for feature: DROP DATABASE
increment telemetry for sql.schema.drop_database
## StatementPhase stage 1 of 1 with 5 MutationType ops
add synthetic descriptor #104:
   database:
     id: 104
  -  modificationTime: {}
  +  modificationTime:
  +    wallTime: "1640995200000000001"
     name: multi_region_test_db
     privileges:
  ...
       public:
         id: 106
  +  state: DROP
     version: "1"
add synthetic descriptor #106:
   schema:
     id: 106
  -  modificationTime: {}
  +  modificationTime:
  +    wallTime: "1640995200000000001"
     name: public
     parentId: 104
  ...
         withGrantOption: 2
       version: 2
  +  state: DROP
     version: "1"
add synthetic descriptor #105:
  ...
     id: 105
     kind: MULTIREGION_ENUM
  -  modificationTime: {}
  +  modificationTime:
  +    wallTime: "1640995200000000001"
     name: crdb_internal_region
     parentId: 104
  ...
       primaryRegion: us-east1
       zoneConfigExtensions: {}
  +  state: DROP
     version: "2"
add synthetic descriptor #107:
  ...
     id: 107
     kind: ALIAS
  -  modificationTime: {}
  +  modificationTime:
  +    wallTime: "1640995200000000001"
     name: _crdb_internal_region
     parentId: 104
  ...
         withGrantOption: 2
       version: 2
  +  state: DROP
     version: "1"
add synthetic descriptor #108:
  ...
       regionalByTable:
         region: us-east2
  -  modificationTime: {}
  +  modificationTime:
  +    wallTime: "1640995200000000001"
     name: table_regional_by_table
     nextColumnId: 2
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 106
     version: "1"
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase stage 1 of 1 with 20 MutationType ops
delete database namespace entry {0 0 multi_region_test_db} -> 104
delete object namespace entry {104 106 crdb_internal_region} -> 105
delete schema namespace entry {104 0 public} -> 106
delete object namespace entry {104 106 _crdb_internal_region} -> 107
delete object namespace entry {104 106 table_regional_by_table} -> 108
upsert descriptor #104
   database:
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    currentStatuses: <redacted>
  +    jobId: "1"
  +    relevantStatements:
  +    - statement:
  +        redactedStatement: DROP DATABASE ‹multi_region_test_db› CASCADE
  +        statement: DROP DATABASE multi_region_test_db CASCADE
  +        statementTag: DROP DATABASE
  +    targetRanks: <redacted>
  +    targets: <redacted>
     id: 104
     modificationTime: {}
  ...
       public:
         id: 106
  -  version: "1"
  +  state: DROP
  +  version: "2"
upsert descriptor #105
   type:
     arrayTypeId: 107
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    currentStatuses: <redacted>
  +    jobId: "1"
  +    relevantStatements:
  +    - statement:
  +        redactedStatement: DROP DATABASE ‹multi_region_test_db› CASCADE
  +        statement: DROP DATABASE multi_region_test_db CASCADE
  +        statementTag: DROP DATABASE
  +    targetRanks: <redacted>
  +    targets: <redacted>
     enumMembers:
     - logicalRepresentation: us-east1
  ...
       primaryRegion: us-east1
       zoneConfigExtensions: {}
  -  version: "2"
  +  state: DROP
  +  version: "3"
upsert descriptor #106
   schema:
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    currentStatuses: <redacted>
  +    jobId: "1"
  +    relevantStatements:
  +    - statement:
  +        redactedStatement: DROP DATABASE ‹multi_region_test_db› CASCADE
  +        statement: DROP DATABASE multi_region_test_db CASCADE
  +        statementTag: DROP DATABASE
  +    targetRanks: <redacted>
  +    targets: <redacted>
     id: 106
     modificationTime: {}
  ...
         withGrantOption: 2
       version: 2
  -  version: "1"
  +  state: DROP
  +  version: "2"
upsert descriptor #107
  ...
       family: ArrayFamily
       oid: 100107
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    currentStatuses: <redacted>
  +    jobId: "1"
  +    relevantStatements:
  +    - statement:
  +        redactedStatement: DROP DATABASE ‹multi_region_test_db› CASCADE
  +        statement: DROP DATABASE multi_region_test_db CASCADE
  +        statementTag: DROP DATABASE
  +    targetRanks: <redacted>
  +    targets: <redacted>
     id: 107
     kind: ALIAS
  ...
         withGrantOption: 2
       version: 2
  -  version: "1"
  +  state: DROP
  +  version: "2"
upsert descriptor #108
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    currentStatuses: <redacted>
  +    jobId: "1"
  +    relevantStatements:
  +    - statement:
  +        redactedStatement: DROP DATABASE ‹multi_region_test_db› CASCADE
  +        statement: DROP DATABASE multi_region_test_db CASCADE
  +        statementTag: DROP DATABASE
  +    targetRanks: <redacted>
  +    targets: <redacted>
  +  dropTime: <redacted>"
     families:
     - columnIds:
  ...
     replacementOf:
       time: {}
  +  state: DROP
     unexposedParentSchemaId: 106
  -  version: "1"
  +  version: "2"
delete all comments for table descriptors [108]
delete role settings for database on #104
create job #1 (non-cancelable: true): "DROP DATABASE multi_region_test_db CASCADE"
  descriptor IDs: [104 105 106 107 108]
# end PreCommitPhase
commit transaction #1
notified job registry to adopt jobs: [1]
# begin PostCommitPhase
begin transaction #2
commit transaction #2
begin transaction #3
## PostCommitNonRevertiblePhase stage 1 of 1 with 20 MutationType ops
upsert descriptor #108
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  -  declarativeSchemaChangerState:
  -    authorization:
  -      userName: root
  -    currentStatuses: <redacted>
  -    jobId: "1"
  -    relevantStatements:
  -    - statement:
  -        redactedStatement: DROP DATABASE ‹multi_region_test_db› CASCADE
  -        statement: DROP DATABASE multi_region_test_db CASCADE
  -        statementTag: DROP DATABASE
  -    targetRanks: <redacted>
  -    targets: <redacted>
     dropTime: <redacted>"
     families:
  ...
     state: DROP
     unexposedParentSchemaId: 106
  -  version: "2"
  +  version: "3"
delete descriptor #104
delete descriptor #105
delete descriptor #106
delete descriptor #107
write *eventpb.DropDatabase to event log: DROP DATABASE ‹multi_region_test_db› CASCADE
create job #2 (non-cancelable: true): "GC for DROP DATABASE multi_region_test_db CASCADE"
  descriptor IDs: [108 104]
update progress of schema change job #1: "all stages completed"
commit transaction #3
notified job registry to adopt jobs: [2]
# end PostCommitPhase
