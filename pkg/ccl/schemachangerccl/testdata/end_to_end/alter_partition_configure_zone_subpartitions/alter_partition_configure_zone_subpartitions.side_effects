/* setup */
CREATE TABLE person (
    name STRING,
    country STRING,
    birth_date DATE,
    PRIMARY KEY (country, birth_date, name)
)
    PARTITION BY LIST (country) (
            PARTITION australia
                VALUES IN ('AU', 'NZ')
                PARTITION BY RANGE (birth_date)
                    (
                        PARTITION old_au VALUES FROM (minvalue) TO ('1995-01-01'),
                        PARTITION yung_au VALUES FROM ('1995-01-01') TO (maxvalue)
                    ),
            PARTITION north_america
                VALUES IN ('US', 'CA')
                PARTITION BY RANGE (birth_date)
                    (
                        PARTITION old_na VALUES FROM (minvalue) TO ('1995-01-01'),
                        PARTITION yung_na VALUES FROM ('1995-01-01') TO (maxvalue)
                    ),
            PARTITION default
                VALUES IN (default)
        );
----
...
+object {100 101 person} -> 104

/* test */
ALTER PARTITION australia OF TABLE person CONFIGURE ZONE USING gc.ttlseconds = 2;
ALTER PARTITION old_au OF TABLE person CONFIGURE ZONE USING gc.ttlseconds = 4;
ALTER PARTITION yung_au OF TABLE person CONFIGURE ZONE USING gc.ttlseconds = 5;
ALTER PARTITION old_au OF TABLE person CONFIGURE ZONE USING gc.ttlseconds = 6;
----
begin transaction #1
# begin StatementPhase
checking for feature: CONFIGURE ZONE
write *eventpb.SetZoneConfig to event log:
  config:
    options:
    - '"gc.ttlseconds" = 2'
    target: PARTITION australia OF INDEX defaultdb.public.person@person_pkey
  resolvedOldConfig: 'inherited_constraints:false null_voter_constraints_is_empty:false inherited_lease_preferences:false '
  sql:
    descriptorId: 104
    statement: ALTER PARTITION ‹australia› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹2›
    tag: CONFIGURE ZONE
    user: root
## StatementPhase stage 1 of 1 with 2 MutationType ops
upsert descriptor #104
  ...
     replacementOf:
       time: {}
  -  schemaLocked: true
     unexposedParentSchemaId: 101
  -  version: "1"
  +  version: "2"
upsert zone config for #104
checking for feature: CONFIGURE ZONE
write *eventpb.SetZoneConfig to event log:
  config:
    options:
    - '"gc.ttlseconds" = 4'
    target: PARTITION old_au OF INDEX defaultdb.public.person@person_pkey
  resolvedOldConfig: 'inherited_constraints:false null_voter_constraints_is_empty:false inherited_lease_preferences:false '
  sql:
    descriptorId: 104
    statement: ALTER PARTITION ‹old_au› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹4›
    tag: CONFIGURE ZONE
    user: root
## StatementPhase stage 1 of 1 with 1 MutationType op
upsert zone config for #104
checking for feature: CONFIGURE ZONE
write *eventpb.SetZoneConfig to event log:
  config:
    options:
    - '"gc.ttlseconds" = 5'
    target: PARTITION yung_au OF INDEX defaultdb.public.person@person_pkey
  resolvedOldConfig: 'inherited_constraints:false null_voter_constraints_is_empty:false inherited_lease_preferences:false '
  sql:
    descriptorId: 104
    statement: ALTER PARTITION ‹yung_au› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹5›
    tag: CONFIGURE ZONE
    user: root
## StatementPhase stage 1 of 1 with 1 MutationType op
upsert zone config for #104
checking for feature: CONFIGURE ZONE
write *eventpb.SetZoneConfig to event log:
  config:
    options:
    - '"gc.ttlseconds" = 6'
    target: PARTITION old_au OF INDEX defaultdb.public.person@person_pkey
  resolvedOldConfig: 'inherited_constraints:false null_voter_constraints_is_empty:false inherited_lease_preferences:false '
  sql:
    descriptorId: 104
    statement: ALTER PARTITION ‹old_au› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹6›
    tag: CONFIGURE ZONE
    user: root
## StatementPhase stage 1 of 1 with 1 MutationType op
upsert zone config for #104
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase stage 1 of 2 with 1 MutationType op
undo all catalog changes within txn #1
persist all catalog changes to storage
## PreCommitPhase stage 2 of 2 with 7 MutationType ops
upsert descriptor #104
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    currentStatuses: <redacted>
  +    jobId: "1"
  +    nameMapping:
  +      columns:
  +        "1": name
  +        "2": country
  +        "3": birth_date
  +        "4294967292": crdb_internal_origin_timestamp
  +        "4294967293": crdb_internal_origin_id
  +        "4294967294": tableoid
  +        "4294967295": crdb_internal_mvcc_timestamp
  +      families:
  +        "0": primary
  +      id: 104
  +      indexes:
  +        "1": person_pkey
  +      name: person
  +    relevantStatements:
  +    - statement:
  +        redactedStatement: ALTER PARTITION ‹australia› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹2›
  +        statement: ALTER PARTITION australia OF TABLE person CONFIGURE ZONE USING "gc.ttlseconds" = 2
  +        statementTag: CONFIGURE ZONE
  +    - statement:
  +        redactedStatement: ALTER PARTITION ‹old_au› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹4›
  +        statement: ALTER PARTITION old_au OF TABLE person CONFIGURE ZONE USING "gc.ttlseconds" = 4
  +        statementTag: CONFIGURE ZONE
  +      statementRank: 1
  +    - statement:
  +        redactedStatement: ALTER PARTITION ‹yung_au› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹5›
  +        statement: ALTER PARTITION yung_au OF TABLE person CONFIGURE ZONE USING "gc.ttlseconds" = 5
  +        statementTag: CONFIGURE ZONE
  +      statementRank: 2
  +    - statement:
  +        redactedStatement: ALTER PARTITION ‹old_au› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹6›
  +        statement: ALTER PARTITION old_au OF TABLE person CONFIGURE ZONE USING "gc.ttlseconds" = 6
  +        statementTag: CONFIGURE ZONE
  +      statementRank: 3
  +    revertible: true
  +    targetRanks: <redacted>
  +    targets: <redacted>
     families:
     - columnIds:
  ...
     replacementOf:
       time: {}
  -  schemaLocked: true
     unexposedParentSchemaId: 101
  -  version: "1"
  +  version: "2"
upsert zone config for #104
persist all catalog changes to storage
create job #1 (non-cancelable: false): "ALTER PARTITION australia OF INDEX defaultdb.public.person@person_pkey CONFIGURE ZONE USING \"gc.ttlseconds\" = 2; ALTER PARTITION old_au OF INDEX defaultdb.public.person@person_pkey CONFIGURE ZONE USING \"gc.ttlseconds\" = 4; ALTER PARTITION yung_au OF INDEX defaultdb.public.person@person_pkey CONFIGURE ZONE USING \"gc.ttlseconds\" = 5; ALTER PARTITION old_au OF INDEX defaultdb.public.person@person_pkey CONFIGURE ZONE USING \"gc.ttlseconds\" = 6"
  descriptor IDs: [104]
# end PreCommitPhase
commit transaction #1
notified job registry to adopt jobs: [1]
# begin PostCommitPhase
begin transaction #2
commit transaction #2
begin transaction #3
## PostCommitPhase stage 1 of 1 with 3 MutationType ops
upsert descriptor #104
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  -  declarativeSchemaChangerState:
  -    authorization:
  -      userName: root
  -    currentStatuses: <redacted>
  -    jobId: "1"
  -    nameMapping:
  -      columns:
  -        "1": name
  -        "2": country
  -        "3": birth_date
  -        "4294967292": crdb_internal_origin_timestamp
  -        "4294967293": crdb_internal_origin_id
  -        "4294967294": tableoid
  -        "4294967295": crdb_internal_mvcc_timestamp
  -      families:
  -        "0": primary
  -      id: 104
  -      indexes:
  -        "1": person_pkey
  -      name: person
  -    relevantStatements:
  -    - statement:
  -        redactedStatement: ALTER PARTITION ‹australia› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹2›
  -        statement: ALTER PARTITION australia OF TABLE person CONFIGURE ZONE USING "gc.ttlseconds" = 2
  -        statementTag: CONFIGURE ZONE
  -    - statement:
  -        redactedStatement: ALTER PARTITION ‹old_au› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹4›
  -        statement: ALTER PARTITION old_au OF TABLE person CONFIGURE ZONE USING "gc.ttlseconds" = 4
  -        statementTag: CONFIGURE ZONE
  -      statementRank: 1
  -    - statement:
  -        redactedStatement: ALTER PARTITION ‹yung_au› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹5›
  -        statement: ALTER PARTITION yung_au OF TABLE person CONFIGURE ZONE USING "gc.ttlseconds" = 5
  -        statementTag: CONFIGURE ZONE
  -      statementRank: 2
  -    - statement:
  -        redactedStatement: ALTER PARTITION ‹old_au› OF INDEX ‹defaultdb›.‹public›.‹person›@‹person_pkey› CONFIGURE ZONE USING ‹"gc.ttlseconds"› = ‹6›
  -        statement: ALTER PARTITION old_au OF TABLE person CONFIGURE ZONE USING "gc.ttlseconds" = 6
  -        statementTag: CONFIGURE ZONE
  -      statementRank: 3
  -    revertible: true
  -    targetRanks: <redacted>
  -    targets: <redacted>
     families:
     - columnIds:
  ...
     replacementOf:
       time: {}
  +  schemaLocked: true
     unexposedParentSchemaId: 101
  -  version: "2"
  +  version: "3"
persist all catalog changes to storage
update progress of schema change job #1: "all stages completed"
set schema change job #1 to non-cancellable
updated schema change job #1 descriptor IDs to []
write *eventpb.FinishSchemaChange to event log:
  sc:
    descriptorId: 104
commit transaction #3
# end PostCommitPhase
