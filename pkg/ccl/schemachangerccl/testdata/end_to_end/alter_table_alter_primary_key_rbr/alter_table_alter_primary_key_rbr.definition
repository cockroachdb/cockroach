setup
CREATE DATABASE multiregion_db PRIMARY REGION "us-east1" REGIONS "us-east2", "us-east3" SURVIVE REGION FAILURE;
CREATE TABLE multiregion_db.public.table_regional_by_row (
  k INT NOT NULL,
  V STRING
) LOCALITY REGIONAL BY ROW;
CREATE INDEX idx_v on multiregion_db.table_regional_by_row(v);
----

stage-exec phase=PostCommitPhase stage=:
USE multiregion_db;
INSERT INTO multiregion_db.table_regional_by_row(k) VALUES($stageKey);
INSERT INTO  multiregion_db.table_regional_by_row(k) VALUES($stageKey + 1);
----

stage-exec phase=PostCommitNonRevertiblePhase stage=:
USE multiregion_db;
INSERT INTO multiregion_db.table_regional_by_row(k) VALUES($stageKey);
INSERT INTO multiregion_db.table_regional_by_row(k) VALUES($stageKey + 1);
----

stage-exec phase=PostCommitPhase stage=:
USE multiregion_db;
SELECT crdb_internal.validate_multi_region_zone_configs()
----

stage-exec phase=PostCommitNonRevertiblePhase stage=:
USE multiregion_db;
SELECT crdb_internal.validate_multi_region_zone_configs()
----

stage-query phase=PostCommitPhase stage=:
SELECT index_name FROM crdb_internal.table_indexes WHERE descriptor_name='table_regional_by_row' ORDER BY index_name;
----
idx_v
table_regional_by_row_pkey

stage-query phase=PostCommitPhase stage=:
SELECT count(*)=$successfulStageCount*2 FROM  multiregion_db.public.table_regional_by_row@idx_v
----
true


stage-query phase=PostCommitNonRevertiblePhase stage=:
SELECT count(*)=$successfulStageCount*2 FROM  multiregion_db.public.table_regional_by_row@idx_v
----
true

stage-query phase=PostCommitNonRevertiblePhase stage=:
SELECT index_name FROM crdb_internal.table_indexes WHERE descriptor_name='table_regional_by_row' ORDER BY index_name;
----
idx_v
table_regional_by_row_pkey
table_regional_by_row_rowid_key



test
alter table multiregion_db.table_regional_by_row add column m int8 default unique_rowid(), alter primary key using columns(k) USING HASH;
----
