/* setup */
CREATE TABLE t (
    id INT PRIMARY KEY,
    data STRING
) PARTITION BY LIST (id) (
    PARTITION p1 VALUES IN (1, 2, 3),
    PARTITION p2 VALUES IN (4, 5, 6)
);
----
...
+object {100 101 t} -> 104

/* test */
ALTER PARTITION p1 OF INDEX t@t_pkey CONFIGURE ZONE USING num_replicas = 11;
ALTER PARTITION p1 OF INDEX t@t_pkey CONFIGURE ZONE USING num_replicas = 12;
ALTER PARTITION p2 OF INDEX t@t_pkey CONFIGURE ZONE USING num_replicas = 10;
ALTER PARTITION p1 OF INDEX t@t_pkey CONFIGURE ZONE DISCARD;
----
begin transaction #1
# begin StatementPhase
checking for feature: CONFIGURE ZONE
write *eventpb.SetZoneConfig to event log:
  config:
    options:
    - num_replicas = 11
    target: PARTITION p1 OF INDEX defaultdb.public.t@t_pkey
  resolvedOldConfig: 'inherited_constraints:false null_voter_constraints_is_empty:false inherited_lease_preferences:false '
  sql:
    descriptorId: 104
    statement: ALTER PARTITION ‹p1› OF INDEX ‹defaultdb›.‹public›.‹t›@‹t_pkey› CONFIGURE ZONE USING ‹num_replicas› = ‹11›
    tag: CONFIGURE ZONE
    user: root
## StatementPhase stage 1 of 1 with 2 MutationType ops
upsert descriptor #104
  ...
     replacementOf:
       time: {}
  -  schemaLocked: true
     unexposedParentSchemaId: 101
  -  version: "1"
  +  version: "2"
upsert zone config for #104
checking for feature: CONFIGURE ZONE
write *eventpb.SetZoneConfig to event log:
  config:
    options:
    - num_replicas = 12
    target: PARTITION p1 OF INDEX defaultdb.public.t@t_pkey
  resolvedOldConfig: 'inherited_constraints:false null_voter_constraints_is_empty:false inherited_lease_preferences:false '
  sql:
    descriptorId: 104
    statement: ALTER PARTITION ‹p1› OF INDEX ‹defaultdb›.‹public›.‹t›@‹t_pkey› CONFIGURE ZONE USING ‹num_replicas› = ‹12›
    tag: CONFIGURE ZONE
    user: root
## StatementPhase stage 1 of 1 with 1 MutationType op
upsert zone config for #104
checking for feature: CONFIGURE ZONE
write *eventpb.SetZoneConfig to event log:
  config:
    options:
    - num_replicas = 10
    target: PARTITION p2 OF INDEX defaultdb.public.t@t_pkey
  resolvedOldConfig: 'inherited_constraints:false null_voter_constraints_is_empty:false inherited_lease_preferences:false '
  sql:
    descriptorId: 104
    statement: ALTER PARTITION ‹p2› OF INDEX ‹defaultdb›.‹public›.‹t›@‹t_pkey› CONFIGURE ZONE USING ‹num_replicas› = ‹10›
    tag: CONFIGURE ZONE
    user: root
## StatementPhase stage 1 of 1 with 1 MutationType op
upsert zone config for #104
checking for feature: CONFIGURE ZONE
write *eventpb.RemoveZoneConfig to event log:
  config:
    target: PARTITION p1 OF INDEX defaultdb.public.t@t_pkey
  sql:
    descriptorId: 104
    statement: ALTER PARTITION ‹p1› OF INDEX ‹defaultdb›.‹public›.‹t›@‹t_pkey› CONFIGURE ZONE DISCARD
    tag: CONFIGURE ZONE
    user: root
## StatementPhase stage 1 of 1 with 2 MutationType ops
# end StatementPhase
# begin PreCommitPhase
## PreCommitPhase stage 1 of 2 with 1 MutationType op
undo all catalog changes within txn #1
persist all catalog changes to storage
## PreCommitPhase stage 2 of 2 with 4 MutationType ops
upsert descriptor #104
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  +  declarativeSchemaChangerState:
  +    authorization:
  +      userName: root
  +    currentStatuses: <redacted>
  +    jobId: "1"
  +    nameMapping:
  +      columns:
  +        "1": id
  +        "2": data
  +        "4294967292": crdb_internal_origin_timestamp
  +        "4294967293": crdb_internal_origin_id
  +        "4294967294": tableoid
  +        "4294967295": crdb_internal_mvcc_timestamp
  +      families:
  +        "0": primary
  +      id: 104
  +      indexes:
  +        "1": t_pkey
  +      name: t
  +    relevantStatements:
  +    - statement:
  +        redactedStatement: ALTER PARTITION ‹p1› OF INDEX ‹defaultdb›.‹public›.‹t›@‹t_pkey› CONFIGURE ZONE USING ‹num_replicas› = ‹11›
  +        statement: ALTER PARTITION p1 OF INDEX t@t_pkey CONFIGURE ZONE USING num_replicas = 11
  +        statementTag: CONFIGURE ZONE
  +    - statement:
  +        redactedStatement: ALTER PARTITION ‹p2› OF INDEX ‹defaultdb›.‹public›.‹t›@‹t_pkey› CONFIGURE ZONE USING ‹num_replicas› = ‹10›
  +        statement: ALTER PARTITION p2 OF INDEX t@t_pkey CONFIGURE ZONE USING num_replicas = 10
  +        statementTag: CONFIGURE ZONE
  +      statementRank: 2
  +    - statement:
  +        redactedStatement: ALTER PARTITION ‹p1› OF INDEX ‹defaultdb›.‹public›.‹t›@‹t_pkey› CONFIGURE ZONE DISCARD
  +        statement: ALTER PARTITION p1 OF INDEX t@t_pkey CONFIGURE ZONE DISCARD
  +        statementTag: CONFIGURE ZONE
  +      statementRank: 3
  +    revertible: true
  +    targetRanks: <redacted>
  +    targets: <redacted>
     families:
     - columnIds:
  ...
     replacementOf:
       time: {}
  -  schemaLocked: true
     unexposedParentSchemaId: 101
  -  version: "1"
  +  version: "2"
upsert zone config for #104
persist all catalog changes to storage
create job #1 (non-cancelable: false): "ALTER PARTITION p1 OF INDEX defaultdb.public.t@t_pkey CONFIGURE ZONE USING num_replicas = 11; ALTER PARTITION p1 OF INDEX defaultdb.public.t@t_pkey CONFIGURE ZONE USING num_replicas = 12; ALTER PARTITION p2 OF INDEX defaultdb.public.t@t_pkey CONFIGURE ZONE USING num_replicas = 10; ALTER PARTITION p1 OF INDEX defaultdb.public.t@t_pkey CONFIGURE ZONE DISCARD"
  descriptor IDs: [104]
# end PreCommitPhase
commit transaction #1
notified job registry to adopt jobs: [1]
# begin PostCommitPhase
begin transaction #2
commit transaction #2
begin transaction #3
## PostCommitPhase stage 1 of 1 with 3 MutationType ops
upsert descriptor #104
  ...
     createAsOfTime:
       wallTime: "1640995200000000000"
  -  declarativeSchemaChangerState:
  -    authorization:
  -      userName: root
  -    currentStatuses: <redacted>
  -    jobId: "1"
  -    nameMapping:
  -      columns:
  -        "1": id
  -        "2": data
  -        "4294967292": crdb_internal_origin_timestamp
  -        "4294967293": crdb_internal_origin_id
  -        "4294967294": tableoid
  -        "4294967295": crdb_internal_mvcc_timestamp
  -      families:
  -        "0": primary
  -      id: 104
  -      indexes:
  -        "1": t_pkey
  -      name: t
  -    relevantStatements:
  -    - statement:
  -        redactedStatement: ALTER PARTITION ‹p1› OF INDEX ‹defaultdb›.‹public›.‹t›@‹t_pkey› CONFIGURE ZONE USING ‹num_replicas› = ‹11›
  -        statement: ALTER PARTITION p1 OF INDEX t@t_pkey CONFIGURE ZONE USING num_replicas = 11
  -        statementTag: CONFIGURE ZONE
  -    - statement:
  -        redactedStatement: ALTER PARTITION ‹p2› OF INDEX ‹defaultdb›.‹public›.‹t›@‹t_pkey› CONFIGURE ZONE USING ‹num_replicas› = ‹10›
  -        statement: ALTER PARTITION p2 OF INDEX t@t_pkey CONFIGURE ZONE USING num_replicas = 10
  -        statementTag: CONFIGURE ZONE
  -      statementRank: 2
  -    - statement:
  -        redactedStatement: ALTER PARTITION ‹p1› OF INDEX ‹defaultdb›.‹public›.‹t›@‹t_pkey› CONFIGURE ZONE DISCARD
  -        statement: ALTER PARTITION p1 OF INDEX t@t_pkey CONFIGURE ZONE DISCARD
  -        statementTag: CONFIGURE ZONE
  -      statementRank: 3
  -    revertible: true
  -    targetRanks: <redacted>
  -    targets: <redacted>
     families:
     - columnIds:
  ...
     replacementOf:
       time: {}
  +  schemaLocked: true
     unexposedParentSchemaId: 101
  -  version: "2"
  +  version: "3"
persist all catalog changes to storage
update progress of schema change job #1: "all stages completed"
set schema change job #1 to non-cancellable
updated schema change job #1 descriptor IDs to []
write *eventpb.FinishSchemaChange to event log:
  sc:
    descriptorId: 104
commit transaction #3
# end PostCommitPhase
