setup
CREATE DATABASE multiregion_db PRIMARY REGION "us-east1" REGIONS "us-east2", "us-east3" SURVIVE REGION FAILURE;
CREATE TABLE multiregion_db.public.table_regional_by_row (
  k INT PRIMARY KEY,
  V STRING,
  m INT
) LOCALITY REGIONAL BY ROW;
----

# Disabled because of #146360 concurrent inserts broken on RBR tables
# with ADD COLUMN UNIQUE
#stage-exec phase=PostCommitPhase stage=:
#USE multiregion_db;
#INSERT INTO table_regional_by_row VALUES ($stageKey);
#INSERT INTO table_regional_by_row VALUES ($stageKey * -1);
#DELETE FROM table_regional_by_row WHERE k = $stageKey;
#----

# Disabled because of #146360 concurrent inserts broken on RBR tables
# with ADD COLUMN UNIQUE
#stage-exec phase=PostCommitNonRevertiblePhase stage=:
#USE multiregion_db;
#INSERT INTO table_regional_by_row VALUES (1000 + $stageKey);
#INSERT INTO table_regional_by_row VALUES ((1000 + $stageKey) * -1);
#DELETE FROM table_regional_by_row WHERE k = (1000 + $stageKey);
#----

stage-exec phase=PostCommitPhase stage=:
USE multiregion_db;
SELECT crdb_internal.validate_multi_region_zone_configs()
----

stage-exec phase=PostCommitNonRevertiblePhase stage=:
USE multiregion_db;
SELECT crdb_internal.validate_multi_region_zone_configs()
----

# This will require zone configuration changes to be stacked between indexes.
#,
test
ALTER TABLE multiregion_db.public.table_regional_by_row DROP COLUMN v, ADD COLUMN j INT DEFAULT unique_rowid() UNIQUE, DROP COLUMN m, ADD COLUMN l INT DEFAULT unique_rowid() UNIQUE
----
