feature-list
sql.multiregion.*
----

exec
CREATE DATABASE d PRIMARY REGION "us-east-1" REGION "ca-central-1"
----

exec
SET enable_multiregion_placement_policy = true;
USE d;
ALTER DATABASE d ADD REGION "ap-southeast-2"
----

#####################################################################
# CREATE TABLE: Test initial table creation with different localities
#####################################################################

feature-usage
CREATE TABLE t0 () 
----
sql.multiregion.create_table.locality.unspecified

feature-usage
CREATE TABLE t1 () LOCALITY REGIONAL BY TABLE
----
sql.multiregion.create_table.locality.regional_by_table

feature-usage
CREATE TABLE t2 () LOCALITY REGIONAL BY TABLE IN "ap-southeast-2"
----
sql.multiregion.create_table.locality.regional_by_table_in

feature-usage
CREATE TABLE t3 () LOCALITY GLOBAL
----
sql.multiregion.create_table.locality.global

#####################################################################
# ALTER TABLE from REGIONAL BY TABLE
#####################################################################

exec
CREATE TABLE t1_to_row () WITH (schema_locked=false) LOCALITY REGIONAL BY TABLE;
CREATE TABLE t1_to_global () WITH (schema_locked=false) LOCALITY REGIONAL BY TABLE;
CREATE TABLE t1_to_table_in () WITH (schema_locked=false) LOCALITY REGIONAL BY TABLE;
CREATE TABLE t1_to_row_as () WITH (schema_locked=false) LOCALITY REGIONAL BY TABLE;
ALTER TABLE t1_to_row_as ADD COLUMN cr crdb_internal_region NOT NULL;
----

feature-usage
ALTER TABLE t1_to_row SET LOCALITY REGIONAL BY ROW
----
sql.multiregion.alter_table.locality.from.regional_by_table.to.regional_by_row

feature-usage
ALTER TABLE t1_to_global SET LOCALITY GLOBAL
----
sql.multiregion.alter_table.locality.from.regional_by_table.to.global

feature-usage
ALTER TABLE t1_to_table_in SET LOCALITY REGIONAL BY TABLE IN "ap-southeast-2"
----
sql.multiregion.alter_table.locality.from.regional_by_table.to.regional_by_table_in

feature-usage
ALTER TABLE t1_to_row_as SET LOCALITY REGIONAL BY ROW AS "cr"
----
sql.multiregion.alter_table.locality.from.regional_by_table.to.regional_by_row_as

#####################################################################
# ALTER TABLE from REGIONAL BY TABLE IN
#####################################################################

exec
CREATE TABLE t2_to_row () WITH (schema_locked = false) LOCALITY REGIONAL BY TABLE IN "ap-southeast-2";
CREATE TABLE t2_to_global () WITH (schema_locked = false) LOCALITY REGIONAL BY TABLE IN "ap-southeast-2";
CREATE TABLE t2_to_table () WITH (schema_locked = false) LOCALITY REGIONAL BY TABLE IN "ap-southeast-2";
CREATE TABLE t2_to_row_as () WITH (schema_locked = false) LOCALITY REGIONAL BY TABLE IN "ap-southeast-2";
ALTER TABLE t2_to_row_as ADD COLUMN cr crdb_internal_region NOT NULL;
----

feature-usage
ALTER TABLE t2_to_row SET LOCALITY REGIONAL BY ROW
----
sql.multiregion.alter_table.locality.from.regional_by_table_in.to.regional_by_row

feature-usage
ALTER TABLE t2_to_global SET LOCALITY GLOBAL
----
sql.multiregion.alter_table.locality.from.regional_by_table_in.to.global

feature-usage
ALTER TABLE t2_to_table SET LOCALITY REGIONAL BY TABLE
----
sql.multiregion.alter_table.locality.from.regional_by_table_in.to.regional_by_table

feature-usage
ALTER TABLE t2_to_row_as SET LOCALITY REGIONAL BY ROW AS "cr"
----
sql.multiregion.alter_table.locality.from.regional_by_table_in.to.regional_by_row_as


#####################################################################
# ALTER TABLE from GLOBAL
#####################################################################exec

exec
CREATE TABLE t3_to_row () WITH (schema_locked = false) LOCALITY GLOBAL;
CREATE TABLE t3_to_table () WITH (schema_locked = false) LOCALITY GLOBAL;
CREATE TABLE t3_to_table_in () WITH (schema_locked = false) LOCALITY GLOBAL;
CREATE TABLE t3_to_row_as () WITH (schema_locked = false) LOCALITY GLOBAL;
ALTER TABLE t3_to_row_as ADD COLUMN cr crdb_internal_region NOT NULL;
----

feature-usage
ALTER TABLE t3_to_row SET LOCALITY REGIONAL BY ROW
----
sql.multiregion.alter_table.locality.from.global.to.regional_by_row

feature-usage
ALTER TABLE t3_to_table SET LOCALITY REGIONAL BY TABLE
----
sql.multiregion.alter_table.locality.from.global.to.regional_by_table

feature-usage
ALTER TABLE t3_to_table_in SET LOCALITY REGIONAL BY TABLE IN "ap-southeast-2"
----
sql.multiregion.alter_table.locality.from.global.to.regional_by_table_in

feature-usage
ALTER TABLE t3_to_row_as SET LOCALITY REGIONAL BY ROW AS "cr"
----
sql.multiregion.alter_table.locality.from.global.to.regional_by_row_as
