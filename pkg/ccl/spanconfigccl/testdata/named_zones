# This test generates span configurations for various named zone IDs. No tests
# for RANGE DEFAULT are included here as generating span configurations for
# RANGE DEFAULT is akin to a full reconciliation.


# ID 18 is for the time series range which is the only named zone that doesn't
# have an entry in `system.zones` at bootstrap. It should inherit from RANGE
# DEFAULT.
query-sql
SELECT count(*) FROM system.zones WHERE id=18
----
0

translate id=18
----
/System{/tsd-tse}              DEFAULT
-----------------------

# Adding an explicit zone configuration for the timeseries range should work
# as expected.
exec-sql
ALTER RANGE timeseries CONFIGURE ZONE USING gc.ttlseconds=1000
----

translate id=18
----
/System{/tsd-tse}              ttl_seconds=1000
-----------------------

# Change a field on the liveness range and ensure it behaves as expected. The
# pseudo ID for the liveness range is 22.
exec-sql
ALTER RANGE liveness CONFIGURE ZONE USING num_replicas=7;
----

translate id=22
----
/System/NodeLiveness{-Max}     ttl_seconds=600
                               num_replicas=7
                               num_voters=7
-----------------------

# We are allowed to discard the liveness range's zone configuration. The
# generated span should have the RANGE DEFAULT config.
exec-sql
ALTER RANGE liveness CONFIGURE ZONE DISCARD
----

translate id=22
----
/System/NodeLiveness{-Max}     DEFAULT
-----------------------
