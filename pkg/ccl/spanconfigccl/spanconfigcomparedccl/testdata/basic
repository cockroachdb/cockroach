# Create a database with some tables and set some zone configs; compare how the
# gossip-backed config subsystem compares to the span configs infrastructure.

reconcile
----

exec-sql
CREATE DATABASE db;
CREATE TABLE db.t1();
CREATE TABLE db.t2();
----

exec-sql
ALTER DATABASE db CONFIGURE ZONE USING num_replicas = 7;
ALTER TABLE db.t1 CONFIGURE ZONE USING num_voters = 5;
----

# Both subsystems don't split within the system config span.
# - The gossip-backed system doesn't because it needs to gossips the entire
#   range's contents whenever anything in it changes.
# - The span configs infrastructure doesn't, at least for now, for
#   inter-operability with the gossip-backed system.

configs version=legacy offset=4 limit=3
----
...
/System/"tse"                              range system
/Table/SystemConfigSpan/Start              range system
/Table/11                                  range system
...

configs version=current offset=4 limit=3
----
...
/System/"tse"                              range system
/Table/SystemConfigSpan/Start              range system
/Table/11                                  range system
...

# Both subsystems observe splits for the tables created above.

configs version=current offset=41
----
...
/Table/46                                  range system
/Table/47                                  range system
/Table/56                                  num_replicas=7 num_voters=5
/Table/57                                  num_replicas=7

configs version=legacy offset=41
----
...
/Table/46                                  range system
/Table/47                                  range system
/Table/56                                  num_replicas=7 num_voters=5
/Table/57                                  num_replicas=7

# Both subsystems are identical with respect to exposed configs (including for
# pseudo table IDs).

diff
----

# vim:ft=diff
