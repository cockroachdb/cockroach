exec-sql
CREATE DATABASE db;
----

exec-sql
CREATE TABLE db.no_partitions(i INT PRIMARY KEY, j INT);
----

splits database=db table=no_partitions
----
/Table/106
/Table/106/1
/Table/106/2

exec-sql
CREATE TABLE db.range_partitions(i INT PRIMARY KEY, j INT) PARTITION BY RANGE (i) (
  PARTITION less_than_five       VALUES FROM (minvalue) to (5),
  PARTITION between_five_and_ten VALUES FROM (5) to (10),
  PARTITION greater_than_ten     VALUES FROM (10) to (maxvalue)
);
----

splits database=db table=range_partitions
----
/Table/107
/Table/107/1
/Table/107/1/5
/Table/107/1/10
/Table/107/2


exec-sql
CREATE TABLE db.list_partitions(i INT PRIMARY KEY, j INT) PARTITION BY LIST (i) (
  PARTITION one_and_five    VALUES IN (1, 5),
  PARTITION four_and_three  VALUES IN (4, 3),
  PARTITION everything_else VALUES IN (6, default)
);
----

splits database=db table=list_partitions
----
/Table/108
/Table/108/1
/Table/108/1/1
/Table/108/1/2
/Table/108/1/3
/Table/108/1/4
/Table/108/1/5
/Table/108/1/6
/Table/108/1/7
/Table/108/2

exec-sql
CREATE TABLE db.list_multi_column_partitions(i INT, j INT, PRIMARY KEY (i, j)) PARTITION BY LIST (i, j) (
  PARTITION test VALUES IN ((2, default))
);
----

splits database=db table=list_multi_column_partitions
----
/Table/109
/Table/109/1
/Table/109/1/2
/Table/109/1/3
/Table/109/2

exec-sql
CREATE TABLE db.list_then_range_partitions (
    C1 STRING,
    N2 INT,
    PRIMARY KEY (C1, N2)
) PARTITION BY LIST (C1) (
    PARTITION P1C1 VALUES IN ('A', 'C')
        PARTITION BY RANGE (N2) (
            PARTITION P1C1N2 VALUES FROM (minvalue) TO (10),
            PARTITION P2C1N2 VALUES FROM (10) TO (maxvalue)
        ),
    PARTITION P2C1 VALUES IN ('B', 'D')
        PARTITION BY RANGE (N2) (
            PARTITION P3C1N2 VALUES FROM (minvalue) TO (10),
            PARTITION P4C1N2 VALUES FROM (10) TO (maxvalue)
        )
);
----

splits database=db table=list_then_range_partitions
----
/Table/110
/Table/110/1
/Table/110/1/"A"
/Table/110/1/"A"/10
/Table/110/1/"A"/PrefixEnd
/Table/110/1/"B"
/Table/110/1/"B"/10
/Table/110/1/"B"/PrefixEnd
/Table/110/1/"C"
/Table/110/1/"C"/10
/Table/110/1/"C"/PrefixEnd
/Table/110/1/"D"
/Table/110/1/"D"/10
/Table/110/1/"D"/PrefixEnd
/Table/110/2

exec-sql
CREATE TABLE db.list_then_list_then_range_partitions_mixed (
    C1 STRING,
    C2 STRING,
    N3 INT,
    PRIMARY KEY (C1, C2, N3)
) PARTITION BY LIST (C1) (
    PARTITION P1C1 VALUES IN ('A', 'C'),
    PARTITION P2C1 VALUES IN ('B', 'D')
        PARTITION BY LIST (C2) (
            PARTITION P1C1C2 VALUES IN ('G', 'J')
                PARTITION BY RANGE (N3) (
                    PARTITION P1C1C2N3 VALUES FROM (minvalue) TO (10),
                    PARTITION P2C1C2N3 VALUES FROM (10) TO (maxvalue)
                ),
            PARTITION P2C1C2 VALUES IN ('I', 'K')
        ),
    PARTITION P3C1 VALUES IN ('E', 'F')
);
----

splits database=db table=list_then_list_then_range_partitions_mixed
----
/Table/111
/Table/111/1
/Table/111/1/"A"
/Table/111/1/"A"/PrefixEnd
/Table/111/1/"B"
/Table/111/1/"B"/"G"
/Table/111/1/"B"/"G"/10
/Table/111/1/"B"/"G"/PrefixEnd
/Table/111/1/"B"/"I"
/Table/111/1/"B"/"I"/PrefixEnd
/Table/111/1/"B"/"J"
/Table/111/1/"B"/"J"/10
/Table/111/1/"B"/"J"/PrefixEnd
/Table/111/1/"B"/"K"
/Table/111/1/"B"/"K"/PrefixEnd
/Table/111/1/"B"/PrefixEnd
/Table/111/1/"C"
/Table/111/1/"C"/PrefixEnd
/Table/111/1/"D"
/Table/111/1/"D"/"G"
/Table/111/1/"D"/"G"/10
/Table/111/1/"D"/"G"/PrefixEnd
/Table/111/1/"D"/"I"
/Table/111/1/"D"/"I"/PrefixEnd
/Table/111/1/"D"/"J"
/Table/111/1/"D"/"J"/10
/Table/111/1/"D"/"J"/PrefixEnd
/Table/111/1/"D"/"K"
/Table/111/1/"D"/"K"/PrefixEnd
/Table/111/1/"D"/PrefixEnd
/Table/111/1/"E"
/Table/111/1/"E"/PrefixEnd
/Table/111/1/"F"
/Table/111/1/"F"/PrefixEnd
/Table/111/2

exec-sql
CREATE TABLE db.list_default(N1 INT PRIMARY KEY) PARTITION BY LIST (N1) (
  PARTITION every_thing VALUES IN (default)
);
----

splits database=db table=list_default
----
/Table/112
/Table/112/1
/Table/112/2


exec-sql
CREATE TABLE db.list_default_then_range (
    N1 INT,
    N2 INT,
    PRIMARY KEY (N1, N2)
) PARTITION BY LIST (N1) (
    PARTITION P1N1 VALUES IN (default)
        PARTITION BY RANGE (N2) (
            PARTITION P1N1N2 VALUES FROM (minvalue) TO (10),
            PARTITION P2N1N2 VALUES FROM (10) TO (maxvalue)
        )
);
----

splits database=db table=list_default_then_range
----
/Table/113
/Table/113/1
/Table/113/1/10
/Table/113/2
