echo
----
db0.Put(ctx, uint64ToKey(1), seq2val(kvnemesisutil.Seq(1))) // @0.000000001,0 <nil>
db0.Put(ctx, uint64ToKey(2), seq2val(kvnemesisutil.Seq(2))) // @0.000000002,0 <nil>
db0.Put(ctx, uint64ToKey(3), seq2val(kvnemesisutil.Seq(3))) // @0.000000003,0 <nil>
db0.Txn(ctx, func(ctx context.Context, txn *kv.Txn) error {
  txn.DelRange(ctx, uint64ToKey(1), uint64ToKey(3), true /* @s4 */) // (/Table/100/"0000000000000001", /Table/100/"0000000000000002", /Table/100/"0000000000000003", <nil>)
  return nil
}) // @0.000000004,0 <nil>
/Table/100/"0000000000000001"/0.000000001,0 @ s1 v1
/Table/100/"0000000000000002"/0.000000002,0 @ s2 v2
/Table/100/"0000000000000003"/0.000000003,0 @ s3 v3
/Table/100/"0000000000000001"/0.000000003,0 @ s4 <nil>
/Table/100/"0000000000000002"/0.000000004,0 @ s4 <nil>
/Table/100/"0000000000000003"/0.000000004,0 @ s4 <nil>
committed txn non-atomic timestamps: [dr.d]/Table/100/"0000000000000001":0.000000003,0-><nil>@s4 [dr.d]/Table/100/"0000000000000002":0.000000004,0-><nil>@s4 [dr.d]/Table/100/"0000000000000003":0.000000004,0-><nil>@s4 [dr.s]/Table/100/"000000000000000{1"-3"}:{gap:[<min>, 0.000000001,0),[0.000000004,0, <max>)}->[]
