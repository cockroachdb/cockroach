load("//build/bazelutil/unused_checker:unused.bzl", "get_x_data")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "spanlatch",
    srcs = [
        "doc.go",
        "list.go",
        "manager.go",
        "signal.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/kv/kvserver/spanlatch",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/base",
        "//pkg/kv/kvserver/concurrency/poison",
        "//pkg/kv/kvserver/spanset",
        "//pkg/roachpb",
        "//pkg/util/btree/interval",
        "//pkg/util/hlc",
        "//pkg/util/log",
        "//pkg/util/metric",
        "//pkg/util/stop",
        "//pkg/util/syncutil",
        "//pkg/util/timeutil",
        "@com_github_cockroachdb_errors//:errors",
    ],
)

go_test(
    name = "spanlatch_test",
    size = "large",
    srcs = [
        "manager_test.go",
        "signal_test.go",
    ],
    args = ["-test.timeout=895s"],
    embed = [":spanlatch"],
    shard_count = 16,
    deps = [
        "//pkg/keys",
        "//pkg/kv/kvserver/concurrency/poison",
        "//pkg/kv/kvserver/spanset",
        "//pkg/roachpb",
        "//pkg/testutils",
        "//pkg/util/hlc",
        "//pkg/util/leaktest",
        "//pkg/util/timeutil",  # keep
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_stretchr_testify//require",
    ],
)

get_x_data(name = "get_x_data")
