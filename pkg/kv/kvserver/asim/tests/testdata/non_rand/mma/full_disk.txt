# This test verifies that the allocator can rebalance replicas when stores
# have limited disk capacity and some stores become nearly full. The test
# sets up a 5-node cluster where each store has a 10GB capacity. It creates
# 15 ranges with 3 replicas each, where each range is 500MiB in size. The
# initial placement is skewed, causing stores s1, s2, and s3 to have most
# replicas (with s1 at 92% capacity, s2 at 85%, and s3 at 49%), while s4
# and s5 are underutilized at 24% capacity each.
#
# Expected outcome: The allocator should rebalance replicas to distribute
# disk usage evenly across all stores, moving replicas from the fuller
# stores (s1, s2, s3) to the less utilized stores (s4, s5). The final
# distribution should achieve balanced disk usage (~55% on each store) and
# more even replica distribution across all nodes.
gen_cluster nodes=5 store_byte_capacity_gib=10
----

# Each range will be 500 MiB in size and the placement will be skewed,
# s.t. n1/s1, n2/s2 and n3/s3 will have most replicas initially.
gen_ranges ranges=15 bytes_mib=500 repl_factor=3 placement_type=skewed
----

eval duration=10m seed=42 cfgs=(mma-only) metrics=(disk_fraction_used,replicas,leases,cpu,cpu_util,mma-count)
----
disk_fraction_used#1: first: [s1=0.92, s2=0.85, s3=0.49, s4=0.24, s5=0.24] (stddev=0.29, mean=0.55, sum=3)
disk_fraction_used#1: last:  [s1=0.55, s2=0.55, s3=0.55, s4=0.55, s5=0.55] (stddev=0.00, mean=0.55, sum=3)
disk_fraction_used#1: thrash_pct: [s1=23%, s2=116%, s3=111%, s4=0%, s5=22%]  (sum=272%)
leases#1: first: [s1=8, s2=4, s3=2, s4=0, s5=1] (stddev=2.83, mean=3.00, sum=15)
leases#1: last:  [s1=5, s2=1, s3=3, s4=2, s5=4] (stddev=1.41, mean=3.00, sum=15)
leases#1: thrash_pct: [s1=0%, s2=63%, s3=60%, s4=0%, s5=0%]  (sum=122%)
replicas#1: first: [s1=15, s2=14, s3=8, s4=4, s5=4] (stddev=4.73, mean=9.00, sum=45)
replicas#1: last:  [s1=9, s2=9, s3=9, s4=9, s5=9] (stddev=0.00, mean=9.00, sum=45)
replicas#1: thrash_pct: [s1=23%, s2=116%, s3=111%, s4=0%, s5=22%]  (sum=272%)
artifacts[mma-only]: 4f159811f11d7acf
==========================
