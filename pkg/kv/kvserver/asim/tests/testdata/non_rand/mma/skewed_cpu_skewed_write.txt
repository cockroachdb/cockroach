# This test verifies the allocator's behavior with opposing CPU and write load
# distributions. The test sets up a 6-node cluster where s1-s3 handle high-CPU
# read traffic and s4-s6 handle high-write traffic. Initially, all leases are on
# s1 and s4.
#
# Expected outcome: The allocator should rebalance both cpu and write load across
# all stores, with mma achieving better results than sma.
#
# This test can now roughly equalize both cpu and write bandwidth. It didn't
# use to be able to do this, because the highest cpu node had the lowest write
# bandwidth and vice versa, so neither was able to shed to the other. The
# ignoreLevel logic in rebalanceStores with the grace duration to start
# shedding more aggressively and other related changes have made this much
# better.
gen_cluster nodes=6 node_cpu_rate_capacity=5000000000
----

# The placement will be skewed, s.t. n1/s1, n2/s2 and n3/s3 will have all the
# replicas initially and n1/s1 will have every lease. Each range is initially
# 256 MiB.
gen_ranges ranges=36 min_key=1 max_key=10000 placement_type=replica_placement bytes_mib=256
{s1,s2,s3}:1
----
{s1:*,s2,s3}:1

gen_load rate=1000 rw_ratio=1.0 request_cpu_per_access=5000000 min_key=1 max_key=10000
----
5.00 access-vcpus

# Write only workload, which generates little CPU and 100_000 (x replication
# factor) write bytes per second over the second half of the keyspace.
gen_ranges ranges=36 min_key=10001 max_key=20000 placement_type=replica_placement bytes_mib=256
{s4,s5,s6}:1
----
{s4:*,s5,s6}:1

gen_load rate=20000 rw_ratio=0 min_block=1000 max_block=1000 raft_cpu_per_write=1 min_key=10001 max_key=20000
----
0.00 raft-vcpus, 19 MiB/s goodput

setting split_queue_enabled=false
----

eval duration=38m samples=1 seed=42 cfgs=(mma-only,mma-count) metrics=(cpu,cpu_util,write_bytes_per_second,replicas,leases) full=true
----
cpu#1: last:  [s1=828742279, s2=828761335, s3=831432001, s4=832638008, s5=843813033, s6=830139647] (stddev=5208447.74, mean=832587717.17, sum=4995526303)
cpu#1: thrash_pct: [s1=3%, s2=22%, s3=29%, s4=10%, s5=4%, s6=3%]  (sum=71%)
cpu_util#1: last:  [s1=0.17, s2=0.17, s3=0.17, s4=0.17, s5=0.17, s6=0.17] (stddev=0.00, mean=0.17, sum=1)
cpu_util#1: thrash_pct: [s1=3%, s2=22%, s3=29%, s4=10%, s5=4%, s6=3%]  (sum=71%)
leases#1: first: [s1=36, s2=0, s3=0, s4=36, s5=0, s6=0] (stddev=16.97, mean=12.00, sum=72)
leases#1: last:  [s1=6, s2=13, s3=16, s4=25, s5=6, s6=6] (stddev=7.00, mean=12.00, sum=72)
leases#1: thrash_pct: [s1=0%, s2=20%, s3=33%, s4=44%, s5=0%, s6=0%]  (sum=97%)
replicas#1: first: [s1=36, s2=36, s3=36, s4=36, s5=36, s6=36] (stddev=0.00, mean=36.00, sum=216)
replicas#1: last:  [s1=41, s2=52, s3=50, s4=25, s5=25, s6=23] (stddev=12.17, mean=36.00, sum=216)
replicas#1: thrash_pct: [s1=52%, s2=20%, s3=32%, s4=43%, s5=37%, s6=32%]  (sum=217%)
write_bytes_per_second#1: last:  [s1=8367808, s2=10580810, s3=10581337, s4=10531742, s5=10531358, s6=9420398] (stddev=840668.67, mean=10002242.17, sum=60013453)
write_bytes_per_second#1: thrash_pct: [s1=0%, s2=1%, s3=2%, s4=1%, s5=59%, s6=48%]  (sum=110%)
artifacts[mma-only]: b9bb4ce8e6cc2aaf
==========================
cpu#1: last:  [s1=828970613, s2=831981000, s3=829840692, s4=834700587, s5=843855213, s6=828157921] (stddev=5344596.24, mean=832917671.00, sum=4997506026)
cpu#1: thrash_pct: [s1=42%, s2=69%, s3=57%, s4=50%, s5=52%, s6=18%]  (sum=289%)
cpu_util#1: last:  [s1=0.17, s2=0.17, s3=0.17, s4=0.17, s5=0.17, s6=0.17] (stddev=0.00, mean=0.17, sum=1)
cpu_util#1: thrash_pct: [s1=42%, s2=69%, s3=57%, s4=50%, s5=52%, s6=18%]  (sum=289%)
leases#1: first: [s1=36, s2=0, s3=0, s4=36, s5=0, s6=0] (stddev=16.97, mean=12.00, sum=72)
leases#1: last:  [s1=14, s2=12, s3=15, s4=13, s5=9, s6=9] (stddev=2.31, mean=12.00, sum=72)
leases#1: thrash_pct: [s1=100%, s2=85%, s3=68%, s4=89%, s5=88%, s6=60%]  (sum=489%)
replicas#1: first: [s1=36, s2=36, s3=36, s4=36, s5=36, s6=36] (stddev=0.00, mean=36.00, sum=216)
replicas#1: last:  [s1=37, s2=36, s3=37, s4=37, s5=34, s6=35] (stddev=1.15, mean=36.00, sum=216)
replicas#1: thrash_pct: [s1=452%, s2=467%, s3=518%, s4=535%, s5=387%, s6=252%]  (sum=2610%)
write_bytes_per_second#1: last:  [s1=10029699, s2=9418360, s3=10580197, s4=10583538, s5=8860221, s6=10528033] (stddev=657551.94, mean=10000008.00, sum=60000048)
write_bytes_per_second#1: thrash_pct: [s1=67%, s2=55%, s3=80%, s4=147%, s5=154%, s6=123%]  (sum=626%)
artifacts[mma-count]: d4b7f90e9c71b6c
==========================
Cluster Set Up
	n1(AU_EAST,AU_EAST_1,5vcpu): {s1:(256GiB)}
	n2(AU_EAST,AU_EAST_1,5vcpu): {s2:(256GiB)}
	n3(AU_EAST,AU_EAST_1,5vcpu): {s3:(256GiB)}
	n4(AU_EAST,AU_EAST_1,5vcpu): {s4:(256GiB)}
	n5(AU_EAST,AU_EAST_1,5vcpu): {s5:(256GiB)}
	n6(AU_EAST,AU_EAST_1,5vcpu): {s6:(256GiB)}
Key Space
	[1,10000): 36(rf=3), 256MiB, [{s1*,s2,s3}:36]
	[10001,20000): 36(rf=3), 256MiB, [{s4*,s5,s6}:36]
Event
	set LBRebalancingMode to 3
Workload Set Up
	[1,10000): read-only high-cpu [5000.00cpu-us/op, 1B/op, 1000ops/s]
	[10001,20000): write-only large-block [0.00cpu-us/write(raft), 1000B/op, 20000ops/s]
Changed Settings
	SplitQueueEnabled: false (default: true)
==========================
