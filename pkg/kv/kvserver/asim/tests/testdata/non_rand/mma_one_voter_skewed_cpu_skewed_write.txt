skip_under_ci
----

# replication factor one, the first store gets all the reads (CPU usage), the second one gets writes.

gen_cluster nodes=2 node_cpu_rate_capacity=100000
----
WARNING: node CPU capacity of â‰ˆ0.00 cores is likely accidental

gen_ranges ranges=100 repl_factor=1 min_key=1 max_key=10000 placement_type=replica_placement bytes=26843545
{s1}:1
----
{s1:*}:1

gen_ranges ranges=100 repl_factor=1 min_key=10001 max_key=20000 placement_type=replica_placement bytes=26843545
{s2}:1
----
{s2:*}:1

# read cpu load of 1000x100=10k, all hitting s1, which is then at 100% cpu.
gen_load rate=1000 rw_ratio=1.0 request_cpu_per_access=500000 min_key=1 max_key=10000
----

# Write only workload, which generates 20% cpu and 5mb of writes per second.
# over the second half of the keyspace.
gen_load rate=5000 rw_ratio=0 min_block=1000 max_block=1000 raft_cpu_per_write=1 min_key=10001 max_key=20000
----

setting split_queue_enabled=false
----

eval duration=90m samples=1 seed=42 cfgs=(mma-only) metrics=(cpu,write_bytes_per_second,replicas,leases)
----
cpu#1: last:  [s1=269771651, s2=230297516] (stddev=19737067.50, mean=250034583.50, sum=500069167)
cpu#1: thrash_pct: [s1=52%, s2=94%]  (sum=147%)
leases#1: first: [s1=100, s2=100] (stddev=0.00, mean=100.00, sum=200)
leases#1: last:  [s1=87, s2=113] (stddev=13.00, mean=100.00, sum=200)
leases#1: thrash_pct: [s1=88%, s2=38%]  (sum=126%)
replicas#1: first: [s1=100, s2=100] (stddev=0.00, mean=100.00, sum=200)
replicas#1: last:  [s1=87, s2=113] (stddev=13.00, mean=100.00, sum=200)
replicas#1: thrash_pct: [s1=88%, s2=38%]  (sum=126%)
write_bytes_per_second#1: last:  [s1=1651264, s2=3346471] (stddev=847603.50, mean=2498867.50, sum=4997735)
write_bytes_per_second#1: thrash_pct: [s1=47%, s2=34%]  (sum=81%)
artifacts[mma-only]: ad693ef62650aec7
