# This test demonstrates setting and asserting on lease preferences. The
# cluster topology is identical to example_conformance.
gen_cluster nodes=5
----

gen_cluster_with_locality regions=(a, b) nodes_per_region=(2,3)
----

# Setup three span configs, the first span config should produce no violations
# as all the voters are required to be in the same region as the preference.
# The second span config lease preferences will be only satisfiable by a less
# preferred preference (not the first preference in the preference list). The
# last span config will be impossible to satisfy, so should produce a violation.
set_span_config 
[0,1000): num_replicas=3 num_voters=3 constraints={'+region=b':3} lease_preferences=[['+region=b']]
----

validate_config
----
unsatisfiable:
validation result:
	zone:
		AU_EAST_1: voters: 0, non_voters: 0, unassigned: 5
	region:
		AU_EAST: voters: 0, non_voters: 0, unassigned: 5
	cluster: voters: 0, non_voters: 0, unassigned: 5
region constraint value b is not found in the cluster set up


set_span_config 
[1000,2000): num_replicas=3 num_voters=3 constraints={'+region=b':3} lease_preferences=[['+region=a'],['+region=b']]
----

validate_config
----
unsatisfiable:
validation result:
	zone:
		AU_EAST_1: voters: 0, non_voters: 0, unassigned: 5
	region:
		AU_EAST: voters: 0, non_voters: 0, unassigned: 5
	cluster: voters: 0, non_voters: 0, unassigned: 5
region constraint value b is not found in the cluster set up


set_span_config 
[2000,10000): num_replicas=3 num_voters=3 constraints={'+region=b':3} lease_preferences=[['+region=c']]
----

validate_config
----
unsatisfiable:
validation result:
	zone:
		AU_EAST_1: voters: 0, non_voters: 0, unassigned: 5
	region:
		AU_EAST: voters: 0, non_voters: 0, unassigned: 5
	cluster: voters: 0, non_voters: 0, unassigned: 5
region constraint value b is not found in the cluster set up

assertion type=conformance lease-violating=1 lease-less-preferred=1
----

eval duration=10m
----
OK

topology
----
a
  a1
  │ └── [1 2]
b
  b1
    └── [3 4 5]

# vim:ft=sh
