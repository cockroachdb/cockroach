# Want to test two cases:
# (1) Where its impossible to shed leases from the CPU overloaded store, so we
#     should initially observe a period of no rebalancing activity away from
#     the store.
# (2) Where its possible to shed leases from the CPU overloaded store, so we
#     should observe a period of lease transfers before any replica based
#     rebalancing away from the store occurs.
gen_cluster nodes=5 node_cpu_rate_capacity=90000
----

# Disable everything but the mma store rebalancer.
setting rebalance_mode=3 replicate_queue_enabled=false lease_queue_enabled=false split_queue_enabled=false
----

# Case (1) where s1 has no leases and is CPU overloaded due to raft CPU. It
# won't be able to shed its own replicas because it is not the leaseholder for
# any of the ranges.
gen_ranges ranges=25 min_key=0 max_key=10000 placement_type=weighted replica_weights=(0.3,0.175,0.175,0.175,0.175) lease_weights=(0,0.25,0.25,0.25,0.25)
----

gen_load rate=1000 rw_ratio=0 min_block=0 max_block=0 min_key=0 max_key=10000 raft_cpu_per_write=100
----

eval duration=30m samples=1 seed=42
----
OK

plot stat=cpu show_last_value=true
----
----

 88016 ┤╭──────╮
 82148 ┤│      │
 76280 ┤│      │
 70413 ┤│      ╰──╭────╮╭─╮
 64545 ┤│      ╭───────────────────────────────────────────────────────────────────────
 58677 ┤│╭─────╯──╭───────╯────────────────────────────────────────────────────────────
 52809 ┤╭╯────────╯────╮╭─╯╰╯ ╰──╯ ╰──╯
 46942 ┤│              ╰╯
 41074 ┤│
 35206 ┤│
 29339 ┤│
 23471 ┤│
 17603 ┤│
 11735 ┤│
  5868 ┤│
     0 ┼╯
                                              cpu

last store values: [s1=55979 s2=60028 s3=55972 s4=64081 s5=64006] (stddev=3608.21)
----
----

plot stat=write_bytes_per_second show_last_value=true
----
----

 0.00 ┼───────────────────────────────────────────────────────────────────────────────
                                    write_bytes_per_second

last store values: [s1=0 s2=0 s3=0 s4=0 s5=0] (stddev=0.00)
----
----

plot stat=replicas show_last_value=true
----
----

 22.00 ┼───────╮
 21.40 ┤       │
 20.80 ┤       │
 20.20 ┤       │
 19.60 ┤       │
 19.00 ┤       │
 18.40 ┤       │
 17.80 ┤       ╰──╮
 17.20 ┤          │
 16.60 ┤          ╭───────╮
 16.00 ┤       ╭───────────────────────────────────────────────────────────────────────
 15.40 ┤       │  │       │
 14.80 ┤       │──╭───────╯────────────────────────────────────────────────────────────
 14.20 ┤       │  │       │
 13.60 ┼───────╯  │───────╰────────────────────────────────────────────────────────────
 13.00 ┼──────────╯───────╯
                                            replicas

last store values: [s1=14 s2=15 s3=14 s4=16 s5=16] (stddev=0.89)
----
----

plot stat=leases show_last_value=true
----
----

 8.00 ┤                  ╭────────────────────────────────────────────────────────────
 7.47 ┤                  │
 6.93 ┼───────────────────────────────────────────────────────────────────────────────
 6.40 ┤             │ │
 5.87 ┼───────────────╯
 5.33 ┤             │
 4.80 ┤             ╰─╮
 4.27 ┤               ╰──╮
 3.73 ┤                  │
 3.20 ┤                  ╰────────────────────────────────────────────────────────────
 2.67 ┤
 2.13 ┤
 1.60 ┤
 1.07 ┤
 0.53 ┤
 0.00 ┼───────────────────────────────────────────────────────────────────────────────
                                            leases

last store values: [s1=0 s2=8 s3=3 s4=7 s5=7] (stddev=3.03)
----
----

# TODO(kvoli): Case (2)
