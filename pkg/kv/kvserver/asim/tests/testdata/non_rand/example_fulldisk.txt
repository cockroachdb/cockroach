# Set every store's capacity to 512 GiB, we will later adjust just one store to
# have less free capacity.
gen_cluster nodes=5 store_byte_capacity=549755813888
----

gen_ranges ranges=500 bytes=300000000
----

gen_load rate=500 max_block=128000 min_block=128000
----

# Set the disk storage capacity of s5 to 100 GiB. This will necessitate
# shedding replicas from s5 continously as the workload fills up ranges.
set_capacity store=5 capacity=107374182400
----

eval duration=30m seed=42
----
OK

# Plot the replicas over time per store. With a steady state of writes, we will
# repeatedly hit the disk fullness threshold which causes shedding replicas on
# store 5. This is shown below as it sheds replicas.
plot stat=replicas
----
 347 ┤                                       ╭╮            ╭╮╭╭╮ ╭╮╭──╭╮─╭╮─╭╮─╭──╮╮╭
 334 ┤     ╭╮ ╭╮    ╭╮  ╭─╮╮╭╮──╭╮╮╭╮─╭───╮─╭───────╮╭──╮╭─╯╰╮╭──╯╰╮╭─╯╰─╯╰─╯╰─╯─╯│╰╭
 321 ┤ ╭───╭──╮╭╭───────╯╭│╭────╯╰─╯╰─╯╮╭─╰─╯╰╯╮╭╰─╯╰╯─╯╰╯╯╰─╰╯╰╮╭╯╰╯  ╰╯╰─╯      ╰─╯
 307 ┼╮────╯╯╯╰─╯╰╯╯╰╯╯ ╰╯╰╯╯ ╰╯ ╰╯    ╰╯      ╰╯               ╰╯
 294 ┤╰╮
 281 ┤ │
 268 ┤ ╰╮╭╮ ╭╮
 255 ┤  ╰╯╰─╯│╭─╮ ╭╮
 241 ┤       ╰╯ ╰─╯│╭─╮╭─╮ ╭╮
 228 ┤             ╰╯ ╰╯ │╭╯╰╮╭╮ ╭╮ ╭╮
 215 ┤                   ╰╯  ╰╯╰─╯╰─╯╰╮╭─╮    ╭╮
 202 ┤                                ╰╯ │╭─╮ │╰╮╭╮ ╭─╮ ╭╮     ╭╮
 189 ┤                                   ╰╯ ╰─╯ ╰╯╰╮│ │ │╰╮╭─╮ │╰╮ ╭╮  ╭╮
 175 ┤                                             ╰╯ ╰─╯ ╰╯ ╰─╯ ╰─╯╰╮ │╰╮╭─╮ ╭─╮ ╭─╮
 162 ┤                                                               ╰─╯ ╰╯ │ │ │ │ ╰
 149 ┤                                                                      ╰─╯ ╰─╯
                                          replicas
initial store values: [s1=300, s2=300, s3=300, s4=300, s5=300] (stddev=0.00, mean=300.00, sum=1500)
last store values: [s1=347, s2=342, s3=338, s4=336, s5=152] (stddev=75.59, mean=303.00, sum=1515)

# Plot the % of disk storage capacity used. We should see s5 hovering right
# around 92.5-95% (the storage capacity threshold value).
plot stat=disk_fraction_used
----
 1.05 ┼╮                                                        ╭╮  ╭╮  ╭╮
 0.99 ┤╰╮                   ╭╮ ╭╮ ╭╮ ╭╮ ╭╮     ╭╮ ╭╮ ╭─╮ ╭╮  ╭╮ │╰╮ ││  ││ ╭╮  ╭─╮ ╭─╮
 0.94 ┤ ╰╮╭╮ ╭╮╭─╮╭─╮╭─╮╭─╮╭╯╰╮│╰╮│╰─╯╰╮│╰╮╭─╮ │╰╮││ │ │ │╰╮╭╯╰╮│ ╰─╯╰╮╭╯╰╮│╰╮ │ │ │ │
 0.88 ┤  ╰╯╰─╯╰╯ ╰╯ ╰╯ ╰╯ ╰╯  ╰╯ ╰╯    ╰╯ ╰╯ │╭╯ ╰╯╰─╯ ╰─╯ ╰╯  ╰╯     ╰╯  ╰╯ ╰─╯ ╰─╯ ╰
 0.82 ┤                                      ╰╯
 0.77 ┤
 0.71 ┤
 0.65 ┤
 0.60 ┤
 0.54 ┤
 0.49 ┤
 0.43 ┤
 0.37 ┤                                                           ╭╮╭─╭───────────────
 0.32 ┤                                    ╭──╭───────────────────╯╰──╯╰─╯
 0.26 ┤              ╭╮╭╮╭─╮╭─────────────────╯╯─╯
 0.20 ┼────────────────╯╰╯╯╰╯╯
                                      disk_fraction_used
initial store values: [s1=0.20, s2=0.20, s3=0.20, s4=0.20, s5=1.05] (stddev=0.34, mean=0.37, sum=2)
last store values: [s1=0.41, s2=0.41, s3=0.40, s4=0.40, s5=0.93] (stddev=0.21, mean=0.51, sum=3)
