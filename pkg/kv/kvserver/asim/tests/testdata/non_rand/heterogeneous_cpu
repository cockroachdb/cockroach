skip_under_ci
----

gen_cluster nodes=3 node_cpu_rate_capacity=(8000000000,8000000000,16000000000)
----

gen_ranges ranges=200 min_key=1 max_key=10000 placement_type=even
{s1,s2,s3}:1
----

# Read-only workload on first 30 ranges. 20 cores (out of 24 total in the cluster).
# Because the ranges are placed evenly, initially each node will have about the same
# cpu nanos per second.
gen_load rate=40000 rw_ratio=1 request_cpu_per_access=500000 min_key=1 max_key=10000
----

# We want the CPU load to balance based on %cpu. But both the MMA and SMA balance
# on absolute cpu-nanos, i.e. not taking into account that n3 has double the capacity.
# See tracking issue: https://github.com/cockroachdb/cockroach/issues/153777
assertion stat=cpu_util type=balance ticks=6 upper_bound=1.1
----
asserting: max_{stores}(cpu_util)/mean_{stores}(cpu_util) ≤ 1.10 at each of last 6 ticks

eval cfgs=(sma-count,mma-only) duration=10m metrics=(cpu,cpu_util)
----
cpu#1: last:  [s1=6700914166, s2=6696073333, s3=6603012499] (stddev=45053658.00, mean=6666666666.00, sum=19999999998)
cpu_util#1: last:  [s1=0.84, s2=0.84, s3=0.41] (stddev=0.20, mean=0.70, sum=2)
artifacts[sma-count]: c53e117c72d7f8ff
failed assertion sample 1
  balance stat=cpu_util threshold=(≤1.10) ticks=6
	max/mean=1.20 tick=0
	max/mean=1.20 tick=1
	max/mean=1.20 tick=2
	max/mean=1.20 tick=3
	max/mean=1.20 tick=4
	max/mean=1.20 tick=5
==========================
cpu#1: last:  [s1=6400839999, s2=6398904166, s3=7199131191] (stddev=376775185.87, mean=6666291785.33, sum=19998875356)
cpu_util#1: last:  [s1=0.80, s2=0.80, s3=0.45] (stddev=0.17, mean=0.68, sum=2)
artifacts[mma-only]: 6e94f0101ee507bb
failed assertion sample 1
  balance stat=cpu_util threshold=(≤1.10) ticks=6
	max/mean=1.17 tick=0
	max/mean=1.17 tick=1
	max/mean=1.17 tick=2
	max/mean=1.17 tick=3
	max/mean=1.17 tick=4
	max/mean=1.17 tick=5
==========================
