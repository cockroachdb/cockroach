# Want to test two cases:
# (1) Where its impossible to shed leases from the CPU overloaded store, so we
#     should initially observe a period of no rebalancing activity away from
#     the store.
# (2) Where its possible to shed leases from the CPU overloaded store, so we
#     should observe a period of lease transfers before any replica based
#     rebalancing away from the store occurs.
gen_cluster nodes=5 node_cpu_rate_capacity=90000
----
WARNING: node CPU capacity of â‰ˆ0.00 cores is likely accidental

setting split_queue_enabled=false
----

# Case (1) where s1 has no leases and is CPU overloaded due to raft CPU. It
# won't be able to shed its own replicas because it is not the leaseholder for
# any of the ranges.

# Originally, this test uses replica_weights=(0.3,0.175,0.175,0.175,0.175)
# lease_weights=(0,0.25,0.25,0.25,0.25). Replication factor is 3 by default. 75
# replicas in total. replicas distribution is approximately s1: 23, s2: 13, s3:
# 13, s4: 13, s5: 13 leaseholder weights: s2: 7 leaseholder, s3: 6 leaseholder,
# s4: 6 leaseholder, s5: 6 leaseholder. To approximate this, we use replica
# placement: As an approximation, (s1,s2*,s3):7, (s1,s4,s5*):6, (s1,s2,s4*):6,
# (s1,s3*,s5):6 s1 does not have the lease. Other stores have the same
gen_ranges ranges=25 min_key=0 max_key=10000 placement_type=replica_placement
{s1,s2:*,s3}:7
{s1,s4,s5:*}:6
{s1,s2,s4:*}:6
{s1,s3:*,s5}:6
----
{s1,s2:*,s3}:7
{s1,s4,s5:*}:6
{s1,s2,s4:*}:6
{s1,s3:*,s5}:6

gen_load rate=1000 rw_ratio=0 min_key=0 max_key=10000 raft_cpu_per_write=500000
----

eval duration=30m samples=1 seed=42 cfgs=(mma-only) metrics=(cpu,write_bytes_per_second,replicas,leases)
----
cpu#1: last:  [s1=260292000, s2=300156000, s3=320067000, s4=299992333, s5=319992666] (stddev=21813256.71, mean=300099999.80, sum=1500499999)
cpu#1: thrash_pct: [s1=108%, s2=14%, s3=14%, s4=15%, s5=15%]  (sum=167%)
leases#1: first: [s1=0, s2=7, s3=6, s4=6, s5=6] (stddev=2.53, mean=5.00, sum=25)
leases#1: last:  [s1=0, s2=7, s3=6, s4=6, s5=6] (stddev=2.53, mean=5.00, sum=25)
leases#1: thrash_pct: [s1=0%, s2=0%, s3=0%, s4=0%, s5=0%]  (sum=0%)
replicas#1: first: [s1=25, s2=13, s3=13, s4=12, s5=12] (stddev=5.02, mean=15.00, sum=75)
replicas#1: last:  [s1=13, s2=15, s3=16, s4=15, s5=16] (stddev=1.10, mean=15.00, sum=75)
replicas#1: thrash_pct: [s1=0%, s2=0%, s3=0%, s4=0%, s5=0%]  (sum=0%)
write_bytes_per_second#1: last:  [s1=520, s2=600, s3=640, s4=599, s5=639] (stddev=43.64, mean=599.60, sum=2998)
write_bytes_per_second#1: thrash_pct: [s1=123%, s2=13%, s3=15%, s4=16%, s5=14%]  (sum=181%)
artifacts[mma-only]: f4b2b302e185d34e

# TODO(kvoli): Case (2)
