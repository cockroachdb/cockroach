skip_under_ci
----

# This test can now roughly equalize both cpu and write bandwidth. It didn't
# use to be able to do this, because the highest cpu node had the lowest write
# bandwidth and vice versa, so neither was able to shed to the other. The
# ignoreLevel logic in rebalanceStores with the grace duration to start
# shedding more aggressively and other related changes have made this much
# better.

gen_cluster nodes=6 node_cpu_rate_capacity=50000
----

# The placement will be skewed, s.t. n1/s1, n2/s2 and n3/s3 will have all the
# replicas initially and n1/s1 will have every lease. Each range is initially
# 26 MiB.
gen_ranges ranges=300 min_key=1 max_key=10000 placement_type=replica_placement bytes=26843545
{s1,s2,s3}:1
----
{s1:*,s2,s3}:1

gen_load rate=1000 rw_ratio=1 request_cpu_per_access=100 min_key=1 max_key=10000
----

# Write only workload, which generates little CPU and 100_000 (x replication
# factor) write bytes per second over the second half of the keyspace.
gen_ranges ranges=300 min_key=10001 max_key=20000 placement_type=replica_placement bytes=26843545
{s4,s5,s6}:1
----
{s4:*,s5,s6}:1

gen_load rate=20000 rw_ratio=0 min_block=1000 max_block=1000 raft_cpu_per_write=1 min_key=10001 max_key=20000
----

setting rebalance_mode=3 replicate_queue_enabled=false lease_queue_enabled=false split_queue_enabled=false
----

eval duration=90m samples=1 seed=42
----
[nodes: 6, stores_per_node:1, store_disk_capacity: 256GiB, node_capacity: 0cpu-sec/sec]
[workload: 1000ops/s(r:1,w:0), 0cpu-us/op, 1-1B/op, key=[1,10000]
[workload: 20000ops/s(r:0,w:1), 0cpu-us/write(raft), 1000-1000B/op, key=[10001,20000]
[ranges: num_ranges=300, key=[1,10000], rf=3, range_size=25 MiB (replica_placement across stores)]
[ranges: num_ranges=300, key=[10001,20000], rf=3, range_size=25 MiB (replica_placement across stores)]
OK

plot stat=cpu sample=1  
----
 98306 ┤╭─────╮
 91753 ┤│     ╰──╮
 85199 ┤│        ╰──╮
 78645 ┤│           ╰──╮
 72091 ┤│              ╰─╮
 65538 ┤│                ╰╮
 58984 ┤│                 ╰─╮
 52430 ┤│                   ╰╮
 45876 ┤│                    ╰─╮
 39323 ┤│                      ╰─╮
 32769 ┤│                    ╭───────╮──╮───╮
 26215 ┤│            ╭───╮╭──╭╮╭───────────────────────────────────────────────────────
 19661 ┤╭────────────╯─╮─╰───╯╰╯────────╯╯
 13108 ┤│            ╭╰╰────╯
  6554 ┤│    ╭───────╯╯
     0 ┼╯────╯──╯
                                              cpu
initial store values: [s1=0, s2=0, s3=0, s4=0, s5=0, s6=0] (stddev=0.00, mean=0.00, sum=0)
last store values: [s1=29173, s2=28998, s3=29062, s4=24188, s5=24477, s6=24141] (stddev=2407.34, mean=26673.17, sum=160039)

plot stat=write_bytes_per_second
----
 19994973 ┤╭───────────────╮
 18661975 ┤│  ╰╰────╮      ╰╮
 17328977 ┤│       ╰╰──╮    ╰────╮╭──╮
 15995979 ┤│           ╰─╮       ╰╯  ╰────────╮
 14662980 ┤│           ╰╮│                    ╰─────────╮
 13329982 ┤│            ╰╰╮                             ╰──────────╮
 11996984 ┤│             ╰╰╮                                       ╰─────────╮
 10663986 ┤│              ╰╰─────────────────────────────────────────────────╰────────────
  9330987 ┤│              ╭─╯    ╰╯     ╰╯
  7997989 ┤│              │╯
  6664991 ┤│             ╭╯                                                 ╭─────────────
  5331993 ┤│            ╭╯                                        ╭─────────╯
  3998995 ┤│           ╭╯                               ╭─────────╯
  2665996 ┤│        ╭──╯                      ╭─────────╯
  1332998 ┤│   ╭────╯                 ╭───────╯
        0 ┼╯───╯──────────────────────╯
                                        write_bytes_per_second
initial store values: [s1=0, s2=0, s3=0, s4=0, s5=0, s6=0] (stddev=0.00, mean=0.00, sum=0)
last store values: [s1=6402377, s2=10495410, s3=10232194, s4=10960822, s5=10961517, s6=10961163] (stddev=1633693.88, mean=10002247.17, sum=60013483)

plot stat=replicas  
----
 459 ┤                              ╭╮
 440 ┤                ╭──────────────────────────────────────────────────────────────
 422 ┤               ╭╯
 403 ┤              ╭│
 384 ┤              ╭╯
 365 ┤             ╭╯
 347 ┤            ╭╯
 328 ┤         ╭──╯
 309 ┤     ╭───╯   ╭──╮
 290 ┼─────────────╯  ╰╮
 272 ┤    ╰─╰────╮─╮   ╰─────────╮                             ╭─────────────────────
 253 ┤         ╰─╰─╮─────╮       ╰───────────╮     ╭───────────╯
 234 ┤            ╰╰╮    ╰───────────────────╰───────────╮
 215 ┤             ╰╰╮                                   ╰──────────╮
 197 ┤              ╰│               ╭──────────────────────────────╰────────────────
 178 ┤               ╰───────────────╯
                                          replicas
initial store values: [s1=300, s2=300, s3=300, s4=300, s5=300, s6=300] (stddev=0.00, mean=300.00, sum=1800)
last store values: [s1=289, s2=450, s3=445, s4=206, s5=204, s6=206] (stddev=108.42, mean=300.00, sum=1800)

plot stat=leases sample=1  
----
 300 ┼─────╮
 280 ┤     ╰────╮
 260 ┤         ╰╰─╮
 240 ┤            ╰╮─╮
 220 ┤             ╰╮╰─╮
 200 ┤              ╰╮ ╰╮         ╭──────────────────────────────────────────────────
 180 ┤               ╰────────────╯
 160 ┤                    ╰╮
 140 ┤                     ╰─╭─────╮╭───────────────────────╮
 120 ┤                    ╭─╮╯──╮  ││                       ╰────────────────────────
 100 ┤               ╭─╭──╯ │   ╰──╭╯──────────────────────────╯
  80 ┤              ╭──╯    ╭──────╯│
  60 ┤             ╭╯       │────────────────────────────────────────────────────────
  40 ┤          ╭──╯        │   ╭────────────────────────────────────────────────────
  20 ┤     ╭────╯  ╭────────╯───╯
   0 ┼─────────────╯
                                           leases
initial store values: [s1=300, s2=0, s3=0, s4=300, s5=0, s6=0] (stddev=141.42, mean=100.00, sum=600)
last store values: [s1=116, s2=61, s3=57, s4=202, s5=43, s6=121] (stddev=54.34, mean=100.00, sum=600)
