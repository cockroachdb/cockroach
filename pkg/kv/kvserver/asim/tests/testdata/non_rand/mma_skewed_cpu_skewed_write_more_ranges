# This test can now roughly equalize both cpu and write bandwidth. It didn't
# use to be able to do this, because the highest cpu node had the lowest write
# bandwidth and vice versa, so neither was able to shed to the other. The
# ignoreLevel logic in rebalanceStores with the grace duration to start
# shedding more aggressively and other related changes have made this much
# better.

gen_cluster nodes=6 node_cpu_rate_capacity=50000
----

# The placement will be skewed, s.t. n1/s1, n2/s2 and n3/s3 will have all the
# replicas initially and n1/s1 will have every lease. Each range is initially
# 26 MiB.
gen_ranges ranges=300 min_key=1 max_key=10000 placement_type=replica_placement bytes=26843545
{s1,s2,s3}:1
----
{s1:*,s2,s3}:1

gen_load rate=1000 rw_ratio=1 request_cpu_per_access=100 min_key=1 max_key=10000
----

# Write only workload, which generates little CPU and 100_000 (x replication
# factor) write bytes per second over the second half of the keyspace.
gen_ranges ranges=300 min_key=10001 max_key=20000 placement_type=replica_placement bytes=26843545
{s4,s5,s6}:1
----
{s4:*,s5,s6}:1

gen_load rate=20000 rw_ratio=0 min_block=1000 max_block=1000 raft_cpu_per_write=1 min_key=10001 max_key=20000
----

setting rebalance_mode=3 replicate_queue_enabled=false lease_queue_enabled=false split_queue_enabled=false
----

eval duration=60m samples=1 seed=42
----
OK

plot stat=cpu sample=1  
----
 100000 ┤╭────╮
  93333 ┤│    ╰──────╮
  86667 ┤│           ╰───╮
  80000 ┤│               ╰──╮
  73333 ┤│                  ╰──╮
  66667 ┤│                     ╰──╮
  60000 ┤│                        ╰╮
  53333 ┤│                         ╰─╮
  46667 ┤│                           ╰──╮
  40000 ┤│                              ╰╮
  33333 ┤│                              ╭───╮╮────────╮
  26667 ┤│                     ╭──╮╭────╯   ╭───────────────────────────────────────────
  20000 ┤╭─────────────────────╯──╰─────────────────────────────────────────────────────
  13333 ┤│                 ╭──╰╰────────╯
   6667 ┤│     ╭───────────╯╯
      0 ┼╯─────╯──╯
                                               cpu
initial store values: [s1=0, s2=0, s3=0, s4=0, s5=0, s6=0] (stddev=0.00, mean=0.00, sum=0)
last store values: [s1=29202, s2=28904, s3=28903, s4=24411, s5=28223, s6=20250] (stddev=3294.36, mean=26648.83, sum=159893)

plot stat=write_bytes_per_second
----
 19999999 ┤╭────────────────────────╮
 18666666 ┤│    ╰╰──────╮           ╰─╮
 17333333 ┤│            ╰────╮        ╰─────────────╮
 15999999 ┤│                 ╰──╮                   ╰─────────╮
 14666666 ┤│                  ╰╮╰╮                            ╰──────────╮
 13333333 ┤│                   ╰─│                                       ╰────────╮
 11999999 ┤│                     ╰─╮                                              ╰───────
 10666666 ┤│                      ╰╰──────────────────────────────────────────────────────
  9333333 ┤│                      ╭──╯
  8000000 ┤│                     ╭╯╯
  6666666 ┤│                    ╭╯                                                     ╭──
  5333333 ┤│                   ╭╯                                            ╭─────────╯
  4000000 ┤│                 ╭─╯                                   ╭─────────╯
  2666667 ┤│            ╭────╯                          ╭──────────╯
  1333333 ┤│     ╭──────╯                        ╭──────╯
        0 ┼╯─────╯───────────────────────────────╯
                                        write_bytes_per_second
initial store values: [s1=0, s2=0, s3=0, s4=0, s5=0, s6=0] (stddev=0.00, mean=0.00, sum=0)
last store values: [s1=6209245, s2=10364227, s3=10427881, s4=10563845, s5=10431831, s6=12006680] (stddev=1789633.50, mean=10000618.17, sum=60003709)

plot stat=replicas  
----
 456 ┤                         ╭───────────────╮ ╭╮  ╭╮╭╮╭╮ ╭╮ ╭─╮╭╮  ╭╮╭─╮  ╭╮
 437 ┤                       ╭─╯          ╰────╰─╯╰──╯╰╯╰╯╰─╯╰─╯─╰╯╰──╯╰╯─╰──╯╰──────
 418 ┤                      ╭╯
 399 ┤                     ╭╯
 380 ┤                    ╭╯
 361 ┤                  ╭─╯
 342 ┤               ╭──╯
 323 ┤         ╭─────╯
 304 ┼──────────────────────────╮
 285 ┤    ╰╰─────────╮───╮      ╰───────────╮                           ╭────────────
 266 ┤              ╰╰───╮──────╮           ╰─────────╮      ╭──────────╯
 247 ┤                  ╰╰─╮    ╰─────────────────────╰─────────────╮
 228 ┤                   ╰─╰╮                                       ╰────────╮
 209 ┤                     ╰╰╮            ╭──────────────────────────────────╰───────
 190 ┤                      ╰╰╮   ╭╮╭╭────╯────────────────────────────────╯ ╰╯   ╰╯
 171 ┤                       ╰╰──────╯
                                          replicas
initial store values: [s1=300, s2=300, s3=300, s4=300, s5=300, s6=300] (stddev=0.00, mean=300.00, sum=1800)
last store values: [s1=293, s2=443, s3=446, s4=202, s5=209, s6=207] (stddev=106.73, mean=300.00, sum=1800)

plot stat=leases sample=1  
----
 300 ┼────────╮
 280 ┤        ╰───────╮
 260 ┤            ╰───╰─╮
 240 ┤                ╰─╰─╮
 220 ┤                    ╰╮─╮
 200 ┤                     ╰─╮─╮                   ╭─────────────────────────────────
 180 ┤                       ╰─────────────────────╯
 160 ┤                          ╰──╮
 140 ┤                             ╭──────╮
 120 ┤                         ╭──╭─────────────────────────────╮────────────────────
 100 ┤                      ╭╭────╯      ╰──────────────────────╰────────────────────
  80 ┤                    ╭╭─╯
  60 ┤                  ╭╭─╯             ╭───────────────────────────────────────────
  40 ┤              ╭────╯           ╭───╯
  20 ┤      ╭───────╯╯    ╭──────────────────────────────────────────────────────────
   0 ┼────────────────────╯
                                           leases
initial store values: [s1=300, s2=0, s3=0, s4=300, s5=0, s6=0] (stddev=141.42, mean=100.00, sum=600)
last store values: [s1=94, s2=121, s3=107, s4=200, s5=53, s6=25] (stddev=55.32, mean=100.00, sum=600)
