# This test shows how configurations may be loaded from the existing catalog.
# This test also demonstrates how to use conformance assertions to check
# replication meet expectations.
load_cluster config=complex
----

# Load just a single range into state, with a RF=5.
gen_ranges ranges=1 repl_factor=5
----

# Set the span config so that there are only voters, with 3 voters in region a
# and 1 voter each in b and c.
set_span_config
[0,10000): num_replicas=5 num_voters=5 constraints={'+region=a':3,'+region=b':1,'+region=c':1} voter_constraints={'+region=a':3,'+region=b':1,'+region=c':1}
----

# This assertion will fail if there are more than 0 unavailable, under
# replicated, over replicated or constraint violating ranges, once the
# simulation evaluation ends.
assertion type=conformance unavailable=0 under=0 over=0  violating=0
----

eval duration=2m samples=1 seed=42
----
OK

topology
----
a
  a1
  │ └── [1]
  a2
  │ └── [2 3]
  a3
  │ └── [4 5 6]
  a4
  │ └── [7 8 9 10 11 12 13 14 15 16]
b
  b1
  │ └── [17 18]
c
  c1
    └── [19 20 21]
  c2
    └── [22 23 24]
  c3
    └── [25 26 27 28]



# vim:ft=sh
