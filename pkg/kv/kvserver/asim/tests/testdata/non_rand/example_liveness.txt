skip_under_ci
----

# This example sets n7 to dead initially and n5 to decommissioning after 2
# minutes.
#
# Create 7 stores, with 700 ranges (RF=3). Each store should have approx 300
# replicas and 100 leases.
gen_cluster nodes=7
----

gen_ranges ranges=700
----

# n7 is dead and remains dead forever. It will still have its initial (3000)
# replicas.
set_liveness node=7 liveness=dead
----

# n6 becomes decommissioning after 3 minutes and remains decommissioning
# thereafter.
set_liveness node=6 liveness=decommissioning delay=3m
----

# The number of replicas on the dead and decommissioning stores should be 0,
# assert this.
assertion type=stat stat=replicas ticks=6 exact_bound=0 stores=(6,7)
----

# We expect one node(store) (n7) to immediately start losing replicas, whilst
# other stores gain replicas evenly. After 3 minutes, we expect another
# node(store) (n6) to begin losing replicas in a similar manner.
# Both nodes should begin losing leases immediately after their liveness status
# is changed to dead or decommissioning (5 minutes later).
eval duration=12m seed=42 metrics=(replicas,leases) cfgs=(mma-only)
----
leases#1: first: [s1=100, s2=100, s3=100, s4=100, s5=100, s6=100, s7=100] (stddev=0.00, mean=100.00, sum=700)
leases#1: last:  [s1=133, s2=138, s3=146, s4=139, s5=144, s6=0, s7=0] (stddev=63.37, mean=100.00, sum=700)
replicas#1: first: [s1=300, s2=300, s3=300, s4=300, s5=300, s6=300, s7=300] (stddev=0.00, mean=300.00, sum=2100)
replicas#1: last:  [s1=434, s2=414, s3=419, s4=415, s5=418, s6=0, s7=0] (stddev=189.84, mean=300.00, sum=2100)
artifacts[mma-only]: c1bb50014d45ebbd
