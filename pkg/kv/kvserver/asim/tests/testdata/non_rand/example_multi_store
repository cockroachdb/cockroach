# This test simulates identical parameters as the rebalance_load multi-store
# test. The number of leases per store should be equal to 1. We assert on this
# with a balance threshold of 1 (i.e. identical number of leases) and a steady
# state threshold of 0 (i.e. doesn't change).
gen_cluster nodes=7 stores_per_node=2
----

gen_ranges ranges=14 placement_type=skewed
----

gen_load rate=7000
----

assertion stat=leases type=balance ticks=6 upper_bound=1
----

assertion stat=leases type=steady ticks=6 upper_bound=0
----

eval duration=5m seed=42
----
OK

plot stat=leases
----
 14.00 ┼─╮
 13.07 ┤ │
 12.13 ┤ ╰╮
 11.20 ┤  │
 10.27 ┤  ╰╮
  9.33 ┤   │
  8.40 ┤   │
  7.47 ┤   │
  6.53 ┤   │
  5.60 ┤   ╰╮
  4.67 ┤    │
  3.73 ┤    ╰╮
  2.80 ┤   ╭────────────╭───────────────╮
  1.87 ┤   ╭────────────╮──────────────╮│───────────────╮
  0.93 ┤ ╭─╯────────────╭──────────────────────────────────────────────────────────────
  0.00 ┼────────────────╯───────────────────────────────╯
                                             leases
initial store values: [s1=14 s2=0 s3=0 s4=0 s5=0 s6=0 s7=0 s8=0 s9=0 s10=0 s11=0 s12=0 s13=0 s14=0] (stddev=3.61,sum=14.00)
last store values: [s1=1 s2=1 s3=1 s4=1 s5=1 s6=1 s7=1 s8=1 s9=1 s10=1 s11=1 s12=1 s13=1 s14=1] (stddev=0.00,sum=14.00)
