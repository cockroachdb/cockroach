# Disable all lease and replica movement.
setting rebalance_mode=0 replicate_queue_enabled=false lease_queue_enabled=false split_queue_enabled=false
----

# This testfile provides examples generating imbalanced CPU usage and write
# load. All the examples will use the same cluster, which has 10 nodes with
# 20 CPU capacity each.
gen_cluster nodes=10 node_cpu_rate_capacity_ms=20000
----

# Read only workload, which generates 100_000 request cpu nanos/s evenly over
# the first half of the keyspace, which will be on all stores initially.
gen_ranges ranges=30 min_key=1 max_key=10000 placement_type=even
----

gen_load rate=1000 rw_ratio=1 request_cpu_per_access_us=100 min_key=1 max_key=10000
----

# Write only workload, which generates no CPU and 100_000 (x replication
# factor) write bytes per second over the second half of the keyspace, which
# are all on s1-s3 initially.
gen_ranges ranges=30 min_key=10001 max_key=20000 placement_type=skewed
----

gen_load rate=1000 rw_ratio=0 min_block=100 max_block=100 min_key=10001 max_key=20000
----

eval duration=5m samples=1 seed=42
----
OK

plot stat=cpu
----
 10482017870 ┤ ╭╮╮─────────────────╮                          ╭──────────────────────────────
  9783216679 ┤ ╭─────────────────────────────────────────────────────────────────────────────
  9084415488 ┤ │
  8385614296 ┤ │
  7686813105 ┤ │
  6988011914 ┤ │
  6289210722 ┤ │
  5590409531 ┤ │
  4891608339 ┤ │
  4192807148 ┤ │
  3494005957 ┤ │
  2795204765 ┤ │
  2096403574 ┤ │
  1397602383 ┤ │
   698801191 ┤ │
           0 ┼─╯
                                                    cpu
initial store values: [s1=0, s2=0, s3=0, s4=0, s5=0, s6=0, s7=0, s8=0, s9=0, s10=0] (stddev=0.00, mean=0.00, sum=0)
last store values: [s1=10020666666, s2=9921666666, s3=9998333333, s4=9923666666, s5=9990000000, s6=10006333333, s7=9970666666, s8=10202333333, s9=9970666666, s10=9995666666] (stddev=74304329.25, mean=9999999999.50, sum=99999999995)

plot stat=write_bytes_per_second
----
 100000 ┤ ╭─────────────────────────────────────────────────────────────────────────────
  93333 ┤ │
  86667 ┤ │
  80000 ┤ │
  73333 ┤ │
  66667 ┤ │
  60000 ┤ │
  53333 ┤ │
  46667 ┤ │
  40000 ┤ │
  33333 ┤ │
  26667 ┤ │
  20000 ┤ │
  13333 ┤ │
   6667 ┤ │
      0 ┼───────────────────────────────────────────────────────────────────────────────
                                      write_bytes_per_second
initial store values: [s1=0, s2=0, s3=0, s4=0, s5=0, s6=0, s7=0, s8=0, s9=0, s10=0] (stddev=0.00, mean=0.00, sum=0)
last store values: [s1=99999, s2=99999, s3=99999, s4=0, s5=0, s6=0, s7=0, s8=0, s9=0, s10=0] (stddev=45825.30, mean=29999.70, sum=299997)

plot stat=replicas
----
 39.00 ┼───────────────────────────────────────────────────────────────────────────────
 37.00 ┤
 35.00 ┤
 33.00 ┤
 31.00 ┤
 29.00 ┤
 27.00 ┤
 25.00 ┤
 23.00 ┤
 21.00 ┤
 19.00 ┤
 17.00 ┤
 15.00 ┤
 13.00 ┤
 11.00 ┤
  9.00 ┼───────────────────────────────────────────────────────────────────────────────
                                            replicas
initial store values: [s1=39, s2=39, s3=39, s4=9, s5=9, s6=9, s7=9, s8=9, s9=9, s10=9] (stddev=13.75, mean=18.00, sum=180)
last store values: [s1=39, s2=39, s3=39, s4=9, s5=9, s6=9, s7=9, s8=9, s9=9, s10=9] (stddev=13.75, mean=18.00, sum=180)

plot stat=leases
----
 33.00 ┼───────────────────────────────────────────────────────────────────────────────
 31.00 ┤
 29.00 ┤
 27.00 ┤
 25.00 ┤
 23.00 ┤
 21.00 ┤
 19.00 ┤
 17.00 ┤
 15.00 ┤
 13.00 ┤
 11.00 ┤
  9.00 ┤
  7.00 ┤
  5.00 ┤
  3.00 ┼───────────────────────────────────────────────────────────────────────────────
                                             leases
initial store values: [s1=33, s2=3, s3=3, s4=3, s5=3, s6=3, s7=3, s8=3, s9=3, s10=3] (stddev=9.00, mean=6.00, sum=60)
last store values: [s1=33, s2=3, s3=3, s4=3, s5=3, s6=3, s7=3, s8=3, s9=3, s10=3] (stddev=9.00, mean=6.00, sum=60)

# Next setup a cluster such that there will be imbalanced CPU usage but
# balanced write load.
#
# Write only workload, which generates:
# - 0 request cpu nanos/s 
# - 100_000 write bytes per second
# over the first half of the keyspace, evenly distributed over the cluster
# initially.
gen_load rate=1000 rw_ratio=0 min_block=100 max_block=100 min_key=1 max_key=10000 replace=true
----

# Read only workload, which generates:
# - 100_000 request cpu nanos/s
# - 10_000  raft cpu nanos/s
# - 1000    write bytes per second
# over the second half of the keyspace, which is on s1-s3, with all the leases
# on s1 (all request CPU).
gen_load rate=1000 rw_ratio=0 request_cpu_per_access_us=100 raft_cpu_per_write_us=10 min_key=10001 max_key=20000
----

eval duration=5m samples=1 seed=42
----
OK

plot stat=cpu sample=2
----
 110000000000 ┤ ╭─────────────────────────────────────────────────────────────────────────────
 102666666667 ┤ │
  95333333333 ┤ │
  88000000000 ┤ │
  80666666667 ┤ │
  73333333333 ┤ │
  66000000000 ┤ │
  58666666667 ┤ │
  51333333333 ┤ │
  44000000000 ┤ │
  36666666667 ┤ │
  29333333333 ┤ │
  22000000000 ┤ │
  14666666667 ┤ │
   7333333333 ┤ ╭─────────────────────────────────────────────────────────────────────────────
            0 ┼───────────────────────────────────────────────────────────────────────────────
                                                     cpu
initial store values: [s1=0, s2=0, s3=0, s4=0, s5=0, s6=0, s7=0, s8=0, s9=0, s10=0] (stddev=0.00, mean=0.00, sum=0)
last store values: [s1=110000000000, s2=10000000000, s3=10000000000, s4=0, s5=0, s6=0, s7=0, s8=0, s9=0, s10=0] (stddev=32572994949.80, mean=13000000000.00, sum=130000000000)

plot stat=write_bytes_per_second sample=2
----
 31540 ┤ ╭──╮──────────────────────────────────────────────────────────────────────────
 29437 ┤ ╭─────────────────────────────────────────────────────────────────────────────
 27335 ┤ │
 25232 ┤ │
 23129 ┤ │
 21027 ┤ │
 18924 ┤ │
 16821 ┤ │
 14719 ┤ │
 12616 ┤ │
 10513 ┤ │
  8411 ┤ │
  6308 ┤ │
  4205 ┤ │
  2103 ┤ │
     0 ┼─╯
                                     write_bytes_per_second
initial store values: [s1=0, s2=0, s3=0, s4=0, s5=0, s6=0, s7=0, s8=0, s9=0, s10=0] (stddev=0.00, mean=0.00, sum=0)
last store values: [s1=30987, s2=31001, s3=31001, s4=30068, s5=29841, s6=29948, s7=30102, s8=30102, s9=30039, s10=29905] (stddev=463.22, mean=30299.40, sum=302994)

plot stat=replicas sample=2
----
 39.00 ┼───────────────────────────────────────────────────────────────────────────────
 37.00 ┤
 35.00 ┤
 33.00 ┤
 31.00 ┤
 29.00 ┤
 27.00 ┤
 25.00 ┤
 23.00 ┤
 21.00 ┤
 19.00 ┤
 17.00 ┤
 15.00 ┤
 13.00 ┤
 11.00 ┤
  9.00 ┼───────────────────────────────────────────────────────────────────────────────
                                            replicas
initial store values: [s1=39, s2=39, s3=39, s4=9, s5=9, s6=9, s7=9, s8=9, s9=9, s10=9] (stddev=13.75, mean=18.00, sum=180)
last store values: [s1=39, s2=39, s3=39, s4=9, s5=9, s6=9, s7=9, s8=9, s9=9, s10=9] (stddev=13.75, mean=18.00, sum=180)

plot stat=leases sample=2
----
 33.00 ┼───────────────────────────────────────────────────────────────────────────────
 31.00 ┤
 29.00 ┤
 27.00 ┤
 25.00 ┤
 23.00 ┤
 21.00 ┤
 19.00 ┤
 17.00 ┤
 15.00 ┤
 13.00 ┤
 11.00 ┤
  9.00 ┤
  7.00 ┤
  5.00 ┤
  3.00 ┼───────────────────────────────────────────────────────────────────────────────
                                             leases
initial store values: [s1=33, s2=3, s3=3, s4=3, s5=3, s6=3, s7=3, s8=3, s9=3, s10=3] (stddev=9.00, mean=6.00, sum=60)
last store values: [s1=33, s2=3, s3=3, s4=3, s5=3, s6=3, s7=3, s8=3, s9=3, s10=3] (stddev=9.00, mean=6.00, sum=60)
