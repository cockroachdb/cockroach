# Initialize a range with three replicas, none of which have send tokens.
init regular_init=0 elastic_init=0
range_id=1 tenant_id=1 local_replica_id=1 next_raft_index=1
  store_id=1 replica_id=1 type=VOTER_FULL state=StateReplicate next=1
  store_id=2 replica_id=2 type=VOTER_FULL state=StateReplicate next=1
  store_id=3 replica_id=3 type=VOTER_FULL state=StateReplicate next=1
----
r1: [(n1,s1):1*,(n2,s2):2,(n3,s3):3]
t1/s1: eval reg=+0 B/+16 MiB ela=+0 B/+8.0 MiB
       send reg=+0 B/+16 MiB ela=+0 B/+8.0 MiB
t1/s2: eval reg=+0 B/+16 MiB ela=+0 B/+8.0 MiB
       send reg=+0 B/+16 MiB ela=+0 B/+8.0 MiB
t1/s3: eval reg=+0 B/+16 MiB ela=+0 B/+8.0 MiB
       send reg=+0 B/+16 MiB ela=+0 B/+8.0 MiB

# Make replica 2 and 3 have positive send tokens.
adjust_tokens send
  store_id=2 pri=HighPri tokens=512KiB
  store_id=3 pri=HighPri tokens=512KiB
----
t1/s1: eval reg=+0 B/+16 MiB ela=+0 B/+8.0 MiB
       send reg=+0 B/+16 MiB ela=+0 B/+8.0 MiB
t1/s2: eval reg=+0 B/+16 MiB ela=+0 B/+8.0 MiB
       send reg=+512 KiB/+16 MiB ela=+512 KiB/+8.0 MiB
t1/s3: eval reg=+0 B/+16 MiB ela=+0 B/+8.0 MiB
       send reg=+512 KiB/+16 MiB ela=+512 KiB/+8.0 MiB

# Append one entry. Replica 1 has no send tokens, but is not allowed to form a
# send-queue since it is the leader.
raft_event pull-mode
range_id=1
  entries
    term=1 index=1 pri=NormalPri size=1MiB
----
t1/s1: eval reg=-1.0 MiB/+16 MiB ela=-1.0 MiB/+8.0 MiB
       send reg=-1.0 MiB/+16 MiB ela=-1.0 MiB/+8.0 MiB
t1/s2: eval reg=-1.0 MiB/+16 MiB ela=-1.0 MiB/+8.0 MiB
       send reg=-512 KiB/+16 MiB ela=-512 KiB/+8.0 MiB
t1/s3: eval reg=-1.0 MiB/+16 MiB ela=-1.0 MiB/+8.0 MiB
       send reg=-512 KiB/+16 MiB ela=-512 KiB/+8.0 MiB

stream_state range_id=1
----
(n1,s1):1: state=replicate closed=false inflight=[1,2) (1.0 MiB) send_queue=[2,2) precise_q_size=+0 B
eval deducted: reg=+1.0 MiB ela=+0 B
eval original in send-q: reg=+0 B ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
++++
(n2,s2):2: state=replicate closed=false inflight=[1,2) (1.0 MiB) send_queue=[2,2) precise_q_size=+0 B
eval deducted: reg=+1.0 MiB ela=+0 B
eval original in send-q: reg=+0 B ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
++++
(n3,s3):3: state=replicate closed=false inflight=[1,2) (1.0 MiB) send_queue=[2,2) precise_q_size=+0 B
eval deducted: reg=+1.0 MiB ela=+0 B
eval original in send-q: reg=+0 B ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
++++
MsgApps sent in pull mode:
 to: 2, lowPri: false entries: [1]
 to: 3, lowPri: false entries: [1]
++++

# Append another entry. One of the follower replicas, replica 3, is not
# permitted to form a send-queue.
raft_event pull-mode
range_id=1
  entries
    term=1 index=2 pri=NormalPri size=1MiB
----
t1/s1: eval reg=-2.0 MiB/+16 MiB ela=-2.0 MiB/+8.0 MiB
       send reg=-2.0 MiB/+16 MiB ela=-2.0 MiB/+8.0 MiB
t1/s2: eval reg=-1.0 MiB/+16 MiB ela=-2.0 MiB/+8.0 MiB
       send reg=-512 KiB/+16 MiB ela=-512 KiB/+8.0 MiB
t1/s3: eval reg=-2.0 MiB/+16 MiB ela=-2.0 MiB/+8.0 MiB
       send reg=-1.5 MiB/+16 MiB ela=-1.5 MiB/+8.0 MiB

stream_state range_id=1
----
(n1,s1):1: state=replicate closed=false inflight=[1,3) (2.0 MiB) send_queue=[3,3) precise_q_size=+0 B
eval deducted: reg=+2.0 MiB ela=+0 B
eval original in send-q: reg=+0 B ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
  term=1 index=2  tokens=1048576
++++
(n2,s2):2: state=replicate closed=false inflight=[1,2) (1.0 MiB) send_queue=[2,3) precise_q_size=+1.0 MiB watching-for-tokens
eval deducted: reg=+1.0 MiB ela=+1.0 MiB
eval original in send-q: reg=+1.0 MiB ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
++++
(n3,s3):3: state=replicate closed=false inflight=[1,3) (2.0 MiB) send_queue=[3,3) precise_q_size=+0 B
eval deducted: reg=+2.0 MiB ela=+0 B
eval original in send-q: reg=+0 B ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
  term=1 index=2  tokens=1048576
++++
MsgApps sent in pull mode:
 to: 3, lowPri: false entries: [2]
++++

# Replica 3 transitions to StateSnapshot.
set_replicas pull-mode
range_id=1 tenant_id=1 local_replica_id=1 next_raft_index=3
  store_id=1 replica_id=1 type=VOTER_FULL state=StateReplicate next=3
  store_id=2 replica_id=2 type=VOTER_FULL state=StateReplicate next=2
  store_id=3 replica_id=3 type=VOTER_FULL state=StateSnapshot next=3
----
r1: [(n1,s1):1*,(n2,s2):2,(n3,s3):3]

# Ignore the regression in the Match value (the starting index in "inflight")
# for replica 1, which is just a test artifact when using set_replicas.
# RangeController does not store or use the Match value.
#
# Replica 2 is told to force-flush.
stream_state range_id=1
----
(n1,s1):1: state=replicate closed=false inflight=[1,3) (2.0 MiB) send_queue=[3,3) precise_q_size=+0 B
eval deducted: reg=+2.0 MiB ela=+0 B
eval original in send-q: reg=+0 B ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
  term=1 index=2  tokens=1048576
++++
(n2,s2):2: state=replicate closed=false inflight=[1,2) (1.0 MiB) send_queue=[2,3) precise_q_size=+1.0 MiB force-flushing
eval deducted: reg=+1.0 MiB ela=+1.0 MiB
eval original in send-q: reg=+1.0 MiB ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
++++
(n3,s3):3: closed
++++
schedule-controller-event-count: 1
scheduled-replicas: 2

# Append another entry. Since there is no quorum without a send-queue, replica
# 3 continues to force-flush.
raft_event pull-mode
range_id=1
  entries
    term=1 index=3 pri=NormalPri size=1MiB
----
t1/s1: eval reg=-3.0 MiB/+16 MiB ela=-3.0 MiB/+8.0 MiB
       send reg=-3.0 MiB/+16 MiB ela=-3.0 MiB/+8.0 MiB
t1/s2: eval reg=-1.0 MiB/+16 MiB ela=-3.0 MiB/+8.0 MiB
       send reg=-512 KiB/+16 MiB ela=-512 KiB/+8.0 MiB
t1/s3: eval reg=+0 B/+16 MiB ela=+0 B/+8.0 MiB
       send reg=+512 KiB/+16 MiB ela=+512 KiB/+8.0 MiB


stream_state range_id=1
----
(n1,s1):1: state=replicate closed=false inflight=[1,4) (3.0 MiB) send_queue=[4,4) precise_q_size=+0 B
eval deducted: reg=+3.0 MiB ela=+0 B
eval original in send-q: reg=+0 B ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
  term=1 index=2  tokens=1048576
  term=1 index=3  tokens=1048576
++++
(n2,s2):2: state=replicate closed=false inflight=[1,2) (1.0 MiB) send_queue=[2,4) precise_q_size=+2.0 MiB force-flushing
eval deducted: reg=+1.0 MiB ela=+2.0 MiB
eval original in send-q: reg=+2.0 MiB ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
++++
(n3,s3):3: closed
++++
schedule-controller-event-count: 1
scheduled-replicas: 2

# Replica 3 returns without a send-queue.
set_replicas pull-mode
range_id=1 tenant_id=1 local_replica_id=1 next_raft_index=4
  store_id=1 replica_id=1 type=VOTER_FULL state=StateReplicate next=4
  store_id=2 replica_id=2 type=VOTER_FULL state=StateReplicate next=2
  store_id=3 replica_id=3 type=VOTER_FULL state=StateReplicate next=4
----
r1: [(n1,s1):1*,(n2,s2):2,(n3,s3):3]

# Replica 2 is told to stop force-flushing.
stream_state range_id=1
----
(n1,s1):1: state=replicate closed=false inflight=[1,4) (3.0 MiB) send_queue=[4,4) precise_q_size=+0 B
eval deducted: reg=+3.0 MiB ela=+0 B
eval original in send-q: reg=+0 B ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
  term=1 index=2  tokens=1048576
  term=1 index=3  tokens=1048576
++++
(n2,s2):2: state=replicate closed=false inflight=[1,2) (1.0 MiB) send_queue=[2,4) precise_q_size=+2.0 MiB watching-for-tokens
eval deducted: reg=+1.0 MiB ela=+2.0 MiB
eval original in send-q: reg=+2.0 MiB ela=+0 B
NormalPri:
  term=1 index=1  tokens=1048576
++++
(n3,s3):3: state=replicate closed=false inflight=[1,4) (3.0 MiB) send_queue=[4,4) precise_q_size=+0 B
eval deducted: reg=+0 B ela=+0 B
eval original in send-q: reg=+0 B ela=+0 B
++++
schedule-controller-event-count: 1
scheduled-replicas: 2
