# This test demonstrates a simple single range interaction with the range
# controller. The replica set does not change. The only interaction is entry
# sending and admitting on receiving stores.
init local_replica_id=1
store_id=1 replica_id=1 type=VOTER_FULL
store_id=2 replica_id=2 type=VOTER_FULL
store_id=3 replica_id=3 type=VOTER_FULL
----
(n1,s1):1: match=0 next=1 admitted=[] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
(n2,s2):2: match=0 next=1 admitted=[] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
(n3,s3):3: match=0 next=1 admitted=[] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)

# Send two entries to the range. The first entry is a regular work class and
# the other an elastic work class. Neither of these should wait for tokens
# before sending, as there are ample tokens available.
send
range_id=1 pri=NormalPri size=1MiB
range_id=1 pri=LowPri size=1MiB
----
(n1,s1):1: match=2 next=3 admitted=[] eval=(reg=+15 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+15 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)
(n2,s2):2: match=2 next=3 admitted=[] eval=(reg=+15 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+15 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)
(n3,s3):3: match=2 next=3 admitted=[] eval=(reg=+15 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+15 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)

# Admit the regular entries on stores 1 and 2, store 3 is not admitted here and
# should have less than full tokens.
admit
store_id=1 to=2 pri=NormalPri
store_id=2 to=2 pri=NormalPri
----
(n1,s1):1: match=2 next=3 admitted=[NormalPri=2] eval=(reg=+16 MiB/+16 MiB ela=+7.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+7.0 MiB/+8.0 MiB)
(n2,s2):2: match=2 next=3 admitted=[NormalPri=2] eval=(reg=+16 MiB/+16 MiB ela=+7.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+7.0 MiB/+8.0 MiB)
(n3,s3):3: match=2 next=3 admitted=[] eval=(reg=+15 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+15 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)

# Admit the elastic entries on all stores.
admit
store_id=1 to=2 pri=LowPri
store_id=2 to=2 pri=LowPri
store_id=3 to=2 pri=LowPri
----
(n1,s1):1: match=2 next=3 admitted=[LowPri=2,NormalPri=2] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
(n2,s2):2: match=2 next=3 admitted=[LowPri=2,NormalPri=2] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
(n3,s3):3: match=2 next=3 admitted=[LowPri=2] eval=(reg=+15 MiB/+16 MiB ela=+7.0 MiB/+8.0 MiB) send=(reg=+15 MiB/+16 MiB ela=+7.0 MiB/+8.0 MiB)

# Send another regular entry, this entry will consume all of the remaining
# tokens available for regular work on s1 and s2;
send
range_id=1 pri=NormalPri size=16MiB
----
(n1,s1):1: match=3 next=4 admitted=[LowPri=2,NormalPri=2] eval=(reg=+0 B/+16 MiB ela=-8.0 MiB/+8.0 MiB) send=(reg=+0 B/+16 MiB ela=-8.0 MiB/+8.0 MiB)
(n2,s2):2: match=3 next=4 admitted=[LowPri=2,NormalPri=2] eval=(reg=+0 B/+16 MiB ela=-8.0 MiB/+8.0 MiB) send=(reg=+0 B/+16 MiB ela=-8.0 MiB/+8.0 MiB)
(n3,s3):3: match=3 next=4 admitted=[LowPri=2] eval=(reg=-1.0 MiB/+16 MiB ela=-9.0 MiB/+8.0 MiB) send=(reg=-1.0 MiB/+16 MiB ela=-9.0 MiB/+8.0 MiB)

# Send another regular entry, this entry will encounter no available tokens and
# should queue on s2 and s3: the match does not increase for s2 or s3.
send
range_id=1 pri=NormalPri size=1MiB
----
(n1,s1):1: match=4 next=5 admitted=[LowPri=2,NormalPri=2] eval=(reg=-1.0 MiB/+16 MiB ela=-9.0 MiB/+8.0 MiB) send=(reg=-1.0 MiB/+16 MiB ela=-9.0 MiB/+8.0 MiB)
(n2,s2):2: match=3 next=4 admitted=[LowPri=2,NormalPri=2] eval=(reg=-1.0 MiB/+16 MiB ela=-9.0 MiB/+8.0 MiB) send=(reg=+0 B/+16 MiB ela=-8.0 MiB/+8.0 MiB) queue=[4,5) size=+1021 KiB pri=NormalPri
(n3,s3):3: match=3 next=4 admitted=[LowPri=2] eval=(reg=-2.0 MiB/+16 MiB ela=-10 MiB/+8.0 MiB) send=(reg=-1.0 MiB/+16 MiB ela=-9.0 MiB/+8.0 MiB) queue=[4,5) size=+1021 KiB pri=NormalPri

admit
store_id=1 to=3 pri=NormalPri
store_id=2 to=3 pri=NormalPri
----
(n1,s1):1: match=4 next=5 admitted=[LowPri=2,NormalPri=3] eval=(reg=+15 MiB/+16 MiB ela=+7.0 MiB/+8.0 MiB) send=(reg=+15 MiB/+16 MiB ela=+7.0 MiB/+8.0 MiB)
(n2,s2):2: match=4 next=5 admitted=[LowPri=2,NormalPri=3] eval=(reg=+15 MiB/+16 MiB ela=+7.0 MiB/+8.0 MiB) send=(reg=+15 MiB/+16 MiB ela=+7.0 MiB/+8.0 MiB)
(n3,s3):3: match=3 next=4 admitted=[LowPri=2] eval=(reg=-2.0 MiB/+16 MiB ela=-10 MiB/+8.0 MiB) send=(reg=-1.0 MiB/+16 MiB ela=-9.0 MiB/+8.0 MiB) queue=[4,5) size=+1021 KiB pri=NormalPri
