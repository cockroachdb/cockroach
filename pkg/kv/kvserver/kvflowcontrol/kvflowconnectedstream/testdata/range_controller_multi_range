# Intialize two ranges, both having the leader on s1.
init 
range_id=1 tenant_id=1 local_replica_id=1
  store_id=1 replica_id=1 type=VOTER_FULL
  store_id=2 replica_id=2 type=VOTER_FULL
  store_id=3 replica_id=3 type=VOTER_FULL
range_id=2 tenant_id=1 local_replica_id=1
  store_id=1 replica_id=1 type=VOTER_FULL
  store_id=2 replica_id=2 type=VOTER_FULL
  store_id=3 replica_id=3 type=VOTER_FULL
----
range_id=1
	(n1,s1):1: match=0 next=1 admitted=[] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n2,s2):2: match=0 next=1 admitted=[] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n3,s3):3: match=0 next=1 admitted=[] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
range_id=2
	(n1,s1):1: match=0 next=1 admitted=[] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n2,s2):2: match=0 next=1 admitted=[] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n3,s3):3: match=0 next=1 admitted=[] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)

# Send 1 entry of size 1MiB for each range.
send
range_id=1 pri=NormalPri size=1MiB
range_id=2 pri=NormalPri size=1MiB
----
range_id=1
	(n1,s1):1: match=1 next=2 admitted=[] eval=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)
	(n2,s2):2: match=1 next=2 admitted=[] eval=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)
	(n3,s3):3: match=1 next=2 admitted=[] eval=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)
range_id=2
	(n1,s1):1: match=1 next=2 admitted=[] eval=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)
	(n2,s2):2: match=1 next=2 admitted=[] eval=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)
	(n3,s3):3: match=1 next=2 admitted=[] eval=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)

# Admit those entries on s1 and s2. s3 will have both entries unadmitted but
# sent.
admit
range_id=1
  store_id=1 to=2 pri=NormalPri
  store_id=2 to=2 pri=NormalPri
range_id=2
  store_id=1 to=2 pri=NormalPri
  store_id=2 to=2 pri=NormalPri
----
range_id=1
	(n1,s1):1: match=1 next=2 admitted=[NormalPri=2,AboveNormalPri=2,HighPri=2] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n2,s2):2: match=1 next=2 admitted=[NormalPri=2,AboveNormalPri=2,HighPri=2] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n3,s3):3: match=1 next=2 admitted=[] eval=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)
range_id=2
	(n1,s1):1: match=1 next=2 admitted=[NormalPri=2,AboveNormalPri=2,HighPri=2] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n2,s2):2: match=1 next=2 admitted=[NormalPri=2,AboveNormalPri=2,HighPri=2] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n3,s3):3: match=1 next=2 admitted=[] eval=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB)

# Add s4 and remove s3 from range 1. The tokens for s1/s3 will be returned
# (1MiB) for range 1.
set_replicas
range_id=1 tenant_id=1 local_replica_id=1
  store_id=1 replica_id=1 type=VOTER_FULL
  store_id=2 replica_id=2 type=VOTER_FULL
  store_id=4 replica_id=4 type=VOTER_FULL
----
range_id=1
	(n1,s1):1: match=1 next=2 admitted=[NormalPri=2,AboveNormalPri=2,HighPri=2] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n2,s2):2: match=1 next=2 admitted=[NormalPri=2,AboveNormalPri=2,HighPri=2] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n4,s4):4: match=1 next=2 admitted=[LowPri=1,NormalPri=1,AboveNormalPri=1,HighPri=1] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
range_id=2
	(n1,s1):1: match=1 next=2 admitted=[NormalPri=2,AboveNormalPri=2,HighPri=2] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n2,s2):2: match=1 next=2 admitted=[NormalPri=2,AboveNormalPri=2,HighPri=2] eval=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB) send=(reg=+16 MiB/+16 MiB ela=+8.0 MiB/+8.0 MiB)
	(n3,s3):3: match=1 next=2 admitted=[] eval=(reg=+14 MiB/+16 MiB ela=+6.0 MiB/+8.0 MiB) send=(reg=+15 MiB/+16 MiB ela=+7.0 MiB/+8.0 MiB)
