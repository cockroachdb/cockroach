set-store
  store-id=1 node-id=1 attrs=purple locality-tiers=region=us-west-1,zone=us-west-1a
  store-id=2 node-id=2 attrs=yellow locality-tiers=region=us-east-1,zone=us-east-1a
----
node-id=1 failure-summary=ok locality-tiers=region=us-west-1,zone=us-west-1a,node=1
  store-id=1 membership=full attrs=purple locality-code=1:2:3:
node-id=2 failure-summary=ok locality-tiers=region=us-east-1,zone=us-east-1a,node=2
  store-id=2 membership=full attrs=yellow locality-code=4:5:6:

store-load-msg
  store-id=1 node-id=1 load=[80,80,80] capacity=[100,100,100] secondary-load=0 load-time=0s
----

get-load-info
----
store-id=1 node-id=1 reported=[cpu:80, write-bandwidth:80, byte-size:80] adjusted=[cpu:80, write-bandwidth:80, byte-size:80] node-reported-cpu=80 node-adjusted-cpu=80 seq=1
store-id=2 node-id=2 reported=[cpu:0, write-bandwidth:0, byte-size:0] adjusted=[cpu:0, write-bandwidth:0, byte-size:0] node-reported-cpu=0 node-adjusted-cpu=0 seq=0

store-leaseholder-msg 
store-id=1
  range-id=1 load=[80,80,80] raft-cpu=20 config=(num_replicas=3 constraints={'+region=us-west-1:1'} voter_constraints={'+region=us-west-1:1'})
    store-id=1 replica-id=1 type=VOTER_FULL leaseholder=true
----

ranges
----
range-id=1 load=[cpu:80, write-bandwidth:80, byte-size:80] raft-cpu=20
  store-id=1 replica-id=1,type=VOTER_FULL,leaseholder=true


get-load-info
----
store-id=1 node-id=1 reported=[cpu:80, write-bandwidth:80, byte-size:80] adjusted=[cpu:80, write-bandwidth:80, byte-size:80] node-reported-cpu=80 node-adjusted-cpu=80 seq=1
  top-k-ranges (local-store-id=1) dim=CPURate: r1
store-id=2 node-id=2 reported=[cpu:0, write-bandwidth:0, byte-size:0] adjusted=[cpu:0, write-bandwidth:0, byte-size:0] node-reported-cpu=0 node-adjusted-cpu=0 seq=0

make-pending-changes range-id=1
  rebalance-replica: remove-store-id=1 add-store-id=2
----
pending(2)
change-id=1 store-id=2 node-id=2 range-id=1 load-delta=[cpu:88, write-bandwidth:88, byte-size:88] start=0s
  prev=(replica-id=none,type=VOTER_FULL,lagging=false)
  next=(replica-id=unknown,type=VOTER_FULL,leaseholder=true)
change-id=2 store-id=1 node-id=1 range-id=1 load-delta=[cpu:-80, write-bandwidth:-80, byte-size:-80] start=0s
  prev=(replica-id=1,type=VOTER_FULL,leaseholder=true,lagging=false)
  next=(replica-id=none,type=VOTER_FULL)

ranges
----
range-id=1 load=[cpu:80, write-bandwidth:80, byte-size:80] raft-cpu=20
  store-id=2 replica-id=unknown,type=VOTER_FULL,leaseholder=true

get-load-info
----
store-id=1 node-id=1 reported=[cpu:80, write-bandwidth:80, byte-size:80] adjusted=[cpu:0, write-bandwidth:0, byte-size:0] node-reported-cpu=80 node-adjusted-cpu=0 seq=2
  top-k-ranges (local-store-id=1) dim=CPURate: r1
store-id=2 node-id=2 reported=[cpu:0, write-bandwidth:0, byte-size:0] adjusted=[cpu:88, write-bandwidth:88, byte-size:88] node-reported-cpu=0 node-adjusted-cpu=88 seq=1

# TODO: this test is confusing since it is sending StoreLeaseholderMsgs from
# s1 and s2 to the same clusterState, but s1 and s2 are not on the same node.
store-leaseholder-msg
store-id=2
  range-id=1 load=[80,80,80] raft-cpu=20 config=(num_replicas=3 constraints={'+region=us-west-1:1'} voter_constraints={'+region=us-west-1:1'})
    store-id=2 replica-id=2 type=VOTER_FULL leaseholder=true
----

get-load-info
----
store-id=1 node-id=1 reported=[cpu:80, write-bandwidth:80, byte-size:80] adjusted=[cpu:0, write-bandwidth:0, byte-size:0] node-reported-cpu=80 node-adjusted-cpu=0 seq=2
  top-k-ranges (local-store-id=1) dim=CPURate: r1
store-id=2 node-id=2 reported=[cpu:0, write-bandwidth:0, byte-size:0] adjusted=[cpu:88, write-bandwidth:88, byte-size:88] node-reported-cpu=0 node-adjusted-cpu=88 seq=1
  top-k-ranges (local-store-id=2) dim=ByteSize: r1

get-pending-changes
----
pending(2)
change-id=1 store-id=2 node-id=2 range-id=1 load-delta=[cpu:88, write-bandwidth:88, byte-size:88] start=0s enacted=0s
  prev=(replica-id=none,type=VOTER_FULL,lagging=false)
  next=(replica-id=unknown,type=VOTER_FULL,leaseholder=true)
change-id=2 store-id=1 node-id=1 range-id=1 load-delta=[cpu:-80, write-bandwidth:-80, byte-size:-80] start=0s enacted=0s
  prev=(replica-id=1,type=VOTER_FULL,leaseholder=true,lagging=false)
  next=(replica-id=none,type=VOTER_FULL)

store-load-msg
  store-id=2 node-id=2 load=[80,80,80] capacity=[100,100,100] secondary-load=1 load-time=15s
----

get-pending-changes
----
pending(1)
change-id=2 store-id=1 node-id=1 range-id=1 load-delta=[cpu:-80, write-bandwidth:-80, byte-size:-80] start=0s enacted=0s
  prev=(replica-id=1,type=VOTER_FULL,leaseholder=true,lagging=false)
  next=(replica-id=none,type=VOTER_FULL)

get-load-info
----
store-id=1 node-id=1 reported=[cpu:80, write-bandwidth:80, byte-size:80] adjusted=[cpu:0, write-bandwidth:0, byte-size:0] node-reported-cpu=80 node-adjusted-cpu=0 seq=2
  top-k-ranges (local-store-id=1) dim=CPURate: r1
store-id=2 node-id=2 reported=[cpu:80, write-bandwidth:80, byte-size:80] adjusted=[cpu:80, write-bandwidth:80, byte-size:80] node-reported-cpu=80 node-adjusted-cpu=80 seq=2
  top-k-ranges (local-store-id=2) dim=ByteSize: r1


store-load-msg
  store-id=1 node-id=1 load=[0,0,0] capacity=[100,100,100] secondary-load=1 load-time=15s
----

get-pending-changes
----
pending(0)

get-load-info
----
store-id=1 node-id=1 reported=[cpu:0, write-bandwidth:0, byte-size:0] adjusted=[cpu:0, write-bandwidth:0, byte-size:0] node-reported-cpu=0 node-adjusted-cpu=0 seq=3
  top-k-ranges (local-store-id=1) dim=CPURate: r1
store-id=2 node-id=2 reported=[cpu:80, write-bandwidth:80, byte-size:80] adjusted=[cpu:80, write-bandwidth:80, byte-size:80] node-reported-cpu=80 node-adjusted-cpu=80 seq=2
  top-k-ranges (local-store-id=2) dim=ByteSize: r1
