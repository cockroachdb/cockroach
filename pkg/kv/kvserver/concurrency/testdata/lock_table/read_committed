new-lock-table maxlocks=10000
----

new-txn txn=txn1 ts=10,1 epoch=0 iso=read-committed
----

new-txn txn=txn2 ts=10,1 epoch=0 iso=read-committed
----

new-txn txn=txn3 ts=10,1 epoch=0 iso=serializable
----

# ------------------------------------------------------------------------------
# Test that non-locking reads from RC transactions do not block on exclusive
# exclusive locks held by other RC/Serializable transactions.
# ------------------------------------------------------------------------------

# Acquire two locks -- one using a serializable transaction and another using a
# RC transaction.

new-request r=req1 txn=txn2 ts=10,1 spans=exclusive@a
----

acquire r=req1 k=a durability=u strength=exclusive
----
num=1
 lock: "a"
  holder: txn: 00000000-0000-0000-0000-000000000002 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]

new-request r=req2 txn=txn3 ts=10,1 spans=exclusive@b
----

acquire r=req1 k=a durability=u strength=exclusive
----
num=1
 lock: "a"
  holder: txn: 00000000-0000-0000-0000-000000000002 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]

acquire r=req2 k=b durability=u strength=exclusive
----
num=2
 lock: "a"
  holder: txn: 00000000-0000-0000-0000-000000000002 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]
 lock: "b"
  holder: txn: 00000000-0000-0000-0000-000000000003 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]

# A non-locking read from a RC transaction should not wait.

new-request r=req3 txn=txn1 ts=10,1 spans=none@a,c
----

scan r=req3
----
start-waiting: false

# ------------------------------------------------------------------------------
# Test that non-locking requests from RC transactions do block on Intents.
# ------------------------------------------------------------------------------

# Again, lay 2 intents -- 1 using a serializable transaction and another using a
# RC transaction.

clear
----
num=0

# Non-locking read from a RC txn.
new-request r=req4 txn=txn1 ts=10,1 spans=none@a
----

# Non-locking read from a RC txn.
new-request r=req5 txn=txn1 ts=10,1 spans=none@b
----

scan r=req4
----
start-waiting: false

scan r=req5
----
start-waiting: false

# Intent from a serializable txn.
add-discovered r=req4 k=a txn=txn2
----
num=1
 lock: "a"
  holder: txn: 00000000-0000-0000-0000-000000000002 epoch: 0, ts: 10.000000000,1, info: repl

# Intent from a RC txn.
add-discovered r=req5 k=b txn=txn3
----
num=2
 lock: "a"
  holder: txn: 00000000-0000-0000-0000-000000000002 epoch: 0, ts: 10.000000000,1, info: repl
 lock: "b"
  holder: txn: 00000000-0000-0000-0000-000000000003 epoch: 0, ts: 10.000000000,1, info: repl

scan r=req4
----
start-waiting: true

guard-state r=req4
----
new: state=waitForDistinguished txn=txn2 key="a" held=true guard-strength=None

scan r=req5
----
start-waiting: true

guard-state r=req5
----
new: state=waitForDistinguished txn=txn3 key="b" held=true guard-strength=None

# ------------------------------------------------------------------------------
# Test that exclusive locks held by RC transactions do not block non-locking
# reads from serializable transactions. RC transactions can tolerate write skew,
# so such blocking is of no use.
# ------------------------------------------------------------------------------

clear
----
num=0

new-request r=req6 txn=txn1 ts=10,1 spans=exclusive@a
----

acquire r=req6 k=a durability=u strength=exclusive
----
num=1
 lock: "a"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]

# Non-locking read from a serializable transaction.
new-request r=req7 txn=txn2 ts=10,1 spans=none@a
----

scan r=req7
----
start-waiting: false
