new-lock-table maxlocks=10000
----

new-txn txn=txn1 ts=10,1 epoch=0
----

new-txn txn=txn2 ts=11,1 epoch=0
----

# req1 will acquire locks for txn1

new-request r=req1 txn=txn1 ts=10,1 spans=intent@c,h
----

scan r=req1
----
start-waiting: false

should-wait r=req1
----
false

acquire r=req1 k=c durability=u
----
num=1
 lock: "c"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]

acquire r=req1 k=g durability=u
----
num=2
 lock: "c"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]
 lock: "g"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]

dequeue r=req1
----
num=2
 lock: "c"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]
 lock: "g"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]

new-request r=req2 txn=txn2 ts=11,1 spans=none@a,d
----

scan r=req2
----
start-waiting: true

should-wait r=req2
----
true

dequeue r=req2
----
num=2
 lock: "c"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]
 lock: "g"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]

new-request r=req3 txn=txn2 ts=11,1 spans=none@a,d+none@f,i
----

scan-opt r=req3
----
start-waiting: false

should-wait r=req3
----
false

print
----
num=2
 lock: "c"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]
 lock: "g"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]

check-opt-no-conflicts r=req3 spans=none@a,c
----
no-conflicts: true

check-opt-no-conflicts r=req3 spans=none@a,d
----
no-conflicts: false

check-opt-no-conflicts r=req3 spans=none@a,c+none@f,g
----
no-conflicts: true

check-opt-no-conflicts r=req3 spans=none@a,c+none@f,h
----
no-conflicts: false

dequeue r=req3
----
num=2
 lock: "c"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]
 lock: "g"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]

# ---------------------------------------------------------------------------------
# Test with a Skip wait policy. Even though the lock table has a conflicting lock,
# it assumes that the request saw and handled this lock during evaluation, so it
# does not trigger a conflict.
# ---------------------------------------------------------------------------------

new-request r=req4 txn=txn2 ts=11,1 spans=none@a,i skip-locked
----

scan-opt r=req4
----
start-waiting: false

should-wait r=req4
----
false

check-opt-no-conflicts r=req4 spans=none@a,i
----
no-conflicts: true

dequeue r=req4
----
num=2
 lock: "c"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]
 lock: "g"
  holder: txn: 00000000-0000-0000-0000-000000000001 epoch: 0, ts: 10.000000000,1, info: unrepl seqs: [0]
