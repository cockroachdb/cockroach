load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "concurrency",
    srcs = [
        "concurrency_control.go",
        "concurrency_manager.go",
        "latch_manager.go",
        "lock_table.go",
        "lock_table_waiter.go",
        "lockstate_interval_btree.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/kv/kvserver/concurrency",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/keys",
        "//pkg/kv",
        "//pkg/kv/kvserver/concurrency/lock",
        "//pkg/kv/kvserver/intentresolver",
        "//pkg/kv/kvserver/kvserverpb",
        "//pkg/kv/kvserver/spanlatch",
        "//pkg/kv/kvserver/spanset",
        "//pkg/kv/kvserver/txnwait",
        "//pkg/roachpb",
        "//pkg/settings",
        "//pkg/settings/cluster",
        "//pkg/storage/enginepb",
        "//pkg/util/hlc",
        "//pkg/util/log",
        "//pkg/util/metric",
        "//pkg/util/stop",
        "//pkg/util/syncutil",
        "//pkg/util/timeutil",
        "//pkg/util/uuid",
        "//vendor/github.com/cockroachdb/errors",
    ],
)

go_test(
    name = "concurrency_test",
    srcs = [
        "concurrency_manager_test.go",
        "datadriven_util_test.go",
        "lock_table_test.go",
        "lock_table_waiter_test.go",
        "lockstate_interval_btree_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":concurrency"],
    deps = [
        "//pkg/keys",
        "//pkg/kv/kvserver/batcheval",
        "//pkg/kv/kvserver/concurrency/lock",
        "//pkg/kv/kvserver/intentresolver",
        "//pkg/kv/kvserver/spanlatch",
        "//pkg/kv/kvserver/spanset",
        "//pkg/kv/kvserver/txnwait",
        "//pkg/roachpb",
        "//pkg/settings/cluster",
        "//pkg/storage/enginepb",
        "//pkg/testutils",
        "//pkg/util/hlc",
        "//pkg/util/leaktest",
        "//pkg/util/log",
        "//pkg/util/stop",
        "//pkg/util/syncutil",
        "//pkg/util/timeutil",
        "//pkg/util/tracing",
        "//pkg/util/uint128",
        "//pkg/util/uuid",
        "//vendor/github.com/cockroachdb/datadriven",
        "//vendor/github.com/cockroachdb/errors",
        "//vendor/github.com/maruel/panicparse/stack",
        "//vendor/github.com/petermattis/goid",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/golang.org/x/exp/rand",
        "//vendor/golang.org/x/sync/errgroup",
    ],
)
