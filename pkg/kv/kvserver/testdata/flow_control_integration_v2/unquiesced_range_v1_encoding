# -- When using v1 encoding (V2EnabledWhenLeaderV1Encoding), all entries which
# -- are subject to admission control are encoded as `raftpb.LowPri`,
# -- regardless of their original priority; to avoid the overhead of
# -- deserializing the raft admission metadata. Therefore, as the underlying
# -- test is shared between the v1 and v2 encoding testdata files, the reader
# -- should interpret any comments referring to regular tokens as referring to
# -- elastic token.
echo
----
----
-- (Issuing 1x1MiB, 3x replicated elastic write that's not admitted.)


-- Flow token metrics from n1 after issuing 1x1MiB elastic 3x replicated write
-- that's not admitted. We see 1*1MiB*3=3MiB deductions of elastic tokens with
-- no corresponding returns.
SELECT name, crdb_internal.humanize_bytes(value::INT8)
    FROM crdb_internal.node_metrics
   WHERE name LIKE '%kvflowcontrol%tokens%'
ORDER BY name ASC;

  kvflowcontrol.tokens.eval.elastic.available   | 21 MiB   
  kvflowcontrol.tokens.eval.elastic.deducted    | 3.0 MiB  
  kvflowcontrol.tokens.eval.elastic.returned    | 0 B      
  kvflowcontrol.tokens.eval.elastic.unaccounted | 0 B      
  kvflowcontrol.tokens.eval.regular.available   | 48 MiB   
  kvflowcontrol.tokens.eval.regular.deducted    | 0 B      
  kvflowcontrol.tokens.eval.regular.returned    | 0 B      
  kvflowcontrol.tokens.eval.regular.unaccounted | 0 B      
  kvflowcontrol.tokens.send.elastic.available   | 21 MiB   
  kvflowcontrol.tokens.send.elastic.deducted    | 3.0 MiB  
  kvflowcontrol.tokens.send.elastic.returned    | 0 B      
  kvflowcontrol.tokens.send.elastic.unaccounted | 0 B      
  kvflowcontrol.tokens.send.regular.available   | 48 MiB   
  kvflowcontrol.tokens.send.regular.deducted    | 0 B      
  kvflowcontrol.tokens.send.regular.returned    | 0 B      
  kvflowcontrol.tokens.send.regular.unaccounted | 0 B      


-- (Wait for range to quiesce.)


-- (Allow below-raft admission to proceed. We've disabled the fallback token
-- dispatch mechanism so no tokens are returned yet -- quiesced ranges don't
-- use the piggy-backed token return mechanism since there's no raft traffic.)


-- Flow token metrics from n1 after work gets admitted but fallback token
-- dispatch mechanism is disabled. Deducted elastic tokens from remote stores
-- are yet to be returned. Tokens for the local store are.
SELECT name, crdb_internal.humanize_bytes(value::INT8)
    FROM crdb_internal.node_metrics
   WHERE name LIKE '%kvflowcontrol%tokens%'
ORDER BY name ASC;

  kvflowcontrol.tokens.eval.elastic.available   | 22 MiB   
  kvflowcontrol.tokens.eval.elastic.deducted    | 3.0 MiB  
  kvflowcontrol.tokens.eval.elastic.returned    | 1.0 MiB  
  kvflowcontrol.tokens.eval.elastic.unaccounted | 0 B      
  kvflowcontrol.tokens.eval.regular.available   | 48 MiB   
  kvflowcontrol.tokens.eval.regular.deducted    | 0 B      
  kvflowcontrol.tokens.eval.regular.returned    | 0 B      
  kvflowcontrol.tokens.eval.regular.unaccounted | 0 B      
  kvflowcontrol.tokens.send.elastic.available   | 22 MiB   
  kvflowcontrol.tokens.send.elastic.deducted    | 3.0 MiB  
  kvflowcontrol.tokens.send.elastic.returned    | 1.0 MiB  
  kvflowcontrol.tokens.send.elastic.unaccounted | 0 B      
  kvflowcontrol.tokens.send.regular.available   | 48 MiB   
  kvflowcontrol.tokens.send.regular.deducted    | 0 B      
  kvflowcontrol.tokens.send.regular.returned    | 0 B      
  kvflowcontrol.tokens.send.regular.unaccounted | 0 B      


-- (Enable the piggyback token dispatch mechanism.)


-- (Unquiesce the range.)


-- Flow token metrics from n1 after work gets admitted and all elastic tokens
-- are returned through the piggyback mechanism.
SELECT name, crdb_internal.humanize_bytes(value::INT8)
    FROM crdb_internal.node_metrics
   WHERE name LIKE '%kvflowcontrol%tokens%'
ORDER BY name ASC;

  kvflowcontrol.tokens.eval.elastic.available   | 24 MiB   
  kvflowcontrol.tokens.eval.elastic.deducted    | 3.0 MiB  
  kvflowcontrol.tokens.eval.elastic.returned    | 3.0 MiB  
  kvflowcontrol.tokens.eval.elastic.unaccounted | 0 B      
  kvflowcontrol.tokens.eval.regular.available   | 48 MiB   
  kvflowcontrol.tokens.eval.regular.deducted    | 0 B      
  kvflowcontrol.tokens.eval.regular.returned    | 0 B      
  kvflowcontrol.tokens.eval.regular.unaccounted | 0 B      
  kvflowcontrol.tokens.send.elastic.available   | 24 MiB   
  kvflowcontrol.tokens.send.elastic.deducted    | 3.0 MiB  
  kvflowcontrol.tokens.send.elastic.returned    | 3.0 MiB  
  kvflowcontrol.tokens.send.elastic.unaccounted | 0 B      
  kvflowcontrol.tokens.send.regular.available   | 48 MiB   
  kvflowcontrol.tokens.send.regular.deducted    | 0 B      
  kvflowcontrol.tokens.send.regular.returned    | 0 B      
  kvflowcontrol.tokens.send.regular.unaccounted | 0 B      
----
----

# vim:ft=sql
