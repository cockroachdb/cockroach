# Sanity-check: put creates an intent, get reads back the value.
new-txn txn=t1
----

put txn=t1 k=a v=bar
----

put txn=t1 k=b v=baz
----

commit txn=t1
----

new-txn txn=t2
----

get txn=t2 k=a lock=Exclusive dur=Unreplicated
----
get: "\xfaa"="bar"

print-in-memory-lock-table
----
num=1
 lock: "\xfaa"
  holder: txn: t2 epoch: 0, iso: Serializable, ts: <stripped>, info: unrepl [(str: Exclusive seq: 0)]

flush-lock-table start=a end=z
----

print-in-memory-lock-table
----
num=0

print-replicated-lock-table start=a end=z
----
key: "\xfaa", str: Exclusive, txn: t2

commit txn=t2
----

# MaxSpanRequestKeys Limit
new-txn txn=t3
----

get txn=t3 k=a lock=Exclusive dur=Unreplicated
----
get: "\xfaa"="bar"

get txn=t3 k=b lock=Exclusive dur=Unreplicated
----
get: "\xfab"="baz"

print-in-memory-lock-table
----
num=2
 lock: "\xfaa"
  holder: txn: t3 epoch: 0, iso: Serializable, ts: <stripped>, info: unrepl [(str: Exclusive seq: 0)]
 lock: "\xfab"
  holder: txn: t3 epoch: 0, iso: Serializable, ts: <stripped>, info: unrepl [(str: Exclusive seq: 0)]

flush-lock-table start=a end=z max-keys=1
----

print-in-memory-lock-table
----
num=1
 lock: "\xfab"
  holder: txn: t3 epoch: 0, iso: Serializable, ts: <stripped>, info: unrepl [(str: Exclusive seq: 0)]

print-replicated-lock-table start=a end=z
----
key: "\xfaa", str: Exclusive, txn: t3

commit txn=t3
----

# TargetBytes Limit
new-txn txn=t4
----

get txn=t4 k=a lock=Exclusive dur=Unreplicated
----
get: "\xfaa"="bar"

get txn=t4 k=b lock=Exclusive dur=Unreplicated
----
get: "\xfab"="baz"

print-in-memory-lock-table
----
num=2
 lock: "\xfaa"
  holder: txn: t4 epoch: 0, iso: Serializable, ts: <stripped>, info: unrepl [(str: Exclusive seq: 0)]
 lock: "\xfab"
  holder: txn: t4 epoch: 0, iso: Serializable, ts: <stripped>, info: unrepl [(str: Exclusive seq: 0)]

flush-lock-table start=a end=z target-bytes=128
----

print-in-memory-lock-table
----
num=1
 lock: "\xfab"
  holder: txn: t4 epoch: 0, iso: Serializable, ts: <stripped>, info: unrepl [(str: Exclusive seq: 0)]

print-replicated-lock-table start=a end=z
----
key: "\xfaa", str: Exclusive, txn: t4

commit txn=t4
----

# MaxSpanRequestKeys ineffective limit
new-txn txn=t5
----

get txn=t5 k=a lock=Exclusive dur=Unreplicated
----
get: "\xfaa"="bar"

get txn=t5 k=b lock=Exclusive dur=Unreplicated
----
get: "\xfab"="baz"

print-in-memory-lock-table
----
num=2
 lock: "\xfaa"
  holder: txn: t5 epoch: 0, iso: Serializable, ts: <stripped>, info: unrepl [(str: Exclusive seq: 0)]
 lock: "\xfab"
  holder: txn: t5 epoch: 0, iso: Serializable, ts: <stripped>, info: unrepl [(str: Exclusive seq: 0)]

flush-lock-table start=a end=z max-keys=8
----

print-in-memory-lock-table
----
num=0

print-replicated-lock-table start=a end=z
----
key: "\xfaa", str: Exclusive, txn: t5
key: "\xfab", str: Exclusive, txn: t5

commit txn=t5
----

# TargetBytes ineffective limit
new-txn txn=t6
----

get txn=t6 k=a lock=Exclusive dur=Unreplicated
----
get: "\xfaa"="bar"

get txn=t6 k=b lock=Exclusive dur=Unreplicated
----
get: "\xfab"="baz"

print-in-memory-lock-table
----
num=2
 lock: "\xfaa"
  holder: txn: t6 epoch: 0, iso: Serializable, ts: <stripped>, info: unrepl [(str: Exclusive seq: 0)]
 lock: "\xfab"
  holder: txn: t6 epoch: 0, iso: Serializable, ts: <stripped>, info: unrepl [(str: Exclusive seq: 0)]

flush-lock-table start=a end=z target-bytes=4096
----

print-in-memory-lock-table
----
num=0

print-replicated-lock-table start=a end=z
----
key: "\xfaa", str: Exclusive, txn: t6
key: "\xfab", str: Exclusive, txn: t6

commit txn=t6
----
