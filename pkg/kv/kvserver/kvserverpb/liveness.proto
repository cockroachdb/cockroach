// Copyright 2016 The Cockroach Authors.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0, included in the file
// licenses/APL.txt.

syntax = "proto3";
package cockroach.kv.kvserver.storagepb;
option go_package = "kvserverpb";

import "util/hlc/legacy_timestamp.proto";
import "gogoproto/gogo.proto";

// Liveness holds information about a node's latest heartbeat and epoch.
//
// NOTE: 20.1 encodes this proto and uses it for CPut operations, so its
// encoding can't change until 21.1. 20.2 has moved away from the bad practice.
// In 21.1 we should replace the LegacyTimestamp field with a regular Timestamp.
message Liveness {
  option (gogoproto.populate) = true;
  option (gogoproto.goproto_stringer) = false;

  int32 node_id = 1 [(gogoproto.customname) = "NodeID",
      (gogoproto.casttype) = "github.com/cockroachdb/cockroach/pkg/roachpb.NodeID"];
  // Epoch is a monotonically-increasing value for node liveness. It
  // may be incremented if the liveness record expires (current time
  // is later than the expiration timestamp).
  int64 epoch = 2;
  // The timestamp at which this liveness record expires. The logical part of
  // this timestamp is zero.
  //
  // Note that the clock max offset is not accounted for in any way when this
  // expiration is set. If a checker wants to be extra-optimistic about another
  // node being alive, it can adjust for the max offset. liveness.IsLive()
  // doesn't do that, however. The expectation is that the expiration duration
  // is large in comparison to the max offset, and that nodes heartbeat their
  // liveness records well in advance of this expiration, so the optimism or
  // pessimism of a checker does not matter very much.
  //
  // TODO(andrei): Change this to a regular Timestamp field in 21.1.
  util.hlc.LegacyTimestamp expiration = 3 [(gogoproto.nullable) = false];
  bool draining = 4;
  bool deprecated_decommissioning = 5;

  CommissionStatus commission_status = 6;
}

// CommissionStatus enumerates the possible "commission" states a node could be
// in.
//
//    +--------------------+                                        +--------------------+
//    |                    |     cockroach node decommission        |                    |
//    |                    |--------------------------------------->|                    |
//    |    Commissioned    |                                        |  Decommissioning   |
//    |                    |<---------------------------------------|                    |
//    |                    |     cockroach node recommission        |                    |
//    +--------------------+                                        +--------------------+
//                                                                             ^
//                                                                             |
//                                                                             |
//                                                                             |
//                                                                             |
//                                                                             v
//                                                                  +--------------------+
//                                                                  |                    |
//                                                                  |                    |
//                                                                  |   Decommissioned   |
//                                                                  |                    |
//                                                                  |                    |
//                                                                  +--------------------+
//
// Note that we've intentionally elided a 'recommissioning' state. To
// recommission a node is to simply cancel an inflight decommissioning process,
// which we do by persisting the appropriate commission status in the liveness
// record. It then makes no sense to bother with persisting an explicit
// in-progress state.
enum CommissionStatus {
  option (gogoproto.goproto_enum_stringer) = false;
  // Unknown is the placeholder default value we use for wire compatibility in
  // mixed version clusters where earlier version nodes don't make use of this
  // commission status enum.
  //
  // TODO(irfansharif): Remove this `UNKNOWN_` state once v20.2 is cut. We only
  // need it as a stopgap when migrating from v20.1.
  UNKNOWN_ = 0;

  // Commissioned represents a node that is neither decommissioning or already
  // fully decommissioned.
  COMMISSIONED_ = 1;
  // Decommissioning represents a node that we've only started decommissioning,
  // but has not yet fully decommissioned. It is safe to recommission it during
  // this time, in order to cancel the inflight decommissioning process.
  DECOMMISSIONING_ = 2;
  // Decommissioned represents a node that has been fully decommissioned. It
  // will no longer be allowed to join the cluster.
  //
  // TODO(irfansharif): We don't disallow the joining as yet.
  DECOMMISSIONED_ = 3;
}

// NodeLivenessStatus describes the status of a node from the perspective of the
// liveness system.
//
// See comment on LivenessStatus() for a description of the states.
enum NodeLivenessStatus {
  UNKNOWN = 0;
  // DEAD indicates the node is considered dead.
  DEAD = 1;
  // UNAVAILABLE indicates that the node is unavailable - it has not updated its
  // liveness record recently enough to be considered live, but has not been
  // unavailable long enough to be considered dead.
  UNAVAILABLE = 2;
  // LIVE indicates a live node.
  LIVE = 3;
  // DECOMMISSIONING indicates a node that is in the decommissioning process.
  DECOMMISSIONING = 4;
  // DECOMMISSIONED indicates a node that has finished the decommissioning
  // process.
  DECOMMISSIONED = 5;
}
