// Code generated by go-bindata.
// sources:
// ../../resource/test_certs/ca.crt
// ../../resource/test_certs/ca.key
// ../../resource/test_certs/node.client.crt
// ../../resource/test_certs/node.client.key
// ../../resource/test_certs/node.server.crt
// ../../resource/test_certs/node.server.key
// ../../resource/test_certs/root.client.crt
// ../../resource/test_certs/root.client.key
// ../../resource/test_certs/testuser.client.crt
// ../../resource/test_certs/testuser.client.key
// DO NOT EDIT!

package securitytest

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _test_certsCaCrt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x94\xcb\xb2\xb2\xb8\x1a\x86\xe7\x5c\xc5\x9e\x53\xbb\x40\x94\xd3\xe0\x1f\x24\x10\x30\x2a\xb0\x02\x81\x25\xce\x00\x15\x39\x23\xc7\xe8\xd5\xf7\xf2\xef\xaa\xee\xaa\xee\xce\x2c\xcf\xe0\xab\xe4\x7b\x9f\x7a\xff\xff\x39\x10\xd9\xd8\xfd\x9f\x81\x7c\x8a\x2d\x6c\x00\x8a\x7e\x53\xce\xc1\xd8\x84\xa5\x61\x80\x9b\x92\x83\x15\x43\x90\x63\x12\x7c\x65\xa9\x7f\x55\x3b\x37\x4b\x5b\xe7\x1a\xd9\xda\xf6\x9c\xca\x26\x70\x61\x5e\x3d\x1f\x55\x61\xeb\xab\x08\x01\x19\x2d\x60\x82\x81\x73\x7c\xbc\x22\x10\x9b\x11\x21\x47\xb4\xd6\x66\x2a\xb9\x43\xd6\xe8\x8f\x58\xca\x99\x45\x01\x85\xb9\x1b\x41\xe0\x50\x13\xb9\x4b\x2c\x4d\xaf\x54\xb2\xca\xc4\x80\x26\xa1\xe0\x66\xad\x22\xe3\x5c\x8a\x5e\x8e\x19\x32\x97\xe2\x97\x43\xad\xe4\x03\xdd\xf2\xc3\xc8\x5f\xcc\x31\x46\x86\x4a\x40\xfe\x1c\xd6\x51\x23\xfc\x7b\x18\x97\x98\x28\x72\xa0\x63\x83\x4d\x88\x00\x73\x1c\x22\xe9\x65\xb2\x3d\x2c\xf1\xb7\xdb\x61\xe4\xc2\x9f\x2f\x42\x5c\xfe\xf3\xf9\xc8\x02\xc0\x33\x00\xd1\xc0\x67\x07\xd0\xc8\x8f\x3f\x17\x04\x24\xe7\x1d\x0d\x58\xbe\x9c\x5c\x35\x31\xdd\xe3\xfb\xa8\x49\xc1\x88\x18\xd4\x0b\x5a\x6a\xca\xb5\x7a\x6d\xe3\x3e\xdc\xfa\xe2\xa6\x41\xe4\x6c\xa4\x6f\x21\x54\x30\x17\x09\x5b\x1e\x4e\xa3\x92\x4f\x3e\x5c\xa3\x33\x7d\x55\xc1\xb5\x4e\x95\x99\x9f\x2f\xf3\x92\x0c\xfc\x49\xb7\x2f\x6f\x16\x0b\xdd\xf2\x8d\xd3\xef\x39\xbd\xe8\x0a\xa6\x8d\xc2\xf6\xe9\x26\x37\xf6\x0c\x71\xf6\xd5\x11\xb2\x70\xda\x63\x4b\x95\xbc\x69\x5f\xe6\x83\xa3\x6f\xef\x53\xaa\xad\x46\xa0\xa7\x0f\xf9\x59\x3c\x5f\x19\x8c\x74\xb1\xdd\x9d\x04\xf5\xc8\x5e\xc6\x75\x8f\xb3\x99\x84\xad\xff\x6e\xc4\x13\xe1\xc6\xa4\xbc\x7b\x5d\x68\x5b\xb7\x54\xd3\xe3\x7d\x72\x5c\x6e\xe2\xce\x74\x6a\x45\x22\xc3\x7a\x78\x23\xd5\xab\x3d\x29\xb0\x55\xef\xd0\xf2\x1b\x6f\xb9\xa9\x67\x9d\x3f\x21\x63\x90\x05\x35\x98\x33\x51\xe2\x5c\x56\x64\x7a\xd9\xaa\xf3\x35\xab\x80\xa5\xb5\x97\x8b\xea\xe8\xe0\xdb\x4f\xd5\x68\xd5\xd3\xda\x7f\x66\xb0\x60\x0d\xbf\x73\xc7\x4e\x38\x7a\x85\xd3\x2b\x85\xc9\x4b\xe3\x46\xae\x47\x8d\x3e\x78\x9b\x7b\x76\x1a\x6d\x8b\x2f\x8c\x8f\xd7\xe5\xf8\xea\x9d\xaf\xba\xa7\xd2\x90\x4e\x8f\xfa\x6b\x65\xd5\xbd\x09\x08\x36\x01\x01\xb0\x7b\xc5\xeb\xc1\x04\xde\x27\xca\x3d\xd1\x20\xb8\x6b\xe8\xc7\x0f\x83\x03\x33\x59\x51\xfe\x23\x92\x2f\x52\x40\xf6\xc2\x8f\x8a\x2b\xcc\x11\x14\x3e\x56\xd2\xff\xb0\xef\x77\x7c\x08\xf4\xca\x51\x39\x9c\xed\x13\x87\x66\xf7\x5e\x35\x4a\x9e\x36\x5e\x1d\x8a\x52\x3d\x2b\xd0\x8c\x3d\x0d\x8d\xcd\x43\x4b\xbc\xe5\xac\x38\xa7\x4a\x3d\x10\xa9\xd8\x25\xf2\x8e\xbd\x4f\xdb\x78\x33\x5b\x5a\x50\x33\x4f\x60\xe2\xd4\xa6\x9c\xbb\xbb\x29\xe1\xc6\x4e\xe8\x7e\xf0\x76\xbd\x66\x1f\xe6\xac\x9a\x3c\xbd\x4f\x52\x3d\x19\xbd\xb2\x64\xfe\xb3\x3f\xc8\x0b\x5e\x59\xae\x88\x48\x5d\x4e\xa3\x96\x01\xa6\x4d\x77\x94\xc9\xfc\xe4\xb5\xdc\x20\xf6\xfc\x7d\xcf\xa2\xe6\xfb\x9d\x6d\x62\x79\xea\x0a\x24\x8d\x59\xcb\x1f\xef\x40\x3d\x8c\xbe\xb0\xb7\x3c\x86\x1c\xc0\xac\xe0\xa0\x24\x45\x2c\x4a\x53\xfd\x6e\x8a\xdb\xa9\x66\x60\xa0\xd1\x63\xe6\x9e\xeb\x6e\x99\x5a\xbe\xdb\xbd\x15\x2c\xba\xd9\xa2\xe2\x4c\xa6\xe7\x47\x2b\x06\x3f\xe9\xd7\xb5\xb0\xa9\x6e\xca\xad\x75\x87\x3d\xee\xea\xb3\x46\xd9\x4c\xce\x4f\xeb\x9c\x2f\xa7\x58\x24\xa0\xbe\x9b\xdc\x0a\xb5\xb5\x0e\x72\xb2\xc5\x19\x3a\x57\xae\x2c\x79\x99\xdc\x5c\xb2\xc8\xa0\x92\xb0\xab\xee\xa3\x95\x90\xe7\x2d\x0f\x79\xb9\xf9\x6a\xec\xea\xe8\x1f\xba\x3e\x20\x7d\x9d\xc3\x43\xd9\xa3\x10\x53\xce\x19\x9d\xf1\x64\xa4\xde\x6b\x4d\xe2\x0d\xf9\xf5\x8b\xfb\x5d\x13\xc8\x35\xff\x5d\x1d\x7f\x04\x00\x00\xff\xff\xb2\xbe\x4a\x84\x57\x04\x00\x00")

func test_certsCaCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaCrt,
		"test_certs/ca.crt",
	)
}

func test_certsCaCrt() (*asset, error) {
	bytes, err := test_certsCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.crt", size: 1111, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certsCaKey = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x95\x35\x0e\xec\x0a\x12\x45\x73\xaf\xe2\xe5\xd6\xa8\xcd\x10\xfc\xc0\xcc\x0c\x6d\x3b\x33\xb4\xa1\xcd\x0c\xab\x9f\x9e\xa7\x09\x7f\xa5\x25\x95\xae\xae\x4e\xe9\xfc\xe7\x7f\xc3\x0a\x92\x62\xfe\x71\x3d\xe6\x8f\xed\x2a\x21\xe3\x0b\x7f\x34\x21\xfe\xbb\x01\x0c\x45\x11\x26\x46\x61\x19\x46\xe3\x18\x47\x60\x10\xe3\x09\x17\x05\x4f\x74\x93\x4c\x79\x53\x7b\x34\x0a\xf1\x56\xe1\x62\xe9\xc6\xff\x52\x44\xd1\xde\x68\x3c\x05\xa8\x0b\xc1\xbd\xe0\x44\x5c\xf6\x00\xaf\x80\x50\xc2\x17\x0a\xb2\xdb\x4a\x54\x9b\xcb\x9e\x61\xe4\xdf\xad\x57\x74\x19\xb1\x83\x7b\xb2\x1f\xe9\x02\xea\xb4\x94\x3c\x57\xfc\x1a\x8f\xb7\x92\xbd\xf7\x2c\xa1\x09\xc5\xef\x89\x4b\xce\xe0\x0a\xe0\xe4\x4b\x90\x0a\xe3\x95\x07\x9b\xac\x88\x24\x62\x6d\xf2\xb7\x5a\x0c\x1a\x2d\xb7\x8c\x3a\x39\x8f\xce\x6a\x7c\x6e\xe6\x3b\x67\x43\x1a\x1a\x30\xfd\x45\x6a\xd7\xcd\x15\xb2\x92\xef\x4e\x30\xb8\x0f\xd0\x43\xba\xb3\xa6\xdf\xd2\x1a\x03\x49\xfc\x64\x14\x1d\xcb\xa9\x76\x7c\x20\x8c\x37\x3a\x02\x71\x96\x53\x7d\x04\xd2\xea\x2c\xc4\x93\x48\x4b\x1d\x40\xd8\x3a\x3e\x64\x44\x83\xba\xc0\x2d\xf8\x8b\xf4\x80\x3d\x87\x10\xf3\x6a\x72\xfa\x3b\x90\x7b\x91\xb7\x8c\x48\x0d\x49\x42\x1a\x34\xf3\x76\x33\x32\x3c\xe9\xac\x73\xe7\x9c\x6d\xae\x1e\xc4\xcc\x75\x7c\x69\x56\x63\x4c\x44\xc3\x83\xc8\x0a\xe3\xdd\x4a\x01\x7e\x0d\x4a\xf3\x48\xf9\x43\x63\x2b\x8a\x56\x1c\xda\x3d\x19\x76\x37\xf9\xc8\x92\x6d\x75\x67\x9f\x57\x5b\xf6\x9e\xa3\xf0\x8c\xc3\xb0\xcc\xf8\x2b\xdb\xe1\x5d\xae\xae\x5d\x5d\x72\xdc\x61\x35\x3c\x60\xe5\xa6\x33\xd9\x1d\x68\xbb\x35\xe4\x1e\x02\x5a\x7e\x68\x97\xb8\x46\xf9\xb1\x0b\x59\xab\x46\xdf\xd1\x5f\x4b\x0b\xd5\xdd\x85\x6b\xdf\x37\xf5\xa5\x84\x6d\xab\xd4\xa1\xbe\x2f\xf1\x52\xb1\x2c\x1c\x81\xb7\x8e\xc4\x75\xa5\x46\xe9\xb3\x4d\x94\xa5\x77\xea\x5e\x0d\x90\xe7\xb7\xfa\x4d\x9c\x73\x7c\xbd\x2e\xd4\x33\xde\x25\x0c\xb1\xfe\x96\x11\x37\xd7\x6f\x6b\xdf\xd7\x28\xfb\xb1\x66\x9b\x1d\xfd\x2c\x00\x6a\x03\xdb\x8f\xc8\x49\xed\x2d\x0f\xf6\xcc\x21\x6d\xed\x1c\xe4\x80\x34\xc2\x6a\x65\xb5\x6f\xbe\x28\xa2\x88\x25\x93\x59\xe9\x6f\xd2\x93\xf8\xe0\xd2\x66\xe5\x51\x67\x36\x40\xb2\x17\xf7\xe4\x4f\x0c\x3c\x25\xb1\xa2\xd7\xdb\xf1\x19\xf0\xfb\xc0\x99\x65\x64\x29\x99\xbd\x6d\x37\x41\xd6\x5a\x06\x89\x00\x59\x64\x6f\x20\x76\x69\x10\x92\x91\x6d\xf1\xc3\xe6\xf4\x8a\xee\xc3\xd5\x4f\x3f\x79\xd5\xf7\x24\xe0\x0b\xc6\x23\x21\xb0\x24\x08\x95\x4c\xd7\x54\x9c\x38\xb6\xcc\x1b\x9a\x16\x82\xc5\x98\xc1\x39\xfa\xa3\x6d\x75\xe4\x33\x4e\x0a\x16\x32\x07\x1c\x5f\xc2\xd5\x01\x83\xd1\xee\xda\xe4\x21\xeb\x74\x02\x94\x78\xcb\xcd\x76\xfe\x35\x2c\xb1\x8c\xb5\xab\x4c\xd2\x0e\xf9\x8d\xee\x10\x4a\xf6\x74\x86\x23\x57\x38\x0a\x04\x7a\xa8\x3b\xab\x2a\xfb\xa7\x32\x94\xe9\xed\x23\x1e\x5d\xde\x2c\x5a\x65\x50\xa8\x02\xb6\x04\x1e\x7d\x27\xe1\x11\x4b\xdc\x51\xad\x79\xc2\x6a\x92\x1a\xde\x56\x4d\x46\xa2\x0d\x0b\x89\xcf\x31\xe4\x3c\x0d\xf5\x5b\x54\x99\xb6\x0b\x53\x21\x7f\x32\x9f\xd4\xb3\xd4\x77\xab\xae\xd7\x56\x02\x99\xf3\x46\x30\x65\xb1\x5e\xfc\x8c\x5b\xd3\x34\x4c\x0f\x3c\x91\x4d\xea\xef\x15\x6d\x48\xe0\x34\x60\x6e\x77\x20\xdf\x3a\x5c\xab\x3a\x0c\x3f\xcf\xb4\x0a\x9f\xf8\xc3\x1e\xf8\xff\x13\x7f\x01\xe9\x76\xc7\xa6\xeb\x2c\x13\xfe\x9d\xc4\x74\xfd\xa9\xd2\xb3\x5e\xf6\xf5\x3d\x16\x81\x21\x16\x17\x7e\x5e\x49\xa2\xa9\xb9\xf0\x54\xfa\x40\x1f\x9b\xd8\x8c\x14\x0c\x1e\x26\x3e\xb3\x2f\x50\x88\x37\x20\x51\x72\x0f\xe4\x0e\x77\x43\xcb\x56\xc2\xd1\x1e\x1f\xa9\x9b\xd0\x41\x1b\xd1\x78\xaa\xad\xf8\xdb\x8c\x1e\x7a\x9b\x22\x98\x0f\x2c\xed\xab\xc3\xec\x05\x36\xfc\x80\x63\xb2\xc5\x17\xaa\x25\xf0\x35\x00\x9e\x31\xa8\x18\x83\xe9\xa1\xc4\xab\x08\xa6\x8a\x58\x62\x68\x25\xc6\xb4\x83\xaf\x3c\xeb\xe8\x57\x2f\x35\xc5\x94\xf0\xee\x2f\x32\xe3\xfb\x61\x28\x50\x93\x79\x89\x72\x50\xca\xd1\xd7\x1a\x8c\x0f\xd0\xf2\xf3\x3c\xce\x6a\x6f\x62\x4c\xd7\xe8\xf8\xd4\xd3\x5e\xe3\xd7\x15\xb5\x35\x09\x41\xdd\x6c\xb7\xb6\x0b\x47\x49\xc1\x36\x8a\x49\x8d\x97\x04\xa7\xd7\xd5\x23\xa1\x15\xc7\xc3\xd3\x8b\x31\x6f\x11\x68\xd1\xf3\xf7\xed\x7c\x6b\x27\x30\xfb\xee\x2b\x89\x33\x84\x47\xde\x04\xf1\x11\x5f\x42\x1f\x87\x68\x26\xe7\x85\x59\x99\xee\x15\x28\xe7\x35\xcf\xee\x66\x42\x7c\x77\xed\x28\x74\x0e\x2d\xa6\x2f\x04\xd0\x83\x39\x5b\x4f\x36\xf6\xdc\x0d\xc7\x79\x18\x5c\x16\xda\x2c\x6a\x2d\x57\xc5\xec\x9e\x8d\x2c\x4a\xa6\x38\x46\xb1\xed\x7c\x50\xd1\x3a\x28\xeb\x71\x22\x05\x9b\x7a\x3a\xa5\x07\x04\xf7\x35\x83\x10\x68\xc6\x8f\x6a\xd2\x52\xc3\x28\xdc\x08\xc3\x32\x4d\xc7\x83\x4f\xde\x5d\x3c\xef\x1c\x62\xec\x47\xce\x15\x68\x8c\x20\x18\x51\x80\x46\xfd\x41\xf2\x3d\x08\xad\x88\x81\xdb\x89\x8b\x42\xb2\x65\xca\x10\xf0\x9b\x29\x44\x1c\xaf\x0a\xf5\xab\x5d\x2a\x91\xf2\x0d\xf3\x68\xbf\x44\xfe\xee\x27\x63\xa9\xf7\x93\x84\xbe\x44\x33\xc6\xaa\xbc\xc0\x65\x2c\xb2\x65\xcf\xd0\xdf\xe2\xca\xf2\x59\x78\x26\x4c\x6b\x3c\xe0\xd9\xa8\x4c\x71\x34\xb6\x72\xf8\x64\x12\xb1\x5d\x60\x09\xce\x05\x3f\x3f\x02\x0f\xa8\x23\xe7\x19\x7f\xf7\x81\xd4\xcd\x18\xec\x84\x95\x5e\xb6\x26\xea\x88\x0c\xb5\x25\xe8\x57\x07\x23\x63\x08\x17\x80\xea\x05\xbe\x80\x96\xfb\x29\x64\x26\xa4\x53\xbe\x11\x09\xe5\x46\x26\x7b\xb7\x8b\x9c\xcd\x47\x6f\xf5\x73\x73\xd5\x60\x43\xda\xed\xa1\x55\xd2\xac\x44\x33\x5d\x53\xce\x15\x5c\xd7\x0a\x8e\x58\x08\xf0\x8f\x7d\x8f\x6c\x08\xfc\x3a\x72\x24\xd0\x2a\xf1\x16\xa9\xfa\x67\x00\x39\x7d\xb4\xa1\x56\xcb\xb4\x94\xf3\xf9\xf1\x84\xcb\xd4\xdd\x97\x13\x95\xc6\x48\x0f\xb4\xc8\xfc\xf3\x0f\xf0\x57\x2b\x82\xc9\xff\xbb\x6e\xfe\x1b\x00\x00\xff\xff\x32\x81\xc6\x2d\x8f\x06\x00\x00")

func test_certsCaKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaKey,
		"test_certs/ca.key",
	)
}

func test_certsCaKey() (*asset, error) {
	bytes, err := test_certsCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.key", size: 1679, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certsNodeClientCrt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x94\x49\xcf\xba\x3a\x1b\xc6\xf7\x7c\x8a\x77\x6f\xde\x88\x28\xfa\xb0\x2c\x2d\x48\x91\x16\xca\x20\xc3\x0e\x19\x65\x10\x15\x94\xe1\xd3\x1f\x9e\xff\x49\xce\x59\x9c\xae\x9a\xab\xc9\xd5\xdc\xf9\xfd\x72\xff\xff\xf7\xc8\xca\x19\xd3\xff\x41\xc5\x76\xb1\x8a\x21\x70\x95\x3f\x29\x47\x30\x86\xdb\x05\x42\x90\x65\x05\x18\xb1\x0c\x0a\xcc\xfc\x5d\xbd\xfd\xf8\x96\x9e\xea\x97\x06\x65\x40\x93\xb4\xe7\x56\x40\x80\xca\x45\xfd\x2a\xeb\xfb\x59\x1a\x79\x19\xb0\x5e\x05\x08\xbc\x39\x62\xe3\x51\x01\x21\xba\x32\x76\x51\xc6\x06\xdd\x04\xfa\x4e\x5a\xa9\x0c\x85\x62\x52\x5d\xe0\xca\x05\xbd\xca\x80\xb8\x48\xa1\xdf\x50\x18\xe6\x9b\xa0\x56\x31\x94\x11\x73\x41\xa6\x8e\xfc\xc4\x51\x57\x99\x09\xf2\x26\xea\xe2\x99\xb8\x7a\xfc\x1b\xd2\xea\x37\x63\xff\x64\x04\x92\x49\xa9\x00\xfb\xbb\xac\x73\xa1\xf7\x6f\x19\x17\xaf\xd5\x04\xf4\x67\xb0\xf3\x14\x30\x11\xe5\xd6\x4a\x75\xe4\xae\x23\x39\x78\x44\x2c\xd4\x2f\x5d\x84\xcb\x6f\x42\x01\x53\x64\x99\x01\x54\x14\x8a\x05\xd0\xfa\xce\x3a\xb8\xde\x65\x0e\x10\xdf\x56\x9d\xce\x28\xcf\x5e\x93\x63\xc1\xd3\xf9\xfa\x3b\xc3\x98\x45\xb1\x21\xab\xcc\xce\xab\x25\xe0\x17\xec\x77\x72\x5e\xf8\x19\xdf\x9c\x70\x72\xfc\xb9\x51\x5b\x9a\x7b\x1e\x4f\xb9\xe7\x71\xe2\xe9\xde\x4e\x3f\x5d\x71\x32\x5f\xcf\x54\x0b\x59\x94\x6f\xf6\x1d\x9f\xbd\xa5\x21\xaf\x8c\xfe\xe3\x7c\xb0\xf3\x76\x6d\xc4\x7a\x0b\x38\xd7\x41\x70\x8b\x61\x10\xe9\xf1\x44\x83\xda\x5e\x3a\xe4\xbc\x38\xc1\x9e\x2d\x53\x88\xcd\x8d\xd4\x48\xc8\x7e\x19\x24\x2a\x93\xed\xd5\x3c\x9b\x51\xe5\x50\xfb\xa1\xe9\xee\x6c\x37\x51\x3a\x83\xe1\x28\xa6\xdf\x3a\xa8\xfa\x9d\x51\x37\x30\x11\xb7\x17\x68\xdd\x2b\x95\xbb\x89\xf1\xc7\xec\x3a\xe8\x58\x2e\x90\x5b\xe3\x3c\xe0\xbb\x79\x04\x07\x65\x46\xed\x4e\xc1\x86\xa8\x99\x74\xd9\x92\x5a\x94\x0f\x81\x9a\x7f\xa6\xbd\x2e\x5e\x90\x9b\x99\xed\x5e\x4b\x1f\x95\x7a\x45\x5c\x20\x6f\xa0\x6d\xa0\x78\xc7\x12\xd3\x3d\x26\x91\x5f\x90\x54\x74\xcb\x5b\xf9\x4d\xdb\x44\x6d\xdf\xc5\xb3\x7d\x03\x98\x0e\x9b\xc3\xc9\xec\x22\x24\xc6\x19\xc0\xc2\x02\xaa\x6e\x22\x6f\xed\xe2\x36\x5c\x66\xd7\xc1\x26\xaa\x92\x38\x7b\xe8\x64\xda\x3c\x7a\x2a\xd2\x2f\x24\x10\xac\x76\x80\x98\x3c\x08\xf4\x46\x54\xac\x9e\xd8\xbc\x05\x98\xb6\x5d\x0d\x42\xa0\x58\xbf\x91\xc9\x2f\xb9\x94\xd3\x19\x23\x04\x74\x67\x08\x57\x94\xcc\x53\xe5\x71\xa5\x0e\xf8\x33\x74\x5e\x67\x07\xdf\xf6\x68\xc5\x07\x47\x0f\x80\xc3\x6a\x29\x83\x23\xbf\x39\xdd\xeb\xe7\x33\x54\x4a\x5d\x51\x87\x8f\xcc\x3d\x92\xbd\x67\x1e\x22\x09\x47\x52\x48\x70\x77\x34\x3a\xea\x3a\xc4\xd2\x73\x4b\xf8\x29\x50\x77\x55\xc6\x72\xe9\x0f\xde\xcf\x65\x11\x3a\x5e\x3e\xe2\xbc\x00\x53\xf8\xf4\xcc\xa7\xc9\x37\xf3\xe1\xf3\xe2\x58\x4a\xb7\x60\x47\x5f\x34\x71\x52\xb6\x4c\x7c\x6e\x7a\x63\x34\xdc\xed\xeb\xe8\xd5\x31\xf1\xf9\x60\x94\x59\xed\x6f\x9a\x2d\x7e\xe7\xb7\xa8\xcf\xfa\x80\x3f\x91\x32\xbb\xfa\xed\x17\xc3\xf8\x75\xe5\x42\x33\xf3\x88\xfa\x19\xfd\x44\xa3\xd7\xc4\xbc\x07\xd2\x17\x04\xf3\x1c\x0d\x5f\xbf\xbd\xef\x58\xe5\x3a\xd6\x92\x18\xb5\x7e\x36\x5e\xf3\xf6\xe9\xc5\x4e\xa0\x6f\xe2\x23\x5d\x16\x07\xa9\xf4\x3d\x27\x9c\x72\x49\x1f\x34\xe0\xb3\x24\xc2\x82\x7e\x4a\x0c\xb7\x6d\x1e\x15\x10\x4c\x51\x0d\xe5\x59\x15\xf9\x2a\xd4\xe0\xac\x91\x27\x08\xf5\xf0\x78\x33\x33\xa1\x2b\x5e\x71\xb5\x95\x3e\xfd\x5e\x68\xd2\xa1\xe4\x2c\x79\x37\x22\x61\x4c\x1e\x63\x27\x84\xda\x8e\x66\x70\xf7\x53\x7a\xe4\x79\xd1\x72\x27\x13\xfd\xfd\x26\xb3\xc4\x73\xed\x79\xbb\xec\x6b\x1e\x70\x8e\x2d\xd0\xb3\x43\x0c\x01\x60\x4e\x92\x38\x12\xcf\xed\x26\xbc\xe1\xfe\xac\x06\x85\xa2\xff\xae\x8b\xbf\x02\x00\x00\xff\xff\xbc\x80\x70\xd9\x4b\x04\x00\x00")

func test_certsNodeClientCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeClientCrt,
		"test_certs/node.client.crt",
	)
}

func test_certsNodeClientCrt() (*asset, error) {
	bytes, err := test_certsNodeClientCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.client.crt", size: 1099, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certsNodeClientKey = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xd5\xb7\xd2\x83\xd8\xb2\x05\xe0\x9c\xa7\x98\x5c\x75\x0b\xef\x42\x36\x66\x0b\x10\x4e\x18\x01\x19\x20\xbc\xf7\x88\xa7\xbf\xff\x4c\x7c\x3a\xec\x4e\xbe\x5a\x41\xaf\xff\xfb\x77\x80\x0c\x55\xf3\x9f\xb7\x2b\xfc\x63\xbf\xd5\x40\xf0\xe4\x7f\x74\x39\xfa\xef\x82\x18\xaa\x2a\x8f\xa7\x0a\x04\x41\x17\x05\x47\x16\xae\x58\x0e\xf4\x72\x97\x63\x37\xe0\x9a\xd8\x19\x5c\x17\x55\xb5\x09\x74\xe3\x2a\x07\x40\x79\xd8\x66\xe1\x19\x55\x52\x2a\x0f\x10\xb3\x6e\xb8\x56\xc8\xbd\x5c\x2b\xfe\x24\xf5\xdb\x69\x14\xfe\xed\x0d\xbb\x9e\x3e\x7f\xb5\xb4\x32\x73\x87\x7d\x2b\xd0\xa1\x6c\xde\xbc\x99\x83\xc0\x1f\xc6\xfe\xa3\x75\xaa\xd2\x37\x53\x36\xc5\x93\x03\xda\x87\x8c\x2d\x11\x21\xc8\x96\x5c\x56\x3c\x7f\x3f\xad\xd2\xd4\x97\xf8\xa9\x72\x6c\x3c\xb2\x2c\x11\x62\x26\x1c\xd7\xab\x57\x6e\xde\xa7\x22\xba\x37\x55\x1c\x66\x59\x67\x6b\x30\xe8\x48\x55\x24\x97\x8e\x78\xbc\x73\x0b\xb9\xfd\xdd\xf5\xb5\x7b\xe0\x46\xf5\xa1\x1b\xc1\xd1\xcd\x14\x53\x97\x9a\xca\x1b\x02\x8c\xd6\x04\xab\x55\x76\x94\x4a\x4f\xb5\x52\xdf\x29\x8f\x36\xa3\x48\x9b\xfb\x79\xed\xb3\xca\x82\x07\xfb\xcc\x06\xa4\x1d\x4d\x93\x62\xd2\xec\x4b\xe4\x46\xe0\x9b\xd9\x93\xd2\xe4\xd5\x5c\x02\x70\xd2\xf6\x74\x75\x89\x70\x91\x9d\xa5\xec\x90\x27\xe2\xf3\x93\xec\x62\x9f\xac\x82\x46\x90\x6c\xb3\x32\x55\x6b\x77\x13\x42\x09\x4d\x6a\x88\x56\x23\xff\xd6\x6c\xb2\x02\x1a\xbe\x8b\x3f\xee\x35\x31\x59\x7b\x3f\x99\xfc\x24\x5b\x82\x53\x4f\x55\x12\x1c\x01\x08\xe3\x5f\xd8\x52\x6c\x5a\xb7\x84\x59\x04\xa3\xb4\xe2\xb7\x43\x7e\xf5\xf4\x28\xb4\x42\xa6\x87\x19\x66\x01\xde\x7c\x86\x6b\x93\x3e\xe4\x4b\xce\xa5\x23\xb6\x15\x2e\x21\xf1\x56\xdd\xa0\x70\x25\x21\x69\x2b\xfd\x15\xb7\xa6\x92\xa0\xda\x56\x28\x22\xfa\xd6\x2b\x17\xd9\xa8\x58\xec\xaa\xce\xe3\x13\xeb\xc1\x68\x1e\x28\x0a\xf4\x2d\x86\x3f\x6b\x61\x0c\xae\xfb\x11\xe6\xb4\x49\xbd\x84\xdf\xa4\x4b\xcc\x8b\xec\xba\xea\x66\x85\xf4\x24\xdf\xac\xf4\xb5\xc7\x08\xcc\x2d\xd2\x87\xa7\xef\x1e\xb5\x27\xef\x8f\x46\xba\xf9\x67\xdb\x3c\xe4\x56\x8e\x4e\xe6\x34\xa0\x0a\x59\x3b\x4d\x0e\x0c\x3b\x5a\xd9\xd3\x5f\x2f\x7e\xb3\x3f\xc6\x3c\x6c\x4f\xbb\xc2\x9f\xb6\x47\xb3\xef\x58\x47\xda\x10\x25\x7a\xbf\xfd\x58\xb7\xbe\x80\xf9\xf4\x6a\x1c\x88\x23\x7b\xc9\x83\xdc\x44\x95\x4c\x94\x4d\x6e\x8b\x38\xc7\x57\x79\x76\x64\xcd\x40\x2f\xcd\x06\xc6\xc6\x47\x19\x6e\x3e\x88\xfa\x2a\x68\x04\x42\xed\xa5\x09\xb6\x9b\x7e\xb3\xfc\xdb\xbc\xcd\xcf\x17\xdb\x2f\x3b\x9b\x32\x07\xcd\xd2\xd3\x85\xeb\x11\x52\x25\x9f\xd5\xb9\x95\x88\x2e\x30\x0e\x88\x0d\x7b\xf9\xd2\x38\xef\xc2\x8a\xa9\xa3\x66\x04\x55\x39\xf3\xb4\x65\xb1\x8c\x64\x01\x85\x91\x4f\x7f\x21\xd7\xb2\xc7\xac\xcd\xd9\x59\x14\x3f\x97\xe3\xdd\xee\x48\x24\x5d\x52\x99\x41\x4d\xe4\x85\x29\x0c\xb9\x48\x87\xb1\x0e\xef\x6d\x96\xa3\x11\x71\x26\x09\xf3\x3e\xe8\x4d\xf9\xb8\xf9\xda\x47\xbc\x50\x22\x6c\x1c\x23\x66\x15\xda\x33\x44\xad\xb8\x09\x5d\x70\xbf\xb8\x28\x73\xbe\x8c\x52\x0f\x3e\xef\x00\xbe\x7e\x60\xd6\x4b\x1a\x58\xfc\xc1\xf8\x08\x59\x02\xc6\x40\xc9\xdf\xf7\xd7\xd9\xd2\x1e\xeb\xc5\xd5\xad\xe2\xae\xf2\xf3\x70\x52\x77\x16\xb9\xf4\xc9\xf6\xad\x5d\x1c\xd4\x48\xb9\x40\x76\xd0\x2b\xaa\x99\x3a\x5d\xff\x13\xff\xa0\x4e\x21\x9f\x3e\x22\x02\x1c\x7f\x9c\x75\x33\x04\x0d\xee\x16\x87\x68\x06\x00\x0f\x52\xca\x8d\xc1\x95\x26\x41\xa9\x7f\x52\xe2\x4d\x4f\xca\x4c\x74\x3b\xaa\x48\xee\xa7\x22\x3f\xcf\xc3\xda\x0f\xb0\x92\x7a\x87\x34\x0b\x54\x81\xcf\x4d\xbc\x2b\x4a\x25\x6f\x53\x1a\x75\xdb\xb9\x74\xd2\xec\x4c\x59\x91\x68\xe2\xb5\x09\xab\xcf\x80\x99\xee\x8c\x7a\x7e\x9c\x26\x5f\xba\x96\x8a\x79\x7a\xd9\xb0\x4e\x1a\x35\x8b\x91\xe3\x0b\x12\xb6\x34\x9a\x4e\x31\x7c\x6e\xb3\xd0\x4d\x69\xde\x00\x9b\x25\x4a\x6f\xe8\x31\x76\xbe\x4f\x35\xb8\xc3\x57\xfb\x47\x06\x65\x6f\xb4\xe2\xfa\x70\x5d\x3b\x4f\xf9\x04\xac\x1c\xfa\xe4\x63\x24\xee\x32\x27\x2c\x57\x02\x5c\x73\x4a\xb4\xd8\x6e\x75\xe4\x6b\x86\x98\x70\xc6\xdd\xcb\xa6\x19\x99\xf9\x5b\x96\xdf\xbf\x50\x2b\xff\xef\x09\x79\x33\xf6\xdb\x4c\x4c\xfe\x80\x23\xd7\xed\x6d\x50\x32\x04\x3e\xee\x38\x89\x14\xd2\x78\xf1\x39\x05\x1e\xf3\x62\x7c\x0b\x02\x94\xb0\x74\xf5\xd7\xc0\x0e\xca\xe5\x79\x28\x6e\x73\x2a\x8b\x5e\x29\x19\x9a\xe0\x1b\xf2\x96\x7a\x9e\xf3\xf5\x71\x1c\xc9\x16\x5f\x88\x9c\xb2\xd1\x47\xdf\xd7\x94\xc8\xaa\x7b\xf7\x81\xb5\x78\xf4\xe4\xe8\xa0\x74\x44\xf1\x2a\xa6\x8d\xd7\xe6\xdd\x0c\x1d\xeb\xd9\xe6\x8b\xdd\x87\xb5\x59\xa4\x1d\x21\xa6\x77\xdf\x5b\x2f\x74\x3b\x75\xa4\x4f\x21\xd9\xe8\x4d\x0e\x79\xbc\x4a\x19\x8f\xfc\x45\xca\xed\x9e\xe2\xe0\xf8\xf5\x1e\xa7\xfd\x2c\x88\x14\x41\x18\x58\x28\x75\xab\x42\x51\x61\xb7\xa7\x84\xec\x4a\xfd\xa3\xd1\xfc\xb7\x66\x1a\x0a\xb2\x06\x9d\x05\x66\xed\x04\x91\x71\xb5\x85\x65\xa6\x41\xeb\x55\xfb\x0e\xaf\x23\xe8\x3a\x8d\x20\x80\x4a\xde\x70\x0b\xbc\xd4\xc7\xfc\x4e\x04\xb9\x20\x8b\x89\x41\xf9\x6f\xef\x08\x66\x94\x06\x23\xa2\xcc\xb9\xc1\xfd\x4b\x06\x17\x3f\x95\xc7\xa8\xef\xd0\x00\xf5\x52\x8a\x16\x55\xd3\x29\x19\xdd\x50\x59\x4f\x78\x02\x2d\x7e\xe1\x72\x20\xad\xb1\x31\x5c\x1d\x06\x6d\xf3\xde\xfa\x82\x6c\x1b\x44\x62\x9b\x08\x8a\x16\x1c\x9e\xf5\x5d\x44\xd5\x42\xe9\x6f\x37\x60\xda\xc6\xdc\x1f\x84\x53\x87\x00\x90\x64\x99\x78\x95\x3b\x27\x13\x9e\x0b\xcc\x42\x8d\x3e\x99\x69\x7a\x34\xab\x1e\xca\xae\xc2\x07\xb9\x36\x63\x13\x40\x7b\xfa\x02\xc6\xe6\x03\x1e\x64\x23\xe9\xce\x4d\x82\x8a\xba\x10\xa8\x33\x07\x0e\x40\x47\xed\x77\xa0\x6c\xd2\x5b\xc7\xbe\x87\xde\xe2\x64\xc8\x7f\x95\x22\x9b\xd2\xff\xae\x9a\xff\x0f\x00\x00\xff\xff\xcc\x93\xa9\xe1\x8b\x06\x00\x00")

func test_certsNodeClientKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeClientKey,
		"test_certs/node.client.key",
	)
}

func test_certsNodeClientKey() (*asset, error) {
	bytes, err := test_certsNodeClientKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.client.key", size: 1675, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certsNodeServerCrt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x97\x4b\x77\xb2\xbc\x16\xc7\xe7\xf9\x14\x67\xee\x3a\x4b\x6e\x22\x0c\xce\x20\x90\x70\x11\x49\xca\x4d\xc5\x99\xa8\x80\x5c\xbc\x17\x84\x4f\x7f\x78\xda\xbe\x6f\xdb\x87\x74\x52\xd7\xdf\xec\xc8\x6f\xb3\x7f\x2b\xf0\xdf\x3f\x7f\x1a\x36\x6d\xf2\x1f\x1d\xfb\xa1\x6d\xd8\x3a\x0c\xf1\x47\x0a\x5c\xdb\xb6\x27\x48\xd7\xb5\x89\x9e\xc1\xd6\xd6\x60\x66\xfb\xd0\x39\x5f\x17\xfa\xae\xee\x6e\xa9\x38\x31\x3b\x5d\x5f\x5c\xe7\xdd\xb3\x6c\x91\x17\x2f\x9c\xcb\xd6\xce\x9b\x3d\x81\x1e\x5e\x6a\x1e\x6c\x81\xd3\xe3\xc0\xd5\xa0\x09\xf9\x08\xeb\xb9\xbb\xf0\x04\xb5\xd8\x89\x8b\x26\x5e\x93\x8b\xeb\x47\x2d\x6e\x63\xb4\xf2\x3c\x84\xdb\x17\x4a\x04\x72\xdf\xd7\x6a\x1e\x0b\x59\xe6\x71\xb8\xb5\xf2\x3d\x01\x6e\x18\xbd\xdc\x02\xf2\xc3\xff\xce\x2d\x70\xb7\x1e\x42\x37\x8c\xff\x64\xdc\xbf\x59\x01\x0b\xd7\xb7\x5b\x0c\x3f\x36\x73\x70\x5b\xfd\xbb\x19\x18\x76\x7b\xa1\x10\x2e\xb5\x8c\xac\x34\xe8\x86\x9a\x39\x6b\xb6\x66\xd4\x66\x19\x3e\xb9\x90\x33\xf5\xe0\x66\x06\x76\x22\x22\x0f\x6b\xd0\x8b\x20\x94\x6c\x0d\xb5\xf0\xcf\xf7\x0e\xbc\xd8\x1a\x80\x9e\xbe\xcd\x8b\x59\xc8\xaf\xe4\x09\xad\x5e\x5c\xfe\x0a\xfb\xad\x5c\x07\xba\xb0\xb3\x72\xce\xdf\xa5\x59\xed\x5c\x51\x32\x51\xba\x86\x36\x45\xa8\x88\xe2\xf1\xb6\x0e\x15\x0e\x6f\x88\xeb\xf1\x52\x04\x3a\x79\x26\x46\x4f\x15\x71\xf7\x83\x52\x1b\x86\x37\xcf\x9e\x34\x87\x25\x8e\xe8\xf0\x13\x7d\xc1\x95\x1b\xf7\x98\x61\x69\x5e\xa5\x6d\xeb\xdf\xa6\x8f\xfb\x52\x72\x0e\x27\x7e\xa5\xa6\xd9\x71\xb8\x00\x01\x08\xe2\xd5\x3f\xcf\xac\xa6\x11\xce\x96\x97\x9f\xde\xa9\xe5\x0b\xd3\x22\x5b\x4c\x8f\x6f\xcf\xb7\x7c\x1e\x48\xcd\x29\x4d\x4e\x37\x7e\x82\xb6\x45\x0f\xef\xa2\xeb\x13\x7e\x1f\xd8\xc2\x2d\x46\xbb\x8d\xb5\x52\xc0\xb1\x73\x16\xea\x6e\x8b\xd4\xd8\xe6\x25\xb5\x5f\x8a\x61\x99\x6f\x2a\x3a\x7f\x4c\x84\xa5\x3e\x7b\x4d\xc4\x9b\xe7\xaf\xa4\xf5\x5e\x3a\xf8\x0f\x6e\x5a\xe9\xc6\x5d\x9f\x3f\x9d\xc8\xdc\x65\x82\x4a\xf5\x40\x06\x79\xd1\x5e\xf9\xa4\x17\x0b\xfc\x7e\x3e\xf4\xe5\xe9\xde\xd5\xc6\xf2\xb9\x0f\x4e\x89\x16\x2a\x4d\x1a\x84\x42\x23\x3c\x7b\x58\x4f\xdf\xa4\x47\x6f\x9b\xe2\x5d\x93\x2f\x8f\x32\x51\x02\xfb\xe5\xb9\x54\x52\x40\xfe\x56\x5f\xca\xcd\x6e\xd6\x20\xca\x21\xfe\x74\x56\xb1\x51\xf6\xc9\xec\x0a\xb3\x61\x3a\xa0\x59\x64\x59\x7c\x18\x86\xcd\x34\x43\x48\xff\xdc\x29\xcb\x53\x34\x98\x2a\xc3\x2d\x71\x75\x6d\x37\x0c\xd2\xc7\xa0\xf8\x5c\xa5\xc1\xb6\xd5\xb3\xd8\x76\xda\x58\xd3\xbc\xc8\x82\xc3\x08\x65\xd9\xa6\xfd\x28\xf2\x31\x1e\x3e\x9f\x87\x8d\x0c\x49\xb2\x17\x89\xa9\x16\xf1\xfa\x75\x49\x44\xc2\x81\x2c\x7b\x75\x89\x60\x14\x3b\x04\xdf\x3f\xbf\xe8\x74\x64\x7d\x4d\x62\x30\x7b\x0c\x03\x93\x27\xb6\xed\x7e\x4d\x60\xb7\xac\x5f\x4d\x2c\x18\x8f\x7f\xea\xc0\x0e\xb9\xa3\x42\xa2\x8f\x0a\xf9\xbf\x0b\x77\x28\xfe\xa8\x03\xbf\x0a\xbb\x51\xa1\x34\x2e\x2c\xbf\x7f\x70\xb3\x68\xc0\xc7\xa5\x86\xf0\x57\xf8\x99\x61\x46\x66\x8f\xb2\x41\x26\x97\xb1\xd0\x63\x64\x11\x23\x8b\xdf\xc1\x38\xdc\x33\x16\x66\x8c\xac\xfc\xd1\x83\x7f\xc2\x82\x81\x52\x30\x50\x8a\x6f\x14\xf0\x1d\x32\x50\x0a\x06\x4a\x11\x31\x9a\x58\xc4\x8c\x85\x0c\x94\x62\x8c\x02\xdc\xa2\x1c\x2f\xec\x19\x28\x3d\x03\xa5\xb7\x19\x4d\xec\x19\x28\x3d\x03\xa5\x8f\x18\x4d\xec\x19\x28\x3d\x03\xa5\xcf\x18\x4d\xec\xc7\x28\x04\x8d\x51\x08\xc2\xe3\x26\x12\x34\x9e\x30\x82\xc6\x28\x04\x8d\x51\x00\x41\xe3\x09\x23\x68\x8c\x42\xd0\x18\x85\xa0\x6c\xdc\x44\x82\x18\x28\x0c\x57\xc8\x97\x2b\xe0\x77\xc8\x40\x61\xb8\x42\x7e\xb8\x02\xbe\x43\x06\x4a\xc8\x40\xf9\xcb\x95\xcf\x26\x32\x64\x21\x21\x03\x85\xe1\x0a\x20\x0c\x59\x48\xc1\x40\x61\xb8\x42\x06\x57\xc6\x4d\x2c\x18\x28\x0c\x57\xc8\x97\x2b\xbf\x9b\xc8\x90\x85\x30\x5c\x21\x3f\x5c\xf9\x6e\x22\x43\x16\xd2\x33\x50\xfe\x72\xe5\xb3\x89\x0c\x59\x48\xcf\x40\x61\xb8\x02\x08\x43\x16\xd2\x33\x50\x18\xae\xd0\xc1\x95\x51\x13\x29\x1a\xa3\x50\x86\x2b\xf4\xcb\x15\xf0\x3b\x1c\xa3\x50\x86\x2b\xf4\x87\x2b\xe0\x3b\x1c\xa3\x50\x34\x46\xa1\xac\x83\x85\x32\x64\xa1\x8c\x83\x85\xb2\x0e\x16\xca\x90\x85\x32\x0e\x16\xca\x70\x85\xb2\x0e\x16\xca\x38\x58\x28\xc3\x15\xfa\xe3\x60\xb1\x34\x4b\x81\x10\x62\xd6\x93\x28\x1a\x1e\xe7\x34\x68\xcc\x55\x2c\xa6\x75\x7b\x59\x60\xd3\xab\xa5\xd5\x4a\x7e\xf8\x77\x78\x33\x53\xab\x01\xa2\x5f\x79\xe8\x6d\x8e\xfb\x08\xbe\x36\xb1\xea\x3e\xb1\x2d\x3e\x22\x2f\x99\xa4\xa7\x47\x11\x77\x52\xb0\x31\x1e\xd1\x82\x6b\xa9\x77\xf3\x9d\x28\xea\xaa\x14\x1d\xf4\x9b\xcb\x2f\xd3\xc9\x35\x39\x97\x2e\xe0\xe7\x62\x9d\xfa\x4f\x19\xca\xb7\x79\xba\xe1\x90\x7b\x58\xfa\xdb\xd5\xc6\x5e\xf3\xcf\x64\x2a\x63\xc2\x6b\x6a\xbd\x5e\xf7\x86\xe8\x3a\x7a\x50\x6d\xda\x38\x86\xf1\x72\x1b\xae\x8e\xc6\xfd\x19\x3e\xc5\x06\xcc\x22\x79\x96\x95\x4b\xd9\x7e\x4c\x9d\xee\x50\x5d\x4f\xca\x6c\xd9\xf5\x72\xae\x2e\xaa\xe3\xe5\xed\x66\x3e\x39\x7a\x86\x52\xa4\x5a\x95\xe0\x49\x86\xaf\x4e\xad\xfd\x32\x69\x74\xee\xae\xec\xd7\x65\xe5\x62\x00\x63\x98\x84\xef\x62\x5d\x4b\xa2\x33\x3f\x91\x13\xc5\x61\x90\xa2\x8d\x2f\xcb\x86\x9f\xde\x1e\xe9\x7b\x6f\x0d\x0f\x75\x8a\xb8\xa8\xaf\xb0\xca\xad\xc4\x3b\x7a\x47\xa9\x74\x93\x55\x75\x8c\x0a\x67\xe9\x80\x5b\xb7\x3f\x8b\x89\x9e\x65\xc7\xd5\xda\xd2\x76\x51\xb0\x56\x83\x17\x56\x30\xf4\x9b\xec\x32\xad\x0f\xb9\x5c\x3d\xe6\x7a\x49\xce\xf3\x53\xc3\xef\xf4\xfd\xde\xf4\xca\x38\x78\xa9\xa6\x29\xfd\x0f\x7c\xbc\x31\x60\x82\xc6\x6f\x11\xff\x0f\x00\x00\xff\xff\x78\x07\x21\xc3\x62\x0c\x00\x00")

func test_certsNodeServerCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeServerCrt,
		"test_certs/node.server.crt",
	)
}

func test_certsNodeServerCrt() (*asset, error) {
	bytes, err := test_certsNodeServerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.server.crt", size: 3170, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certsNodeServerKey = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x95\xb7\xd2\xa3\x48\x14\x85\x73\x9e\x62\x72\x6a\x0b\xef\x42\xbc\x6f\x3c\x02\x32\x84\x17\x08\x2f\x10\x3c\xfd\xfe\x33\xb3\xe1\x76\xd6\x75\x93\xef\x7e\x75\x6e\x9d\x7f\x7e\x3f\x41\x56\x75\xf0\xcb\x0f\xf8\x5f\xae\xaf\xc7\x7c\x28\xff\x32\xe5\xf4\xcf\x04\xb2\x75\x5d\x9e\x1b\x5d\xe0\x79\x53\xe4\x3d\x99\x7f\xa7\x29\x1c\x71\x71\x75\xbc\xe6\xa2\xd4\x8b\x88\xc5\xab\xb9\x6f\xf6\x77\x4b\x96\xf2\x63\x24\x8d\x6e\xf1\x70\xe4\xb0\xd7\x7b\x25\x51\x04\x70\x04\xb4\x0c\x3d\x02\x04\xe5\x0e\x65\x50\x29\xf6\xe7\x53\x62\x56\xed\x71\x26\x51\x1b\xad\x1f\x39\xa4\x15\x4e\x9e\x21\x28\xd2\x24\x88\x1b\xc9\x19\xca\xad\x4d\x82\xe3\x50\x09\x6b\xcb\xf9\xc1\x98\x17\x0c\x89\x63\xba\xc7\x75\x42\x6a\x8b\xc8\x97\xfb\x4e\x47\x19\xec\x33\x0c\x37\x7f\x51\x3d\x5d\x5f\x2d\x5a\x1e\x24\x29\xd6\xc4\x8b\x09\xc9\x0a\xfd\x58\xe4\x88\x93\xcb\x5e\x37\x78\xca\x9e\x26\x77\xcb\x21\x54\x26\x72\x07\x96\x37\x8f\x0f\x5f\xac\xd6\xb6\xae\xab\x1f\x6f\x0f\x79\x88\xa0\x72\x8b\x8b\x43\x29\x3d\xa6\xc2\x0f\xe3\xee\xdd\xf9\x29\xea\x9d\xee\xe5\xb8\x52\x46\x47\x8b\x9e\xc0\xa5\xbc\x36\x3f\xa1\x0f\x13\x0c\xc2\x7b\x02\x47\xd8\xf4\x9f\x29\x65\xcd\xf2\xc1\x72\xe4\xd7\x9a\x89\x82\xd2\x17\x76\x6e\x03\x26\x91\xa7\xf7\x19\x21\x16\x81\xf6\xdc\xca\xad\xc5\x69\x1c\x37\x6c\xd9\x97\xb0\xd3\x67\x05\x2d\x96\xa1\x22\x72\x67\x47\x92\xf4\x71\xf5\x90\x5a\x0c\x05\xff\x3c\xcf\x7b\xe7\xb9\x74\x46\x7c\x21\xb3\x71\x38\xf7\x74\x89\xf7\x78\x81\x9f\x7e\x64\x7b\xe2\x23\x6d\x30\xa9\x8b\xe6\x4c\x90\x47\x14\x0a\x2e\xfc\xd1\xf3\xc2\xbb\x98\xbe\x53\x98\x78\x92\xa7\x2c\x5e\x8c\xd8\x89\x9e\xb9\x21\x21\x3d\xa4\x70\x30\x87\xf9\x43\xbd\xc3\x49\x7d\xbb\x53\x81\xdd\x14\x2d\x56\xec\x13\xc9\xac\xa8\x2e\xce\x20\x82\xfc\xb2\x57\x6a\xbe\x9d\x95\xaa\x3c\xee\xfa\x39\x55\x6f\x05\x74\x58\xff\x38\x3c\xa1\x76\x32\xfa\xb2\x6f\xa7\x6f\xd8\x94\x25\x8b\x0a\x56\x35\x9d\x83\xbf\x95\xe8\x03\x61\x95\x04\x09\x34\x3d\x7a\x41\x1f\x4c\xa7\xa5\x00\xb8\x6d\x5f\x7e\x69\x70\xf0\x2b\x76\x74\x2b\x0b\xaa\x59\xe9\xc4\x83\x76\xe0\xd1\x0c\x4d\x8a\x77\xa4\x5c\x09\x09\xf0\x3c\x5a\x46\x43\x09\x6e\xa6\x5d\x6c\x46\xf6\xfb\x5e\x6d\x68\x9c\x37\xf6\xb5\x93\xbd\x40\x25\x55\x8a\x23\xaa\x81\x79\xc3\xc4\x6e\xd9\xbd\x51\x26\x16\x04\x8d\x54\x4b\xda\x3b\x9a\x3b\x58\xbc\x32\x83\xe6\x96\x17\xfa\x78\xaf\x05\x08\x4d\x97\x9e\x16\x43\x0b\xa1\x29\x42\xd8\xa4\x22\x30\x97\xad\xf2\xd4\x04\xf2\x75\x0d\x37\x86\x5b\x04\x52\x25\x22\x41\x7a\xd6\x93\xa7\x00\xd9\xd9\x2e\x99\x13\xf7\x76\x28\xac\xc4\x3e\xb1\x64\x23\xc7\xfe\x3d\xc6\xc8\x5e\x9a\x90\x5c\x9e\xe9\xd9\xfe\x36\xac\x0a\xbc\x6d\x9f\x68\x7d\x8c\x71\xb3\xbe\x69\x4e\xa6\x9e\x6c\xb0\x60\x17\xd3\x31\x7d\x92\x65\xfa\xf9\x89\xda\x82\x18\x02\xa5\x08\xd7\x62\x24\xb7\x22\xca\x8f\x15\x85\x1c\x56\xa4\x05\x6c\x7d\xa3\xda\x66\xee\xe7\xda\x6e\x25\x90\x61\xb4\x31\x09\x75\x66\xe1\x00\x0c\xeb\xf3\x61\x51\xea\x31\x46\x26\xbd\x2d\x68\xd6\x62\xa8\xfe\x89\x73\x03\x4f\x62\x15\xfb\xd1\x78\x42\x93\x5d\x15\xcb\x0e\x2f\xf6\xdc\xd5\x96\x46\xeb\xf1\xd8\xda\xb5\xc9\x19\xcd\x11\xa5\xe8\xad\xaf\x77\x71\xce\xc6\x8a\xb3\x25\x96\x39\xc1\x95\x5c\x79\x9a\xa0\x25\xbe\xfc\x47\x3c\xe4\x50\x9a\x08\xc7\xcd\x64\xe9\xd7\x9f\x82\x97\x05\xab\xb0\xf5\xb5\x31\xa2\xc8\x89\xf9\x22\x66\x09\xef\xa9\xbc\xdb\x52\xf9\x24\x43\x55\xcd\x41\x66\xf3\xec\x37\x04\x6e\x2a\xc8\x01\x7c\xd4\x9e\x1e\xa1\xd0\x96\x92\xa0\x35\xd6\x44\x11\x6b\xfb\xd3\xdc\xc1\xe9\x98\xf3\x85\x00\xea\x59\xd1\xb6\x1a\xf5\x51\xb3\x26\xc6\xed\x52\xa5\x24\xc5\xbb\x16\xad\x02\x12\x6b\xc7\x3c\xa1\xa2\xcd\x1d\x21\xbb\x27\x26\x74\xa1\x6d\xe5\x23\x6c\x4c\x73\x0f\x2f\x9e\x30\x1d\x63\x02\xd8\x4e\x49\x46\xe6\x80\x5d\xa3\xa2\xc1\x6b\x3f\xd1\x94\x91\xf9\x0f\xb2\x99\xef\xea\x6a\x5a\x68\xb1\xb8\xa5\xa0\xc0\x6d\xf2\x68\x20\xd5\x23\xcb\x41\xe2\x57\xa7\xf5\x54\xb7\x42\x99\xf2\x3d\x71\x29\x4d\x72\x56\x93\x8f\x54\x41\x47\x5a\x47\xee\x8c\x55\x1f\x04\xd6\x77\xfe\x6b\xf4\x5f\xbd\xad\x64\xcf\x29\x35\x44\x02\xde\x39\x5f\x81\x6c\xa9\x8a\x31\x53\x79\xae\xef\xe7\x92\x25\x1b\x57\xa0\x24\xe7\x58\x37\xf5\x14\xbb\xe9\x27\xcb\xaf\x0c\xa9\xb7\x30\x51\x2b\x3a\x75\xce\xc2\x00\xbc\xfe\xa1\x67\xb1\x74\x48\x0a\x25\x73\x87\xcd\x0a\x88\xc2\x3b\xc7\xc5\x46\x5d\x70\x1d\x1a\xce\xd7\xc7\x61\x6f\x54\x9d\x7c\xfe\x5a\xd6\xf3\x48\xf1\x66\xbb\x09\x51\x34\x28\xa5\x25\x3a\x29\x34\x74\x70\xdc\x1b\x64\xd5\x4e\x35\x62\x13\x0e\x17\xea\xea\x6f\xc6\x76\x45\x5d\x97\x89\x58\xa2\x73\x83\xfb\xd5\x61\x37\x2b\xa9\x1e\xc6\xcf\xcd\xc2\xb4\x84\xd3\x60\xd0\xac\xf8\xa5\xf0\xf3\xb4\x06\xe0\xa9\xfb\xc1\xbd\x2b\x31\xec\x3c\x71\x6c\x75\x7a\x68\x07\x81\xa8\x33\xfe\xcb\x9f\x83\x8b\x55\xf9\x87\x32\xc7\x85\x7e\x2d\x95\x15\xc9\x6d\xf3\x20\xe6\x41\xb6\xef\x07\x78\x74\xfb\x2b\xf4\x3e\xf7\x4b\x89\x6b\x76\xd0\x78\xaf\x2e\x86\xd1\x10\xe5\x16\x81\xc4\x10\x91\x57\x3c\xa6\xfe\x22\x77\xa0\xf5\x8d\x5e\xb6\x34\x18\x17\x77\x7a\x01\xbb\xfe\xda\xa5\x47\x4e\x06\x52\x96\xf2\xc3\xba\x4c\xdb\x15\xac\x31\x6c\x70\x28\x86\xcc\x57\xb0\x6c\x3c\x94\x18\x78\xdb\xde\xe8\xa0\x7d\xb3\x95\x4f\x83\xa8\x8a\x8b\xa3\x05\x87\x58\xfd\xec\xe3\xa2\x92\x87\x5d\xb3\xc2\x07\xa4\x36\x6c\x36\x23\x46\x88\xaa\x11\xa3\x94\xe6\x7b\xa8\x57\x09\x2a\x35\x22\x0d\xf1\xb4\x39\x57\x3f\xff\xef\x5e\x77\x0c\x53\xb5\xbe\xb0\x83\xc2\xf0\xe7\x95\xf7\x68\x7d\xf5\x9d\xc8\xb6\xde\x64\x4a\xf5\x0d\x50\xe0\xe5\x4e\xc7\x15\x03\x2b\xef\x9e\x31\xf4\xa7\x56\x64\x20\xfd\x7f\xdd\xfc\x1b\x00\x00\xff\xff\x31\xb7\x1d\x30\x8f\x06\x00\x00")

func test_certsNodeServerKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeServerKey,
		"test_certs/node.server.key",
	)
}

func test_certsNodeServerKey() (*asset, error) {
	bytes, err := test_certsNodeServerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.server.key", size: 1679, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certsRootClientCrt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x94\xb9\xce\xab\x38\x00\x85\x7b\x9e\x62\xfa\x68\x94\xb0\x64\xa1\xb8\x85\x8d\x1d\x30\x04\x13\xf6\x90\x8e\x25\xec\x4b\x48\x20\x2c\x4f\x3f\xf9\xff\xe2\x36\xe3\xc6\xd2\x67\xe9\x48\xd6\xf9\x74\xfe\xfd\x39\x10\xcb\x84\xfe\x23\x61\xcb\x21\x67\x22\x01\x07\xff\x52\x46\x27\x04\x01\x24\x49\xe0\x51\x64\x60\x22\x10\x64\xc4\x02\x17\xef\xbc\xfd\xec\xfd\x19\x37\x95\x9c\xcb\xd3\xdc\xb9\xd8\xe6\xc8\x84\xcc\x40\xd5\xba\x3b\xc9\x3f\x31\x05\x26\xbe\x40\x13\x4c\x8c\xb6\x62\x5b\x87\x40\x06\xac\x8b\xa5\x5c\x57\x4d\x4e\x2c\x43\x5e\xfd\x04\x3e\xed\x74\xcb\x9d\xf0\x14\x20\xcf\x34\x11\x9e\x66\x14\x71\xf4\x15\x37\x62\x1e\x70\x59\x66\xee\xf0\xa4\xe4\x31\x65\x74\xc7\x9d\xf5\x12\xb0\xdf\x7b\xd1\x4b\xbc\xfa\x5f\xa8\x3b\xc1\x0f\xdb\xfd\x65\x25\x28\x75\x8b\x4c\x18\xfc\x86\x69\x78\xaa\xff\x86\x31\xdf\xb4\x19\x39\xe0\x02\x33\xea\x41\xa0\x3b\x50\x51\x3f\x11\x6f\x4e\x59\x86\x0b\x1d\xec\x64\xc9\xee\x65\x9b\x44\x3c\x32\x31\x04\xa6\x0b\x80\x40\x20\x9a\xc0\xcf\xbb\x06\x3a\x02\x19\x60\x22\x5d\xe7\xcd\x24\x20\x90\xac\xd9\x83\x37\xa0\x55\x22\x45\xda\xe0\xc1\x75\x82\x3b\x9f\x9c\x84\x55\x4a\xfa\x7a\xb6\x82\x67\x55\x25\x85\x74\xf1\x68\x34\xa5\xd7\x76\xc9\xda\x1b\x51\x16\x8d\xc9\x0c\x29\x7d\x4b\x99\x7a\x77\x3f\xdc\xf5\x11\xe7\x2f\x71\x38\xef\xcf\xe7\x1d\x77\xac\xb8\x42\xf0\x01\x5b\xd3\xbd\x51\x3e\x0c\xa3\x03\xae\xa9\xa4\x28\x95\xba\x4b\xeb\x72\xaf\x2b\x14\x97\x86\x8e\x13\x33\xac\x9b\x25\xa1\x49\x14\x0a\x1e\x7d\xfa\xb0\xb1\x70\x7a\x7b\x1e\x47\xbf\x0e\x1b\xad\x00\x97\xba\x74\x0b\x2c\x4b\xf5\x7e\x1b\xae\x91\x23\x73\xfe\xb6\x27\x59\x68\x1e\xc7\xe5\xfd\x1c\xd4\xe5\xa6\x30\x91\xfc\xbc\x75\x55\x3b\xc0\x00\x7a\xa3\x35\xaa\x2c\xda\xa7\x45\xad\x16\x23\x2b\xd3\x61\x63\x3d\x62\x24\xb6\x9f\x30\xb6\xd6\x6d\x7e\xf0\xdf\xcb\xce\xcf\x44\x7e\xc8\xa4\x11\x35\x26\x87\xf7\xf2\xcc\xbc\x70\x60\x3f\x95\x8e\x84\x39\x68\x9d\xf4\xed\xfb\xf6\xf5\xc8\xb6\xf9\x90\x19\x4b\x7d\xbf\x7a\x74\x3d\x0f\x89\xcc\xb7\x62\xd3\x6e\xcf\x87\x03\x14\x3a\x4c\x33\xb5\x3b\x5e\x7d\xc3\xd6\xd4\xfd\xdc\x32\xac\xda\xd4\x63\x13\xed\xe4\xd4\x93\xdd\x42\xaa\xe5\xf2\x96\x6b\x24\x54\x40\xf6\xb5\x03\xc8\xa5\xba\x82\x5a\x07\xc2\x8f\x27\x09\x9a\x30\xdc\x4e\x26\xfe\x0a\x77\xee\x10\x70\x7e\x9a\x63\x14\xdb\xc5\x08\x01\x0d\x66\xd9\x0b\x66\xf8\x0c\xcd\x18\x81\x12\x50\x98\x55\x7d\x5e\x15\xb2\x38\xed\xbe\xf5\xbd\xcf\x00\x18\xd2\xd7\x3e\x40\x85\xde\x55\xc8\x4d\xab\xa8\x68\x90\xfa\xdd\x33\xea\x4e\xdc\xc4\xbb\xa4\x8a\x62\xdd\xda\xa4\xfc\x35\x0c\x0b\x39\x5e\x8f\x4a\x33\x08\x68\x13\xb8\x9f\x03\x35\x6d\x3b\xbe\xd7\x97\x38\xd3\x53\x3a\xf3\x92\x6b\xf6\x61\xc9\xeb\x1f\x2f\x3c\xab\x75\xac\x33\x20\xe1\xfc\xf7\x41\xe1\x4a\x11\x5b\x5d\xf7\x39\x86\xad\xdb\x3c\x07\xe3\x3d\xf6\xfb\x18\x7c\xcb\x3a\xa5\xc2\xb6\xdc\xf8\x94\x4c\x77\x8b\x6d\xce\xd6\xfa\x8c\x84\x59\x8a\x6d\x67\xe1\xfb\x2d\x31\x1b\x26\x7d\x97\xcd\xbe\x31\x08\x2f\xb2\x5b\x70\x10\xcb\x44\xbe\x96\xd6\xc3\x2d\x39\xde\x33\xdf\xeb\xe5\xfe\xf0\xbb\x9e\x55\x4f\x41\xd4\xdd\x02\xfc\xfd\x14\xaf\x3c\xf3\x9e\x47\xef\x95\x55\xd6\x83\x72\x29\x98\xd8\x55\xa3\x87\xf7\xb2\x57\x01\xaa\x4f\x5f\x6e\x83\xad\x4d\x1c\xca\xa3\xdb\x75\x02\xad\x21\x45\x96\xc7\x0a\x35\xed\xe2\x97\xd6\xda\x9e\x7f\x20\xd7\xee\x80\xd4\x59\xde\x14\x97\x52\x55\xab\x50\x63\xe0\x02\xf3\x9d\x0a\xfc\x31\x2f\x1f\xf3\x45\x00\x8a\x76\xea\x75\x3c\x0e\xa4\x86\x24\xd6\xaa\xcd\x4b\x90\x1d\xac\x95\xd6\x62\xd4\xde\xc1\x77\x14\x89\x0a\x8f\x0b\xea\xaa\xc4\x65\x4f\x75\x74\x67\x99\xde\x3e\x8d\xea\xf4\xe7\x0f\xf3\x3b\x0f\x98\xa2\xff\x4f\xc6\x7f\x01\x00\x00\xff\xff\x16\x96\xc8\x6c\x4f\x04\x00\x00")

func test_certsRootClientCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsRootClientCrt,
		"test_certs/root.client.crt",
	)
}

func test_certsRootClientCrt() (*asset, error) {
	bytes, err := test_certsRootClientCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/root.client.crt", size: 1103, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certsRootClientKey = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x95\xb7\xb2\xab\xea\x12\x84\x73\x9e\x62\xe7\xd4\x2d\x01\x12\x2e\xd8\x01\x3f\xc2\x0b\x8f\x70\x19\xde\x7b\xcf\xd3\xdf\x75\xd6\x49\xcf\xa4\x13\xf4\x37\x53\xdd\xd5\xff\xfb\x67\x00\x27\x48\xda\x1f\xcb\x66\xfe\x18\x96\xe4\x32\x0e\xf7\x47\xe1\x82\xdf\x0d\xa4\x4a\x12\x37\x32\x12\x60\x18\x85\x65\x4c\x8e\xb9\xdf\x1a\x22\x7a\x2c\x63\xab\x2f\x71\xbd\x8b\x6f\x70\x9c\xc7\x5e\x7e\x5c\x0e\x13\xd2\x67\xae\xab\x47\x1f\x8d\xc9\xd7\x53\x42\x59\x0c\x8a\x0a\x75\x20\x8f\x12\x6f\x9c\x1a\x64\xf4\x02\x54\x35\xbc\x8b\x9e\x64\x06\xd6\x73\x3f\x74\xfd\xec\xa5\xe8\x11\x5b\x99\x65\xa5\xda\x86\x6b\xc3\xc6\x17\x5a\xe8\x64\xce\xf0\xac\xeb\x89\xe1\x39\xf0\x3c\x9e\xc7\x04\xb1\x38\xaa\x4d\xf7\x91\x27\x63\x1d\x2f\x9f\xe4\xb1\xf4\x8e\xef\x61\x1b\xef\x44\x6e\x11\x36\x96\x88\x12\x19\xd9\x8e\xde\x58\x0d\x05\x8b\x07\xa8\x54\x82\x62\xcc\x72\x6c\xc1\x90\x73\x6d\x77\xa2\x82\x24\xa1\xd1\xc9\x65\x56\x62\x3b\x69\x4f\xec\x9c\x5c\x42\x96\x49\xd3\x63\xdc\xb8\x89\xab\xd4\x84\xfd\xd7\x68\x07\xf3\x6a\xd5\x71\xde\xf8\x3d\xf3\x08\x49\xac\xe7\x92\xc7\x2b\x6b\x67\x75\xe5\x07\x03\x4a\xc9\x80\x99\x0b\xbc\xd1\x4a\xdd\x5a\xa2\x53\xe0\x26\x8b\x60\x85\xc1\x94\x91\x27\xc9\xb7\x4d\x0d\xd3\xe1\x2b\x0e\xde\xcb\xe8\x39\xa8\x93\x9c\xb1\x6f\xad\xf8\x23\x1c\x1f\x67\xb6\x15\x99\x02\xde\x50\xc0\x46\xfa\x8d\xd6\x4d\x55\x65\x49\x48\xdb\xe1\x18\x8f\x1d\x0d\x7a\xd4\x6a\xa5\x62\xb4\x06\xf4\x65\x57\x42\x79\x48\x6f\xc6\x64\x00\x33\xfc\x3c\x5b\xc0\x8a\xa4\x08\x9c\x4c\xdd\xd2\xaf\x92\x24\x50\xc9\xbb\xc3\xc4\xe3\xd5\x33\x13\x70\xb4\x4f\x00\x9c\xc2\xcb\xaa\x2f\x0a\xd6\x0b\xef\xee\xaa\xa5\xb7\x52\x09\x16\xbd\xbe\x66\xf6\xc1\x7e\xad\x51\x49\x1b\x94\x43\x9d\x0e\x13\x38\x71\xea\xd2\xed\x03\x3d\xe2\x33\x00\x97\xda\x36\x67\xd7\xc6\x69\xbc\xea\x81\x3a\xcf\x45\x46\x17\x82\x9b\xd1\x1b\xa2\xb2\x54\x64\xe6\x9a\x54\x5a\xe6\xdb\x24\x09\xf6\x71\x48\x4a\xc6\x53\x8c\x7a\xb9\xa6\x27\x6b\x33\x0b\xc5\x01\x3d\xd6\xee\x11\xf5\xd6\x74\xd9\xed\x6e\xcf\xc9\x46\x91\x66\x06\x04\x63\x2f\xf1\x36\x09\xd0\x87\xd1\xf0\x57\xa0\xe4\xa6\x22\x4b\x9f\xe1\xd3\xb2\x0c\x4c\x7a\x73\xe2\xdc\x3a\xd3\x69\x2a\x0d\x59\x3f\x22\xeb\xe5\x10\x05\xf8\xfe\x28\x62\x4e\x67\xe1\x2d\x76\x7f\xc8\x54\xc9\x9d\x24\x1f\x62\x7d\xa0\x39\x2d\x05\x27\x41\x07\xb8\x12\x26\x5f\xca\xe8\x8d\x0d\x34\xe1\xa6\xca\x0f\xf3\xd8\x58\x08\x57\xad\xbe\x42\x33\x56\xb3\x38\x47\xa1\x56\x37\x7e\x99\x39\x5f\xf7\x03\x8e\xc1\x1e\x25\x75\x93\xb9\xd3\x6d\x13\x87\x4a\xca\x27\x5a\x84\x4f\x64\xe2\x13\x54\x3b\xce\x54\x02\xe2\x05\x0e\x0c\x09\xa2\xe7\xf3\xdd\x1e\x1c\x5b\x04\x1c\x83\x89\x2b\xd6\xad\x0b\x3e\x02\x84\xcb\xe5\xeb\x1a\x22\x7f\x93\x63\xc6\xa2\x9d\xe0\xa0\x91\x96\xe8\x05\xdb\x4a\x5c\x54\x23\x3b\x50\xcd\xbe\xf4\x6e\xc0\x0d\xa0\x82\x29\xbf\x6e\x3d\x2e\x35\xcc\x86\x81\x5c\xbe\xf3\xe7\x88\xab\x32\x37\xee\x61\x71\xb6\xb2\x2e\x47\xbe\x22\x5d\x77\xe9\x85\x76\x9b\xf1\x82\xbc\x75\xe1\x22\x8c\x9d\x31\x53\xed\x47\x14\x1c\xdf\x81\x44\xd2\xf0\xac\x80\x32\xb4\x26\x0a\x28\xd8\x63\xc1\xd8\x36\xed\xc4\xec\xaa\xb3\x9b\xdb\x46\x84\xc5\x0c\x3f\x1e\x01\x05\xbc\xa1\x70\x90\x09\xd0\x2f\xed\xc2\x8c\xbc\xf9\x25\xa6\xfc\xc1\x82\xec\xb6\xf3\x0c\xaa\x23\x9e\xcf\x26\x14\xf6\x5d\x13\x44\xd9\x43\x47\xe0\xd7\x40\xc3\x86\x75\x13\x7c\x35\x47\x72\xed\x29\xd6\x72\x29\x90\xf6\x87\x7e\x03\xbd\x5c\x1d\x22\xa4\x28\x38\xa0\x79\x8f\x82\xb8\x29\x50\xc9\xc4\x68\xc1\xae\x7d\x10\xc0\x18\x59\xc7\x01\x8f\x3e\xe6\x43\x39\x79\xe7\x65\x0a\x1d\xb7\x49\xf7\x16\x2d\x87\xc8\xfa\x9d\xfc\x25\x5a\xa9\xda\xb9\x80\x54\x0d\xed\xb6\x34\xea\x79\x41\x66\x58\x12\xbe\x4f\xcd\xe6\x07\xa3\x7e\xcc\xd9\xb1\x84\x8f\x95\x8f\xef\xf7\x16\x30\xc4\xb3\xe4\x4b\x9f\x56\x93\x15\xa9\x5f\xe4\x31\xea\xdc\x26\xdd\xc1\x26\x22\x89\x9e\x31\xa6\xba\xeb\x3b\x84\xac\xe9\x15\x8e\x47\x78\x2b\x9a\xe0\x19\x39\x45\xdb\x7b\xb8\xa3\xdd\xad\xa4\x79\xa6\x56\xb2\xf1\x0d\x55\x5d\x3b\xf0\xad\x0d\xf6\x0a\x21\xd9\x73\x1d\xcd\x68\x8b\xf3\x64\xf0\xa4\xcc\xd9\xaf\x17\x14\x5c\xfc\xf4\x74\x9b\x67\xc9\x2a\x0b\x00\xe8\xee\x26\x37\x72\xa4\x4c\x9b\x22\xea\x19\xf9\xfc\x2e\x1f\x9b\x29\x87\x73\x32\x7c\x2d\x57\x67\xe0\x12\x76\xe6\x30\x3c\x96\x8c\xab\x92\xe4\x2d\x72\x11\xb4\xc9\xfb\x37\xe2\x50\xe3\x0b\x83\xac\x3a\x2a\xcf\xa6\xbc\x98\x53\xff\xf5\xc5\xc1\xae\xfb\x6a\x47\x4d\x3c\x73\x05\x16\xba\xd3\xc5\x0b\xa1\x81\x8f\xc2\x89\x9c\x63\x8d\x23\xe7\x1c\xae\x09\x64\xa3\x87\xdc\x8c\x02\x33\x91\x0f\x71\x2b\x25\x5a\xb6\x5f\x70\x80\x77\xad\x66\x7b\xe0\x32\xaa\xf5\xea\x31\xf0\xee\x67\x4c\x4f\x6b\xe1\x11\x46\x44\x34\x92\xdd\x57\xa7\xf3\xb6\x25\xd9\x38\x3b\x03\x68\xbf\xcf\x36\x96\xa7\xe2\x55\xd5\x2f\x9b\x92\xe1\xe5\x34\xf7\x76\xc4\x5f\xa3\x31\x4f\xba\xdd\x87\x01\x0b\x6e\xdb\xfa\x44\x62\x69\x97\x0a\x1e\x05\x16\x46\xba\x76\x41\xa7\xa9\x4e\xa6\xda\xc0\x13\x50\x2d\x1e\xbd\x58\x2c\x3f\xc8\x00\x8b\xbe\xc2\xf8\x32\xde\xab\xd9\x3b\x95\xed\x4e\x2f\x25\x20\x41\xc5\x1c\x71\x68\xc6\xf7\x49\x55\x91\x21\x3a\x53\xac\x3d\x7e\x42\x4e\x86\x56\x01\x7e\x6e\xd2\x3f\x50\xc3\xcd\x12\xce\x24\xea\x80\x9c\x2d\x2c\x2f\x6d\x21\xf1\x20\xaa\x8a\x39\x2d\x1d\xde\xbb\xe3\x95\xb6\x25\x20\x0d\x18\x39\x32\xce\xec\xc7\x38\x61\x11\x11\xb3\x75\xed\xdd\xc0\x70\x2a\x7a\xd3\x08\xd5\x8e\x1c\xd5\x71\xc0\xab\x21\xf7\x00\x4f\x66\x94\xc3\x4e\xd8\xd3\x57\x9a\x95\x64\x74\x3e\x35\x98\xd5\x7d\x53\x01\x13\xbc\xdf\xb5\xde\x17\x0e\xc1\x22\xba\xc0\x1e\x7f\xff\x42\xbf\xb5\xc2\x69\xef\xff\xae\x9b\xff\x07\x00\x00\xff\xff\xb7\x75\x0c\x14\x8f\x06\x00\x00")

func test_certsRootClientKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsRootClientKey,
		"test_certs/root.client.key",
	)
}

func test_certsRootClientKey() (*asset, error) {
	bytes, err := test_certsRootClientKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/root.client.key", size: 1679, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certsTestuserClientCrt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x94\x4b\xaf\xab\x38\x16\x85\xe7\xfc\x8a\x9e\x47\x2d\x08\x8f\x9b\x30\xb8\x03\x63\x1b\x62\x38\x90\x00\x86\x90\xcc\x08\xcf\x00\x09\xef\x18\xf8\xf5\x7d\xce\x6d\xa9\x6a\x50\xe5\xe1\x67\xed\xa5\xbd\xb5\x96\xd6\x7f\x7f\x9e\x86\x0d\xe2\xfc\x07\x62\x8f\x12\x9d\x40\x40\xf1\x1f\xca\xd9\x84\x20\xb0\x41\x08\xb2\xb9\x00\x8c\x68\xa0\x20\x6e\x8c\xba\xf3\x98\x8e\xd9\x76\x03\x56\xd6\x81\x56\xec\x86\xe5\x5e\x01\x47\x2b\xea\xbe\xac\x9f\x86\xca\x04\x0d\xb8\xa3\x0e\x10\x18\x38\xdb\x23\x0c\x83\x1b\x0a\x5d\xd7\xc2\xac\x41\x0f\xd1\x19\x92\x97\x5a\xde\xc4\x62\xd1\x29\xa0\x5a\xe1\x84\x1a\xb0\x29\xc2\xce\xe7\x26\x4e\xeb\x43\xd4\xab\x18\x6a\xc8\xa5\x20\xd3\x99\xb0\x70\x0e\xc5\xab\x8d\x82\xc5\xa1\x64\xb5\xa9\x13\xff\x40\xa7\xfa\x61\xee\x5f\xcc\x86\xc9\x82\x2b\xe0\xfe\x5f\xac\xa5\x30\xf8\x5b\x8c\x8b\x11\xf6\x6c\x70\x34\xc0\x3e\xc0\x60\xb1\x49\x6a\x84\x5b\x7a\x0a\xb7\x7b\x44\x58\x51\xe0\xa7\x0d\x04\x03\xfa\xbd\xe1\x93\x87\x84\x5c\xfc\xbd\x7a\x00\x80\x4c\x34\xc4\xc0\xcf\xbf\xc5\x81\xf6\xfb\x6e\x17\x59\xc6\x4d\x32\xdb\x88\xa5\x46\xa4\x36\xc7\x16\xd9\xf9\xae\x73\x72\xd7\x6c\x5f\x97\x8f\xb9\x4a\xd3\x70\x30\x20\x30\xc1\x0e\xca\xee\xbb\x7e\x99\xbe\x45\x2d\xb7\x11\x6f\xe3\xc0\x7d\xba\xaf\x63\x24\x06\x91\xb9\x5d\xae\xfd\xb1\x0d\x23\xa7\xc0\x22\xbc\x9f\x1d\x33\x0c\xd4\x97\x98\x85\xab\xe0\x3d\x77\x96\x42\xa8\x69\xec\xef\x3a\x0c\x1f\xb9\x05\xe6\xf2\xfa\x8c\x82\x07\x53\x10\xe4\x92\x2a\x08\x82\x7e\x52\x14\xb7\x5f\xb7\xa8\x37\xe6\x83\xa1\xa0\x87\xa2\xab\x8d\xfe\x95\x4c\xcf\x4d\x9e\xa9\xc5\x27\x96\xbf\xc5\xd3\x18\x19\xc3\xfd\x7d\x8d\x0a\x98\x9e\xf6\xa4\x0a\xe1\xd1\xbe\x59\xdc\xf9\xb0\xb7\xde\x5f\xc2\xfd\xd3\x7c\xbc\xba\x51\x65\xe5\xa5\x0a\xcf\x3e\x18\x2f\x53\x7e\x26\x23\x84\xf9\x26\x0d\x0b\x2a\x51\x01\xfa\xe7\x56\xd8\xf3\xcb\x7a\x03\x41\xd3\x36\x91\xdf\x37\x94\xe9\x4f\x0e\x1d\xc1\x26\x46\x7a\xd7\x28\xf2\x53\xf0\xd6\x84\x7d\x67\x60\x6a\x52\x23\xe6\xc7\x5e\x5b\xf9\x7c\x47\xda\xb7\xcf\x77\xfc\xc9\xad\x25\xdc\xef\xa4\x43\x1c\x5c\x9c\x74\x1c\xf5\xb3\x76\xb9\x3a\x85\xc3\x29\x38\x17\x22\x52\x59\xce\x15\xa3\x45\x4d\x1e\x6a\x3a\x1e\xef\xe5\x57\xee\x69\xbf\x24\x50\xd8\x1a\x00\x46\x65\x6e\xa0\xb1\x81\xfc\xe3\x54\x8a\x18\xd6\x78\xe6\xe2\xef\xd0\xe9\x2d\x02\x94\xfb\xf1\xf6\xe4\x07\x18\x21\x60\x69\x45\x31\x68\x05\xd6\x35\x37\x41\xe0\xdf\x92\x07\xce\x10\x7c\xcf\x76\xf7\xc4\xa8\xaa\x90\xa4\xf9\x31\xe1\x58\x91\xd5\x59\x63\xd8\x9d\xe5\x0d\x93\xb5\xcd\x85\x7b\xff\x5c\x13\xc3\x5d\x14\xeb\x1d\x1c\xf9\xf9\x30\x8b\x6b\x22\xd8\xb3\xe6\x24\x6e\xa0\x0b\xb9\xd7\x7f\xda\x25\x7f\xdb\xf1\x01\x35\x92\x49\x3e\x5c\xd8\x79\x83\xfc\xfe\xf8\xe2\xb4\x1f\xcb\x5a\xce\x3e\x75\x65\x8b\x79\x1b\x90\x54\x94\x91\x54\xcf\xed\xab\xee\x8b\xe6\x48\xe9\x24\x95\x17\xca\x7c\xbe\x62\xdb\xeb\xe4\x6b\x0e\x8f\x12\x49\xf1\x55\xee\x42\x97\x7d\xb7\xcc\xf5\x3e\x19\x82\x3d\x5f\xac\xdb\x41\xa6\xf0\x21\xb9\xb6\x32\x57\xea\x88\x63\x87\x75\x9d\xf6\x8c\xcb\xdb\xe9\x7e\xf0\x70\x35\xd3\xf1\xd0\x80\x84\x5e\x6e\xfc\xd4\x6e\xd1\x2f\xc6\xc5\x81\x40\xd2\xa8\x52\x33\x23\xf3\xa0\x12\x77\x0d\x78\xa7\x8b\xc4\xc8\x51\x60\x72\x25\xee\xd8\x29\x85\xfe\x04\xf8\x95\xdf\x62\xfc\x92\x78\xef\x99\x2e\x11\x72\xda\xd9\x03\x5d\xcf\xf0\xde\xe1\xf8\xfa\x3a\x9c\x1e\x1e\x50\x20\xf3\x72\x7d\xce\xbc\xeb\xae\x9c\x9a\x68\xa0\xb3\x2c\xee\xef\xa5\x78\xbb\x52\x5c\xfb\xf3\xd5\x34\x0f\xcd\xc9\x97\x3a\x39\x5b\xf3\xe0\x5c\x62\x08\x2f\xcd\x23\xe4\x45\x8e\xb8\x1f\x3c\x27\xa5\x97\x81\xdf\xbf\xb9\x3f\x15\x81\x1d\xf4\xcf\xda\xf8\x5f\x00\x00\x00\xff\xff\x57\x9f\xa9\x48\x53\x04\x00\x00")

func test_certsTestuserClientCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTestuserClientCrt,
		"test_certs/testuser.client.crt",
	)
}

func test_certsTestuserClientCrt() (*asset, error) {
	bytes, err := test_certsTestuserClientCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/testuser.client.crt", size: 1107, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certsTestuserClientKey = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xd5\x37\x12\xa3\x60\xb6\x86\xe1\x9c\x55\x74\x4e\xdd\xc2\x83\x08\x6e\xf0\xe3\xbd\xf7\x19\xc2\x7b\x49\x78\x56\x3f\x3d\x1d\xcf\x49\x4f\xf2\xd4\x97\xbc\xff\xf7\xdf\xe3\x44\x59\xb5\xfe\x78\x3e\xf8\xe3\x78\x6a\x04\x02\xf1\x8f\x2e\xa6\xff\x3e\x90\xa9\xaa\xe2\xd2\xa8\x1c\x00\x3a\x0f\x5c\x11\xdc\xed\x64\xdd\xb9\xf4\x52\xbc\x11\xc9\x6a\x1d\x3c\x0a\xf2\x0d\x12\x94\xcf\xb5\x9e\xb9\x8b\x8d\xc9\xe1\xab\x69\x78\xd7\x69\x76\x51\xa3\xb4\x2e\x84\xba\xe1\x1e\xb4\x72\x32\x74\x86\xf6\x11\x89\x1d\xa5\xbb\x78\xb0\xef\xa1\x4b\xd1\x93\x72\x56\x33\x05\xbd\x1f\x45\x4e\xb6\xcd\x63\xb1\x89\xe9\xd1\xed\xbe\x78\x7b\x5b\xec\xb9\x63\x4c\xdc\x8d\xb1\x40\xd1\x32\x62\xf2\xcb\x76\xcf\x59\xc5\x24\x49\xff\x55\x55\xa8\xaf\x2b\x46\xb7\xbf\xfd\xda\x5d\x1c\xf6\xea\xcc\xf3\x09\x23\x5d\x61\x63\xb8\x0f\x82\x1f\x56\xfc\xf7\x96\xae\x2f\x9e\x61\x23\x09\x66\x0f\x62\x7d\x15\x73\x0f\x41\xe6\xfb\x9d\xf5\x3f\x37\x2b\xbf\xa9\x37\x9a\x69\x75\x65\x67\x47\xa9\x7e\x47\x43\x60\x92\xa7\x33\x40\x33\xbf\x58\xfa\xe5\x92\x2e\x09\xf4\x65\x25\x05\xe3\xd3\x7d\x4e\x0b\xb8\x50\xc1\x1e\x6c\x16\xbe\xb8\xb4\x41\x80\xc9\x8e\x57\x9e\x55\x95\xba\x89\xc5\x6c\x02\x3a\xf8\x65\x89\x37\x1d\x8c\xde\x14\x07\x81\x74\xba\x86\x1e\x74\x7d\xa1\x9a\x75\xe9\xc7\x06\xe3\xa3\xf0\x24\x6f\xc8\xe0\x82\x26\xc0\xfa\x54\xa8\x3c\x85\x95\x6e\xf5\xee\xa3\x16\xbc\xea\x44\x46\x92\xb7\x23\xa7\x3e\x81\xba\xd5\x76\xaa\x02\x70\x01\x07\x96\xbf\x63\xf3\xca\x0f\xe7\xba\x64\xef\x23\x55\x1f\x15\x1a\xb2\x5b\x37\xe3\x44\x7d\x0b\x2d\x75\x9b\xb0\xe8\xd7\xd5\x36\x93\x7a\x45\xc3\x8e\x93\x96\x70\x15\x9d\x29\xee\x2d\x3b\x6b\x9b\x2a\x7a\x6d\xb6\x77\xce\x4d\x31\x5a\xae\x6f\x2a\xf9\xcc\x73\x48\x7c\x5f\xd0\xcf\x91\x84\xa2\x43\x97\x9e\xc4\x0b\x4d\xb8\xc6\x6d\xe4\xcc\xaa\x3d\xb2\xde\x06\x56\x71\xdb\x2c\x1f\xa8\xac\xc9\x1b\x2e\x2e\x5b\xfa\x0e\x48\xcd\xec\x98\x5f\xf5\x6b\x48\xcb\xe1\xd3\x54\x76\x67\x48\x9d\xf8\xdf\x83\x8e\xfe\x27\x79\x4c\xa0\xfe\xae\xc3\x64\x12\x6d\xc9\xaf\x59\xc2\x33\x38\xd8\xb6\xee\xbc\x3f\xbc\x9b\xce\x88\xb5\x6b\x06\x08\x28\xd6\x44\xa6\x6e\xe3\xa8\x8a\x21\x5a\x32\x3a\x79\xe8\x43\x58\x22\x77\xda\x4f\xf7\x19\x9c\x60\xa8\xf3\x30\x26\x4d\x0a\xef\xf1\xc6\x1a\xb3\x35\x09\xba\x42\xce\x44\x27\x4f\x7b\x76\x76\xc8\x04\x77\xb9\x05\x3d\x97\xd6\xb6\xbd\x12\xf3\xc3\x24\xbb\x7e\x50\x44\x65\xfb\xc9\x9b\x20\x1e\x98\x41\x4c\x19\xf2\x29\x73\x93\xb1\x87\x9c\xea\x5d\xaa\x4a\xe8\xbe\xdc\xc2\x27\xc7\x90\xb0\x84\x09\x1c\x30\x01\x32\x4f\x9a\x13\x7a\x35\x61\xd2\x89\x41\xbd\xb5\x04\x92\xe4\xf9\xba\x55\x91\x6f\x52\x11\x50\x69\xec\x63\x52\xc3\x21\x64\xc9\x56\xa6\xc3\x38\x5e\x1f\x19\x28\x81\xf0\x62\x7a\xb1\xc4\x9a\x27\x7d\x14\xc9\xc3\x5a\xe6\x1e\x29\x1b\xf4\x89\x8d\x74\xf1\x57\x90\x8c\x70\x73\xe5\xb3\x81\xb6\x44\x73\xec\x86\x7f\xfc\x9c\xd3\x99\x05\x7f\x78\xdf\xbc\x56\xb8\x1f\xd7\xfb\x9c\xc4\xcd\xc1\x7c\xaf\x0f\xe2\x8f\x75\x35\xe4\xb6\x7e\xd2\xda\xca\xe1\x37\x25\xfc\x07\x3a\xb4\x24\x23\xfb\xc1\x6d\x1e\x69\x7d\xae\xf8\xaa\x8c\x98\x79\x06\x29\xe4\x1e\xf3\x58\xbd\xb6\xd7\xb2\x0f\xe3\xec\x4d\x77\x0f\x4b\xd4\xd9\x02\xfb\x4d\x73\xde\x51\x87\x7f\x62\x32\x5e\x5a\xe8\x65\xbf\x2f\x8a\x24\x90\xd9\x16\x42\xed\x21\xcb\x88\x32\x3a\x17\xc6\xc3\x05\x9c\x60\xfc\x2c\xcb\x9c\x1e\x8a\x27\x53\x61\xf9\x3e\x6c\xbb\x22\x79\x87\x4f\x22\x09\xf3\xd2\xfa\x14\xda\x3c\x09\x0e\x08\x04\x9d\x14\xc7\x1d\x61\x98\x29\x3c\xb2\xa7\xc3\xd0\xba\x72\xc6\xbb\x30\x82\x88\x38\xbd\xf0\x59\xff\x52\x95\xf8\x29\x01\x0e\xd4\x7c\x8a\xc7\xce\x09\x4b\xe9\xc9\x36\xe1\x90\x5a\x21\xf4\x2b\xa8\x19\xba\x3d\xe2\x8c\x02\x5e\xf8\x41\xff\x90\xd1\xc4\xe0\xd3\x6a\xa3\xc9\x07\xdf\x57\x9f\x51\xed\x15\xbf\x32\x33\x78\xfd\x25\x83\x70\x6e\x52\xab\x3a\xb3\x9c\xb1\x14\xaf\x1b\x25\xd1\x34\xe6\x12\x5a\x9d\xe0\x7b\x8f\xdb\xfa\xfb\xae\xe8\x1a\x54\xf0\x03\xe7\xda\xbb\x00\x7c\x33\xe4\x9d\xfa\x5a\xb3\x8d\x58\xd7\x27\x1a\x5a\xe7\x51\x31\x79\x97\xb6\x80\xe5\xea\x6d\x40\xde\x53\x30\x57\x53\xbe\xd9\x90\x44\x68\xc3\x06\xca\xd7\xd9\x47\x0a\xbb\x7b\x30\xa3\xbd\xf0\x58\xb5\x31\xd6\xba\x50\x5a\x77\xd4\xa9\x96\xfa\x96\xfd\xd2\x44\xaf\xe3\x30\xfe\x34\x7b\xfd\x39\xd0\x9c\xa3\xfe\x0e\x3c\x2c\xde\xba\x43\xe4\x72\x47\xf3\x99\x67\x00\xf5\xdb\x57\x73\x10\x66\x12\x30\x95\xab\x73\x0d\x38\x13\x32\xd3\x14\x31\xdb\xe2\xcf\x7e\x2a\x2b\xbb\x24\xca\xe9\xd4\x67\x72\xbc\xcb\x7b\xb6\xe1\x73\xc8\x32\xfe\x3a\xa0\x19\x0b\xcf\xb6\x65\x69\x02\x9e\x84\x0d\x37\xe8\x4d\x43\x88\x7b\xae\x46\x5c\x51\x0d\x06\xc9\x87\x27\xd7\xbf\x11\x39\x3e\x79\xc4\x89\x69\x97\xb1\x52\x61\xed\x47\xe0\xcd\xd7\x4f\xa0\x8c\xbe\x7b\x41\xa5\xa1\x10\x45\xe0\x6a\xda\xfe\xd9\xd3\xec\xd5\x67\x58\xd3\x97\x18\xd5\x12\xe6\x2b\xca\xb1\x3d\x07\x5f\x4e\x15\xd7\xdf\xb6\xc2\xa2\x54\x74\x5b\x88\xc5\x9d\xdb\xbf\x38\xe7\xbb\xe8\x98\xb2\x3e\x1a\x54\xa2\xb0\x06\x16\x19\x68\x95\x80\xe3\x0b\xed\x1d\x04\xf5\x4a\x8d\x39\xe3\x72\x66\x81\x11\x36\xaa\x6c\x69\xd2\x6e\x9b\xa6\xde\x12\x8c\x8d\xe7\xea\x5c\x11\x73\xc9\x1d\xa6\x91\x28\xed\x9f\x5c\x0c\x31\x71\xf1\x3e\x39\xf9\x83\xf2\x91\x25\x5a\x83\xa3\x98\x03\xd8\x09\xec\xa9\xb7\x74\x38\x9d\x51\x92\xc5\x91\x7a\x2f\x3d\x72\x5a\x6f\xe9\x5e\x8a\xd2\xa7\xf5\x37\x83\xa6\x81\x96\x23\xc8\x50\x24\x38\xd4\xdd\xb7\x7b\x68\x1c\xba\x2f\xa3\xb3\x59\xd5\xea\xa5\x4f\x9d\x04\xf6\xb6\x35\xf5\x2c\x70\xd6\x0a\xba\x5a\x5b\xae\x1b\x8b\x6a\x6a\x3e\xa7\x4d\x8f\x29\xf3\xff\xa1\x7f\x49\x11\x2d\xe1\x7f\xa7\xe6\x3f\x01\x00\x00\xff\xff\x35\x36\xf6\x96\x8b\x06\x00\x00")

func test_certsTestuserClientKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTestuserClientKey,
		"test_certs/testuser.client.key",
	)
}

func test_certsTestuserClientKey() (*asset, error) {
	bytes, err := test_certsTestuserClientKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/testuser.client.key", size: 1675, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"test_certs/ca.crt":              test_certsCaCrt,
	"test_certs/ca.key":              test_certsCaKey,
	"test_certs/node.client.crt":     test_certsNodeClientCrt,
	"test_certs/node.client.key":     test_certsNodeClientKey,
	"test_certs/node.server.crt":     test_certsNodeServerCrt,
	"test_certs/node.server.key":     test_certsNodeServerKey,
	"test_certs/root.client.crt":     test_certsRootClientCrt,
	"test_certs/root.client.key":     test_certsRootClientKey,
	"test_certs/testuser.client.crt": test_certsTestuserClientCrt,
	"test_certs/testuser.client.key": test_certsTestuserClientKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"test_certs": {nil, map[string]*bintree{
		"ca.crt":              {test_certsCaCrt, map[string]*bintree{}},
		"ca.key":              {test_certsCaKey, map[string]*bintree{}},
		"node.client.crt":     {test_certsNodeClientCrt, map[string]*bintree{}},
		"node.client.key":     {test_certsNodeClientKey, map[string]*bintree{}},
		"node.server.crt":     {test_certsNodeServerCrt, map[string]*bintree{}},
		"node.server.key":     {test_certsNodeServerKey, map[string]*bintree{}},
		"root.client.crt":     {test_certsRootClientCrt, map[string]*bintree{}},
		"root.client.key":     {test_certsRootClientKey, map[string]*bintree{}},
		"testuser.client.crt": {test_certsTestuserClientCrt, map[string]*bintree{}},
		"testuser.client.key": {test_certsTestuserClientKey, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
