try-import %workspace%/.bazelrc.user

build --symlink_prefix=_bazel/ --ui_event_filters=-DEBUG --define gotags=bazel,crdb_test_off,gss --experimental_proto_descriptor_sets_include_source_info --incompatible_strict_action_env
test --config=test
build:with_ui --define cockroach_with_ui=y
build:test --define gotags=bazel,crdb_test,gss
# Certain time based fail if UTC isn't the default timezone (see #25064).
# CRDB sets time.Local=time.UTC, which should also satisfy these tests (plus I
# couldn't reproduce the failure years later), but let's not rely on that - so
# we set the TZ to UTC explicitly.
build:race --@io_bazel_rules_go//go/config:race --test_env=GORACE=halt_on_error=1 --test_sharding_strategy=disabled
test:test --test_env=TZ=
query --ui_event_filters=-DEBUG

# CI should always run with `--config=ci`.
build:ci --experimental_convenience_symlinks=ignore
# Set `-test.v` in Go tests.
# Ref: https://github.com/bazelbuild/rules_go/pull/2456
test:ci --test_env=GO_TEST_WRAP_TESTV=1
# Dump all output for failed tests to the build log.
test:ci --test_output=errors
# Put all tmp artifacts in /artifacts/tmp.
test:ci --test_tmpdir=/artifacts/tmp

build:cross --stamp
build:cross --host_crosstool_top=@toolchain_cross_x86_64-unknown-linux-gnu//:suite
build:cross --define cockroach_cross=y

# cross-compilation configurations. Add e.g. --config=crosslinux to turn these on
# TODO(ricky): Having to specify both the `platform` and the `crosstool_top` is
# weird, but I think `rules_foreign_cc` doesn't play too nicely with `--platforms`?
build:crosslinux --platforms=//build/toolchains:cross_linux
build:crosslinux --crosstool_top=@toolchain_cross_x86_64-unknown-linux-gnu//:suite
build:crosslinux '--workspace_status_command=./build/bazelutil/stamp.sh x86_64-pc-linux-gnu'
build:crosslinux --config=cross
build:crosswindows --platforms=//build/toolchains:cross_windows
build:crosswindows --crosstool_top=@toolchain_cross_x86_64-w64-mingw32//:suite
build:crosswindows '--workspace_status_command=./build/bazelutil/stamp.sh x86_64-w64-mingw32'
build:crosswindows --config=cross
build:crossmacos --platforms=//build/toolchains:cross_macos
build:crossmacos --crosstool_top=@toolchain_cross_x86_64-apple-darwin19//:suite
build:crossmacos '--workspace_status_command=./build/bazelutil/stamp.sh x86_64-apple-darwin19'
build:crossmacos --config=cross
build:crosslinuxarm --platforms=//build/toolchains:cross_linux_arm
build:crosslinuxarm --crosstool_top=@toolchain_cross_aarch64-unknown-linux-gnu//:suite
build:crosslinuxarm '--workspace_status_command=./build/bazelutil/stamp.sh aarch64-unknown-linux-gnu'
build:crosslinuxarm --config=cross

# developer configurations. Add e.g. --config=devdarwinx86_64 to turn these on.
build:devdarwinx86_64 --crosstool_top=@toolchain_dev_darwin_x86-64//:suite
# NOTE(ricky): This is consumed in `BUILD` files (see
# `build/toolchains/BUILD.bazel`).
build:devdarwinx86_64 --config=dev
build:dev --define cockroach_bazel_dev=y
build:dev --stamp --workspace_status_command=./build/bazelutil/stamp.sh

# vi: ft=sh
