build --define gotags=bazel,gss
build --experimental_proto_descriptor_sets_include_source_info
build --incompatible_strict_action_env --incompatible_enable_cc_toolchain_resolution
build --symlink_prefix=_bazel/
test --config=test --experimental_ui_max_stdouterr_bytes=10485760
build:with_ui --define cockroach_with_ui=y
build:test --define crdb_test=y
build:race --@io_bazel_rules_go//go/config:race --test_env=GORACE=halt_on_error=1 --test_sharding_strategy=disabled
test:test --test_env=TZ=
test:race --test_timeout=1200,6000,18000,72000

build --ui_event_filters=-DEBUG
query --ui_event_filters=-DEBUG

# CI should always run with `--config=ci`.
build:ci --experimental_convenience_symlinks=ignore
# Set `-test.v` in Go tests.
# Ref: https://github.com/bazelbuild/rules_go/pull/2456
test:ci --test_env=GO_TEST_WRAP_TESTV=1
# Dump all output for failed tests to the build log.
test:ci --test_output=errors
# Put all tmp artifacts in /artifacts/tmp.
test:ci --test_tmpdir=/artifacts/tmp

build:cross --stamp
build:cross --define cockroach_cross=y

# Cross-compilation configurations. Add e.g. --config=crosslinux to turn these on.
build:crosslinux --platforms=//build/toolchains:cross_linux
build:crosslinux '--workspace_status_command=./build/bazelutil/stamp.sh x86_64-pc-linux-gnu'
build:crosslinux --config=cross
build:crosswindows --platforms=//build/toolchains:cross_windows
build:crosswindows '--workspace_status_command=./build/bazelutil/stamp.sh x86_64-w64-mingw32'
build:crosswindows --config=cross
build:crossmacos --platforms=//build/toolchains:cross_macos
build:crossmacos '--workspace_status_command=./build/bazelutil/stamp.sh x86_64-apple-darwin19'
build:crossmacos --config=cross
build:crosslinuxarm --platforms=//build/toolchains:cross_linux_arm
build:crosslinuxarm '--workspace_status_command=./build/bazelutil/stamp.sh aarch64-unknown-linux-gnu'
build:crosslinuxarm --config=cross

# Developer configurations. Add e.g. --config=devdarwinx86_64 to turn these on.
# NB: This is consumed in `BUILD` files (see build/toolchains/BUILD.bazel).
build:devdarwinx86_64 --platforms=//build/toolchains:darwin_x86_64
build:devdarwinx86_64 --config=dev
build:dev --define cockroach_bazel_dev=y
build:dev --stamp --workspace_status_command=./build/bazelutil/stamp.sh
build:dev --action_env=PATH
build:dev --host_action_env=PATH

build:nonogo --define cockroach_nonogo=y

try-import %workspace%/.bazelrc.user

# vi: ft=sh
