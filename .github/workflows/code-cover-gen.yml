name: PR code coverage (generate)
on:
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches: [ master ]

jobs:
  code-cover-gen:
    runs-on: ubuntu-latest
    env:
      PR: ${{ github.event.pull_request.number }}
      HEAD_SHA: ${{ github.event.pull_request.head.sha }}
      GH_TOKEN: ${{ github.token }}
      FETCH_DEPTH: 15
    steps:
      - uses: actions/checkout@v3
        with:
          # By default, checkout merges the PR into the current master.
          # Instead, we want to check out the PR as is.
          ref: ${{ github.event.pull_request.head.sha }}
          # Fetching the entire history is much slower; we only fetch the last
          # 15 commits. As such, we don't support PRs with 15 commits or more
          # (we cannot get to the "base" commit).
          fetch-depth: ${{ env.FETCH_DEPTH }}

      - name: Set up Bazel cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-    

      - name: Get list of changed packages
        shell: bash
        run: |
          set -euxo pipefail
          
          MAX_CHANGED_PKGS=20
          FETCH_DEPTH=${{ env.FETCH_DEPTH }}
          mkdir -p artifacts
          
          skip() {
            echo "Skipping code coverage on PR #$PR: $1"
            # Generate the json files with an error (which will show up in Reviewable).
            jq -n --arg err "$1" '{error: $err}' > artifacts/cover-${PR}-${HEAD_SHA}.json 
            if [ -n "${BASE_SHA:-}" ]; then
              jq -n --arg err "$1" '{error: $err}' > artifacts/cover-${PR}-${BASE_SHA}.json 
            fi
            echo "SKIP=true" >> "${GITHUB_ENV}"
            exit 0
          }
          
          # To get the base commit, we get the number of commits in the PR.
          # Note that github.event.pull_request.base.sha is not what we want,
          # that is the tip of master and not necessarily the PR fork point.
          NUM_COMMITS=$(gh pr view $PR --json commits --jq '.commits | length')
          
          # The number of commits bust be below the checkout fetch-depth.
          if [ ${NUM_COMMITS} -ge ${FETCH_DEPTH} ]; then
            skip "too many commits (${NUM_COMMITS})"
          fi
          BASE_SHA=$(git rev-parse HEAD~${NUM_COMMITS})
          CHANGED_PKGS=$(build/ghactions/changed-go-pkgs.sh ${BASE_SHA} ${HEAD_SHA})
          NUM_CHANGED_PKGS=$(echo "${CHANGED_PKGS}" | wc -w)
          if [ ${NUM_CHANGED_PKGS} -gt ${MAX_CHANGED_PKGS} ]; then
            skip "too many changed packages (${NUM_CHANGED_PKGS})"
          fi
          echo "BASE_SHA=${BASE_SHA}" >> "${GITHUB_ENV}"
          echo "CHANGED_PKGS=${CHANGED_PKGS}" >> "${GITHUB_ENV}"

      - name: Run "after" test coverage
        if: env.SKIP != 'true'
        shell: bash
        run: |
          set -euxo pipefail
          CHANGED_PKGS='${{ env.CHANGED_PKGS }}'
          # Make a copy of the script so that the "before" run below uses the
          # same version.
          cp build/ghactions/pr-codecov-run-tests.sh ${RUNNER_TEMP}/
          ${RUNNER_TEMP}/pr-codecov-run-tests.sh artifacts/cover-${PR}-${HEAD_SHA}.json "${CHANGED_PKGS}"

      - name: Run "before" test coverage
        if: env.SKIP != 'true'
        shell: bash
        run: |
          set -euxo pipefail
          BASE_SHA='${{ env.BASE_SHA }}'
          CHANGED_PKGS='${{ env.CHANGED_PKGS }}'
          git checkout -f ${BASE_SHA}
          ${RUNNER_TEMP}/pr-codecov-run-tests.sh artifacts/cover-${PR}-${BASE_SHA}.json "${CHANGED_PKGS}"

      - name: Upload artifacts
        # Note: we want to upload artifacts even if we skipped the steps above.
        # See the skip function in the "Get list of changed packages" step.
        uses: actions/upload-artifact@v2
        with:
          name: cover
          path: artifacts/cover-*.json
