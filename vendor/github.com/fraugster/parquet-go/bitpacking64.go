// Code generated by "bitpacking_gen.go"; DO NOT EDIT.

package goparquet

type (
	unpack8int64Func func([]byte) [8]int64
	pack8int64Func   func([8]int64) []byte
)

var unpack8Int64FuncByWidth = [65]unpack8int64Func{
	unpack8int64_0,
	unpack8int64_1,
	unpack8int64_2,
	unpack8int64_3,
	unpack8int64_4,
	unpack8int64_5,
	unpack8int64_6,
	unpack8int64_7,
	unpack8int64_8,
	unpack8int64_9,
	unpack8int64_10,
	unpack8int64_11,
	unpack8int64_12,
	unpack8int64_13,
	unpack8int64_14,
	unpack8int64_15,
	unpack8int64_16,
	unpack8int64_17,
	unpack8int64_18,
	unpack8int64_19,
	unpack8int64_20,
	unpack8int64_21,
	unpack8int64_22,
	unpack8int64_23,
	unpack8int64_24,
	unpack8int64_25,
	unpack8int64_26,
	unpack8int64_27,
	unpack8int64_28,
	unpack8int64_29,
	unpack8int64_30,
	unpack8int64_31,
	unpack8int64_32,
	unpack8int64_33,
	unpack8int64_34,
	unpack8int64_35,
	unpack8int64_36,
	unpack8int64_37,
	unpack8int64_38,
	unpack8int64_39,
	unpack8int64_40,
	unpack8int64_41,
	unpack8int64_42,
	unpack8int64_43,
	unpack8int64_44,
	unpack8int64_45,
	unpack8int64_46,
	unpack8int64_47,
	unpack8int64_48,
	unpack8int64_49,
	unpack8int64_50,
	unpack8int64_51,
	unpack8int64_52,
	unpack8int64_53,
	unpack8int64_54,
	unpack8int64_55,
	unpack8int64_56,
	unpack8int64_57,
	unpack8int64_58,
	unpack8int64_59,
	unpack8int64_60,
	unpack8int64_61,
	unpack8int64_62,
	unpack8int64_63,
	unpack8int64_64,
}
var pack8Int64FuncByWidth = [65]pack8int64Func{
	pack8int64_0,
	pack8int64_1,
	pack8int64_2,
	pack8int64_3,
	pack8int64_4,
	pack8int64_5,
	pack8int64_6,
	pack8int64_7,
	pack8int64_8,
	pack8int64_9,
	pack8int64_10,
	pack8int64_11,
	pack8int64_12,
	pack8int64_13,
	pack8int64_14,
	pack8int64_15,
	pack8int64_16,
	pack8int64_17,
	pack8int64_18,
	pack8int64_19,
	pack8int64_20,
	pack8int64_21,
	pack8int64_22,
	pack8int64_23,
	pack8int64_24,
	pack8int64_25,
	pack8int64_26,
	pack8int64_27,
	pack8int64_28,
	pack8int64_29,
	pack8int64_30,
	pack8int64_31,
	pack8int64_32,
	pack8int64_33,
	pack8int64_34,
	pack8int64_35,
	pack8int64_36,
	pack8int64_37,
	pack8int64_38,
	pack8int64_39,
	pack8int64_40,
	pack8int64_41,
	pack8int64_42,
	pack8int64_43,
	pack8int64_44,
	pack8int64_45,
	pack8int64_46,
	pack8int64_47,
	pack8int64_48,
	pack8int64_49,
	pack8int64_50,
	pack8int64_51,
	pack8int64_52,
	pack8int64_53,
	pack8int64_54,
	pack8int64_55,
	pack8int64_56,
	pack8int64_57,
	pack8int64_58,
	pack8int64_59,
	pack8int64_60,
	pack8int64_61,
	pack8int64_62,
	pack8int64_63,
	pack8int64_64,
}

func unpack8int64_0(_ []byte) (a [8]int64) {
	return a
}

func pack8int64_0(_ [8]int64) []byte {
	return []byte{}
}

func unpack8int64_1(data []byte) (a [8]int64) {
	_ = data[0]
	a[0] = int64(uint64((data[0]>>0)&1) << 0)
	a[1] = int64(uint64((data[0]>>1)&1) << 0)
	a[2] = int64(uint64((data[0]>>2)&1) << 0)
	a[3] = int64(uint64((data[0]>>3)&1) << 0)
	a[4] = int64(uint64((data[0]>>4)&1) << 0)
	a[5] = int64(uint64((data[0]>>5)&1) << 0)
	a[6] = int64(uint64((data[0]>>6)&1) << 0)
	a[7] = int64(uint64((data[0]>>7)&1) << 0)
	return
}

func pack8int64_1(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0])<<0 | uint64(data[1])<<1 | uint64(data[2])<<2 | uint64(data[3])<<3 | uint64(data[4])<<4 | uint64(data[5])<<5 | uint64(data[6])<<6 | uint64(data[7])<<7),
	}
}

func unpack8int64_2(data []byte) (a [8]int64) {
	_ = data[1]
	a[0] = int64(uint64((data[0]>>0)&3) << 0)
	a[1] = int64(uint64((data[0]>>2)&3) << 0)
	a[2] = int64(uint64((data[0]>>4)&3) << 0)
	a[3] = int64(uint64((data[0]>>6)&3) << 0)
	a[4] = int64(uint64((data[1]>>0)&3) << 0)
	a[5] = int64(uint64((data[1]>>2)&3) << 0)
	a[6] = int64(uint64((data[1]>>4)&3) << 0)
	a[7] = int64(uint64((data[1]>>6)&3) << 0)
	return
}

func pack8int64_2(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0])<<0 | uint64(data[1])<<2 | uint64(data[2])<<4 | uint64(data[3])<<6),
		byte(uint64(data[4])<<0 | uint64(data[5])<<2 | uint64(data[6])<<4 | uint64(data[7])<<6),
	}
}

func unpack8int64_3(data []byte) (a [8]int64) {
	_ = data[2]
	a[0] = int64(uint64((data[0]>>0)&7) << 0)
	a[1] = int64(uint64((data[0]>>3)&7) << 0)
	a[2] = int64(uint64((data[0]>>6)&3)<<0 | uint64((data[1]>>0)&1)<<2)
	a[3] = int64(uint64((data[1]>>1)&7) << 0)
	a[4] = int64(uint64((data[1]>>4)&7) << 0)
	a[5] = int64(uint64((data[1]>>7)&1)<<0 | uint64((data[2]>>0)&3)<<1)
	a[6] = int64(uint64((data[2]>>2)&7) << 0)
	a[7] = int64(uint64((data[2]>>5)&7) << 0)
	return
}

func pack8int64_3(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0])<<0 | uint64(data[1])<<3 | uint64(data[2])<<6),
		byte(uint64(data[2])>>2 | uint64(data[3])<<1 | uint64(data[4])<<4 | uint64(data[5])<<7),
		byte(uint64(data[5])>>1 | uint64(data[6])<<2 | uint64(data[7])<<5),
	}
}

func unpack8int64_4(data []byte) (a [8]int64) {
	_ = data[3]
	a[0] = int64(uint64((data[0]>>0)&15) << 0)
	a[1] = int64(uint64((data[0]>>4)&15) << 0)
	a[2] = int64(uint64((data[1]>>0)&15) << 0)
	a[3] = int64(uint64((data[1]>>4)&15) << 0)
	a[4] = int64(uint64((data[2]>>0)&15) << 0)
	a[5] = int64(uint64((data[2]>>4)&15) << 0)
	a[6] = int64(uint64((data[3]>>0)&15) << 0)
	a[7] = int64(uint64((data[3]>>4)&15) << 0)
	return
}

func pack8int64_4(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0])<<0 | uint64(data[1])<<4),
		byte(uint64(data[2])<<0 | uint64(data[3])<<4),
		byte(uint64(data[4])<<0 | uint64(data[5])<<4),
		byte(uint64(data[6])<<0 | uint64(data[7])<<4),
	}
}

func unpack8int64_5(data []byte) (a [8]int64) {
	_ = data[4]
	a[0] = int64(uint64((data[0]>>0)&31) << 0)
	a[1] = int64(uint64((data[0]>>5)&7)<<0 | uint64((data[1]>>0)&3)<<3)
	a[2] = int64(uint64((data[1]>>2)&31) << 0)
	a[3] = int64(uint64((data[1]>>7)&1)<<0 | uint64((data[2]>>0)&15)<<1)
	a[4] = int64(uint64((data[2]>>4)&15)<<0 | uint64((data[3]>>0)&1)<<4)
	a[5] = int64(uint64((data[3]>>1)&31) << 0)
	a[6] = int64(uint64((data[3]>>6)&3)<<0 | uint64((data[4]>>0)&7)<<2)
	a[7] = int64(uint64((data[4]>>3)&31) << 0)
	return
}

func pack8int64_5(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0])<<0 | uint64(data[1])<<5),
		byte(uint64(data[1])>>3 | uint64(data[2])<<2 | uint64(data[3])<<7),
		byte(uint64(data[3])>>1 | uint64(data[4])<<4),
		byte(uint64(data[4])>>4 | uint64(data[5])<<1 | uint64(data[6])<<6),
		byte(uint64(data[6])>>2 | uint64(data[7])<<3),
	}
}

func unpack8int64_6(data []byte) (a [8]int64) {
	_ = data[5]
	a[0] = int64(uint64((data[0]>>0)&63) << 0)
	a[1] = int64(uint64((data[0]>>6)&3)<<0 | uint64((data[1]>>0)&15)<<2)
	a[2] = int64(uint64((data[1]>>4)&15)<<0 | uint64((data[2]>>0)&3)<<4)
	a[3] = int64(uint64((data[2]>>2)&63) << 0)
	a[4] = int64(uint64((data[3]>>0)&63) << 0)
	a[5] = int64(uint64((data[3]>>6)&3)<<0 | uint64((data[4]>>0)&15)<<2)
	a[6] = int64(uint64((data[4]>>4)&15)<<0 | uint64((data[5]>>0)&3)<<4)
	a[7] = int64(uint64((data[5]>>2)&63) << 0)
	return
}

func pack8int64_6(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0])<<0 | uint64(data[1])<<6),
		byte(uint64(data[1])>>2 | uint64(data[2])<<4),
		byte(uint64(data[2])>>4 | uint64(data[3])<<2),
		byte(uint64(data[4])<<0 | uint64(data[5])<<6),
		byte(uint64(data[5])>>2 | uint64(data[6])<<4),
		byte(uint64(data[6])>>4 | uint64(data[7])<<2),
	}
}

func unpack8int64_7(data []byte) (a [8]int64) {
	_ = data[6]
	a[0] = int64(uint64((data[0]>>0)&127) << 0)
	a[1] = int64(uint64((data[0]>>7)&1)<<0 | uint64((data[1]>>0)&63)<<1)
	a[2] = int64(uint64((data[1]>>6)&3)<<0 | uint64((data[2]>>0)&31)<<2)
	a[3] = int64(uint64((data[2]>>5)&7)<<0 | uint64((data[3]>>0)&15)<<3)
	a[4] = int64(uint64((data[3]>>4)&15)<<0 | uint64((data[4]>>0)&7)<<4)
	a[5] = int64(uint64((data[4]>>3)&31)<<0 | uint64((data[5]>>0)&3)<<5)
	a[6] = int64(uint64((data[5]>>2)&63)<<0 | uint64((data[6]>>0)&1)<<6)
	a[7] = int64(uint64((data[6]>>1)&127) << 0)
	return
}

func pack8int64_7(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0])<<0 | uint64(data[1])<<7),
		byte(uint64(data[1])>>1 | uint64(data[2])<<6),
		byte(uint64(data[2])>>2 | uint64(data[3])<<5),
		byte(uint64(data[3])>>3 | uint64(data[4])<<4),
		byte(uint64(data[4])>>4 | uint64(data[5])<<3),
		byte(uint64(data[5])>>5 | uint64(data[6])<<2),
		byte(uint64(data[6])>>6 | uint64(data[7])<<1),
	}
}

func unpack8int64_8(data []byte) (a [8]int64) {
	_ = data[7]
	a[0] = int64(uint64((data[0]>>0)&255) << 0)
	a[1] = int64(uint64((data[1]>>0)&255) << 0)
	a[2] = int64(uint64((data[2]>>0)&255) << 0)
	a[3] = int64(uint64((data[3]>>0)&255) << 0)
	a[4] = int64(uint64((data[4]>>0)&255) << 0)
	a[5] = int64(uint64((data[5]>>0)&255) << 0)
	a[6] = int64(uint64((data[6]>>0)&255) << 0)
	a[7] = int64(uint64((data[7]>>0)&255) << 0)
	return
}

func pack8int64_8(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[1]) << 0),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[3]) << 0),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[5]) << 0),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[7]) << 0),
	}
}

func unpack8int64_9(data []byte) (a [8]int64) {
	_ = data[8]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&1)<<8)
	a[1] = int64(uint64((data[1]>>1)&127)<<0 | uint64((data[2]>>0)&3)<<7)
	a[2] = int64(uint64((data[2]>>2)&63)<<0 | uint64((data[3]>>0)&7)<<6)
	a[3] = int64(uint64((data[3]>>3)&31)<<0 | uint64((data[4]>>0)&15)<<5)
	a[4] = int64(uint64((data[4]>>4)&15)<<0 | uint64((data[5]>>0)&31)<<4)
	a[5] = int64(uint64((data[5]>>5)&7)<<0 | uint64((data[6]>>0)&63)<<3)
	a[6] = int64(uint64((data[6]>>6)&3)<<0 | uint64((data[7]>>0)&127)<<2)
	a[7] = int64(uint64((data[7]>>7)&1)<<0 | uint64((data[8]>>0)&255)<<1)
	return
}

func pack8int64_9(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0])>>8 | uint64(data[1])<<1),
		byte(uint64(data[1])>>7 | uint64(data[2])<<2),
		byte(uint64(data[2])>>6 | uint64(data[3])<<3),
		byte(uint64(data[3])>>5 | uint64(data[4])<<4),
		byte(uint64(data[4])>>4 | uint64(data[5])<<5),
		byte(uint64(data[5])>>3 | uint64(data[6])<<6),
		byte(uint64(data[6])>>2 | uint64(data[7])<<7),
		byte(uint64(data[7]) >> 1),
	}
}

func unpack8int64_10(data []byte) (a [8]int64) {
	_ = data[9]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&3)<<8)
	a[1] = int64(uint64((data[1]>>2)&63)<<0 | uint64((data[2]>>0)&15)<<6)
	a[2] = int64(uint64((data[2]>>4)&15)<<0 | uint64((data[3]>>0)&63)<<4)
	a[3] = int64(uint64((data[3]>>6)&3)<<0 | uint64((data[4]>>0)&255)<<2)
	a[4] = int64(uint64((data[5]>>0)&255)<<0 | uint64((data[6]>>0)&3)<<8)
	a[5] = int64(uint64((data[6]>>2)&63)<<0 | uint64((data[7]>>0)&15)<<6)
	a[6] = int64(uint64((data[7]>>4)&15)<<0 | uint64((data[8]>>0)&63)<<4)
	a[7] = int64(uint64((data[8]>>6)&3)<<0 | uint64((data[9]>>0)&255)<<2)
	return
}

func pack8int64_10(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0])>>8 | uint64(data[1])<<2),
		byte(uint64(data[1])>>6 | uint64(data[2])<<4),
		byte(uint64(data[2])>>4 | uint64(data[3])<<6),
		byte(uint64(data[3]) >> 2),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4])>>8 | uint64(data[5])<<2),
		byte(uint64(data[5])>>6 | uint64(data[6])<<4),
		byte(uint64(data[6])>>4 | uint64(data[7])<<6),
		byte(uint64(data[7]) >> 2),
	}
}

func unpack8int64_11(data []byte) (a [8]int64) {
	_ = data[10]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&7)<<8)
	a[1] = int64(uint64((data[1]>>3)&31)<<0 | uint64((data[2]>>0)&63)<<5)
	a[2] = int64(uint64((data[2]>>6)&3)<<0 | uint64((data[3]>>0)&255)<<2 | uint64((data[4]>>0)&1)<<10)
	a[3] = int64(uint64((data[4]>>1)&127)<<0 | uint64((data[5]>>0)&15)<<7)
	a[4] = int64(uint64((data[5]>>4)&15)<<0 | uint64((data[6]>>0)&127)<<4)
	a[5] = int64(uint64((data[6]>>7)&1)<<0 | uint64((data[7]>>0)&255)<<1 | uint64((data[8]>>0)&3)<<9)
	a[6] = int64(uint64((data[8]>>2)&63)<<0 | uint64((data[9]>>0)&31)<<6)
	a[7] = int64(uint64((data[9]>>5)&7)<<0 | uint64((data[10]>>0)&255)<<3)
	return
}

func pack8int64_11(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0])>>8 | uint64(data[1])<<3),
		byte(uint64(data[1])>>5 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2])>>10 | uint64(data[3])<<1),
		byte(uint64(data[3])>>7 | uint64(data[4])<<4),
		byte(uint64(data[4])>>4 | uint64(data[5])<<7),
		byte(uint64(data[5]) >> 1),
		byte(uint64(data[5])>>9 | uint64(data[6])<<2),
		byte(uint64(data[6])>>6 | uint64(data[7])<<5),
		byte(uint64(data[7]) >> 3),
	}
}

func unpack8int64_12(data []byte) (a [8]int64) {
	_ = data[11]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&15)<<8)
	a[1] = int64(uint64((data[1]>>4)&15)<<0 | uint64((data[2]>>0)&255)<<4)
	a[2] = int64(uint64((data[3]>>0)&255)<<0 | uint64((data[4]>>0)&15)<<8)
	a[3] = int64(uint64((data[4]>>4)&15)<<0 | uint64((data[5]>>0)&255)<<4)
	a[4] = int64(uint64((data[6]>>0)&255)<<0 | uint64((data[7]>>0)&15)<<8)
	a[5] = int64(uint64((data[7]>>4)&15)<<0 | uint64((data[8]>>0)&255)<<4)
	a[6] = int64(uint64((data[9]>>0)&255)<<0 | uint64((data[10]>>0)&15)<<8)
	a[7] = int64(uint64((data[10]>>4)&15)<<0 | uint64((data[11]>>0)&255)<<4)
	return
}

func pack8int64_12(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0])>>8 | uint64(data[1])<<4),
		byte(uint64(data[1]) >> 4),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2])>>8 | uint64(data[3])<<4),
		byte(uint64(data[3]) >> 4),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4])>>8 | uint64(data[5])<<4),
		byte(uint64(data[5]) >> 4),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6])>>8 | uint64(data[7])<<4),
		byte(uint64(data[7]) >> 4),
	}
}

func unpack8int64_13(data []byte) (a [8]int64) {
	_ = data[12]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&31)<<8)
	a[1] = int64(uint64((data[1]>>5)&7)<<0 | uint64((data[2]>>0)&255)<<3 | uint64((data[3]>>0)&3)<<11)
	a[2] = int64(uint64((data[3]>>2)&63)<<0 | uint64((data[4]>>0)&127)<<6)
	a[3] = int64(uint64((data[4]>>7)&1)<<0 | uint64((data[5]>>0)&255)<<1 | uint64((data[6]>>0)&15)<<9)
	a[4] = int64(uint64((data[6]>>4)&15)<<0 | uint64((data[7]>>0)&255)<<4 | uint64((data[8]>>0)&1)<<12)
	a[5] = int64(uint64((data[8]>>1)&127)<<0 | uint64((data[9]>>0)&63)<<7)
	a[6] = int64(uint64((data[9]>>6)&3)<<0 | uint64((data[10]>>0)&255)<<2 | uint64((data[11]>>0)&7)<<10)
	a[7] = int64(uint64((data[11]>>3)&31)<<0 | uint64((data[12]>>0)&255)<<5)
	return
}

func pack8int64_13(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0])>>8 | uint64(data[1])<<5),
		byte(uint64(data[1]) >> 3),
		byte(uint64(data[1])>>11 | uint64(data[2])<<2),
		byte(uint64(data[2])>>6 | uint64(data[3])<<7),
		byte(uint64(data[3]) >> 1),
		byte(uint64(data[3])>>9 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4])>>12 | uint64(data[5])<<1),
		byte(uint64(data[5])>>7 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6])>>10 | uint64(data[7])<<3),
		byte(uint64(data[7]) >> 5),
	}
}

func unpack8int64_14(data []byte) (a [8]int64) {
	_ = data[13]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&63)<<8)
	a[1] = int64(uint64((data[1]>>6)&3)<<0 | uint64((data[2]>>0)&255)<<2 | uint64((data[3]>>0)&15)<<10)
	a[2] = int64(uint64((data[3]>>4)&15)<<0 | uint64((data[4]>>0)&255)<<4 | uint64((data[5]>>0)&3)<<12)
	a[3] = int64(uint64((data[5]>>2)&63)<<0 | uint64((data[6]>>0)&255)<<6)
	a[4] = int64(uint64((data[7]>>0)&255)<<0 | uint64((data[8]>>0)&63)<<8)
	a[5] = int64(uint64((data[8]>>6)&3)<<0 | uint64((data[9]>>0)&255)<<2 | uint64((data[10]>>0)&15)<<10)
	a[6] = int64(uint64((data[10]>>4)&15)<<0 | uint64((data[11]>>0)&255)<<4 | uint64((data[12]>>0)&3)<<12)
	a[7] = int64(uint64((data[12]>>2)&63)<<0 | uint64((data[13]>>0)&255)<<6)
	return
}

func pack8int64_14(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0])>>8 | uint64(data[1])<<6),
		byte(uint64(data[1]) >> 2),
		byte(uint64(data[1])>>10 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2])>>12 | uint64(data[3])<<2),
		byte(uint64(data[3]) >> 6),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4])>>8 | uint64(data[5])<<6),
		byte(uint64(data[5]) >> 2),
		byte(uint64(data[5])>>10 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6])>>12 | uint64(data[7])<<2),
		byte(uint64(data[7]) >> 6),
	}
}

func unpack8int64_15(data []byte) (a [8]int64) {
	_ = data[14]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&127)<<8)
	a[1] = int64(uint64((data[1]>>7)&1)<<0 | uint64((data[2]>>0)&255)<<1 | uint64((data[3]>>0)&63)<<9)
	a[2] = int64(uint64((data[3]>>6)&3)<<0 | uint64((data[4]>>0)&255)<<2 | uint64((data[5]>>0)&31)<<10)
	a[3] = int64(uint64((data[5]>>5)&7)<<0 | uint64((data[6]>>0)&255)<<3 | uint64((data[7]>>0)&15)<<11)
	a[4] = int64(uint64((data[7]>>4)&15)<<0 | uint64((data[8]>>0)&255)<<4 | uint64((data[9]>>0)&7)<<12)
	a[5] = int64(uint64((data[9]>>3)&31)<<0 | uint64((data[10]>>0)&255)<<5 | uint64((data[11]>>0)&3)<<13)
	a[6] = int64(uint64((data[11]>>2)&63)<<0 | uint64((data[12]>>0)&255)<<6 | uint64((data[13]>>0)&1)<<14)
	a[7] = int64(uint64((data[13]>>1)&127)<<0 | uint64((data[14]>>0)&255)<<7)
	return
}

func pack8int64_15(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0])>>8 | uint64(data[1])<<7),
		byte(uint64(data[1]) >> 1),
		byte(uint64(data[1])>>9 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2])>>10 | uint64(data[3])<<5),
		byte(uint64(data[3]) >> 3),
		byte(uint64(data[3])>>11 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4])>>12 | uint64(data[5])<<3),
		byte(uint64(data[5]) >> 5),
		byte(uint64(data[5])>>13 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6])>>14 | uint64(data[7])<<1),
		byte(uint64(data[7]) >> 7),
	}
}

func unpack8int64_16(data []byte) (a [8]int64) {
	_ = data[15]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8)
	a[1] = int64(uint64((data[2]>>0)&255)<<0 | uint64((data[3]>>0)&255)<<8)
	a[2] = int64(uint64((data[4]>>0)&255)<<0 | uint64((data[5]>>0)&255)<<8)
	a[3] = int64(uint64((data[6]>>0)&255)<<0 | uint64((data[7]>>0)&255)<<8)
	a[4] = int64(uint64((data[8]>>0)&255)<<0 | uint64((data[9]>>0)&255)<<8)
	a[5] = int64(uint64((data[10]>>0)&255)<<0 | uint64((data[11]>>0)&255)<<8)
	a[6] = int64(uint64((data[12]>>0)&255)<<0 | uint64((data[13]>>0)&255)<<8)
	a[7] = int64(uint64((data[14]>>0)&255)<<0 | uint64((data[15]>>0)&255)<<8)
	return
}

func pack8int64_16(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[1]) << 0),
		byte(uint64(data[1]) >> 8),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[3]) << 0),
		byte(uint64(data[3]) >> 8),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[5]) << 0),
		byte(uint64(data[5]) >> 8),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[7]) << 0),
		byte(uint64(data[7]) >> 8),
	}
}

func unpack8int64_17(data []byte) (a [8]int64) {
	_ = data[16]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&1)<<16)
	a[1] = int64(uint64((data[2]>>1)&127)<<0 | uint64((data[3]>>0)&255)<<7 | uint64((data[4]>>0)&3)<<15)
	a[2] = int64(uint64((data[4]>>2)&63)<<0 | uint64((data[5]>>0)&255)<<6 | uint64((data[6]>>0)&7)<<14)
	a[3] = int64(uint64((data[6]>>3)&31)<<0 | uint64((data[7]>>0)&255)<<5 | uint64((data[8]>>0)&15)<<13)
	a[4] = int64(uint64((data[8]>>4)&15)<<0 | uint64((data[9]>>0)&255)<<4 | uint64((data[10]>>0)&31)<<12)
	a[5] = int64(uint64((data[10]>>5)&7)<<0 | uint64((data[11]>>0)&255)<<3 | uint64((data[12]>>0)&63)<<11)
	a[6] = int64(uint64((data[12]>>6)&3)<<0 | uint64((data[13]>>0)&255)<<2 | uint64((data[14]>>0)&127)<<10)
	a[7] = int64(uint64((data[14]>>7)&1)<<0 | uint64((data[15]>>0)&255)<<1 | uint64((data[16]>>0)&255)<<9)
	return
}

func pack8int64_17(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0])>>16 | uint64(data[1])<<1),
		byte(uint64(data[1]) >> 7),
		byte(uint64(data[1])>>15 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2])>>14 | uint64(data[3])<<3),
		byte(uint64(data[3]) >> 5),
		byte(uint64(data[3])>>13 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4])>>12 | uint64(data[5])<<5),
		byte(uint64(data[5]) >> 3),
		byte(uint64(data[5])>>11 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6])>>10 | uint64(data[7])<<7),
		byte(uint64(data[7]) >> 1),
		byte(uint64(data[7]) >> 9),
	}
}

func unpack8int64_18(data []byte) (a [8]int64) {
	_ = data[17]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&3)<<16)
	a[1] = int64(uint64((data[2]>>2)&63)<<0 | uint64((data[3]>>0)&255)<<6 | uint64((data[4]>>0)&15)<<14)
	a[2] = int64(uint64((data[4]>>4)&15)<<0 | uint64((data[5]>>0)&255)<<4 | uint64((data[6]>>0)&63)<<12)
	a[3] = int64(uint64((data[6]>>6)&3)<<0 | uint64((data[7]>>0)&255)<<2 | uint64((data[8]>>0)&255)<<10)
	a[4] = int64(uint64((data[9]>>0)&255)<<0 | uint64((data[10]>>0)&255)<<8 | uint64((data[11]>>0)&3)<<16)
	a[5] = int64(uint64((data[11]>>2)&63)<<0 | uint64((data[12]>>0)&255)<<6 | uint64((data[13]>>0)&15)<<14)
	a[6] = int64(uint64((data[13]>>4)&15)<<0 | uint64((data[14]>>0)&255)<<4 | uint64((data[15]>>0)&63)<<12)
	a[7] = int64(uint64((data[15]>>6)&3)<<0 | uint64((data[16]>>0)&255)<<2 | uint64((data[17]>>0)&255)<<10)
	return
}

func pack8int64_18(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0])>>16 | uint64(data[1])<<2),
		byte(uint64(data[1]) >> 6),
		byte(uint64(data[1])>>14 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2])>>12 | uint64(data[3])<<6),
		byte(uint64(data[3]) >> 2),
		byte(uint64(data[3]) >> 10),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4])>>16 | uint64(data[5])<<2),
		byte(uint64(data[5]) >> 6),
		byte(uint64(data[5])>>14 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6])>>12 | uint64(data[7])<<6),
		byte(uint64(data[7]) >> 2),
		byte(uint64(data[7]) >> 10),
	}
}

func unpack8int64_19(data []byte) (a [8]int64) {
	_ = data[18]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&7)<<16)
	a[1] = int64(uint64((data[2]>>3)&31)<<0 | uint64((data[3]>>0)&255)<<5 | uint64((data[4]>>0)&63)<<13)
	a[2] = int64(uint64((data[4]>>6)&3)<<0 | uint64((data[5]>>0)&255)<<2 | uint64((data[6]>>0)&255)<<10 | uint64((data[7]>>0)&1)<<18)
	a[3] = int64(uint64((data[7]>>1)&127)<<0 | uint64((data[8]>>0)&255)<<7 | uint64((data[9]>>0)&15)<<15)
	a[4] = int64(uint64((data[9]>>4)&15)<<0 | uint64((data[10]>>0)&255)<<4 | uint64((data[11]>>0)&127)<<12)
	a[5] = int64(uint64((data[11]>>7)&1)<<0 | uint64((data[12]>>0)&255)<<1 | uint64((data[13]>>0)&255)<<9 | uint64((data[14]>>0)&3)<<17)
	a[6] = int64(uint64((data[14]>>2)&63)<<0 | uint64((data[15]>>0)&255)<<6 | uint64((data[16]>>0)&31)<<14)
	a[7] = int64(uint64((data[16]>>5)&7)<<0 | uint64((data[17]>>0)&255)<<3 | uint64((data[18]>>0)&255)<<11)
	return
}

func pack8int64_19(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0])>>16 | uint64(data[1])<<3),
		byte(uint64(data[1]) >> 5),
		byte(uint64(data[1])>>13 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2])>>18 | uint64(data[3])<<1),
		byte(uint64(data[3]) >> 7),
		byte(uint64(data[3])>>15 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4])>>12 | uint64(data[5])<<7),
		byte(uint64(data[5]) >> 1),
		byte(uint64(data[5]) >> 9),
		byte(uint64(data[5])>>17 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6])>>14 | uint64(data[7])<<5),
		byte(uint64(data[7]) >> 3),
		byte(uint64(data[7]) >> 11),
	}
}

func unpack8int64_20(data []byte) (a [8]int64) {
	_ = data[19]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&15)<<16)
	a[1] = int64(uint64((data[2]>>4)&15)<<0 | uint64((data[3]>>0)&255)<<4 | uint64((data[4]>>0)&255)<<12)
	a[2] = int64(uint64((data[5]>>0)&255)<<0 | uint64((data[6]>>0)&255)<<8 | uint64((data[7]>>0)&15)<<16)
	a[3] = int64(uint64((data[7]>>4)&15)<<0 | uint64((data[8]>>0)&255)<<4 | uint64((data[9]>>0)&255)<<12)
	a[4] = int64(uint64((data[10]>>0)&255)<<0 | uint64((data[11]>>0)&255)<<8 | uint64((data[12]>>0)&15)<<16)
	a[5] = int64(uint64((data[12]>>4)&15)<<0 | uint64((data[13]>>0)&255)<<4 | uint64((data[14]>>0)&255)<<12)
	a[6] = int64(uint64((data[15]>>0)&255)<<0 | uint64((data[16]>>0)&255)<<8 | uint64((data[17]>>0)&15)<<16)
	a[7] = int64(uint64((data[17]>>4)&15)<<0 | uint64((data[18]>>0)&255)<<4 | uint64((data[19]>>0)&255)<<12)
	return
}

func pack8int64_20(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0])>>16 | uint64(data[1])<<4),
		byte(uint64(data[1]) >> 4),
		byte(uint64(data[1]) >> 12),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2])>>16 | uint64(data[3])<<4),
		byte(uint64(data[3]) >> 4),
		byte(uint64(data[3]) >> 12),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4])>>16 | uint64(data[5])<<4),
		byte(uint64(data[5]) >> 4),
		byte(uint64(data[5]) >> 12),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6])>>16 | uint64(data[7])<<4),
		byte(uint64(data[7]) >> 4),
		byte(uint64(data[7]) >> 12),
	}
}

func unpack8int64_21(data []byte) (a [8]int64) {
	_ = data[20]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&31)<<16)
	a[1] = int64(uint64((data[2]>>5)&7)<<0 | uint64((data[3]>>0)&255)<<3 | uint64((data[4]>>0)&255)<<11 | uint64((data[5]>>0)&3)<<19)
	a[2] = int64(uint64((data[5]>>2)&63)<<0 | uint64((data[6]>>0)&255)<<6 | uint64((data[7]>>0)&127)<<14)
	a[3] = int64(uint64((data[7]>>7)&1)<<0 | uint64((data[8]>>0)&255)<<1 | uint64((data[9]>>0)&255)<<9 | uint64((data[10]>>0)&15)<<17)
	a[4] = int64(uint64((data[10]>>4)&15)<<0 | uint64((data[11]>>0)&255)<<4 | uint64((data[12]>>0)&255)<<12 | uint64((data[13]>>0)&1)<<20)
	a[5] = int64(uint64((data[13]>>1)&127)<<0 | uint64((data[14]>>0)&255)<<7 | uint64((data[15]>>0)&63)<<15)
	a[6] = int64(uint64((data[15]>>6)&3)<<0 | uint64((data[16]>>0)&255)<<2 | uint64((data[17]>>0)&255)<<10 | uint64((data[18]>>0)&7)<<18)
	a[7] = int64(uint64((data[18]>>3)&31)<<0 | uint64((data[19]>>0)&255)<<5 | uint64((data[20]>>0)&255)<<13)
	return
}

func pack8int64_21(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0])>>16 | uint64(data[1])<<5),
		byte(uint64(data[1]) >> 3),
		byte(uint64(data[1]) >> 11),
		byte(uint64(data[1])>>19 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2])>>14 | uint64(data[3])<<7),
		byte(uint64(data[3]) >> 1),
		byte(uint64(data[3]) >> 9),
		byte(uint64(data[3])>>17 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4])>>20 | uint64(data[5])<<1),
		byte(uint64(data[5]) >> 7),
		byte(uint64(data[5])>>15 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6]) >> 10),
		byte(uint64(data[6])>>18 | uint64(data[7])<<3),
		byte(uint64(data[7]) >> 5),
		byte(uint64(data[7]) >> 13),
	}
}

func unpack8int64_22(data []byte) (a [8]int64) {
	_ = data[21]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&63)<<16)
	a[1] = int64(uint64((data[2]>>6)&3)<<0 | uint64((data[3]>>0)&255)<<2 | uint64((data[4]>>0)&255)<<10 | uint64((data[5]>>0)&15)<<18)
	a[2] = int64(uint64((data[5]>>4)&15)<<0 | uint64((data[6]>>0)&255)<<4 | uint64((data[7]>>0)&255)<<12 | uint64((data[8]>>0)&3)<<20)
	a[3] = int64(uint64((data[8]>>2)&63)<<0 | uint64((data[9]>>0)&255)<<6 | uint64((data[10]>>0)&255)<<14)
	a[4] = int64(uint64((data[11]>>0)&255)<<0 | uint64((data[12]>>0)&255)<<8 | uint64((data[13]>>0)&63)<<16)
	a[5] = int64(uint64((data[13]>>6)&3)<<0 | uint64((data[14]>>0)&255)<<2 | uint64((data[15]>>0)&255)<<10 | uint64((data[16]>>0)&15)<<18)
	a[6] = int64(uint64((data[16]>>4)&15)<<0 | uint64((data[17]>>0)&255)<<4 | uint64((data[18]>>0)&255)<<12 | uint64((data[19]>>0)&3)<<20)
	a[7] = int64(uint64((data[19]>>2)&63)<<0 | uint64((data[20]>>0)&255)<<6 | uint64((data[21]>>0)&255)<<14)
	return
}

func pack8int64_22(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0])>>16 | uint64(data[1])<<6),
		byte(uint64(data[1]) >> 2),
		byte(uint64(data[1]) >> 10),
		byte(uint64(data[1])>>18 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2]) >> 12),
		byte(uint64(data[2])>>20 | uint64(data[3])<<2),
		byte(uint64(data[3]) >> 6),
		byte(uint64(data[3]) >> 14),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4])>>16 | uint64(data[5])<<6),
		byte(uint64(data[5]) >> 2),
		byte(uint64(data[5]) >> 10),
		byte(uint64(data[5])>>18 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6]) >> 12),
		byte(uint64(data[6])>>20 | uint64(data[7])<<2),
		byte(uint64(data[7]) >> 6),
		byte(uint64(data[7]) >> 14),
	}
}

func unpack8int64_23(data []byte) (a [8]int64) {
	_ = data[22]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&127)<<16)
	a[1] = int64(uint64((data[2]>>7)&1)<<0 | uint64((data[3]>>0)&255)<<1 | uint64((data[4]>>0)&255)<<9 | uint64((data[5]>>0)&63)<<17)
	a[2] = int64(uint64((data[5]>>6)&3)<<0 | uint64((data[6]>>0)&255)<<2 | uint64((data[7]>>0)&255)<<10 | uint64((data[8]>>0)&31)<<18)
	a[3] = int64(uint64((data[8]>>5)&7)<<0 | uint64((data[9]>>0)&255)<<3 | uint64((data[10]>>0)&255)<<11 | uint64((data[11]>>0)&15)<<19)
	a[4] = int64(uint64((data[11]>>4)&15)<<0 | uint64((data[12]>>0)&255)<<4 | uint64((data[13]>>0)&255)<<12 | uint64((data[14]>>0)&7)<<20)
	a[5] = int64(uint64((data[14]>>3)&31)<<0 | uint64((data[15]>>0)&255)<<5 | uint64((data[16]>>0)&255)<<13 | uint64((data[17]>>0)&3)<<21)
	a[6] = int64(uint64((data[17]>>2)&63)<<0 | uint64((data[18]>>0)&255)<<6 | uint64((data[19]>>0)&255)<<14 | uint64((data[20]>>0)&1)<<22)
	a[7] = int64(uint64((data[20]>>1)&127)<<0 | uint64((data[21]>>0)&255)<<7 | uint64((data[22]>>0)&255)<<15)
	return
}

func pack8int64_23(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0])>>16 | uint64(data[1])<<7),
		byte(uint64(data[1]) >> 1),
		byte(uint64(data[1]) >> 9),
		byte(uint64(data[1])>>17 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2])>>18 | uint64(data[3])<<5),
		byte(uint64(data[3]) >> 3),
		byte(uint64(data[3]) >> 11),
		byte(uint64(data[3])>>19 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4])>>20 | uint64(data[5])<<3),
		byte(uint64(data[5]) >> 5),
		byte(uint64(data[5]) >> 13),
		byte(uint64(data[5])>>21 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6]) >> 14),
		byte(uint64(data[6])>>22 | uint64(data[7])<<1),
		byte(uint64(data[7]) >> 7),
		byte(uint64(data[7]) >> 15),
	}
}

func unpack8int64_24(data []byte) (a [8]int64) {
	_ = data[23]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16)
	a[1] = int64(uint64((data[3]>>0)&255)<<0 | uint64((data[4]>>0)&255)<<8 | uint64((data[5]>>0)&255)<<16)
	a[2] = int64(uint64((data[6]>>0)&255)<<0 | uint64((data[7]>>0)&255)<<8 | uint64((data[8]>>0)&255)<<16)
	a[3] = int64(uint64((data[9]>>0)&255)<<0 | uint64((data[10]>>0)&255)<<8 | uint64((data[11]>>0)&255)<<16)
	a[4] = int64(uint64((data[12]>>0)&255)<<0 | uint64((data[13]>>0)&255)<<8 | uint64((data[14]>>0)&255)<<16)
	a[5] = int64(uint64((data[15]>>0)&255)<<0 | uint64((data[16]>>0)&255)<<8 | uint64((data[17]>>0)&255)<<16)
	a[6] = int64(uint64((data[18]>>0)&255)<<0 | uint64((data[19]>>0)&255)<<8 | uint64((data[20]>>0)&255)<<16)
	a[7] = int64(uint64((data[21]>>0)&255)<<0 | uint64((data[22]>>0)&255)<<8 | uint64((data[23]>>0)&255)<<16)
	return
}

func pack8int64_24(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[1]) << 0),
		byte(uint64(data[1]) >> 8),
		byte(uint64(data[1]) >> 16),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2]) >> 16),
		byte(uint64(data[3]) << 0),
		byte(uint64(data[3]) >> 8),
		byte(uint64(data[3]) >> 16),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[5]) << 0),
		byte(uint64(data[5]) >> 8),
		byte(uint64(data[5]) >> 16),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6]) >> 16),
		byte(uint64(data[7]) << 0),
		byte(uint64(data[7]) >> 8),
		byte(uint64(data[7]) >> 16),
	}
}

func unpack8int64_25(data []byte) (a [8]int64) {
	_ = data[24]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&1)<<24)
	a[1] = int64(uint64((data[3]>>1)&127)<<0 | uint64((data[4]>>0)&255)<<7 | uint64((data[5]>>0)&255)<<15 | uint64((data[6]>>0)&3)<<23)
	a[2] = int64(uint64((data[6]>>2)&63)<<0 | uint64((data[7]>>0)&255)<<6 | uint64((data[8]>>0)&255)<<14 | uint64((data[9]>>0)&7)<<22)
	a[3] = int64(uint64((data[9]>>3)&31)<<0 | uint64((data[10]>>0)&255)<<5 | uint64((data[11]>>0)&255)<<13 | uint64((data[12]>>0)&15)<<21)
	a[4] = int64(uint64((data[12]>>4)&15)<<0 | uint64((data[13]>>0)&255)<<4 | uint64((data[14]>>0)&255)<<12 | uint64((data[15]>>0)&31)<<20)
	a[5] = int64(uint64((data[15]>>5)&7)<<0 | uint64((data[16]>>0)&255)<<3 | uint64((data[17]>>0)&255)<<11 | uint64((data[18]>>0)&63)<<19)
	a[6] = int64(uint64((data[18]>>6)&3)<<0 | uint64((data[19]>>0)&255)<<2 | uint64((data[20]>>0)&255)<<10 | uint64((data[21]>>0)&127)<<18)
	a[7] = int64(uint64((data[21]>>7)&1)<<0 | uint64((data[22]>>0)&255)<<1 | uint64((data[23]>>0)&255)<<9 | uint64((data[24]>>0)&255)<<17)
	return
}

func pack8int64_25(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0])>>24 | uint64(data[1])<<1),
		byte(uint64(data[1]) >> 7),
		byte(uint64(data[1]) >> 15),
		byte(uint64(data[1])>>23 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2]) >> 14),
		byte(uint64(data[2])>>22 | uint64(data[3])<<3),
		byte(uint64(data[3]) >> 5),
		byte(uint64(data[3]) >> 13),
		byte(uint64(data[3])>>21 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4])>>20 | uint64(data[5])<<5),
		byte(uint64(data[5]) >> 3),
		byte(uint64(data[5]) >> 11),
		byte(uint64(data[5])>>19 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6]) >> 10),
		byte(uint64(data[6])>>18 | uint64(data[7])<<7),
		byte(uint64(data[7]) >> 1),
		byte(uint64(data[7]) >> 9),
		byte(uint64(data[7]) >> 17),
	}
}

func unpack8int64_26(data []byte) (a [8]int64) {
	_ = data[25]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&3)<<24)
	a[1] = int64(uint64((data[3]>>2)&63)<<0 | uint64((data[4]>>0)&255)<<6 | uint64((data[5]>>0)&255)<<14 | uint64((data[6]>>0)&15)<<22)
	a[2] = int64(uint64((data[6]>>4)&15)<<0 | uint64((data[7]>>0)&255)<<4 | uint64((data[8]>>0)&255)<<12 | uint64((data[9]>>0)&63)<<20)
	a[3] = int64(uint64((data[9]>>6)&3)<<0 | uint64((data[10]>>0)&255)<<2 | uint64((data[11]>>0)&255)<<10 | uint64((data[12]>>0)&255)<<18)
	a[4] = int64(uint64((data[13]>>0)&255)<<0 | uint64((data[14]>>0)&255)<<8 | uint64((data[15]>>0)&255)<<16 | uint64((data[16]>>0)&3)<<24)
	a[5] = int64(uint64((data[16]>>2)&63)<<0 | uint64((data[17]>>0)&255)<<6 | uint64((data[18]>>0)&255)<<14 | uint64((data[19]>>0)&15)<<22)
	a[6] = int64(uint64((data[19]>>4)&15)<<0 | uint64((data[20]>>0)&255)<<4 | uint64((data[21]>>0)&255)<<12 | uint64((data[22]>>0)&63)<<20)
	a[7] = int64(uint64((data[22]>>6)&3)<<0 | uint64((data[23]>>0)&255)<<2 | uint64((data[24]>>0)&255)<<10 | uint64((data[25]>>0)&255)<<18)
	return
}

func pack8int64_26(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0])>>24 | uint64(data[1])<<2),
		byte(uint64(data[1]) >> 6),
		byte(uint64(data[1]) >> 14),
		byte(uint64(data[1])>>22 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2]) >> 12),
		byte(uint64(data[2])>>20 | uint64(data[3])<<6),
		byte(uint64(data[3]) >> 2),
		byte(uint64(data[3]) >> 10),
		byte(uint64(data[3]) >> 18),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4])>>24 | uint64(data[5])<<2),
		byte(uint64(data[5]) >> 6),
		byte(uint64(data[5]) >> 14),
		byte(uint64(data[5])>>22 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6]) >> 12),
		byte(uint64(data[6])>>20 | uint64(data[7])<<6),
		byte(uint64(data[7]) >> 2),
		byte(uint64(data[7]) >> 10),
		byte(uint64(data[7]) >> 18),
	}
}

func unpack8int64_27(data []byte) (a [8]int64) {
	_ = data[26]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&7)<<24)
	a[1] = int64(uint64((data[3]>>3)&31)<<0 | uint64((data[4]>>0)&255)<<5 | uint64((data[5]>>0)&255)<<13 | uint64((data[6]>>0)&63)<<21)
	a[2] = int64(uint64((data[6]>>6)&3)<<0 | uint64((data[7]>>0)&255)<<2 | uint64((data[8]>>0)&255)<<10 | uint64((data[9]>>0)&255)<<18 | uint64((data[10]>>0)&1)<<26)
	a[3] = int64(uint64((data[10]>>1)&127)<<0 | uint64((data[11]>>0)&255)<<7 | uint64((data[12]>>0)&255)<<15 | uint64((data[13]>>0)&15)<<23)
	a[4] = int64(uint64((data[13]>>4)&15)<<0 | uint64((data[14]>>0)&255)<<4 | uint64((data[15]>>0)&255)<<12 | uint64((data[16]>>0)&127)<<20)
	a[5] = int64(uint64((data[16]>>7)&1)<<0 | uint64((data[17]>>0)&255)<<1 | uint64((data[18]>>0)&255)<<9 | uint64((data[19]>>0)&255)<<17 | uint64((data[20]>>0)&3)<<25)
	a[6] = int64(uint64((data[20]>>2)&63)<<0 | uint64((data[21]>>0)&255)<<6 | uint64((data[22]>>0)&255)<<14 | uint64((data[23]>>0)&31)<<22)
	a[7] = int64(uint64((data[23]>>5)&7)<<0 | uint64((data[24]>>0)&255)<<3 | uint64((data[25]>>0)&255)<<11 | uint64((data[26]>>0)&255)<<19)
	return
}

func pack8int64_27(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0])>>24 | uint64(data[1])<<3),
		byte(uint64(data[1]) >> 5),
		byte(uint64(data[1]) >> 13),
		byte(uint64(data[1])>>21 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2]) >> 18),
		byte(uint64(data[2])>>26 | uint64(data[3])<<1),
		byte(uint64(data[3]) >> 7),
		byte(uint64(data[3]) >> 15),
		byte(uint64(data[3])>>23 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4])>>20 | uint64(data[5])<<7),
		byte(uint64(data[5]) >> 1),
		byte(uint64(data[5]) >> 9),
		byte(uint64(data[5]) >> 17),
		byte(uint64(data[5])>>25 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6]) >> 14),
		byte(uint64(data[6])>>22 | uint64(data[7])<<5),
		byte(uint64(data[7]) >> 3),
		byte(uint64(data[7]) >> 11),
		byte(uint64(data[7]) >> 19),
	}
}

func unpack8int64_28(data []byte) (a [8]int64) {
	_ = data[27]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&15)<<24)
	a[1] = int64(uint64((data[3]>>4)&15)<<0 | uint64((data[4]>>0)&255)<<4 | uint64((data[5]>>0)&255)<<12 | uint64((data[6]>>0)&255)<<20)
	a[2] = int64(uint64((data[7]>>0)&255)<<0 | uint64((data[8]>>0)&255)<<8 | uint64((data[9]>>0)&255)<<16 | uint64((data[10]>>0)&15)<<24)
	a[3] = int64(uint64((data[10]>>4)&15)<<0 | uint64((data[11]>>0)&255)<<4 | uint64((data[12]>>0)&255)<<12 | uint64((data[13]>>0)&255)<<20)
	a[4] = int64(uint64((data[14]>>0)&255)<<0 | uint64((data[15]>>0)&255)<<8 | uint64((data[16]>>0)&255)<<16 | uint64((data[17]>>0)&15)<<24)
	a[5] = int64(uint64((data[17]>>4)&15)<<0 | uint64((data[18]>>0)&255)<<4 | uint64((data[19]>>0)&255)<<12 | uint64((data[20]>>0)&255)<<20)
	a[6] = int64(uint64((data[21]>>0)&255)<<0 | uint64((data[22]>>0)&255)<<8 | uint64((data[23]>>0)&255)<<16 | uint64((data[24]>>0)&15)<<24)
	a[7] = int64(uint64((data[24]>>4)&15)<<0 | uint64((data[25]>>0)&255)<<4 | uint64((data[26]>>0)&255)<<12 | uint64((data[27]>>0)&255)<<20)
	return
}

func pack8int64_28(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0])>>24 | uint64(data[1])<<4),
		byte(uint64(data[1]) >> 4),
		byte(uint64(data[1]) >> 12),
		byte(uint64(data[1]) >> 20),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2]) >> 16),
		byte(uint64(data[2])>>24 | uint64(data[3])<<4),
		byte(uint64(data[3]) >> 4),
		byte(uint64(data[3]) >> 12),
		byte(uint64(data[3]) >> 20),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4])>>24 | uint64(data[5])<<4),
		byte(uint64(data[5]) >> 4),
		byte(uint64(data[5]) >> 12),
		byte(uint64(data[5]) >> 20),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6]) >> 16),
		byte(uint64(data[6])>>24 | uint64(data[7])<<4),
		byte(uint64(data[7]) >> 4),
		byte(uint64(data[7]) >> 12),
		byte(uint64(data[7]) >> 20),
	}
}

func unpack8int64_29(data []byte) (a [8]int64) {
	_ = data[28]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&31)<<24)
	a[1] = int64(uint64((data[3]>>5)&7)<<0 | uint64((data[4]>>0)&255)<<3 | uint64((data[5]>>0)&255)<<11 | uint64((data[6]>>0)&255)<<19 | uint64((data[7]>>0)&3)<<27)
	a[2] = int64(uint64((data[7]>>2)&63)<<0 | uint64((data[8]>>0)&255)<<6 | uint64((data[9]>>0)&255)<<14 | uint64((data[10]>>0)&127)<<22)
	a[3] = int64(uint64((data[10]>>7)&1)<<0 | uint64((data[11]>>0)&255)<<1 | uint64((data[12]>>0)&255)<<9 | uint64((data[13]>>0)&255)<<17 | uint64((data[14]>>0)&15)<<25)
	a[4] = int64(uint64((data[14]>>4)&15)<<0 | uint64((data[15]>>0)&255)<<4 | uint64((data[16]>>0)&255)<<12 | uint64((data[17]>>0)&255)<<20 | uint64((data[18]>>0)&1)<<28)
	a[5] = int64(uint64((data[18]>>1)&127)<<0 | uint64((data[19]>>0)&255)<<7 | uint64((data[20]>>0)&255)<<15 | uint64((data[21]>>0)&63)<<23)
	a[6] = int64(uint64((data[21]>>6)&3)<<0 | uint64((data[22]>>0)&255)<<2 | uint64((data[23]>>0)&255)<<10 | uint64((data[24]>>0)&255)<<18 | uint64((data[25]>>0)&7)<<26)
	a[7] = int64(uint64((data[25]>>3)&31)<<0 | uint64((data[26]>>0)&255)<<5 | uint64((data[27]>>0)&255)<<13 | uint64((data[28]>>0)&255)<<21)
	return
}

func pack8int64_29(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0])>>24 | uint64(data[1])<<5),
		byte(uint64(data[1]) >> 3),
		byte(uint64(data[1]) >> 11),
		byte(uint64(data[1]) >> 19),
		byte(uint64(data[1])>>27 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2]) >> 14),
		byte(uint64(data[2])>>22 | uint64(data[3])<<7),
		byte(uint64(data[3]) >> 1),
		byte(uint64(data[3]) >> 9),
		byte(uint64(data[3]) >> 17),
		byte(uint64(data[3])>>25 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4])>>28 | uint64(data[5])<<1),
		byte(uint64(data[5]) >> 7),
		byte(uint64(data[5]) >> 15),
		byte(uint64(data[5])>>23 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6]) >> 10),
		byte(uint64(data[6]) >> 18),
		byte(uint64(data[6])>>26 | uint64(data[7])<<3),
		byte(uint64(data[7]) >> 5),
		byte(uint64(data[7]) >> 13),
		byte(uint64(data[7]) >> 21),
	}
}

func unpack8int64_30(data []byte) (a [8]int64) {
	_ = data[29]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&63)<<24)
	a[1] = int64(uint64((data[3]>>6)&3)<<0 | uint64((data[4]>>0)&255)<<2 | uint64((data[5]>>0)&255)<<10 | uint64((data[6]>>0)&255)<<18 | uint64((data[7]>>0)&15)<<26)
	a[2] = int64(uint64((data[7]>>4)&15)<<0 | uint64((data[8]>>0)&255)<<4 | uint64((data[9]>>0)&255)<<12 | uint64((data[10]>>0)&255)<<20 | uint64((data[11]>>0)&3)<<28)
	a[3] = int64(uint64((data[11]>>2)&63)<<0 | uint64((data[12]>>0)&255)<<6 | uint64((data[13]>>0)&255)<<14 | uint64((data[14]>>0)&255)<<22)
	a[4] = int64(uint64((data[15]>>0)&255)<<0 | uint64((data[16]>>0)&255)<<8 | uint64((data[17]>>0)&255)<<16 | uint64((data[18]>>0)&63)<<24)
	a[5] = int64(uint64((data[18]>>6)&3)<<0 | uint64((data[19]>>0)&255)<<2 | uint64((data[20]>>0)&255)<<10 | uint64((data[21]>>0)&255)<<18 | uint64((data[22]>>0)&15)<<26)
	a[6] = int64(uint64((data[22]>>4)&15)<<0 | uint64((data[23]>>0)&255)<<4 | uint64((data[24]>>0)&255)<<12 | uint64((data[25]>>0)&255)<<20 | uint64((data[26]>>0)&3)<<28)
	a[7] = int64(uint64((data[26]>>2)&63)<<0 | uint64((data[27]>>0)&255)<<6 | uint64((data[28]>>0)&255)<<14 | uint64((data[29]>>0)&255)<<22)
	return
}

func pack8int64_30(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0])>>24 | uint64(data[1])<<6),
		byte(uint64(data[1]) >> 2),
		byte(uint64(data[1]) >> 10),
		byte(uint64(data[1]) >> 18),
		byte(uint64(data[1])>>26 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2]) >> 12),
		byte(uint64(data[2]) >> 20),
		byte(uint64(data[2])>>28 | uint64(data[3])<<2),
		byte(uint64(data[3]) >> 6),
		byte(uint64(data[3]) >> 14),
		byte(uint64(data[3]) >> 22),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4])>>24 | uint64(data[5])<<6),
		byte(uint64(data[5]) >> 2),
		byte(uint64(data[5]) >> 10),
		byte(uint64(data[5]) >> 18),
		byte(uint64(data[5])>>26 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6]) >> 12),
		byte(uint64(data[6]) >> 20),
		byte(uint64(data[6])>>28 | uint64(data[7])<<2),
		byte(uint64(data[7]) >> 6),
		byte(uint64(data[7]) >> 14),
		byte(uint64(data[7]) >> 22),
	}
}

func unpack8int64_31(data []byte) (a [8]int64) {
	_ = data[30]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&127)<<24)
	a[1] = int64(uint64((data[3]>>7)&1)<<0 | uint64((data[4]>>0)&255)<<1 | uint64((data[5]>>0)&255)<<9 | uint64((data[6]>>0)&255)<<17 | uint64((data[7]>>0)&63)<<25)
	a[2] = int64(uint64((data[7]>>6)&3)<<0 | uint64((data[8]>>0)&255)<<2 | uint64((data[9]>>0)&255)<<10 | uint64((data[10]>>0)&255)<<18 | uint64((data[11]>>0)&31)<<26)
	a[3] = int64(uint64((data[11]>>5)&7)<<0 | uint64((data[12]>>0)&255)<<3 | uint64((data[13]>>0)&255)<<11 | uint64((data[14]>>0)&255)<<19 | uint64((data[15]>>0)&15)<<27)
	a[4] = int64(uint64((data[15]>>4)&15)<<0 | uint64((data[16]>>0)&255)<<4 | uint64((data[17]>>0)&255)<<12 | uint64((data[18]>>0)&255)<<20 | uint64((data[19]>>0)&7)<<28)
	a[5] = int64(uint64((data[19]>>3)&31)<<0 | uint64((data[20]>>0)&255)<<5 | uint64((data[21]>>0)&255)<<13 | uint64((data[22]>>0)&255)<<21 | uint64((data[23]>>0)&3)<<29)
	a[6] = int64(uint64((data[23]>>2)&63)<<0 | uint64((data[24]>>0)&255)<<6 | uint64((data[25]>>0)&255)<<14 | uint64((data[26]>>0)&255)<<22 | uint64((data[27]>>0)&1)<<30)
	a[7] = int64(uint64((data[27]>>1)&127)<<0 | uint64((data[28]>>0)&255)<<7 | uint64((data[29]>>0)&255)<<15 | uint64((data[30]>>0)&255)<<23)
	return
}

func pack8int64_31(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0])>>24 | uint64(data[1])<<7),
		byte(uint64(data[1]) >> 1),
		byte(uint64(data[1]) >> 9),
		byte(uint64(data[1]) >> 17),
		byte(uint64(data[1])>>25 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2]) >> 18),
		byte(uint64(data[2])>>26 | uint64(data[3])<<5),
		byte(uint64(data[3]) >> 3),
		byte(uint64(data[3]) >> 11),
		byte(uint64(data[3]) >> 19),
		byte(uint64(data[3])>>27 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4])>>28 | uint64(data[5])<<3),
		byte(uint64(data[5]) >> 5),
		byte(uint64(data[5]) >> 13),
		byte(uint64(data[5]) >> 21),
		byte(uint64(data[5])>>29 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6]) >> 14),
		byte(uint64(data[6]) >> 22),
		byte(uint64(data[6])>>30 | uint64(data[7])<<1),
		byte(uint64(data[7]) >> 7),
		byte(uint64(data[7]) >> 15),
		byte(uint64(data[7]) >> 23),
	}
}

func unpack8int64_32(data []byte) (a [8]int64) {
	_ = data[31]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24)
	a[1] = int64(uint64((data[4]>>0)&255)<<0 | uint64((data[5]>>0)&255)<<8 | uint64((data[6]>>0)&255)<<16 | uint64((data[7]>>0)&255)<<24)
	a[2] = int64(uint64((data[8]>>0)&255)<<0 | uint64((data[9]>>0)&255)<<8 | uint64((data[10]>>0)&255)<<16 | uint64((data[11]>>0)&255)<<24)
	a[3] = int64(uint64((data[12]>>0)&255)<<0 | uint64((data[13]>>0)&255)<<8 | uint64((data[14]>>0)&255)<<16 | uint64((data[15]>>0)&255)<<24)
	a[4] = int64(uint64((data[16]>>0)&255)<<0 | uint64((data[17]>>0)&255)<<8 | uint64((data[18]>>0)&255)<<16 | uint64((data[19]>>0)&255)<<24)
	a[5] = int64(uint64((data[20]>>0)&255)<<0 | uint64((data[21]>>0)&255)<<8 | uint64((data[22]>>0)&255)<<16 | uint64((data[23]>>0)&255)<<24)
	a[6] = int64(uint64((data[24]>>0)&255)<<0 | uint64((data[25]>>0)&255)<<8 | uint64((data[26]>>0)&255)<<16 | uint64((data[27]>>0)&255)<<24)
	a[7] = int64(uint64((data[28]>>0)&255)<<0 | uint64((data[29]>>0)&255)<<8 | uint64((data[30]>>0)&255)<<16 | uint64((data[31]>>0)&255)<<24)
	return
}

func pack8int64_32(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[1]) << 0),
		byte(uint64(data[1]) >> 8),
		byte(uint64(data[1]) >> 16),
		byte(uint64(data[1]) >> 24),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2]) >> 16),
		byte(uint64(data[2]) >> 24),
		byte(uint64(data[3]) << 0),
		byte(uint64(data[3]) >> 8),
		byte(uint64(data[3]) >> 16),
		byte(uint64(data[3]) >> 24),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[5]) << 0),
		byte(uint64(data[5]) >> 8),
		byte(uint64(data[5]) >> 16),
		byte(uint64(data[5]) >> 24),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6]) >> 16),
		byte(uint64(data[6]) >> 24),
		byte(uint64(data[7]) << 0),
		byte(uint64(data[7]) >> 8),
		byte(uint64(data[7]) >> 16),
		byte(uint64(data[7]) >> 24),
	}
}

func unpack8int64_33(data []byte) (a [8]int64) {
	_ = data[32]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&1)<<32)
	a[1] = int64(uint64((data[4]>>1)&127)<<0 | uint64((data[5]>>0)&255)<<7 | uint64((data[6]>>0)&255)<<15 | uint64((data[7]>>0)&255)<<23 | uint64((data[8]>>0)&3)<<31)
	a[2] = int64(uint64((data[8]>>2)&63)<<0 | uint64((data[9]>>0)&255)<<6 | uint64((data[10]>>0)&255)<<14 | uint64((data[11]>>0)&255)<<22 | uint64((data[12]>>0)&7)<<30)
	a[3] = int64(uint64((data[12]>>3)&31)<<0 | uint64((data[13]>>0)&255)<<5 | uint64((data[14]>>0)&255)<<13 | uint64((data[15]>>0)&255)<<21 | uint64((data[16]>>0)&15)<<29)
	a[4] = int64(uint64((data[16]>>4)&15)<<0 | uint64((data[17]>>0)&255)<<4 | uint64((data[18]>>0)&255)<<12 | uint64((data[19]>>0)&255)<<20 | uint64((data[20]>>0)&31)<<28)
	a[5] = int64(uint64((data[20]>>5)&7)<<0 | uint64((data[21]>>0)&255)<<3 | uint64((data[22]>>0)&255)<<11 | uint64((data[23]>>0)&255)<<19 | uint64((data[24]>>0)&63)<<27)
	a[6] = int64(uint64((data[24]>>6)&3)<<0 | uint64((data[25]>>0)&255)<<2 | uint64((data[26]>>0)&255)<<10 | uint64((data[27]>>0)&255)<<18 | uint64((data[28]>>0)&127)<<26)
	a[7] = int64(uint64((data[28]>>7)&1)<<0 | uint64((data[29]>>0)&255)<<1 | uint64((data[30]>>0)&255)<<9 | uint64((data[31]>>0)&255)<<17 | uint64((data[32]>>0)&255)<<25)
	return
}

func pack8int64_33(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0])>>32 | uint64(data[1])<<1),
		byte(uint64(data[1]) >> 7),
		byte(uint64(data[1]) >> 15),
		byte(uint64(data[1]) >> 23),
		byte(uint64(data[1])>>31 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2]) >> 14),
		byte(uint64(data[2]) >> 22),
		byte(uint64(data[2])>>30 | uint64(data[3])<<3),
		byte(uint64(data[3]) >> 5),
		byte(uint64(data[3]) >> 13),
		byte(uint64(data[3]) >> 21),
		byte(uint64(data[3])>>29 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4])>>28 | uint64(data[5])<<5),
		byte(uint64(data[5]) >> 3),
		byte(uint64(data[5]) >> 11),
		byte(uint64(data[5]) >> 19),
		byte(uint64(data[5])>>27 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6]) >> 10),
		byte(uint64(data[6]) >> 18),
		byte(uint64(data[6])>>26 | uint64(data[7])<<7),
		byte(uint64(data[7]) >> 1),
		byte(uint64(data[7]) >> 9),
		byte(uint64(data[7]) >> 17),
		byte(uint64(data[7]) >> 25),
	}
}

func unpack8int64_34(data []byte) (a [8]int64) {
	_ = data[33]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&3)<<32)
	a[1] = int64(uint64((data[4]>>2)&63)<<0 | uint64((data[5]>>0)&255)<<6 | uint64((data[6]>>0)&255)<<14 | uint64((data[7]>>0)&255)<<22 | uint64((data[8]>>0)&15)<<30)
	a[2] = int64(uint64((data[8]>>4)&15)<<0 | uint64((data[9]>>0)&255)<<4 | uint64((data[10]>>0)&255)<<12 | uint64((data[11]>>0)&255)<<20 | uint64((data[12]>>0)&63)<<28)
	a[3] = int64(uint64((data[12]>>6)&3)<<0 | uint64((data[13]>>0)&255)<<2 | uint64((data[14]>>0)&255)<<10 | uint64((data[15]>>0)&255)<<18 | uint64((data[16]>>0)&255)<<26)
	a[4] = int64(uint64((data[17]>>0)&255)<<0 | uint64((data[18]>>0)&255)<<8 | uint64((data[19]>>0)&255)<<16 | uint64((data[20]>>0)&255)<<24 | uint64((data[21]>>0)&3)<<32)
	a[5] = int64(uint64((data[21]>>2)&63)<<0 | uint64((data[22]>>0)&255)<<6 | uint64((data[23]>>0)&255)<<14 | uint64((data[24]>>0)&255)<<22 | uint64((data[25]>>0)&15)<<30)
	a[6] = int64(uint64((data[25]>>4)&15)<<0 | uint64((data[26]>>0)&255)<<4 | uint64((data[27]>>0)&255)<<12 | uint64((data[28]>>0)&255)<<20 | uint64((data[29]>>0)&63)<<28)
	a[7] = int64(uint64((data[29]>>6)&3)<<0 | uint64((data[30]>>0)&255)<<2 | uint64((data[31]>>0)&255)<<10 | uint64((data[32]>>0)&255)<<18 | uint64((data[33]>>0)&255)<<26)
	return
}

func pack8int64_34(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0])>>32 | uint64(data[1])<<2),
		byte(uint64(data[1]) >> 6),
		byte(uint64(data[1]) >> 14),
		byte(uint64(data[1]) >> 22),
		byte(uint64(data[1])>>30 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2]) >> 12),
		byte(uint64(data[2]) >> 20),
		byte(uint64(data[2])>>28 | uint64(data[3])<<6),
		byte(uint64(data[3]) >> 2),
		byte(uint64(data[3]) >> 10),
		byte(uint64(data[3]) >> 18),
		byte(uint64(data[3]) >> 26),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4])>>32 | uint64(data[5])<<2),
		byte(uint64(data[5]) >> 6),
		byte(uint64(data[5]) >> 14),
		byte(uint64(data[5]) >> 22),
		byte(uint64(data[5])>>30 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6]) >> 12),
		byte(uint64(data[6]) >> 20),
		byte(uint64(data[6])>>28 | uint64(data[7])<<6),
		byte(uint64(data[7]) >> 2),
		byte(uint64(data[7]) >> 10),
		byte(uint64(data[7]) >> 18),
		byte(uint64(data[7]) >> 26),
	}
}

func unpack8int64_35(data []byte) (a [8]int64) {
	_ = data[34]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&7)<<32)
	a[1] = int64(uint64((data[4]>>3)&31)<<0 | uint64((data[5]>>0)&255)<<5 | uint64((data[6]>>0)&255)<<13 | uint64((data[7]>>0)&255)<<21 | uint64((data[8]>>0)&63)<<29)
	a[2] = int64(uint64((data[8]>>6)&3)<<0 | uint64((data[9]>>0)&255)<<2 | uint64((data[10]>>0)&255)<<10 | uint64((data[11]>>0)&255)<<18 | uint64((data[12]>>0)&255)<<26 | uint64((data[13]>>0)&1)<<34)
	a[3] = int64(uint64((data[13]>>1)&127)<<0 | uint64((data[14]>>0)&255)<<7 | uint64((data[15]>>0)&255)<<15 | uint64((data[16]>>0)&255)<<23 | uint64((data[17]>>0)&15)<<31)
	a[4] = int64(uint64((data[17]>>4)&15)<<0 | uint64((data[18]>>0)&255)<<4 | uint64((data[19]>>0)&255)<<12 | uint64((data[20]>>0)&255)<<20 | uint64((data[21]>>0)&127)<<28)
	a[5] = int64(uint64((data[21]>>7)&1)<<0 | uint64((data[22]>>0)&255)<<1 | uint64((data[23]>>0)&255)<<9 | uint64((data[24]>>0)&255)<<17 | uint64((data[25]>>0)&255)<<25 | uint64((data[26]>>0)&3)<<33)
	a[6] = int64(uint64((data[26]>>2)&63)<<0 | uint64((data[27]>>0)&255)<<6 | uint64((data[28]>>0)&255)<<14 | uint64((data[29]>>0)&255)<<22 | uint64((data[30]>>0)&31)<<30)
	a[7] = int64(uint64((data[30]>>5)&7)<<0 | uint64((data[31]>>0)&255)<<3 | uint64((data[32]>>0)&255)<<11 | uint64((data[33]>>0)&255)<<19 | uint64((data[34]>>0)&255)<<27)
	return
}

func pack8int64_35(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0])>>32 | uint64(data[1])<<3),
		byte(uint64(data[1]) >> 5),
		byte(uint64(data[1]) >> 13),
		byte(uint64(data[1]) >> 21),
		byte(uint64(data[1])>>29 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2]) >> 18),
		byte(uint64(data[2]) >> 26),
		byte(uint64(data[2])>>34 | uint64(data[3])<<1),
		byte(uint64(data[3]) >> 7),
		byte(uint64(data[3]) >> 15),
		byte(uint64(data[3]) >> 23),
		byte(uint64(data[3])>>31 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4])>>28 | uint64(data[5])<<7),
		byte(uint64(data[5]) >> 1),
		byte(uint64(data[5]) >> 9),
		byte(uint64(data[5]) >> 17),
		byte(uint64(data[5]) >> 25),
		byte(uint64(data[5])>>33 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6]) >> 14),
		byte(uint64(data[6]) >> 22),
		byte(uint64(data[6])>>30 | uint64(data[7])<<5),
		byte(uint64(data[7]) >> 3),
		byte(uint64(data[7]) >> 11),
		byte(uint64(data[7]) >> 19),
		byte(uint64(data[7]) >> 27),
	}
}

func unpack8int64_36(data []byte) (a [8]int64) {
	_ = data[35]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&15)<<32)
	a[1] = int64(uint64((data[4]>>4)&15)<<0 | uint64((data[5]>>0)&255)<<4 | uint64((data[6]>>0)&255)<<12 | uint64((data[7]>>0)&255)<<20 | uint64((data[8]>>0)&255)<<28)
	a[2] = int64(uint64((data[9]>>0)&255)<<0 | uint64((data[10]>>0)&255)<<8 | uint64((data[11]>>0)&255)<<16 | uint64((data[12]>>0)&255)<<24 | uint64((data[13]>>0)&15)<<32)
	a[3] = int64(uint64((data[13]>>4)&15)<<0 | uint64((data[14]>>0)&255)<<4 | uint64((data[15]>>0)&255)<<12 | uint64((data[16]>>0)&255)<<20 | uint64((data[17]>>0)&255)<<28)
	a[4] = int64(uint64((data[18]>>0)&255)<<0 | uint64((data[19]>>0)&255)<<8 | uint64((data[20]>>0)&255)<<16 | uint64((data[21]>>0)&255)<<24 | uint64((data[22]>>0)&15)<<32)
	a[5] = int64(uint64((data[22]>>4)&15)<<0 | uint64((data[23]>>0)&255)<<4 | uint64((data[24]>>0)&255)<<12 | uint64((data[25]>>0)&255)<<20 | uint64((data[26]>>0)&255)<<28)
	a[6] = int64(uint64((data[27]>>0)&255)<<0 | uint64((data[28]>>0)&255)<<8 | uint64((data[29]>>0)&255)<<16 | uint64((data[30]>>0)&255)<<24 | uint64((data[31]>>0)&15)<<32)
	a[7] = int64(uint64((data[31]>>4)&15)<<0 | uint64((data[32]>>0)&255)<<4 | uint64((data[33]>>0)&255)<<12 | uint64((data[34]>>0)&255)<<20 | uint64((data[35]>>0)&255)<<28)
	return
}

func pack8int64_36(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0])>>32 | uint64(data[1])<<4),
		byte(uint64(data[1]) >> 4),
		byte(uint64(data[1]) >> 12),
		byte(uint64(data[1]) >> 20),
		byte(uint64(data[1]) >> 28),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2]) >> 16),
		byte(uint64(data[2]) >> 24),
		byte(uint64(data[2])>>32 | uint64(data[3])<<4),
		byte(uint64(data[3]) >> 4),
		byte(uint64(data[3]) >> 12),
		byte(uint64(data[3]) >> 20),
		byte(uint64(data[3]) >> 28),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4])>>32 | uint64(data[5])<<4),
		byte(uint64(data[5]) >> 4),
		byte(uint64(data[5]) >> 12),
		byte(uint64(data[5]) >> 20),
		byte(uint64(data[5]) >> 28),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6]) >> 16),
		byte(uint64(data[6]) >> 24),
		byte(uint64(data[6])>>32 | uint64(data[7])<<4),
		byte(uint64(data[7]) >> 4),
		byte(uint64(data[7]) >> 12),
		byte(uint64(data[7]) >> 20),
		byte(uint64(data[7]) >> 28),
	}
}

func unpack8int64_37(data []byte) (a [8]int64) {
	_ = data[36]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&31)<<32)
	a[1] = int64(uint64((data[4]>>5)&7)<<0 | uint64((data[5]>>0)&255)<<3 | uint64((data[6]>>0)&255)<<11 | uint64((data[7]>>0)&255)<<19 | uint64((data[8]>>0)&255)<<27 | uint64((data[9]>>0)&3)<<35)
	a[2] = int64(uint64((data[9]>>2)&63)<<0 | uint64((data[10]>>0)&255)<<6 | uint64((data[11]>>0)&255)<<14 | uint64((data[12]>>0)&255)<<22 | uint64((data[13]>>0)&127)<<30)
	a[3] = int64(uint64((data[13]>>7)&1)<<0 | uint64((data[14]>>0)&255)<<1 | uint64((data[15]>>0)&255)<<9 | uint64((data[16]>>0)&255)<<17 | uint64((data[17]>>0)&255)<<25 | uint64((data[18]>>0)&15)<<33)
	a[4] = int64(uint64((data[18]>>4)&15)<<0 | uint64((data[19]>>0)&255)<<4 | uint64((data[20]>>0)&255)<<12 | uint64((data[21]>>0)&255)<<20 | uint64((data[22]>>0)&255)<<28 | uint64((data[23]>>0)&1)<<36)
	a[5] = int64(uint64((data[23]>>1)&127)<<0 | uint64((data[24]>>0)&255)<<7 | uint64((data[25]>>0)&255)<<15 | uint64((data[26]>>0)&255)<<23 | uint64((data[27]>>0)&63)<<31)
	a[6] = int64(uint64((data[27]>>6)&3)<<0 | uint64((data[28]>>0)&255)<<2 | uint64((data[29]>>0)&255)<<10 | uint64((data[30]>>0)&255)<<18 | uint64((data[31]>>0)&255)<<26 | uint64((data[32]>>0)&7)<<34)
	a[7] = int64(uint64((data[32]>>3)&31)<<0 | uint64((data[33]>>0)&255)<<5 | uint64((data[34]>>0)&255)<<13 | uint64((data[35]>>0)&255)<<21 | uint64((data[36]>>0)&255)<<29)
	return
}

func pack8int64_37(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0])>>32 | uint64(data[1])<<5),
		byte(uint64(data[1]) >> 3),
		byte(uint64(data[1]) >> 11),
		byte(uint64(data[1]) >> 19),
		byte(uint64(data[1]) >> 27),
		byte(uint64(data[1])>>35 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2]) >> 14),
		byte(uint64(data[2]) >> 22),
		byte(uint64(data[2])>>30 | uint64(data[3])<<7),
		byte(uint64(data[3]) >> 1),
		byte(uint64(data[3]) >> 9),
		byte(uint64(data[3]) >> 17),
		byte(uint64(data[3]) >> 25),
		byte(uint64(data[3])>>33 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4])>>36 | uint64(data[5])<<1),
		byte(uint64(data[5]) >> 7),
		byte(uint64(data[5]) >> 15),
		byte(uint64(data[5]) >> 23),
		byte(uint64(data[5])>>31 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6]) >> 10),
		byte(uint64(data[6]) >> 18),
		byte(uint64(data[6]) >> 26),
		byte(uint64(data[6])>>34 | uint64(data[7])<<3),
		byte(uint64(data[7]) >> 5),
		byte(uint64(data[7]) >> 13),
		byte(uint64(data[7]) >> 21),
		byte(uint64(data[7]) >> 29),
	}
}

func unpack8int64_38(data []byte) (a [8]int64) {
	_ = data[37]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&63)<<32)
	a[1] = int64(uint64((data[4]>>6)&3)<<0 | uint64((data[5]>>0)&255)<<2 | uint64((data[6]>>0)&255)<<10 | uint64((data[7]>>0)&255)<<18 | uint64((data[8]>>0)&255)<<26 | uint64((data[9]>>0)&15)<<34)
	a[2] = int64(uint64((data[9]>>4)&15)<<0 | uint64((data[10]>>0)&255)<<4 | uint64((data[11]>>0)&255)<<12 | uint64((data[12]>>0)&255)<<20 | uint64((data[13]>>0)&255)<<28 | uint64((data[14]>>0)&3)<<36)
	a[3] = int64(uint64((data[14]>>2)&63)<<0 | uint64((data[15]>>0)&255)<<6 | uint64((data[16]>>0)&255)<<14 | uint64((data[17]>>0)&255)<<22 | uint64((data[18]>>0)&255)<<30)
	a[4] = int64(uint64((data[19]>>0)&255)<<0 | uint64((data[20]>>0)&255)<<8 | uint64((data[21]>>0)&255)<<16 | uint64((data[22]>>0)&255)<<24 | uint64((data[23]>>0)&63)<<32)
	a[5] = int64(uint64((data[23]>>6)&3)<<0 | uint64((data[24]>>0)&255)<<2 | uint64((data[25]>>0)&255)<<10 | uint64((data[26]>>0)&255)<<18 | uint64((data[27]>>0)&255)<<26 | uint64((data[28]>>0)&15)<<34)
	a[6] = int64(uint64((data[28]>>4)&15)<<0 | uint64((data[29]>>0)&255)<<4 | uint64((data[30]>>0)&255)<<12 | uint64((data[31]>>0)&255)<<20 | uint64((data[32]>>0)&255)<<28 | uint64((data[33]>>0)&3)<<36)
	a[7] = int64(uint64((data[33]>>2)&63)<<0 | uint64((data[34]>>0)&255)<<6 | uint64((data[35]>>0)&255)<<14 | uint64((data[36]>>0)&255)<<22 | uint64((data[37]>>0)&255)<<30)
	return
}

func pack8int64_38(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0])>>32 | uint64(data[1])<<6),
		byte(uint64(data[1]) >> 2),
		byte(uint64(data[1]) >> 10),
		byte(uint64(data[1]) >> 18),
		byte(uint64(data[1]) >> 26),
		byte(uint64(data[1])>>34 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2]) >> 12),
		byte(uint64(data[2]) >> 20),
		byte(uint64(data[2]) >> 28),
		byte(uint64(data[2])>>36 | uint64(data[3])<<2),
		byte(uint64(data[3]) >> 6),
		byte(uint64(data[3]) >> 14),
		byte(uint64(data[3]) >> 22),
		byte(uint64(data[3]) >> 30),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4])>>32 | uint64(data[5])<<6),
		byte(uint64(data[5]) >> 2),
		byte(uint64(data[5]) >> 10),
		byte(uint64(data[5]) >> 18),
		byte(uint64(data[5]) >> 26),
		byte(uint64(data[5])>>34 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6]) >> 12),
		byte(uint64(data[6]) >> 20),
		byte(uint64(data[6]) >> 28),
		byte(uint64(data[6])>>36 | uint64(data[7])<<2),
		byte(uint64(data[7]) >> 6),
		byte(uint64(data[7]) >> 14),
		byte(uint64(data[7]) >> 22),
		byte(uint64(data[7]) >> 30),
	}
}

func unpack8int64_39(data []byte) (a [8]int64) {
	_ = data[38]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&127)<<32)
	a[1] = int64(uint64((data[4]>>7)&1)<<0 | uint64((data[5]>>0)&255)<<1 | uint64((data[6]>>0)&255)<<9 | uint64((data[7]>>0)&255)<<17 | uint64((data[8]>>0)&255)<<25 | uint64((data[9]>>0)&63)<<33)
	a[2] = int64(uint64((data[9]>>6)&3)<<0 | uint64((data[10]>>0)&255)<<2 | uint64((data[11]>>0)&255)<<10 | uint64((data[12]>>0)&255)<<18 | uint64((data[13]>>0)&255)<<26 | uint64((data[14]>>0)&31)<<34)
	a[3] = int64(uint64((data[14]>>5)&7)<<0 | uint64((data[15]>>0)&255)<<3 | uint64((data[16]>>0)&255)<<11 | uint64((data[17]>>0)&255)<<19 | uint64((data[18]>>0)&255)<<27 | uint64((data[19]>>0)&15)<<35)
	a[4] = int64(uint64((data[19]>>4)&15)<<0 | uint64((data[20]>>0)&255)<<4 | uint64((data[21]>>0)&255)<<12 | uint64((data[22]>>0)&255)<<20 | uint64((data[23]>>0)&255)<<28 | uint64((data[24]>>0)&7)<<36)
	a[5] = int64(uint64((data[24]>>3)&31)<<0 | uint64((data[25]>>0)&255)<<5 | uint64((data[26]>>0)&255)<<13 | uint64((data[27]>>0)&255)<<21 | uint64((data[28]>>0)&255)<<29 | uint64((data[29]>>0)&3)<<37)
	a[6] = int64(uint64((data[29]>>2)&63)<<0 | uint64((data[30]>>0)&255)<<6 | uint64((data[31]>>0)&255)<<14 | uint64((data[32]>>0)&255)<<22 | uint64((data[33]>>0)&255)<<30 | uint64((data[34]>>0)&1)<<38)
	a[7] = int64(uint64((data[34]>>1)&127)<<0 | uint64((data[35]>>0)&255)<<7 | uint64((data[36]>>0)&255)<<15 | uint64((data[37]>>0)&255)<<23 | uint64((data[38]>>0)&255)<<31)
	return
}

func pack8int64_39(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0])>>32 | uint64(data[1])<<7),
		byte(uint64(data[1]) >> 1),
		byte(uint64(data[1]) >> 9),
		byte(uint64(data[1]) >> 17),
		byte(uint64(data[1]) >> 25),
		byte(uint64(data[1])>>33 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2]) >> 18),
		byte(uint64(data[2]) >> 26),
		byte(uint64(data[2])>>34 | uint64(data[3])<<5),
		byte(uint64(data[3]) >> 3),
		byte(uint64(data[3]) >> 11),
		byte(uint64(data[3]) >> 19),
		byte(uint64(data[3]) >> 27),
		byte(uint64(data[3])>>35 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4])>>36 | uint64(data[5])<<3),
		byte(uint64(data[5]) >> 5),
		byte(uint64(data[5]) >> 13),
		byte(uint64(data[5]) >> 21),
		byte(uint64(data[5]) >> 29),
		byte(uint64(data[5])>>37 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6]) >> 14),
		byte(uint64(data[6]) >> 22),
		byte(uint64(data[6]) >> 30),
		byte(uint64(data[6])>>38 | uint64(data[7])<<1),
		byte(uint64(data[7]) >> 7),
		byte(uint64(data[7]) >> 15),
		byte(uint64(data[7]) >> 23),
		byte(uint64(data[7]) >> 31),
	}
}

func unpack8int64_40(data []byte) (a [8]int64) {
	_ = data[39]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32)
	a[1] = int64(uint64((data[5]>>0)&255)<<0 | uint64((data[6]>>0)&255)<<8 | uint64((data[7]>>0)&255)<<16 | uint64((data[8]>>0)&255)<<24 | uint64((data[9]>>0)&255)<<32)
	a[2] = int64(uint64((data[10]>>0)&255)<<0 | uint64((data[11]>>0)&255)<<8 | uint64((data[12]>>0)&255)<<16 | uint64((data[13]>>0)&255)<<24 | uint64((data[14]>>0)&255)<<32)
	a[3] = int64(uint64((data[15]>>0)&255)<<0 | uint64((data[16]>>0)&255)<<8 | uint64((data[17]>>0)&255)<<16 | uint64((data[18]>>0)&255)<<24 | uint64((data[19]>>0)&255)<<32)
	a[4] = int64(uint64((data[20]>>0)&255)<<0 | uint64((data[21]>>0)&255)<<8 | uint64((data[22]>>0)&255)<<16 | uint64((data[23]>>0)&255)<<24 | uint64((data[24]>>0)&255)<<32)
	a[5] = int64(uint64((data[25]>>0)&255)<<0 | uint64((data[26]>>0)&255)<<8 | uint64((data[27]>>0)&255)<<16 | uint64((data[28]>>0)&255)<<24 | uint64((data[29]>>0)&255)<<32)
	a[6] = int64(uint64((data[30]>>0)&255)<<0 | uint64((data[31]>>0)&255)<<8 | uint64((data[32]>>0)&255)<<16 | uint64((data[33]>>0)&255)<<24 | uint64((data[34]>>0)&255)<<32)
	a[7] = int64(uint64((data[35]>>0)&255)<<0 | uint64((data[36]>>0)&255)<<8 | uint64((data[37]>>0)&255)<<16 | uint64((data[38]>>0)&255)<<24 | uint64((data[39]>>0)&255)<<32)
	return
}

func pack8int64_40(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[1]) << 0),
		byte(uint64(data[1]) >> 8),
		byte(uint64(data[1]) >> 16),
		byte(uint64(data[1]) >> 24),
		byte(uint64(data[1]) >> 32),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2]) >> 16),
		byte(uint64(data[2]) >> 24),
		byte(uint64(data[2]) >> 32),
		byte(uint64(data[3]) << 0),
		byte(uint64(data[3]) >> 8),
		byte(uint64(data[3]) >> 16),
		byte(uint64(data[3]) >> 24),
		byte(uint64(data[3]) >> 32),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[5]) << 0),
		byte(uint64(data[5]) >> 8),
		byte(uint64(data[5]) >> 16),
		byte(uint64(data[5]) >> 24),
		byte(uint64(data[5]) >> 32),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6]) >> 16),
		byte(uint64(data[6]) >> 24),
		byte(uint64(data[6]) >> 32),
		byte(uint64(data[7]) << 0),
		byte(uint64(data[7]) >> 8),
		byte(uint64(data[7]) >> 16),
		byte(uint64(data[7]) >> 24),
		byte(uint64(data[7]) >> 32),
	}
}

func unpack8int64_41(data []byte) (a [8]int64) {
	_ = data[40]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&1)<<40)
	a[1] = int64(uint64((data[5]>>1)&127)<<0 | uint64((data[6]>>0)&255)<<7 | uint64((data[7]>>0)&255)<<15 | uint64((data[8]>>0)&255)<<23 | uint64((data[9]>>0)&255)<<31 | uint64((data[10]>>0)&3)<<39)
	a[2] = int64(uint64((data[10]>>2)&63)<<0 | uint64((data[11]>>0)&255)<<6 | uint64((data[12]>>0)&255)<<14 | uint64((data[13]>>0)&255)<<22 | uint64((data[14]>>0)&255)<<30 | uint64((data[15]>>0)&7)<<38)
	a[3] = int64(uint64((data[15]>>3)&31)<<0 | uint64((data[16]>>0)&255)<<5 | uint64((data[17]>>0)&255)<<13 | uint64((data[18]>>0)&255)<<21 | uint64((data[19]>>0)&255)<<29 | uint64((data[20]>>0)&15)<<37)
	a[4] = int64(uint64((data[20]>>4)&15)<<0 | uint64((data[21]>>0)&255)<<4 | uint64((data[22]>>0)&255)<<12 | uint64((data[23]>>0)&255)<<20 | uint64((data[24]>>0)&255)<<28 | uint64((data[25]>>0)&31)<<36)
	a[5] = int64(uint64((data[25]>>5)&7)<<0 | uint64((data[26]>>0)&255)<<3 | uint64((data[27]>>0)&255)<<11 | uint64((data[28]>>0)&255)<<19 | uint64((data[29]>>0)&255)<<27 | uint64((data[30]>>0)&63)<<35)
	a[6] = int64(uint64((data[30]>>6)&3)<<0 | uint64((data[31]>>0)&255)<<2 | uint64((data[32]>>0)&255)<<10 | uint64((data[33]>>0)&255)<<18 | uint64((data[34]>>0)&255)<<26 | uint64((data[35]>>0)&127)<<34)
	a[7] = int64(uint64((data[35]>>7)&1)<<0 | uint64((data[36]>>0)&255)<<1 | uint64((data[37]>>0)&255)<<9 | uint64((data[38]>>0)&255)<<17 | uint64((data[39]>>0)&255)<<25 | uint64((data[40]>>0)&255)<<33)
	return
}

func pack8int64_41(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0])>>40 | uint64(data[1])<<1),
		byte(uint64(data[1]) >> 7),
		byte(uint64(data[1]) >> 15),
		byte(uint64(data[1]) >> 23),
		byte(uint64(data[1]) >> 31),
		byte(uint64(data[1])>>39 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2]) >> 14),
		byte(uint64(data[2]) >> 22),
		byte(uint64(data[2]) >> 30),
		byte(uint64(data[2])>>38 | uint64(data[3])<<3),
		byte(uint64(data[3]) >> 5),
		byte(uint64(data[3]) >> 13),
		byte(uint64(data[3]) >> 21),
		byte(uint64(data[3]) >> 29),
		byte(uint64(data[3])>>37 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4])>>36 | uint64(data[5])<<5),
		byte(uint64(data[5]) >> 3),
		byte(uint64(data[5]) >> 11),
		byte(uint64(data[5]) >> 19),
		byte(uint64(data[5]) >> 27),
		byte(uint64(data[5])>>35 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6]) >> 10),
		byte(uint64(data[6]) >> 18),
		byte(uint64(data[6]) >> 26),
		byte(uint64(data[6])>>34 | uint64(data[7])<<7),
		byte(uint64(data[7]) >> 1),
		byte(uint64(data[7]) >> 9),
		byte(uint64(data[7]) >> 17),
		byte(uint64(data[7]) >> 25),
		byte(uint64(data[7]) >> 33),
	}
}

func unpack8int64_42(data []byte) (a [8]int64) {
	_ = data[41]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&3)<<40)
	a[1] = int64(uint64((data[5]>>2)&63)<<0 | uint64((data[6]>>0)&255)<<6 | uint64((data[7]>>0)&255)<<14 | uint64((data[8]>>0)&255)<<22 | uint64((data[9]>>0)&255)<<30 | uint64((data[10]>>0)&15)<<38)
	a[2] = int64(uint64((data[10]>>4)&15)<<0 | uint64((data[11]>>0)&255)<<4 | uint64((data[12]>>0)&255)<<12 | uint64((data[13]>>0)&255)<<20 | uint64((data[14]>>0)&255)<<28 | uint64((data[15]>>0)&63)<<36)
	a[3] = int64(uint64((data[15]>>6)&3)<<0 | uint64((data[16]>>0)&255)<<2 | uint64((data[17]>>0)&255)<<10 | uint64((data[18]>>0)&255)<<18 | uint64((data[19]>>0)&255)<<26 | uint64((data[20]>>0)&255)<<34)
	a[4] = int64(uint64((data[21]>>0)&255)<<0 | uint64((data[22]>>0)&255)<<8 | uint64((data[23]>>0)&255)<<16 | uint64((data[24]>>0)&255)<<24 | uint64((data[25]>>0)&255)<<32 | uint64((data[26]>>0)&3)<<40)
	a[5] = int64(uint64((data[26]>>2)&63)<<0 | uint64((data[27]>>0)&255)<<6 | uint64((data[28]>>0)&255)<<14 | uint64((data[29]>>0)&255)<<22 | uint64((data[30]>>0)&255)<<30 | uint64((data[31]>>0)&15)<<38)
	a[6] = int64(uint64((data[31]>>4)&15)<<0 | uint64((data[32]>>0)&255)<<4 | uint64((data[33]>>0)&255)<<12 | uint64((data[34]>>0)&255)<<20 | uint64((data[35]>>0)&255)<<28 | uint64((data[36]>>0)&63)<<36)
	a[7] = int64(uint64((data[36]>>6)&3)<<0 | uint64((data[37]>>0)&255)<<2 | uint64((data[38]>>0)&255)<<10 | uint64((data[39]>>0)&255)<<18 | uint64((data[40]>>0)&255)<<26 | uint64((data[41]>>0)&255)<<34)
	return
}

func pack8int64_42(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0])>>40 | uint64(data[1])<<2),
		byte(uint64(data[1]) >> 6),
		byte(uint64(data[1]) >> 14),
		byte(uint64(data[1]) >> 22),
		byte(uint64(data[1]) >> 30),
		byte(uint64(data[1])>>38 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2]) >> 12),
		byte(uint64(data[2]) >> 20),
		byte(uint64(data[2]) >> 28),
		byte(uint64(data[2])>>36 | uint64(data[3])<<6),
		byte(uint64(data[3]) >> 2),
		byte(uint64(data[3]) >> 10),
		byte(uint64(data[3]) >> 18),
		byte(uint64(data[3]) >> 26),
		byte(uint64(data[3]) >> 34),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4])>>40 | uint64(data[5])<<2),
		byte(uint64(data[5]) >> 6),
		byte(uint64(data[5]) >> 14),
		byte(uint64(data[5]) >> 22),
		byte(uint64(data[5]) >> 30),
		byte(uint64(data[5])>>38 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6]) >> 12),
		byte(uint64(data[6]) >> 20),
		byte(uint64(data[6]) >> 28),
		byte(uint64(data[6])>>36 | uint64(data[7])<<6),
		byte(uint64(data[7]) >> 2),
		byte(uint64(data[7]) >> 10),
		byte(uint64(data[7]) >> 18),
		byte(uint64(data[7]) >> 26),
		byte(uint64(data[7]) >> 34),
	}
}

func unpack8int64_43(data []byte) (a [8]int64) {
	_ = data[42]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&7)<<40)
	a[1] = int64(uint64((data[5]>>3)&31)<<0 | uint64((data[6]>>0)&255)<<5 | uint64((data[7]>>0)&255)<<13 | uint64((data[8]>>0)&255)<<21 | uint64((data[9]>>0)&255)<<29 | uint64((data[10]>>0)&63)<<37)
	a[2] = int64(uint64((data[10]>>6)&3)<<0 | uint64((data[11]>>0)&255)<<2 | uint64((data[12]>>0)&255)<<10 | uint64((data[13]>>0)&255)<<18 | uint64((data[14]>>0)&255)<<26 | uint64((data[15]>>0)&255)<<34 | uint64((data[16]>>0)&1)<<42)
	a[3] = int64(uint64((data[16]>>1)&127)<<0 | uint64((data[17]>>0)&255)<<7 | uint64((data[18]>>0)&255)<<15 | uint64((data[19]>>0)&255)<<23 | uint64((data[20]>>0)&255)<<31 | uint64((data[21]>>0)&15)<<39)
	a[4] = int64(uint64((data[21]>>4)&15)<<0 | uint64((data[22]>>0)&255)<<4 | uint64((data[23]>>0)&255)<<12 | uint64((data[24]>>0)&255)<<20 | uint64((data[25]>>0)&255)<<28 | uint64((data[26]>>0)&127)<<36)
	a[5] = int64(uint64((data[26]>>7)&1)<<0 | uint64((data[27]>>0)&255)<<1 | uint64((data[28]>>0)&255)<<9 | uint64((data[29]>>0)&255)<<17 | uint64((data[30]>>0)&255)<<25 | uint64((data[31]>>0)&255)<<33 | uint64((data[32]>>0)&3)<<41)
	a[6] = int64(uint64((data[32]>>2)&63)<<0 | uint64((data[33]>>0)&255)<<6 | uint64((data[34]>>0)&255)<<14 | uint64((data[35]>>0)&255)<<22 | uint64((data[36]>>0)&255)<<30 | uint64((data[37]>>0)&31)<<38)
	a[7] = int64(uint64((data[37]>>5)&7)<<0 | uint64((data[38]>>0)&255)<<3 | uint64((data[39]>>0)&255)<<11 | uint64((data[40]>>0)&255)<<19 | uint64((data[41]>>0)&255)<<27 | uint64((data[42]>>0)&255)<<35)
	return
}

func pack8int64_43(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0])>>40 | uint64(data[1])<<3),
		byte(uint64(data[1]) >> 5),
		byte(uint64(data[1]) >> 13),
		byte(uint64(data[1]) >> 21),
		byte(uint64(data[1]) >> 29),
		byte(uint64(data[1])>>37 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2]) >> 18),
		byte(uint64(data[2]) >> 26),
		byte(uint64(data[2]) >> 34),
		byte(uint64(data[2])>>42 | uint64(data[3])<<1),
		byte(uint64(data[3]) >> 7),
		byte(uint64(data[3]) >> 15),
		byte(uint64(data[3]) >> 23),
		byte(uint64(data[3]) >> 31),
		byte(uint64(data[3])>>39 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4])>>36 | uint64(data[5])<<7),
		byte(uint64(data[5]) >> 1),
		byte(uint64(data[5]) >> 9),
		byte(uint64(data[5]) >> 17),
		byte(uint64(data[5]) >> 25),
		byte(uint64(data[5]) >> 33),
		byte(uint64(data[5])>>41 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6]) >> 14),
		byte(uint64(data[6]) >> 22),
		byte(uint64(data[6]) >> 30),
		byte(uint64(data[6])>>38 | uint64(data[7])<<5),
		byte(uint64(data[7]) >> 3),
		byte(uint64(data[7]) >> 11),
		byte(uint64(data[7]) >> 19),
		byte(uint64(data[7]) >> 27),
		byte(uint64(data[7]) >> 35),
	}
}

func unpack8int64_44(data []byte) (a [8]int64) {
	_ = data[43]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&15)<<40)
	a[1] = int64(uint64((data[5]>>4)&15)<<0 | uint64((data[6]>>0)&255)<<4 | uint64((data[7]>>0)&255)<<12 | uint64((data[8]>>0)&255)<<20 | uint64((data[9]>>0)&255)<<28 | uint64((data[10]>>0)&255)<<36)
	a[2] = int64(uint64((data[11]>>0)&255)<<0 | uint64((data[12]>>0)&255)<<8 | uint64((data[13]>>0)&255)<<16 | uint64((data[14]>>0)&255)<<24 | uint64((data[15]>>0)&255)<<32 | uint64((data[16]>>0)&15)<<40)
	a[3] = int64(uint64((data[16]>>4)&15)<<0 | uint64((data[17]>>0)&255)<<4 | uint64((data[18]>>0)&255)<<12 | uint64((data[19]>>0)&255)<<20 | uint64((data[20]>>0)&255)<<28 | uint64((data[21]>>0)&255)<<36)
	a[4] = int64(uint64((data[22]>>0)&255)<<0 | uint64((data[23]>>0)&255)<<8 | uint64((data[24]>>0)&255)<<16 | uint64((data[25]>>0)&255)<<24 | uint64((data[26]>>0)&255)<<32 | uint64((data[27]>>0)&15)<<40)
	a[5] = int64(uint64((data[27]>>4)&15)<<0 | uint64((data[28]>>0)&255)<<4 | uint64((data[29]>>0)&255)<<12 | uint64((data[30]>>0)&255)<<20 | uint64((data[31]>>0)&255)<<28 | uint64((data[32]>>0)&255)<<36)
	a[6] = int64(uint64((data[33]>>0)&255)<<0 | uint64((data[34]>>0)&255)<<8 | uint64((data[35]>>0)&255)<<16 | uint64((data[36]>>0)&255)<<24 | uint64((data[37]>>0)&255)<<32 | uint64((data[38]>>0)&15)<<40)
	a[7] = int64(uint64((data[38]>>4)&15)<<0 | uint64((data[39]>>0)&255)<<4 | uint64((data[40]>>0)&255)<<12 | uint64((data[41]>>0)&255)<<20 | uint64((data[42]>>0)&255)<<28 | uint64((data[43]>>0)&255)<<36)
	return
}

func pack8int64_44(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0])>>40 | uint64(data[1])<<4),
		byte(uint64(data[1]) >> 4),
		byte(uint64(data[1]) >> 12),
		byte(uint64(data[1]) >> 20),
		byte(uint64(data[1]) >> 28),
		byte(uint64(data[1]) >> 36),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2]) >> 16),
		byte(uint64(data[2]) >> 24),
		byte(uint64(data[2]) >> 32),
		byte(uint64(data[2])>>40 | uint64(data[3])<<4),
		byte(uint64(data[3]) >> 4),
		byte(uint64(data[3]) >> 12),
		byte(uint64(data[3]) >> 20),
		byte(uint64(data[3]) >> 28),
		byte(uint64(data[3]) >> 36),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4])>>40 | uint64(data[5])<<4),
		byte(uint64(data[5]) >> 4),
		byte(uint64(data[5]) >> 12),
		byte(uint64(data[5]) >> 20),
		byte(uint64(data[5]) >> 28),
		byte(uint64(data[5]) >> 36),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6]) >> 16),
		byte(uint64(data[6]) >> 24),
		byte(uint64(data[6]) >> 32),
		byte(uint64(data[6])>>40 | uint64(data[7])<<4),
		byte(uint64(data[7]) >> 4),
		byte(uint64(data[7]) >> 12),
		byte(uint64(data[7]) >> 20),
		byte(uint64(data[7]) >> 28),
		byte(uint64(data[7]) >> 36),
	}
}

func unpack8int64_45(data []byte) (a [8]int64) {
	_ = data[44]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&31)<<40)
	a[1] = int64(uint64((data[5]>>5)&7)<<0 | uint64((data[6]>>0)&255)<<3 | uint64((data[7]>>0)&255)<<11 | uint64((data[8]>>0)&255)<<19 | uint64((data[9]>>0)&255)<<27 | uint64((data[10]>>0)&255)<<35 | uint64((data[11]>>0)&3)<<43)
	a[2] = int64(uint64((data[11]>>2)&63)<<0 | uint64((data[12]>>0)&255)<<6 | uint64((data[13]>>0)&255)<<14 | uint64((data[14]>>0)&255)<<22 | uint64((data[15]>>0)&255)<<30 | uint64((data[16]>>0)&127)<<38)
	a[3] = int64(uint64((data[16]>>7)&1)<<0 | uint64((data[17]>>0)&255)<<1 | uint64((data[18]>>0)&255)<<9 | uint64((data[19]>>0)&255)<<17 | uint64((data[20]>>0)&255)<<25 | uint64((data[21]>>0)&255)<<33 | uint64((data[22]>>0)&15)<<41)
	a[4] = int64(uint64((data[22]>>4)&15)<<0 | uint64((data[23]>>0)&255)<<4 | uint64((data[24]>>0)&255)<<12 | uint64((data[25]>>0)&255)<<20 | uint64((data[26]>>0)&255)<<28 | uint64((data[27]>>0)&255)<<36 | uint64((data[28]>>0)&1)<<44)
	a[5] = int64(uint64((data[28]>>1)&127)<<0 | uint64((data[29]>>0)&255)<<7 | uint64((data[30]>>0)&255)<<15 | uint64((data[31]>>0)&255)<<23 | uint64((data[32]>>0)&255)<<31 | uint64((data[33]>>0)&63)<<39)
	a[6] = int64(uint64((data[33]>>6)&3)<<0 | uint64((data[34]>>0)&255)<<2 | uint64((data[35]>>0)&255)<<10 | uint64((data[36]>>0)&255)<<18 | uint64((data[37]>>0)&255)<<26 | uint64((data[38]>>0)&255)<<34 | uint64((data[39]>>0)&7)<<42)
	a[7] = int64(uint64((data[39]>>3)&31)<<0 | uint64((data[40]>>0)&255)<<5 | uint64((data[41]>>0)&255)<<13 | uint64((data[42]>>0)&255)<<21 | uint64((data[43]>>0)&255)<<29 | uint64((data[44]>>0)&255)<<37)
	return
}

func pack8int64_45(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0])>>40 | uint64(data[1])<<5),
		byte(uint64(data[1]) >> 3),
		byte(uint64(data[1]) >> 11),
		byte(uint64(data[1]) >> 19),
		byte(uint64(data[1]) >> 27),
		byte(uint64(data[1]) >> 35),
		byte(uint64(data[1])>>43 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2]) >> 14),
		byte(uint64(data[2]) >> 22),
		byte(uint64(data[2]) >> 30),
		byte(uint64(data[2])>>38 | uint64(data[3])<<7),
		byte(uint64(data[3]) >> 1),
		byte(uint64(data[3]) >> 9),
		byte(uint64(data[3]) >> 17),
		byte(uint64(data[3]) >> 25),
		byte(uint64(data[3]) >> 33),
		byte(uint64(data[3])>>41 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4]) >> 36),
		byte(uint64(data[4])>>44 | uint64(data[5])<<1),
		byte(uint64(data[5]) >> 7),
		byte(uint64(data[5]) >> 15),
		byte(uint64(data[5]) >> 23),
		byte(uint64(data[5]) >> 31),
		byte(uint64(data[5])>>39 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6]) >> 10),
		byte(uint64(data[6]) >> 18),
		byte(uint64(data[6]) >> 26),
		byte(uint64(data[6]) >> 34),
		byte(uint64(data[6])>>42 | uint64(data[7])<<3),
		byte(uint64(data[7]) >> 5),
		byte(uint64(data[7]) >> 13),
		byte(uint64(data[7]) >> 21),
		byte(uint64(data[7]) >> 29),
		byte(uint64(data[7]) >> 37),
	}
}

func unpack8int64_46(data []byte) (a [8]int64) {
	_ = data[45]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&63)<<40)
	a[1] = int64(uint64((data[5]>>6)&3)<<0 | uint64((data[6]>>0)&255)<<2 | uint64((data[7]>>0)&255)<<10 | uint64((data[8]>>0)&255)<<18 | uint64((data[9]>>0)&255)<<26 | uint64((data[10]>>0)&255)<<34 | uint64((data[11]>>0)&15)<<42)
	a[2] = int64(uint64((data[11]>>4)&15)<<0 | uint64((data[12]>>0)&255)<<4 | uint64((data[13]>>0)&255)<<12 | uint64((data[14]>>0)&255)<<20 | uint64((data[15]>>0)&255)<<28 | uint64((data[16]>>0)&255)<<36 | uint64((data[17]>>0)&3)<<44)
	a[3] = int64(uint64((data[17]>>2)&63)<<0 | uint64((data[18]>>0)&255)<<6 | uint64((data[19]>>0)&255)<<14 | uint64((data[20]>>0)&255)<<22 | uint64((data[21]>>0)&255)<<30 | uint64((data[22]>>0)&255)<<38)
	a[4] = int64(uint64((data[23]>>0)&255)<<0 | uint64((data[24]>>0)&255)<<8 | uint64((data[25]>>0)&255)<<16 | uint64((data[26]>>0)&255)<<24 | uint64((data[27]>>0)&255)<<32 | uint64((data[28]>>0)&63)<<40)
	a[5] = int64(uint64((data[28]>>6)&3)<<0 | uint64((data[29]>>0)&255)<<2 | uint64((data[30]>>0)&255)<<10 | uint64((data[31]>>0)&255)<<18 | uint64((data[32]>>0)&255)<<26 | uint64((data[33]>>0)&255)<<34 | uint64((data[34]>>0)&15)<<42)
	a[6] = int64(uint64((data[34]>>4)&15)<<0 | uint64((data[35]>>0)&255)<<4 | uint64((data[36]>>0)&255)<<12 | uint64((data[37]>>0)&255)<<20 | uint64((data[38]>>0)&255)<<28 | uint64((data[39]>>0)&255)<<36 | uint64((data[40]>>0)&3)<<44)
	a[7] = int64(uint64((data[40]>>2)&63)<<0 | uint64((data[41]>>0)&255)<<6 | uint64((data[42]>>0)&255)<<14 | uint64((data[43]>>0)&255)<<22 | uint64((data[44]>>0)&255)<<30 | uint64((data[45]>>0)&255)<<38)
	return
}

func pack8int64_46(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0])>>40 | uint64(data[1])<<6),
		byte(uint64(data[1]) >> 2),
		byte(uint64(data[1]) >> 10),
		byte(uint64(data[1]) >> 18),
		byte(uint64(data[1]) >> 26),
		byte(uint64(data[1]) >> 34),
		byte(uint64(data[1])>>42 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2]) >> 12),
		byte(uint64(data[2]) >> 20),
		byte(uint64(data[2]) >> 28),
		byte(uint64(data[2]) >> 36),
		byte(uint64(data[2])>>44 | uint64(data[3])<<2),
		byte(uint64(data[3]) >> 6),
		byte(uint64(data[3]) >> 14),
		byte(uint64(data[3]) >> 22),
		byte(uint64(data[3]) >> 30),
		byte(uint64(data[3]) >> 38),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4])>>40 | uint64(data[5])<<6),
		byte(uint64(data[5]) >> 2),
		byte(uint64(data[5]) >> 10),
		byte(uint64(data[5]) >> 18),
		byte(uint64(data[5]) >> 26),
		byte(uint64(data[5]) >> 34),
		byte(uint64(data[5])>>42 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6]) >> 12),
		byte(uint64(data[6]) >> 20),
		byte(uint64(data[6]) >> 28),
		byte(uint64(data[6]) >> 36),
		byte(uint64(data[6])>>44 | uint64(data[7])<<2),
		byte(uint64(data[7]) >> 6),
		byte(uint64(data[7]) >> 14),
		byte(uint64(data[7]) >> 22),
		byte(uint64(data[7]) >> 30),
		byte(uint64(data[7]) >> 38),
	}
}

func unpack8int64_47(data []byte) (a [8]int64) {
	_ = data[46]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&127)<<40)
	a[1] = int64(uint64((data[5]>>7)&1)<<0 | uint64((data[6]>>0)&255)<<1 | uint64((data[7]>>0)&255)<<9 | uint64((data[8]>>0)&255)<<17 | uint64((data[9]>>0)&255)<<25 | uint64((data[10]>>0)&255)<<33 | uint64((data[11]>>0)&63)<<41)
	a[2] = int64(uint64((data[11]>>6)&3)<<0 | uint64((data[12]>>0)&255)<<2 | uint64((data[13]>>0)&255)<<10 | uint64((data[14]>>0)&255)<<18 | uint64((data[15]>>0)&255)<<26 | uint64((data[16]>>0)&255)<<34 | uint64((data[17]>>0)&31)<<42)
	a[3] = int64(uint64((data[17]>>5)&7)<<0 | uint64((data[18]>>0)&255)<<3 | uint64((data[19]>>0)&255)<<11 | uint64((data[20]>>0)&255)<<19 | uint64((data[21]>>0)&255)<<27 | uint64((data[22]>>0)&255)<<35 | uint64((data[23]>>0)&15)<<43)
	a[4] = int64(uint64((data[23]>>4)&15)<<0 | uint64((data[24]>>0)&255)<<4 | uint64((data[25]>>0)&255)<<12 | uint64((data[26]>>0)&255)<<20 | uint64((data[27]>>0)&255)<<28 | uint64((data[28]>>0)&255)<<36 | uint64((data[29]>>0)&7)<<44)
	a[5] = int64(uint64((data[29]>>3)&31)<<0 | uint64((data[30]>>0)&255)<<5 | uint64((data[31]>>0)&255)<<13 | uint64((data[32]>>0)&255)<<21 | uint64((data[33]>>0)&255)<<29 | uint64((data[34]>>0)&255)<<37 | uint64((data[35]>>0)&3)<<45)
	a[6] = int64(uint64((data[35]>>2)&63)<<0 | uint64((data[36]>>0)&255)<<6 | uint64((data[37]>>0)&255)<<14 | uint64((data[38]>>0)&255)<<22 | uint64((data[39]>>0)&255)<<30 | uint64((data[40]>>0)&255)<<38 | uint64((data[41]>>0)&1)<<46)
	a[7] = int64(uint64((data[41]>>1)&127)<<0 | uint64((data[42]>>0)&255)<<7 | uint64((data[43]>>0)&255)<<15 | uint64((data[44]>>0)&255)<<23 | uint64((data[45]>>0)&255)<<31 | uint64((data[46]>>0)&255)<<39)
	return
}

func pack8int64_47(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0])>>40 | uint64(data[1])<<7),
		byte(uint64(data[1]) >> 1),
		byte(uint64(data[1]) >> 9),
		byte(uint64(data[1]) >> 17),
		byte(uint64(data[1]) >> 25),
		byte(uint64(data[1]) >> 33),
		byte(uint64(data[1])>>41 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2]) >> 18),
		byte(uint64(data[2]) >> 26),
		byte(uint64(data[2]) >> 34),
		byte(uint64(data[2])>>42 | uint64(data[3])<<5),
		byte(uint64(data[3]) >> 3),
		byte(uint64(data[3]) >> 11),
		byte(uint64(data[3]) >> 19),
		byte(uint64(data[3]) >> 27),
		byte(uint64(data[3]) >> 35),
		byte(uint64(data[3])>>43 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4]) >> 36),
		byte(uint64(data[4])>>44 | uint64(data[5])<<3),
		byte(uint64(data[5]) >> 5),
		byte(uint64(data[5]) >> 13),
		byte(uint64(data[5]) >> 21),
		byte(uint64(data[5]) >> 29),
		byte(uint64(data[5]) >> 37),
		byte(uint64(data[5])>>45 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6]) >> 14),
		byte(uint64(data[6]) >> 22),
		byte(uint64(data[6]) >> 30),
		byte(uint64(data[6]) >> 38),
		byte(uint64(data[6])>>46 | uint64(data[7])<<1),
		byte(uint64(data[7]) >> 7),
		byte(uint64(data[7]) >> 15),
		byte(uint64(data[7]) >> 23),
		byte(uint64(data[7]) >> 31),
		byte(uint64(data[7]) >> 39),
	}
}

func unpack8int64_48(data []byte) (a [8]int64) {
	_ = data[47]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40)
	a[1] = int64(uint64((data[6]>>0)&255)<<0 | uint64((data[7]>>0)&255)<<8 | uint64((data[8]>>0)&255)<<16 | uint64((data[9]>>0)&255)<<24 | uint64((data[10]>>0)&255)<<32 | uint64((data[11]>>0)&255)<<40)
	a[2] = int64(uint64((data[12]>>0)&255)<<0 | uint64((data[13]>>0)&255)<<8 | uint64((data[14]>>0)&255)<<16 | uint64((data[15]>>0)&255)<<24 | uint64((data[16]>>0)&255)<<32 | uint64((data[17]>>0)&255)<<40)
	a[3] = int64(uint64((data[18]>>0)&255)<<0 | uint64((data[19]>>0)&255)<<8 | uint64((data[20]>>0)&255)<<16 | uint64((data[21]>>0)&255)<<24 | uint64((data[22]>>0)&255)<<32 | uint64((data[23]>>0)&255)<<40)
	a[4] = int64(uint64((data[24]>>0)&255)<<0 | uint64((data[25]>>0)&255)<<8 | uint64((data[26]>>0)&255)<<16 | uint64((data[27]>>0)&255)<<24 | uint64((data[28]>>0)&255)<<32 | uint64((data[29]>>0)&255)<<40)
	a[5] = int64(uint64((data[30]>>0)&255)<<0 | uint64((data[31]>>0)&255)<<8 | uint64((data[32]>>0)&255)<<16 | uint64((data[33]>>0)&255)<<24 | uint64((data[34]>>0)&255)<<32 | uint64((data[35]>>0)&255)<<40)
	a[6] = int64(uint64((data[36]>>0)&255)<<0 | uint64((data[37]>>0)&255)<<8 | uint64((data[38]>>0)&255)<<16 | uint64((data[39]>>0)&255)<<24 | uint64((data[40]>>0)&255)<<32 | uint64((data[41]>>0)&255)<<40)
	a[7] = int64(uint64((data[42]>>0)&255)<<0 | uint64((data[43]>>0)&255)<<8 | uint64((data[44]>>0)&255)<<16 | uint64((data[45]>>0)&255)<<24 | uint64((data[46]>>0)&255)<<32 | uint64((data[47]>>0)&255)<<40)
	return
}

func pack8int64_48(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[1]) << 0),
		byte(uint64(data[1]) >> 8),
		byte(uint64(data[1]) >> 16),
		byte(uint64(data[1]) >> 24),
		byte(uint64(data[1]) >> 32),
		byte(uint64(data[1]) >> 40),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2]) >> 16),
		byte(uint64(data[2]) >> 24),
		byte(uint64(data[2]) >> 32),
		byte(uint64(data[2]) >> 40),
		byte(uint64(data[3]) << 0),
		byte(uint64(data[3]) >> 8),
		byte(uint64(data[3]) >> 16),
		byte(uint64(data[3]) >> 24),
		byte(uint64(data[3]) >> 32),
		byte(uint64(data[3]) >> 40),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4]) >> 40),
		byte(uint64(data[5]) << 0),
		byte(uint64(data[5]) >> 8),
		byte(uint64(data[5]) >> 16),
		byte(uint64(data[5]) >> 24),
		byte(uint64(data[5]) >> 32),
		byte(uint64(data[5]) >> 40),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6]) >> 16),
		byte(uint64(data[6]) >> 24),
		byte(uint64(data[6]) >> 32),
		byte(uint64(data[6]) >> 40),
		byte(uint64(data[7]) << 0),
		byte(uint64(data[7]) >> 8),
		byte(uint64(data[7]) >> 16),
		byte(uint64(data[7]) >> 24),
		byte(uint64(data[7]) >> 32),
		byte(uint64(data[7]) >> 40),
	}
}

func unpack8int64_49(data []byte) (a [8]int64) {
	_ = data[48]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&1)<<48)
	a[1] = int64(uint64((data[6]>>1)&127)<<0 | uint64((data[7]>>0)&255)<<7 | uint64((data[8]>>0)&255)<<15 | uint64((data[9]>>0)&255)<<23 | uint64((data[10]>>0)&255)<<31 | uint64((data[11]>>0)&255)<<39 | uint64((data[12]>>0)&3)<<47)
	a[2] = int64(uint64((data[12]>>2)&63)<<0 | uint64((data[13]>>0)&255)<<6 | uint64((data[14]>>0)&255)<<14 | uint64((data[15]>>0)&255)<<22 | uint64((data[16]>>0)&255)<<30 | uint64((data[17]>>0)&255)<<38 | uint64((data[18]>>0)&7)<<46)
	a[3] = int64(uint64((data[18]>>3)&31)<<0 | uint64((data[19]>>0)&255)<<5 | uint64((data[20]>>0)&255)<<13 | uint64((data[21]>>0)&255)<<21 | uint64((data[22]>>0)&255)<<29 | uint64((data[23]>>0)&255)<<37 | uint64((data[24]>>0)&15)<<45)
	a[4] = int64(uint64((data[24]>>4)&15)<<0 | uint64((data[25]>>0)&255)<<4 | uint64((data[26]>>0)&255)<<12 | uint64((data[27]>>0)&255)<<20 | uint64((data[28]>>0)&255)<<28 | uint64((data[29]>>0)&255)<<36 | uint64((data[30]>>0)&31)<<44)
	a[5] = int64(uint64((data[30]>>5)&7)<<0 | uint64((data[31]>>0)&255)<<3 | uint64((data[32]>>0)&255)<<11 | uint64((data[33]>>0)&255)<<19 | uint64((data[34]>>0)&255)<<27 | uint64((data[35]>>0)&255)<<35 | uint64((data[36]>>0)&63)<<43)
	a[6] = int64(uint64((data[36]>>6)&3)<<0 | uint64((data[37]>>0)&255)<<2 | uint64((data[38]>>0)&255)<<10 | uint64((data[39]>>0)&255)<<18 | uint64((data[40]>>0)&255)<<26 | uint64((data[41]>>0)&255)<<34 | uint64((data[42]>>0)&127)<<42)
	a[7] = int64(uint64((data[42]>>7)&1)<<0 | uint64((data[43]>>0)&255)<<1 | uint64((data[44]>>0)&255)<<9 | uint64((data[45]>>0)&255)<<17 | uint64((data[46]>>0)&255)<<25 | uint64((data[47]>>0)&255)<<33 | uint64((data[48]>>0)&255)<<41)
	return
}

func pack8int64_49(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0])>>48 | uint64(data[1])<<1),
		byte(uint64(data[1]) >> 7),
		byte(uint64(data[1]) >> 15),
		byte(uint64(data[1]) >> 23),
		byte(uint64(data[1]) >> 31),
		byte(uint64(data[1]) >> 39),
		byte(uint64(data[1])>>47 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2]) >> 14),
		byte(uint64(data[2]) >> 22),
		byte(uint64(data[2]) >> 30),
		byte(uint64(data[2]) >> 38),
		byte(uint64(data[2])>>46 | uint64(data[3])<<3),
		byte(uint64(data[3]) >> 5),
		byte(uint64(data[3]) >> 13),
		byte(uint64(data[3]) >> 21),
		byte(uint64(data[3]) >> 29),
		byte(uint64(data[3]) >> 37),
		byte(uint64(data[3])>>45 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4]) >> 36),
		byte(uint64(data[4])>>44 | uint64(data[5])<<5),
		byte(uint64(data[5]) >> 3),
		byte(uint64(data[5]) >> 11),
		byte(uint64(data[5]) >> 19),
		byte(uint64(data[5]) >> 27),
		byte(uint64(data[5]) >> 35),
		byte(uint64(data[5])>>43 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6]) >> 10),
		byte(uint64(data[6]) >> 18),
		byte(uint64(data[6]) >> 26),
		byte(uint64(data[6]) >> 34),
		byte(uint64(data[6])>>42 | uint64(data[7])<<7),
		byte(uint64(data[7]) >> 1),
		byte(uint64(data[7]) >> 9),
		byte(uint64(data[7]) >> 17),
		byte(uint64(data[7]) >> 25),
		byte(uint64(data[7]) >> 33),
		byte(uint64(data[7]) >> 41),
	}
}

func unpack8int64_50(data []byte) (a [8]int64) {
	_ = data[49]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&3)<<48)
	a[1] = int64(uint64((data[6]>>2)&63)<<0 | uint64((data[7]>>0)&255)<<6 | uint64((data[8]>>0)&255)<<14 | uint64((data[9]>>0)&255)<<22 | uint64((data[10]>>0)&255)<<30 | uint64((data[11]>>0)&255)<<38 | uint64((data[12]>>0)&15)<<46)
	a[2] = int64(uint64((data[12]>>4)&15)<<0 | uint64((data[13]>>0)&255)<<4 | uint64((data[14]>>0)&255)<<12 | uint64((data[15]>>0)&255)<<20 | uint64((data[16]>>0)&255)<<28 | uint64((data[17]>>0)&255)<<36 | uint64((data[18]>>0)&63)<<44)
	a[3] = int64(uint64((data[18]>>6)&3)<<0 | uint64((data[19]>>0)&255)<<2 | uint64((data[20]>>0)&255)<<10 | uint64((data[21]>>0)&255)<<18 | uint64((data[22]>>0)&255)<<26 | uint64((data[23]>>0)&255)<<34 | uint64((data[24]>>0)&255)<<42)
	a[4] = int64(uint64((data[25]>>0)&255)<<0 | uint64((data[26]>>0)&255)<<8 | uint64((data[27]>>0)&255)<<16 | uint64((data[28]>>0)&255)<<24 | uint64((data[29]>>0)&255)<<32 | uint64((data[30]>>0)&255)<<40 | uint64((data[31]>>0)&3)<<48)
	a[5] = int64(uint64((data[31]>>2)&63)<<0 | uint64((data[32]>>0)&255)<<6 | uint64((data[33]>>0)&255)<<14 | uint64((data[34]>>0)&255)<<22 | uint64((data[35]>>0)&255)<<30 | uint64((data[36]>>0)&255)<<38 | uint64((data[37]>>0)&15)<<46)
	a[6] = int64(uint64((data[37]>>4)&15)<<0 | uint64((data[38]>>0)&255)<<4 | uint64((data[39]>>0)&255)<<12 | uint64((data[40]>>0)&255)<<20 | uint64((data[41]>>0)&255)<<28 | uint64((data[42]>>0)&255)<<36 | uint64((data[43]>>0)&63)<<44)
	a[7] = int64(uint64((data[43]>>6)&3)<<0 | uint64((data[44]>>0)&255)<<2 | uint64((data[45]>>0)&255)<<10 | uint64((data[46]>>0)&255)<<18 | uint64((data[47]>>0)&255)<<26 | uint64((data[48]>>0)&255)<<34 | uint64((data[49]>>0)&255)<<42)
	return
}

func pack8int64_50(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0])>>48 | uint64(data[1])<<2),
		byte(uint64(data[1]) >> 6),
		byte(uint64(data[1]) >> 14),
		byte(uint64(data[1]) >> 22),
		byte(uint64(data[1]) >> 30),
		byte(uint64(data[1]) >> 38),
		byte(uint64(data[1])>>46 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2]) >> 12),
		byte(uint64(data[2]) >> 20),
		byte(uint64(data[2]) >> 28),
		byte(uint64(data[2]) >> 36),
		byte(uint64(data[2])>>44 | uint64(data[3])<<6),
		byte(uint64(data[3]) >> 2),
		byte(uint64(data[3]) >> 10),
		byte(uint64(data[3]) >> 18),
		byte(uint64(data[3]) >> 26),
		byte(uint64(data[3]) >> 34),
		byte(uint64(data[3]) >> 42),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4]) >> 40),
		byte(uint64(data[4])>>48 | uint64(data[5])<<2),
		byte(uint64(data[5]) >> 6),
		byte(uint64(data[5]) >> 14),
		byte(uint64(data[5]) >> 22),
		byte(uint64(data[5]) >> 30),
		byte(uint64(data[5]) >> 38),
		byte(uint64(data[5])>>46 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6]) >> 12),
		byte(uint64(data[6]) >> 20),
		byte(uint64(data[6]) >> 28),
		byte(uint64(data[6]) >> 36),
		byte(uint64(data[6])>>44 | uint64(data[7])<<6),
		byte(uint64(data[7]) >> 2),
		byte(uint64(data[7]) >> 10),
		byte(uint64(data[7]) >> 18),
		byte(uint64(data[7]) >> 26),
		byte(uint64(data[7]) >> 34),
		byte(uint64(data[7]) >> 42),
	}
}

func unpack8int64_51(data []byte) (a [8]int64) {
	_ = data[50]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&7)<<48)
	a[1] = int64(uint64((data[6]>>3)&31)<<0 | uint64((data[7]>>0)&255)<<5 | uint64((data[8]>>0)&255)<<13 | uint64((data[9]>>0)&255)<<21 | uint64((data[10]>>0)&255)<<29 | uint64((data[11]>>0)&255)<<37 | uint64((data[12]>>0)&63)<<45)
	a[2] = int64(uint64((data[12]>>6)&3)<<0 | uint64((data[13]>>0)&255)<<2 | uint64((data[14]>>0)&255)<<10 | uint64((data[15]>>0)&255)<<18 | uint64((data[16]>>0)&255)<<26 | uint64((data[17]>>0)&255)<<34 | uint64((data[18]>>0)&255)<<42 | uint64((data[19]>>0)&1)<<50)
	a[3] = int64(uint64((data[19]>>1)&127)<<0 | uint64((data[20]>>0)&255)<<7 | uint64((data[21]>>0)&255)<<15 | uint64((data[22]>>0)&255)<<23 | uint64((data[23]>>0)&255)<<31 | uint64((data[24]>>0)&255)<<39 | uint64((data[25]>>0)&15)<<47)
	a[4] = int64(uint64((data[25]>>4)&15)<<0 | uint64((data[26]>>0)&255)<<4 | uint64((data[27]>>0)&255)<<12 | uint64((data[28]>>0)&255)<<20 | uint64((data[29]>>0)&255)<<28 | uint64((data[30]>>0)&255)<<36 | uint64((data[31]>>0)&127)<<44)
	a[5] = int64(uint64((data[31]>>7)&1)<<0 | uint64((data[32]>>0)&255)<<1 | uint64((data[33]>>0)&255)<<9 | uint64((data[34]>>0)&255)<<17 | uint64((data[35]>>0)&255)<<25 | uint64((data[36]>>0)&255)<<33 | uint64((data[37]>>0)&255)<<41 | uint64((data[38]>>0)&3)<<49)
	a[6] = int64(uint64((data[38]>>2)&63)<<0 | uint64((data[39]>>0)&255)<<6 | uint64((data[40]>>0)&255)<<14 | uint64((data[41]>>0)&255)<<22 | uint64((data[42]>>0)&255)<<30 | uint64((data[43]>>0)&255)<<38 | uint64((data[44]>>0)&31)<<46)
	a[7] = int64(uint64((data[44]>>5)&7)<<0 | uint64((data[45]>>0)&255)<<3 | uint64((data[46]>>0)&255)<<11 | uint64((data[47]>>0)&255)<<19 | uint64((data[48]>>0)&255)<<27 | uint64((data[49]>>0)&255)<<35 | uint64((data[50]>>0)&255)<<43)
	return
}

func pack8int64_51(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0])>>48 | uint64(data[1])<<3),
		byte(uint64(data[1]) >> 5),
		byte(uint64(data[1]) >> 13),
		byte(uint64(data[1]) >> 21),
		byte(uint64(data[1]) >> 29),
		byte(uint64(data[1]) >> 37),
		byte(uint64(data[1])>>45 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2]) >> 18),
		byte(uint64(data[2]) >> 26),
		byte(uint64(data[2]) >> 34),
		byte(uint64(data[2]) >> 42),
		byte(uint64(data[2])>>50 | uint64(data[3])<<1),
		byte(uint64(data[3]) >> 7),
		byte(uint64(data[3]) >> 15),
		byte(uint64(data[3]) >> 23),
		byte(uint64(data[3]) >> 31),
		byte(uint64(data[3]) >> 39),
		byte(uint64(data[3])>>47 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4]) >> 36),
		byte(uint64(data[4])>>44 | uint64(data[5])<<7),
		byte(uint64(data[5]) >> 1),
		byte(uint64(data[5]) >> 9),
		byte(uint64(data[5]) >> 17),
		byte(uint64(data[5]) >> 25),
		byte(uint64(data[5]) >> 33),
		byte(uint64(data[5]) >> 41),
		byte(uint64(data[5])>>49 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6]) >> 14),
		byte(uint64(data[6]) >> 22),
		byte(uint64(data[6]) >> 30),
		byte(uint64(data[6]) >> 38),
		byte(uint64(data[6])>>46 | uint64(data[7])<<5),
		byte(uint64(data[7]) >> 3),
		byte(uint64(data[7]) >> 11),
		byte(uint64(data[7]) >> 19),
		byte(uint64(data[7]) >> 27),
		byte(uint64(data[7]) >> 35),
		byte(uint64(data[7]) >> 43),
	}
}

func unpack8int64_52(data []byte) (a [8]int64) {
	_ = data[51]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&15)<<48)
	a[1] = int64(uint64((data[6]>>4)&15)<<0 | uint64((data[7]>>0)&255)<<4 | uint64((data[8]>>0)&255)<<12 | uint64((data[9]>>0)&255)<<20 | uint64((data[10]>>0)&255)<<28 | uint64((data[11]>>0)&255)<<36 | uint64((data[12]>>0)&255)<<44)
	a[2] = int64(uint64((data[13]>>0)&255)<<0 | uint64((data[14]>>0)&255)<<8 | uint64((data[15]>>0)&255)<<16 | uint64((data[16]>>0)&255)<<24 | uint64((data[17]>>0)&255)<<32 | uint64((data[18]>>0)&255)<<40 | uint64((data[19]>>0)&15)<<48)
	a[3] = int64(uint64((data[19]>>4)&15)<<0 | uint64((data[20]>>0)&255)<<4 | uint64((data[21]>>0)&255)<<12 | uint64((data[22]>>0)&255)<<20 | uint64((data[23]>>0)&255)<<28 | uint64((data[24]>>0)&255)<<36 | uint64((data[25]>>0)&255)<<44)
	a[4] = int64(uint64((data[26]>>0)&255)<<0 | uint64((data[27]>>0)&255)<<8 | uint64((data[28]>>0)&255)<<16 | uint64((data[29]>>0)&255)<<24 | uint64((data[30]>>0)&255)<<32 | uint64((data[31]>>0)&255)<<40 | uint64((data[32]>>0)&15)<<48)
	a[5] = int64(uint64((data[32]>>4)&15)<<0 | uint64((data[33]>>0)&255)<<4 | uint64((data[34]>>0)&255)<<12 | uint64((data[35]>>0)&255)<<20 | uint64((data[36]>>0)&255)<<28 | uint64((data[37]>>0)&255)<<36 | uint64((data[38]>>0)&255)<<44)
	a[6] = int64(uint64((data[39]>>0)&255)<<0 | uint64((data[40]>>0)&255)<<8 | uint64((data[41]>>0)&255)<<16 | uint64((data[42]>>0)&255)<<24 | uint64((data[43]>>0)&255)<<32 | uint64((data[44]>>0)&255)<<40 | uint64((data[45]>>0)&15)<<48)
	a[7] = int64(uint64((data[45]>>4)&15)<<0 | uint64((data[46]>>0)&255)<<4 | uint64((data[47]>>0)&255)<<12 | uint64((data[48]>>0)&255)<<20 | uint64((data[49]>>0)&255)<<28 | uint64((data[50]>>0)&255)<<36 | uint64((data[51]>>0)&255)<<44)
	return
}

func pack8int64_52(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0])>>48 | uint64(data[1])<<4),
		byte(uint64(data[1]) >> 4),
		byte(uint64(data[1]) >> 12),
		byte(uint64(data[1]) >> 20),
		byte(uint64(data[1]) >> 28),
		byte(uint64(data[1]) >> 36),
		byte(uint64(data[1]) >> 44),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2]) >> 16),
		byte(uint64(data[2]) >> 24),
		byte(uint64(data[2]) >> 32),
		byte(uint64(data[2]) >> 40),
		byte(uint64(data[2])>>48 | uint64(data[3])<<4),
		byte(uint64(data[3]) >> 4),
		byte(uint64(data[3]) >> 12),
		byte(uint64(data[3]) >> 20),
		byte(uint64(data[3]) >> 28),
		byte(uint64(data[3]) >> 36),
		byte(uint64(data[3]) >> 44),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4]) >> 40),
		byte(uint64(data[4])>>48 | uint64(data[5])<<4),
		byte(uint64(data[5]) >> 4),
		byte(uint64(data[5]) >> 12),
		byte(uint64(data[5]) >> 20),
		byte(uint64(data[5]) >> 28),
		byte(uint64(data[5]) >> 36),
		byte(uint64(data[5]) >> 44),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6]) >> 16),
		byte(uint64(data[6]) >> 24),
		byte(uint64(data[6]) >> 32),
		byte(uint64(data[6]) >> 40),
		byte(uint64(data[6])>>48 | uint64(data[7])<<4),
		byte(uint64(data[7]) >> 4),
		byte(uint64(data[7]) >> 12),
		byte(uint64(data[7]) >> 20),
		byte(uint64(data[7]) >> 28),
		byte(uint64(data[7]) >> 36),
		byte(uint64(data[7]) >> 44),
	}
}

func unpack8int64_53(data []byte) (a [8]int64) {
	_ = data[52]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&31)<<48)
	a[1] = int64(uint64((data[6]>>5)&7)<<0 | uint64((data[7]>>0)&255)<<3 | uint64((data[8]>>0)&255)<<11 | uint64((data[9]>>0)&255)<<19 | uint64((data[10]>>0)&255)<<27 | uint64((data[11]>>0)&255)<<35 | uint64((data[12]>>0)&255)<<43 | uint64((data[13]>>0)&3)<<51)
	a[2] = int64(uint64((data[13]>>2)&63)<<0 | uint64((data[14]>>0)&255)<<6 | uint64((data[15]>>0)&255)<<14 | uint64((data[16]>>0)&255)<<22 | uint64((data[17]>>0)&255)<<30 | uint64((data[18]>>0)&255)<<38 | uint64((data[19]>>0)&127)<<46)
	a[3] = int64(uint64((data[19]>>7)&1)<<0 | uint64((data[20]>>0)&255)<<1 | uint64((data[21]>>0)&255)<<9 | uint64((data[22]>>0)&255)<<17 | uint64((data[23]>>0)&255)<<25 | uint64((data[24]>>0)&255)<<33 | uint64((data[25]>>0)&255)<<41 | uint64((data[26]>>0)&15)<<49)
	a[4] = int64(uint64((data[26]>>4)&15)<<0 | uint64((data[27]>>0)&255)<<4 | uint64((data[28]>>0)&255)<<12 | uint64((data[29]>>0)&255)<<20 | uint64((data[30]>>0)&255)<<28 | uint64((data[31]>>0)&255)<<36 | uint64((data[32]>>0)&255)<<44 | uint64((data[33]>>0)&1)<<52)
	a[5] = int64(uint64((data[33]>>1)&127)<<0 | uint64((data[34]>>0)&255)<<7 | uint64((data[35]>>0)&255)<<15 | uint64((data[36]>>0)&255)<<23 | uint64((data[37]>>0)&255)<<31 | uint64((data[38]>>0)&255)<<39 | uint64((data[39]>>0)&63)<<47)
	a[6] = int64(uint64((data[39]>>6)&3)<<0 | uint64((data[40]>>0)&255)<<2 | uint64((data[41]>>0)&255)<<10 | uint64((data[42]>>0)&255)<<18 | uint64((data[43]>>0)&255)<<26 | uint64((data[44]>>0)&255)<<34 | uint64((data[45]>>0)&255)<<42 | uint64((data[46]>>0)&7)<<50)
	a[7] = int64(uint64((data[46]>>3)&31)<<0 | uint64((data[47]>>0)&255)<<5 | uint64((data[48]>>0)&255)<<13 | uint64((data[49]>>0)&255)<<21 | uint64((data[50]>>0)&255)<<29 | uint64((data[51]>>0)&255)<<37 | uint64((data[52]>>0)&255)<<45)
	return
}

func pack8int64_53(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0])>>48 | uint64(data[1])<<5),
		byte(uint64(data[1]) >> 3),
		byte(uint64(data[1]) >> 11),
		byte(uint64(data[1]) >> 19),
		byte(uint64(data[1]) >> 27),
		byte(uint64(data[1]) >> 35),
		byte(uint64(data[1]) >> 43),
		byte(uint64(data[1])>>51 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2]) >> 14),
		byte(uint64(data[2]) >> 22),
		byte(uint64(data[2]) >> 30),
		byte(uint64(data[2]) >> 38),
		byte(uint64(data[2])>>46 | uint64(data[3])<<7),
		byte(uint64(data[3]) >> 1),
		byte(uint64(data[3]) >> 9),
		byte(uint64(data[3]) >> 17),
		byte(uint64(data[3]) >> 25),
		byte(uint64(data[3]) >> 33),
		byte(uint64(data[3]) >> 41),
		byte(uint64(data[3])>>49 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4]) >> 36),
		byte(uint64(data[4]) >> 44),
		byte(uint64(data[4])>>52 | uint64(data[5])<<1),
		byte(uint64(data[5]) >> 7),
		byte(uint64(data[5]) >> 15),
		byte(uint64(data[5]) >> 23),
		byte(uint64(data[5]) >> 31),
		byte(uint64(data[5]) >> 39),
		byte(uint64(data[5])>>47 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6]) >> 10),
		byte(uint64(data[6]) >> 18),
		byte(uint64(data[6]) >> 26),
		byte(uint64(data[6]) >> 34),
		byte(uint64(data[6]) >> 42),
		byte(uint64(data[6])>>50 | uint64(data[7])<<3),
		byte(uint64(data[7]) >> 5),
		byte(uint64(data[7]) >> 13),
		byte(uint64(data[7]) >> 21),
		byte(uint64(data[7]) >> 29),
		byte(uint64(data[7]) >> 37),
		byte(uint64(data[7]) >> 45),
	}
}

func unpack8int64_54(data []byte) (a [8]int64) {
	_ = data[53]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&63)<<48)
	a[1] = int64(uint64((data[6]>>6)&3)<<0 | uint64((data[7]>>0)&255)<<2 | uint64((data[8]>>0)&255)<<10 | uint64((data[9]>>0)&255)<<18 | uint64((data[10]>>0)&255)<<26 | uint64((data[11]>>0)&255)<<34 | uint64((data[12]>>0)&255)<<42 | uint64((data[13]>>0)&15)<<50)
	a[2] = int64(uint64((data[13]>>4)&15)<<0 | uint64((data[14]>>0)&255)<<4 | uint64((data[15]>>0)&255)<<12 | uint64((data[16]>>0)&255)<<20 | uint64((data[17]>>0)&255)<<28 | uint64((data[18]>>0)&255)<<36 | uint64((data[19]>>0)&255)<<44 | uint64((data[20]>>0)&3)<<52)
	a[3] = int64(uint64((data[20]>>2)&63)<<0 | uint64((data[21]>>0)&255)<<6 | uint64((data[22]>>0)&255)<<14 | uint64((data[23]>>0)&255)<<22 | uint64((data[24]>>0)&255)<<30 | uint64((data[25]>>0)&255)<<38 | uint64((data[26]>>0)&255)<<46)
	a[4] = int64(uint64((data[27]>>0)&255)<<0 | uint64((data[28]>>0)&255)<<8 | uint64((data[29]>>0)&255)<<16 | uint64((data[30]>>0)&255)<<24 | uint64((data[31]>>0)&255)<<32 | uint64((data[32]>>0)&255)<<40 | uint64((data[33]>>0)&63)<<48)
	a[5] = int64(uint64((data[33]>>6)&3)<<0 | uint64((data[34]>>0)&255)<<2 | uint64((data[35]>>0)&255)<<10 | uint64((data[36]>>0)&255)<<18 | uint64((data[37]>>0)&255)<<26 | uint64((data[38]>>0)&255)<<34 | uint64((data[39]>>0)&255)<<42 | uint64((data[40]>>0)&15)<<50)
	a[6] = int64(uint64((data[40]>>4)&15)<<0 | uint64((data[41]>>0)&255)<<4 | uint64((data[42]>>0)&255)<<12 | uint64((data[43]>>0)&255)<<20 | uint64((data[44]>>0)&255)<<28 | uint64((data[45]>>0)&255)<<36 | uint64((data[46]>>0)&255)<<44 | uint64((data[47]>>0)&3)<<52)
	a[7] = int64(uint64((data[47]>>2)&63)<<0 | uint64((data[48]>>0)&255)<<6 | uint64((data[49]>>0)&255)<<14 | uint64((data[50]>>0)&255)<<22 | uint64((data[51]>>0)&255)<<30 | uint64((data[52]>>0)&255)<<38 | uint64((data[53]>>0)&255)<<46)
	return
}

func pack8int64_54(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0])>>48 | uint64(data[1])<<6),
		byte(uint64(data[1]) >> 2),
		byte(uint64(data[1]) >> 10),
		byte(uint64(data[1]) >> 18),
		byte(uint64(data[1]) >> 26),
		byte(uint64(data[1]) >> 34),
		byte(uint64(data[1]) >> 42),
		byte(uint64(data[1])>>50 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2]) >> 12),
		byte(uint64(data[2]) >> 20),
		byte(uint64(data[2]) >> 28),
		byte(uint64(data[2]) >> 36),
		byte(uint64(data[2]) >> 44),
		byte(uint64(data[2])>>52 | uint64(data[3])<<2),
		byte(uint64(data[3]) >> 6),
		byte(uint64(data[3]) >> 14),
		byte(uint64(data[3]) >> 22),
		byte(uint64(data[3]) >> 30),
		byte(uint64(data[3]) >> 38),
		byte(uint64(data[3]) >> 46),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4]) >> 40),
		byte(uint64(data[4])>>48 | uint64(data[5])<<6),
		byte(uint64(data[5]) >> 2),
		byte(uint64(data[5]) >> 10),
		byte(uint64(data[5]) >> 18),
		byte(uint64(data[5]) >> 26),
		byte(uint64(data[5]) >> 34),
		byte(uint64(data[5]) >> 42),
		byte(uint64(data[5])>>50 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6]) >> 12),
		byte(uint64(data[6]) >> 20),
		byte(uint64(data[6]) >> 28),
		byte(uint64(data[6]) >> 36),
		byte(uint64(data[6]) >> 44),
		byte(uint64(data[6])>>52 | uint64(data[7])<<2),
		byte(uint64(data[7]) >> 6),
		byte(uint64(data[7]) >> 14),
		byte(uint64(data[7]) >> 22),
		byte(uint64(data[7]) >> 30),
		byte(uint64(data[7]) >> 38),
		byte(uint64(data[7]) >> 46),
	}
}

func unpack8int64_55(data []byte) (a [8]int64) {
	_ = data[54]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&127)<<48)
	a[1] = int64(uint64((data[6]>>7)&1)<<0 | uint64((data[7]>>0)&255)<<1 | uint64((data[8]>>0)&255)<<9 | uint64((data[9]>>0)&255)<<17 | uint64((data[10]>>0)&255)<<25 | uint64((data[11]>>0)&255)<<33 | uint64((data[12]>>0)&255)<<41 | uint64((data[13]>>0)&63)<<49)
	a[2] = int64(uint64((data[13]>>6)&3)<<0 | uint64((data[14]>>0)&255)<<2 | uint64((data[15]>>0)&255)<<10 | uint64((data[16]>>0)&255)<<18 | uint64((data[17]>>0)&255)<<26 | uint64((data[18]>>0)&255)<<34 | uint64((data[19]>>0)&255)<<42 | uint64((data[20]>>0)&31)<<50)
	a[3] = int64(uint64((data[20]>>5)&7)<<0 | uint64((data[21]>>0)&255)<<3 | uint64((data[22]>>0)&255)<<11 | uint64((data[23]>>0)&255)<<19 | uint64((data[24]>>0)&255)<<27 | uint64((data[25]>>0)&255)<<35 | uint64((data[26]>>0)&255)<<43 | uint64((data[27]>>0)&15)<<51)
	a[4] = int64(uint64((data[27]>>4)&15)<<0 | uint64((data[28]>>0)&255)<<4 | uint64((data[29]>>0)&255)<<12 | uint64((data[30]>>0)&255)<<20 | uint64((data[31]>>0)&255)<<28 | uint64((data[32]>>0)&255)<<36 | uint64((data[33]>>0)&255)<<44 | uint64((data[34]>>0)&7)<<52)
	a[5] = int64(uint64((data[34]>>3)&31)<<0 | uint64((data[35]>>0)&255)<<5 | uint64((data[36]>>0)&255)<<13 | uint64((data[37]>>0)&255)<<21 | uint64((data[38]>>0)&255)<<29 | uint64((data[39]>>0)&255)<<37 | uint64((data[40]>>0)&255)<<45 | uint64((data[41]>>0)&3)<<53)
	a[6] = int64(uint64((data[41]>>2)&63)<<0 | uint64((data[42]>>0)&255)<<6 | uint64((data[43]>>0)&255)<<14 | uint64((data[44]>>0)&255)<<22 | uint64((data[45]>>0)&255)<<30 | uint64((data[46]>>0)&255)<<38 | uint64((data[47]>>0)&255)<<46 | uint64((data[48]>>0)&1)<<54)
	a[7] = int64(uint64((data[48]>>1)&127)<<0 | uint64((data[49]>>0)&255)<<7 | uint64((data[50]>>0)&255)<<15 | uint64((data[51]>>0)&255)<<23 | uint64((data[52]>>0)&255)<<31 | uint64((data[53]>>0)&255)<<39 | uint64((data[54]>>0)&255)<<47)
	return
}

func pack8int64_55(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0])>>48 | uint64(data[1])<<7),
		byte(uint64(data[1]) >> 1),
		byte(uint64(data[1]) >> 9),
		byte(uint64(data[1]) >> 17),
		byte(uint64(data[1]) >> 25),
		byte(uint64(data[1]) >> 33),
		byte(uint64(data[1]) >> 41),
		byte(uint64(data[1])>>49 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2]) >> 18),
		byte(uint64(data[2]) >> 26),
		byte(uint64(data[2]) >> 34),
		byte(uint64(data[2]) >> 42),
		byte(uint64(data[2])>>50 | uint64(data[3])<<5),
		byte(uint64(data[3]) >> 3),
		byte(uint64(data[3]) >> 11),
		byte(uint64(data[3]) >> 19),
		byte(uint64(data[3]) >> 27),
		byte(uint64(data[3]) >> 35),
		byte(uint64(data[3]) >> 43),
		byte(uint64(data[3])>>51 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4]) >> 36),
		byte(uint64(data[4]) >> 44),
		byte(uint64(data[4])>>52 | uint64(data[5])<<3),
		byte(uint64(data[5]) >> 5),
		byte(uint64(data[5]) >> 13),
		byte(uint64(data[5]) >> 21),
		byte(uint64(data[5]) >> 29),
		byte(uint64(data[5]) >> 37),
		byte(uint64(data[5]) >> 45),
		byte(uint64(data[5])>>53 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6]) >> 14),
		byte(uint64(data[6]) >> 22),
		byte(uint64(data[6]) >> 30),
		byte(uint64(data[6]) >> 38),
		byte(uint64(data[6]) >> 46),
		byte(uint64(data[6])>>54 | uint64(data[7])<<1),
		byte(uint64(data[7]) >> 7),
		byte(uint64(data[7]) >> 15),
		byte(uint64(data[7]) >> 23),
		byte(uint64(data[7]) >> 31),
		byte(uint64(data[7]) >> 39),
		byte(uint64(data[7]) >> 47),
	}
}

func unpack8int64_56(data []byte) (a [8]int64) {
	_ = data[55]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&255)<<48)
	a[1] = int64(uint64((data[7]>>0)&255)<<0 | uint64((data[8]>>0)&255)<<8 | uint64((data[9]>>0)&255)<<16 | uint64((data[10]>>0)&255)<<24 | uint64((data[11]>>0)&255)<<32 | uint64((data[12]>>0)&255)<<40 | uint64((data[13]>>0)&255)<<48)
	a[2] = int64(uint64((data[14]>>0)&255)<<0 | uint64((data[15]>>0)&255)<<8 | uint64((data[16]>>0)&255)<<16 | uint64((data[17]>>0)&255)<<24 | uint64((data[18]>>0)&255)<<32 | uint64((data[19]>>0)&255)<<40 | uint64((data[20]>>0)&255)<<48)
	a[3] = int64(uint64((data[21]>>0)&255)<<0 | uint64((data[22]>>0)&255)<<8 | uint64((data[23]>>0)&255)<<16 | uint64((data[24]>>0)&255)<<24 | uint64((data[25]>>0)&255)<<32 | uint64((data[26]>>0)&255)<<40 | uint64((data[27]>>0)&255)<<48)
	a[4] = int64(uint64((data[28]>>0)&255)<<0 | uint64((data[29]>>0)&255)<<8 | uint64((data[30]>>0)&255)<<16 | uint64((data[31]>>0)&255)<<24 | uint64((data[32]>>0)&255)<<32 | uint64((data[33]>>0)&255)<<40 | uint64((data[34]>>0)&255)<<48)
	a[5] = int64(uint64((data[35]>>0)&255)<<0 | uint64((data[36]>>0)&255)<<8 | uint64((data[37]>>0)&255)<<16 | uint64((data[38]>>0)&255)<<24 | uint64((data[39]>>0)&255)<<32 | uint64((data[40]>>0)&255)<<40 | uint64((data[41]>>0)&255)<<48)
	a[6] = int64(uint64((data[42]>>0)&255)<<0 | uint64((data[43]>>0)&255)<<8 | uint64((data[44]>>0)&255)<<16 | uint64((data[45]>>0)&255)<<24 | uint64((data[46]>>0)&255)<<32 | uint64((data[47]>>0)&255)<<40 | uint64((data[48]>>0)&255)<<48)
	a[7] = int64(uint64((data[49]>>0)&255)<<0 | uint64((data[50]>>0)&255)<<8 | uint64((data[51]>>0)&255)<<16 | uint64((data[52]>>0)&255)<<24 | uint64((data[53]>>0)&255)<<32 | uint64((data[54]>>0)&255)<<40 | uint64((data[55]>>0)&255)<<48)
	return
}

func pack8int64_56(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0]) >> 48),
		byte(uint64(data[1]) << 0),
		byte(uint64(data[1]) >> 8),
		byte(uint64(data[1]) >> 16),
		byte(uint64(data[1]) >> 24),
		byte(uint64(data[1]) >> 32),
		byte(uint64(data[1]) >> 40),
		byte(uint64(data[1]) >> 48),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2]) >> 16),
		byte(uint64(data[2]) >> 24),
		byte(uint64(data[2]) >> 32),
		byte(uint64(data[2]) >> 40),
		byte(uint64(data[2]) >> 48),
		byte(uint64(data[3]) << 0),
		byte(uint64(data[3]) >> 8),
		byte(uint64(data[3]) >> 16),
		byte(uint64(data[3]) >> 24),
		byte(uint64(data[3]) >> 32),
		byte(uint64(data[3]) >> 40),
		byte(uint64(data[3]) >> 48),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4]) >> 40),
		byte(uint64(data[4]) >> 48),
		byte(uint64(data[5]) << 0),
		byte(uint64(data[5]) >> 8),
		byte(uint64(data[5]) >> 16),
		byte(uint64(data[5]) >> 24),
		byte(uint64(data[5]) >> 32),
		byte(uint64(data[5]) >> 40),
		byte(uint64(data[5]) >> 48),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6]) >> 16),
		byte(uint64(data[6]) >> 24),
		byte(uint64(data[6]) >> 32),
		byte(uint64(data[6]) >> 40),
		byte(uint64(data[6]) >> 48),
		byte(uint64(data[7]) << 0),
		byte(uint64(data[7]) >> 8),
		byte(uint64(data[7]) >> 16),
		byte(uint64(data[7]) >> 24),
		byte(uint64(data[7]) >> 32),
		byte(uint64(data[7]) >> 40),
		byte(uint64(data[7]) >> 48),
	}
}

func unpack8int64_57(data []byte) (a [8]int64) {
	_ = data[56]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&255)<<48 | uint64((data[7]>>0)&1)<<56)
	a[1] = int64(uint64((data[7]>>1)&127)<<0 | uint64((data[8]>>0)&255)<<7 | uint64((data[9]>>0)&255)<<15 | uint64((data[10]>>0)&255)<<23 | uint64((data[11]>>0)&255)<<31 | uint64((data[12]>>0)&255)<<39 | uint64((data[13]>>0)&255)<<47 | uint64((data[14]>>0)&3)<<55)
	a[2] = int64(uint64((data[14]>>2)&63)<<0 | uint64((data[15]>>0)&255)<<6 | uint64((data[16]>>0)&255)<<14 | uint64((data[17]>>0)&255)<<22 | uint64((data[18]>>0)&255)<<30 | uint64((data[19]>>0)&255)<<38 | uint64((data[20]>>0)&255)<<46 | uint64((data[21]>>0)&7)<<54)
	a[3] = int64(uint64((data[21]>>3)&31)<<0 | uint64((data[22]>>0)&255)<<5 | uint64((data[23]>>0)&255)<<13 | uint64((data[24]>>0)&255)<<21 | uint64((data[25]>>0)&255)<<29 | uint64((data[26]>>0)&255)<<37 | uint64((data[27]>>0)&255)<<45 | uint64((data[28]>>0)&15)<<53)
	a[4] = int64(uint64((data[28]>>4)&15)<<0 | uint64((data[29]>>0)&255)<<4 | uint64((data[30]>>0)&255)<<12 | uint64((data[31]>>0)&255)<<20 | uint64((data[32]>>0)&255)<<28 | uint64((data[33]>>0)&255)<<36 | uint64((data[34]>>0)&255)<<44 | uint64((data[35]>>0)&31)<<52)
	a[5] = int64(uint64((data[35]>>5)&7)<<0 | uint64((data[36]>>0)&255)<<3 | uint64((data[37]>>0)&255)<<11 | uint64((data[38]>>0)&255)<<19 | uint64((data[39]>>0)&255)<<27 | uint64((data[40]>>0)&255)<<35 | uint64((data[41]>>0)&255)<<43 | uint64((data[42]>>0)&63)<<51)
	a[6] = int64(uint64((data[42]>>6)&3)<<0 | uint64((data[43]>>0)&255)<<2 | uint64((data[44]>>0)&255)<<10 | uint64((data[45]>>0)&255)<<18 | uint64((data[46]>>0)&255)<<26 | uint64((data[47]>>0)&255)<<34 | uint64((data[48]>>0)&255)<<42 | uint64((data[49]>>0)&127)<<50)
	a[7] = int64(uint64((data[49]>>7)&1)<<0 | uint64((data[50]>>0)&255)<<1 | uint64((data[51]>>0)&255)<<9 | uint64((data[52]>>0)&255)<<17 | uint64((data[53]>>0)&255)<<25 | uint64((data[54]>>0)&255)<<33 | uint64((data[55]>>0)&255)<<41 | uint64((data[56]>>0)&255)<<49)
	return
}

func pack8int64_57(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0]) >> 48),
		byte(uint64(data[0])>>56 | uint64(data[1])<<1),
		byte(uint64(data[1]) >> 7),
		byte(uint64(data[1]) >> 15),
		byte(uint64(data[1]) >> 23),
		byte(uint64(data[1]) >> 31),
		byte(uint64(data[1]) >> 39),
		byte(uint64(data[1]) >> 47),
		byte(uint64(data[1])>>55 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2]) >> 14),
		byte(uint64(data[2]) >> 22),
		byte(uint64(data[2]) >> 30),
		byte(uint64(data[2]) >> 38),
		byte(uint64(data[2]) >> 46),
		byte(uint64(data[2])>>54 | uint64(data[3])<<3),
		byte(uint64(data[3]) >> 5),
		byte(uint64(data[3]) >> 13),
		byte(uint64(data[3]) >> 21),
		byte(uint64(data[3]) >> 29),
		byte(uint64(data[3]) >> 37),
		byte(uint64(data[3]) >> 45),
		byte(uint64(data[3])>>53 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4]) >> 36),
		byte(uint64(data[4]) >> 44),
		byte(uint64(data[4])>>52 | uint64(data[5])<<5),
		byte(uint64(data[5]) >> 3),
		byte(uint64(data[5]) >> 11),
		byte(uint64(data[5]) >> 19),
		byte(uint64(data[5]) >> 27),
		byte(uint64(data[5]) >> 35),
		byte(uint64(data[5]) >> 43),
		byte(uint64(data[5])>>51 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6]) >> 10),
		byte(uint64(data[6]) >> 18),
		byte(uint64(data[6]) >> 26),
		byte(uint64(data[6]) >> 34),
		byte(uint64(data[6]) >> 42),
		byte(uint64(data[6])>>50 | uint64(data[7])<<7),
		byte(uint64(data[7]) >> 1),
		byte(uint64(data[7]) >> 9),
		byte(uint64(data[7]) >> 17),
		byte(uint64(data[7]) >> 25),
		byte(uint64(data[7]) >> 33),
		byte(uint64(data[7]) >> 41),
		byte(uint64(data[7]) >> 49),
	}
}

func unpack8int64_58(data []byte) (a [8]int64) {
	_ = data[57]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&255)<<48 | uint64((data[7]>>0)&3)<<56)
	a[1] = int64(uint64((data[7]>>2)&63)<<0 | uint64((data[8]>>0)&255)<<6 | uint64((data[9]>>0)&255)<<14 | uint64((data[10]>>0)&255)<<22 | uint64((data[11]>>0)&255)<<30 | uint64((data[12]>>0)&255)<<38 | uint64((data[13]>>0)&255)<<46 | uint64((data[14]>>0)&15)<<54)
	a[2] = int64(uint64((data[14]>>4)&15)<<0 | uint64((data[15]>>0)&255)<<4 | uint64((data[16]>>0)&255)<<12 | uint64((data[17]>>0)&255)<<20 | uint64((data[18]>>0)&255)<<28 | uint64((data[19]>>0)&255)<<36 | uint64((data[20]>>0)&255)<<44 | uint64((data[21]>>0)&63)<<52)
	a[3] = int64(uint64((data[21]>>6)&3)<<0 | uint64((data[22]>>0)&255)<<2 | uint64((data[23]>>0)&255)<<10 | uint64((data[24]>>0)&255)<<18 | uint64((data[25]>>0)&255)<<26 | uint64((data[26]>>0)&255)<<34 | uint64((data[27]>>0)&255)<<42 | uint64((data[28]>>0)&255)<<50)
	a[4] = int64(uint64((data[29]>>0)&255)<<0 | uint64((data[30]>>0)&255)<<8 | uint64((data[31]>>0)&255)<<16 | uint64((data[32]>>0)&255)<<24 | uint64((data[33]>>0)&255)<<32 | uint64((data[34]>>0)&255)<<40 | uint64((data[35]>>0)&255)<<48 | uint64((data[36]>>0)&3)<<56)
	a[5] = int64(uint64((data[36]>>2)&63)<<0 | uint64((data[37]>>0)&255)<<6 | uint64((data[38]>>0)&255)<<14 | uint64((data[39]>>0)&255)<<22 | uint64((data[40]>>0)&255)<<30 | uint64((data[41]>>0)&255)<<38 | uint64((data[42]>>0)&255)<<46 | uint64((data[43]>>0)&15)<<54)
	a[6] = int64(uint64((data[43]>>4)&15)<<0 | uint64((data[44]>>0)&255)<<4 | uint64((data[45]>>0)&255)<<12 | uint64((data[46]>>0)&255)<<20 | uint64((data[47]>>0)&255)<<28 | uint64((data[48]>>0)&255)<<36 | uint64((data[49]>>0)&255)<<44 | uint64((data[50]>>0)&63)<<52)
	a[7] = int64(uint64((data[50]>>6)&3)<<0 | uint64((data[51]>>0)&255)<<2 | uint64((data[52]>>0)&255)<<10 | uint64((data[53]>>0)&255)<<18 | uint64((data[54]>>0)&255)<<26 | uint64((data[55]>>0)&255)<<34 | uint64((data[56]>>0)&255)<<42 | uint64((data[57]>>0)&255)<<50)
	return
}

func pack8int64_58(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0]) >> 48),
		byte(uint64(data[0])>>56 | uint64(data[1])<<2),
		byte(uint64(data[1]) >> 6),
		byte(uint64(data[1]) >> 14),
		byte(uint64(data[1]) >> 22),
		byte(uint64(data[1]) >> 30),
		byte(uint64(data[1]) >> 38),
		byte(uint64(data[1]) >> 46),
		byte(uint64(data[1])>>54 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2]) >> 12),
		byte(uint64(data[2]) >> 20),
		byte(uint64(data[2]) >> 28),
		byte(uint64(data[2]) >> 36),
		byte(uint64(data[2]) >> 44),
		byte(uint64(data[2])>>52 | uint64(data[3])<<6),
		byte(uint64(data[3]) >> 2),
		byte(uint64(data[3]) >> 10),
		byte(uint64(data[3]) >> 18),
		byte(uint64(data[3]) >> 26),
		byte(uint64(data[3]) >> 34),
		byte(uint64(data[3]) >> 42),
		byte(uint64(data[3]) >> 50),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4]) >> 40),
		byte(uint64(data[4]) >> 48),
		byte(uint64(data[4])>>56 | uint64(data[5])<<2),
		byte(uint64(data[5]) >> 6),
		byte(uint64(data[5]) >> 14),
		byte(uint64(data[5]) >> 22),
		byte(uint64(data[5]) >> 30),
		byte(uint64(data[5]) >> 38),
		byte(uint64(data[5]) >> 46),
		byte(uint64(data[5])>>54 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6]) >> 12),
		byte(uint64(data[6]) >> 20),
		byte(uint64(data[6]) >> 28),
		byte(uint64(data[6]) >> 36),
		byte(uint64(data[6]) >> 44),
		byte(uint64(data[6])>>52 | uint64(data[7])<<6),
		byte(uint64(data[7]) >> 2),
		byte(uint64(data[7]) >> 10),
		byte(uint64(data[7]) >> 18),
		byte(uint64(data[7]) >> 26),
		byte(uint64(data[7]) >> 34),
		byte(uint64(data[7]) >> 42),
		byte(uint64(data[7]) >> 50),
	}
}

func unpack8int64_59(data []byte) (a [8]int64) {
	_ = data[58]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&255)<<48 | uint64((data[7]>>0)&7)<<56)
	a[1] = int64(uint64((data[7]>>3)&31)<<0 | uint64((data[8]>>0)&255)<<5 | uint64((data[9]>>0)&255)<<13 | uint64((data[10]>>0)&255)<<21 | uint64((data[11]>>0)&255)<<29 | uint64((data[12]>>0)&255)<<37 | uint64((data[13]>>0)&255)<<45 | uint64((data[14]>>0)&63)<<53)
	a[2] = int64(uint64((data[14]>>6)&3)<<0 | uint64((data[15]>>0)&255)<<2 | uint64((data[16]>>0)&255)<<10 | uint64((data[17]>>0)&255)<<18 | uint64((data[18]>>0)&255)<<26 | uint64((data[19]>>0)&255)<<34 | uint64((data[20]>>0)&255)<<42 | uint64((data[21]>>0)&255)<<50 | uint64((data[22]>>0)&1)<<58)
	a[3] = int64(uint64((data[22]>>1)&127)<<0 | uint64((data[23]>>0)&255)<<7 | uint64((data[24]>>0)&255)<<15 | uint64((data[25]>>0)&255)<<23 | uint64((data[26]>>0)&255)<<31 | uint64((data[27]>>0)&255)<<39 | uint64((data[28]>>0)&255)<<47 | uint64((data[29]>>0)&15)<<55)
	a[4] = int64(uint64((data[29]>>4)&15)<<0 | uint64((data[30]>>0)&255)<<4 | uint64((data[31]>>0)&255)<<12 | uint64((data[32]>>0)&255)<<20 | uint64((data[33]>>0)&255)<<28 | uint64((data[34]>>0)&255)<<36 | uint64((data[35]>>0)&255)<<44 | uint64((data[36]>>0)&127)<<52)
	a[5] = int64(uint64((data[36]>>7)&1)<<0 | uint64((data[37]>>0)&255)<<1 | uint64((data[38]>>0)&255)<<9 | uint64((data[39]>>0)&255)<<17 | uint64((data[40]>>0)&255)<<25 | uint64((data[41]>>0)&255)<<33 | uint64((data[42]>>0)&255)<<41 | uint64((data[43]>>0)&255)<<49 | uint64((data[44]>>0)&3)<<57)
	a[6] = int64(uint64((data[44]>>2)&63)<<0 | uint64((data[45]>>0)&255)<<6 | uint64((data[46]>>0)&255)<<14 | uint64((data[47]>>0)&255)<<22 | uint64((data[48]>>0)&255)<<30 | uint64((data[49]>>0)&255)<<38 | uint64((data[50]>>0)&255)<<46 | uint64((data[51]>>0)&31)<<54)
	a[7] = int64(uint64((data[51]>>5)&7)<<0 | uint64((data[52]>>0)&255)<<3 | uint64((data[53]>>0)&255)<<11 | uint64((data[54]>>0)&255)<<19 | uint64((data[55]>>0)&255)<<27 | uint64((data[56]>>0)&255)<<35 | uint64((data[57]>>0)&255)<<43 | uint64((data[58]>>0)&255)<<51)
	return
}

func pack8int64_59(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0]) >> 48),
		byte(uint64(data[0])>>56 | uint64(data[1])<<3),
		byte(uint64(data[1]) >> 5),
		byte(uint64(data[1]) >> 13),
		byte(uint64(data[1]) >> 21),
		byte(uint64(data[1]) >> 29),
		byte(uint64(data[1]) >> 37),
		byte(uint64(data[1]) >> 45),
		byte(uint64(data[1])>>53 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2]) >> 18),
		byte(uint64(data[2]) >> 26),
		byte(uint64(data[2]) >> 34),
		byte(uint64(data[2]) >> 42),
		byte(uint64(data[2]) >> 50),
		byte(uint64(data[2])>>58 | uint64(data[3])<<1),
		byte(uint64(data[3]) >> 7),
		byte(uint64(data[3]) >> 15),
		byte(uint64(data[3]) >> 23),
		byte(uint64(data[3]) >> 31),
		byte(uint64(data[3]) >> 39),
		byte(uint64(data[3]) >> 47),
		byte(uint64(data[3])>>55 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4]) >> 36),
		byte(uint64(data[4]) >> 44),
		byte(uint64(data[4])>>52 | uint64(data[5])<<7),
		byte(uint64(data[5]) >> 1),
		byte(uint64(data[5]) >> 9),
		byte(uint64(data[5]) >> 17),
		byte(uint64(data[5]) >> 25),
		byte(uint64(data[5]) >> 33),
		byte(uint64(data[5]) >> 41),
		byte(uint64(data[5]) >> 49),
		byte(uint64(data[5])>>57 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6]) >> 14),
		byte(uint64(data[6]) >> 22),
		byte(uint64(data[6]) >> 30),
		byte(uint64(data[6]) >> 38),
		byte(uint64(data[6]) >> 46),
		byte(uint64(data[6])>>54 | uint64(data[7])<<5),
		byte(uint64(data[7]) >> 3),
		byte(uint64(data[7]) >> 11),
		byte(uint64(data[7]) >> 19),
		byte(uint64(data[7]) >> 27),
		byte(uint64(data[7]) >> 35),
		byte(uint64(data[7]) >> 43),
		byte(uint64(data[7]) >> 51),
	}
}

func unpack8int64_60(data []byte) (a [8]int64) {
	_ = data[59]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&255)<<48 | uint64((data[7]>>0)&15)<<56)
	a[1] = int64(uint64((data[7]>>4)&15)<<0 | uint64((data[8]>>0)&255)<<4 | uint64((data[9]>>0)&255)<<12 | uint64((data[10]>>0)&255)<<20 | uint64((data[11]>>0)&255)<<28 | uint64((data[12]>>0)&255)<<36 | uint64((data[13]>>0)&255)<<44 | uint64((data[14]>>0)&255)<<52)
	a[2] = int64(uint64((data[15]>>0)&255)<<0 | uint64((data[16]>>0)&255)<<8 | uint64((data[17]>>0)&255)<<16 | uint64((data[18]>>0)&255)<<24 | uint64((data[19]>>0)&255)<<32 | uint64((data[20]>>0)&255)<<40 | uint64((data[21]>>0)&255)<<48 | uint64((data[22]>>0)&15)<<56)
	a[3] = int64(uint64((data[22]>>4)&15)<<0 | uint64((data[23]>>0)&255)<<4 | uint64((data[24]>>0)&255)<<12 | uint64((data[25]>>0)&255)<<20 | uint64((data[26]>>0)&255)<<28 | uint64((data[27]>>0)&255)<<36 | uint64((data[28]>>0)&255)<<44 | uint64((data[29]>>0)&255)<<52)
	a[4] = int64(uint64((data[30]>>0)&255)<<0 | uint64((data[31]>>0)&255)<<8 | uint64((data[32]>>0)&255)<<16 | uint64((data[33]>>0)&255)<<24 | uint64((data[34]>>0)&255)<<32 | uint64((data[35]>>0)&255)<<40 | uint64((data[36]>>0)&255)<<48 | uint64((data[37]>>0)&15)<<56)
	a[5] = int64(uint64((data[37]>>4)&15)<<0 | uint64((data[38]>>0)&255)<<4 | uint64((data[39]>>0)&255)<<12 | uint64((data[40]>>0)&255)<<20 | uint64((data[41]>>0)&255)<<28 | uint64((data[42]>>0)&255)<<36 | uint64((data[43]>>0)&255)<<44 | uint64((data[44]>>0)&255)<<52)
	a[6] = int64(uint64((data[45]>>0)&255)<<0 | uint64((data[46]>>0)&255)<<8 | uint64((data[47]>>0)&255)<<16 | uint64((data[48]>>0)&255)<<24 | uint64((data[49]>>0)&255)<<32 | uint64((data[50]>>0)&255)<<40 | uint64((data[51]>>0)&255)<<48 | uint64((data[52]>>0)&15)<<56)
	a[7] = int64(uint64((data[52]>>4)&15)<<0 | uint64((data[53]>>0)&255)<<4 | uint64((data[54]>>0)&255)<<12 | uint64((data[55]>>0)&255)<<20 | uint64((data[56]>>0)&255)<<28 | uint64((data[57]>>0)&255)<<36 | uint64((data[58]>>0)&255)<<44 | uint64((data[59]>>0)&255)<<52)
	return
}

func pack8int64_60(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0]) >> 48),
		byte(uint64(data[0])>>56 | uint64(data[1])<<4),
		byte(uint64(data[1]) >> 4),
		byte(uint64(data[1]) >> 12),
		byte(uint64(data[1]) >> 20),
		byte(uint64(data[1]) >> 28),
		byte(uint64(data[1]) >> 36),
		byte(uint64(data[1]) >> 44),
		byte(uint64(data[1]) >> 52),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2]) >> 16),
		byte(uint64(data[2]) >> 24),
		byte(uint64(data[2]) >> 32),
		byte(uint64(data[2]) >> 40),
		byte(uint64(data[2]) >> 48),
		byte(uint64(data[2])>>56 | uint64(data[3])<<4),
		byte(uint64(data[3]) >> 4),
		byte(uint64(data[3]) >> 12),
		byte(uint64(data[3]) >> 20),
		byte(uint64(data[3]) >> 28),
		byte(uint64(data[3]) >> 36),
		byte(uint64(data[3]) >> 44),
		byte(uint64(data[3]) >> 52),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4]) >> 40),
		byte(uint64(data[4]) >> 48),
		byte(uint64(data[4])>>56 | uint64(data[5])<<4),
		byte(uint64(data[5]) >> 4),
		byte(uint64(data[5]) >> 12),
		byte(uint64(data[5]) >> 20),
		byte(uint64(data[5]) >> 28),
		byte(uint64(data[5]) >> 36),
		byte(uint64(data[5]) >> 44),
		byte(uint64(data[5]) >> 52),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6]) >> 16),
		byte(uint64(data[6]) >> 24),
		byte(uint64(data[6]) >> 32),
		byte(uint64(data[6]) >> 40),
		byte(uint64(data[6]) >> 48),
		byte(uint64(data[6])>>56 | uint64(data[7])<<4),
		byte(uint64(data[7]) >> 4),
		byte(uint64(data[7]) >> 12),
		byte(uint64(data[7]) >> 20),
		byte(uint64(data[7]) >> 28),
		byte(uint64(data[7]) >> 36),
		byte(uint64(data[7]) >> 44),
		byte(uint64(data[7]) >> 52),
	}
}

func unpack8int64_61(data []byte) (a [8]int64) {
	_ = data[60]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&255)<<48 | uint64((data[7]>>0)&31)<<56)
	a[1] = int64(uint64((data[7]>>5)&7)<<0 | uint64((data[8]>>0)&255)<<3 | uint64((data[9]>>0)&255)<<11 | uint64((data[10]>>0)&255)<<19 | uint64((data[11]>>0)&255)<<27 | uint64((data[12]>>0)&255)<<35 | uint64((data[13]>>0)&255)<<43 | uint64((data[14]>>0)&255)<<51 | uint64((data[15]>>0)&3)<<59)
	a[2] = int64(uint64((data[15]>>2)&63)<<0 | uint64((data[16]>>0)&255)<<6 | uint64((data[17]>>0)&255)<<14 | uint64((data[18]>>0)&255)<<22 | uint64((data[19]>>0)&255)<<30 | uint64((data[20]>>0)&255)<<38 | uint64((data[21]>>0)&255)<<46 | uint64((data[22]>>0)&127)<<54)
	a[3] = int64(uint64((data[22]>>7)&1)<<0 | uint64((data[23]>>0)&255)<<1 | uint64((data[24]>>0)&255)<<9 | uint64((data[25]>>0)&255)<<17 | uint64((data[26]>>0)&255)<<25 | uint64((data[27]>>0)&255)<<33 | uint64((data[28]>>0)&255)<<41 | uint64((data[29]>>0)&255)<<49 | uint64((data[30]>>0)&15)<<57)
	a[4] = int64(uint64((data[30]>>4)&15)<<0 | uint64((data[31]>>0)&255)<<4 | uint64((data[32]>>0)&255)<<12 | uint64((data[33]>>0)&255)<<20 | uint64((data[34]>>0)&255)<<28 | uint64((data[35]>>0)&255)<<36 | uint64((data[36]>>0)&255)<<44 | uint64((data[37]>>0)&255)<<52 | uint64((data[38]>>0)&1)<<60)
	a[5] = int64(uint64((data[38]>>1)&127)<<0 | uint64((data[39]>>0)&255)<<7 | uint64((data[40]>>0)&255)<<15 | uint64((data[41]>>0)&255)<<23 | uint64((data[42]>>0)&255)<<31 | uint64((data[43]>>0)&255)<<39 | uint64((data[44]>>0)&255)<<47 | uint64((data[45]>>0)&63)<<55)
	a[6] = int64(uint64((data[45]>>6)&3)<<0 | uint64((data[46]>>0)&255)<<2 | uint64((data[47]>>0)&255)<<10 | uint64((data[48]>>0)&255)<<18 | uint64((data[49]>>0)&255)<<26 | uint64((data[50]>>0)&255)<<34 | uint64((data[51]>>0)&255)<<42 | uint64((data[52]>>0)&255)<<50 | uint64((data[53]>>0)&7)<<58)
	a[7] = int64(uint64((data[53]>>3)&31)<<0 | uint64((data[54]>>0)&255)<<5 | uint64((data[55]>>0)&255)<<13 | uint64((data[56]>>0)&255)<<21 | uint64((data[57]>>0)&255)<<29 | uint64((data[58]>>0)&255)<<37 | uint64((data[59]>>0)&255)<<45 | uint64((data[60]>>0)&255)<<53)
	return
}

func pack8int64_61(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0]) >> 48),
		byte(uint64(data[0])>>56 | uint64(data[1])<<5),
		byte(uint64(data[1]) >> 3),
		byte(uint64(data[1]) >> 11),
		byte(uint64(data[1]) >> 19),
		byte(uint64(data[1]) >> 27),
		byte(uint64(data[1]) >> 35),
		byte(uint64(data[1]) >> 43),
		byte(uint64(data[1]) >> 51),
		byte(uint64(data[1])>>59 | uint64(data[2])<<2),
		byte(uint64(data[2]) >> 6),
		byte(uint64(data[2]) >> 14),
		byte(uint64(data[2]) >> 22),
		byte(uint64(data[2]) >> 30),
		byte(uint64(data[2]) >> 38),
		byte(uint64(data[2]) >> 46),
		byte(uint64(data[2])>>54 | uint64(data[3])<<7),
		byte(uint64(data[3]) >> 1),
		byte(uint64(data[3]) >> 9),
		byte(uint64(data[3]) >> 17),
		byte(uint64(data[3]) >> 25),
		byte(uint64(data[3]) >> 33),
		byte(uint64(data[3]) >> 41),
		byte(uint64(data[3]) >> 49),
		byte(uint64(data[3])>>57 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4]) >> 36),
		byte(uint64(data[4]) >> 44),
		byte(uint64(data[4]) >> 52),
		byte(uint64(data[4])>>60 | uint64(data[5])<<1),
		byte(uint64(data[5]) >> 7),
		byte(uint64(data[5]) >> 15),
		byte(uint64(data[5]) >> 23),
		byte(uint64(data[5]) >> 31),
		byte(uint64(data[5]) >> 39),
		byte(uint64(data[5]) >> 47),
		byte(uint64(data[5])>>55 | uint64(data[6])<<6),
		byte(uint64(data[6]) >> 2),
		byte(uint64(data[6]) >> 10),
		byte(uint64(data[6]) >> 18),
		byte(uint64(data[6]) >> 26),
		byte(uint64(data[6]) >> 34),
		byte(uint64(data[6]) >> 42),
		byte(uint64(data[6]) >> 50),
		byte(uint64(data[6])>>58 | uint64(data[7])<<3),
		byte(uint64(data[7]) >> 5),
		byte(uint64(data[7]) >> 13),
		byte(uint64(data[7]) >> 21),
		byte(uint64(data[7]) >> 29),
		byte(uint64(data[7]) >> 37),
		byte(uint64(data[7]) >> 45),
		byte(uint64(data[7]) >> 53),
	}
}

func unpack8int64_62(data []byte) (a [8]int64) {
	_ = data[61]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&255)<<48 | uint64((data[7]>>0)&63)<<56)
	a[1] = int64(uint64((data[7]>>6)&3)<<0 | uint64((data[8]>>0)&255)<<2 | uint64((data[9]>>0)&255)<<10 | uint64((data[10]>>0)&255)<<18 | uint64((data[11]>>0)&255)<<26 | uint64((data[12]>>0)&255)<<34 | uint64((data[13]>>0)&255)<<42 | uint64((data[14]>>0)&255)<<50 | uint64((data[15]>>0)&15)<<58)
	a[2] = int64(uint64((data[15]>>4)&15)<<0 | uint64((data[16]>>0)&255)<<4 | uint64((data[17]>>0)&255)<<12 | uint64((data[18]>>0)&255)<<20 | uint64((data[19]>>0)&255)<<28 | uint64((data[20]>>0)&255)<<36 | uint64((data[21]>>0)&255)<<44 | uint64((data[22]>>0)&255)<<52 | uint64((data[23]>>0)&3)<<60)
	a[3] = int64(uint64((data[23]>>2)&63)<<0 | uint64((data[24]>>0)&255)<<6 | uint64((data[25]>>0)&255)<<14 | uint64((data[26]>>0)&255)<<22 | uint64((data[27]>>0)&255)<<30 | uint64((data[28]>>0)&255)<<38 | uint64((data[29]>>0)&255)<<46 | uint64((data[30]>>0)&255)<<54)
	a[4] = int64(uint64((data[31]>>0)&255)<<0 | uint64((data[32]>>0)&255)<<8 | uint64((data[33]>>0)&255)<<16 | uint64((data[34]>>0)&255)<<24 | uint64((data[35]>>0)&255)<<32 | uint64((data[36]>>0)&255)<<40 | uint64((data[37]>>0)&255)<<48 | uint64((data[38]>>0)&63)<<56)
	a[5] = int64(uint64((data[38]>>6)&3)<<0 | uint64((data[39]>>0)&255)<<2 | uint64((data[40]>>0)&255)<<10 | uint64((data[41]>>0)&255)<<18 | uint64((data[42]>>0)&255)<<26 | uint64((data[43]>>0)&255)<<34 | uint64((data[44]>>0)&255)<<42 | uint64((data[45]>>0)&255)<<50 | uint64((data[46]>>0)&15)<<58)
	a[6] = int64(uint64((data[46]>>4)&15)<<0 | uint64((data[47]>>0)&255)<<4 | uint64((data[48]>>0)&255)<<12 | uint64((data[49]>>0)&255)<<20 | uint64((data[50]>>0)&255)<<28 | uint64((data[51]>>0)&255)<<36 | uint64((data[52]>>0)&255)<<44 | uint64((data[53]>>0)&255)<<52 | uint64((data[54]>>0)&3)<<60)
	a[7] = int64(uint64((data[54]>>2)&63)<<0 | uint64((data[55]>>0)&255)<<6 | uint64((data[56]>>0)&255)<<14 | uint64((data[57]>>0)&255)<<22 | uint64((data[58]>>0)&255)<<30 | uint64((data[59]>>0)&255)<<38 | uint64((data[60]>>0)&255)<<46 | uint64((data[61]>>0)&255)<<54)
	return
}

func pack8int64_62(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0]) >> 48),
		byte(uint64(data[0])>>56 | uint64(data[1])<<6),
		byte(uint64(data[1]) >> 2),
		byte(uint64(data[1]) >> 10),
		byte(uint64(data[1]) >> 18),
		byte(uint64(data[1]) >> 26),
		byte(uint64(data[1]) >> 34),
		byte(uint64(data[1]) >> 42),
		byte(uint64(data[1]) >> 50),
		byte(uint64(data[1])>>58 | uint64(data[2])<<4),
		byte(uint64(data[2]) >> 4),
		byte(uint64(data[2]) >> 12),
		byte(uint64(data[2]) >> 20),
		byte(uint64(data[2]) >> 28),
		byte(uint64(data[2]) >> 36),
		byte(uint64(data[2]) >> 44),
		byte(uint64(data[2]) >> 52),
		byte(uint64(data[2])>>60 | uint64(data[3])<<2),
		byte(uint64(data[3]) >> 6),
		byte(uint64(data[3]) >> 14),
		byte(uint64(data[3]) >> 22),
		byte(uint64(data[3]) >> 30),
		byte(uint64(data[3]) >> 38),
		byte(uint64(data[3]) >> 46),
		byte(uint64(data[3]) >> 54),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4]) >> 40),
		byte(uint64(data[4]) >> 48),
		byte(uint64(data[4])>>56 | uint64(data[5])<<6),
		byte(uint64(data[5]) >> 2),
		byte(uint64(data[5]) >> 10),
		byte(uint64(data[5]) >> 18),
		byte(uint64(data[5]) >> 26),
		byte(uint64(data[5]) >> 34),
		byte(uint64(data[5]) >> 42),
		byte(uint64(data[5]) >> 50),
		byte(uint64(data[5])>>58 | uint64(data[6])<<4),
		byte(uint64(data[6]) >> 4),
		byte(uint64(data[6]) >> 12),
		byte(uint64(data[6]) >> 20),
		byte(uint64(data[6]) >> 28),
		byte(uint64(data[6]) >> 36),
		byte(uint64(data[6]) >> 44),
		byte(uint64(data[6]) >> 52),
		byte(uint64(data[6])>>60 | uint64(data[7])<<2),
		byte(uint64(data[7]) >> 6),
		byte(uint64(data[7]) >> 14),
		byte(uint64(data[7]) >> 22),
		byte(uint64(data[7]) >> 30),
		byte(uint64(data[7]) >> 38),
		byte(uint64(data[7]) >> 46),
		byte(uint64(data[7]) >> 54),
	}
}

func unpack8int64_63(data []byte) (a [8]int64) {
	_ = data[62]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&255)<<48 | uint64((data[7]>>0)&127)<<56)
	a[1] = int64(uint64((data[7]>>7)&1)<<0 | uint64((data[8]>>0)&255)<<1 | uint64((data[9]>>0)&255)<<9 | uint64((data[10]>>0)&255)<<17 | uint64((data[11]>>0)&255)<<25 | uint64((data[12]>>0)&255)<<33 | uint64((data[13]>>0)&255)<<41 | uint64((data[14]>>0)&255)<<49 | uint64((data[15]>>0)&63)<<57)
	a[2] = int64(uint64((data[15]>>6)&3)<<0 | uint64((data[16]>>0)&255)<<2 | uint64((data[17]>>0)&255)<<10 | uint64((data[18]>>0)&255)<<18 | uint64((data[19]>>0)&255)<<26 | uint64((data[20]>>0)&255)<<34 | uint64((data[21]>>0)&255)<<42 | uint64((data[22]>>0)&255)<<50 | uint64((data[23]>>0)&31)<<58)
	a[3] = int64(uint64((data[23]>>5)&7)<<0 | uint64((data[24]>>0)&255)<<3 | uint64((data[25]>>0)&255)<<11 | uint64((data[26]>>0)&255)<<19 | uint64((data[27]>>0)&255)<<27 | uint64((data[28]>>0)&255)<<35 | uint64((data[29]>>0)&255)<<43 | uint64((data[30]>>0)&255)<<51 | uint64((data[31]>>0)&15)<<59)
	a[4] = int64(uint64((data[31]>>4)&15)<<0 | uint64((data[32]>>0)&255)<<4 | uint64((data[33]>>0)&255)<<12 | uint64((data[34]>>0)&255)<<20 | uint64((data[35]>>0)&255)<<28 | uint64((data[36]>>0)&255)<<36 | uint64((data[37]>>0)&255)<<44 | uint64((data[38]>>0)&255)<<52 | uint64((data[39]>>0)&7)<<60)
	a[5] = int64(uint64((data[39]>>3)&31)<<0 | uint64((data[40]>>0)&255)<<5 | uint64((data[41]>>0)&255)<<13 | uint64((data[42]>>0)&255)<<21 | uint64((data[43]>>0)&255)<<29 | uint64((data[44]>>0)&255)<<37 | uint64((data[45]>>0)&255)<<45 | uint64((data[46]>>0)&255)<<53 | uint64((data[47]>>0)&3)<<61)
	a[6] = int64(uint64((data[47]>>2)&63)<<0 | uint64((data[48]>>0)&255)<<6 | uint64((data[49]>>0)&255)<<14 | uint64((data[50]>>0)&255)<<22 | uint64((data[51]>>0)&255)<<30 | uint64((data[52]>>0)&255)<<38 | uint64((data[53]>>0)&255)<<46 | uint64((data[54]>>0)&255)<<54 | uint64((data[55]>>0)&1)<<62)
	a[7] = int64(uint64((data[55]>>1)&127)<<0 | uint64((data[56]>>0)&255)<<7 | uint64((data[57]>>0)&255)<<15 | uint64((data[58]>>0)&255)<<23 | uint64((data[59]>>0)&255)<<31 | uint64((data[60]>>0)&255)<<39 | uint64((data[61]>>0)&255)<<47 | uint64((data[62]>>0)&255)<<55)
	return
}

func pack8int64_63(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0]) >> 48),
		byte(uint64(data[0])>>56 | uint64(data[1])<<7),
		byte(uint64(data[1]) >> 1),
		byte(uint64(data[1]) >> 9),
		byte(uint64(data[1]) >> 17),
		byte(uint64(data[1]) >> 25),
		byte(uint64(data[1]) >> 33),
		byte(uint64(data[1]) >> 41),
		byte(uint64(data[1]) >> 49),
		byte(uint64(data[1])>>57 | uint64(data[2])<<6),
		byte(uint64(data[2]) >> 2),
		byte(uint64(data[2]) >> 10),
		byte(uint64(data[2]) >> 18),
		byte(uint64(data[2]) >> 26),
		byte(uint64(data[2]) >> 34),
		byte(uint64(data[2]) >> 42),
		byte(uint64(data[2]) >> 50),
		byte(uint64(data[2])>>58 | uint64(data[3])<<5),
		byte(uint64(data[3]) >> 3),
		byte(uint64(data[3]) >> 11),
		byte(uint64(data[3]) >> 19),
		byte(uint64(data[3]) >> 27),
		byte(uint64(data[3]) >> 35),
		byte(uint64(data[3]) >> 43),
		byte(uint64(data[3]) >> 51),
		byte(uint64(data[3])>>59 | uint64(data[4])<<4),
		byte(uint64(data[4]) >> 4),
		byte(uint64(data[4]) >> 12),
		byte(uint64(data[4]) >> 20),
		byte(uint64(data[4]) >> 28),
		byte(uint64(data[4]) >> 36),
		byte(uint64(data[4]) >> 44),
		byte(uint64(data[4]) >> 52),
		byte(uint64(data[4])>>60 | uint64(data[5])<<3),
		byte(uint64(data[5]) >> 5),
		byte(uint64(data[5]) >> 13),
		byte(uint64(data[5]) >> 21),
		byte(uint64(data[5]) >> 29),
		byte(uint64(data[5]) >> 37),
		byte(uint64(data[5]) >> 45),
		byte(uint64(data[5]) >> 53),
		byte(uint64(data[5])>>61 | uint64(data[6])<<2),
		byte(uint64(data[6]) >> 6),
		byte(uint64(data[6]) >> 14),
		byte(uint64(data[6]) >> 22),
		byte(uint64(data[6]) >> 30),
		byte(uint64(data[6]) >> 38),
		byte(uint64(data[6]) >> 46),
		byte(uint64(data[6]) >> 54),
		byte(uint64(data[6])>>62 | uint64(data[7])<<1),
		byte(uint64(data[7]) >> 7),
		byte(uint64(data[7]) >> 15),
		byte(uint64(data[7]) >> 23),
		byte(uint64(data[7]) >> 31),
		byte(uint64(data[7]) >> 39),
		byte(uint64(data[7]) >> 47),
		byte(uint64(data[7]) >> 55),
	}
}

func unpack8int64_64(data []byte) (a [8]int64) {
	_ = data[63]
	a[0] = int64(uint64((data[0]>>0)&255)<<0 | uint64((data[1]>>0)&255)<<8 | uint64((data[2]>>0)&255)<<16 | uint64((data[3]>>0)&255)<<24 | uint64((data[4]>>0)&255)<<32 | uint64((data[5]>>0)&255)<<40 | uint64((data[6]>>0)&255)<<48 | uint64((data[7]>>0)&255)<<56)
	a[1] = int64(uint64((data[8]>>0)&255)<<0 | uint64((data[9]>>0)&255)<<8 | uint64((data[10]>>0)&255)<<16 | uint64((data[11]>>0)&255)<<24 | uint64((data[12]>>0)&255)<<32 | uint64((data[13]>>0)&255)<<40 | uint64((data[14]>>0)&255)<<48 | uint64((data[15]>>0)&255)<<56)
	a[2] = int64(uint64((data[16]>>0)&255)<<0 | uint64((data[17]>>0)&255)<<8 | uint64((data[18]>>0)&255)<<16 | uint64((data[19]>>0)&255)<<24 | uint64((data[20]>>0)&255)<<32 | uint64((data[21]>>0)&255)<<40 | uint64((data[22]>>0)&255)<<48 | uint64((data[23]>>0)&255)<<56)
	a[3] = int64(uint64((data[24]>>0)&255)<<0 | uint64((data[25]>>0)&255)<<8 | uint64((data[26]>>0)&255)<<16 | uint64((data[27]>>0)&255)<<24 | uint64((data[28]>>0)&255)<<32 | uint64((data[29]>>0)&255)<<40 | uint64((data[30]>>0)&255)<<48 | uint64((data[31]>>0)&255)<<56)
	a[4] = int64(uint64((data[32]>>0)&255)<<0 | uint64((data[33]>>0)&255)<<8 | uint64((data[34]>>0)&255)<<16 | uint64((data[35]>>0)&255)<<24 | uint64((data[36]>>0)&255)<<32 | uint64((data[37]>>0)&255)<<40 | uint64((data[38]>>0)&255)<<48 | uint64((data[39]>>0)&255)<<56)
	a[5] = int64(uint64((data[40]>>0)&255)<<0 | uint64((data[41]>>0)&255)<<8 | uint64((data[42]>>0)&255)<<16 | uint64((data[43]>>0)&255)<<24 | uint64((data[44]>>0)&255)<<32 | uint64((data[45]>>0)&255)<<40 | uint64((data[46]>>0)&255)<<48 | uint64((data[47]>>0)&255)<<56)
	a[6] = int64(uint64((data[48]>>0)&255)<<0 | uint64((data[49]>>0)&255)<<8 | uint64((data[50]>>0)&255)<<16 | uint64((data[51]>>0)&255)<<24 | uint64((data[52]>>0)&255)<<32 | uint64((data[53]>>0)&255)<<40 | uint64((data[54]>>0)&255)<<48 | uint64((data[55]>>0)&255)<<56)
	a[7] = int64(uint64((data[56]>>0)&255)<<0 | uint64((data[57]>>0)&255)<<8 | uint64((data[58]>>0)&255)<<16 | uint64((data[59]>>0)&255)<<24 | uint64((data[60]>>0)&255)<<32 | uint64((data[61]>>0)&255)<<40 | uint64((data[62]>>0)&255)<<48 | uint64((data[63]>>0)&255)<<56)
	return
}

func pack8int64_64(data [8]int64) []byte {
	return []byte{
		byte(uint64(data[0]) << 0),
		byte(uint64(data[0]) >> 8),
		byte(uint64(data[0]) >> 16),
		byte(uint64(data[0]) >> 24),
		byte(uint64(data[0]) >> 32),
		byte(uint64(data[0]) >> 40),
		byte(uint64(data[0]) >> 48),
		byte(uint64(data[0]) >> 56),
		byte(uint64(data[1]) << 0),
		byte(uint64(data[1]) >> 8),
		byte(uint64(data[1]) >> 16),
		byte(uint64(data[1]) >> 24),
		byte(uint64(data[1]) >> 32),
		byte(uint64(data[1]) >> 40),
		byte(uint64(data[1]) >> 48),
		byte(uint64(data[1]) >> 56),
		byte(uint64(data[2]) << 0),
		byte(uint64(data[2]) >> 8),
		byte(uint64(data[2]) >> 16),
		byte(uint64(data[2]) >> 24),
		byte(uint64(data[2]) >> 32),
		byte(uint64(data[2]) >> 40),
		byte(uint64(data[2]) >> 48),
		byte(uint64(data[2]) >> 56),
		byte(uint64(data[3]) << 0),
		byte(uint64(data[3]) >> 8),
		byte(uint64(data[3]) >> 16),
		byte(uint64(data[3]) >> 24),
		byte(uint64(data[3]) >> 32),
		byte(uint64(data[3]) >> 40),
		byte(uint64(data[3]) >> 48),
		byte(uint64(data[3]) >> 56),
		byte(uint64(data[4]) << 0),
		byte(uint64(data[4]) >> 8),
		byte(uint64(data[4]) >> 16),
		byte(uint64(data[4]) >> 24),
		byte(uint64(data[4]) >> 32),
		byte(uint64(data[4]) >> 40),
		byte(uint64(data[4]) >> 48),
		byte(uint64(data[4]) >> 56),
		byte(uint64(data[5]) << 0),
		byte(uint64(data[5]) >> 8),
		byte(uint64(data[5]) >> 16),
		byte(uint64(data[5]) >> 24),
		byte(uint64(data[5]) >> 32),
		byte(uint64(data[5]) >> 40),
		byte(uint64(data[5]) >> 48),
		byte(uint64(data[5]) >> 56),
		byte(uint64(data[6]) << 0),
		byte(uint64(data[6]) >> 8),
		byte(uint64(data[6]) >> 16),
		byte(uint64(data[6]) >> 24),
		byte(uint64(data[6]) >> 32),
		byte(uint64(data[6]) >> 40),
		byte(uint64(data[6]) >> 48),
		byte(uint64(data[6]) >> 56),
		byte(uint64(data[7]) << 0),
		byte(uint64(data[7]) >> 8),
		byte(uint64(data[7]) >> 16),
		byte(uint64(data[7]) >> 24),
		byte(uint64(data[7]) >> 32),
		byte(uint64(data[7]) >> 40),
		byte(uint64(data[7]) >> 48),
		byte(uint64(data[7]) >> 56),
	}
}
